/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBankAccountQueryDto.h
 *
 * 
 */

#ifndef OAIBankAccountQueryDto_H
#define OAIBankAccountQueryDto_H

#include <QJsonObject>

#include <QByteArray>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBankAccountQueryDto : public OAIObject {
public:
    OAIBankAccountQueryDto();
    OAIBankAccountQueryDto(QString json);
    ~OAIBankAccountQueryDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcCode() const;
    void setAcCode(const QString &ac_code);
    bool is_ac_code_Set() const;
    bool is_ac_code_Valid() const;

    QString getAccountName() const;
    void setAccountName(const QString &account_name);
    bool is_account_name_Set() const;
    bool is_account_name_Valid() const;

    QString getAccountNumber() const;
    void setAccountNumber(const QString &account_number);
    bool is_account_number_Set() const;
    bool is_account_number_Valid() const;

    QList<QString> getAddress() const;
    void setAddress(const QList<QString> &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    qint32 getBankFeedSource() const;
    void setBankFeedSource(const qint32 &bank_feed_source);
    bool is_bank_feed_source_Set() const;
    bool is_bank_feed_source_Valid() const;

    QString getBusinessIdentifierCodes() const;
    void setBusinessIdentifierCodes(const QString &business_identifier_codes);
    bool is_business_identifier_codes_Set() const;
    bool is_business_identifier_codes_Valid() const;

    qint64 getCategoryId() const;
    void setCategoryId(const qint64 &category_id);
    bool is_category_id_Set() const;
    bool is_category_id_Valid() const;

    QString getCreditorScheme() const;
    void setCreditorScheme(const QString &creditor_scheme);
    bool is_creditor_scheme_Set() const;
    bool is_creditor_scheme_Valid() const;

    QString getDetails() const;
    void setDetails(const QString &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInternationalBankAccountNumber() const;
    void setInternationalBankAccountNumber(const QString &international_bank_account_number);
    bool is_international_bank_account_number_Set() const;
    bool is_international_bank_account_number_Valid() const;

    bool isIsDefaultBank() const;
    void setIsDefaultBank(const bool &is_default_bank);
    bool is_is_default_bank_Set() const;
    bool is_is_default_bank_Valid() const;

    QString getLastChq() const;
    void setLastChq(const QString &last_chq);
    bool is_last_chq_Set() const;
    bool is_last_chq_Valid() const;

    QString getNominalAcCode() const;
    void setNominalAcCode(const QString &nominal_ac_code);
    bool is_nominal_ac_code_Set() const;
    bool is_nominal_ac_code_Valid() const;

    QString getSortCode() const;
    void setSortCode(const QString &sort_code);
    bool is_sort_code_Set() const;
    bool is_sort_code_Valid() const;

    QByteArray getTimestamp() const;
    void setTimestamp(const QByteArray &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ac_code;
    bool m_ac_code_isSet;
    bool m_ac_code_isValid;

    QString m_account_name;
    bool m_account_name_isSet;
    bool m_account_name_isValid;

    QString m_account_number;
    bool m_account_number_isSet;
    bool m_account_number_isValid;

    QList<QString> m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    qint32 m_bank_feed_source;
    bool m_bank_feed_source_isSet;
    bool m_bank_feed_source_isValid;

    QString m_business_identifier_codes;
    bool m_business_identifier_codes_isSet;
    bool m_business_identifier_codes_isValid;

    qint64 m_category_id;
    bool m_category_id_isSet;
    bool m_category_id_isValid;

    QString m_creditor_scheme;
    bool m_creditor_scheme_isSet;
    bool m_creditor_scheme_isValid;

    QString m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_international_bank_account_number;
    bool m_international_bank_account_number_isSet;
    bool m_international_bank_account_number_isValid;

    bool m_is_default_bank;
    bool m_is_default_bank_isSet;
    bool m_is_default_bank_isValid;

    QString m_last_chq;
    bool m_last_chq_isSet;
    bool m_last_chq_isValid;

    QString m_nominal_ac_code;
    bool m_nominal_ac_code_isSet;
    bool m_nominal_ac_code_isValid;

    QString m_sort_code;
    bool m_sort_code_isSet;
    bool m_sort_code_isValid;

    QByteArray m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBankAccountQueryDto)

#endif // OAIBankAccountQueryDto_H
