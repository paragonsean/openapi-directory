/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountTranDto.h
 *
 * 
 */

#ifndef OAIAccountTranDto_H
#define OAIAccountTranDto_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccountTranDto : public OAIObject {
public:
    OAIAccountTranDto();
    OAIAccountTranDto(QString json);
    ~OAIAccountTranDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBookTranId() const;
    void setBookTranId(const qint64 &book_tran_id);
    bool is_book_tran_id_Set() const;
    bool is_book_tran_id_Valid() const;

    qint64 getBookTranTypeId() const;
    void setBookTranTypeId(const qint64 &book_tran_type_id);
    bool is_book_tran_type_id_Set() const;
    bool is_book_tran_type_id_Valid() const;

    QString getBookTransactionReference() const;
    void setBookTransactionReference(const QString &book_transaction_reference);
    bool is_book_transaction_reference_Set() const;
    bool is_book_transaction_reference_Valid() const;

    QString getBookTypeDesc() const;
    void setBookTypeDesc(const QString &book_type_desc);
    bool is_book_type_desc_Set() const;
    bool is_book_type_desc_Valid() const;

    double getCredit() const;
    void setCredit(const double &credit);
    bool is_credit_Set() const;
    bool is_credit_Valid() const;

    double getDebit() const;
    void setDebit(const double &debit);
    bool is_debit_Set() const;
    bool is_debit_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDateTime getProcDate() const;
    void setProcDate(const QDateTime &proc_date);
    bool is_proc_date_Set() const;
    bool is_proc_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_book_tran_id;
    bool m_book_tran_id_isSet;
    bool m_book_tran_id_isValid;

    qint64 m_book_tran_type_id;
    bool m_book_tran_type_id_isSet;
    bool m_book_tran_type_id_isValid;

    QString m_book_transaction_reference;
    bool m_book_transaction_reference_isSet;
    bool m_book_transaction_reference_isValid;

    QString m_book_type_desc;
    bool m_book_type_desc_isSet;
    bool m_book_type_desc_isValid;

    double m_credit;
    bool m_credit_isSet;
    bool m_credit_isValid;

    double m_debit;
    bool m_debit_isSet;
    bool m_debit_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDateTime m_proc_date;
    bool m_proc_date_isSet;
    bool m_proc_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountTranDto)

#endif // OAIAccountTranDto_H
