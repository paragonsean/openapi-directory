/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyFinancialYearViewModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyFinancialYearViewModel::OAICompanyFinancialYearViewModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyFinancialYearViewModel::OAICompanyFinancialYearViewModel() {
    this->initializeModel();
}

OAICompanyFinancialYearViewModel::~OAICompanyFinancialYearViewModel() {}

void OAICompanyFinancialYearViewModel::initializeModel() {

    m_first_month_isSet = false;
    m_first_month_isValid = false;

    m_start_month_isSet = false;
    m_start_month_isValid = false;

    m_start_year_isSet = false;
    m_start_year_isValid = false;
}

void OAICompanyFinancialYearViewModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyFinancialYearViewModel::fromJsonObject(QJsonObject json) {

    m_first_month_isValid = ::OpenAPI::fromJsonValue(m_first_month, json[QString("firstMonth")]);
    m_first_month_isSet = !json[QString("firstMonth")].isNull() && m_first_month_isValid;

    m_start_month_isValid = ::OpenAPI::fromJsonValue(m_start_month, json[QString("startMonth")]);
    m_start_month_isSet = !json[QString("startMonth")].isNull() && m_start_month_isValid;

    m_start_year_isValid = ::OpenAPI::fromJsonValue(m_start_year, json[QString("startYear")]);
    m_start_year_isSet = !json[QString("startYear")].isNull() && m_start_year_isValid;
}

QString OAICompanyFinancialYearViewModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyFinancialYearViewModel::asJsonObject() const {
    QJsonObject obj;
    if (m_first_month_isSet) {
        obj.insert(QString("firstMonth"), ::OpenAPI::toJsonValue(m_first_month));
    }
    if (m_start_month_isSet) {
        obj.insert(QString("startMonth"), ::OpenAPI::toJsonValue(m_start_month));
    }
    if (m_start_year_isSet) {
        obj.insert(QString("startYear"), ::OpenAPI::toJsonValue(m_start_year));
    }
    return obj;
}

qint32 OAICompanyFinancialYearViewModel::getFirstMonth() const {
    return m_first_month;
}
void OAICompanyFinancialYearViewModel::setFirstMonth(const qint32 &first_month) {
    m_first_month = first_month;
    m_first_month_isSet = true;
}

bool OAICompanyFinancialYearViewModel::is_first_month_Set() const{
    return m_first_month_isSet;
}

bool OAICompanyFinancialYearViewModel::is_first_month_Valid() const{
    return m_first_month_isValid;
}

qint32 OAICompanyFinancialYearViewModel::getStartMonth() const {
    return m_start_month;
}
void OAICompanyFinancialYearViewModel::setStartMonth(const qint32 &start_month) {
    m_start_month = start_month;
    m_start_month_isSet = true;
}

bool OAICompanyFinancialYearViewModel::is_start_month_Set() const{
    return m_start_month_isSet;
}

bool OAICompanyFinancialYearViewModel::is_start_month_Valid() const{
    return m_start_month_isValid;
}

qint32 OAICompanyFinancialYearViewModel::getStartYear() const {
    return m_start_year;
}
void OAICompanyFinancialYearViewModel::setStartYear(const qint32 &start_year) {
    m_start_year = start_year;
    m_start_year_isSet = true;
}

bool OAICompanyFinancialYearViewModel::is_start_year_Set() const{
    return m_start_year_isSet;
}

bool OAICompanyFinancialYearViewModel::is_start_year_Valid() const{
    return m_start_year_isValid;
}

bool OAICompanyFinancialYearViewModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_year_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyFinancialYearViewModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
