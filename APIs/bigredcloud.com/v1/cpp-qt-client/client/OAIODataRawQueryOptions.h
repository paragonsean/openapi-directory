/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIODataRawQueryOptions.h
 *
 * 
 */

#ifndef OAIODataRawQueryOptions_H
#define OAIODataRawQueryOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIODataRawQueryOptions : public OAIObject {
public:
    OAIODataRawQueryOptions();
    OAIODataRawQueryOptions(QString json);
    ~OAIODataRawQueryOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getExpand() const;
    void setExpand(const QString &expand);
    bool is_expand_Set() const;
    bool is_expand_Valid() const;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getInlineCount() const;
    void setInlineCount(const QString &inline_count);
    bool is_inline_count_Set() const;
    bool is_inline_count_Valid() const;

    QString getOrderBy() const;
    void setOrderBy(const QString &order_by);
    bool is_order_by_Set() const;
    bool is_order_by_Valid() const;

    QString getSelect() const;
    void setSelect(const QString &select);
    bool is_select_Set() const;
    bool is_select_Valid() const;

    QString getSkip() const;
    void setSkip(const QString &skip);
    bool is_skip_Set() const;
    bool is_skip_Valid() const;

    QString getSkipToken() const;
    void setSkipToken(const QString &skip_token);
    bool is_skip_token_Set() const;
    bool is_skip_token_Valid() const;

    QString getTop() const;
    void setTop(const QString &top);
    bool is_top_Set() const;
    bool is_top_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_expand;
    bool m_expand_isSet;
    bool m_expand_isValid;

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_inline_count;
    bool m_inline_count_isSet;
    bool m_inline_count_isValid;

    QString m_order_by;
    bool m_order_by_isSet;
    bool m_order_by_isValid;

    QString m_select;
    bool m_select_isSet;
    bool m_select_isValid;

    QString m_skip;
    bool m_skip_isSet;
    bool m_skip_isValid;

    QString m_skip_token;
    bool m_skip_token_isSet;
    bool m_skip_token_isValid;

    QString m_top;
    bool m_top_isSet;
    bool m_top_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIODataRawQueryOptions)

#endif // OAIODataRawQueryOptions_H
