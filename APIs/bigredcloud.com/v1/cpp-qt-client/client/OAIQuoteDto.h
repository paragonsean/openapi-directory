/**
 * Big Red Cloud API
 *   <div style='line-height: 30px;'>      <strong>Welcome to the Big Red Cloud API</strong><br/>      This API enables programmatic access to Big Red Cloud data.<br/>      We have used Swagger to auto generate the API documentation on this page, and it also enables direct interaction with the API in this page. <br/>      To get started, you will require an API Key - check out our guide at <a target='_blank' href='https://www.bigredcloud.com/support/generating-api-key-guide/'>https://www.bigredcloud.com/support/generating-api-key-guide/</a> for information on how to get one. <br/>      Use the  'Enter API Key' button below to enter your API key and start interacting with your Big Red Cloud data right on this page. <br/>      The API key will be stored in your browsers local storage for convenience, but you will be able to delete it at any time if you wish. <br/>      For additional information on the API, check out our support article at <a target='_blank' href='https://www.bigredcloud.com/support/api/'>https://www.bigredcloud.com/support/api/</a><br/>  </div>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuoteDto.h
 *
 * 
 */

#ifndef OAIQuoteDto_H
#define OAIQuoteDto_H

#include <QJsonObject>

#include "OAIAcudfValueDto.h"
#include "OAIQuoteProductTransDto.h"
#include <QByteArray>
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAcudfValueDto;
class OAIQuoteProductTransDto;

class OAIQuoteDto : public OAIObject {
public:
    OAIQuoteDto();
    OAIQuoteDto(QString json);
    ~OAIQuoteDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcCode() const;
    void setAcCode(const QString &ac_code);
    bool is_ac_code_Set() const;
    bool is_ac_code_Valid() const;

    QDateTime getClosedDate() const;
    void setClosedDate(const QDateTime &closed_date);
    bool is_closed_date_Set() const;
    bool is_closed_date_Valid() const;

    QString getComments() const;
    void setComments(const QString &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    qint64 getCompanyId() const;
    void setCompanyId(const qint64 &company_id);
    bool is_company_id_Set() const;
    bool is_company_id_Valid() const;

    QList<OAIAcudfValueDto> getCustomFields() const;
    void setCustomFields(const QList<OAIAcudfValueDto> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    qint64 getCustomerOwnerId() const;
    void setCustomerOwnerId(const qint64 &customer_owner_id);
    bool is_customer_owner_id_Set() const;
    bool is_customer_owner_id_Valid() const;

    QString getCustomerOwnerName() const;
    void setCustomerOwnerName(const QString &customer_owner_name);
    bool is_customer_owner_name_Set() const;
    bool is_customer_owner_name_Valid() const;

    QString getDdNumber() const;
    void setDdNumber(const QString &dd_number);
    bool is_dd_number_Set() const;
    bool is_dd_number_Valid() const;

    QString getDeliveryList() const;
    void setDeliveryList(const QString &delivery_list);
    bool is_delivery_list_Set() const;
    bool is_delivery_list_Valid() const;

    QList<QString> getDeliveryTo() const;
    void setDeliveryTo(const QList<QString> &delivery_to);
    bool is_delivery_to_Set() const;
    bool is_delivery_to_Valid() const;

    QDateTime getEntryDate() const;
    void setEntryDate(const QDateTime &entry_date);
    bool is_entry_date_Set() const;
    bool is_entry_date_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getLayoutType() const;
    void setLayoutType(const qint32 &layout_type);
    bool is_layout_type_Set() const;
    bool is_layout_type_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getPoNumber() const;
    void setPoNumber(const QString &po_number);
    bool is_po_number_Set() const;
    bool is_po_number_Valid() const;

    QDateTime getProcDate() const;
    void setProcDate(const QDateTime &proc_date);
    bool is_proc_date_Set() const;
    bool is_proc_date_Valid() const;

    QList<OAIQuoteProductTransDto> getProductTrans() const;
    void setProductTrans(const QList<OAIQuoteProductTransDto> &product_trans);
    bool is_product_trans_Set() const;
    bool is_product_trans_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    qint64 getSaleInvoiceId() const;
    void setSaleInvoiceId(const qint64 &sale_invoice_id);
    bool is_sale_invoice_id_Set() const;
    bool is_sale_invoice_id_Valid() const;

    QString getSaleRepCode() const;
    void setSaleRepCode(const QString &sale_rep_code);
    bool is_sale_rep_code_Set() const;
    bool is_sale_rep_code_Valid() const;

    qint64 getSaleRepId() const;
    void setSaleRepId(const qint64 &sale_rep_id);
    bool is_sale_rep_id_Set() const;
    bool is_sale_rep_id_Valid() const;

    QByteArray getTimeStamp() const;
    void setTimeStamp(const QByteArray &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    double getTotal() const;
    void setTotal(const double &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    double getTotalNet() const;
    void setTotalNet(const double &total_net);
    bool is_total_net_Set() const;
    bool is_total_net_Valid() const;

    double getTotalVat() const;
    void setTotalVat(const double &total_vat);
    bool is_total_vat_Set() const;
    bool is_total_vat_Valid() const;

    qint64 getVatTypeId() const;
    void setVatTypeId(const qint64 &vat_type_id);
    bool is_vat_type_id_Set() const;
    bool is_vat_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ac_code;
    bool m_ac_code_isSet;
    bool m_ac_code_isValid;

    QDateTime m_closed_date;
    bool m_closed_date_isSet;
    bool m_closed_date_isValid;

    QString m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    qint64 m_company_id;
    bool m_company_id_isSet;
    bool m_company_id_isValid;

    QList<OAIAcudfValueDto> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    qint64 m_customer_owner_id;
    bool m_customer_owner_id_isSet;
    bool m_customer_owner_id_isValid;

    QString m_customer_owner_name;
    bool m_customer_owner_name_isSet;
    bool m_customer_owner_name_isValid;

    QString m_dd_number;
    bool m_dd_number_isSet;
    bool m_dd_number_isValid;

    QString m_delivery_list;
    bool m_delivery_list_isSet;
    bool m_delivery_list_isValid;

    QList<QString> m_delivery_to;
    bool m_delivery_to_isSet;
    bool m_delivery_to_isValid;

    QDateTime m_entry_date;
    bool m_entry_date_isSet;
    bool m_entry_date_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_layout_type;
    bool m_layout_type_isSet;
    bool m_layout_type_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_po_number;
    bool m_po_number_isSet;
    bool m_po_number_isValid;

    QDateTime m_proc_date;
    bool m_proc_date_isSet;
    bool m_proc_date_isValid;

    QList<OAIQuoteProductTransDto> m_product_trans;
    bool m_product_trans_isSet;
    bool m_product_trans_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    qint64 m_sale_invoice_id;
    bool m_sale_invoice_id_isSet;
    bool m_sale_invoice_id_isValid;

    QString m_sale_rep_code;
    bool m_sale_rep_code_isSet;
    bool m_sale_rep_code_isValid;

    qint64 m_sale_rep_id;
    bool m_sale_rep_id_isSet;
    bool m_sale_rep_id_isValid;

    QByteArray m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;

    double m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    double m_total_net;
    bool m_total_net_isSet;
    bool m_total_net_isValid;

    double m_total_vat;
    bool m_total_vat_isSet;
    bool m_total_vat_isValid;

    qint64 m_vat_type_id;
    bool m_vat_type_id_isSet;
    bool m_vat_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuoteDto)

#endif // OAIQuoteDto_H
