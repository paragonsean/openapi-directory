# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.i_edm_model import IEdmModel
from openapi_server.models.i_edm_type import IEdmType
from openapi_server import util


class ODataQueryContext(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, element_clr_type: str=None, element_type: IEdmType=None, model: IEdmModel=None):
        """ODataQueryContext - a model defined in OpenAPI

        :param element_clr_type: The element_clr_type of this ODataQueryContext.
        :param element_type: The element_type of this ODataQueryContext.
        :param model: The model of this ODataQueryContext.
        """
        self.openapi_types = {
            'element_clr_type': str,
            'element_type': IEdmType,
            'model': IEdmModel
        }

        self.attribute_map = {
            'element_clr_type': 'ElementClrType',
            'element_type': 'ElementType',
            'model': 'Model'
        }

        self._element_clr_type = element_clr_type
        self._element_type = element_type
        self._model = model

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ODataQueryContext':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ODataQueryContext of this ODataQueryContext.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def element_clr_type(self):
        """Gets the element_clr_type of this ODataQueryContext.


        :return: The element_clr_type of this ODataQueryContext.
        :rtype: str
        """
        return self._element_clr_type

    @element_clr_type.setter
    def element_clr_type(self, element_clr_type):
        """Sets the element_clr_type of this ODataQueryContext.


        :param element_clr_type: The element_clr_type of this ODataQueryContext.
        :type element_clr_type: str
        """

        self._element_clr_type = element_clr_type

    @property
    def element_type(self):
        """Gets the element_type of this ODataQueryContext.


        :return: The element_type of this ODataQueryContext.
        :rtype: IEdmType
        """
        return self._element_type

    @element_type.setter
    def element_type(self, element_type):
        """Sets the element_type of this ODataQueryContext.


        :param element_type: The element_type of this ODataQueryContext.
        :type element_type: IEdmType
        """

        self._element_type = element_type

    @property
    def model(self):
        """Gets the model of this ODataQueryContext.


        :return: The model of this ODataQueryContext.
        :rtype: IEdmModel
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this ODataQueryContext.


        :param model: The model of this ODataQueryContext.
        :type model: IEdmModel
        """

        self._model = model
