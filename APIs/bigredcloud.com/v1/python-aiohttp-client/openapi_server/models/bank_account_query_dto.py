# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BankAccountQueryDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ac_code: str=None, account_name: str=None, account_number: str=None, address: List[str]=None, bank_feed_source: int=None, business_identifier_codes: str=None, category_id: int=None, creditor_scheme: str=None, details: str=None, id: int=None, international_bank_account_number: str=None, is_default_bank: bool=None, last_chq: str=None, nominal_ac_code: str=None, sort_code: str=None, timestamp: str=None):
        """BankAccountQueryDto - a model defined in OpenAPI

        :param ac_code: The ac_code of this BankAccountQueryDto.
        :param account_name: The account_name of this BankAccountQueryDto.
        :param account_number: The account_number of this BankAccountQueryDto.
        :param address: The address of this BankAccountQueryDto.
        :param bank_feed_source: The bank_feed_source of this BankAccountQueryDto.
        :param business_identifier_codes: The business_identifier_codes of this BankAccountQueryDto.
        :param category_id: The category_id of this BankAccountQueryDto.
        :param creditor_scheme: The creditor_scheme of this BankAccountQueryDto.
        :param details: The details of this BankAccountQueryDto.
        :param id: The id of this BankAccountQueryDto.
        :param international_bank_account_number: The international_bank_account_number of this BankAccountQueryDto.
        :param is_default_bank: The is_default_bank of this BankAccountQueryDto.
        :param last_chq: The last_chq of this BankAccountQueryDto.
        :param nominal_ac_code: The nominal_ac_code of this BankAccountQueryDto.
        :param sort_code: The sort_code of this BankAccountQueryDto.
        :param timestamp: The timestamp of this BankAccountQueryDto.
        """
        self.openapi_types = {
            'ac_code': str,
            'account_name': str,
            'account_number': str,
            'address': List[str],
            'bank_feed_source': int,
            'business_identifier_codes': str,
            'category_id': int,
            'creditor_scheme': str,
            'details': str,
            'id': int,
            'international_bank_account_number': str,
            'is_default_bank': bool,
            'last_chq': str,
            'nominal_ac_code': str,
            'sort_code': str,
            'timestamp': str
        }

        self.attribute_map = {
            'ac_code': 'acCode',
            'account_name': 'accountName',
            'account_number': 'accountNumber',
            'address': 'address',
            'bank_feed_source': 'bankFeedSource',
            'business_identifier_codes': 'businessIdentifierCodes',
            'category_id': 'categoryId',
            'creditor_scheme': 'creditorScheme',
            'details': 'details',
            'id': 'id',
            'international_bank_account_number': 'internationalBankAccountNumber',
            'is_default_bank': 'isDefaultBank',
            'last_chq': 'lastChq',
            'nominal_ac_code': 'nominalAcCode',
            'sort_code': 'sortCode',
            'timestamp': 'timestamp'
        }

        self._ac_code = ac_code
        self._account_name = account_name
        self._account_number = account_number
        self._address = address
        self._bank_feed_source = bank_feed_source
        self._business_identifier_codes = business_identifier_codes
        self._category_id = category_id
        self._creditor_scheme = creditor_scheme
        self._details = details
        self._id = id
        self._international_bank_account_number = international_bank_account_number
        self._is_default_bank = is_default_bank
        self._last_chq = last_chq
        self._nominal_ac_code = nominal_ac_code
        self._sort_code = sort_code
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BankAccountQueryDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BankAccountQueryDto of this BankAccountQueryDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ac_code(self):
        """Gets the ac_code of this BankAccountQueryDto.


        :return: The ac_code of this BankAccountQueryDto.
        :rtype: str
        """
        return self._ac_code

    @ac_code.setter
    def ac_code(self, ac_code):
        """Sets the ac_code of this BankAccountQueryDto.


        :param ac_code: The ac_code of this BankAccountQueryDto.
        :type ac_code: str
        """

        self._ac_code = ac_code

    @property
    def account_name(self):
        """Gets the account_name of this BankAccountQueryDto.


        :return: The account_name of this BankAccountQueryDto.
        :rtype: str
        """
        return self._account_name

    @account_name.setter
    def account_name(self, account_name):
        """Sets the account_name of this BankAccountQueryDto.


        :param account_name: The account_name of this BankAccountQueryDto.
        :type account_name: str
        """

        self._account_name = account_name

    @property
    def account_number(self):
        """Gets the account_number of this BankAccountQueryDto.


        :return: The account_number of this BankAccountQueryDto.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this BankAccountQueryDto.


        :param account_number: The account_number of this BankAccountQueryDto.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def address(self):
        """Gets the address of this BankAccountQueryDto.


        :return: The address of this BankAccountQueryDto.
        :rtype: List[str]
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this BankAccountQueryDto.


        :param address: The address of this BankAccountQueryDto.
        :type address: List[str]
        """

        self._address = address

    @property
    def bank_feed_source(self):
        """Gets the bank_feed_source of this BankAccountQueryDto.


        :return: The bank_feed_source of this BankAccountQueryDto.
        :rtype: int
        """
        return self._bank_feed_source

    @bank_feed_source.setter
    def bank_feed_source(self, bank_feed_source):
        """Sets the bank_feed_source of this BankAccountQueryDto.


        :param bank_feed_source: The bank_feed_source of this BankAccountQueryDto.
        :type bank_feed_source: int
        """

        self._bank_feed_source = bank_feed_source

    @property
    def business_identifier_codes(self):
        """Gets the business_identifier_codes of this BankAccountQueryDto.


        :return: The business_identifier_codes of this BankAccountQueryDto.
        :rtype: str
        """
        return self._business_identifier_codes

    @business_identifier_codes.setter
    def business_identifier_codes(self, business_identifier_codes):
        """Sets the business_identifier_codes of this BankAccountQueryDto.


        :param business_identifier_codes: The business_identifier_codes of this BankAccountQueryDto.
        :type business_identifier_codes: str
        """

        self._business_identifier_codes = business_identifier_codes

    @property
    def category_id(self):
        """Gets the category_id of this BankAccountQueryDto.


        :return: The category_id of this BankAccountQueryDto.
        :rtype: int
        """
        return self._category_id

    @category_id.setter
    def category_id(self, category_id):
        """Sets the category_id of this BankAccountQueryDto.


        :param category_id: The category_id of this BankAccountQueryDto.
        :type category_id: int
        """

        self._category_id = category_id

    @property
    def creditor_scheme(self):
        """Gets the creditor_scheme of this BankAccountQueryDto.


        :return: The creditor_scheme of this BankAccountQueryDto.
        :rtype: str
        """
        return self._creditor_scheme

    @creditor_scheme.setter
    def creditor_scheme(self, creditor_scheme):
        """Sets the creditor_scheme of this BankAccountQueryDto.


        :param creditor_scheme: The creditor_scheme of this BankAccountQueryDto.
        :type creditor_scheme: str
        """

        self._creditor_scheme = creditor_scheme

    @property
    def details(self):
        """Gets the details of this BankAccountQueryDto.


        :return: The details of this BankAccountQueryDto.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this BankAccountQueryDto.


        :param details: The details of this BankAccountQueryDto.
        :type details: str
        """

        self._details = details

    @property
    def id(self):
        """Gets the id of this BankAccountQueryDto.


        :return: The id of this BankAccountQueryDto.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BankAccountQueryDto.


        :param id: The id of this BankAccountQueryDto.
        :type id: int
        """

        self._id = id

    @property
    def international_bank_account_number(self):
        """Gets the international_bank_account_number of this BankAccountQueryDto.


        :return: The international_bank_account_number of this BankAccountQueryDto.
        :rtype: str
        """
        return self._international_bank_account_number

    @international_bank_account_number.setter
    def international_bank_account_number(self, international_bank_account_number):
        """Sets the international_bank_account_number of this BankAccountQueryDto.


        :param international_bank_account_number: The international_bank_account_number of this BankAccountQueryDto.
        :type international_bank_account_number: str
        """

        self._international_bank_account_number = international_bank_account_number

    @property
    def is_default_bank(self):
        """Gets the is_default_bank of this BankAccountQueryDto.


        :return: The is_default_bank of this BankAccountQueryDto.
        :rtype: bool
        """
        return self._is_default_bank

    @is_default_bank.setter
    def is_default_bank(self, is_default_bank):
        """Sets the is_default_bank of this BankAccountQueryDto.


        :param is_default_bank: The is_default_bank of this BankAccountQueryDto.
        :type is_default_bank: bool
        """

        self._is_default_bank = is_default_bank

    @property
    def last_chq(self):
        """Gets the last_chq of this BankAccountQueryDto.


        :return: The last_chq of this BankAccountQueryDto.
        :rtype: str
        """
        return self._last_chq

    @last_chq.setter
    def last_chq(self, last_chq):
        """Sets the last_chq of this BankAccountQueryDto.


        :param last_chq: The last_chq of this BankAccountQueryDto.
        :type last_chq: str
        """

        self._last_chq = last_chq

    @property
    def nominal_ac_code(self):
        """Gets the nominal_ac_code of this BankAccountQueryDto.


        :return: The nominal_ac_code of this BankAccountQueryDto.
        :rtype: str
        """
        return self._nominal_ac_code

    @nominal_ac_code.setter
    def nominal_ac_code(self, nominal_ac_code):
        """Sets the nominal_ac_code of this BankAccountQueryDto.


        :param nominal_ac_code: The nominal_ac_code of this BankAccountQueryDto.
        :type nominal_ac_code: str
        """

        self._nominal_ac_code = nominal_ac_code

    @property
    def sort_code(self):
        """Gets the sort_code of this BankAccountQueryDto.


        :return: The sort_code of this BankAccountQueryDto.
        :rtype: str
        """
        return self._sort_code

    @sort_code.setter
    def sort_code(self, sort_code):
        """Sets the sort_code of this BankAccountQueryDto.


        :param sort_code: The sort_code of this BankAccountQueryDto.
        :type sort_code: str
        """

        self._sort_code = sort_code

    @property
    def timestamp(self):
        """Gets the timestamp of this BankAccountQueryDto.


        :return: The timestamp of this BankAccountQueryDto.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this BankAccountQueryDto.


        :param timestamp: The timestamp of this BankAccountQueryDto.
        :type timestamp: str
        """

        self._timestamp = timestamp
