# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VatEntryDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, id: int=None, percentage: float=None, vat_rate_id: int=None):
        """VatEntryDto - a model defined in OpenAPI

        :param amount: The amount of this VatEntryDto.
        :param id: The id of this VatEntryDto.
        :param percentage: The percentage of this VatEntryDto.
        :param vat_rate_id: The vat_rate_id of this VatEntryDto.
        """
        self.openapi_types = {
            'amount': float,
            'id': int,
            'percentage': float,
            'vat_rate_id': int
        }

        self.attribute_map = {
            'amount': 'amount',
            'id': 'id',
            'percentage': 'percentage',
            'vat_rate_id': 'vatRateId'
        }

        self._amount = amount
        self._id = id
        self._percentage = percentage
        self._vat_rate_id = vat_rate_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VatEntryDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VatEntryDto of this VatEntryDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this VatEntryDto.


        :return: The amount of this VatEntryDto.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this VatEntryDto.


        :param amount: The amount of this VatEntryDto.
        :type amount: float
        """

        self._amount = amount

    @property
    def id(self):
        """Gets the id of this VatEntryDto.


        :return: The id of this VatEntryDto.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VatEntryDto.


        :param id: The id of this VatEntryDto.
        :type id: int
        """

        self._id = id

    @property
    def percentage(self):
        """Gets the percentage of this VatEntryDto.


        :return: The percentage of this VatEntryDto.
        :rtype: float
        """
        return self._percentage

    @percentage.setter
    def percentage(self, percentage):
        """Sets the percentage of this VatEntryDto.


        :param percentage: The percentage of this VatEntryDto.
        :type percentage: float
        """

        self._percentage = percentage

    @property
    def vat_rate_id(self):
        """Gets the vat_rate_id of this VatEntryDto.


        :return: The vat_rate_id of this VatEntryDto.
        :rtype: int
        """
        return self._vat_rate_id

    @vat_rate_id.setter
    def vat_rate_id(self, vat_rate_id):
        """Sets the vat_rate_id of this VatEntryDto.


        :param vat_rate_id: The vat_rate_id of this VatEntryDto.
        :type vat_rate_id: int
        """

        self._vat_rate_id = vat_rate_id
