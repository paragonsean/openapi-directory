# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_financial_year_view_model import CompanyFinancialYearViewModel
from openapi_server.models.company_general_detais_view_model import CompanyGeneralDetaisViewModel
from openapi_server.models.company_option_view_model import CompanyOptionViewModel
from openapi_server.models.company_reference_setting_view_model import CompanyReferenceSettingViewModel
from openapi_server import util


class CompanySetupConfigViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, financial_year: CompanyFinancialYearViewModel=None, general_details: CompanyGeneralDetaisViewModel=None, options: CompanyOptionViewModel=None, reference_settings: CompanyReferenceSettingViewModel=None):
        """CompanySetupConfigViewModel - a model defined in OpenAPI

        :param financial_year: The financial_year of this CompanySetupConfigViewModel.
        :param general_details: The general_details of this CompanySetupConfigViewModel.
        :param options: The options of this CompanySetupConfigViewModel.
        :param reference_settings: The reference_settings of this CompanySetupConfigViewModel.
        """
        self.openapi_types = {
            'financial_year': CompanyFinancialYearViewModel,
            'general_details': CompanyGeneralDetaisViewModel,
            'options': CompanyOptionViewModel,
            'reference_settings': CompanyReferenceSettingViewModel
        }

        self.attribute_map = {
            'financial_year': 'financialYear',
            'general_details': 'generalDetails',
            'options': 'options',
            'reference_settings': 'referenceSettings'
        }

        self._financial_year = financial_year
        self._general_details = general_details
        self._options = options
        self._reference_settings = reference_settings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanySetupConfigViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanySetupConfigViewModel of this CompanySetupConfigViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def financial_year(self):
        """Gets the financial_year of this CompanySetupConfigViewModel.


        :return: The financial_year of this CompanySetupConfigViewModel.
        :rtype: CompanyFinancialYearViewModel
        """
        return self._financial_year

    @financial_year.setter
    def financial_year(self, financial_year):
        """Sets the financial_year of this CompanySetupConfigViewModel.


        :param financial_year: The financial_year of this CompanySetupConfigViewModel.
        :type financial_year: CompanyFinancialYearViewModel
        """

        self._financial_year = financial_year

    @property
    def general_details(self):
        """Gets the general_details of this CompanySetupConfigViewModel.


        :return: The general_details of this CompanySetupConfigViewModel.
        :rtype: CompanyGeneralDetaisViewModel
        """
        return self._general_details

    @general_details.setter
    def general_details(self, general_details):
        """Sets the general_details of this CompanySetupConfigViewModel.


        :param general_details: The general_details of this CompanySetupConfigViewModel.
        :type general_details: CompanyGeneralDetaisViewModel
        """

        self._general_details = general_details

    @property
    def options(self):
        """Gets the options of this CompanySetupConfigViewModel.


        :return: The options of this CompanySetupConfigViewModel.
        :rtype: CompanyOptionViewModel
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this CompanySetupConfigViewModel.


        :param options: The options of this CompanySetupConfigViewModel.
        :type options: CompanyOptionViewModel
        """

        self._options = options

    @property
    def reference_settings(self):
        """Gets the reference_settings of this CompanySetupConfigViewModel.


        :return: The reference_settings of this CompanySetupConfigViewModel.
        :rtype: CompanyReferenceSettingViewModel
        """
        return self._reference_settings

    @reference_settings.setter
    def reference_settings(self, reference_settings):
        """Sets the reference_settings of this CompanySetupConfigViewModel.


        :param reference_settings: The reference_settings of this CompanySetupConfigViewModel.
        :type reference_settings: CompanyReferenceSettingViewModel
        """

        self._reference_settings = reference_settings
