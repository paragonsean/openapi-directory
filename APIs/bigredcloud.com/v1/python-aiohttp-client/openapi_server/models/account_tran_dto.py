# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountTranDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, book_tran_id: int=None, book_tran_type_id: int=None, book_transaction_reference: str=None, book_type_desc: str=None, credit: float=None, debit: float=None, id: int=None, proc_date: datetime=None):
        """AccountTranDto - a model defined in OpenAPI

        :param book_tran_id: The book_tran_id of this AccountTranDto.
        :param book_tran_type_id: The book_tran_type_id of this AccountTranDto.
        :param book_transaction_reference: The book_transaction_reference of this AccountTranDto.
        :param book_type_desc: The book_type_desc of this AccountTranDto.
        :param credit: The credit of this AccountTranDto.
        :param debit: The debit of this AccountTranDto.
        :param id: The id of this AccountTranDto.
        :param proc_date: The proc_date of this AccountTranDto.
        """
        self.openapi_types = {
            'book_tran_id': int,
            'book_tran_type_id': int,
            'book_transaction_reference': str,
            'book_type_desc': str,
            'credit': float,
            'debit': float,
            'id': int,
            'proc_date': datetime
        }

        self.attribute_map = {
            'book_tran_id': 'bookTranId',
            'book_tran_type_id': 'bookTranTypeId',
            'book_transaction_reference': 'bookTransactionReference',
            'book_type_desc': 'bookTypeDesc',
            'credit': 'credit',
            'debit': 'debit',
            'id': 'id',
            'proc_date': 'procDate'
        }

        self._book_tran_id = book_tran_id
        self._book_tran_type_id = book_tran_type_id
        self._book_transaction_reference = book_transaction_reference
        self._book_type_desc = book_type_desc
        self._credit = credit
        self._debit = debit
        self._id = id
        self._proc_date = proc_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountTranDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountTranDto of this AccountTranDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def book_tran_id(self):
        """Gets the book_tran_id of this AccountTranDto.


        :return: The book_tran_id of this AccountTranDto.
        :rtype: int
        """
        return self._book_tran_id

    @book_tran_id.setter
    def book_tran_id(self, book_tran_id):
        """Sets the book_tran_id of this AccountTranDto.


        :param book_tran_id: The book_tran_id of this AccountTranDto.
        :type book_tran_id: int
        """

        self._book_tran_id = book_tran_id

    @property
    def book_tran_type_id(self):
        """Gets the book_tran_type_id of this AccountTranDto.


        :return: The book_tran_type_id of this AccountTranDto.
        :rtype: int
        """
        return self._book_tran_type_id

    @book_tran_type_id.setter
    def book_tran_type_id(self, book_tran_type_id):
        """Sets the book_tran_type_id of this AccountTranDto.


        :param book_tran_type_id: The book_tran_type_id of this AccountTranDto.
        :type book_tran_type_id: int
        """

        self._book_tran_type_id = book_tran_type_id

    @property
    def book_transaction_reference(self):
        """Gets the book_transaction_reference of this AccountTranDto.


        :return: The book_transaction_reference of this AccountTranDto.
        :rtype: str
        """
        return self._book_transaction_reference

    @book_transaction_reference.setter
    def book_transaction_reference(self, book_transaction_reference):
        """Sets the book_transaction_reference of this AccountTranDto.


        :param book_transaction_reference: The book_transaction_reference of this AccountTranDto.
        :type book_transaction_reference: str
        """

        self._book_transaction_reference = book_transaction_reference

    @property
    def book_type_desc(self):
        """Gets the book_type_desc of this AccountTranDto.


        :return: The book_type_desc of this AccountTranDto.
        :rtype: str
        """
        return self._book_type_desc

    @book_type_desc.setter
    def book_type_desc(self, book_type_desc):
        """Sets the book_type_desc of this AccountTranDto.


        :param book_type_desc: The book_type_desc of this AccountTranDto.
        :type book_type_desc: str
        """

        self._book_type_desc = book_type_desc

    @property
    def credit(self):
        """Gets the credit of this AccountTranDto.


        :return: The credit of this AccountTranDto.
        :rtype: float
        """
        return self._credit

    @credit.setter
    def credit(self, credit):
        """Sets the credit of this AccountTranDto.


        :param credit: The credit of this AccountTranDto.
        :type credit: float
        """

        self._credit = credit

    @property
    def debit(self):
        """Gets the debit of this AccountTranDto.


        :return: The debit of this AccountTranDto.
        :rtype: float
        """
        return self._debit

    @debit.setter
    def debit(self, debit):
        """Sets the debit of this AccountTranDto.


        :param debit: The debit of this AccountTranDto.
        :type debit: float
        """

        self._debit = debit

    @property
    def id(self):
        """Gets the id of this AccountTranDto.


        :return: The id of this AccountTranDto.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AccountTranDto.


        :param id: The id of this AccountTranDto.
        :type id: int
        """

        self._id = id

    @property
    def proc_date(self):
        """Gets the proc_date of this AccountTranDto.


        :return: The proc_date of this AccountTranDto.
        :rtype: datetime
        """
        return self._proc_date

    @proc_date.setter
    def proc_date(self, proc_date):
        """Sets the proc_date of this AccountTranDto.


        :param proc_date: The proc_date of this AccountTranDto.
        :type proc_date: datetime
        """

        self._proc_date = proc_date
