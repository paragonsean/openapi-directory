# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sales_invoice_credit_note_dto import SalesInvoiceCreditNoteDto
from openapi_server import util


class QuoteGeneratingInvoiceDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quote_id: int=None, sale_invoice: SalesInvoiceCreditNoteDto=None):
        """QuoteGeneratingInvoiceDto - a model defined in OpenAPI

        :param quote_id: The quote_id of this QuoteGeneratingInvoiceDto.
        :param sale_invoice: The sale_invoice of this QuoteGeneratingInvoiceDto.
        """
        self.openapi_types = {
            'quote_id': int,
            'sale_invoice': SalesInvoiceCreditNoteDto
        }

        self.attribute_map = {
            'quote_id': 'quoteId',
            'sale_invoice': 'saleInvoice'
        }

        self._quote_id = quote_id
        self._sale_invoice = sale_invoice

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteGeneratingInvoiceDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuoteGeneratingInvoiceDto of this QuoteGeneratingInvoiceDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quote_id(self):
        """Gets the quote_id of this QuoteGeneratingInvoiceDto.


        :return: The quote_id of this QuoteGeneratingInvoiceDto.
        :rtype: int
        """
        return self._quote_id

    @quote_id.setter
    def quote_id(self, quote_id):
        """Sets the quote_id of this QuoteGeneratingInvoiceDto.


        :param quote_id: The quote_id of this QuoteGeneratingInvoiceDto.
        :type quote_id: int
        """

        self._quote_id = quote_id

    @property
    def sale_invoice(self):
        """Gets the sale_invoice of this QuoteGeneratingInvoiceDto.


        :return: The sale_invoice of this QuoteGeneratingInvoiceDto.
        :rtype: SalesInvoiceCreditNoteDto
        """
        return self._sale_invoice

    @sale_invoice.setter
    def sale_invoice(self, sale_invoice):
        """Sets the sale_invoice of this QuoteGeneratingInvoiceDto.


        :param sale_invoice: The sale_invoice of this QuoteGeneratingInvoiceDto.
        :type sale_invoice: SalesInvoiceCreditNoteDto
        """

        self._sale_invoice = sale_invoice
