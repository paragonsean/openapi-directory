# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompanyGeneralDetaisViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, company_addresses: List[str]=None, company_name: str=None, currency_code: str=None, currency_description: str=None, currency_id: int=None, currentcy_symbol: str=None, emails: List[str]=None, faxes: List[str]=None, phones: List[str]=None, region_description: str=None, region_id: int=None, vat_reg: str=None):
        """CompanyGeneralDetaisViewModel - a model defined in OpenAPI

        :param company_addresses: The company_addresses of this CompanyGeneralDetaisViewModel.
        :param company_name: The company_name of this CompanyGeneralDetaisViewModel.
        :param currency_code: The currency_code of this CompanyGeneralDetaisViewModel.
        :param currency_description: The currency_description of this CompanyGeneralDetaisViewModel.
        :param currency_id: The currency_id of this CompanyGeneralDetaisViewModel.
        :param currentcy_symbol: The currentcy_symbol of this CompanyGeneralDetaisViewModel.
        :param emails: The emails of this CompanyGeneralDetaisViewModel.
        :param faxes: The faxes of this CompanyGeneralDetaisViewModel.
        :param phones: The phones of this CompanyGeneralDetaisViewModel.
        :param region_description: The region_description of this CompanyGeneralDetaisViewModel.
        :param region_id: The region_id of this CompanyGeneralDetaisViewModel.
        :param vat_reg: The vat_reg of this CompanyGeneralDetaisViewModel.
        """
        self.openapi_types = {
            'company_addresses': List[str],
            'company_name': str,
            'currency_code': str,
            'currency_description': str,
            'currency_id': int,
            'currentcy_symbol': str,
            'emails': List[str],
            'faxes': List[str],
            'phones': List[str],
            'region_description': str,
            'region_id': int,
            'vat_reg': str
        }

        self.attribute_map = {
            'company_addresses': 'companyAddresses',
            'company_name': 'companyName',
            'currency_code': 'currencyCode',
            'currency_description': 'currencyDescription',
            'currency_id': 'currencyId',
            'currentcy_symbol': 'currentcySymbol',
            'emails': 'emails',
            'faxes': 'faxes',
            'phones': 'phones',
            'region_description': 'regionDescription',
            'region_id': 'regionId',
            'vat_reg': 'vatReg'
        }

        self._company_addresses = company_addresses
        self._company_name = company_name
        self._currency_code = currency_code
        self._currency_description = currency_description
        self._currency_id = currency_id
        self._currentcy_symbol = currentcy_symbol
        self._emails = emails
        self._faxes = faxes
        self._phones = phones
        self._region_description = region_description
        self._region_id = region_id
        self._vat_reg = vat_reg

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyGeneralDetaisViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompanyGeneralDetaisViewModel of this CompanyGeneralDetaisViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def company_addresses(self):
        """Gets the company_addresses of this CompanyGeneralDetaisViewModel.


        :return: The company_addresses of this CompanyGeneralDetaisViewModel.
        :rtype: List[str]
        """
        return self._company_addresses

    @company_addresses.setter
    def company_addresses(self, company_addresses):
        """Sets the company_addresses of this CompanyGeneralDetaisViewModel.


        :param company_addresses: The company_addresses of this CompanyGeneralDetaisViewModel.
        :type company_addresses: List[str]
        """

        self._company_addresses = company_addresses

    @property
    def company_name(self):
        """Gets the company_name of this CompanyGeneralDetaisViewModel.


        :return: The company_name of this CompanyGeneralDetaisViewModel.
        :rtype: str
        """
        return self._company_name

    @company_name.setter
    def company_name(self, company_name):
        """Sets the company_name of this CompanyGeneralDetaisViewModel.


        :param company_name: The company_name of this CompanyGeneralDetaisViewModel.
        :type company_name: str
        """

        self._company_name = company_name

    @property
    def currency_code(self):
        """Gets the currency_code of this CompanyGeneralDetaisViewModel.


        :return: The currency_code of this CompanyGeneralDetaisViewModel.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this CompanyGeneralDetaisViewModel.


        :param currency_code: The currency_code of this CompanyGeneralDetaisViewModel.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def currency_description(self):
        """Gets the currency_description of this CompanyGeneralDetaisViewModel.


        :return: The currency_description of this CompanyGeneralDetaisViewModel.
        :rtype: str
        """
        return self._currency_description

    @currency_description.setter
    def currency_description(self, currency_description):
        """Sets the currency_description of this CompanyGeneralDetaisViewModel.


        :param currency_description: The currency_description of this CompanyGeneralDetaisViewModel.
        :type currency_description: str
        """

        self._currency_description = currency_description

    @property
    def currency_id(self):
        """Gets the currency_id of this CompanyGeneralDetaisViewModel.


        :return: The currency_id of this CompanyGeneralDetaisViewModel.
        :rtype: int
        """
        return self._currency_id

    @currency_id.setter
    def currency_id(self, currency_id):
        """Sets the currency_id of this CompanyGeneralDetaisViewModel.


        :param currency_id: The currency_id of this CompanyGeneralDetaisViewModel.
        :type currency_id: int
        """

        self._currency_id = currency_id

    @property
    def currentcy_symbol(self):
        """Gets the currentcy_symbol of this CompanyGeneralDetaisViewModel.


        :return: The currentcy_symbol of this CompanyGeneralDetaisViewModel.
        :rtype: str
        """
        return self._currentcy_symbol

    @currentcy_symbol.setter
    def currentcy_symbol(self, currentcy_symbol):
        """Sets the currentcy_symbol of this CompanyGeneralDetaisViewModel.


        :param currentcy_symbol: The currentcy_symbol of this CompanyGeneralDetaisViewModel.
        :type currentcy_symbol: str
        """

        self._currentcy_symbol = currentcy_symbol

    @property
    def emails(self):
        """Gets the emails of this CompanyGeneralDetaisViewModel.


        :return: The emails of this CompanyGeneralDetaisViewModel.
        :rtype: List[str]
        """
        return self._emails

    @emails.setter
    def emails(self, emails):
        """Sets the emails of this CompanyGeneralDetaisViewModel.


        :param emails: The emails of this CompanyGeneralDetaisViewModel.
        :type emails: List[str]
        """

        self._emails = emails

    @property
    def faxes(self):
        """Gets the faxes of this CompanyGeneralDetaisViewModel.


        :return: The faxes of this CompanyGeneralDetaisViewModel.
        :rtype: List[str]
        """
        return self._faxes

    @faxes.setter
    def faxes(self, faxes):
        """Sets the faxes of this CompanyGeneralDetaisViewModel.


        :param faxes: The faxes of this CompanyGeneralDetaisViewModel.
        :type faxes: List[str]
        """

        self._faxes = faxes

    @property
    def phones(self):
        """Gets the phones of this CompanyGeneralDetaisViewModel.


        :return: The phones of this CompanyGeneralDetaisViewModel.
        :rtype: List[str]
        """
        return self._phones

    @phones.setter
    def phones(self, phones):
        """Sets the phones of this CompanyGeneralDetaisViewModel.


        :param phones: The phones of this CompanyGeneralDetaisViewModel.
        :type phones: List[str]
        """

        self._phones = phones

    @property
    def region_description(self):
        """Gets the region_description of this CompanyGeneralDetaisViewModel.


        :return: The region_description of this CompanyGeneralDetaisViewModel.
        :rtype: str
        """
        return self._region_description

    @region_description.setter
    def region_description(self, region_description):
        """Sets the region_description of this CompanyGeneralDetaisViewModel.


        :param region_description: The region_description of this CompanyGeneralDetaisViewModel.
        :type region_description: str
        """

        self._region_description = region_description

    @property
    def region_id(self):
        """Gets the region_id of this CompanyGeneralDetaisViewModel.


        :return: The region_id of this CompanyGeneralDetaisViewModel.
        :rtype: int
        """
        return self._region_id

    @region_id.setter
    def region_id(self, region_id):
        """Sets the region_id of this CompanyGeneralDetaisViewModel.


        :param region_id: The region_id of this CompanyGeneralDetaisViewModel.
        :type region_id: int
        """

        self._region_id = region_id

    @property
    def vat_reg(self):
        """Gets the vat_reg of this CompanyGeneralDetaisViewModel.


        :return: The vat_reg of this CompanyGeneralDetaisViewModel.
        :rtype: str
        """
        return self._vat_reg

    @vat_reg.setter
    def vat_reg(self, vat_reg):
        """Sets the vat_reg of this CompanyGeneralDetaisViewModel.


        :param vat_reg: The vat_reg of this CompanyGeneralDetaisViewModel.
        :type vat_reg: str
        """

        self._vat_reg = vat_reg
