# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.acudf_value_dto import AcudfValueDto
from openapi_server.models.quote_product_trans_dto import QuoteProductTransDto
from openapi_server import util


class QuoteDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ac_code: str=None, closed_date: datetime=None, comments: str=None, company_id: int=None, custom_fields: List[AcudfValueDto]=None, customer_owner_id: int=None, customer_owner_name: str=None, dd_number: str=None, delivery_list: str=None, delivery_to: List[str]=None, entry_date: datetime=None, id: int=None, layout_type: int=None, note: str=None, po_number: str=None, proc_date: datetime=None, product_trans: List[QuoteProductTransDto]=None, reference: str=None, sale_invoice_id: int=None, sale_rep_code: str=None, sale_rep_id: int=None, time_stamp: str=None, total: float=None, total_net: float=None, total_vat: float=None, vat_type_id: int=None):
        """QuoteDto - a model defined in OpenAPI

        :param ac_code: The ac_code of this QuoteDto.
        :param closed_date: The closed_date of this QuoteDto.
        :param comments: The comments of this QuoteDto.
        :param company_id: The company_id of this QuoteDto.
        :param custom_fields: The custom_fields of this QuoteDto.
        :param customer_owner_id: The customer_owner_id of this QuoteDto.
        :param customer_owner_name: The customer_owner_name of this QuoteDto.
        :param dd_number: The dd_number of this QuoteDto.
        :param delivery_list: The delivery_list of this QuoteDto.
        :param delivery_to: The delivery_to of this QuoteDto.
        :param entry_date: The entry_date of this QuoteDto.
        :param id: The id of this QuoteDto.
        :param layout_type: The layout_type of this QuoteDto.
        :param note: The note of this QuoteDto.
        :param po_number: The po_number of this QuoteDto.
        :param proc_date: The proc_date of this QuoteDto.
        :param product_trans: The product_trans of this QuoteDto.
        :param reference: The reference of this QuoteDto.
        :param sale_invoice_id: The sale_invoice_id of this QuoteDto.
        :param sale_rep_code: The sale_rep_code of this QuoteDto.
        :param sale_rep_id: The sale_rep_id of this QuoteDto.
        :param time_stamp: The time_stamp of this QuoteDto.
        :param total: The total of this QuoteDto.
        :param total_net: The total_net of this QuoteDto.
        :param total_vat: The total_vat of this QuoteDto.
        :param vat_type_id: The vat_type_id of this QuoteDto.
        """
        self.openapi_types = {
            'ac_code': str,
            'closed_date': datetime,
            'comments': str,
            'company_id': int,
            'custom_fields': List[AcudfValueDto],
            'customer_owner_id': int,
            'customer_owner_name': str,
            'dd_number': str,
            'delivery_list': str,
            'delivery_to': List[str],
            'entry_date': datetime,
            'id': int,
            'layout_type': int,
            'note': str,
            'po_number': str,
            'proc_date': datetime,
            'product_trans': List[QuoteProductTransDto],
            'reference': str,
            'sale_invoice_id': int,
            'sale_rep_code': str,
            'sale_rep_id': int,
            'time_stamp': str,
            'total': float,
            'total_net': float,
            'total_vat': float,
            'vat_type_id': int
        }

        self.attribute_map = {
            'ac_code': 'acCode',
            'closed_date': 'closedDate',
            'comments': 'comments',
            'company_id': 'companyId',
            'custom_fields': 'customFields',
            'customer_owner_id': 'customerOwnerId',
            'customer_owner_name': 'customerOwnerName',
            'dd_number': 'ddNumber',
            'delivery_list': 'deliveryList',
            'delivery_to': 'deliveryTo',
            'entry_date': 'entryDate',
            'id': 'id',
            'layout_type': 'layoutType',
            'note': 'note',
            'po_number': 'poNumber',
            'proc_date': 'procDate',
            'product_trans': 'productTrans',
            'reference': 'reference',
            'sale_invoice_id': 'saleInvoiceId',
            'sale_rep_code': 'saleRepCode',
            'sale_rep_id': 'saleRepId',
            'time_stamp': 'timeStamp',
            'total': 'total',
            'total_net': 'totalNet',
            'total_vat': 'totalVat',
            'vat_type_id': 'vatTypeId'
        }

        self._ac_code = ac_code
        self._closed_date = closed_date
        self._comments = comments
        self._company_id = company_id
        self._custom_fields = custom_fields
        self._customer_owner_id = customer_owner_id
        self._customer_owner_name = customer_owner_name
        self._dd_number = dd_number
        self._delivery_list = delivery_list
        self._delivery_to = delivery_to
        self._entry_date = entry_date
        self._id = id
        self._layout_type = layout_type
        self._note = note
        self._po_number = po_number
        self._proc_date = proc_date
        self._product_trans = product_trans
        self._reference = reference
        self._sale_invoice_id = sale_invoice_id
        self._sale_rep_code = sale_rep_code
        self._sale_rep_id = sale_rep_id
        self._time_stamp = time_stamp
        self._total = total
        self._total_net = total_net
        self._total_vat = total_vat
        self._vat_type_id = vat_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QuoteDto of this QuoteDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ac_code(self):
        """Gets the ac_code of this QuoteDto.


        :return: The ac_code of this QuoteDto.
        :rtype: str
        """
        return self._ac_code

    @ac_code.setter
    def ac_code(self, ac_code):
        """Sets the ac_code of this QuoteDto.


        :param ac_code: The ac_code of this QuoteDto.
        :type ac_code: str
        """

        self._ac_code = ac_code

    @property
    def closed_date(self):
        """Gets the closed_date of this QuoteDto.


        :return: The closed_date of this QuoteDto.
        :rtype: datetime
        """
        return self._closed_date

    @closed_date.setter
    def closed_date(self, closed_date):
        """Sets the closed_date of this QuoteDto.


        :param closed_date: The closed_date of this QuoteDto.
        :type closed_date: datetime
        """

        self._closed_date = closed_date

    @property
    def comments(self):
        """Gets the comments of this QuoteDto.


        :return: The comments of this QuoteDto.
        :rtype: str
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this QuoteDto.


        :param comments: The comments of this QuoteDto.
        :type comments: str
        """

        self._comments = comments

    @property
    def company_id(self):
        """Gets the company_id of this QuoteDto.


        :return: The company_id of this QuoteDto.
        :rtype: int
        """
        return self._company_id

    @company_id.setter
    def company_id(self, company_id):
        """Sets the company_id of this QuoteDto.


        :param company_id: The company_id of this QuoteDto.
        :type company_id: int
        """

        self._company_id = company_id

    @property
    def custom_fields(self):
        """Gets the custom_fields of this QuoteDto.


        :return: The custom_fields of this QuoteDto.
        :rtype: List[AcudfValueDto]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this QuoteDto.


        :param custom_fields: The custom_fields of this QuoteDto.
        :type custom_fields: List[AcudfValueDto]
        """

        self._custom_fields = custom_fields

    @property
    def customer_owner_id(self):
        """Gets the customer_owner_id of this QuoteDto.


        :return: The customer_owner_id of this QuoteDto.
        :rtype: int
        """
        return self._customer_owner_id

    @customer_owner_id.setter
    def customer_owner_id(self, customer_owner_id):
        """Sets the customer_owner_id of this QuoteDto.


        :param customer_owner_id: The customer_owner_id of this QuoteDto.
        :type customer_owner_id: int
        """

        self._customer_owner_id = customer_owner_id

    @property
    def customer_owner_name(self):
        """Gets the customer_owner_name of this QuoteDto.


        :return: The customer_owner_name of this QuoteDto.
        :rtype: str
        """
        return self._customer_owner_name

    @customer_owner_name.setter
    def customer_owner_name(self, customer_owner_name):
        """Sets the customer_owner_name of this QuoteDto.


        :param customer_owner_name: The customer_owner_name of this QuoteDto.
        :type customer_owner_name: str
        """

        self._customer_owner_name = customer_owner_name

    @property
    def dd_number(self):
        """Gets the dd_number of this QuoteDto.


        :return: The dd_number of this QuoteDto.
        :rtype: str
        """
        return self._dd_number

    @dd_number.setter
    def dd_number(self, dd_number):
        """Sets the dd_number of this QuoteDto.


        :param dd_number: The dd_number of this QuoteDto.
        :type dd_number: str
        """

        self._dd_number = dd_number

    @property
    def delivery_list(self):
        """Gets the delivery_list of this QuoteDto.


        :return: The delivery_list of this QuoteDto.
        :rtype: str
        """
        return self._delivery_list

    @delivery_list.setter
    def delivery_list(self, delivery_list):
        """Sets the delivery_list of this QuoteDto.


        :param delivery_list: The delivery_list of this QuoteDto.
        :type delivery_list: str
        """

        self._delivery_list = delivery_list

    @property
    def delivery_to(self):
        """Gets the delivery_to of this QuoteDto.


        :return: The delivery_to of this QuoteDto.
        :rtype: List[str]
        """
        return self._delivery_to

    @delivery_to.setter
    def delivery_to(self, delivery_to):
        """Sets the delivery_to of this QuoteDto.


        :param delivery_to: The delivery_to of this QuoteDto.
        :type delivery_to: List[str]
        """

        self._delivery_to = delivery_to

    @property
    def entry_date(self):
        """Gets the entry_date of this QuoteDto.


        :return: The entry_date of this QuoteDto.
        :rtype: datetime
        """
        return self._entry_date

    @entry_date.setter
    def entry_date(self, entry_date):
        """Sets the entry_date of this QuoteDto.


        :param entry_date: The entry_date of this QuoteDto.
        :type entry_date: datetime
        """

        self._entry_date = entry_date

    @property
    def id(self):
        """Gets the id of this QuoteDto.


        :return: The id of this QuoteDto.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this QuoteDto.


        :param id: The id of this QuoteDto.
        :type id: int
        """

        self._id = id

    @property
    def layout_type(self):
        """Gets the layout_type of this QuoteDto.


        :return: The layout_type of this QuoteDto.
        :rtype: int
        """
        return self._layout_type

    @layout_type.setter
    def layout_type(self, layout_type):
        """Sets the layout_type of this QuoteDto.


        :param layout_type: The layout_type of this QuoteDto.
        :type layout_type: int
        """

        self._layout_type = layout_type

    @property
    def note(self):
        """Gets the note of this QuoteDto.


        :return: The note of this QuoteDto.
        :rtype: str
        """
        return self._note

    @note.setter
    def note(self, note):
        """Sets the note of this QuoteDto.


        :param note: The note of this QuoteDto.
        :type note: str
        """

        self._note = note

    @property
    def po_number(self):
        """Gets the po_number of this QuoteDto.


        :return: The po_number of this QuoteDto.
        :rtype: str
        """
        return self._po_number

    @po_number.setter
    def po_number(self, po_number):
        """Sets the po_number of this QuoteDto.


        :param po_number: The po_number of this QuoteDto.
        :type po_number: str
        """

        self._po_number = po_number

    @property
    def proc_date(self):
        """Gets the proc_date of this QuoteDto.


        :return: The proc_date of this QuoteDto.
        :rtype: datetime
        """
        return self._proc_date

    @proc_date.setter
    def proc_date(self, proc_date):
        """Sets the proc_date of this QuoteDto.


        :param proc_date: The proc_date of this QuoteDto.
        :type proc_date: datetime
        """

        self._proc_date = proc_date

    @property
    def product_trans(self):
        """Gets the product_trans of this QuoteDto.


        :return: The product_trans of this QuoteDto.
        :rtype: List[QuoteProductTransDto]
        """
        return self._product_trans

    @product_trans.setter
    def product_trans(self, product_trans):
        """Sets the product_trans of this QuoteDto.


        :param product_trans: The product_trans of this QuoteDto.
        :type product_trans: List[QuoteProductTransDto]
        """

        self._product_trans = product_trans

    @property
    def reference(self):
        """Gets the reference of this QuoteDto.


        :return: The reference of this QuoteDto.
        :rtype: str
        """
        return self._reference

    @reference.setter
    def reference(self, reference):
        """Sets the reference of this QuoteDto.


        :param reference: The reference of this QuoteDto.
        :type reference: str
        """

        self._reference = reference

    @property
    def sale_invoice_id(self):
        """Gets the sale_invoice_id of this QuoteDto.


        :return: The sale_invoice_id of this QuoteDto.
        :rtype: int
        """
        return self._sale_invoice_id

    @sale_invoice_id.setter
    def sale_invoice_id(self, sale_invoice_id):
        """Sets the sale_invoice_id of this QuoteDto.


        :param sale_invoice_id: The sale_invoice_id of this QuoteDto.
        :type sale_invoice_id: int
        """

        self._sale_invoice_id = sale_invoice_id

    @property
    def sale_rep_code(self):
        """Gets the sale_rep_code of this QuoteDto.


        :return: The sale_rep_code of this QuoteDto.
        :rtype: str
        """
        return self._sale_rep_code

    @sale_rep_code.setter
    def sale_rep_code(self, sale_rep_code):
        """Sets the sale_rep_code of this QuoteDto.


        :param sale_rep_code: The sale_rep_code of this QuoteDto.
        :type sale_rep_code: str
        """

        self._sale_rep_code = sale_rep_code

    @property
    def sale_rep_id(self):
        """Gets the sale_rep_id of this QuoteDto.


        :return: The sale_rep_id of this QuoteDto.
        :rtype: int
        """
        return self._sale_rep_id

    @sale_rep_id.setter
    def sale_rep_id(self, sale_rep_id):
        """Sets the sale_rep_id of this QuoteDto.


        :param sale_rep_id: The sale_rep_id of this QuoteDto.
        :type sale_rep_id: int
        """

        self._sale_rep_id = sale_rep_id

    @property
    def time_stamp(self):
        """Gets the time_stamp of this QuoteDto.


        :return: The time_stamp of this QuoteDto.
        :rtype: str
        """
        return self._time_stamp

    @time_stamp.setter
    def time_stamp(self, time_stamp):
        """Sets the time_stamp of this QuoteDto.


        :param time_stamp: The time_stamp of this QuoteDto.
        :type time_stamp: str
        """

        self._time_stamp = time_stamp

    @property
    def total(self):
        """Gets the total of this QuoteDto.


        :return: The total of this QuoteDto.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this QuoteDto.


        :param total: The total of this QuoteDto.
        :type total: float
        """

        self._total = total

    @property
    def total_net(self):
        """Gets the total_net of this QuoteDto.


        :return: The total_net of this QuoteDto.
        :rtype: float
        """
        return self._total_net

    @total_net.setter
    def total_net(self, total_net):
        """Sets the total_net of this QuoteDto.


        :param total_net: The total_net of this QuoteDto.
        :type total_net: float
        """

        self._total_net = total_net

    @property
    def total_vat(self):
        """Gets the total_vat of this QuoteDto.


        :return: The total_vat of this QuoteDto.
        :rtype: float
        """
        return self._total_vat

    @total_vat.setter
    def total_vat(self, total_vat):
        """Sets the total_vat of this QuoteDto.


        :param total_vat: The total_vat of this QuoteDto.
        :type total_vat: float
        """

        self._total_vat = total_vat

    @property
    def vat_type_id(self):
        """Gets the vat_type_id of this QuoteDto.


        :return: The vat_type_id of this QuoteDto.
        :rtype: int
        """
        return self._vat_type_id

    @vat_type_id.setter
    def vat_type_id(self, vat_type_id):
        """Sets the vat_type_id of this QuoteDto.


        :param vat_type_id: The vat_type_id of this QuoteDto.
        :type vat_type_id: int
        """

        self._vat_type_id = vat_type_id
