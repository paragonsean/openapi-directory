/**
 * Treaties API
 * An API exposing details of the treaties laid before Parliament.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Department from './Department';
import ParliamentaryConclusion from './ParliamentaryConclusion';
import TreatySeriesMembership from './TreatySeriesMembership';

/**
 * The Treaty model module.
 * @module model/Treaty
 * @version v1
 */
class Treaty {
    /**
     * Constructs a new <code>Treaty</code>.
     * @alias module:model/Treaty
     */
    constructor() { 
        
        Treaty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Treaty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Treaty} obj Optional instance to populate.
     * @return {module:model/Treaty} The populated <code>Treaty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Treaty();

            if (data.hasOwnProperty('commandPaperNumber')) {
                obj['commandPaperNumber'] = ApiClient.convertToType(data['commandPaperNumber'], 'Number');
            }
            if (data.hasOwnProperty('commandPaperPrefix')) {
                obj['commandPaperPrefix'] = ApiClient.convertToType(data['commandPaperPrefix'], 'String');
            }
            if (data.hasOwnProperty('commonsLayingDate')) {
                obj['commonsLayingDate'] = ApiClient.convertToType(data['commonsLayingDate'], 'Date');
            }
            if (data.hasOwnProperty('countrySeriesItemCitation')) {
                obj['countrySeriesItemCitation'] = ApiClient.convertToType(data['countrySeriesItemCitation'], 'String');
            }
            if (data.hasOwnProperty('countrySeriesMembership')) {
                obj['countrySeriesMembership'] = ApiClient.convertToType(data['countrySeriesMembership'], 'String');
            }
            if (data.hasOwnProperty('debateScheduled')) {
                obj['debateScheduled'] = ApiClient.convertToType(data['debateScheduled'], 'String');
            }
            if (data.hasOwnProperty('europeanSeriesItemCitation')) {
                obj['europeanSeriesItemCitation'] = ApiClient.convertToType(data['europeanSeriesItemCitation'], 'String');
            }
            if (data.hasOwnProperty('europeanUnionSeriesMembership')) {
                obj['europeanUnionSeriesMembership'] = ApiClient.convertToType(data['europeanUnionSeriesMembership'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('layingBodyDepartment')) {
                obj['layingBodyDepartment'] = Department.constructFromObject(data['layingBodyDepartment']);
            }
            if (data.hasOwnProperty('layingBodyDepartmentId')) {
                obj['layingBodyDepartmentId'] = ApiClient.convertToType(data['layingBodyDepartmentId'], 'Number');
            }
            if (data.hasOwnProperty('layingBodyName')) {
                obj['layingBodyName'] = ApiClient.convertToType(data['layingBodyName'], 'String');
            }
            if (data.hasOwnProperty('leadDepartment')) {
                obj['leadDepartment'] = Department.constructFromObject(data['leadDepartment']);
            }
            if (data.hasOwnProperty('leadGovernmentOrganisationDepartmentId')) {
                obj['leadGovernmentOrganisationDepartmentId'] = ApiClient.convertToType(data['leadGovernmentOrganisationDepartmentId'], 'Number');
            }
            if (data.hasOwnProperty('leadGovernmentOrganisationGroupName')) {
                obj['leadGovernmentOrganisationGroupName'] = ApiClient.convertToType(data['leadGovernmentOrganisationGroupName'], 'String');
            }
            if (data.hasOwnProperty('lordsLayingDate')) {
                obj['lordsLayingDate'] = ApiClient.convertToType(data['lordsLayingDate'], 'Date');
            }
            if (data.hasOwnProperty('miscSeriesItemCitation')) {
                obj['miscSeriesItemCitation'] = ApiClient.convertToType(data['miscSeriesItemCitation'], 'String');
            }
            if (data.hasOwnProperty('miscellaneousSeriesMembership')) {
                obj['miscellaneousSeriesMembership'] = ApiClient.convertToType(data['miscellaneousSeriesMembership'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('parliamentaryConclusion')) {
                obj['parliamentaryConclusion'] = ParliamentaryConclusion.constructFromObject(data['parliamentaryConclusion']);
            }
            if (data.hasOwnProperty('treatySeriesMembership')) {
                obj['treatySeriesMembership'] = TreatySeriesMembership.constructFromObject(data['treatySeriesMembership']);
            }
            if (data.hasOwnProperty('uri')) {
                obj['uri'] = ApiClient.convertToType(data['uri'], 'String');
            }
            if (data.hasOwnProperty('webLink')) {
                obj['webLink'] = ApiClient.convertToType(data['webLink'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Treaty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Treaty</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['commandPaperPrefix'] && !(typeof data['commandPaperPrefix'] === 'string' || data['commandPaperPrefix'] instanceof String)) {
            throw new Error("Expected the field `commandPaperPrefix` to be a primitive type in the JSON string but got " + data['commandPaperPrefix']);
        }
        // ensure the json data is a string
        if (data['countrySeriesItemCitation'] && !(typeof data['countrySeriesItemCitation'] === 'string' || data['countrySeriesItemCitation'] instanceof String)) {
            throw new Error("Expected the field `countrySeriesItemCitation` to be a primitive type in the JSON string but got " + data['countrySeriesItemCitation']);
        }
        // ensure the json data is a string
        if (data['countrySeriesMembership'] && !(typeof data['countrySeriesMembership'] === 'string' || data['countrySeriesMembership'] instanceof String)) {
            throw new Error("Expected the field `countrySeriesMembership` to be a primitive type in the JSON string but got " + data['countrySeriesMembership']);
        }
        // ensure the json data is a string
        if (data['debateScheduled'] && !(typeof data['debateScheduled'] === 'string' || data['debateScheduled'] instanceof String)) {
            throw new Error("Expected the field `debateScheduled` to be a primitive type in the JSON string but got " + data['debateScheduled']);
        }
        // ensure the json data is a string
        if (data['europeanSeriesItemCitation'] && !(typeof data['europeanSeriesItemCitation'] === 'string' || data['europeanSeriesItemCitation'] instanceof String)) {
            throw new Error("Expected the field `europeanSeriesItemCitation` to be a primitive type in the JSON string but got " + data['europeanSeriesItemCitation']);
        }
        // ensure the json data is a string
        if (data['europeanUnionSeriesMembership'] && !(typeof data['europeanUnionSeriesMembership'] === 'string' || data['europeanUnionSeriesMembership'] instanceof String)) {
            throw new Error("Expected the field `europeanUnionSeriesMembership` to be a primitive type in the JSON string but got " + data['europeanUnionSeriesMembership']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `layingBodyDepartment`
        if (data['layingBodyDepartment']) { // data not null
          Department.validateJSON(data['layingBodyDepartment']);
        }
        // ensure the json data is a string
        if (data['layingBodyName'] && !(typeof data['layingBodyName'] === 'string' || data['layingBodyName'] instanceof String)) {
            throw new Error("Expected the field `layingBodyName` to be a primitive type in the JSON string but got " + data['layingBodyName']);
        }
        // validate the optional field `leadDepartment`
        if (data['leadDepartment']) { // data not null
          Department.validateJSON(data['leadDepartment']);
        }
        // ensure the json data is a string
        if (data['leadGovernmentOrganisationGroupName'] && !(typeof data['leadGovernmentOrganisationGroupName'] === 'string' || data['leadGovernmentOrganisationGroupName'] instanceof String)) {
            throw new Error("Expected the field `leadGovernmentOrganisationGroupName` to be a primitive type in the JSON string but got " + data['leadGovernmentOrganisationGroupName']);
        }
        // ensure the json data is a string
        if (data['miscSeriesItemCitation'] && !(typeof data['miscSeriesItemCitation'] === 'string' || data['miscSeriesItemCitation'] instanceof String)) {
            throw new Error("Expected the field `miscSeriesItemCitation` to be a primitive type in the JSON string but got " + data['miscSeriesItemCitation']);
        }
        // ensure the json data is a string
        if (data['miscellaneousSeriesMembership'] && !(typeof data['miscellaneousSeriesMembership'] === 'string' || data['miscellaneousSeriesMembership'] instanceof String)) {
            throw new Error("Expected the field `miscellaneousSeriesMembership` to be a primitive type in the JSON string but got " + data['miscellaneousSeriesMembership']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `treatySeriesMembership`
        if (data['treatySeriesMembership']) { // data not null
          TreatySeriesMembership.validateJSON(data['treatySeriesMembership']);
        }
        // ensure the json data is a string
        if (data['uri'] && !(typeof data['uri'] === 'string' || data['uri'] instanceof String)) {
            throw new Error("Expected the field `uri` to be a primitive type in the JSON string but got " + data['uri']);
        }
        // ensure the json data is a string
        if (data['webLink'] && !(typeof data['webLink'] === 'string' || data['webLink'] instanceof String)) {
            throw new Error("Expected the field `webLink` to be a primitive type in the JSON string but got " + data['webLink']);
        }

        return true;
    }


}



/**
 * @member {Number} commandPaperNumber
 */
Treaty.prototype['commandPaperNumber'] = undefined;

/**
 * @member {String} commandPaperPrefix
 */
Treaty.prototype['commandPaperPrefix'] = undefined;

/**
 * @member {Date} commonsLayingDate
 */
Treaty.prototype['commonsLayingDate'] = undefined;

/**
 * @member {String} countrySeriesItemCitation
 */
Treaty.prototype['countrySeriesItemCitation'] = undefined;

/**
 * @member {String} countrySeriesMembership
 */
Treaty.prototype['countrySeriesMembership'] = undefined;

/**
 * @member {String} debateScheduled
 */
Treaty.prototype['debateScheduled'] = undefined;

/**
 * @member {String} europeanSeriesItemCitation
 */
Treaty.prototype['europeanSeriesItemCitation'] = undefined;

/**
 * @member {String} europeanUnionSeriesMembership
 */
Treaty.prototype['europeanUnionSeriesMembership'] = undefined;

/**
 * @member {String} id
 */
Treaty.prototype['id'] = undefined;

/**
 * @member {module:model/Department} layingBodyDepartment
 */
Treaty.prototype['layingBodyDepartment'] = undefined;

/**
 * @member {Number} layingBodyDepartmentId
 */
Treaty.prototype['layingBodyDepartmentId'] = undefined;

/**
 * @member {String} layingBodyName
 */
Treaty.prototype['layingBodyName'] = undefined;

/**
 * @member {module:model/Department} leadDepartment
 */
Treaty.prototype['leadDepartment'] = undefined;

/**
 * @member {Number} leadGovernmentOrganisationDepartmentId
 */
Treaty.prototype['leadGovernmentOrganisationDepartmentId'] = undefined;

/**
 * @member {String} leadGovernmentOrganisationGroupName
 */
Treaty.prototype['leadGovernmentOrganisationGroupName'] = undefined;

/**
 * @member {Date} lordsLayingDate
 */
Treaty.prototype['lordsLayingDate'] = undefined;

/**
 * @member {String} miscSeriesItemCitation
 */
Treaty.prototype['miscSeriesItemCitation'] = undefined;

/**
 * @member {String} miscellaneousSeriesMembership
 */
Treaty.prototype['miscellaneousSeriesMembership'] = undefined;

/**
 * @member {String} name
 */
Treaty.prototype['name'] = undefined;

/**
 * @member {module:model/ParliamentaryConclusion} parliamentaryConclusion
 */
Treaty.prototype['parliamentaryConclusion'] = undefined;

/**
 * @member {module:model/TreatySeriesMembership} treatySeriesMembership
 */
Treaty.prototype['treatySeriesMembership'] = undefined;

/**
 * @member {String} uri
 */
Treaty.prototype['uri'] = undefined;

/**
 * @member {String} webLink
 */
Treaty.prototype['webLink'] = undefined;






export default Treaty;

