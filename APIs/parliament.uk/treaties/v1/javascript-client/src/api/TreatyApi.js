/**
 * Treaties API
 * An API exposing details of the treaties laid before Parliament.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BusinessItemResourceCollection from '../model/BusinessItemResourceCollection';
import House from '../model/House';
import ParliamentaryProcess from '../model/ParliamentaryProcess';
import SeriesMembershipType from '../model/SeriesMembershipType';
import TreatyResource from '../model/TreatyResource';
import TreatyResourceCollection from '../model/TreatyResourceCollection';

/**
* Treaty service.
* @module api/TreatyApi
* @version v1
*/
export default class TreatyApi {

    /**
    * Constructs a new TreatyApi. 
    * @alias module:api/TreatyApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBusinessItemsByTreatyId operation.
     * @callback module:api/TreatyApi~getBusinessItemsByTreatyIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BusinessItemResourceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns business items belonging to the treaty with ID.
     * @param {String} id Business items belonging to treaty with the ID specified
     * @param {module:api/TreatyApi~getBusinessItemsByTreatyIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BusinessItemResourceCollection}
     */
    getBusinessItemsByTreatyId(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getBusinessItemsByTreatyId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = BusinessItemResourceCollection;
      return this.apiClient.callApi(
        '/api/Treaty/{id}/BusinessItems', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTreaties operation.
     * @callback module:api/TreatyApi~getTreatiesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TreatyResourceCollection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of treaties.
     * @param {Object} opts Optional parameters
     * @param {String} [searchText] Treaties which contains the search text specified
     * @param {Number} [governmentOrganisationId] Treaties with the government organisation id specified
     * @param {module:model/SeriesMembershipType} [series] Treaties with the series membership type specified
     * @param {module:model/ParliamentaryProcess} [parliamentaryProcess] Treaties where the parliamentary process is concluded or notconcluded
     * @param {Boolean} [debateScheduled] Treaties which contain a scheduled debate
     * @param {Boolean} [motionToNotRatify] Treaties which contain a motion to not ratify
     * @param {Boolean} [recommendedNotRatify] Treaties which are recommended to not ratify
     * @param {module:model/House} [house] Treaties which are laid in the specified house
     * @param {Number} [skip] The number of records to skip from the first, default is 0
     * @param {Number} [take] The number of records to return, default is 20
     * @param {module:api/TreatyApi~getTreatiesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TreatyResourceCollection}
     */
    getTreaties(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'SearchText': opts['searchText'],
        'GovernmentOrganisationId': opts['governmentOrganisationId'],
        'Series': opts['series'],
        'ParliamentaryProcess': opts['parliamentaryProcess'],
        'DebateScheduled': opts['debateScheduled'],
        'MotionToNotRatify': opts['motionToNotRatify'],
        'RecommendedNotRatify': opts['recommendedNotRatify'],
        'House': opts['house'],
        'Skip': opts['skip'],
        'Take': opts['take']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = TreatyResourceCollection;
      return this.apiClient.callApi(
        '/api/Treaty', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTreatyById operation.
     * @callback module:api/TreatyApi~getTreatyByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TreatyResource} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a treaty by ID.
     * @param {String} id Treaty with ID specified
     * @param {module:api/TreatyApi~getTreatyByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TreatyResource}
     */
    getTreatyById(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getTreatyById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = TreatyResource;
      return this.apiClient.callApi(
        '/api/Treaty/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
