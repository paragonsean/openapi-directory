/**
 * Treaties API
 * An API exposing details of the treaties laid before Parliament.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITreatySeriesMembership.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITreatySeriesMembership::OAITreatySeriesMembership(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITreatySeriesMembership::OAITreatySeriesMembership() {
    this->initializeModel();
}

OAITreatySeriesMembership::~OAITreatySeriesMembership() {}

void OAITreatySeriesMembership::initializeModel() {

    m_citation_isSet = false;
    m_citation_isValid = false;

    m_series_membership_type_isSet = false;
    m_series_membership_type_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAITreatySeriesMembership::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITreatySeriesMembership::fromJsonObject(QJsonObject json) {

    m_citation_isValid = ::OpenAPI::fromJsonValue(m_citation, json[QString("citation")]);
    m_citation_isSet = !json[QString("citation")].isNull() && m_citation_isValid;

    m_series_membership_type_isValid = ::OpenAPI::fromJsonValue(m_series_membership_type, json[QString("seriesMembershipType")]);
    m_series_membership_type_isSet = !json[QString("seriesMembershipType")].isNull() && m_series_membership_type_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAITreatySeriesMembership::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITreatySeriesMembership::asJsonObject() const {
    QJsonObject obj;
    if (m_citation_isSet) {
        obj.insert(QString("citation"), ::OpenAPI::toJsonValue(m_citation));
    }
    if (m_series_membership_type.isSet()) {
        obj.insert(QString("seriesMembershipType"), ::OpenAPI::toJsonValue(m_series_membership_type));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAITreatySeriesMembership::getCitation() const {
    return m_citation;
}
void OAITreatySeriesMembership::setCitation(const QString &citation) {
    m_citation = citation;
    m_citation_isSet = true;
}

bool OAITreatySeriesMembership::is_citation_Set() const{
    return m_citation_isSet;
}

bool OAITreatySeriesMembership::is_citation_Valid() const{
    return m_citation_isValid;
}

OAISeriesMembershipType OAITreatySeriesMembership::getSeriesMembershipType() const {
    return m_series_membership_type;
}
void OAITreatySeriesMembership::setSeriesMembershipType(const OAISeriesMembershipType &series_membership_type) {
    m_series_membership_type = series_membership_type;
    m_series_membership_type_isSet = true;
}

bool OAITreatySeriesMembership::is_series_membership_type_Set() const{
    return m_series_membership_type_isSet;
}

bool OAITreatySeriesMembership::is_series_membership_type_Valid() const{
    return m_series_membership_type_isValid;
}

QString OAITreatySeriesMembership::getUri() const {
    return m_uri;
}
void OAITreatySeriesMembership::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAITreatySeriesMembership::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAITreatySeriesMembership::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAITreatySeriesMembership::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_citation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_series_membership_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITreatySeriesMembership::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
