/**
 * Treaties API
 * An API exposing details of the treaties laid before Parliament.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITreaty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITreaty::OAITreaty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITreaty::OAITreaty() {
    this->initializeModel();
}

OAITreaty::~OAITreaty() {}

void OAITreaty::initializeModel() {

    m_command_paper_number_isSet = false;
    m_command_paper_number_isValid = false;

    m_command_paper_prefix_isSet = false;
    m_command_paper_prefix_isValid = false;

    m_commons_laying_date_isSet = false;
    m_commons_laying_date_isValid = false;

    m_country_series_item_citation_isSet = false;
    m_country_series_item_citation_isValid = false;

    m_country_series_membership_isSet = false;
    m_country_series_membership_isValid = false;

    m_debate_scheduled_isSet = false;
    m_debate_scheduled_isValid = false;

    m_european_series_item_citation_isSet = false;
    m_european_series_item_citation_isValid = false;

    m_european_union_series_membership_isSet = false;
    m_european_union_series_membership_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_laying_body_department_isSet = false;
    m_laying_body_department_isValid = false;

    m_laying_body_department_id_isSet = false;
    m_laying_body_department_id_isValid = false;

    m_laying_body_name_isSet = false;
    m_laying_body_name_isValid = false;

    m_lead_department_isSet = false;
    m_lead_department_isValid = false;

    m_lead_government_organisation_department_id_isSet = false;
    m_lead_government_organisation_department_id_isValid = false;

    m_lead_government_organisation_group_name_isSet = false;
    m_lead_government_organisation_group_name_isValid = false;

    m_lords_laying_date_isSet = false;
    m_lords_laying_date_isValid = false;

    m_misc_series_item_citation_isSet = false;
    m_misc_series_item_citation_isValid = false;

    m_miscellaneous_series_membership_isSet = false;
    m_miscellaneous_series_membership_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parliamentary_conclusion_isSet = false;
    m_parliamentary_conclusion_isValid = false;

    m_treaty_series_membership_isSet = false;
    m_treaty_series_membership_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;

    m_web_link_isSet = false;
    m_web_link_isValid = false;
}

void OAITreaty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITreaty::fromJsonObject(QJsonObject json) {

    m_command_paper_number_isValid = ::OpenAPI::fromJsonValue(m_command_paper_number, json[QString("commandPaperNumber")]);
    m_command_paper_number_isSet = !json[QString("commandPaperNumber")].isNull() && m_command_paper_number_isValid;

    m_command_paper_prefix_isValid = ::OpenAPI::fromJsonValue(m_command_paper_prefix, json[QString("commandPaperPrefix")]);
    m_command_paper_prefix_isSet = !json[QString("commandPaperPrefix")].isNull() && m_command_paper_prefix_isValid;

    m_commons_laying_date_isValid = ::OpenAPI::fromJsonValue(m_commons_laying_date, json[QString("commonsLayingDate")]);
    m_commons_laying_date_isSet = !json[QString("commonsLayingDate")].isNull() && m_commons_laying_date_isValid;

    m_country_series_item_citation_isValid = ::OpenAPI::fromJsonValue(m_country_series_item_citation, json[QString("countrySeriesItemCitation")]);
    m_country_series_item_citation_isSet = !json[QString("countrySeriesItemCitation")].isNull() && m_country_series_item_citation_isValid;

    m_country_series_membership_isValid = ::OpenAPI::fromJsonValue(m_country_series_membership, json[QString("countrySeriesMembership")]);
    m_country_series_membership_isSet = !json[QString("countrySeriesMembership")].isNull() && m_country_series_membership_isValid;

    m_debate_scheduled_isValid = ::OpenAPI::fromJsonValue(m_debate_scheduled, json[QString("debateScheduled")]);
    m_debate_scheduled_isSet = !json[QString("debateScheduled")].isNull() && m_debate_scheduled_isValid;

    m_european_series_item_citation_isValid = ::OpenAPI::fromJsonValue(m_european_series_item_citation, json[QString("europeanSeriesItemCitation")]);
    m_european_series_item_citation_isSet = !json[QString("europeanSeriesItemCitation")].isNull() && m_european_series_item_citation_isValid;

    m_european_union_series_membership_isValid = ::OpenAPI::fromJsonValue(m_european_union_series_membership, json[QString("europeanUnionSeriesMembership")]);
    m_european_union_series_membership_isSet = !json[QString("europeanUnionSeriesMembership")].isNull() && m_european_union_series_membership_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_laying_body_department_isValid = ::OpenAPI::fromJsonValue(m_laying_body_department, json[QString("layingBodyDepartment")]);
    m_laying_body_department_isSet = !json[QString("layingBodyDepartment")].isNull() && m_laying_body_department_isValid;

    m_laying_body_department_id_isValid = ::OpenAPI::fromJsonValue(m_laying_body_department_id, json[QString("layingBodyDepartmentId")]);
    m_laying_body_department_id_isSet = !json[QString("layingBodyDepartmentId")].isNull() && m_laying_body_department_id_isValid;

    m_laying_body_name_isValid = ::OpenAPI::fromJsonValue(m_laying_body_name, json[QString("layingBodyName")]);
    m_laying_body_name_isSet = !json[QString("layingBodyName")].isNull() && m_laying_body_name_isValid;

    m_lead_department_isValid = ::OpenAPI::fromJsonValue(m_lead_department, json[QString("leadDepartment")]);
    m_lead_department_isSet = !json[QString("leadDepartment")].isNull() && m_lead_department_isValid;

    m_lead_government_organisation_department_id_isValid = ::OpenAPI::fromJsonValue(m_lead_government_organisation_department_id, json[QString("leadGovernmentOrganisationDepartmentId")]);
    m_lead_government_organisation_department_id_isSet = !json[QString("leadGovernmentOrganisationDepartmentId")].isNull() && m_lead_government_organisation_department_id_isValid;

    m_lead_government_organisation_group_name_isValid = ::OpenAPI::fromJsonValue(m_lead_government_organisation_group_name, json[QString("leadGovernmentOrganisationGroupName")]);
    m_lead_government_organisation_group_name_isSet = !json[QString("leadGovernmentOrganisationGroupName")].isNull() && m_lead_government_organisation_group_name_isValid;

    m_lords_laying_date_isValid = ::OpenAPI::fromJsonValue(m_lords_laying_date, json[QString("lordsLayingDate")]);
    m_lords_laying_date_isSet = !json[QString("lordsLayingDate")].isNull() && m_lords_laying_date_isValid;

    m_misc_series_item_citation_isValid = ::OpenAPI::fromJsonValue(m_misc_series_item_citation, json[QString("miscSeriesItemCitation")]);
    m_misc_series_item_citation_isSet = !json[QString("miscSeriesItemCitation")].isNull() && m_misc_series_item_citation_isValid;

    m_miscellaneous_series_membership_isValid = ::OpenAPI::fromJsonValue(m_miscellaneous_series_membership, json[QString("miscellaneousSeriesMembership")]);
    m_miscellaneous_series_membership_isSet = !json[QString("miscellaneousSeriesMembership")].isNull() && m_miscellaneous_series_membership_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_parliamentary_conclusion_isValid = ::OpenAPI::fromJsonValue(m_parliamentary_conclusion, json[QString("parliamentaryConclusion")]);
    m_parliamentary_conclusion_isSet = !json[QString("parliamentaryConclusion")].isNull() && m_parliamentary_conclusion_isValid;

    m_treaty_series_membership_isValid = ::OpenAPI::fromJsonValue(m_treaty_series_membership, json[QString("treatySeriesMembership")]);
    m_treaty_series_membership_isSet = !json[QString("treatySeriesMembership")].isNull() && m_treaty_series_membership_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;

    m_web_link_isValid = ::OpenAPI::fromJsonValue(m_web_link, json[QString("webLink")]);
    m_web_link_isSet = !json[QString("webLink")].isNull() && m_web_link_isValid;
}

QString OAITreaty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITreaty::asJsonObject() const {
    QJsonObject obj;
    if (m_command_paper_number_isSet) {
        obj.insert(QString("commandPaperNumber"), ::OpenAPI::toJsonValue(m_command_paper_number));
    }
    if (m_command_paper_prefix_isSet) {
        obj.insert(QString("commandPaperPrefix"), ::OpenAPI::toJsonValue(m_command_paper_prefix));
    }
    if (m_commons_laying_date_isSet) {
        obj.insert(QString("commonsLayingDate"), ::OpenAPI::toJsonValue(m_commons_laying_date));
    }
    if (m_country_series_item_citation_isSet) {
        obj.insert(QString("countrySeriesItemCitation"), ::OpenAPI::toJsonValue(m_country_series_item_citation));
    }
    if (m_country_series_membership_isSet) {
        obj.insert(QString("countrySeriesMembership"), ::OpenAPI::toJsonValue(m_country_series_membership));
    }
    if (m_debate_scheduled_isSet) {
        obj.insert(QString("debateScheduled"), ::OpenAPI::toJsonValue(m_debate_scheduled));
    }
    if (m_european_series_item_citation_isSet) {
        obj.insert(QString("europeanSeriesItemCitation"), ::OpenAPI::toJsonValue(m_european_series_item_citation));
    }
    if (m_european_union_series_membership_isSet) {
        obj.insert(QString("europeanUnionSeriesMembership"), ::OpenAPI::toJsonValue(m_european_union_series_membership));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_laying_body_department.isSet()) {
        obj.insert(QString("layingBodyDepartment"), ::OpenAPI::toJsonValue(m_laying_body_department));
    }
    if (m_laying_body_department_id_isSet) {
        obj.insert(QString("layingBodyDepartmentId"), ::OpenAPI::toJsonValue(m_laying_body_department_id));
    }
    if (m_laying_body_name_isSet) {
        obj.insert(QString("layingBodyName"), ::OpenAPI::toJsonValue(m_laying_body_name));
    }
    if (m_lead_department.isSet()) {
        obj.insert(QString("leadDepartment"), ::OpenAPI::toJsonValue(m_lead_department));
    }
    if (m_lead_government_organisation_department_id_isSet) {
        obj.insert(QString("leadGovernmentOrganisationDepartmentId"), ::OpenAPI::toJsonValue(m_lead_government_organisation_department_id));
    }
    if (m_lead_government_organisation_group_name_isSet) {
        obj.insert(QString("leadGovernmentOrganisationGroupName"), ::OpenAPI::toJsonValue(m_lead_government_organisation_group_name));
    }
    if (m_lords_laying_date_isSet) {
        obj.insert(QString("lordsLayingDate"), ::OpenAPI::toJsonValue(m_lords_laying_date));
    }
    if (m_misc_series_item_citation_isSet) {
        obj.insert(QString("miscSeriesItemCitation"), ::OpenAPI::toJsonValue(m_misc_series_item_citation));
    }
    if (m_miscellaneous_series_membership_isSet) {
        obj.insert(QString("miscellaneousSeriesMembership"), ::OpenAPI::toJsonValue(m_miscellaneous_series_membership));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parliamentary_conclusion.isSet()) {
        obj.insert(QString("parliamentaryConclusion"), ::OpenAPI::toJsonValue(m_parliamentary_conclusion));
    }
    if (m_treaty_series_membership.isSet()) {
        obj.insert(QString("treatySeriesMembership"), ::OpenAPI::toJsonValue(m_treaty_series_membership));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    if (m_web_link_isSet) {
        obj.insert(QString("webLink"), ::OpenAPI::toJsonValue(m_web_link));
    }
    return obj;
}

qint32 OAITreaty::getCommandPaperNumber() const {
    return m_command_paper_number;
}
void OAITreaty::setCommandPaperNumber(const qint32 &command_paper_number) {
    m_command_paper_number = command_paper_number;
    m_command_paper_number_isSet = true;
}

bool OAITreaty::is_command_paper_number_Set() const{
    return m_command_paper_number_isSet;
}

bool OAITreaty::is_command_paper_number_Valid() const{
    return m_command_paper_number_isValid;
}

QString OAITreaty::getCommandPaperPrefix() const {
    return m_command_paper_prefix;
}
void OAITreaty::setCommandPaperPrefix(const QString &command_paper_prefix) {
    m_command_paper_prefix = command_paper_prefix;
    m_command_paper_prefix_isSet = true;
}

bool OAITreaty::is_command_paper_prefix_Set() const{
    return m_command_paper_prefix_isSet;
}

bool OAITreaty::is_command_paper_prefix_Valid() const{
    return m_command_paper_prefix_isValid;
}

QDateTime OAITreaty::getCommonsLayingDate() const {
    return m_commons_laying_date;
}
void OAITreaty::setCommonsLayingDate(const QDateTime &commons_laying_date) {
    m_commons_laying_date = commons_laying_date;
    m_commons_laying_date_isSet = true;
}

bool OAITreaty::is_commons_laying_date_Set() const{
    return m_commons_laying_date_isSet;
}

bool OAITreaty::is_commons_laying_date_Valid() const{
    return m_commons_laying_date_isValid;
}

QString OAITreaty::getCountrySeriesItemCitation() const {
    return m_country_series_item_citation;
}
void OAITreaty::setCountrySeriesItemCitation(const QString &country_series_item_citation) {
    m_country_series_item_citation = country_series_item_citation;
    m_country_series_item_citation_isSet = true;
}

bool OAITreaty::is_country_series_item_citation_Set() const{
    return m_country_series_item_citation_isSet;
}

bool OAITreaty::is_country_series_item_citation_Valid() const{
    return m_country_series_item_citation_isValid;
}

QString OAITreaty::getCountrySeriesMembership() const {
    return m_country_series_membership;
}
void OAITreaty::setCountrySeriesMembership(const QString &country_series_membership) {
    m_country_series_membership = country_series_membership;
    m_country_series_membership_isSet = true;
}

bool OAITreaty::is_country_series_membership_Set() const{
    return m_country_series_membership_isSet;
}

bool OAITreaty::is_country_series_membership_Valid() const{
    return m_country_series_membership_isValid;
}

QString OAITreaty::getDebateScheduled() const {
    return m_debate_scheduled;
}
void OAITreaty::setDebateScheduled(const QString &debate_scheduled) {
    m_debate_scheduled = debate_scheduled;
    m_debate_scheduled_isSet = true;
}

bool OAITreaty::is_debate_scheduled_Set() const{
    return m_debate_scheduled_isSet;
}

bool OAITreaty::is_debate_scheduled_Valid() const{
    return m_debate_scheduled_isValid;
}

QString OAITreaty::getEuropeanSeriesItemCitation() const {
    return m_european_series_item_citation;
}
void OAITreaty::setEuropeanSeriesItemCitation(const QString &european_series_item_citation) {
    m_european_series_item_citation = european_series_item_citation;
    m_european_series_item_citation_isSet = true;
}

bool OAITreaty::is_european_series_item_citation_Set() const{
    return m_european_series_item_citation_isSet;
}

bool OAITreaty::is_european_series_item_citation_Valid() const{
    return m_european_series_item_citation_isValid;
}

QString OAITreaty::getEuropeanUnionSeriesMembership() const {
    return m_european_union_series_membership;
}
void OAITreaty::setEuropeanUnionSeriesMembership(const QString &european_union_series_membership) {
    m_european_union_series_membership = european_union_series_membership;
    m_european_union_series_membership_isSet = true;
}

bool OAITreaty::is_european_union_series_membership_Set() const{
    return m_european_union_series_membership_isSet;
}

bool OAITreaty::is_european_union_series_membership_Valid() const{
    return m_european_union_series_membership_isValid;
}

QString OAITreaty::getId() const {
    return m_id;
}
void OAITreaty::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAITreaty::is_id_Set() const{
    return m_id_isSet;
}

bool OAITreaty::is_id_Valid() const{
    return m_id_isValid;
}

OAIDepartment OAITreaty::getLayingBodyDepartment() const {
    return m_laying_body_department;
}
void OAITreaty::setLayingBodyDepartment(const OAIDepartment &laying_body_department) {
    m_laying_body_department = laying_body_department;
    m_laying_body_department_isSet = true;
}

bool OAITreaty::is_laying_body_department_Set() const{
    return m_laying_body_department_isSet;
}

bool OAITreaty::is_laying_body_department_Valid() const{
    return m_laying_body_department_isValid;
}

qint32 OAITreaty::getLayingBodyDepartmentId() const {
    return m_laying_body_department_id;
}
void OAITreaty::setLayingBodyDepartmentId(const qint32 &laying_body_department_id) {
    m_laying_body_department_id = laying_body_department_id;
    m_laying_body_department_id_isSet = true;
}

bool OAITreaty::is_laying_body_department_id_Set() const{
    return m_laying_body_department_id_isSet;
}

bool OAITreaty::is_laying_body_department_id_Valid() const{
    return m_laying_body_department_id_isValid;
}

QString OAITreaty::getLayingBodyName() const {
    return m_laying_body_name;
}
void OAITreaty::setLayingBodyName(const QString &laying_body_name) {
    m_laying_body_name = laying_body_name;
    m_laying_body_name_isSet = true;
}

bool OAITreaty::is_laying_body_name_Set() const{
    return m_laying_body_name_isSet;
}

bool OAITreaty::is_laying_body_name_Valid() const{
    return m_laying_body_name_isValid;
}

OAIDepartment OAITreaty::getLeadDepartment() const {
    return m_lead_department;
}
void OAITreaty::setLeadDepartment(const OAIDepartment &lead_department) {
    m_lead_department = lead_department;
    m_lead_department_isSet = true;
}

bool OAITreaty::is_lead_department_Set() const{
    return m_lead_department_isSet;
}

bool OAITreaty::is_lead_department_Valid() const{
    return m_lead_department_isValid;
}

qint32 OAITreaty::getLeadGovernmentOrganisationDepartmentId() const {
    return m_lead_government_organisation_department_id;
}
void OAITreaty::setLeadGovernmentOrganisationDepartmentId(const qint32 &lead_government_organisation_department_id) {
    m_lead_government_organisation_department_id = lead_government_organisation_department_id;
    m_lead_government_organisation_department_id_isSet = true;
}

bool OAITreaty::is_lead_government_organisation_department_id_Set() const{
    return m_lead_government_organisation_department_id_isSet;
}

bool OAITreaty::is_lead_government_organisation_department_id_Valid() const{
    return m_lead_government_organisation_department_id_isValid;
}

QString OAITreaty::getLeadGovernmentOrganisationGroupName() const {
    return m_lead_government_organisation_group_name;
}
void OAITreaty::setLeadGovernmentOrganisationGroupName(const QString &lead_government_organisation_group_name) {
    m_lead_government_organisation_group_name = lead_government_organisation_group_name;
    m_lead_government_organisation_group_name_isSet = true;
}

bool OAITreaty::is_lead_government_organisation_group_name_Set() const{
    return m_lead_government_organisation_group_name_isSet;
}

bool OAITreaty::is_lead_government_organisation_group_name_Valid() const{
    return m_lead_government_organisation_group_name_isValid;
}

QDateTime OAITreaty::getLordsLayingDate() const {
    return m_lords_laying_date;
}
void OAITreaty::setLordsLayingDate(const QDateTime &lords_laying_date) {
    m_lords_laying_date = lords_laying_date;
    m_lords_laying_date_isSet = true;
}

bool OAITreaty::is_lords_laying_date_Set() const{
    return m_lords_laying_date_isSet;
}

bool OAITreaty::is_lords_laying_date_Valid() const{
    return m_lords_laying_date_isValid;
}

QString OAITreaty::getMiscSeriesItemCitation() const {
    return m_misc_series_item_citation;
}
void OAITreaty::setMiscSeriesItemCitation(const QString &misc_series_item_citation) {
    m_misc_series_item_citation = misc_series_item_citation;
    m_misc_series_item_citation_isSet = true;
}

bool OAITreaty::is_misc_series_item_citation_Set() const{
    return m_misc_series_item_citation_isSet;
}

bool OAITreaty::is_misc_series_item_citation_Valid() const{
    return m_misc_series_item_citation_isValid;
}

QString OAITreaty::getMiscellaneousSeriesMembership() const {
    return m_miscellaneous_series_membership;
}
void OAITreaty::setMiscellaneousSeriesMembership(const QString &miscellaneous_series_membership) {
    m_miscellaneous_series_membership = miscellaneous_series_membership;
    m_miscellaneous_series_membership_isSet = true;
}

bool OAITreaty::is_miscellaneous_series_membership_Set() const{
    return m_miscellaneous_series_membership_isSet;
}

bool OAITreaty::is_miscellaneous_series_membership_Valid() const{
    return m_miscellaneous_series_membership_isValid;
}

QString OAITreaty::getName() const {
    return m_name;
}
void OAITreaty::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITreaty::is_name_Set() const{
    return m_name_isSet;
}

bool OAITreaty::is_name_Valid() const{
    return m_name_isValid;
}

OAIParliamentaryConclusion OAITreaty::getParliamentaryConclusion() const {
    return m_parliamentary_conclusion;
}
void OAITreaty::setParliamentaryConclusion(const OAIParliamentaryConclusion &parliamentary_conclusion) {
    m_parliamentary_conclusion = parliamentary_conclusion;
    m_parliamentary_conclusion_isSet = true;
}

bool OAITreaty::is_parliamentary_conclusion_Set() const{
    return m_parliamentary_conclusion_isSet;
}

bool OAITreaty::is_parliamentary_conclusion_Valid() const{
    return m_parliamentary_conclusion_isValid;
}

OAITreatySeriesMembership OAITreaty::getTreatySeriesMembership() const {
    return m_treaty_series_membership;
}
void OAITreaty::setTreatySeriesMembership(const OAITreatySeriesMembership &treaty_series_membership) {
    m_treaty_series_membership = treaty_series_membership;
    m_treaty_series_membership_isSet = true;
}

bool OAITreaty::is_treaty_series_membership_Set() const{
    return m_treaty_series_membership_isSet;
}

bool OAITreaty::is_treaty_series_membership_Valid() const{
    return m_treaty_series_membership_isValid;
}

QString OAITreaty::getUri() const {
    return m_uri;
}
void OAITreaty::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAITreaty::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAITreaty::is_uri_Valid() const{
    return m_uri_isValid;
}

QString OAITreaty::getWebLink() const {
    return m_web_link;
}
void OAITreaty::setWebLink(const QString &web_link) {
    m_web_link = web_link;
    m_web_link_isSet = true;
}

bool OAITreaty::is_web_link_Set() const{
    return m_web_link_isSet;
}

bool OAITreaty::is_web_link_Valid() const{
    return m_web_link_isValid;
}

bool OAITreaty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_command_paper_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_command_paper_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commons_laying_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_series_item_citation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_series_membership_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debate_scheduled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_european_series_item_citation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_european_union_series_membership_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_laying_body_department.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_laying_body_department_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_laying_body_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_department.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_government_organisation_department_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_government_organisation_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lords_laying_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_misc_series_item_citation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_miscellaneous_series_membership_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parliamentary_conclusion.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_treaty_series_membership.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_link_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITreaty::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
