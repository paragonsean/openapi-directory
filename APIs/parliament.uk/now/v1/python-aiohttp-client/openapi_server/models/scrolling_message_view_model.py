# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scrolling_message_alert_type import ScrollingMessageAlertType
from openapi_server.models.vertical_alignment import VerticalAlignment
from openapi_server import util


class ScrollingMessageViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alert_type: ScrollingMessageAlertType=None, content: str=None, display_from: datetime=None, display_to: datetime=None, id: int=None, vertical_alignment: VerticalAlignment=None):
        """ScrollingMessageViewModel - a model defined in OpenAPI

        :param alert_type: The alert_type of this ScrollingMessageViewModel.
        :param content: The content of this ScrollingMessageViewModel.
        :param display_from: The display_from of this ScrollingMessageViewModel.
        :param display_to: The display_to of this ScrollingMessageViewModel.
        :param id: The id of this ScrollingMessageViewModel.
        :param vertical_alignment: The vertical_alignment of this ScrollingMessageViewModel.
        """
        self.openapi_types = {
            'alert_type': ScrollingMessageAlertType,
            'content': str,
            'display_from': datetime,
            'display_to': datetime,
            'id': int,
            'vertical_alignment': VerticalAlignment
        }

        self.attribute_map = {
            'alert_type': 'alertType',
            'content': 'content',
            'display_from': 'displayFrom',
            'display_to': 'displayTo',
            'id': 'id',
            'vertical_alignment': 'verticalAlignment'
        }

        self._alert_type = alert_type
        self._content = content
        self._display_from = display_from
        self._display_to = display_to
        self._id = id
        self._vertical_alignment = vertical_alignment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScrollingMessageViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ScrollingMessageViewModel of this ScrollingMessageViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alert_type(self):
        """Gets the alert_type of this ScrollingMessageViewModel.


        :return: The alert_type of this ScrollingMessageViewModel.
        :rtype: ScrollingMessageAlertType
        """
        return self._alert_type

    @alert_type.setter
    def alert_type(self, alert_type):
        """Sets the alert_type of this ScrollingMessageViewModel.


        :param alert_type: The alert_type of this ScrollingMessageViewModel.
        :type alert_type: ScrollingMessageAlertType
        """

        self._alert_type = alert_type

    @property
    def content(self):
        """Gets the content of this ScrollingMessageViewModel.


        :return: The content of this ScrollingMessageViewModel.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this ScrollingMessageViewModel.


        :param content: The content of this ScrollingMessageViewModel.
        :type content: str
        """

        self._content = content

    @property
    def display_from(self):
        """Gets the display_from of this ScrollingMessageViewModel.


        :return: The display_from of this ScrollingMessageViewModel.
        :rtype: datetime
        """
        return self._display_from

    @display_from.setter
    def display_from(self, display_from):
        """Sets the display_from of this ScrollingMessageViewModel.


        :param display_from: The display_from of this ScrollingMessageViewModel.
        :type display_from: datetime
        """

        self._display_from = display_from

    @property
    def display_to(self):
        """Gets the display_to of this ScrollingMessageViewModel.


        :return: The display_to of this ScrollingMessageViewModel.
        :rtype: datetime
        """
        return self._display_to

    @display_to.setter
    def display_to(self, display_to):
        """Sets the display_to of this ScrollingMessageViewModel.


        :param display_to: The display_to of this ScrollingMessageViewModel.
        :type display_to: datetime
        """

        self._display_to = display_to

    @property
    def id(self):
        """Gets the id of this ScrollingMessageViewModel.


        :return: The id of this ScrollingMessageViewModel.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ScrollingMessageViewModel.


        :param id: The id of this ScrollingMessageViewModel.
        :type id: int
        """

        self._id = id

    @property
    def vertical_alignment(self):
        """Gets the vertical_alignment of this ScrollingMessageViewModel.


        :return: The vertical_alignment of this ScrollingMessageViewModel.
        :rtype: VerticalAlignment
        """
        return self._vertical_alignment

    @vertical_alignment.setter
    def vertical_alignment(self, vertical_alignment):
        """Sets the vertical_alignment of this ScrollingMessageViewModel.


        :param vertical_alignment: The vertical_alignment of this ScrollingMessageViewModel.
        :type vertical_alignment: VerticalAlignment
        """

        self._vertical_alignment = vertical_alignment
