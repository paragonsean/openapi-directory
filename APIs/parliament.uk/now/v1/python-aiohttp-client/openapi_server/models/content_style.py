# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentStyle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DIVIDERSOLID = 'DividerSolid'
    EMPTYLINE = 'EmptyLine'
    MEMBER = 'Member'
    FOOTER = 'Footer'
    ANSWERINGBODY = 'AnsweringBody'
    WESTMINSTERHALLINFO = 'WestminsterHallInfo'
    GRANDCOMMITTEEINFO = 'GrandCommitteeInfo'
    DIVIDERDOTTED = 'DividerDotted'
    DIVIDERDASHED = 'DividerDashed'
    DIVISION = 'Division'
    TEXT150 = 'Text150'
    TEXT140 = 'Text140'
    TEXT130 = 'Text130'
    TEXT120 = 'Text120'
    TEXT110 = 'Text110'
    TEXT100 = 'Text100'
    TEXT90 = 'Text90'
    TEXT80 = 'Text80'
    TEXT70 = 'Text70'

    def __init__(self):
        """ContentStyle - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentStyle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentStyle of this ContentStyle.
        """
        return util.deserialize_model(dikt, cls)
