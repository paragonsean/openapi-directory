/**
 * Annunciator content API
 * Get data from the annunciator system.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVerticalAlignment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVerticalAlignment::OAIVerticalAlignment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVerticalAlignment::OAIVerticalAlignment() {
    this->initializeModel();
}

OAIVerticalAlignment::~OAIVerticalAlignment() {}

void OAIVerticalAlignment::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVerticalAlignment::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVerticalAlignment::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Top", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVerticalAlignment::TOP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Middle", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVerticalAlignment::MIDDLE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Bottom", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVerticalAlignment::BOTTOM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVerticalAlignment::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVerticalAlignment::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVerticalAlignment::TOP:
            val = "Top";
            break;
        case eOAIVerticalAlignment::MIDDLE:
            val = "Middle";
            break;
        case eOAIVerticalAlignment::BOTTOM:
            val = "Bottom";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVerticalAlignment::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVerticalAlignment::eOAIVerticalAlignment OAIVerticalAlignment::getValue() const {
    return m_value;
}

void OAIVerticalAlignment::setValue(const OAIVerticalAlignment::eOAIVerticalAlignment& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVerticalAlignment::isSet() const {
    
    return m_value_isSet;
}

bool OAIVerticalAlignment::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
