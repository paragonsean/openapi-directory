/**
 * Annunciator content API
 * Get data from the annunciator system.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAILineViewModel.h
 *
 * 
 */

#ifndef OAILineViewModel_H
#define OAILineViewModel_H

#include <QJsonObject>

#include "OAIContentStyle.h"
#include "OAIContentType.h"
#include "OAIHorizontalAlignment.h"
#include "OAIMemberViewModel.h"
#include "OAIVerticalAlignment.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMemberViewModel;

class OAILineViewModel : public OAIObject {
public:
    OAILineViewModel();
    OAILineViewModel(QString json);
    ~OAILineViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QString getContentAdditionalJson() const;
    void setContentAdditionalJson(const QString &content_additional_json);
    bool is_content_additional_json_Set() const;
    bool is_content_additional_json_Valid() const;

    OAIContentType getContentType() const;
    void setContentType(const OAIContentType &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getContentUrl() const;
    void setContentUrl(const QString &content_url);
    bool is_content_url_Set() const;
    bool is_content_url_Valid() const;

    qint32 getDisplayOrder() const;
    void setDisplayOrder(const qint32 &display_order);
    bool is_display_order_Set() const;
    bool is_display_order_Valid() const;

    bool isForceCapitalisation() const;
    void setForceCapitalisation(const bool &force_capitalisation);
    bool is_force_capitalisation_Set() const;
    bool is_force_capitalisation_Valid() const;

    OAIHorizontalAlignment getHorizontalAlignment() const;
    void setHorizontalAlignment(const OAIHorizontalAlignment &horizontal_alignment);
    bool is_horizontal_alignment_Set() const;
    bool is_horizontal_alignment_Valid() const;

    OAIMemberViewModel getMember() const;
    void setMember(const OAIMemberViewModel &member);
    bool is_member_Set() const;
    bool is_member_Valid() const;

    OAIContentStyle getStyle() const;
    void setStyle(const OAIContentStyle &style);
    bool is_style_Set() const;
    bool is_style_Valid() const;

    OAIVerticalAlignment getVerticalAlignment() const;
    void setVerticalAlignment(const OAIVerticalAlignment &vertical_alignment);
    bool is_vertical_alignment_Set() const;
    bool is_vertical_alignment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QString m_content_additional_json;
    bool m_content_additional_json_isSet;
    bool m_content_additional_json_isValid;

    OAIContentType m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_content_url;
    bool m_content_url_isSet;
    bool m_content_url_isValid;

    qint32 m_display_order;
    bool m_display_order_isSet;
    bool m_display_order_isValid;

    bool m_force_capitalisation;
    bool m_force_capitalisation_isSet;
    bool m_force_capitalisation_isValid;

    OAIHorizontalAlignment m_horizontal_alignment;
    bool m_horizontal_alignment_isSet;
    bool m_horizontal_alignment_isValid;

    OAIMemberViewModel m_member;
    bool m_member_isSet;
    bool m_member_isValid;

    OAIContentStyle m_style;
    bool m_style_isSet;
    bool m_style_isValid;

    OAIVerticalAlignment m_vertical_alignment;
    bool m_vertical_alignment_isSet;
    bool m_vertical_alignment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAILineViewModel)

#endif // OAILineViewModel_H
