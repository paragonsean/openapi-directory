/**
 * Annunciator content API
 * Get data from the annunciator system.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScrollingMessageViewModel.h
 *
 * 
 */

#ifndef OAIScrollingMessageViewModel_H
#define OAIScrollingMessageViewModel_H

#include <QJsonObject>

#include "OAIScrollingMessageAlertType.h"
#include "OAIVerticalAlignment.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScrollingMessageViewModel : public OAIObject {
public:
    OAIScrollingMessageViewModel();
    OAIScrollingMessageViewModel(QString json);
    ~OAIScrollingMessageViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIScrollingMessageAlertType getAlertType() const;
    void setAlertType(const OAIScrollingMessageAlertType &alert_type);
    bool is_alert_type_Set() const;
    bool is_alert_type_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    QDateTime getDisplayFrom() const;
    void setDisplayFrom(const QDateTime &display_from);
    bool is_display_from_Set() const;
    bool is_display_from_Valid() const;

    QDateTime getDisplayTo() const;
    void setDisplayTo(const QDateTime &display_to);
    bool is_display_to_Set() const;
    bool is_display_to_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIVerticalAlignment getVerticalAlignment() const;
    void setVerticalAlignment(const OAIVerticalAlignment &vertical_alignment);
    bool is_vertical_alignment_Set() const;
    bool is_vertical_alignment_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIScrollingMessageAlertType m_alert_type;
    bool m_alert_type_isSet;
    bool m_alert_type_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    QDateTime m_display_from;
    bool m_display_from_isSet;
    bool m_display_from_isValid;

    QDateTime m_display_to;
    bool m_display_to_isSet;
    bool m_display_to_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIVerticalAlignment m_vertical_alignment;
    bool m_vertical_alignment_isSet;
    bool m_vertical_alignment_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScrollingMessageViewModel)

#endif // OAIScrollingMessageViewModel_H
