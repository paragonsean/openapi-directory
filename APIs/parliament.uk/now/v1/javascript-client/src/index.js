/**
 * Annunciator content API
 * Get data from the annunciator system.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AnnunciatorMessageType from './model/AnnunciatorMessageType';
import ContentStyle from './model/ContentStyle';
import ContentType from './model/ContentType';
import HorizontalAlignment from './model/HorizontalAlignment';
import HouseMembershipViewModel from './model/HouseMembershipViewModel';
import LineViewModel from './model/LineViewModel';
import MemberViewModel from './model/MemberViewModel';
import MessageViewModel from './model/MessageViewModel';
import PartyViewModel from './model/PartyViewModel';
import ScrollingMessageAlertType from './model/ScrollingMessageAlertType';
import ScrollingMessageViewModel from './model/ScrollingMessageViewModel';
import SlideType from './model/SlideType';
import SlideViewModel from './model/SlideViewModel';
import Sounds from './model/Sounds';
import VerticalAlignment from './model/VerticalAlignment';
import MessageApi from './api/MessageApi';


/**
* Get data from the annunciator system..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AnnunciatorContentApi = require('index'); // See note below*.
* var xxxSvc = new AnnunciatorContentApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AnnunciatorContentApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AnnunciatorContentApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AnnunciatorContentApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnnunciatorMessageType model constructor.
     * @property {module:model/AnnunciatorMessageType}
     */
    AnnunciatorMessageType,

    /**
     * The ContentStyle model constructor.
     * @property {module:model/ContentStyle}
     */
    ContentStyle,

    /**
     * The ContentType model constructor.
     * @property {module:model/ContentType}
     */
    ContentType,

    /**
     * The HorizontalAlignment model constructor.
     * @property {module:model/HorizontalAlignment}
     */
    HorizontalAlignment,

    /**
     * The HouseMembershipViewModel model constructor.
     * @property {module:model/HouseMembershipViewModel}
     */
    HouseMembershipViewModel,

    /**
     * The LineViewModel model constructor.
     * @property {module:model/LineViewModel}
     */
    LineViewModel,

    /**
     * The MemberViewModel model constructor.
     * @property {module:model/MemberViewModel}
     */
    MemberViewModel,

    /**
     * The MessageViewModel model constructor.
     * @property {module:model/MessageViewModel}
     */
    MessageViewModel,

    /**
     * The PartyViewModel model constructor.
     * @property {module:model/PartyViewModel}
     */
    PartyViewModel,

    /**
     * The ScrollingMessageAlertType model constructor.
     * @property {module:model/ScrollingMessageAlertType}
     */
    ScrollingMessageAlertType,

    /**
     * The ScrollingMessageViewModel model constructor.
     * @property {module:model/ScrollingMessageViewModel}
     */
    ScrollingMessageViewModel,

    /**
     * The SlideType model constructor.
     * @property {module:model/SlideType}
     */
    SlideType,

    /**
     * The SlideViewModel model constructor.
     * @property {module:model/SlideViewModel}
     */
    SlideViewModel,

    /**
     * The Sounds model constructor.
     * @property {module:model/Sounds}
     */
    Sounds,

    /**
     * The VerticalAlignment model constructor.
     * @property {module:model/VerticalAlignment}
     */
    VerticalAlignment,

    /**
    * The MessageApi service constructor.
    * @property {module:api/MessageApi}
    */
    MessageApi
};
