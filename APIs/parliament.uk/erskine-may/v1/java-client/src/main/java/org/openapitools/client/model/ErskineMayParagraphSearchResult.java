/*
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ErskineMayParagraphSearchResult
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:38.289716-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ErskineMayParagraphSearchResult {
  public static final String SERIALIZED_NAME_CHAPTER_NUMBER = "chapterNumber";
  @SerializedName(SERIALIZED_NAME_CHAPTER_NUMBER)
  private Integer chapterNumber;

  public static final String SERIALIZED_NAME_CHAPTER_TITLE = "chapterTitle";
  @SerializedName(SERIALIZED_NAME_CHAPTER_TITLE)
  private String chapterTitle;

  public static final String SERIALIZED_NAME_PARAGRAPH_REFERENCE = "paragraphReference";
  @SerializedName(SERIALIZED_NAME_PARAGRAPH_REFERENCE)
  private String paragraphReference;

  public static final String SERIALIZED_NAME_PART_NUMBER = "partNumber";
  @SerializedName(SERIALIZED_NAME_PART_NUMBER)
  private Integer partNumber;

  public static final String SERIALIZED_NAME_SEARCH_RESULT_TEXT = "searchResultText";
  @SerializedName(SERIALIZED_NAME_SEARCH_RESULT_TEXT)
  private String searchResultText;

  public static final String SERIALIZED_NAME_SECTION_ID = "sectionId";
  @SerializedName(SERIALIZED_NAME_SECTION_ID)
  private Integer sectionId;

  public static final String SERIALIZED_NAME_SECTION_TITLE = "sectionTitle";
  @SerializedName(SERIALIZED_NAME_SECTION_TITLE)
  private String sectionTitle;

  public static final String SERIALIZED_NAME_SECTION_TITLE_CHAIN = "sectionTitleChain";
  @SerializedName(SERIALIZED_NAME_SECTION_TITLE_CHAIN)
  private String sectionTitleChain;

  public ErskineMayParagraphSearchResult() {
  }

  public ErskineMayParagraphSearchResult chapterNumber(Integer chapterNumber) {
    this.chapterNumber = chapterNumber;
    return this;
  }

  /**
   * Get chapterNumber
   * @return chapterNumber
   */
  @javax.annotation.Nullable
  public Integer getChapterNumber() {
    return chapterNumber;
  }

  public void setChapterNumber(Integer chapterNumber) {
    this.chapterNumber = chapterNumber;
  }


  public ErskineMayParagraphSearchResult chapterTitle(String chapterTitle) {
    this.chapterTitle = chapterTitle;
    return this;
  }

  /**
   * Get chapterTitle
   * @return chapterTitle
   */
  @javax.annotation.Nullable
  public String getChapterTitle() {
    return chapterTitle;
  }

  public void setChapterTitle(String chapterTitle) {
    this.chapterTitle = chapterTitle;
  }


  public ErskineMayParagraphSearchResult paragraphReference(String paragraphReference) {
    this.paragraphReference = paragraphReference;
    return this;
  }

  /**
   * Get paragraphReference
   * @return paragraphReference
   */
  @javax.annotation.Nullable
  public String getParagraphReference() {
    return paragraphReference;
  }

  public void setParagraphReference(String paragraphReference) {
    this.paragraphReference = paragraphReference;
  }


  public ErskineMayParagraphSearchResult partNumber(Integer partNumber) {
    this.partNumber = partNumber;
    return this;
  }

  /**
   * Get partNumber
   * @return partNumber
   */
  @javax.annotation.Nullable
  public Integer getPartNumber() {
    return partNumber;
  }

  public void setPartNumber(Integer partNumber) {
    this.partNumber = partNumber;
  }


  public ErskineMayParagraphSearchResult searchResultText(String searchResultText) {
    this.searchResultText = searchResultText;
    return this;
  }

  /**
   * Get searchResultText
   * @return searchResultText
   */
  @javax.annotation.Nullable
  public String getSearchResultText() {
    return searchResultText;
  }

  public void setSearchResultText(String searchResultText) {
    this.searchResultText = searchResultText;
  }


  public ErskineMayParagraphSearchResult sectionId(Integer sectionId) {
    this.sectionId = sectionId;
    return this;
  }

  /**
   * Get sectionId
   * @return sectionId
   */
  @javax.annotation.Nullable
  public Integer getSectionId() {
    return sectionId;
  }

  public void setSectionId(Integer sectionId) {
    this.sectionId = sectionId;
  }


  public ErskineMayParagraphSearchResult sectionTitle(String sectionTitle) {
    this.sectionTitle = sectionTitle;
    return this;
  }

  /**
   * Get sectionTitle
   * @return sectionTitle
   */
  @javax.annotation.Nullable
  public String getSectionTitle() {
    return sectionTitle;
  }

  public void setSectionTitle(String sectionTitle) {
    this.sectionTitle = sectionTitle;
  }


  public ErskineMayParagraphSearchResult sectionTitleChain(String sectionTitleChain) {
    this.sectionTitleChain = sectionTitleChain;
    return this;
  }

  /**
   * Get sectionTitleChain
   * @return sectionTitleChain
   */
  @javax.annotation.Nullable
  public String getSectionTitleChain() {
    return sectionTitleChain;
  }

  public void setSectionTitleChain(String sectionTitleChain) {
    this.sectionTitleChain = sectionTitleChain;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ErskineMayParagraphSearchResult erskineMayParagraphSearchResult = (ErskineMayParagraphSearchResult) o;
    return Objects.equals(this.chapterNumber, erskineMayParagraphSearchResult.chapterNumber) &&
        Objects.equals(this.chapterTitle, erskineMayParagraphSearchResult.chapterTitle) &&
        Objects.equals(this.paragraphReference, erskineMayParagraphSearchResult.paragraphReference) &&
        Objects.equals(this.partNumber, erskineMayParagraphSearchResult.partNumber) &&
        Objects.equals(this.searchResultText, erskineMayParagraphSearchResult.searchResultText) &&
        Objects.equals(this.sectionId, erskineMayParagraphSearchResult.sectionId) &&
        Objects.equals(this.sectionTitle, erskineMayParagraphSearchResult.sectionTitle) &&
        Objects.equals(this.sectionTitleChain, erskineMayParagraphSearchResult.sectionTitleChain);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(chapterNumber, chapterTitle, paragraphReference, partNumber, searchResultText, sectionId, sectionTitle, sectionTitleChain);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ErskineMayParagraphSearchResult {\n");
    sb.append("    chapterNumber: ").append(toIndentedString(chapterNumber)).append("\n");
    sb.append("    chapterTitle: ").append(toIndentedString(chapterTitle)).append("\n");
    sb.append("    paragraphReference: ").append(toIndentedString(paragraphReference)).append("\n");
    sb.append("    partNumber: ").append(toIndentedString(partNumber)).append("\n");
    sb.append("    searchResultText: ").append(toIndentedString(searchResultText)).append("\n");
    sb.append("    sectionId: ").append(toIndentedString(sectionId)).append("\n");
    sb.append("    sectionTitle: ").append(toIndentedString(sectionTitle)).append("\n");
    sb.append("    sectionTitleChain: ").append(toIndentedString(sectionTitleChain)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("chapterNumber");
    openapiFields.add("chapterTitle");
    openapiFields.add("paragraphReference");
    openapiFields.add("partNumber");
    openapiFields.add("searchResultText");
    openapiFields.add("sectionId");
    openapiFields.add("sectionTitle");
    openapiFields.add("sectionTitleChain");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ErskineMayParagraphSearchResult
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ErskineMayParagraphSearchResult.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ErskineMayParagraphSearchResult is not found in the empty JSON string", ErskineMayParagraphSearchResult.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ErskineMayParagraphSearchResult.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ErskineMayParagraphSearchResult` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("chapterTitle") != null && !jsonObj.get("chapterTitle").isJsonNull()) && !jsonObj.get("chapterTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `chapterTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("chapterTitle").toString()));
      }
      if ((jsonObj.get("paragraphReference") != null && !jsonObj.get("paragraphReference").isJsonNull()) && !jsonObj.get("paragraphReference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paragraphReference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paragraphReference").toString()));
      }
      if ((jsonObj.get("searchResultText") != null && !jsonObj.get("searchResultText").isJsonNull()) && !jsonObj.get("searchResultText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `searchResultText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("searchResultText").toString()));
      }
      if ((jsonObj.get("sectionTitle") != null && !jsonObj.get("sectionTitle").isJsonNull()) && !jsonObj.get("sectionTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectionTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sectionTitle").toString()));
      }
      if ((jsonObj.get("sectionTitleChain") != null && !jsonObj.get("sectionTitleChain").isJsonNull()) && !jsonObj.get("sectionTitleChain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sectionTitleChain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sectionTitleChain").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ErskineMayParagraphSearchResult.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ErskineMayParagraphSearchResult' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ErskineMayParagraphSearchResult> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ErskineMayParagraphSearchResult.class));

       return (TypeAdapter<T>) new TypeAdapter<ErskineMayParagraphSearchResult>() {
           @Override
           public void write(JsonWriter out, ErskineMayParagraphSearchResult value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ErskineMayParagraphSearchResult read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ErskineMayParagraphSearchResult given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ErskineMayParagraphSearchResult
   * @throws IOException if the JSON string is invalid with respect to ErskineMayParagraphSearchResult
   */
  public static ErskineMayParagraphSearchResult fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ErskineMayParagraphSearchResult.class);
  }

  /**
   * Convert an instance of ErskineMayParagraphSearchResult to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

