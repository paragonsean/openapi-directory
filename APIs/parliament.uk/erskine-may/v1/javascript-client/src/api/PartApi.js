/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErskineMayPart from '../model/ErskineMayPart';

/**
* Part service.
* @module api/PartApi
* @version v1
*/
export default class PartApi {

    /**
    * Constructs a new PartApi. 
    * @alias module:api/PartApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPartGet operation.
     * @callback module:api/PartApi~apiPartGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ErskineMayPart>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of all parts.
     * @param {module:api/PartApi~apiPartGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ErskineMayPart>}
     */
    apiPartGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [ErskineMayPart];
      return this.apiClient.callApi(
        '/api/Part', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPartPartNumberGet operation.
     * @callback module:api/PartApi~apiPartPartNumberGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMayPart} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a part by part number.
     * @param {Number} partNumber Part by part number
     * @param {module:api/PartApi~apiPartPartNumberGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMayPart}
     */
    apiPartPartNumberGet(partNumber, callback) {
      let postBody = null;
      // verify the required parameter 'partNumber' is set
      if (partNumber === undefined || partNumber === null) {
        throw new Error("Missing the required parameter 'partNumber' when calling apiPartPartNumberGet");
      }

      let pathParams = {
        'partNumber': partNumber
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMayPart;
      return this.apiClient.callApi(
        '/api/Part/{partNumber}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
