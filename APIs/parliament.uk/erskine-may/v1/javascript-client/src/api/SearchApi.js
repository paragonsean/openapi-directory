/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErskineMayIndexTermSearchResultErskineMaySearch from '../model/ErskineMayIndexTermSearchResultErskineMaySearch';
import ErskineMayParagraphSearchResultErskineMaySearch from '../model/ErskineMayParagraphSearchResultErskineMaySearch';
import ErskineMaySectionOverview from '../model/ErskineMaySectionOverview';
import ErskineMaySectionSearchResultErskineMaySearch from '../model/ErskineMaySectionSearchResultErskineMaySearch';

/**
* Search service.
* @module api/SearchApi
* @version v1
*/
export default class SearchApi {

    /**
    * Constructs a new SearchApi. 
    * @alias module:api/SearchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiSearchIndexTermSearchResultsSearchTermGet operation.
     * @callback module:api/SearchApi~apiSearchIndexTermSearchResultsSearchTermGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMayIndexTermSearchResultErskineMaySearch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of index terms which contain the search term.
     * @param {String} searchTerm Index terms which contain search term.
     * @param {Object} opts Optional parameters
     * @param {Number} [skip = 0)] The number of records to skip from the first, default is 0.
     * @param {Number} [take = 20)] The number of records to return, default is 20, maximum is 20.
     * @param {module:api/SearchApi~apiSearchIndexTermSearchResultsSearchTermGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMayIndexTermSearchResultErskineMaySearch}
     */
    apiSearchIndexTermSearchResultsSearchTermGet(searchTerm, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'searchTerm' is set
      if (searchTerm === undefined || searchTerm === null) {
        throw new Error("Missing the required parameter 'searchTerm' when calling apiSearchIndexTermSearchResultsSearchTermGet");
      }

      let pathParams = {
        'searchTerm': searchTerm
      };
      let queryParams = {
        'skip': opts['skip'],
        'take': opts['take']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMayIndexTermSearchResultErskineMaySearch;
      return this.apiClient.callApi(
        '/api/Search/IndexTermSearchResults/{searchTerm}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSearchParagraphReferenceGet operation.
     * @callback module:api/SearchApi~apiSearchParagraphReferenceGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMaySectionOverview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a section overview by reference.
     * @param {String} reference Section overview by reference.
     * @param {module:api/SearchApi~apiSearchParagraphReferenceGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMaySectionOverview}
     */
    apiSearchParagraphReferenceGet(reference, callback) {
      let postBody = null;
      // verify the required parameter 'reference' is set
      if (reference === undefined || reference === null) {
        throw new Error("Missing the required parameter 'reference' when calling apiSearchParagraphReferenceGet");
      }

      let pathParams = {
        'reference': reference
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMaySectionOverview;
      return this.apiClient.callApi(
        '/api/Search/Paragraph/{reference}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSearchParagraphSearchResultsSearchTermGet operation.
     * @callback module:api/SearchApi~apiSearchParagraphSearchResultsSearchTermGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMayParagraphSearchResultErskineMaySearch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of paragraphs which contain the search term.
     * @param {String} searchTerm Paragraphs which contain search term in their content.
     * @param {Object} opts Optional parameters
     * @param {Number} [skip = 0)] The number of records to skip from the first, default is 0.
     * @param {Number} [take = 20)] The number of records to return, default is 20, maximum is 20.
     * @param {module:api/SearchApi~apiSearchParagraphSearchResultsSearchTermGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMayParagraphSearchResultErskineMaySearch}
     */
    apiSearchParagraphSearchResultsSearchTermGet(searchTerm, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'searchTerm' is set
      if (searchTerm === undefined || searchTerm === null) {
        throw new Error("Missing the required parameter 'searchTerm' when calling apiSearchParagraphSearchResultsSearchTermGet");
      }

      let pathParams = {
        'searchTerm': searchTerm
      };
      let queryParams = {
        'skip': opts['skip'],
        'take': opts['take']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMayParagraphSearchResultErskineMaySearch;
      return this.apiClient.callApi(
        '/api/Search/ParagraphSearchResults/{searchTerm}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSearchSectionSearchResultsSearchTermGet operation.
     * @callback module:api/SearchApi~apiSearchSectionSearchResultsSearchTermGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMaySectionSearchResultErskineMaySearch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of sections which contain the search term.
     * @param {String} searchTerm Sections which contain search term in their title.
     * @param {Object} opts Optional parameters
     * @param {Number} [skip = 0)] The number of records to skip from the first, default is 0.
     * @param {Number} [take = 20)] The number of records to return, default is 20, maximum is 20.
     * @param {module:api/SearchApi~apiSearchSectionSearchResultsSearchTermGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMaySectionSearchResultErskineMaySearch}
     */
    apiSearchSectionSearchResultsSearchTermGet(searchTerm, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'searchTerm' is set
      if (searchTerm === undefined || searchTerm === null) {
        throw new Error("Missing the required parameter 'searchTerm' when calling apiSearchSectionSearchResultsSearchTermGet");
      }

      let pathParams = {
        'searchTerm': searchTerm
      };
      let queryParams = {
        'skip': opts['skip'],
        'take': opts['take']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMaySectionSearchResultErskineMaySearch;
      return this.apiClient.callApi(
        '/api/Search/SectionSearchResults/{searchTerm}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
