/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErskineMaySectionDetail from '../model/ErskineMaySectionDetail';
import ErskineMaySectionOverview from '../model/ErskineMaySectionOverview';

/**
* Section service.
* @module api/SectionApi
* @version v1
*/
export default class SectionApi {

    /**
    * Constructs a new SectionApi. 
    * @alias module:api/SectionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiSectionSectionIdGet operation.
     * @callback module:api/SectionApi~apiSectionSectionIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMaySectionDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a section by section id.
     * @param {Number} sectionId Section by id.
     * @param {module:api/SectionApi~apiSectionSectionIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMaySectionDetail}
     */
    apiSectionSectionIdGet(sectionId, callback) {
      let postBody = null;
      // verify the required parameter 'sectionId' is set
      if (sectionId === undefined || sectionId === null) {
        throw new Error("Missing the required parameter 'sectionId' when calling apiSectionSectionIdGet");
      }

      let pathParams = {
        'sectionId': sectionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMaySectionDetail;
      return this.apiClient.callApi(
        '/api/Section/{sectionId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiSectionSectionIdstepGet operation.
     * @callback module:api/SectionApi~apiSectionSectionIdstepGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMaySectionOverview} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a section overview by section id and step.
     * @param {Number} sectionId Section by id.
     * @param {Number} step Number of sections to step over from given section.
     * @param {module:api/SectionApi~apiSectionSectionIdstepGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMaySectionOverview}
     */
    apiSectionSectionIdstepGet(sectionId, step, callback) {
      let postBody = null;
      // verify the required parameter 'sectionId' is set
      if (sectionId === undefined || sectionId === null) {
        throw new Error("Missing the required parameter 'sectionId' when calling apiSectionSectionIdstepGet");
      }
      // verify the required parameter 'step' is set
      if (step === undefined || step === null) {
        throw new Error("Missing the required parameter 'step' when calling apiSectionSectionIdstepGet");
      }

      let pathParams = {
        'sectionId': sectionId,
        'step': step
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMaySectionOverview;
      return this.apiClient.callApi(
        '/api/Section/{sectionId},{step}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
