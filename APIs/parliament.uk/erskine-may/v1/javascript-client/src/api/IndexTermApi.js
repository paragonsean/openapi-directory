/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErskineMayIndexTerm from '../model/ErskineMayIndexTerm';
import ErskineMayIndexTermSearchResultErskineMaySearch from '../model/ErskineMayIndexTermSearchResultErskineMaySearch';

/**
* IndexTerm service.
* @module api/IndexTermApi
* @version v1
*/
export default class IndexTermApi {

    /**
    * Constructs a new IndexTermApi. 
    * @alias module:api/IndexTermApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiIndexTermBrowseGet operation.
     * @callback module:api/IndexTermApi~apiIndexTermBrowseGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMayIndexTermSearchResultErskineMaySearch} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of index terms by start letter.
     * @param {Object} opts Optional parameters
     * @param {String} [startLetter] Index terms by start letter
     * @param {Number} [skip = 0)] The number of records to skip from the first, default is 0.
     * @param {Number} [take = 20)] The number of records to return, default is 20, maximum is 20.
     * @param {module:api/IndexTermApi~apiIndexTermBrowseGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMayIndexTermSearchResultErskineMaySearch}
     */
    apiIndexTermBrowseGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'startLetter': opts['startLetter'],
        'skip': opts['skip'],
        'take': opts['take']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMayIndexTermSearchResultErskineMaySearch;
      return this.apiClient.callApi(
        '/api/IndexTerm/browse', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiIndexTermIndexTermIdGet operation.
     * @callback module:api/IndexTermApi~apiIndexTermIndexTermIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ErskineMayIndexTerm} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an index term by id.
     * @param {Number} indexTermId Index term by if
     * @param {module:api/IndexTermApi~apiIndexTermIndexTermIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ErskineMayIndexTerm}
     */
    apiIndexTermIndexTermIdGet(indexTermId, callback) {
      let postBody = null;
      // verify the required parameter 'indexTermId' is set
      if (indexTermId === undefined || indexTermId === null) {
        throw new Error("Missing the required parameter 'indexTermId' when calling apiIndexTermIndexTermIdGet");
      }

      let pathParams = {
        'indexTermId': indexTermId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ErskineMayIndexTerm;
      return this.apiClient.callApi(
        '/api/IndexTerm/{indexTermId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
