/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErskineMayParagraphSearchResult model module.
 * @module model/ErskineMayParagraphSearchResult
 * @version v1
 */
class ErskineMayParagraphSearchResult {
    /**
     * Constructs a new <code>ErskineMayParagraphSearchResult</code>.
     * @alias module:model/ErskineMayParagraphSearchResult
     */
    constructor() { 
        
        ErskineMayParagraphSearchResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErskineMayParagraphSearchResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErskineMayParagraphSearchResult} obj Optional instance to populate.
     * @return {module:model/ErskineMayParagraphSearchResult} The populated <code>ErskineMayParagraphSearchResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErskineMayParagraphSearchResult();

            if (data.hasOwnProperty('chapterNumber')) {
                obj['chapterNumber'] = ApiClient.convertToType(data['chapterNumber'], 'Number');
            }
            if (data.hasOwnProperty('chapterTitle')) {
                obj['chapterTitle'] = ApiClient.convertToType(data['chapterTitle'], 'String');
            }
            if (data.hasOwnProperty('paragraphReference')) {
                obj['paragraphReference'] = ApiClient.convertToType(data['paragraphReference'], 'String');
            }
            if (data.hasOwnProperty('partNumber')) {
                obj['partNumber'] = ApiClient.convertToType(data['partNumber'], 'Number');
            }
            if (data.hasOwnProperty('searchResultText')) {
                obj['searchResultText'] = ApiClient.convertToType(data['searchResultText'], 'String');
            }
            if (data.hasOwnProperty('sectionId')) {
                obj['sectionId'] = ApiClient.convertToType(data['sectionId'], 'Number');
            }
            if (data.hasOwnProperty('sectionTitle')) {
                obj['sectionTitle'] = ApiClient.convertToType(data['sectionTitle'], 'String');
            }
            if (data.hasOwnProperty('sectionTitleChain')) {
                obj['sectionTitleChain'] = ApiClient.convertToType(data['sectionTitleChain'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErskineMayParagraphSearchResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErskineMayParagraphSearchResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['chapterTitle'] && !(typeof data['chapterTitle'] === 'string' || data['chapterTitle'] instanceof String)) {
            throw new Error("Expected the field `chapterTitle` to be a primitive type in the JSON string but got " + data['chapterTitle']);
        }
        // ensure the json data is a string
        if (data['paragraphReference'] && !(typeof data['paragraphReference'] === 'string' || data['paragraphReference'] instanceof String)) {
            throw new Error("Expected the field `paragraphReference` to be a primitive type in the JSON string but got " + data['paragraphReference']);
        }
        // ensure the json data is a string
        if (data['searchResultText'] && !(typeof data['searchResultText'] === 'string' || data['searchResultText'] instanceof String)) {
            throw new Error("Expected the field `searchResultText` to be a primitive type in the JSON string but got " + data['searchResultText']);
        }
        // ensure the json data is a string
        if (data['sectionTitle'] && !(typeof data['sectionTitle'] === 'string' || data['sectionTitle'] instanceof String)) {
            throw new Error("Expected the field `sectionTitle` to be a primitive type in the JSON string but got " + data['sectionTitle']);
        }
        // ensure the json data is a string
        if (data['sectionTitleChain'] && !(typeof data['sectionTitleChain'] === 'string' || data['sectionTitleChain'] instanceof String)) {
            throw new Error("Expected the field `sectionTitleChain` to be a primitive type in the JSON string but got " + data['sectionTitleChain']);
        }

        return true;
    }


}



/**
 * @member {Number} chapterNumber
 */
ErskineMayParagraphSearchResult.prototype['chapterNumber'] = undefined;

/**
 * @member {String} chapterTitle
 */
ErskineMayParagraphSearchResult.prototype['chapterTitle'] = undefined;

/**
 * @member {String} paragraphReference
 */
ErskineMayParagraphSearchResult.prototype['paragraphReference'] = undefined;

/**
 * @member {Number} partNumber
 */
ErskineMayParagraphSearchResult.prototype['partNumber'] = undefined;

/**
 * @member {String} searchResultText
 */
ErskineMayParagraphSearchResult.prototype['searchResultText'] = undefined;

/**
 * @member {Number} sectionId
 */
ErskineMayParagraphSearchResult.prototype['sectionId'] = undefined;

/**
 * @member {String} sectionTitle
 */
ErskineMayParagraphSearchResult.prototype['sectionTitle'] = undefined;

/**
 * @member {String} sectionTitleChain
 */
ErskineMayParagraphSearchResult.prototype['sectionTitleChain'] = undefined;






export default ErskineMayParagraphSearchResult;

