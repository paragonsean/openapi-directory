/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ErskineMayChapterOverview from './ErskineMayChapterOverview';

/**
 * The ErskineMayPart model module.
 * @module model/ErskineMayPart
 * @version v1
 */
class ErskineMayPart {
    /**
     * Constructs a new <code>ErskineMayPart</code>.
     * @alias module:model/ErskineMayPart
     */
    constructor() { 
        
        ErskineMayPart.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErskineMayPart</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErskineMayPart} obj Optional instance to populate.
     * @return {module:model/ErskineMayPart} The populated <code>ErskineMayPart</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErskineMayPart();

            if (data.hasOwnProperty('chapters')) {
                obj['chapters'] = ApiClient.convertToType(data['chapters'], [ErskineMayChapterOverview]);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('number')) {
                obj['number'] = ApiClient.convertToType(data['number'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErskineMayPart</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErskineMayPart</code>.
     */
    static validateJSON(data) {
        if (data['chapters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['chapters'])) {
                throw new Error("Expected the field `chapters` to be an array in the JSON data but got " + data['chapters']);
            }
            // validate the optional field `chapters` (array)
            for (const item of data['chapters']) {
                ErskineMayChapterOverview.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ErskineMayChapterOverview>} chapters
 */
ErskineMayPart.prototype['chapters'] = undefined;

/**
 * @member {String} description
 */
ErskineMayPart.prototype['description'] = undefined;

/**
 * @member {Number} number
 */
ErskineMayPart.prototype['number'] = undefined;

/**
 * @member {String} title
 */
ErskineMayPart.prototype['title'] = undefined;






export default ErskineMayPart;

