/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErskineMayIndexTerm.h
 *
 * 
 */

#ifndef OAIErskineMayIndexTerm_H
#define OAIErskineMayIndexTerm_H

#include <QJsonObject>

#include "OAIErskineMayIndexTermSeeLink.h"
#include "OAIErskineMayParagraphSearchResult.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErskineMayParagraphSearchResult;
class OAIErskineMayIndexTermSeeLink;

class OAIErskineMayIndexTerm : public OAIObject {
public:
    OAIErskineMayIndexTerm();
    OAIErskineMayIndexTerm(QString json);
    ~OAIErskineMayIndexTerm() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIErskineMayIndexTerm> getChildTerms() const;
    void setChildTerms(const QList<OAIErskineMayIndexTerm> &child_terms);
    bool is_child_terms_Set() const;
    bool is_child_terms_Valid() const;

    QString getDisplayAs() const;
    void setDisplayAs(const QString &display_as);
    bool is_display_as_Set() const;
    bool is_display_as_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIErskineMayIndexTerm getParentTerm() const;
    void setParentTerm(const OAIErskineMayIndexTerm &parent_term);
    bool is_parent_term_Set() const;
    bool is_parent_term_Valid() const;

    QList<OAIErskineMayParagraphSearchResult> getReferences() const;
    void setReferences(const QList<OAIErskineMayParagraphSearchResult> &references);
    bool is_references_Set() const;
    bool is_references_Valid() const;

    QList<OAIErskineMayIndexTermSeeLink> getSeeLinks() const;
    void setSeeLinks(const QList<OAIErskineMayIndexTermSeeLink> &see_links);
    bool is_see_links_Set() const;
    bool is_see_links_Valid() const;

    QString getTerm() const;
    void setTerm(const QString &term);
    bool is_term_Set() const;
    bool is_term_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIErskineMayIndexTerm> m_child_terms;
    bool m_child_terms_isSet;
    bool m_child_terms_isValid;

    QString m_display_as;
    bool m_display_as_isSet;
    bool m_display_as_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIErskineMayIndexTerm m_parent_term;
    bool m_parent_term_isSet;
    bool m_parent_term_isValid;

    QList<OAIErskineMayParagraphSearchResult> m_references;
    bool m_references_isSet;
    bool m_references_isValid;

    QList<OAIErskineMayIndexTermSeeLink> m_see_links;
    bool m_see_links_isSet;
    bool m_see_links_isValid;

    QString m_term;
    bool m_term_isSet;
    bool m_term_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErskineMayIndexTerm)

#endif // OAIErskineMayIndexTerm_H
