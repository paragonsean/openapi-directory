/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErskineMaySectionDetail.h
 *
 * 
 */

#ifndef OAIErskineMaySectionDetail_H
#define OAIErskineMaySectionDetail_H

#include <QJsonObject>

#include "OAIErskineMayFootnote.h"
#include "OAIErskineMaySectionOverview.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErskineMayFootnote;
class OAIErskineMaySectionOverview;

class OAIErskineMaySectionDetail : public OAIObject {
public:
    OAIErskineMaySectionDetail();
    OAIErskineMaySectionDetail(QString json);
    ~OAIErskineMaySectionDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getChapterNumber() const;
    void setChapterNumber(const qint32 &chapter_number);
    bool is_chapter_number_Set() const;
    bool is_chapter_number_Valid() const;

    QString getChapterTitle() const;
    void setChapterTitle(const QString &chapter_title);
    bool is_chapter_title_Set() const;
    bool is_chapter_title_Valid() const;

    QString getContentHtml() const;
    void setContentHtml(const QString &content_html);
    bool is_content_html_Set() const;
    bool is_content_html_Valid() const;

    QList<OAIErskineMayFootnote> getFootnotes() const;
    void setFootnotes(const QList<OAIErskineMayFootnote> &footnotes);
    bool is_footnotes_Set() const;
    bool is_footnotes_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsUpdated() const;
    void setIsUpdated(const bool &is_updated);
    bool is_is_updated_Set() const;
    bool is_is_updated_Valid() const;

    qint32 getParentSectionId() const;
    void setParentSectionId(const qint32 &parent_section_id);
    bool is_parent_section_id_Set() const;
    bool is_parent_section_id_Valid() const;

    QString getParentSectionTitle() const;
    void setParentSectionTitle(const QString &parent_section_title);
    bool is_parent_section_title_Set() const;
    bool is_parent_section_title_Valid() const;

    qint32 getPartNumber() const;
    void setPartNumber(const qint32 &part_number);
    bool is_part_number_Set() const;
    bool is_part_number_Valid() const;

    QString getPartTitle() const;
    void setPartTitle(const QString &part_title);
    bool is_part_title_Set() const;
    bool is_part_title_Valid() const;

    QList<OAIErskineMaySectionOverview> getSubSections() const;
    void setSubSections(const QList<OAIErskineMaySectionOverview> &sub_sections);
    bool is_sub_sections_Set() const;
    bool is_sub_sections_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getTitleChain() const;
    void setTitleChain(const QString &title_chain);
    bool is_title_chain_Set() const;
    bool is_title_chain_Valid() const;

    QDateTime getUpdatedDate() const;
    void setUpdatedDate(const QDateTime &updated_date);
    bool is_updated_date_Set() const;
    bool is_updated_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_chapter_number;
    bool m_chapter_number_isSet;
    bool m_chapter_number_isValid;

    QString m_chapter_title;
    bool m_chapter_title_isSet;
    bool m_chapter_title_isValid;

    QString m_content_html;
    bool m_content_html_isSet;
    bool m_content_html_isValid;

    QList<OAIErskineMayFootnote> m_footnotes;
    bool m_footnotes_isSet;
    bool m_footnotes_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_updated;
    bool m_is_updated_isSet;
    bool m_is_updated_isValid;

    qint32 m_parent_section_id;
    bool m_parent_section_id_isSet;
    bool m_parent_section_id_isValid;

    QString m_parent_section_title;
    bool m_parent_section_title_isSet;
    bool m_parent_section_title_isValid;

    qint32 m_part_number;
    bool m_part_number_isSet;
    bool m_part_number_isValid;

    QString m_part_title;
    bool m_part_title_isSet;
    bool m_part_title_isValid;

    QList<OAIErskineMaySectionOverview> m_sub_sections;
    bool m_sub_sections_isSet;
    bool m_sub_sections_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_title_chain;
    bool m_title_chain_isSet;
    bool m_title_chain_isValid;

    QDateTime m_updated_date;
    bool m_updated_date_isSet;
    bool m_updated_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErskineMaySectionDetail)

#endif // OAIErskineMaySectionDetail_H
