/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErskineMayParagraphSearchResultErskineMaySearch.h
 *
 * 
 */

#ifndef OAIErskineMayParagraphSearchResultErskineMaySearch_H
#define OAIErskineMayParagraphSearchResultErskineMaySearch_H

#include <QJsonObject>

#include "OAIErskineMayParagraphSearchResult.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErskineMayParagraphSearchResult;

class OAIErskineMayParagraphSearchResultErskineMaySearch : public OAIObject {
public:
    OAIErskineMayParagraphSearchResultErskineMaySearch();
    OAIErskineMayParagraphSearchResultErskineMaySearch(QString json);
    ~OAIErskineMayParagraphSearchResultErskineMaySearch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIErskineMayParagraphSearchResult> getSearchResults() const;
    void setSearchResults(const QList<OAIErskineMayParagraphSearchResult> &search_results);
    bool is_search_results_Set() const;
    bool is_search_results_Valid() const;

    QString getSearchTerm() const;
    void setSearchTerm(const QString &search_term);
    bool is_search_term_Set() const;
    bool is_search_term_Valid() const;

    QList<QString> getSearchTerms() const;
    void setSearchTerms(const QList<QString> &search_terms);
    bool is_search_terms_Set() const;
    bool is_search_terms_Valid() const;

    qint32 getSkip() const;
    void setSkip(const qint32 &skip);
    bool is_skip_Set() const;
    bool is_skip_Valid() const;

    QString getSuggestedSearch() const;
    void setSuggestedSearch(const QString &suggested_search);
    bool is_suggested_search_Set() const;
    bool is_suggested_search_Valid() const;

    qint32 getTake() const;
    void setTake(const qint32 &take);
    bool is_take_Set() const;
    bool is_take_Valid() const;

    qint32 getTotalResults() const;
    void setTotalResults(const qint32 &total_results);
    bool is_total_results_Set() const;
    bool is_total_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIErskineMayParagraphSearchResult> m_search_results;
    bool m_search_results_isSet;
    bool m_search_results_isValid;

    QString m_search_term;
    bool m_search_term_isSet;
    bool m_search_term_isValid;

    QList<QString> m_search_terms;
    bool m_search_terms_isSet;
    bool m_search_terms_isValid;

    qint32 m_skip;
    bool m_skip_isSet;
    bool m_skip_isValid;

    QString m_suggested_search;
    bool m_suggested_search_isSet;
    bool m_suggested_search_isValid;

    qint32 m_take;
    bool m_take_isSet;
    bool m_take_isValid;

    qint32 m_total_results;
    bool m_total_results_isSet;
    bool m_total_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErskineMayParagraphSearchResultErskineMaySearch)

#endif // OAIErskineMayParagraphSearchResultErskineMaySearch_H
