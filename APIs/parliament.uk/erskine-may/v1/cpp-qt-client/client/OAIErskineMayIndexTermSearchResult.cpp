/**
 * Erskine May API
 * An API that allows querying of Erskine May data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIErskineMayIndexTermSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIErskineMayIndexTermSearchResult::OAIErskineMayIndexTermSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIErskineMayIndexTermSearchResult::OAIErskineMayIndexTermSearchResult() {
    this->initializeModel();
}

OAIErskineMayIndexTermSearchResult::~OAIErskineMayIndexTermSearchResult() {}

void OAIErskineMayIndexTermSearchResult::initializeModel() {

    m_display_as_isSet = false;
    m_display_as_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_see_value_isSet = false;
    m_see_value_isValid = false;
}

void OAIErskineMayIndexTermSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIErskineMayIndexTermSearchResult::fromJsonObject(QJsonObject json) {

    m_display_as_isValid = ::OpenAPI::fromJsonValue(m_display_as, json[QString("displayAs")]);
    m_display_as_isSet = !json[QString("displayAs")].isNull() && m_display_as_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_see_value_isValid = ::OpenAPI::fromJsonValue(m_see_value, json[QString("seeValue")]);
    m_see_value_isSet = !json[QString("seeValue")].isNull() && m_see_value_isValid;
}

QString OAIErskineMayIndexTermSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIErskineMayIndexTermSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_display_as_isSet) {
        obj.insert(QString("displayAs"), ::OpenAPI::toJsonValue(m_display_as));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_see_value_isSet) {
        obj.insert(QString("seeValue"), ::OpenAPI::toJsonValue(m_see_value));
    }
    return obj;
}

QString OAIErskineMayIndexTermSearchResult::getDisplayAs() const {
    return m_display_as;
}
void OAIErskineMayIndexTermSearchResult::setDisplayAs(const QString &display_as) {
    m_display_as = display_as;
    m_display_as_isSet = true;
}

bool OAIErskineMayIndexTermSearchResult::is_display_as_Set() const{
    return m_display_as_isSet;
}

bool OAIErskineMayIndexTermSearchResult::is_display_as_Valid() const{
    return m_display_as_isValid;
}

qint32 OAIErskineMayIndexTermSearchResult::getId() const {
    return m_id;
}
void OAIErskineMayIndexTermSearchResult::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIErskineMayIndexTermSearchResult::is_id_Set() const{
    return m_id_isSet;
}

bool OAIErskineMayIndexTermSearchResult::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIErskineMayIndexTermSearchResult::getSeeValue() const {
    return m_see_value;
}
void OAIErskineMayIndexTermSearchResult::setSeeValue(const QString &see_value) {
    m_see_value = see_value;
    m_see_value_isSet = true;
}

bool OAIErskineMayIndexTermSearchResult::is_see_value_Set() const{
    return m_see_value_isSet;
}

bool OAIErskineMayIndexTermSearchResult::is_see_value_Valid() const{
    return m_see_value_isValid;
}

bool OAIErskineMayIndexTermSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_as_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_see_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIErskineMayIndexTermSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
