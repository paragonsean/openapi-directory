# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErskineMaySectionOverview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, sub_sections: List[ErskineMaySectionOverview]=None, title: str=None, title_chain: str=None):
        """ErskineMaySectionOverview - a model defined in OpenAPI

        :param id: The id of this ErskineMaySectionOverview.
        :param sub_sections: The sub_sections of this ErskineMaySectionOverview.
        :param title: The title of this ErskineMaySectionOverview.
        :param title_chain: The title_chain of this ErskineMaySectionOverview.
        """
        self.openapi_types = {
            'id': int,
            'sub_sections': List[ErskineMaySectionOverview],
            'title': str,
            'title_chain': str
        }

        self.attribute_map = {
            'id': 'id',
            'sub_sections': 'subSections',
            'title': 'title',
            'title_chain': 'titleChain'
        }

        self._id = id
        self._sub_sections = sub_sections
        self._title = title
        self._title_chain = title_chain

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErskineMaySectionOverview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErskineMaySectionOverview of this ErskineMaySectionOverview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ErskineMaySectionOverview.


        :return: The id of this ErskineMaySectionOverview.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ErskineMaySectionOverview.


        :param id: The id of this ErskineMaySectionOverview.
        :type id: int
        """

        self._id = id

    @property
    def sub_sections(self):
        """Gets the sub_sections of this ErskineMaySectionOverview.


        :return: The sub_sections of this ErskineMaySectionOverview.
        :rtype: List[ErskineMaySectionOverview]
        """
        return self._sub_sections

    @sub_sections.setter
    def sub_sections(self, sub_sections):
        """Sets the sub_sections of this ErskineMaySectionOverview.


        :param sub_sections: The sub_sections of this ErskineMaySectionOverview.
        :type sub_sections: List[ErskineMaySectionOverview]
        """

        self._sub_sections = sub_sections

    @property
    def title(self):
        """Gets the title of this ErskineMaySectionOverview.


        :return: The title of this ErskineMaySectionOverview.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ErskineMaySectionOverview.


        :param title: The title of this ErskineMaySectionOverview.
        :type title: str
        """

        self._title = title

    @property
    def title_chain(self):
        """Gets the title_chain of this ErskineMaySectionOverview.


        :return: The title_chain of this ErskineMaySectionOverview.
        :rtype: str
        """
        return self._title_chain

    @title_chain.setter
    def title_chain(self, title_chain):
        """Sets the title_chain of this ErskineMaySectionOverview.


        :param title_chain: The title_chain of this ErskineMaySectionOverview.
        :type title_chain: str
        """

        self._title_chain = title_chain
