# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.erskine_may_index_term_search_result import ErskineMayIndexTermSearchResult
from openapi_server import util


class ErskineMayIndexTermSearchResultErskineMaySearch(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, search_results: List[ErskineMayIndexTermSearchResult]=None, search_term: str=None, search_terms: List[str]=None, skip: int=None, suggested_search: str=None, take: int=None, total_results: int=None):
        """ErskineMayIndexTermSearchResultErskineMaySearch - a model defined in OpenAPI

        :param search_results: The search_results of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :param search_term: The search_term of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :param search_terms: The search_terms of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :param skip: The skip of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :param suggested_search: The suggested_search of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :param take: The take of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :param total_results: The total_results of this ErskineMayIndexTermSearchResultErskineMaySearch.
        """
        self.openapi_types = {
            'search_results': List[ErskineMayIndexTermSearchResult],
            'search_term': str,
            'search_terms': List[str],
            'skip': int,
            'suggested_search': str,
            'take': int,
            'total_results': int
        }

        self.attribute_map = {
            'search_results': 'searchResults',
            'search_term': 'searchTerm',
            'search_terms': 'searchTerms',
            'skip': 'skip',
            'suggested_search': 'suggestedSearch',
            'take': 'take',
            'total_results': 'totalResults'
        }

        self._search_results = search_results
        self._search_term = search_term
        self._search_terms = search_terms
        self._skip = skip
        self._suggested_search = suggested_search
        self._take = take
        self._total_results = total_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErskineMayIndexTermSearchResultErskineMaySearch':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErskineMayIndexTermSearchResultErskineMaySearch of this ErskineMayIndexTermSearchResultErskineMaySearch.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def search_results(self):
        """Gets the search_results of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :return: The search_results of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :rtype: List[ErskineMayIndexTermSearchResult]
        """
        return self._search_results

    @search_results.setter
    def search_results(self, search_results):
        """Sets the search_results of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :param search_results: The search_results of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :type search_results: List[ErskineMayIndexTermSearchResult]
        """

        self._search_results = search_results

    @property
    def search_term(self):
        """Gets the search_term of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :return: The search_term of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :rtype: str
        """
        return self._search_term

    @search_term.setter
    def search_term(self, search_term):
        """Sets the search_term of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :param search_term: The search_term of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :type search_term: str
        """

        self._search_term = search_term

    @property
    def search_terms(self):
        """Gets the search_terms of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :return: The search_terms of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :rtype: List[str]
        """
        return self._search_terms

    @search_terms.setter
    def search_terms(self, search_terms):
        """Sets the search_terms of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :param search_terms: The search_terms of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :type search_terms: List[str]
        """

        self._search_terms = search_terms

    @property
    def skip(self):
        """Gets the skip of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :return: The skip of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :rtype: int
        """
        return self._skip

    @skip.setter
    def skip(self, skip):
        """Sets the skip of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :param skip: The skip of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :type skip: int
        """

        self._skip = skip

    @property
    def suggested_search(self):
        """Gets the suggested_search of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :return: The suggested_search of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :rtype: str
        """
        return self._suggested_search

    @suggested_search.setter
    def suggested_search(self, suggested_search):
        """Sets the suggested_search of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :param suggested_search: The suggested_search of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :type suggested_search: str
        """

        self._suggested_search = suggested_search

    @property
    def take(self):
        """Gets the take of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :return: The take of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :rtype: int
        """
        return self._take

    @take.setter
    def take(self, take):
        """Sets the take of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :param take: The take of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :type take: int
        """

        self._take = take

    @property
    def total_results(self):
        """Gets the total_results of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :return: The total_results of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :rtype: int
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results):
        """Sets the total_results of this ErskineMayIndexTermSearchResultErskineMaySearch.


        :param total_results: The total_results of this ErskineMayIndexTermSearchResultErskineMaySearch.
        :type total_results: int
        """

        self._total_results = total_results
