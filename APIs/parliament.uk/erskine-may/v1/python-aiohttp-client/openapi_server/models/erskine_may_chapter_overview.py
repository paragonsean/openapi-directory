# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.erskine_may_section_overview import ErskineMaySectionOverview
from openapi_server import util


class ErskineMayChapterOverview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, number: int=None, part_number: int=None, sections: List[ErskineMaySectionOverview]=None, title: str=None):
        """ErskineMayChapterOverview - a model defined in OpenAPI

        :param description: The description of this ErskineMayChapterOverview.
        :param number: The number of this ErskineMayChapterOverview.
        :param part_number: The part_number of this ErskineMayChapterOverview.
        :param sections: The sections of this ErskineMayChapterOverview.
        :param title: The title of this ErskineMayChapterOverview.
        """
        self.openapi_types = {
            'description': str,
            'number': int,
            'part_number': int,
            'sections': List[ErskineMaySectionOverview],
            'title': str
        }

        self.attribute_map = {
            'description': 'description',
            'number': 'number',
            'part_number': 'partNumber',
            'sections': 'sections',
            'title': 'title'
        }

        self._description = description
        self._number = number
        self._part_number = part_number
        self._sections = sections
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErskineMayChapterOverview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErskineMayChapterOverview of this ErskineMayChapterOverview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ErskineMayChapterOverview.


        :return: The description of this ErskineMayChapterOverview.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ErskineMayChapterOverview.


        :param description: The description of this ErskineMayChapterOverview.
        :type description: str
        """

        self._description = description

    @property
    def number(self):
        """Gets the number of this ErskineMayChapterOverview.


        :return: The number of this ErskineMayChapterOverview.
        :rtype: int
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this ErskineMayChapterOverview.


        :param number: The number of this ErskineMayChapterOverview.
        :type number: int
        """

        self._number = number

    @property
    def part_number(self):
        """Gets the part_number of this ErskineMayChapterOverview.


        :return: The part_number of this ErskineMayChapterOverview.
        :rtype: int
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number):
        """Sets the part_number of this ErskineMayChapterOverview.


        :param part_number: The part_number of this ErskineMayChapterOverview.
        :type part_number: int
        """

        self._part_number = part_number

    @property
    def sections(self):
        """Gets the sections of this ErskineMayChapterOverview.


        :return: The sections of this ErskineMayChapterOverview.
        :rtype: List[ErskineMaySectionOverview]
        """
        return self._sections

    @sections.setter
    def sections(self, sections):
        """Sets the sections of this ErskineMayChapterOverview.


        :param sections: The sections of this ErskineMayChapterOverview.
        :type sections: List[ErskineMaySectionOverview]
        """

        self._sections = sections

    @property
    def title(self):
        """Gets the title of this ErskineMayChapterOverview.


        :return: The title of this ErskineMayChapterOverview.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ErskineMayChapterOverview.


        :param title: The title of this ErskineMayChapterOverview.
        :type title: str
        """

        self._title = title
