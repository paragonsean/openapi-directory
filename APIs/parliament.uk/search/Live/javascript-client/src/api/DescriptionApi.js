/**
 * UK Parliament Search Service
 * Performs search on parliament.uk domain. Implements [OpenSearch specification](https://github.com/dewitt/opensearch). Throttled at 10 requests per second per IP address.
 *
 * The version of the OpenAPI document: Live
 * Contact: data@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Description service.
* @module api/DescriptionApi
* @version Live
*/
export default class DescriptionApi {

    /**
    * Constructs a new DescriptionApi. 
    * @alias module:api/DescriptionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the descriptionGet operation.
     * @callback module:api/DescriptionApi~descriptionGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * OpenSearch description document
     * @param {module:api/DescriptionApi~descriptionGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    descriptionGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/opensearchdescription+xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/description', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
