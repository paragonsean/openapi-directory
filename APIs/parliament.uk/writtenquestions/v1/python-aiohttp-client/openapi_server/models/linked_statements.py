# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.statement_link_type_enum import StatementLinkTypeEnum
from openapi_server import util


class LinkedStatements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, link_date: datetime=None, link_type: StatementLinkTypeEnum=None, linked_statement_id: int=None):
        """LinkedStatements - a model defined in OpenAPI

        :param link_date: The link_date of this LinkedStatements.
        :param link_type: The link_type of this LinkedStatements.
        :param linked_statement_id: The linked_statement_id of this LinkedStatements.
        """
        self.openapi_types = {
            'link_date': datetime,
            'link_type': StatementLinkTypeEnum,
            'linked_statement_id': int
        }

        self.attribute_map = {
            'link_date': 'linkDate',
            'link_type': 'linkType',
            'linked_statement_id': 'linkedStatementId'
        }

        self._link_date = link_date
        self._link_type = link_type
        self._linked_statement_id = linked_statement_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedStatements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedStatements of this LinkedStatements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def link_date(self):
        """Gets the link_date of this LinkedStatements.


        :return: The link_date of this LinkedStatements.
        :rtype: datetime
        """
        return self._link_date

    @link_date.setter
    def link_date(self, link_date):
        """Sets the link_date of this LinkedStatements.


        :param link_date: The link_date of this LinkedStatements.
        :type link_date: datetime
        """

        self._link_date = link_date

    @property
    def link_type(self):
        """Gets the link_type of this LinkedStatements.


        :return: The link_type of this LinkedStatements.
        :rtype: StatementLinkTypeEnum
        """
        return self._link_type

    @link_type.setter
    def link_type(self, link_type):
        """Sets the link_type of this LinkedStatements.


        :param link_type: The link_type of this LinkedStatements.
        :type link_type: StatementLinkTypeEnum
        """

        self._link_type = link_type

    @property
    def linked_statement_id(self):
        """Gets the linked_statement_id of this LinkedStatements.


        :return: The linked_statement_id of this LinkedStatements.
        :rtype: int
        """
        return self._linked_statement_id

    @linked_statement_id.setter
    def linked_statement_id(self, linked_statement_id):
        """Sets the linked_statement_id of this LinkedStatements.


        :param linked_statement_id: The linked_statement_id of this LinkedStatements.
        :type linked_statement_id: int
        """

        self._linked_statement_id = linked_statement_id
