# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.house_enum import HouseEnum
from openapi_server import util


class DailyReportViewModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, file_size_bytes: int=None, house: HouseEnum=None, url: str=None):
        """DailyReportViewModel - a model defined in OpenAPI

        :param _date: The _date of this DailyReportViewModel.
        :param file_size_bytes: The file_size_bytes of this DailyReportViewModel.
        :param house: The house of this DailyReportViewModel.
        :param url: The url of this DailyReportViewModel.
        """
        self.openapi_types = {
            '_date': datetime,
            'file_size_bytes': int,
            'house': HouseEnum,
            'url': str
        }

        self.attribute_map = {
            '_date': 'date',
            'file_size_bytes': 'fileSizeBytes',
            'house': 'house',
            'url': 'url'
        }

        self.__date = _date
        self._file_size_bytes = file_size_bytes
        self._house = house
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DailyReportViewModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DailyReportViewModel of this DailyReportViewModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this DailyReportViewModel.


        :return: The _date of this DailyReportViewModel.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this DailyReportViewModel.


        :param _date: The _date of this DailyReportViewModel.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def file_size_bytes(self):
        """Gets the file_size_bytes of this DailyReportViewModel.


        :return: The file_size_bytes of this DailyReportViewModel.
        :rtype: int
        """
        return self._file_size_bytes

    @file_size_bytes.setter
    def file_size_bytes(self, file_size_bytes):
        """Sets the file_size_bytes of this DailyReportViewModel.


        :param file_size_bytes: The file_size_bytes of this DailyReportViewModel.
        :type file_size_bytes: int
        """

        self._file_size_bytes = file_size_bytes

    @property
    def house(self):
        """Gets the house of this DailyReportViewModel.


        :return: The house of this DailyReportViewModel.
        :rtype: HouseEnum
        """
        return self._house

    @house.setter
    def house(self, house):
        """Sets the house of this DailyReportViewModel.


        :param house: The house of this DailyReportViewModel.
        :type house: HouseEnum
        """

        self._house = house

    @property
    def url(self):
        """Gets the url of this DailyReportViewModel.


        :return: The url of this DailyReportViewModel.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this DailyReportViewModel.


        :param url: The url of this DailyReportViewModel.
        :type url: str
        """

        self._url = url
