/**
 * Written Questions Service API
 * Data around written questions and answers, as well as written ministerial statements.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Link from './Link';
import QuestionsViewModel from './QuestionsViewModel';

/**
 * The QuestionsViewModelItem model module.
 * @module model/QuestionsViewModelItem
 * @version v1
 */
class QuestionsViewModelItem {
    /**
     * Constructs a new <code>QuestionsViewModelItem</code>.
     * @alias module:model/QuestionsViewModelItem
     */
    constructor() { 
        
        QuestionsViewModelItem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QuestionsViewModelItem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QuestionsViewModelItem} obj Optional instance to populate.
     * @return {module:model/QuestionsViewModelItem} The populated <code>QuestionsViewModelItem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QuestionsViewModelItem();

            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [Link]);
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = QuestionsViewModel.constructFromObject(data['value']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QuestionsViewModelItem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QuestionsViewModelItem</code>.
     */
    static validateJSON(data) {
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                Link.validateJSON(item);
            };
        }
        // validate the optional field `value`
        if (data['value']) { // data not null
          QuestionsViewModel.validateJSON(data['value']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/Link>} links
 */
QuestionsViewModelItem.prototype['links'] = undefined;

/**
 * @member {module:model/QuestionsViewModel} value
 */
QuestionsViewModelItem.prototype['value'] = undefined;






export default QuestionsViewModelItem;

