/**
 * Written Questions Service API
 * Data around written questions and answers, as well as written ministerial statements.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Answered from './model/Answered';
import AttachmentViewModel from './model/AttachmentViewModel';
import DailyReportViewModel from './model/DailyReportViewModel';
import DailyReportViewModelItem from './model/DailyReportViewModelItem';
import DailyReportViewModelSearchResult from './model/DailyReportViewModelSearchResult';
import GroupedQuestionViewModel from './model/GroupedQuestionViewModel';
import HouseEnum from './model/HouseEnum';
import Link from './model/Link';
import LinkedStatements from './model/LinkedStatements';
import MemberViewModel from './model/MemberViewModel';
import ProblemDetails from './model/ProblemDetails';
import QuestionStatusEnum from './model/QuestionStatusEnum';
import QuestionsViewModel from './model/QuestionsViewModel';
import QuestionsViewModelItem from './model/QuestionsViewModelItem';
import QuestionsViewModelSearchResult from './model/QuestionsViewModelSearchResult';
import StatementLinkTypeEnum from './model/StatementLinkTypeEnum';
import StatementsViewModel from './model/StatementsViewModel';
import StatementsViewModelItem from './model/StatementsViewModelItem';
import StatementsViewModelSearchResult from './model/StatementsViewModelSearchResult';
import DailyReportsApi from './api/DailyReportsApi';
import WrittenQuestionsApi from './api/WrittenQuestionsApi';
import WrittenStatementsApi from './api/WrittenStatementsApi';


/**
* Data around written questions and answers, as well as written ministerial statements..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var WrittenQuestionsServiceApi = require('index'); // See note below*.
* var xxxSvc = new WrittenQuestionsServiceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new WrittenQuestionsServiceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new WrittenQuestionsServiceApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new WrittenQuestionsServiceApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Answered model constructor.
     * @property {module:model/Answered}
     */
    Answered,

    /**
     * The AttachmentViewModel model constructor.
     * @property {module:model/AttachmentViewModel}
     */
    AttachmentViewModel,

    /**
     * The DailyReportViewModel model constructor.
     * @property {module:model/DailyReportViewModel}
     */
    DailyReportViewModel,

    /**
     * The DailyReportViewModelItem model constructor.
     * @property {module:model/DailyReportViewModelItem}
     */
    DailyReportViewModelItem,

    /**
     * The DailyReportViewModelSearchResult model constructor.
     * @property {module:model/DailyReportViewModelSearchResult}
     */
    DailyReportViewModelSearchResult,

    /**
     * The GroupedQuestionViewModel model constructor.
     * @property {module:model/GroupedQuestionViewModel}
     */
    GroupedQuestionViewModel,

    /**
     * The HouseEnum model constructor.
     * @property {module:model/HouseEnum}
     */
    HouseEnum,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The LinkedStatements model constructor.
     * @property {module:model/LinkedStatements}
     */
    LinkedStatements,

    /**
     * The MemberViewModel model constructor.
     * @property {module:model/MemberViewModel}
     */
    MemberViewModel,

    /**
     * The ProblemDetails model constructor.
     * @property {module:model/ProblemDetails}
     */
    ProblemDetails,

    /**
     * The QuestionStatusEnum model constructor.
     * @property {module:model/QuestionStatusEnum}
     */
    QuestionStatusEnum,

    /**
     * The QuestionsViewModel model constructor.
     * @property {module:model/QuestionsViewModel}
     */
    QuestionsViewModel,

    /**
     * The QuestionsViewModelItem model constructor.
     * @property {module:model/QuestionsViewModelItem}
     */
    QuestionsViewModelItem,

    /**
     * The QuestionsViewModelSearchResult model constructor.
     * @property {module:model/QuestionsViewModelSearchResult}
     */
    QuestionsViewModelSearchResult,

    /**
     * The StatementLinkTypeEnum model constructor.
     * @property {module:model/StatementLinkTypeEnum}
     */
    StatementLinkTypeEnum,

    /**
     * The StatementsViewModel model constructor.
     * @property {module:model/StatementsViewModel}
     */
    StatementsViewModel,

    /**
     * The StatementsViewModelItem model constructor.
     * @property {module:model/StatementsViewModelItem}
     */
    StatementsViewModelItem,

    /**
     * The StatementsViewModelSearchResult model constructor.
     * @property {module:model/StatementsViewModelSearchResult}
     */
    StatementsViewModelSearchResult,

    /**
    * The DailyReportsApi service constructor.
    * @property {module:api/DailyReportsApi}
    */
    DailyReportsApi,

    /**
    * The WrittenQuestionsApi service constructor.
    * @property {module:api/WrittenQuestionsApi}
    */
    WrittenQuestionsApi,

    /**
    * The WrittenStatementsApi service constructor.
    * @property {module:api/WrittenStatementsApi}
    */
    WrittenStatementsApi
};
