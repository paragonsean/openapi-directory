/**
 * Written Questions Service API
 * Data around written questions and answers, as well as written ministerial statements.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatementLinkTypeEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatementLinkTypeEnum::OAIStatementLinkTypeEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatementLinkTypeEnum::OAIStatementLinkTypeEnum() {
    this->initializeModel();
}

OAIStatementLinkTypeEnum::~OAIStatementLinkTypeEnum() {}

void OAIStatementLinkTypeEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStatementLinkTypeEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStatementLinkTypeEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CorrectedStatement", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatementLinkTypeEnum::CORRECTEDSTATEMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CorrectedAnswer", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatementLinkTypeEnum::CORRECTEDANSWER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("JointStatement", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStatementLinkTypeEnum::JOINTSTATEMENT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStatementLinkTypeEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStatementLinkTypeEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStatementLinkTypeEnum::CORRECTEDSTATEMENT:
            val = "CorrectedStatement";
            break;
        case eOAIStatementLinkTypeEnum::CORRECTEDANSWER:
            val = "CorrectedAnswer";
            break;
        case eOAIStatementLinkTypeEnum::JOINTSTATEMENT:
            val = "JointStatement";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStatementLinkTypeEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStatementLinkTypeEnum::eOAIStatementLinkTypeEnum OAIStatementLinkTypeEnum::getValue() const {
    return m_value;
}

void OAIStatementLinkTypeEnum::setValue(const OAIStatementLinkTypeEnum::eOAIStatementLinkTypeEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStatementLinkTypeEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIStatementLinkTypeEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
