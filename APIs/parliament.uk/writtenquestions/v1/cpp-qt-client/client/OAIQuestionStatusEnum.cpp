/**
 * Written Questions Service API
 * Data around written questions and answers, as well as written ministerial statements.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuestionStatusEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuestionStatusEnum::OAIQuestionStatusEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuestionStatusEnum::OAIQuestionStatusEnum() {
    this->initializeModel();
}

OAIQuestionStatusEnum::~OAIQuestionStatusEnum() {}

void OAIQuestionStatusEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIQuestionStatusEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIQuestionStatusEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NotAnswered", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuestionStatusEnum::NOTANSWERED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AnsweredOnly", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuestionStatusEnum::ANSWEREDONLY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AllQuestions", Qt::CaseInsensitive) == 0) {
        m_value = eOAIQuestionStatusEnum::ALLQUESTIONS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIQuestionStatusEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIQuestionStatusEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIQuestionStatusEnum::NOTANSWERED:
            val = "NotAnswered";
            break;
        case eOAIQuestionStatusEnum::ANSWEREDONLY:
            val = "AnsweredOnly";
            break;
        case eOAIQuestionStatusEnum::ALLQUESTIONS:
            val = "AllQuestions";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIQuestionStatusEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIQuestionStatusEnum::eOAIQuestionStatusEnum OAIQuestionStatusEnum::getValue() const {
    return m_value;
}

void OAIQuestionStatusEnum::setValue(const OAIQuestionStatusEnum::eOAIQuestionStatusEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIQuestionStatusEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIQuestionStatusEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
