/**
 * Written Questions Service API
 * Data around written questions and answers, as well as written ministerial statements.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStatementsViewModel.h
 *
 * 
 */

#ifndef OAIStatementsViewModel_H
#define OAIStatementsViewModel_H

#include <QJsonObject>

#include "OAIAttachmentViewModel.h"
#include "OAIHouseEnum.h"
#include "OAILinkedStatements.h"
#include "OAIMemberViewModel.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachmentViewModel;
class OAILinkedStatements;
class OAIMemberViewModel;

class OAIStatementsViewModel : public OAIObject {
public:
    OAIStatementsViewModel();
    OAIStatementsViewModel(QString json);
    ~OAIStatementsViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAnsweringBodyId() const;
    void setAnsweringBodyId(const qint32 &answering_body_id);
    bool is_answering_body_id_Set() const;
    bool is_answering_body_id_Valid() const;

    QString getAnsweringBodyName() const;
    void setAnsweringBodyName(const QString &answering_body_name);
    bool is_answering_body_name_Set() const;
    bool is_answering_body_name_Valid() const;

    QList<OAIAttachmentViewModel> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentViewModel> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QDateTime getDateMade() const;
    void setDateMade(const QDateTime &date_made);
    bool is_date_made_Set() const;
    bool is_date_made_Valid() const;

    bool isHasAttachments() const;
    void setHasAttachments(const bool &has_attachments);
    bool is_has_attachments_Set() const;
    bool is_has_attachments_Valid() const;

    bool isHasLinkedStatements() const;
    void setHasLinkedStatements(const bool &has_linked_statements);
    bool is_has_linked_statements_Set() const;
    bool is_has_linked_statements_Valid() const;

    OAIHouseEnum getHouse() const;
    void setHouse(const OAIHouseEnum &house);
    bool is_house_Set() const;
    bool is_house_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAILinkedStatements> getLinkedStatements() const;
    void setLinkedStatements(const QList<OAILinkedStatements> &linked_statements);
    bool is_linked_statements_Set() const;
    bool is_linked_statements_Valid() const;

    OAIMemberViewModel getMember() const;
    void setMember(const OAIMemberViewModel &member);
    bool is_member_Set() const;
    bool is_member_Valid() const;

    qint32 getMemberId() const;
    void setMemberId(const qint32 &member_id);
    bool is_member_id_Set() const;
    bool is_member_id_Valid() const;

    QString getMemberRole() const;
    void setMemberRole(const QString &member_role);
    bool is_member_role_Set() const;
    bool is_member_role_Valid() const;

    qint32 getNoticeNumber() const;
    void setNoticeNumber(const qint32 &notice_number);
    bool is_notice_number_Set() const;
    bool is_notice_number_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUin() const;
    void setUin(const QString &uin);
    bool is_uin_Set() const;
    bool is_uin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_answering_body_id;
    bool m_answering_body_id_isSet;
    bool m_answering_body_id_isValid;

    QString m_answering_body_name;
    bool m_answering_body_name_isSet;
    bool m_answering_body_name_isValid;

    QList<OAIAttachmentViewModel> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QDateTime m_date_made;
    bool m_date_made_isSet;
    bool m_date_made_isValid;

    bool m_has_attachments;
    bool m_has_attachments_isSet;
    bool m_has_attachments_isValid;

    bool m_has_linked_statements;
    bool m_has_linked_statements_isSet;
    bool m_has_linked_statements_isValid;

    OAIHouseEnum m_house;
    bool m_house_isSet;
    bool m_house_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAILinkedStatements> m_linked_statements;
    bool m_linked_statements_isSet;
    bool m_linked_statements_isValid;

    OAIMemberViewModel m_member;
    bool m_member_isSet;
    bool m_member_isValid;

    qint32 m_member_id;
    bool m_member_id_isSet;
    bool m_member_id_isValid;

    QString m_member_role;
    bool m_member_role_isSet;
    bool m_member_role_isValid;

    qint32 m_notice_number;
    bool m_notice_number_isSet;
    bool m_notice_number_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_uin;
    bool m_uin_isSet;
    bool m_uin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStatementsViewModel)

#endif // OAIStatementsViewModel_H
