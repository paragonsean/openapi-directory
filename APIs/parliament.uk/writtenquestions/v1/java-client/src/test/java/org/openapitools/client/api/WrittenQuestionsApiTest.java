/*
 * Written Questions Service API
 * Data around written questions and answers, as well as written ministerial statements.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Answered;
import org.openapitools.client.model.HouseEnum;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ProblemDetails;
import org.openapitools.client.model.QuestionStatusEnum;
import org.openapitools.client.model.QuestionsViewModelItem;
import org.openapitools.client.model.QuestionsViewModelSearchResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WrittenQuestionsApi
 */
@Disabled
public class WrittenQuestionsApiTest {

    private final WrittenQuestionsApi api = new WrittenQuestionsApi();

    /**
     * Returns a written question
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiWrittenquestionsQuestionsDateUinGetTest() throws ApiException {
        OffsetDateTime date = null;
        String uin = null;
        Boolean expandMember = null;
        QuestionsViewModelItem response = api.apiWrittenquestionsQuestionsDateUinGet(date, uin, expandMember);
        // TODO: test validations
    }

    /**
     * Returns a list of written questions
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiWrittenquestionsQuestionsGetTest() throws ApiException {
        Integer askingMemberId = null;
        Integer answeringMemberId = null;
        OffsetDateTime tabledWhenFrom = null;
        OffsetDateTime tabledWhenTo = null;
        Answered answered = null;
        OffsetDateTime answeredWhenFrom = null;
        OffsetDateTime answeredWhenTo = null;
        QuestionStatusEnum questionStatus = null;
        Boolean includeWithdrawn = null;
        Boolean expandMember = null;
        OffsetDateTime correctedWhenFrom = null;
        OffsetDateTime correctedWhenTo = null;
        String searchTerm = null;
        String uIN = null;
        List<Integer> answeringBodies = null;
        List<Integer> members = null;
        HouseEnum house = null;
        Integer skip = null;
        Integer take = null;
        QuestionsViewModelSearchResult response = api.apiWrittenquestionsQuestionsGet(askingMemberId, answeringMemberId, tabledWhenFrom, tabledWhenTo, answered, answeredWhenFrom, answeredWhenTo, questionStatus, includeWithdrawn, expandMember, correctedWhenFrom, correctedWhenTo, searchTerm, uIN, answeringBodies, members, house, skip, take);
        // TODO: test validations
    }

    /**
     * Returns a written question
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiWrittenquestionsQuestionsIdGetTest() throws ApiException {
        Integer id = null;
        Boolean expandMember = null;
        QuestionsViewModelItem response = api.apiWrittenquestionsQuestionsIdGet(id, expandMember);
        // TODO: test validations
    }

}
