/*
 * Written Questions Service API
 * Data around written questions and answers, as well as written ministerial statements.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AttachmentViewModel;
import org.openapitools.client.model.GroupedQuestionViewModel;
import org.openapitools.client.model.HouseEnum;
import org.openapitools.client.model.MemberViewModel;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for QuestionsViewModel
 */
public class QuestionsViewModelTest {
    private final QuestionsViewModel model = new QuestionsViewModel();

    /**
     * Model tests for QuestionsViewModel
     */
    @Test
    public void testQuestionsViewModel() {
        // TODO: test QuestionsViewModel
    }

    /**
     * Test the property 'answerIsCorrection'
     */
    @Test
    public void answerIsCorrectionTest() {
        // TODO: test answerIsCorrection
    }

    /**
     * Test the property 'answerIsHolding'
     */
    @Test
    public void answerIsHoldingTest() {
        // TODO: test answerIsHolding
    }

    /**
     * Test the property 'answerText'
     */
    @Test
    public void answerTextTest() {
        // TODO: test answerText
    }

    /**
     * Test the property 'answeringBodyId'
     */
    @Test
    public void answeringBodyIdTest() {
        // TODO: test answeringBodyId
    }

    /**
     * Test the property 'answeringBodyName'
     */
    @Test
    public void answeringBodyNameTest() {
        // TODO: test answeringBodyName
    }

    /**
     * Test the property 'answeringMember'
     */
    @Test
    public void answeringMemberTest() {
        // TODO: test answeringMember
    }

    /**
     * Test the property 'answeringMemberId'
     */
    @Test
    public void answeringMemberIdTest() {
        // TODO: test answeringMemberId
    }

    /**
     * Test the property 'askingMember'
     */
    @Test
    public void askingMemberTest() {
        // TODO: test askingMember
    }

    /**
     * Test the property 'askingMemberId'
     */
    @Test
    public void askingMemberIdTest() {
        // TODO: test askingMemberId
    }

    /**
     * Test the property 'attachmentCount'
     */
    @Test
    public void attachmentCountTest() {
        // TODO: test attachmentCount
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'comparableAnswerText'
     */
    @Test
    public void comparableAnswerTextTest() {
        // TODO: test comparableAnswerText
    }

    /**
     * Test the property 'correctingMember'
     */
    @Test
    public void correctingMemberTest() {
        // TODO: test correctingMember
    }

    /**
     * Test the property 'correctingMemberId'
     */
    @Test
    public void correctingMemberIdTest() {
        // TODO: test correctingMemberId
    }

    /**
     * Test the property 'dateAnswerCorrected'
     */
    @Test
    public void dateAnswerCorrectedTest() {
        // TODO: test dateAnswerCorrected
    }

    /**
     * Test the property 'dateAnswered'
     */
    @Test
    public void dateAnsweredTest() {
        // TODO: test dateAnswered
    }

    /**
     * Test the property 'dateForAnswer'
     */
    @Test
    public void dateForAnswerTest() {
        // TODO: test dateForAnswer
    }

    /**
     * Test the property 'dateHoldingAnswer'
     */
    @Test
    public void dateHoldingAnswerTest() {
        // TODO: test dateHoldingAnswer
    }

    /**
     * Test the property 'dateTabled'
     */
    @Test
    public void dateTabledTest() {
        // TODO: test dateTabled
    }

    /**
     * Test the property 'groupedQuestions'
     */
    @Test
    public void groupedQuestionsTest() {
        // TODO: test groupedQuestions
    }

    /**
     * Test the property 'groupedQuestionsDates'
     */
    @Test
    public void groupedQuestionsDatesTest() {
        // TODO: test groupedQuestionsDates
    }

    /**
     * Test the property 'heading'
     */
    @Test
    public void headingTest() {
        // TODO: test heading
    }

    /**
     * Test the property 'house'
     */
    @Test
    public void houseTest() {
        // TODO: test house
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isNamedDay'
     */
    @Test
    public void isNamedDayTest() {
        // TODO: test isNamedDay
    }

    /**
     * Test the property 'isWithdrawn'
     */
    @Test
    public void isWithdrawnTest() {
        // TODO: test isWithdrawn
    }

    /**
     * Test the property 'memberHasInterest'
     */
    @Test
    public void memberHasInterestTest() {
        // TODO: test memberHasInterest
    }

    /**
     * Test the property 'originalAnswerText'
     */
    @Test
    public void originalAnswerTextTest() {
        // TODO: test originalAnswerText
    }

    /**
     * Test the property 'questionText'
     */
    @Test
    public void questionTextTest() {
        // TODO: test questionText
    }

    /**
     * Test the property 'uin'
     */
    @Test
    public void uinTest() {
        // TODO: test uin
    }

}
