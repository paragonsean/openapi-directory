/**
 * Statutory Instruments API
 * An API exposing details of the various types of Statutory Instruments laid before Parliament.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.StatutoryInstrumentsApi);
  }
}(this, function(expect, StatutoryInstrumentsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new StatutoryInstrumentsApi.StatutoryInstrument();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('StatutoryInstrument', function() {
    it('should create an instance of StatutoryInstrument', function() {
      // uncomment below and update the code to test StatutoryInstrument
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be.a(StatutoryInstrumentsApi.StatutoryInstrument);
    });

    it('should have the property commonsLayingDate (base name: "commonsLayingDate")', function() {
      // uncomment below and update the code to test the property commonsLayingDate
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property commonsPublishedDate (base name: "commonsPublishedDate")', function() {
      // uncomment below and update the code to test the property commonsPublishedDate
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property departmentId (base name: "departmentId")', function() {
      // uncomment below and update the code to test the property departmentId
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property layingBodyDepartment (base name: "layingBodyDepartment")', function() {
      // uncomment below and update the code to test the property layingBodyDepartment
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property layingBodyId (base name: "layingBodyId")', function() {
      // uncomment below and update the code to test the property layingBodyId
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property layingBodyName (base name: "layingBodyName")', function() {
      // uncomment below and update the code to test the property layingBodyName
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property lordsLayingDate (base name: "lordsLayingDate")', function() {
      // uncomment below and update the code to test the property lordsLayingDate
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property lordsPublishedDate (base name: "lordsPublishedDate")', function() {
      // uncomment below and update the code to test the property lordsPublishedDate
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property paperComingIntoForceDate (base name: "paperComingIntoForceDate")', function() {
      // uncomment below and update the code to test the property paperComingIntoForceDate
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property paperComingIntoForceNote (base name: "paperComingIntoForceNote")', function() {
      // uncomment below and update the code to test the property paperComingIntoForceNote
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property paperMadeDate (base name: "paperMadeDate")', function() {
      // uncomment below and update the code to test the property paperMadeDate
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property paperNumber (base name: "paperNumber")', function() {
      // uncomment below and update the code to test the property paperNumber
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property paperPrefix (base name: "paperPrefix")', function() {
      // uncomment below and update the code to test the property paperPrefix
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property paperYear (base name: "paperYear")', function() {
      // uncomment below and update the code to test the property paperYear
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property procedure (base name: "procedure")', function() {
      // uncomment below and update the code to test the property procedure
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property procedureName (base name: "procedureName")', function() {
      // uncomment below and update the code to test the property procedureName
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property procedureUri (base name: "procedureUri")', function() {
      // uncomment below and update the code to test the property procedureUri
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property proposedNegativeStatutoryInstrument (base name: "proposedNegativeStatutoryInstrument")', function() {
      // uncomment below and update the code to test the property proposedNegativeStatutoryInstrument
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property proposedNegativeStatutoryInstrumentPaperId (base name: "proposedNegativeStatutoryInstrumentPaperId")', function() {
      // uncomment below and update the code to test the property proposedNegativeStatutoryInstrumentPaperId
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property proposedNegativeStatutoryInstrumentPaperName (base name: "proposedNegativeStatutoryInstrumentPaperName")', function() {
      // uncomment below and update the code to test the property proposedNegativeStatutoryInstrumentPaperName
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new StatutoryInstrumentsApi.StatutoryInstrument();
      //expect(instance).to.be();
    });

  });

}));
