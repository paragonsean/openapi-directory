/**
 * Statutory Instruments API
 * An API exposing details of the various types of Statutory Instruments laid before Parliament.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BusinessItem from './model/BusinessItem';
import BusinessItemHouse from './model/BusinessItemHouse';
import BusinessItemResource from './model/BusinessItemResource';
import BusinessItemResourceCollection from './model/BusinessItemResourceCollection';
import Department from './model/Department';
import House from './model/House';
import LaidPaperSummary from './model/LaidPaperSummary';
import LaidPaperType from './model/LaidPaperType';
import LayingBody from './model/LayingBody';
import LayingBodyResource from './model/LayingBodyResource';
import LayingBodyResourceCollection from './model/LayingBodyResourceCollection';
import Link from './model/Link';
import ParliamentaryProcess from './model/ParliamentaryProcess';
import ProblemDetails from './model/ProblemDetails';
import Procedure from './model/Procedure';
import ProcedureDetails from './model/ProcedureDetails';
import ProcedureDetailsResource from './model/ProcedureDetailsResource';
import ProcedureResource from './model/ProcedureResource';
import ProcedureResourceCollection from './model/ProcedureResourceCollection';
import ProposedNegativeStatutoryInstrument from './model/ProposedNegativeStatutoryInstrument';
import ProposedNegativeStatutoryInstrumentResource from './model/ProposedNegativeStatutoryInstrumentResource';
import ProposedNegativeStatutoryInstrumentResourceCollection from './model/ProposedNegativeStatutoryInstrumentResourceCollection';
import StatutoryInstrument from './model/StatutoryInstrument';
import StatutoryInstrumentResource from './model/StatutoryInstrumentResource';
import StatutoryInstrumentResourceCollection from './model/StatutoryInstrumentResourceCollection';
import StatutoryInstrumentType from './model/StatutoryInstrumentType';
import BusinessItemApi from './api/BusinessItemApi';
import LayingBodyApi from './api/LayingBodyApi';
import ProcedureApi from './api/ProcedureApi';
import ProposedNegativeStatutoryInstrumentApi from './api/ProposedNegativeStatutoryInstrumentApi';
import StatutoryInstrumentApi from './api/StatutoryInstrumentApi';


/**
* An API exposing details of the various types of Statutory Instruments laid before Parliament..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var StatutoryInstrumentsApi = require('index'); // See note below*.
* var xxxSvc = new StatutoryInstrumentsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new StatutoryInstrumentsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new StatutoryInstrumentsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new StatutoryInstrumentsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BusinessItem model constructor.
     * @property {module:model/BusinessItem}
     */
    BusinessItem,

    /**
     * The BusinessItemHouse model constructor.
     * @property {module:model/BusinessItemHouse}
     */
    BusinessItemHouse,

    /**
     * The BusinessItemResource model constructor.
     * @property {module:model/BusinessItemResource}
     */
    BusinessItemResource,

    /**
     * The BusinessItemResourceCollection model constructor.
     * @property {module:model/BusinessItemResourceCollection}
     */
    BusinessItemResourceCollection,

    /**
     * The Department model constructor.
     * @property {module:model/Department}
     */
    Department,

    /**
     * The House model constructor.
     * @property {module:model/House}
     */
    House,

    /**
     * The LaidPaperSummary model constructor.
     * @property {module:model/LaidPaperSummary}
     */
    LaidPaperSummary,

    /**
     * The LaidPaperType model constructor.
     * @property {module:model/LaidPaperType}
     */
    LaidPaperType,

    /**
     * The LayingBody model constructor.
     * @property {module:model/LayingBody}
     */
    LayingBody,

    /**
     * The LayingBodyResource model constructor.
     * @property {module:model/LayingBodyResource}
     */
    LayingBodyResource,

    /**
     * The LayingBodyResourceCollection model constructor.
     * @property {module:model/LayingBodyResourceCollection}
     */
    LayingBodyResourceCollection,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The ParliamentaryProcess model constructor.
     * @property {module:model/ParliamentaryProcess}
     */
    ParliamentaryProcess,

    /**
     * The ProblemDetails model constructor.
     * @property {module:model/ProblemDetails}
     */
    ProblemDetails,

    /**
     * The Procedure model constructor.
     * @property {module:model/Procedure}
     */
    Procedure,

    /**
     * The ProcedureDetails model constructor.
     * @property {module:model/ProcedureDetails}
     */
    ProcedureDetails,

    /**
     * The ProcedureDetailsResource model constructor.
     * @property {module:model/ProcedureDetailsResource}
     */
    ProcedureDetailsResource,

    /**
     * The ProcedureResource model constructor.
     * @property {module:model/ProcedureResource}
     */
    ProcedureResource,

    /**
     * The ProcedureResourceCollection model constructor.
     * @property {module:model/ProcedureResourceCollection}
     */
    ProcedureResourceCollection,

    /**
     * The ProposedNegativeStatutoryInstrument model constructor.
     * @property {module:model/ProposedNegativeStatutoryInstrument}
     */
    ProposedNegativeStatutoryInstrument,

    /**
     * The ProposedNegativeStatutoryInstrumentResource model constructor.
     * @property {module:model/ProposedNegativeStatutoryInstrumentResource}
     */
    ProposedNegativeStatutoryInstrumentResource,

    /**
     * The ProposedNegativeStatutoryInstrumentResourceCollection model constructor.
     * @property {module:model/ProposedNegativeStatutoryInstrumentResourceCollection}
     */
    ProposedNegativeStatutoryInstrumentResourceCollection,

    /**
     * The StatutoryInstrument model constructor.
     * @property {module:model/StatutoryInstrument}
     */
    StatutoryInstrument,

    /**
     * The StatutoryInstrumentResource model constructor.
     * @property {module:model/StatutoryInstrumentResource}
     */
    StatutoryInstrumentResource,

    /**
     * The StatutoryInstrumentResourceCollection model constructor.
     * @property {module:model/StatutoryInstrumentResourceCollection}
     */
    StatutoryInstrumentResourceCollection,

    /**
     * The StatutoryInstrumentType model constructor.
     * @property {module:model/StatutoryInstrumentType}
     */
    StatutoryInstrumentType,

    /**
    * The BusinessItemApi service constructor.
    * @property {module:api/BusinessItemApi}
    */
    BusinessItemApi,

    /**
    * The LayingBodyApi service constructor.
    * @property {module:api/LayingBodyApi}
    */
    LayingBodyApi,

    /**
    * The ProcedureApi service constructor.
    * @property {module:api/ProcedureApi}
    */
    ProcedureApi,

    /**
    * The ProposedNegativeStatutoryInstrumentApi service constructor.
    * @property {module:api/ProposedNegativeStatutoryInstrumentApi}
    */
    ProposedNegativeStatutoryInstrumentApi,

    /**
    * The StatutoryInstrumentApi service constructor.
    * @property {module:api/StatutoryInstrumentApi}
    */
    StatutoryInstrumentApi
};
