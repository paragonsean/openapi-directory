/**
 * Statutory Instruments API
 * An API exposing details of the various types of Statutory Instruments laid before Parliament.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Link from './Link';
import ProcedureResource from './ProcedureResource';

/**
 * The ProcedureResourceCollection model module.
 * @module model/ProcedureResourceCollection
 * @version v1
 */
class ProcedureResourceCollection {
    /**
     * Constructs a new <code>ProcedureResourceCollection</code>.
     * @alias module:model/ProcedureResourceCollection
     */
    constructor() { 
        
        ProcedureResourceCollection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProcedureResourceCollection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProcedureResourceCollection} obj Optional instance to populate.
     * @return {module:model/ProcedureResourceCollection} The populated <code>ProcedureResourceCollection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProcedureResourceCollection();

            if (data.hasOwnProperty('items')) {
                obj['items'] = ApiClient.convertToType(data['items'], [ProcedureResource]);
            }
            if (data.hasOwnProperty('itemsPerPage')) {
                obj['itemsPerPage'] = ApiClient.convertToType(data['itemsPerPage'], 'Number');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [Link]);
            }
            if (data.hasOwnProperty('totalResults')) {
                obj['totalResults'] = ApiClient.convertToType(data['totalResults'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProcedureResourceCollection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProcedureResourceCollection</code>.
     */
    static validateJSON(data) {
        if (data['items']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['items'])) {
                throw new Error("Expected the field `items` to be an array in the JSON data but got " + data['items']);
            }
            // validate the optional field `items` (array)
            for (const item of data['items']) {
                ProcedureResource.validateJSON(item);
            };
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                Link.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/ProcedureResource>} items
 */
ProcedureResourceCollection.prototype['items'] = undefined;

/**
 * @member {Number} itemsPerPage
 */
ProcedureResourceCollection.prototype['itemsPerPage'] = undefined;

/**
 * @member {Array.<module:model/Link>} links
 */
ProcedureResourceCollection.prototype['links'] = undefined;

/**
 * @member {Number} totalResults
 */
ProcedureResourceCollection.prototype['totalResults'] = undefined;






export default ProcedureResourceCollection;

