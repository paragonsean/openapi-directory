# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link import Link
from openapi_server.models.statutory_instrument_resource import StatutoryInstrumentResource
from openapi_server import util


class StatutoryInstrumentResourceCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[StatutoryInstrumentResource]=None, items_per_page: int=None, links: List[Link]=None, total_results: int=None):
        """StatutoryInstrumentResourceCollection - a model defined in OpenAPI

        :param items: The items of this StatutoryInstrumentResourceCollection.
        :param items_per_page: The items_per_page of this StatutoryInstrumentResourceCollection.
        :param links: The links of this StatutoryInstrumentResourceCollection.
        :param total_results: The total_results of this StatutoryInstrumentResourceCollection.
        """
        self.openapi_types = {
            'items': List[StatutoryInstrumentResource],
            'items_per_page': int,
            'links': List[Link],
            'total_results': int
        }

        self.attribute_map = {
            'items': 'items',
            'items_per_page': 'itemsPerPage',
            'links': 'links',
            'total_results': 'totalResults'
        }

        self._items = items
        self._items_per_page = items_per_page
        self._links = links
        self._total_results = total_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatutoryInstrumentResourceCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StatutoryInstrumentResourceCollection of this StatutoryInstrumentResourceCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this StatutoryInstrumentResourceCollection.


        :return: The items of this StatutoryInstrumentResourceCollection.
        :rtype: List[StatutoryInstrumentResource]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this StatutoryInstrumentResourceCollection.


        :param items: The items of this StatutoryInstrumentResourceCollection.
        :type items: List[StatutoryInstrumentResource]
        """

        self._items = items

    @property
    def items_per_page(self):
        """Gets the items_per_page of this StatutoryInstrumentResourceCollection.


        :return: The items_per_page of this StatutoryInstrumentResourceCollection.
        :rtype: int
        """
        return self._items_per_page

    @items_per_page.setter
    def items_per_page(self, items_per_page):
        """Sets the items_per_page of this StatutoryInstrumentResourceCollection.


        :param items_per_page: The items_per_page of this StatutoryInstrumentResourceCollection.
        :type items_per_page: int
        """

        self._items_per_page = items_per_page

    @property
    def links(self):
        """Gets the links of this StatutoryInstrumentResourceCollection.


        :return: The links of this StatutoryInstrumentResourceCollection.
        :rtype: List[Link]
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this StatutoryInstrumentResourceCollection.


        :param links: The links of this StatutoryInstrumentResourceCollection.
        :type links: List[Link]
        """

        self._links = links

    @property
    def total_results(self):
        """Gets the total_results of this StatutoryInstrumentResourceCollection.


        :return: The total_results of this StatutoryInstrumentResourceCollection.
        :rtype: int
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results):
        """Sets the total_results of this StatutoryInstrumentResourceCollection.


        :param total_results: The total_results of this StatutoryInstrumentResourceCollection.
        :type total_results: int
        """

        self._total_results = total_results
