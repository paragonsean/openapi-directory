# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.published_division import PublishedDivision
from openapi_server import util


class MemberVotingRecord(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, member_id: int=None, member_voted_aye: bool=None, member_was_teller: bool=None, published_division: PublishedDivision=None):
        """MemberVotingRecord - a model defined in OpenAPI

        :param member_id: The member_id of this MemberVotingRecord.
        :param member_voted_aye: The member_voted_aye of this MemberVotingRecord.
        :param member_was_teller: The member_was_teller of this MemberVotingRecord.
        :param published_division: The published_division of this MemberVotingRecord.
        """
        self.openapi_types = {
            'member_id': int,
            'member_voted_aye': bool,
            'member_was_teller': bool,
            'published_division': PublishedDivision
        }

        self.attribute_map = {
            'member_id': 'MemberId',
            'member_voted_aye': 'MemberVotedAye',
            'member_was_teller': 'MemberWasTeller',
            'published_division': 'PublishedDivision'
        }

        self._member_id = member_id
        self._member_voted_aye = member_voted_aye
        self._member_was_teller = member_was_teller
        self._published_division = published_division

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberVotingRecord':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberVotingRecord of this MemberVotingRecord.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member_id(self):
        """Gets the member_id of this MemberVotingRecord.


        :return: The member_id of this MemberVotingRecord.
        :rtype: int
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id):
        """Sets the member_id of this MemberVotingRecord.


        :param member_id: The member_id of this MemberVotingRecord.
        :type member_id: int
        """

        self._member_id = member_id

    @property
    def member_voted_aye(self):
        """Gets the member_voted_aye of this MemberVotingRecord.


        :return: The member_voted_aye of this MemberVotingRecord.
        :rtype: bool
        """
        return self._member_voted_aye

    @member_voted_aye.setter
    def member_voted_aye(self, member_voted_aye):
        """Sets the member_voted_aye of this MemberVotingRecord.


        :param member_voted_aye: The member_voted_aye of this MemberVotingRecord.
        :type member_voted_aye: bool
        """

        self._member_voted_aye = member_voted_aye

    @property
    def member_was_teller(self):
        """Gets the member_was_teller of this MemberVotingRecord.


        :return: The member_was_teller of this MemberVotingRecord.
        :rtype: bool
        """
        return self._member_was_teller

    @member_was_teller.setter
    def member_was_teller(self, member_was_teller):
        """Sets the member_was_teller of this MemberVotingRecord.


        :param member_was_teller: The member_was_teller of this MemberVotingRecord.
        :type member_was_teller: bool
        """

        self._member_was_teller = member_was_teller

    @property
    def published_division(self):
        """Gets the published_division of this MemberVotingRecord.


        :return: The published_division of this MemberVotingRecord.
        :rtype: PublishedDivision
        """
        return self._published_division

    @published_division.setter
    def published_division(self, published_division):
        """Sets the published_division of this MemberVotingRecord.


        :param published_division: The published_division of this MemberVotingRecord.
        :type published_division: PublishedDivision
        """

        self._published_division = published_division
