/*
 * Commons Votes API
 * An API that allows querying of Commons Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DivisionGroupedByParty;
import org.openapitools.client.model.MemberVotingRecord;
import java.time.OffsetDateTime;
import org.openapitools.client.model.PublishedDivision;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DivisionsApi
 */
@Disabled
public class DivisionsApiTest {

    private final DivisionsApi api = new DivisionsApi();

    /**
     * Return a Division
     *
     * Single Division which has the specified Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void divisionsGetDivisionByIdTest() throws ApiException {
        Integer divisionId = null;
        String format = null;
        PublishedDivision response = api.divisionsGetDivisionById(divisionId, format);
        // TODO: test validations
    }

    /**
     * Return Divisions results grouped by party
     *
     * Division results which meet the specified criteria grouped by parties
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void divisionsGetDivisionsGroupsByPartyTest() throws ApiException {
        String format = null;
        String queryParametersSearchTerm = null;
        Integer queryParametersMemberId = null;
        Boolean queryParametersIncludeWhenMemberWasTeller = null;
        OffsetDateTime queryParametersStartDate = null;
        OffsetDateTime queryParametersEndDate = null;
        Integer queryParametersDivisionNumber = null;
        List<DivisionGroupedByParty> response = api.divisionsGetDivisionsGroupsByParty(format, queryParametersSearchTerm, queryParametersMemberId, queryParametersIncludeWhenMemberWasTeller, queryParametersStartDate, queryParametersEndDate, queryParametersDivisionNumber);
        // TODO: test validations
    }

    /**
     * Return voting records for a Member
     *
     * List of voting records for a member which meet the specified criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void divisionsGetVotingRecordsForMemberTest() throws ApiException {
        String format = null;
        Integer queryParametersMemberId = null;
        Integer queryParametersSkip = null;
        Integer queryParametersTake = null;
        String queryParametersSearchTerm = null;
        Boolean queryParametersIncludeWhenMemberWasTeller = null;
        OffsetDateTime queryParametersStartDate = null;
        OffsetDateTime queryParametersEndDate = null;
        Integer queryParametersDivisionNumber = null;
        List<MemberVotingRecord> response = api.divisionsGetVotingRecordsForMember(format, queryParametersMemberId, queryParametersSkip, queryParametersTake, queryParametersSearchTerm, queryParametersIncludeWhenMemberWasTeller, queryParametersStartDate, queryParametersEndDate, queryParametersDivisionNumber);
        // TODO: test validations
    }

    /**
     * Return a list of Divisions
     *
     * List of Divisions which meet the specified criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void divisionsSearchDivisionsTest() throws ApiException {
        String format = null;
        Integer queryParametersSkip = null;
        Integer queryParametersTake = null;
        String queryParametersSearchTerm = null;
        Integer queryParametersMemberId = null;
        Boolean queryParametersIncludeWhenMemberWasTeller = null;
        OffsetDateTime queryParametersStartDate = null;
        OffsetDateTime queryParametersEndDate = null;
        Integer queryParametersDivisionNumber = null;
        List<PublishedDivision> response = api.divisionsSearchDivisions(format, queryParametersSkip, queryParametersTake, queryParametersSearchTerm, queryParametersMemberId, queryParametersIncludeWhenMemberWasTeller, queryParametersStartDate, queryParametersEndDate, queryParametersDivisionNumber);
        // TODO: test validations
    }

    /**
     * Return total results count
     *
     * Total count of Divisions meeting the specified criteria
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void divisionsSearchTotalResultsTest() throws ApiException {
        String format = null;
        String queryParametersSearchTerm = null;
        Integer queryParametersMemberId = null;
        Boolean queryParametersIncludeWhenMemberWasTeller = null;
        OffsetDateTime queryParametersStartDate = null;
        OffsetDateTime queryParametersEndDate = null;
        Integer queryParametersDivisionNumber = null;
        Integer response = api.divisionsSearchTotalResults(format, queryParametersSearchTerm, queryParametersMemberId, queryParametersIncludeWhenMemberWasTeller, queryParametersStartDate, queryParametersEndDate, queryParametersDivisionNumber);
        // TODO: test validations
    }

}
