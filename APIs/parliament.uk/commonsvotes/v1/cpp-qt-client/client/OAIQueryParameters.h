/**
 * Commons Votes API
 * An API that allows querying of Commons Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQueryParameters.h
 *
 * 
 */

#ifndef OAIQueryParameters_H
#define OAIQueryParameters_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQueryParameters : public OAIObject {
public:
    OAIQueryParameters();
    OAIQueryParameters(QString json);
    ~OAIQueryParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDivisionNumber() const;
    void setDivisionNumber(const qint32 &division_number);
    bool is_division_number_Set() const;
    bool is_division_number_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    bool isIncludeWhenMemberWasTeller() const;
    void setIncludeWhenMemberWasTeller(const bool &include_when_member_was_teller);
    bool is_include_when_member_was_teller_Set() const;
    bool is_include_when_member_was_teller_Valid() const;

    qint32 getMemberId() const;
    void setMemberId(const qint32 &member_id);
    bool is_member_id_Set() const;
    bool is_member_id_Valid() const;

    QString getSearchTerm() const;
    void setSearchTerm(const QString &search_term);
    bool is_search_term_Set() const;
    bool is_search_term_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_division_number;
    bool m_division_number_isSet;
    bool m_division_number_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    bool m_include_when_member_was_teller;
    bool m_include_when_member_was_teller_isSet;
    bool m_include_when_member_was_teller_isValid;

    qint32 m_member_id;
    bool m_member_id_isSet;
    bool m_member_id_isValid;

    QString m_search_term;
    bool m_search_term_isSet;
    bool m_search_term_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQueryParameters)

#endif // OAIQueryParameters_H
