/**
 * Commons Votes API
 * An API that allows querying of Commons Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDivisionGroupedByParty.h
 *
 * 
 */

#ifndef OAIDivisionGroupedByParty_H
#define OAIDivisionGroupedByParty_H

#include <QJsonObject>

#include "OAIPartyVoteResult.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPartyVoteResult;

class OAIDivisionGroupedByParty : public OAIObject {
public:
    OAIDivisionGroupedByParty();
    OAIDivisionGroupedByParty(QString json);
    ~OAIDivisionGroupedByParty() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAyeCount() const;
    void setAyeCount(const qint32 &aye_count);
    bool is_aye_count_Set() const;
    bool is_aye_count_Valid() const;

    QList<OAIPartyVoteResult> getAyes() const;
    void setAyes(const QList<OAIPartyVoteResult> &ayes);
    bool is_ayes_Set() const;
    bool is_ayes_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    qint32 getDivisionId() const;
    void setDivisionId(const qint32 &division_id);
    bool is_division_id_Set() const;
    bool is_division_id_Valid() const;

    qint32 getNoCount() const;
    void setNoCount(const qint32 &no_count);
    bool is_no_count_Set() const;
    bool is_no_count_Valid() const;

    QList<OAIPartyVoteResult> getNoes() const;
    void setNoes(const QList<OAIPartyVoteResult> &noes);
    bool is_noes_Set() const;
    bool is_noes_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_aye_count;
    bool m_aye_count_isSet;
    bool m_aye_count_isValid;

    QList<OAIPartyVoteResult> m_ayes;
    bool m_ayes_isSet;
    bool m_ayes_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    qint32 m_division_id;
    bool m_division_id_isSet;
    bool m_division_id_isValid;

    qint32 m_no_count;
    bool m_no_count_isSet;
    bool m_no_count_isValid;

    QList<OAIPartyVoteResult> m_noes;
    bool m_noes_isSet;
    bool m_noes_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDivisionGroupedByParty)

#endif // OAIDivisionGroupedByParty_H
