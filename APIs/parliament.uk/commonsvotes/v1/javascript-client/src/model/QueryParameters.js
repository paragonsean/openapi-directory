/**
 * Commons Votes API
 * An API that allows querying of Commons Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The QueryParameters model module.
 * @module model/QueryParameters
 * @version v1
 */
class QueryParameters {
    /**
     * Constructs a new <code>QueryParameters</code>.
     * @alias module:model/QueryParameters
     */
    constructor() { 
        
        QueryParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>QueryParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/QueryParameters} obj Optional instance to populate.
     * @return {module:model/QueryParameters} The populated <code>QueryParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new QueryParameters();

            if (data.hasOwnProperty('DivisionNumber')) {
                obj['DivisionNumber'] = ApiClient.convertToType(data['DivisionNumber'], 'Number');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('IncludeWhenMemberWasTeller')) {
                obj['IncludeWhenMemberWasTeller'] = ApiClient.convertToType(data['IncludeWhenMemberWasTeller'], 'Boolean');
            }
            if (data.hasOwnProperty('MemberId')) {
                obj['MemberId'] = ApiClient.convertToType(data['MemberId'], 'Number');
            }
            if (data.hasOwnProperty('SearchTerm')) {
                obj['SearchTerm'] = ApiClient.convertToType(data['SearchTerm'], 'String');
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>QueryParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>QueryParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['SearchTerm'] && !(typeof data['SearchTerm'] === 'string' || data['SearchTerm'] instanceof String)) {
            throw new Error("Expected the field `SearchTerm` to be a primitive type in the JSON string but got " + data['SearchTerm']);
        }

        return true;
    }


}



/**
 * Division Number - as specified by the House, unique within a session. This is different to the division id which uniquely identifies a division in this system and is passed to the GET division endpoint
 * @member {Number} DivisionNumber
 */
QueryParameters.prototype['DivisionNumber'] = undefined;

/**
 * Divisions where division date in one or before date provided. Date format is yyyy-MM-dd
 * @member {Date} EndDate
 */
QueryParameters.prototype['EndDate'] = undefined;

/**
 * Divisions where member was a teller as well as if they actually voted
 * @member {Boolean} IncludeWhenMemberWasTeller
 */
QueryParameters.prototype['IncludeWhenMemberWasTeller'] = undefined;

/**
 * Divisions returning Member with Member ID voting records
 * @member {Number} MemberId
 */
QueryParameters.prototype['MemberId'] = undefined;

/**
 * Divisions containing search term within title or number
 * @member {String} SearchTerm
 */
QueryParameters.prototype['SearchTerm'] = undefined;

/**
 * Divisions where division date in one or after date provided. Date format is yyyy-MM-dd
 * @member {Date} StartDate
 */
QueryParameters.prototype['StartDate'] = undefined;






export default QueryParameters;

