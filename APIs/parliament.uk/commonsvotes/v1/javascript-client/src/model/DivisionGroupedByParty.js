/**
 * Commons Votes API
 * An API that allows querying of Commons Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PartyVoteResult from './PartyVoteResult';

/**
 * The DivisionGroupedByParty model module.
 * @module model/DivisionGroupedByParty
 * @version v1
 */
class DivisionGroupedByParty {
    /**
     * Constructs a new <code>DivisionGroupedByParty</code>.
     * @alias module:model/DivisionGroupedByParty
     */
    constructor() { 
        
        DivisionGroupedByParty.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DivisionGroupedByParty</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DivisionGroupedByParty} obj Optional instance to populate.
     * @return {module:model/DivisionGroupedByParty} The populated <code>DivisionGroupedByParty</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DivisionGroupedByParty();

            if (data.hasOwnProperty('AyeCount')) {
                obj['AyeCount'] = ApiClient.convertToType(data['AyeCount'], 'Number');
            }
            if (data.hasOwnProperty('Ayes')) {
                obj['Ayes'] = ApiClient.convertToType(data['Ayes'], [PartyVoteResult]);
            }
            if (data.hasOwnProperty('Date')) {
                obj['Date'] = ApiClient.convertToType(data['Date'], 'Date');
            }
            if (data.hasOwnProperty('DivisionId')) {
                obj['DivisionId'] = ApiClient.convertToType(data['DivisionId'], 'Number');
            }
            if (data.hasOwnProperty('NoCount')) {
                obj['NoCount'] = ApiClient.convertToType(data['NoCount'], 'Number');
            }
            if (data.hasOwnProperty('Noes')) {
                obj['Noes'] = ApiClient.convertToType(data['Noes'], [PartyVoteResult]);
            }
            if (data.hasOwnProperty('Number')) {
                obj['Number'] = ApiClient.convertToType(data['Number'], 'Number');
            }
            if (data.hasOwnProperty('Title')) {
                obj['Title'] = ApiClient.convertToType(data['Title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DivisionGroupedByParty</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DivisionGroupedByParty</code>.
     */
    static validateJSON(data) {
        if (data['Ayes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Ayes'])) {
                throw new Error("Expected the field `Ayes` to be an array in the JSON data but got " + data['Ayes']);
            }
            // validate the optional field `Ayes` (array)
            for (const item of data['Ayes']) {
                PartyVoteResult.validateJSON(item);
            };
        }
        if (data['Noes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Noes'])) {
                throw new Error("Expected the field `Noes` to be an array in the JSON data but got " + data['Noes']);
            }
            // validate the optional field `Noes` (array)
            for (const item of data['Noes']) {
                PartyVoteResult.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Title'] && !(typeof data['Title'] === 'string' || data['Title'] instanceof String)) {
            throw new Error("Expected the field `Title` to be a primitive type in the JSON string but got " + data['Title']);
        }

        return true;
    }


}



/**
 * @member {Number} AyeCount
 */
DivisionGroupedByParty.prototype['AyeCount'] = undefined;

/**
 * Counts of all members who voted 'Aye', grouped by party
 * @member {Array.<module:model/PartyVoteResult>} Ayes
 */
DivisionGroupedByParty.prototype['Ayes'] = undefined;

/**
 * @member {Date} Date
 */
DivisionGroupedByParty.prototype['Date'] = undefined;

/**
 * @member {Number} DivisionId
 */
DivisionGroupedByParty.prototype['DivisionId'] = undefined;

/**
 * @member {Number} NoCount
 */
DivisionGroupedByParty.prototype['NoCount'] = undefined;

/**
 * Counts of all members who voted 'Noe', grouped by party
 * @member {Array.<module:model/PartyVoteResult>} Noes
 */
DivisionGroupedByParty.prototype['Noes'] = undefined;

/**
 * @member {Number} Number
 */
DivisionGroupedByParty.prototype['Number'] = undefined;

/**
 * @member {String} Title
 */
DivisionGroupedByParty.prototype['Title'] = undefined;






export default DivisionGroupedByParty;

