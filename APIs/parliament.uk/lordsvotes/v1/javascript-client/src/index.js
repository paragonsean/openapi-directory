/**
 * Lords Votes API
 * An API that allows querying of Lords Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Comparators from './model/Comparators';
import DivisionGroupByPartyViewModel from './model/DivisionGroupByPartyViewModel';
import DivisionViewModel from './model/DivisionViewModel';
import MemberViewModel from './model/MemberViewModel';
import MemberVotingRecordViewModel from './model/MemberVotingRecordViewModel';
import PartyVoteResultViewModel from './model/PartyVoteResultViewModel';
import DivisionsApi from './api/DivisionsApi';


/**
* An API that allows querying of Lords Votes data..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var LordsVotesApi = require('index'); // See note below*.
* var xxxSvc = new LordsVotesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new LordsVotesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new LordsVotesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new LordsVotesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Comparators model constructor.
     * @property {module:model/Comparators}
     */
    Comparators,

    /**
     * The DivisionGroupByPartyViewModel model constructor.
     * @property {module:model/DivisionGroupByPartyViewModel}
     */
    DivisionGroupByPartyViewModel,

    /**
     * The DivisionViewModel model constructor.
     * @property {module:model/DivisionViewModel}
     */
    DivisionViewModel,

    /**
     * The MemberViewModel model constructor.
     * @property {module:model/MemberViewModel}
     */
    MemberViewModel,

    /**
     * The MemberVotingRecordViewModel model constructor.
     * @property {module:model/MemberVotingRecordViewModel}
     */
    MemberVotingRecordViewModel,

    /**
     * The PartyVoteResultViewModel model constructor.
     * @property {module:model/PartyVoteResultViewModel}
     */
    PartyVoteResultViewModel,

    /**
    * The DivisionsApi service constructor.
    * @property {module:api/DivisionsApi}
    */
    DivisionsApi
};
