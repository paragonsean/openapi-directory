/**
 * Lords Votes API
 * An API that allows querying of Lords Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDivisionGroupByPartyViewModel.h
 *
 * 
 */

#ifndef OAIDivisionGroupByPartyViewModel_H
#define OAIDivisionGroupByPartyViewModel_H

#include <QJsonObject>

#include "OAIPartyVoteResultViewModel.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPartyVoteResultViewModel;

class OAIDivisionGroupByPartyViewModel : public OAIObject {
public:
    OAIDivisionGroupByPartyViewModel();
    OAIDivisionGroupByPartyViewModel(QString json);
    ~OAIDivisionGroupByPartyViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIPartyVoteResultViewModel> getContent() const;
    void setContent(const QList<OAIPartyVoteResultViewModel> &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    qint32 getContentCount() const;
    void setContentCount(const qint32 &content_count);
    bool is_content_count_Set() const;
    bool is_content_count_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    qint32 getDivisionId() const;
    void setDivisionId(const qint32 &division_id);
    bool is_division_id_Set() const;
    bool is_division_id_Valid() const;

    QList<OAIPartyVoteResultViewModel> getNotContent() const;
    void setNotContent(const QList<OAIPartyVoteResultViewModel> &not_content);
    bool is_not_content_Set() const;
    bool is_not_content_Valid() const;

    qint32 getNotContentCount() const;
    void setNotContentCount(const qint32 &not_content_count);
    bool is_not_content_count_Set() const;
    bool is_not_content_count_Valid() const;

    qint32 getNumber() const;
    void setNumber(const qint32 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIPartyVoteResultViewModel> m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    qint32 m_content_count;
    bool m_content_count_isSet;
    bool m_content_count_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    qint32 m_division_id;
    bool m_division_id_isSet;
    bool m_division_id_isValid;

    QList<OAIPartyVoteResultViewModel> m_not_content;
    bool m_not_content_isSet;
    bool m_not_content_isValid;

    qint32 m_not_content_count;
    bool m_not_content_count_isSet;
    bool m_not_content_count_isValid;

    qint32 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDivisionGroupByPartyViewModel)

#endif // OAIDivisionGroupByPartyViewModel_H
