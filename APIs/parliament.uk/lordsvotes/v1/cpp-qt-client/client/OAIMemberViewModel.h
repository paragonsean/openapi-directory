/**
 * Lords Votes API
 * An API that allows querying of Lords Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMemberViewModel.h
 *
 * 
 */

#ifndef OAIMemberViewModel_H
#define OAIMemberViewModel_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMemberViewModel : public OAIObject {
public:
    OAIMemberViewModel();
    OAIMemberViewModel(QString json);
    ~OAIMemberViewModel() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getListAs() const;
    void setListAs(const QString &list_as);
    bool is_list_as_Set() const;
    bool is_list_as_Valid() const;

    QString getMemberFrom() const;
    void setMemberFrom(const QString &member_from);
    bool is_member_from_Set() const;
    bool is_member_from_Valid() const;

    qint32 getMemberId() const;
    void setMemberId(const qint32 &member_id);
    bool is_member_id_Set() const;
    bool is_member_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParty() const;
    void setParty(const QString &party);
    bool is_party_Set() const;
    bool is_party_Valid() const;

    QString getPartyAbbreviation() const;
    void setPartyAbbreviation(const QString &party_abbreviation);
    bool is_party_abbreviation_Set() const;
    bool is_party_abbreviation_Valid() const;

    QString getPartyColour() const;
    void setPartyColour(const QString &party_colour);
    bool is_party_colour_Set() const;
    bool is_party_colour_Valid() const;

    bool isPartyIsMainParty() const;
    void setPartyIsMainParty(const bool &party_is_main_party);
    bool is_party_is_main_party_Set() const;
    bool is_party_is_main_party_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_list_as;
    bool m_list_as_isSet;
    bool m_list_as_isValid;

    QString m_member_from;
    bool m_member_from_isSet;
    bool m_member_from_isValid;

    qint32 m_member_id;
    bool m_member_id_isSet;
    bool m_member_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_party;
    bool m_party_isSet;
    bool m_party_isValid;

    QString m_party_abbreviation;
    bool m_party_abbreviation_isSet;
    bool m_party_abbreviation_isValid;

    QString m_party_colour;
    bool m_party_colour_isSet;
    bool m_party_colour_isValid;

    bool m_party_is_main_party;
    bool m_party_is_main_party_isSet;
    bool m_party_is_main_party_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMemberViewModel)

#endif // OAIMemberViewModel_H
