/*
 * Lords Votes API
 * An API that allows querying of Lords Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Comparators;
import org.openapitools.client.model.DivisionGroupByPartyViewModel;
import org.openapitools.client.model.DivisionViewModel;
import org.openapitools.client.model.MemberVotingRecordViewModel;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DivisionsApi
 */
@Disabled
public class DivisionsApiTest {

    private final DivisionsApi api = new DivisionsApi();

    /**
     * Return a Division
     *
     * Get a single Division which has the Id specified.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataDivisionsDivisionIdGetTest() throws ApiException {
        Integer divisionId = null;
        DivisionViewModel response = api.dataDivisionsDivisionIdGet(divisionId);
        // TODO: test validations
    }

    /**
     * Return Divisions results grouped by party
     *
     * Get a list of Divisions which contain grouped by party
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataDivisionsGroupedbypartyGetTest() throws ApiException {
        String searchTerm = null;
        Integer memberId = null;
        Boolean includeWhenMemberWasTeller = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Integer divisionNumber = null;
        Comparators totalVotesCastComparator = null;
        Integer totalVotesCastValueToCompare = null;
        Comparators majorityComparator = null;
        Integer majorityValueToCompare = null;
        DivisionGroupByPartyViewModel response = api.dataDivisionsGroupedbypartyGet(searchTerm, memberId, includeWhenMemberWasTeller, startDate, endDate, divisionNumber, totalVotesCastComparator, totalVotesCastValueToCompare, majorityComparator, majorityValueToCompare);
        // TODO: test validations
    }

    /**
     * Return voting records for a Member
     *
     * Get a list of voting records for a Member.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataDivisionsMembervotingGetTest() throws ApiException {
        Integer memberId = null;
        String searchTerm = null;
        Boolean includeWhenMemberWasTeller = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Integer divisionNumber = null;
        Comparators totalVotesCastComparator = null;
        Integer totalVotesCastValueToCompare = null;
        Comparators majorityComparator = null;
        Integer majorityValueToCompare = null;
        Integer skip = null;
        Integer take = null;
        MemberVotingRecordViewModel response = api.dataDivisionsMembervotingGet(memberId, searchTerm, includeWhenMemberWasTeller, startDate, endDate, divisionNumber, totalVotesCastComparator, totalVotesCastValueToCompare, majorityComparator, majorityValueToCompare, skip, take);
        // TODO: test validations
    }

    /**
     * Return a list of Divisions
     *
     * Get a list of Divisions which meet the specified criteria.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataDivisionsSearchGetTest() throws ApiException {
        String searchTerm = null;
        Integer memberId = null;
        Boolean includeWhenMemberWasTeller = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Integer divisionNumber = null;
        Comparators totalVotesCastComparator = null;
        Integer totalVotesCastValueToCompare = null;
        Comparators majorityComparator = null;
        Integer majorityValueToCompare = null;
        Integer skip = null;
        Integer take = null;
        List<DivisionViewModel> response = api.dataDivisionsSearchGet(searchTerm, memberId, includeWhenMemberWasTeller, startDate, endDate, divisionNumber, totalVotesCastComparator, totalVotesCastValueToCompare, majorityComparator, majorityValueToCompare, skip, take);
        // TODO: test validations
    }

    /**
     * Return total results count
     *
     * Get total count of Divisions meeting the specified query, useful for paging lists etc...
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dataDivisionsSearchTotalResultsGetTest() throws ApiException {
        String searchTerm = null;
        Integer memberId = null;
        Boolean includeWhenMemberWasTeller = null;
        OffsetDateTime startDate = null;
        OffsetDateTime endDate = null;
        Integer divisionNumber = null;
        Comparators totalVotesCastComparator = null;
        Integer totalVotesCastValueToCompare = null;
        Comparators majorityComparator = null;
        Integer majorityValueToCompare = null;
        Integer response = api.dataDivisionsSearchTotalResultsGet(searchTerm, memberId, includeWhenMemberWasTeller, startDate, endDate, divisionNumber, totalVotesCastComparator, totalVotesCastValueToCompare, majorityComparator, majorityValueToCompare);
        // TODO: test validations
    }

}
