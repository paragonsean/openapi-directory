/*
 * Lords Votes API
 * An API that allows querying of Lords Votes data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets Comparators
 */
@JsonAdapter(Comparators.Adapter.class)
public enum Comparators {
  
  LESS_THAN("LessThan"),
  
  LESS_THAN_OR_EQUAL_TO("LessThanOrEqualTo"),
  
  EQUAL_TO("EqualTo"),
  
  GREATER_THAN_OR_EQUAL_TO("GreaterThanOrEqualTo"),
  
  GREATER_THAN("GreaterThan");

  private String value;

  Comparators(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static Comparators fromValue(String value) {
    for (Comparators b : Comparators.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<Comparators> {
    @Override
    public void write(final JsonWriter jsonWriter, final Comparators enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public Comparators read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return Comparators.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    Comparators.fromValue(value);
  }
}

