/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMemberName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMemberName::OAIMemberName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMemberName::OAIMemberName() {
    this->initializeModel();
}

OAIMemberName::~OAIMemberName() {}

void OAIMemberName::initializeModel() {

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_name_address_as_isSet = false;
    m_name_address_as_isValid = false;

    m_name_display_as_isSet = false;
    m_name_display_as_isValid = false;

    m_name_full_title_isSet = false;
    m_name_full_title_isValid = false;

    m_name_list_as_isSet = false;
    m_name_list_as_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIMemberName::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMemberName::fromJsonObject(QJsonObject json) {

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_name_address_as_isValid = ::OpenAPI::fromJsonValue(m_name_address_as, json[QString("nameAddressAs")]);
    m_name_address_as_isSet = !json[QString("nameAddressAs")].isNull() && m_name_address_as_isValid;

    m_name_display_as_isValid = ::OpenAPI::fromJsonValue(m_name_display_as, json[QString("nameDisplayAs")]);
    m_name_display_as_isSet = !json[QString("nameDisplayAs")].isNull() && m_name_display_as_isValid;

    m_name_full_title_isValid = ::OpenAPI::fromJsonValue(m_name_full_title, json[QString("nameFullTitle")]);
    m_name_full_title_isSet = !json[QString("nameFullTitle")].isNull() && m_name_full_title_isValid;

    m_name_list_as_isValid = ::OpenAPI::fromJsonValue(m_name_list_as, json[QString("nameListAs")]);
    m_name_list_as_isSet = !json[QString("nameListAs")].isNull() && m_name_list_as_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIMemberName::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMemberName::asJsonObject() const {
    QJsonObject obj;
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_name_address_as_isSet) {
        obj.insert(QString("nameAddressAs"), ::OpenAPI::toJsonValue(m_name_address_as));
    }
    if (m_name_display_as_isSet) {
        obj.insert(QString("nameDisplayAs"), ::OpenAPI::toJsonValue(m_name_display_as));
    }
    if (m_name_full_title_isSet) {
        obj.insert(QString("nameFullTitle"), ::OpenAPI::toJsonValue(m_name_full_title));
    }
    if (m_name_list_as_isSet) {
        obj.insert(QString("nameListAs"), ::OpenAPI::toJsonValue(m_name_list_as));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QDateTime OAIMemberName::getEndDate() const {
    return m_end_date;
}
void OAIMemberName::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIMemberName::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIMemberName::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIMemberName::getNameAddressAs() const {
    return m_name_address_as;
}
void OAIMemberName::setNameAddressAs(const QString &name_address_as) {
    m_name_address_as = name_address_as;
    m_name_address_as_isSet = true;
}

bool OAIMemberName::is_name_address_as_Set() const{
    return m_name_address_as_isSet;
}

bool OAIMemberName::is_name_address_as_Valid() const{
    return m_name_address_as_isValid;
}

QString OAIMemberName::getNameDisplayAs() const {
    return m_name_display_as;
}
void OAIMemberName::setNameDisplayAs(const QString &name_display_as) {
    m_name_display_as = name_display_as;
    m_name_display_as_isSet = true;
}

bool OAIMemberName::is_name_display_as_Set() const{
    return m_name_display_as_isSet;
}

bool OAIMemberName::is_name_display_as_Valid() const{
    return m_name_display_as_isValid;
}

QString OAIMemberName::getNameFullTitle() const {
    return m_name_full_title;
}
void OAIMemberName::setNameFullTitle(const QString &name_full_title) {
    m_name_full_title = name_full_title;
    m_name_full_title_isSet = true;
}

bool OAIMemberName::is_name_full_title_Set() const{
    return m_name_full_title_isSet;
}

bool OAIMemberName::is_name_full_title_Valid() const{
    return m_name_full_title_isValid;
}

QString OAIMemberName::getNameListAs() const {
    return m_name_list_as;
}
void OAIMemberName::setNameListAs(const QString &name_list_as) {
    m_name_list_as = name_list_as;
    m_name_list_as_isSet = true;
}

bool OAIMemberName::is_name_list_as_Set() const{
    return m_name_list_as_isSet;
}

bool OAIMemberName::is_name_list_as_Valid() const{
    return m_name_list_as_isValid;
}

QDateTime OAIMemberName::getStartDate() const {
    return m_start_date;
}
void OAIMemberName::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIMemberName::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIMemberName::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIMemberName::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_address_as_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_display_as_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_full_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_list_as_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMemberName::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
