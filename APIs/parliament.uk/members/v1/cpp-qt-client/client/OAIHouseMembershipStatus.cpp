/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHouseMembershipStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHouseMembershipStatus::OAIHouseMembershipStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHouseMembershipStatus::OAIHouseMembershipStatus() {
    this->initializeModel();
}

OAIHouseMembershipStatus::~OAIHouseMembershipStatus() {}

void OAIHouseMembershipStatus::initializeModel() {

    m_status_isSet = false;
    m_status_isValid = false;

    m_status_description_isSet = false;
    m_status_description_isValid = false;

    m_status_id_isSet = false;
    m_status_id_isValid = false;

    m_status_is_active_isSet = false;
    m_status_is_active_isValid = false;

    m_status_notes_isSet = false;
    m_status_notes_isValid = false;

    m_status_start_date_isSet = false;
    m_status_start_date_isValid = false;
}

void OAIHouseMembershipStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHouseMembershipStatus::fromJsonObject(QJsonObject json) {

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_status_description_isValid = ::OpenAPI::fromJsonValue(m_status_description, json[QString("statusDescription")]);
    m_status_description_isSet = !json[QString("statusDescription")].isNull() && m_status_description_isValid;

    m_status_id_isValid = ::OpenAPI::fromJsonValue(m_status_id, json[QString("statusId")]);
    m_status_id_isSet = !json[QString("statusId")].isNull() && m_status_id_isValid;

    m_status_is_active_isValid = ::OpenAPI::fromJsonValue(m_status_is_active, json[QString("statusIsActive")]);
    m_status_is_active_isSet = !json[QString("statusIsActive")].isNull() && m_status_is_active_isValid;

    m_status_notes_isValid = ::OpenAPI::fromJsonValue(m_status_notes, json[QString("statusNotes")]);
    m_status_notes_isSet = !json[QString("statusNotes")].isNull() && m_status_notes_isValid;

    m_status_start_date_isValid = ::OpenAPI::fromJsonValue(m_status_start_date, json[QString("statusStartDate")]);
    m_status_start_date_isSet = !json[QString("statusStartDate")].isNull() && m_status_start_date_isValid;
}

QString OAIHouseMembershipStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHouseMembershipStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_status_description_isSet) {
        obj.insert(QString("statusDescription"), ::OpenAPI::toJsonValue(m_status_description));
    }
    if (m_status_id_isSet) {
        obj.insert(QString("statusId"), ::OpenAPI::toJsonValue(m_status_id));
    }
    if (m_status_is_active_isSet) {
        obj.insert(QString("statusIsActive"), ::OpenAPI::toJsonValue(m_status_is_active));
    }
    if (m_status_notes_isSet) {
        obj.insert(QString("statusNotes"), ::OpenAPI::toJsonValue(m_status_notes));
    }
    if (m_status_start_date_isSet) {
        obj.insert(QString("statusStartDate"), ::OpenAPI::toJsonValue(m_status_start_date));
    }
    return obj;
}

OAIMemberStatus OAIHouseMembershipStatus::getStatus() const {
    return m_status;
}
void OAIHouseMembershipStatus::setStatus(const OAIMemberStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIHouseMembershipStatus::is_status_Set() const{
    return m_status_isSet;
}

bool OAIHouseMembershipStatus::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIHouseMembershipStatus::getStatusDescription() const {
    return m_status_description;
}
void OAIHouseMembershipStatus::setStatusDescription(const QString &status_description) {
    m_status_description = status_description;
    m_status_description_isSet = true;
}

bool OAIHouseMembershipStatus::is_status_description_Set() const{
    return m_status_description_isSet;
}

bool OAIHouseMembershipStatus::is_status_description_Valid() const{
    return m_status_description_isValid;
}

qint32 OAIHouseMembershipStatus::getStatusId() const {
    return m_status_id;
}
void OAIHouseMembershipStatus::setStatusId(const qint32 &status_id) {
    m_status_id = status_id;
    m_status_id_isSet = true;
}

bool OAIHouseMembershipStatus::is_status_id_Set() const{
    return m_status_id_isSet;
}

bool OAIHouseMembershipStatus::is_status_id_Valid() const{
    return m_status_id_isValid;
}

bool OAIHouseMembershipStatus::isStatusIsActive() const {
    return m_status_is_active;
}
void OAIHouseMembershipStatus::setStatusIsActive(const bool &status_is_active) {
    m_status_is_active = status_is_active;
    m_status_is_active_isSet = true;
}

bool OAIHouseMembershipStatus::is_status_is_active_Set() const{
    return m_status_is_active_isSet;
}

bool OAIHouseMembershipStatus::is_status_is_active_Valid() const{
    return m_status_is_active_isValid;
}

QString OAIHouseMembershipStatus::getStatusNotes() const {
    return m_status_notes;
}
void OAIHouseMembershipStatus::setStatusNotes(const QString &status_notes) {
    m_status_notes = status_notes;
    m_status_notes_isSet = true;
}

bool OAIHouseMembershipStatus::is_status_notes_Set() const{
    return m_status_notes_isSet;
}

bool OAIHouseMembershipStatus::is_status_notes_Valid() const{
    return m_status_notes_isValid;
}

QDateTime OAIHouseMembershipStatus::getStatusStartDate() const {
    return m_status_start_date;
}
void OAIHouseMembershipStatus::setStatusStartDate(const QDateTime &status_start_date) {
    m_status_start_date = status_start_date;
    m_status_start_date_isSet = true;
}

bool OAIHouseMembershipStatus::is_status_start_date_Set() const{
    return m_status_start_date_isSet;
}

bool OAIHouseMembershipStatus::is_status_start_date_Valid() const{
    return m_status_start_date_isValid;
}

bool OAIHouseMembershipStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_is_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHouseMembershipStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
