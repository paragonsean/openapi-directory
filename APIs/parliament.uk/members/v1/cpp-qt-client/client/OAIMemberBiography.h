/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMemberBiography.h
 *
 * 
 */

#ifndef OAIMemberBiography_H
#define OAIMemberBiography_H

#include <QJsonObject>

#include "OAIBiographyItem.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBiographyItem;

class OAIMemberBiography : public OAIObject {
public:
    OAIMemberBiography();
    OAIMemberBiography(QString json);
    ~OAIMemberBiography() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBiographyItem> getCommitteeMemberships() const;
    void setCommitteeMemberships(const QList<OAIBiographyItem> &committee_memberships);
    bool is_committee_memberships_Set() const;
    bool is_committee_memberships_Valid() const;

    QList<OAIBiographyItem> getElectionsContested() const;
    void setElectionsContested(const QList<OAIBiographyItem> &elections_contested);
    bool is_elections_contested_Set() const;
    bool is_elections_contested_Valid() const;

    QList<OAIBiographyItem> getGovernmentPosts() const;
    void setGovernmentPosts(const QList<OAIBiographyItem> &government_posts);
    bool is_government_posts_Set() const;
    bool is_government_posts_Valid() const;

    QList<OAIBiographyItem> getHouseMemberships() const;
    void setHouseMemberships(const QList<OAIBiographyItem> &house_memberships);
    bool is_house_memberships_Set() const;
    bool is_house_memberships_Valid() const;

    QList<OAIBiographyItem> getOppositionPosts() const;
    void setOppositionPosts(const QList<OAIBiographyItem> &opposition_posts);
    bool is_opposition_posts_Set() const;
    bool is_opposition_posts_Valid() const;

    QList<OAIBiographyItem> getOtherPosts() const;
    void setOtherPosts(const QList<OAIBiographyItem> &other_posts);
    bool is_other_posts_Set() const;
    bool is_other_posts_Valid() const;

    QList<OAIBiographyItem> getPartyAffiliations() const;
    void setPartyAffiliations(const QList<OAIBiographyItem> &party_affiliations);
    bool is_party_affiliations_Set() const;
    bool is_party_affiliations_Valid() const;

    QList<OAIBiographyItem> getRepresentations() const;
    void setRepresentations(const QList<OAIBiographyItem> &representations);
    bool is_representations_Set() const;
    bool is_representations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBiographyItem> m_committee_memberships;
    bool m_committee_memberships_isSet;
    bool m_committee_memberships_isValid;

    QList<OAIBiographyItem> m_elections_contested;
    bool m_elections_contested_isSet;
    bool m_elections_contested_isValid;

    QList<OAIBiographyItem> m_government_posts;
    bool m_government_posts_isSet;
    bool m_government_posts_isValid;

    QList<OAIBiographyItem> m_house_memberships;
    bool m_house_memberships_isSet;
    bool m_house_memberships_isValid;

    QList<OAIBiographyItem> m_opposition_posts;
    bool m_opposition_posts_isSet;
    bool m_opposition_posts_isValid;

    QList<OAIBiographyItem> m_other_posts;
    bool m_other_posts_isSet;
    bool m_other_posts_isValid;

    QList<OAIBiographyItem> m_party_affiliations;
    bool m_party_affiliations_isSet;
    bool m_party_affiliations_isValid;

    QList<OAIBiographyItem> m_representations;
    bool m_representations_isSet;
    bool m_representations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMemberBiography)

#endif // OAIMemberBiography_H
