/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBiographyItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBiographyItem::OAIBiographyItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBiographyItem::OAIBiographyItem() {
    this->initializeModel();
}

OAIBiographyItem::~OAIBiographyItem() {}

void OAIBiographyItem::initializeModel() {

    m_additional_info_isSet = false;
    m_additional_info_isValid = false;

    m_additional_info_link_isSet = false;
    m_additional_info_link_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_house_isSet = false;
    m_house_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;
}

void OAIBiographyItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBiographyItem::fromJsonObject(QJsonObject json) {

    m_additional_info_isValid = ::OpenAPI::fromJsonValue(m_additional_info, json[QString("additionalInfo")]);
    m_additional_info_isSet = !json[QString("additionalInfo")].isNull() && m_additional_info_isValid;

    m_additional_info_link_isValid = ::OpenAPI::fromJsonValue(m_additional_info_link, json[QString("additionalInfoLink")]);
    m_additional_info_link_isSet = !json[QString("additionalInfoLink")].isNull() && m_additional_info_link_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_house_isValid = ::OpenAPI::fromJsonValue(m_house, json[QString("house")]);
    m_house_isSet = !json[QString("house")].isNull() && m_house_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;
}

QString OAIBiographyItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBiographyItem::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_info_isSet) {
        obj.insert(QString("additionalInfo"), ::OpenAPI::toJsonValue(m_additional_info));
    }
    if (m_additional_info_link_isSet) {
        obj.insert(QString("additionalInfoLink"), ::OpenAPI::toJsonValue(m_additional_info_link));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_house.isSet()) {
        obj.insert(QString("house"), ::OpenAPI::toJsonValue(m_house));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    return obj;
}

QString OAIBiographyItem::getAdditionalInfo() const {
    return m_additional_info;
}
void OAIBiographyItem::setAdditionalInfo(const QString &additional_info) {
    m_additional_info = additional_info;
    m_additional_info_isSet = true;
}

bool OAIBiographyItem::is_additional_info_Set() const{
    return m_additional_info_isSet;
}

bool OAIBiographyItem::is_additional_info_Valid() const{
    return m_additional_info_isValid;
}

QString OAIBiographyItem::getAdditionalInfoLink() const {
    return m_additional_info_link;
}
void OAIBiographyItem::setAdditionalInfoLink(const QString &additional_info_link) {
    m_additional_info_link = additional_info_link;
    m_additional_info_link_isSet = true;
}

bool OAIBiographyItem::is_additional_info_link_Set() const{
    return m_additional_info_link_isSet;
}

bool OAIBiographyItem::is_additional_info_link_Valid() const{
    return m_additional_info_link_isValid;
}

QDateTime OAIBiographyItem::getEndDate() const {
    return m_end_date;
}
void OAIBiographyItem::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIBiographyItem::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIBiographyItem::is_end_date_Valid() const{
    return m_end_date_isValid;
}

OAIHouse OAIBiographyItem::getHouse() const {
    return m_house;
}
void OAIBiographyItem::setHouse(const OAIHouse &house) {
    m_house = house;
    m_house_isSet = true;
}

bool OAIBiographyItem::is_house_Set() const{
    return m_house_isSet;
}

bool OAIBiographyItem::is_house_Valid() const{
    return m_house_isValid;
}

qint32 OAIBiographyItem::getId() const {
    return m_id;
}
void OAIBiographyItem::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBiographyItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBiographyItem::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIBiographyItem::getName() const {
    return m_name;
}
void OAIBiographyItem::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBiographyItem::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBiographyItem::is_name_Valid() const{
    return m_name_isValid;
}

QDateTime OAIBiographyItem::getStartDate() const {
    return m_start_date;
}
void OAIBiographyItem::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIBiographyItem::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIBiographyItem::is_start_date_Valid() const{
    return m_start_date_isValid;
}

bool OAIBiographyItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_additional_info_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_house.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBiographyItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
