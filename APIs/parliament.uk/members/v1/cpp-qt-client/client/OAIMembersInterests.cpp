/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMembersInterests.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMembersInterests::OAIMembersInterests(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMembersInterests::OAIMembersInterests() {
    this->initializeModel();
}

OAIMembersInterests::~OAIMembersInterests() {}

void OAIMembersInterests::initializeModel() {

    m_interest_categories_isSet = false;
    m_interest_categories_isValid = false;

    m_member_isSet = false;
    m_member_isValid = false;
}

void OAIMembersInterests::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMembersInterests::fromJsonObject(QJsonObject json) {

    m_interest_categories_isValid = ::OpenAPI::fromJsonValue(m_interest_categories, json[QString("interestCategories")]);
    m_interest_categories_isSet = !json[QString("interestCategories")].isNull() && m_interest_categories_isValid;

    m_member_isValid = ::OpenAPI::fromJsonValue(m_member, json[QString("member")]);
    m_member_isSet = !json[QString("member")].isNull() && m_member_isValid;
}

QString OAIMembersInterests::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMembersInterests::asJsonObject() const {
    QJsonObject obj;
    if (m_interest_categories.size() > 0) {
        obj.insert(QString("interestCategories"), ::OpenAPI::toJsonValue(m_interest_categories));
    }
    if (m_member.isSet()) {
        obj.insert(QString("member"), ::OpenAPI::toJsonValue(m_member));
    }
    return obj;
}

QList<OAIRegisteredInterestCategory> OAIMembersInterests::getInterestCategories() const {
    return m_interest_categories;
}
void OAIMembersInterests::setInterestCategories(const QList<OAIRegisteredInterestCategory> &interest_categories) {
    m_interest_categories = interest_categories;
    m_interest_categories_isSet = true;
}

bool OAIMembersInterests::is_interest_categories_Set() const{
    return m_interest_categories_isSet;
}

bool OAIMembersInterests::is_interest_categories_Valid() const{
    return m_interest_categories_isValid;
}

OAIMember OAIMembersInterests::getMember() const {
    return m_member;
}
void OAIMembersInterests::setMember(const OAIMember &member) {
    m_member = member;
    m_member_isSet = true;
}

bool OAIMembersInterests::is_member_Set() const{
    return m_member_isSet;
}

bool OAIMembersInterests::is_member_Valid() const{
    return m_member_isValid;
}

bool OAIMembersInterests::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_interest_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_member.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMembersInterests::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
