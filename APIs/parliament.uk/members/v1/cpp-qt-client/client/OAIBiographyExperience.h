/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBiographyExperience.h
 *
 * 
 */

#ifndef OAIBiographyExperience_H
#define OAIBiographyExperience_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBiographyExperience : public OAIObject {
public:
    OAIBiographyExperience();
    OAIBiographyExperience(QString json);
    ~OAIBiographyExperience() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEndMonth() const;
    void setEndMonth(const qint32 &end_month);
    bool is_end_month_Set() const;
    bool is_end_month_Valid() const;

    qint32 getEndYear() const;
    void setEndYear(const qint32 &end_year);
    bool is_end_year_Set() const;
    bool is_end_year_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOrganisation() const;
    void setOrganisation(const QString &organisation);
    bool is_organisation_Set() const;
    bool is_organisation_Valid() const;

    qint32 getStartMonth() const;
    void setStartMonth(const qint32 &start_month);
    bool is_start_month_Set() const;
    bool is_start_month_Valid() const;

    qint32 getStartYear() const;
    void setStartYear(const qint32 &start_year);
    bool is_start_year_Set() const;
    bool is_start_year_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getTypeId() const;
    void setTypeId(const qint32 &type_id);
    bool is_type_id_Set() const;
    bool is_type_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_end_month;
    bool m_end_month_isSet;
    bool m_end_month_isValid;

    qint32 m_end_year;
    bool m_end_year_isSet;
    bool m_end_year_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_organisation;
    bool m_organisation_isSet;
    bool m_organisation_isValid;

    qint32 m_start_month;
    bool m_start_month_isSet;
    bool m_start_month_isValid;

    qint32 m_start_year;
    bool m_start_year_isSet;
    bool m_start_year_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_type_id;
    bool m_type_id_isSet;
    bool m_type_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBiographyExperience)

#endif // OAIBiographyExperience_H
