/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPartySeatCount.h
 *
 * 
 */

#ifndef OAIPartySeatCount_H
#define OAIPartySeatCount_H

#include <QJsonObject>

#include "OAIParty.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIParty;

class OAIPartySeatCount : public OAIObject {
public:
    OAIPartySeatCount();
    OAIPartySeatCount(QString json);
    ~OAIPartySeatCount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getFemale() const;
    void setFemale(const qint32 &female);
    bool is_female_Set() const;
    bool is_female_Valid() const;

    qint32 getMale() const;
    void setMale(const qint32 &male);
    bool is_male_Set() const;
    bool is_male_Valid() const;

    qint32 getNonBinary() const;
    void setNonBinary(const qint32 &non_binary);
    bool is_non_binary_Set() const;
    bool is_non_binary_Valid() const;

    OAIParty getParty() const;
    void setParty(const OAIParty &party);
    bool is_party_Set() const;
    bool is_party_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_female;
    bool m_female_isSet;
    bool m_female_isValid;

    qint32 m_male;
    bool m_male_isSet;
    bool m_male_isValid;

    qint32 m_non_binary;
    bool m_non_binary_isSet;
    bool m_non_binary_isValid;

    OAIParty m_party;
    bool m_party_isSet;
    bool m_party_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPartySeatCount)

#endif // OAIPartySeatCount_H
