# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.registered_interest import RegisteredInterest
from openapi_server import util


class RegisteredInterestCategory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, interests: List[RegisteredInterest]=None, name: str=None, sort_order: int=None):
        """RegisteredInterestCategory - a model defined in OpenAPI

        :param id: The id of this RegisteredInterestCategory.
        :param interests: The interests of this RegisteredInterestCategory.
        :param name: The name of this RegisteredInterestCategory.
        :param sort_order: The sort_order of this RegisteredInterestCategory.
        """
        self.openapi_types = {
            'id': int,
            'interests': List[RegisteredInterest],
            'name': str,
            'sort_order': int
        }

        self.attribute_map = {
            'id': 'id',
            'interests': 'interests',
            'name': 'name',
            'sort_order': 'sortOrder'
        }

        self._id = id
        self._interests = interests
        self._name = name
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegisteredInterestCategory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegisteredInterestCategory of this RegisteredInterestCategory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this RegisteredInterestCategory.


        :return: The id of this RegisteredInterestCategory.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RegisteredInterestCategory.


        :param id: The id of this RegisteredInterestCategory.
        :type id: int
        """

        self._id = id

    @property
    def interests(self):
        """Gets the interests of this RegisteredInterestCategory.


        :return: The interests of this RegisteredInterestCategory.
        :rtype: List[RegisteredInterest]
        """
        return self._interests

    @interests.setter
    def interests(self, interests):
        """Sets the interests of this RegisteredInterestCategory.


        :param interests: The interests of this RegisteredInterestCategory.
        :type interests: List[RegisteredInterest]
        """

        self._interests = interests

    @property
    def name(self):
        """Gets the name of this RegisteredInterestCategory.


        :return: The name of this RegisteredInterestCategory.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this RegisteredInterestCategory.


        :param name: The name of this RegisteredInterestCategory.
        :type name: str
        """

        self._name = name

    @property
    def sort_order(self):
        """Gets the sort_order of this RegisteredInterestCategory.


        :return: The sort_order of this RegisteredInterestCategory.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this RegisteredInterestCategory.


        :param sort_order: The sort_order of this RegisteredInterestCategory.
        :type sort_order: int
        """

        self._sort_order = sort_order
