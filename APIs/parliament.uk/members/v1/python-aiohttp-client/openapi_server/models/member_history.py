# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.house_membership import HouseMembership
from openapi_server.models.member_name import MemberName
from openapi_server.models.member_party import MemberParty
from openapi_server import util


class MemberHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, house_membership_history: List[HouseMembership]=None, id: int=None, name_history: List[MemberName]=None, party_history: List[MemberParty]=None, thumbnail_url: str=None):
        """MemberHistory - a model defined in OpenAPI

        :param house_membership_history: The house_membership_history of this MemberHistory.
        :param id: The id of this MemberHistory.
        :param name_history: The name_history of this MemberHistory.
        :param party_history: The party_history of this MemberHistory.
        :param thumbnail_url: The thumbnail_url of this MemberHistory.
        """
        self.openapi_types = {
            'house_membership_history': List[HouseMembership],
            'id': int,
            'name_history': List[MemberName],
            'party_history': List[MemberParty],
            'thumbnail_url': str
        }

        self.attribute_map = {
            'house_membership_history': 'houseMembershipHistory',
            'id': 'id',
            'name_history': 'nameHistory',
            'party_history': 'partyHistory',
            'thumbnail_url': 'thumbnailUrl'
        }

        self._house_membership_history = house_membership_history
        self._id = id
        self._name_history = name_history
        self._party_history = party_history
        self._thumbnail_url = thumbnail_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberHistory of this MemberHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def house_membership_history(self):
        """Gets the house_membership_history of this MemberHistory.


        :return: The house_membership_history of this MemberHistory.
        :rtype: List[HouseMembership]
        """
        return self._house_membership_history

    @house_membership_history.setter
    def house_membership_history(self, house_membership_history):
        """Sets the house_membership_history of this MemberHistory.


        :param house_membership_history: The house_membership_history of this MemberHistory.
        :type house_membership_history: List[HouseMembership]
        """

        self._house_membership_history = house_membership_history

    @property
    def id(self):
        """Gets the id of this MemberHistory.


        :return: The id of this MemberHistory.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MemberHistory.


        :param id: The id of this MemberHistory.
        :type id: int
        """

        self._id = id

    @property
    def name_history(self):
        """Gets the name_history of this MemberHistory.


        :return: The name_history of this MemberHistory.
        :rtype: List[MemberName]
        """
        return self._name_history

    @name_history.setter
    def name_history(self, name_history):
        """Sets the name_history of this MemberHistory.


        :param name_history: The name_history of this MemberHistory.
        :type name_history: List[MemberName]
        """

        self._name_history = name_history

    @property
    def party_history(self):
        """Gets the party_history of this MemberHistory.


        :return: The party_history of this MemberHistory.
        :rtype: List[MemberParty]
        """
        return self._party_history

    @party_history.setter
    def party_history(self, party_history):
        """Sets the party_history of this MemberHistory.


        :param party_history: The party_history of this MemberHistory.
        :type party_history: List[MemberParty]
        """

        self._party_history = party_history

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this MemberHistory.


        :return: The thumbnail_url of this MemberHistory.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this MemberHistory.


        :param thumbnail_url: The thumbnail_url of this MemberHistory.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url
