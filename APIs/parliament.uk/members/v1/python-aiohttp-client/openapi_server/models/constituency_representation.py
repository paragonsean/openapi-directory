# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.house_membership import HouseMembership
from openapi_server.models.member_item import MemberItem
from openapi_server import util


class ConstituencyRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, member: MemberItem=None, representation: HouseMembership=None):
        """ConstituencyRepresentation - a model defined in OpenAPI

        :param member: The member of this ConstituencyRepresentation.
        :param representation: The representation of this ConstituencyRepresentation.
        """
        self.openapi_types = {
            'member': MemberItem,
            'representation': HouseMembership
        }

        self.attribute_map = {
            'member': 'member',
            'representation': 'representation'
        }

        self._member = member
        self._representation = representation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConstituencyRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ConstituencyRepresentation of this ConstituencyRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member(self):
        """Gets the member of this ConstituencyRepresentation.


        :return: The member of this ConstituencyRepresentation.
        :rtype: MemberItem
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this ConstituencyRepresentation.


        :param member: The member of this ConstituencyRepresentation.
        :type member: MemberItem
        """

        self._member = member

    @property
    def representation(self):
        """Gets the representation of this ConstituencyRepresentation.


        :return: The representation of this ConstituencyRepresentation.
        :rtype: HouseMembership
        """
        return self._representation

    @representation.setter
    def representation(self, representation):
        """Sets the representation of this ConstituencyRepresentation.


        :param representation: The representation of this ConstituencyRepresentation.
        :type representation: HouseMembership
        """

        self._representation = representation
