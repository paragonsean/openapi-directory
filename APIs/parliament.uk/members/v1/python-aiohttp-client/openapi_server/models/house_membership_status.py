# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.member_status import MemberStatus
from openapi_server import util


class HouseMembershipStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: MemberStatus=None, status_description: str=None, status_id: int=None, status_is_active: bool=None, status_notes: str=None, status_start_date: datetime=None):
        """HouseMembershipStatus - a model defined in OpenAPI

        :param status: The status of this HouseMembershipStatus.
        :param status_description: The status_description of this HouseMembershipStatus.
        :param status_id: The status_id of this HouseMembershipStatus.
        :param status_is_active: The status_is_active of this HouseMembershipStatus.
        :param status_notes: The status_notes of this HouseMembershipStatus.
        :param status_start_date: The status_start_date of this HouseMembershipStatus.
        """
        self.openapi_types = {
            'status': MemberStatus,
            'status_description': str,
            'status_id': int,
            'status_is_active': bool,
            'status_notes': str,
            'status_start_date': datetime
        }

        self.attribute_map = {
            'status': 'status',
            'status_description': 'statusDescription',
            'status_id': 'statusId',
            'status_is_active': 'statusIsActive',
            'status_notes': 'statusNotes',
            'status_start_date': 'statusStartDate'
        }

        self._status = status
        self._status_description = status_description
        self._status_id = status_id
        self._status_is_active = status_is_active
        self._status_notes = status_notes
        self._status_start_date = status_start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HouseMembershipStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HouseMembershipStatus of this HouseMembershipStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this HouseMembershipStatus.


        :return: The status of this HouseMembershipStatus.
        :rtype: MemberStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this HouseMembershipStatus.


        :param status: The status of this HouseMembershipStatus.
        :type status: MemberStatus
        """

        self._status = status

    @property
    def status_description(self):
        """Gets the status_description of this HouseMembershipStatus.


        :return: The status_description of this HouseMembershipStatus.
        :rtype: str
        """
        return self._status_description

    @status_description.setter
    def status_description(self, status_description):
        """Sets the status_description of this HouseMembershipStatus.


        :param status_description: The status_description of this HouseMembershipStatus.
        :type status_description: str
        """

        self._status_description = status_description

    @property
    def status_id(self):
        """Gets the status_id of this HouseMembershipStatus.


        :return: The status_id of this HouseMembershipStatus.
        :rtype: int
        """
        return self._status_id

    @status_id.setter
    def status_id(self, status_id):
        """Sets the status_id of this HouseMembershipStatus.


        :param status_id: The status_id of this HouseMembershipStatus.
        :type status_id: int
        """

        self._status_id = status_id

    @property
    def status_is_active(self):
        """Gets the status_is_active of this HouseMembershipStatus.


        :return: The status_is_active of this HouseMembershipStatus.
        :rtype: bool
        """
        return self._status_is_active

    @status_is_active.setter
    def status_is_active(self, status_is_active):
        """Sets the status_is_active of this HouseMembershipStatus.


        :param status_is_active: The status_is_active of this HouseMembershipStatus.
        :type status_is_active: bool
        """

        self._status_is_active = status_is_active

    @property
    def status_notes(self):
        """Gets the status_notes of this HouseMembershipStatus.


        :return: The status_notes of this HouseMembershipStatus.
        :rtype: str
        """
        return self._status_notes

    @status_notes.setter
    def status_notes(self, status_notes):
        """Sets the status_notes of this HouseMembershipStatus.


        :param status_notes: The status_notes of this HouseMembershipStatus.
        :type status_notes: str
        """

        self._status_notes = status_notes

    @property
    def status_start_date(self):
        """Gets the status_start_date of this HouseMembershipStatus.


        :return: The status_start_date of this HouseMembershipStatus.
        :rtype: datetime
        """
        return self._status_start_date

    @status_start_date.setter
    def status_start_date(self, status_start_date):
        """Sets the status_start_date of this HouseMembershipStatus.


        :param status_start_date: The status_start_date of this HouseMembershipStatus.
        :type status_start_date: datetime
        """

        self._status_start_date = status_start_date
