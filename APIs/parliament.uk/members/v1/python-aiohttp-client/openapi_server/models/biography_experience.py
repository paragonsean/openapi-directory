# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BiographyExperience(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_month: int=None, end_year: int=None, id: int=None, organisation: str=None, start_month: int=None, start_year: int=None, title: str=None, type: str=None, type_id: int=None):
        """BiographyExperience - a model defined in OpenAPI

        :param end_month: The end_month of this BiographyExperience.
        :param end_year: The end_year of this BiographyExperience.
        :param id: The id of this BiographyExperience.
        :param organisation: The organisation of this BiographyExperience.
        :param start_month: The start_month of this BiographyExperience.
        :param start_year: The start_year of this BiographyExperience.
        :param title: The title of this BiographyExperience.
        :param type: The type of this BiographyExperience.
        :param type_id: The type_id of this BiographyExperience.
        """
        self.openapi_types = {
            'end_month': int,
            'end_year': int,
            'id': int,
            'organisation': str,
            'start_month': int,
            'start_year': int,
            'title': str,
            'type': str,
            'type_id': int
        }

        self.attribute_map = {
            'end_month': 'endMonth',
            'end_year': 'endYear',
            'id': 'id',
            'organisation': 'organisation',
            'start_month': 'startMonth',
            'start_year': 'startYear',
            'title': 'title',
            'type': 'type',
            'type_id': 'typeId'
        }

        self._end_month = end_month
        self._end_year = end_year
        self._id = id
        self._organisation = organisation
        self._start_month = start_month
        self._start_year = start_year
        self._title = title
        self._type = type
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BiographyExperience':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BiographyExperience of this BiographyExperience.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_month(self):
        """Gets the end_month of this BiographyExperience.


        :return: The end_month of this BiographyExperience.
        :rtype: int
        """
        return self._end_month

    @end_month.setter
    def end_month(self, end_month):
        """Sets the end_month of this BiographyExperience.


        :param end_month: The end_month of this BiographyExperience.
        :type end_month: int
        """

        self._end_month = end_month

    @property
    def end_year(self):
        """Gets the end_year of this BiographyExperience.


        :return: The end_year of this BiographyExperience.
        :rtype: int
        """
        return self._end_year

    @end_year.setter
    def end_year(self, end_year):
        """Sets the end_year of this BiographyExperience.


        :param end_year: The end_year of this BiographyExperience.
        :type end_year: int
        """

        self._end_year = end_year

    @property
    def id(self):
        """Gets the id of this BiographyExperience.


        :return: The id of this BiographyExperience.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BiographyExperience.


        :param id: The id of this BiographyExperience.
        :type id: int
        """

        self._id = id

    @property
    def organisation(self):
        """Gets the organisation of this BiographyExperience.


        :return: The organisation of this BiographyExperience.
        :rtype: str
        """
        return self._organisation

    @organisation.setter
    def organisation(self, organisation):
        """Sets the organisation of this BiographyExperience.


        :param organisation: The organisation of this BiographyExperience.
        :type organisation: str
        """

        self._organisation = organisation

    @property
    def start_month(self):
        """Gets the start_month of this BiographyExperience.


        :return: The start_month of this BiographyExperience.
        :rtype: int
        """
        return self._start_month

    @start_month.setter
    def start_month(self, start_month):
        """Sets the start_month of this BiographyExperience.


        :param start_month: The start_month of this BiographyExperience.
        :type start_month: int
        """

        self._start_month = start_month

    @property
    def start_year(self):
        """Gets the start_year of this BiographyExperience.


        :return: The start_year of this BiographyExperience.
        :rtype: int
        """
        return self._start_year

    @start_year.setter
    def start_year(self, start_year):
        """Sets the start_year of this BiographyExperience.


        :param start_year: The start_year of this BiographyExperience.
        :type start_year: int
        """

        self._start_year = start_year

    @property
    def title(self):
        """Gets the title of this BiographyExperience.


        :return: The title of this BiographyExperience.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BiographyExperience.


        :param title: The title of this BiographyExperience.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this BiographyExperience.


        :return: The type of this BiographyExperience.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BiographyExperience.


        :param type: The type of this BiographyExperience.
        :type type: str
        """

        self._type = type

    @property
    def type_id(self):
        """Gets the type_id of this BiographyExperience.


        :return: The type_id of this BiographyExperience.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this BiographyExperience.


        :param type_id: The type_id of this BiographyExperience.
        :type type_id: int
        """

        self._type_id = type_id
