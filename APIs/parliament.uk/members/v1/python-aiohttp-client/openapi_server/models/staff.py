# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Staff(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, details: str=None, forename: str=None, surname: str=None, title: str=None):
        """Staff - a model defined in OpenAPI

        :param details: The details of this Staff.
        :param forename: The forename of this Staff.
        :param surname: The surname of this Staff.
        :param title: The title of this Staff.
        """
        self.openapi_types = {
            'details': str,
            'forename': str,
            'surname': str,
            'title': str
        }

        self.attribute_map = {
            'details': 'details',
            'forename': 'forename',
            'surname': 'surname',
            'title': 'title'
        }

        self._details = details
        self._forename = forename
        self._surname = surname
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Staff':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Staff of this Staff.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def details(self):
        """Gets the details of this Staff.


        :return: The details of this Staff.
        :rtype: str
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this Staff.


        :param details: The details of this Staff.
        :type details: str
        """

        self._details = details

    @property
    def forename(self):
        """Gets the forename of this Staff.


        :return: The forename of this Staff.
        :rtype: str
        """
        return self._forename

    @forename.setter
    def forename(self, forename):
        """Sets the forename of this Staff.


        :param forename: The forename of this Staff.
        :type forename: str
        """

        self._forename = forename

    @property
    def surname(self):
        """Gets the surname of this Staff.


        :return: The surname of this Staff.
        :rtype: str
        """
        return self._surname

    @surname.setter
    def surname(self, surname):
        """Sets the surname of this Staff.


        :param surname: The surname of this Staff.
        :type surname: str
        """

        self._surname = surname

    @property
    def title(self):
        """Gets the title of this Staff.


        :return: The title of this Staff.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Staff.


        :param title: The title of this Staff.
        :type title: str
        """

        self._title = title
