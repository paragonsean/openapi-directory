# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MemberFocus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: str=None, focus: List[str]=None):
        """MemberFocus - a model defined in OpenAPI

        :param category: The category of this MemberFocus.
        :param focus: The focus of this MemberFocus.
        """
        self.openapi_types = {
            'category': str,
            'focus': List[str]
        }

        self.attribute_map = {
            'category': 'category',
            'focus': 'focus'
        }

        self._category = category
        self._focus = focus

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberFocus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberFocus of this MemberFocus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this MemberFocus.


        :return: The category of this MemberFocus.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this MemberFocus.


        :param category: The category of this MemberFocus.
        :type category: str
        """

        self._category = category

    @property
    def focus(self):
        """Gets the focus of this MemberFocus.


        :return: The focus of this MemberFocus.
        :rtype: List[str]
        """
        return self._focus

    @focus.setter
    def focus(self, focus):
        """Sets the focus of this MemberFocus.


        :param focus: The focus of this MemberFocus.
        :type focus: List[str]
        """

        self._focus = focus
