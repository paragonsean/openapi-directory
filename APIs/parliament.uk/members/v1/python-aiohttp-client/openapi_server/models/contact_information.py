# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, fax: str=None, is_preferred: bool=None, is_web_address: bool=None, line1: str=None, line2: str=None, line3: str=None, line4: str=None, line5: str=None, notes: str=None, phone: str=None, postcode: str=None, type: str=None, type_description: str=None, type_id: int=None):
        """ContactInformation - a model defined in OpenAPI

        :param email: The email of this ContactInformation.
        :param fax: The fax of this ContactInformation.
        :param is_preferred: The is_preferred of this ContactInformation.
        :param is_web_address: The is_web_address of this ContactInformation.
        :param line1: The line1 of this ContactInformation.
        :param line2: The line2 of this ContactInformation.
        :param line3: The line3 of this ContactInformation.
        :param line4: The line4 of this ContactInformation.
        :param line5: The line5 of this ContactInformation.
        :param notes: The notes of this ContactInformation.
        :param phone: The phone of this ContactInformation.
        :param postcode: The postcode of this ContactInformation.
        :param type: The type of this ContactInformation.
        :param type_description: The type_description of this ContactInformation.
        :param type_id: The type_id of this ContactInformation.
        """
        self.openapi_types = {
            'email': str,
            'fax': str,
            'is_preferred': bool,
            'is_web_address': bool,
            'line1': str,
            'line2': str,
            'line3': str,
            'line4': str,
            'line5': str,
            'notes': str,
            'phone': str,
            'postcode': str,
            'type': str,
            'type_description': str,
            'type_id': int
        }

        self.attribute_map = {
            'email': 'email',
            'fax': 'fax',
            'is_preferred': 'isPreferred',
            'is_web_address': 'isWebAddress',
            'line1': 'line1',
            'line2': 'line2',
            'line3': 'line3',
            'line4': 'line4',
            'line5': 'line5',
            'notes': 'notes',
            'phone': 'phone',
            'postcode': 'postcode',
            'type': 'type',
            'type_description': 'typeDescription',
            'type_id': 'typeId'
        }

        self._email = email
        self._fax = fax
        self._is_preferred = is_preferred
        self._is_web_address = is_web_address
        self._line1 = line1
        self._line2 = line2
        self._line3 = line3
        self._line4 = line4
        self._line5 = line5
        self._notes = notes
        self._phone = phone
        self._postcode = postcode
        self._type = type
        self._type_description = type_description
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactInformation of this ContactInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this ContactInformation.


        :return: The email of this ContactInformation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ContactInformation.


        :param email: The email of this ContactInformation.
        :type email: str
        """

        self._email = email

    @property
    def fax(self):
        """Gets the fax of this ContactInformation.


        :return: The fax of this ContactInformation.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this ContactInformation.


        :param fax: The fax of this ContactInformation.
        :type fax: str
        """

        self._fax = fax

    @property
    def is_preferred(self):
        """Gets the is_preferred of this ContactInformation.


        :return: The is_preferred of this ContactInformation.
        :rtype: bool
        """
        return self._is_preferred

    @is_preferred.setter
    def is_preferred(self, is_preferred):
        """Sets the is_preferred of this ContactInformation.


        :param is_preferred: The is_preferred of this ContactInformation.
        :type is_preferred: bool
        """

        self._is_preferred = is_preferred

    @property
    def is_web_address(self):
        """Gets the is_web_address of this ContactInformation.


        :return: The is_web_address of this ContactInformation.
        :rtype: bool
        """
        return self._is_web_address

    @is_web_address.setter
    def is_web_address(self, is_web_address):
        """Sets the is_web_address of this ContactInformation.


        :param is_web_address: The is_web_address of this ContactInformation.
        :type is_web_address: bool
        """

        self._is_web_address = is_web_address

    @property
    def line1(self):
        """Gets the line1 of this ContactInformation.


        :return: The line1 of this ContactInformation.
        :rtype: str
        """
        return self._line1

    @line1.setter
    def line1(self, line1):
        """Sets the line1 of this ContactInformation.


        :param line1: The line1 of this ContactInformation.
        :type line1: str
        """

        self._line1 = line1

    @property
    def line2(self):
        """Gets the line2 of this ContactInformation.


        :return: The line2 of this ContactInformation.
        :rtype: str
        """
        return self._line2

    @line2.setter
    def line2(self, line2):
        """Sets the line2 of this ContactInformation.


        :param line2: The line2 of this ContactInformation.
        :type line2: str
        """

        self._line2 = line2

    @property
    def line3(self):
        """Gets the line3 of this ContactInformation.


        :return: The line3 of this ContactInformation.
        :rtype: str
        """
        return self._line3

    @line3.setter
    def line3(self, line3):
        """Sets the line3 of this ContactInformation.


        :param line3: The line3 of this ContactInformation.
        :type line3: str
        """

        self._line3 = line3

    @property
    def line4(self):
        """Gets the line4 of this ContactInformation.


        :return: The line4 of this ContactInformation.
        :rtype: str
        """
        return self._line4

    @line4.setter
    def line4(self, line4):
        """Sets the line4 of this ContactInformation.


        :param line4: The line4 of this ContactInformation.
        :type line4: str
        """

        self._line4 = line4

    @property
    def line5(self):
        """Gets the line5 of this ContactInformation.


        :return: The line5 of this ContactInformation.
        :rtype: str
        """
        return self._line5

    @line5.setter
    def line5(self, line5):
        """Sets the line5 of this ContactInformation.


        :param line5: The line5 of this ContactInformation.
        :type line5: str
        """

        self._line5 = line5

    @property
    def notes(self):
        """Gets the notes of this ContactInformation.


        :return: The notes of this ContactInformation.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ContactInformation.


        :param notes: The notes of this ContactInformation.
        :type notes: str
        """

        self._notes = notes

    @property
    def phone(self):
        """Gets the phone of this ContactInformation.


        :return: The phone of this ContactInformation.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this ContactInformation.


        :param phone: The phone of this ContactInformation.
        :type phone: str
        """

        self._phone = phone

    @property
    def postcode(self):
        """Gets the postcode of this ContactInformation.


        :return: The postcode of this ContactInformation.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this ContactInformation.


        :param postcode: The postcode of this ContactInformation.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def type(self):
        """Gets the type of this ContactInformation.


        :return: The type of this ContactInformation.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContactInformation.


        :param type: The type of this ContactInformation.
        :type type: str
        """

        self._type = type

    @property
    def type_description(self):
        """Gets the type_description of this ContactInformation.


        :return: The type_description of this ContactInformation.
        :rtype: str
        """
        return self._type_description

    @type_description.setter
    def type_description(self, type_description):
        """Sets the type_description of this ContactInformation.


        :param type_description: The type_description of this ContactInformation.
        :type type_description: str
        """

        self._type_description = type_description

    @property
    def type_id(self):
        """Gets the type_id of this ContactInformation.


        :return: The type_id of this ContactInformation.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this ContactInformation.


        :param type_id: The type_id of this ContactInformation.
        :type type_id: int
        """

        self._type_id = type_id
