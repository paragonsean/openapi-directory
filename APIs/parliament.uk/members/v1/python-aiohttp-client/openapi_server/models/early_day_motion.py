# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EarlyDayMotion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_tabled: datetime=None, id: int=None, is_amendment: bool=None, is_prayer: bool=None, number: str=None, sponsors_count: int=None, title: str=None):
        """EarlyDayMotion - a model defined in OpenAPI

        :param date_tabled: The date_tabled of this EarlyDayMotion.
        :param id: The id of this EarlyDayMotion.
        :param is_amendment: The is_amendment of this EarlyDayMotion.
        :param is_prayer: The is_prayer of this EarlyDayMotion.
        :param number: The number of this EarlyDayMotion.
        :param sponsors_count: The sponsors_count of this EarlyDayMotion.
        :param title: The title of this EarlyDayMotion.
        """
        self.openapi_types = {
            'date_tabled': datetime,
            'id': int,
            'is_amendment': bool,
            'is_prayer': bool,
            'number': str,
            'sponsors_count': int,
            'title': str
        }

        self.attribute_map = {
            'date_tabled': 'dateTabled',
            'id': 'id',
            'is_amendment': 'isAmendment',
            'is_prayer': 'isPrayer',
            'number': 'number',
            'sponsors_count': 'sponsorsCount',
            'title': 'title'
        }

        self._date_tabled = date_tabled
        self._id = id
        self._is_amendment = is_amendment
        self._is_prayer = is_prayer
        self._number = number
        self._sponsors_count = sponsors_count
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EarlyDayMotion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EarlyDayMotion of this EarlyDayMotion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_tabled(self):
        """Gets the date_tabled of this EarlyDayMotion.


        :return: The date_tabled of this EarlyDayMotion.
        :rtype: datetime
        """
        return self._date_tabled

    @date_tabled.setter
    def date_tabled(self, date_tabled):
        """Sets the date_tabled of this EarlyDayMotion.


        :param date_tabled: The date_tabled of this EarlyDayMotion.
        :type date_tabled: datetime
        """

        self._date_tabled = date_tabled

    @property
    def id(self):
        """Gets the id of this EarlyDayMotion.


        :return: The id of this EarlyDayMotion.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EarlyDayMotion.


        :param id: The id of this EarlyDayMotion.
        :type id: int
        """

        self._id = id

    @property
    def is_amendment(self):
        """Gets the is_amendment of this EarlyDayMotion.


        :return: The is_amendment of this EarlyDayMotion.
        :rtype: bool
        """
        return self._is_amendment

    @is_amendment.setter
    def is_amendment(self, is_amendment):
        """Sets the is_amendment of this EarlyDayMotion.


        :param is_amendment: The is_amendment of this EarlyDayMotion.
        :type is_amendment: bool
        """

        self._is_amendment = is_amendment

    @property
    def is_prayer(self):
        """Gets the is_prayer of this EarlyDayMotion.


        :return: The is_prayer of this EarlyDayMotion.
        :rtype: bool
        """
        return self._is_prayer

    @is_prayer.setter
    def is_prayer(self, is_prayer):
        """Sets the is_prayer of this EarlyDayMotion.


        :param is_prayer: The is_prayer of this EarlyDayMotion.
        :type is_prayer: bool
        """

        self._is_prayer = is_prayer

    @property
    def number(self):
        """Gets the number of this EarlyDayMotion.


        :return: The number of this EarlyDayMotion.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this EarlyDayMotion.


        :param number: The number of this EarlyDayMotion.
        :type number: str
        """

        self._number = number

    @property
    def sponsors_count(self):
        """Gets the sponsors_count of this EarlyDayMotion.


        :return: The sponsors_count of this EarlyDayMotion.
        :rtype: int
        """
        return self._sponsors_count

    @sponsors_count.setter
    def sponsors_count(self, sponsors_count):
        """Sets the sponsors_count of this EarlyDayMotion.


        :param sponsors_count: The sponsors_count of this EarlyDayMotion.
        :type sponsors_count: int
        """

        self._sponsors_count = sponsors_count

    @property
    def title(self):
        """Gets the title of this EarlyDayMotion.


        :return: The title of this EarlyDayMotion.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this EarlyDayMotion.


        :param title: The title of this EarlyDayMotion.
        :type title: str
        """

        self._title = title
