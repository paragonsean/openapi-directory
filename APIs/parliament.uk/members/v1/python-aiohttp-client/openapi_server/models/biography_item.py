# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.house import House
from openapi_server import util


class BiographyItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_info: str=None, additional_info_link: str=None, end_date: datetime=None, house: House=None, id: int=None, name: str=None, start_date: datetime=None):
        """BiographyItem - a model defined in OpenAPI

        :param additional_info: The additional_info of this BiographyItem.
        :param additional_info_link: The additional_info_link of this BiographyItem.
        :param end_date: The end_date of this BiographyItem.
        :param house: The house of this BiographyItem.
        :param id: The id of this BiographyItem.
        :param name: The name of this BiographyItem.
        :param start_date: The start_date of this BiographyItem.
        """
        self.openapi_types = {
            'additional_info': str,
            'additional_info_link': str,
            'end_date': datetime,
            'house': House,
            'id': int,
            'name': str,
            'start_date': datetime
        }

        self.attribute_map = {
            'additional_info': 'additionalInfo',
            'additional_info_link': 'additionalInfoLink',
            'end_date': 'endDate',
            'house': 'house',
            'id': 'id',
            'name': 'name',
            'start_date': 'startDate'
        }

        self._additional_info = additional_info
        self._additional_info_link = additional_info_link
        self._end_date = end_date
        self._house = house
        self._id = id
        self._name = name
        self._start_date = start_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BiographyItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BiographyItem of this BiographyItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_info(self):
        """Gets the additional_info of this BiographyItem.


        :return: The additional_info of this BiographyItem.
        :rtype: str
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this BiographyItem.


        :param additional_info: The additional_info of this BiographyItem.
        :type additional_info: str
        """

        self._additional_info = additional_info

    @property
    def additional_info_link(self):
        """Gets the additional_info_link of this BiographyItem.


        :return: The additional_info_link of this BiographyItem.
        :rtype: str
        """
        return self._additional_info_link

    @additional_info_link.setter
    def additional_info_link(self, additional_info_link):
        """Sets the additional_info_link of this BiographyItem.


        :param additional_info_link: The additional_info_link of this BiographyItem.
        :type additional_info_link: str
        """

        self._additional_info_link = additional_info_link

    @property
    def end_date(self):
        """Gets the end_date of this BiographyItem.


        :return: The end_date of this BiographyItem.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this BiographyItem.


        :param end_date: The end_date of this BiographyItem.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def house(self):
        """Gets the house of this BiographyItem.


        :return: The house of this BiographyItem.
        :rtype: House
        """
        return self._house

    @house.setter
    def house(self, house):
        """Sets the house of this BiographyItem.


        :param house: The house of this BiographyItem.
        :type house: House
        """

        self._house = house

    @property
    def id(self):
        """Gets the id of this BiographyItem.


        :return: The id of this BiographyItem.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BiographyItem.


        :param id: The id of this BiographyItem.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this BiographyItem.


        :return: The name of this BiographyItem.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BiographyItem.


        :param name: The name of this BiographyItem.
        :type name: str
        """

        self._name = name

    @property
    def start_date(self):
        """Gets the start_date of this BiographyItem.


        :return: The start_date of this BiographyItem.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this BiographyItem.


        :param start_date: The start_date of this BiographyItem.
        :type start_date: datetime
        """

        self._start_date = start_date
