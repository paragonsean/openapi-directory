/*
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ConstituencyItem;
import org.openapitools.client.model.ConstituencyMembersServiceSearchResult;
import org.openapitools.client.model.ConstituencyRepresentationListItem;
import org.openapitools.client.model.ElectionResultItem;
import org.openapitools.client.model.ElectionResultListItem;
import org.openapitools.client.model.LocationItem;
import org.openapitools.client.model.LocationType;
import org.openapitools.client.model.StringItem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LocationApi
 */
@Disabled
public class LocationApiTest {

    private final LocationApi api = new LocationApi();

    /**
     * Returns a list of locations, both parent and child
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationBrowseLocationTypeLocationNameGetTest() throws ApiException {
        LocationType locationType = null;
        String locationName = null;
        LocationItem response = api.apiLocationBrowseLocationTypeLocationNameGet(locationType, locationName);
        // TODO: test validations
    }

    /**
     * Returns an election result by constituency and election id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencyIdElectionResultElectionIdGetTest() throws ApiException {
        Integer id = null;
        Integer electionId = null;
        ElectionResultItem response = api.apiLocationConstituencyIdElectionResultElectionIdGet(id, electionId);
        // TODO: test validations
    }

    /**
     * Returns latest election result by constituency id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencyIdElectionResultLatestGetTest() throws ApiException {
        Integer id = null;
        ElectionResultItem response = api.apiLocationConstituencyIdElectionResultLatestGet(id);
        // TODO: test validations
    }

    /**
     * Returns a list of election results by constituency ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencyIdElectionResultsGetTest() throws ApiException {
        Integer id = null;
        ElectionResultListItem response = api.apiLocationConstituencyIdElectionResultsGet(id);
        // TODO: test validations
    }

    /**
     * Returns geometry by constituency ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencyIdGeometryGetTest() throws ApiException {
        Integer id = null;
        StringItem response = api.apiLocationConstituencyIdGeometryGet(id);
        // TODO: test validations
    }

    /**
     * Returns a constituency by ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencyIdGetTest() throws ApiException {
        Integer id = null;
        ConstituencyItem response = api.apiLocationConstituencyIdGet(id);
        // TODO: test validations
    }

    /**
     * Returns a list of representations by constituency ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencyIdRepresentationsGetTest() throws ApiException {
        Integer id = null;
        ConstituencyRepresentationListItem response = api.apiLocationConstituencyIdRepresentationsGet(id);
        // TODO: test validations
    }

    /**
     * Returns a synopsis by constituency ID
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencyIdSynopsisGetTest() throws ApiException {
        Integer id = null;
        StringItem response = api.apiLocationConstituencyIdSynopsisGet(id);
        // TODO: test validations
    }

    /**
     * Returns a list of constituencies
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiLocationConstituencySearchGetTest() throws ApiException {
        String searchText = null;
        Integer skip = null;
        Integer take = null;
        ConstituencyMembersServiceSearchResult response = api.apiLocationConstituencySearchGet(searchText, skip, take);
        // TODO: test validations
    }

}
