/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MembersInterestsMembersServiceSearchResult from '../model/MembersInterestsMembersServiceSearchResult';
import MembersStaffMembersServiceSearchResult from '../model/MembersStaffMembersServiceSearchResult';

/**
* LordsInterests service.
* @module api/LordsInterestsApi
* @version v1
*/
export default class LordsInterestsApi {

    /**
    * Constructs a new LordsInterestsApi. 
    * @alias module:api/LordsInterestsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiLordsInterestsRegisterGet operation.
     * @callback module:api/LordsInterestsApi~apiLordsInterestsRegisterGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MembersInterestsMembersServiceSearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of registered interests
     * @param {Object} opts Optional parameters
     * @param {String} [searchTerm] Registered interests containing search term
     * @param {Number} [page] Page of results to return, default 0. Results per page 20.
     * @param {Boolean} [includeDeleted = false)] Registered interests that have been deleted
     * @param {module:api/LordsInterestsApi~apiLordsInterestsRegisterGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MembersInterestsMembersServiceSearchResult}
     */
    apiLordsInterestsRegisterGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'searchTerm': opts['searchTerm'],
        'page': opts['page'],
        'includeDeleted': opts['includeDeleted']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = MembersInterestsMembersServiceSearchResult;
      return this.apiClient.callApi(
        '/api/LordsInterests/Register', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiLordsInterestsStaffGet operation.
     * @callback module:api/LordsInterestsApi~apiLordsInterestsStaffGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MembersStaffMembersServiceSearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of staff
     * @param {Object} opts Optional parameters
     * @param {String} [searchTerm] Staff containing search term
     * @param {Number} [page] Page of results to return, default 0. Results per page 20.
     * @param {module:api/LordsInterestsApi~apiLordsInterestsStaffGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MembersStaffMembersServiceSearchResult}
     */
    apiLordsInterestsStaffGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'searchTerm': opts['searchTerm'],
        'page': opts['page']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = MembersStaffMembersServiceSearchResult;
      return this.apiClient.callApi(
        '/api/LordsInterests/Staff', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
