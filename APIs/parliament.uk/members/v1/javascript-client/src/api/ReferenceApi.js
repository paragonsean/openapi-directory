/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AnsweringBody from '../model/AnsweringBody';
import GenericReferenceData from '../model/GenericReferenceData';
import GovernmentDepartment from '../model/GovernmentDepartment';

/**
* Reference service.
* @module api/ReferenceApi
* @version v1
*/
export default class ReferenceApi {

    /**
    * Constructs a new ReferenceApi. 
    * @alias module:api/ReferenceApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiReferenceAnsweringBodiesGet operation.
     * @callback module:api/ReferenceApi~apiReferenceAnsweringBodiesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/AnsweringBody>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of answering bodies.
     * @param {Object} opts Optional parameters
     * @param {Number} [id] 
     * @param {String} [nameContains] 
     * @param {module:api/ReferenceApi~apiReferenceAnsweringBodiesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/AnsweringBody>}
     */
    apiReferenceAnsweringBodiesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'nameContains': opts['nameContains']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [AnsweringBody];
      return this.apiClient.callApi(
        '/api/Reference/AnsweringBodies', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiReferenceDepartmentsGet operation.
     * @callback module:api/ReferenceApi~apiReferenceDepartmentsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GovernmentDepartment>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of departments.
     * @param {Object} opts Optional parameters
     * @param {Number} [id] 
     * @param {String} [nameContains] 
     * @param {module:api/ReferenceApi~apiReferenceDepartmentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GovernmentDepartment>}
     */
    apiReferenceDepartmentsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'id': opts['id'],
        'nameContains': opts['nameContains']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [GovernmentDepartment];
      return this.apiClient.callApi(
        '/api/Reference/Departments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiReferenceDepartmentsIdLogoGet operation.
     * @callback module:api/ReferenceApi~apiReferenceDepartmentsIdLogoGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns department logo.
     * @param {Number} id Logo by department ID
     * @param {module:api/ReferenceApi~apiReferenceDepartmentsIdLogoGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiReferenceDepartmentsIdLogoGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiReferenceDepartmentsIdLogoGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/Reference/Departments/{id}/Logo', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiReferencePolicyInterestsGet operation.
     * @callback module:api/ReferenceApi~apiReferencePolicyInterestsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GenericReferenceData>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of policy interest.
     * @param {module:api/ReferenceApi~apiReferencePolicyInterestsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GenericReferenceData>}
     */
    apiReferencePolicyInterestsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [GenericReferenceData];
      return this.apiClient.callApi(
        '/api/Reference/PolicyInterests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
