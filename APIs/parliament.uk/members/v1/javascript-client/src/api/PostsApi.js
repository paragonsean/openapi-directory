/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GovernmentDepartment from '../model/GovernmentDepartment';
import GovernmentOppositionPostItem from '../model/GovernmentOppositionPostItem';
import MemberItem from '../model/MemberItem';
import PostType from '../model/PostType';

/**
* Posts service.
* @module api/PostsApi
* @version v1
*/
export default class PostsApi {

    /**
    * Constructs a new PostsApi. 
    * @alias module:api/PostsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiPostsDepartmentsTypeGet operation.
     * @callback module:api/PostsApi~apiPostsDepartmentsTypeGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GovernmentDepartment>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of departments.
     * @param {module:model/PostType} type Departments by type
     * @param {module:api/PostsApi~apiPostsDepartmentsTypeGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GovernmentDepartment>}
     */
    apiPostsDepartmentsTypeGet(type, callback) {
      let postBody = null;
      // verify the required parameter 'type' is set
      if (type === undefined || type === null) {
        throw new Error("Missing the required parameter 'type' when calling apiPostsDepartmentsTypeGet");
      }

      let pathParams = {
        'type': type
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [GovernmentDepartment];
      return this.apiClient.callApi(
        '/api/Posts/Departments/{type}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPostsGovernmentPostsGet operation.
     * @callback module:api/PostsApi~apiPostsGovernmentPostsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GovernmentOppositionPostItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of government posts.
     * @param {Object} opts Optional parameters
     * @param {Number} [departmentId] Government posts by department ID
     * @param {module:api/PostsApi~apiPostsGovernmentPostsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GovernmentOppositionPostItem>}
     */
    apiPostsGovernmentPostsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'departmentId': opts['departmentId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [GovernmentOppositionPostItem];
      return this.apiClient.callApi(
        '/api/Posts/GovernmentPosts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPostsOppositionPostsGet operation.
     * @callback module:api/PostsApi~apiPostsOppositionPostsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GovernmentOppositionPostItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of opposition posts.
     * @param {Object} opts Optional parameters
     * @param {Number} [departmentId] Opposition posts by department ID
     * @param {module:api/PostsApi~apiPostsOppositionPostsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GovernmentOppositionPostItem>}
     */
    apiPostsOppositionPostsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'departmentId': opts['departmentId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [GovernmentOppositionPostItem];
      return this.apiClient.callApi(
        '/api/Posts/OppositionPosts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPostsSpeakerAndDeputiesForDateGet operation.
     * @callback module:api/PostsApi~apiPostsSpeakerAndDeputiesForDateGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MemberItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list containing the speaker and deputy speakers.
     * @param {Date} forDate Speaker and deputy speakers for date specified
     * @param {module:api/PostsApi~apiPostsSpeakerAndDeputiesForDateGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MemberItem>}
     */
    apiPostsSpeakerAndDeputiesForDateGet(forDate, callback) {
      let postBody = null;
      // verify the required parameter 'forDate' is set
      if (forDate === undefined || forDate === null) {
        throw new Error("Missing the required parameter 'forDate' when calling apiPostsSpeakerAndDeputiesForDateGet");
      }

      let pathParams = {
        'forDate': forDate
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [MemberItem];
      return this.apiClient.callApi(
        '/api/Posts/SpeakerAndDeputies/{forDate}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiPostsSpokespersonsGet operation.
     * @callback module:api/PostsApi~apiPostsSpokespersonsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GovernmentOppositionPostItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of spokespersons.
     * @param {Object} opts Optional parameters
     * @param {Number} [partyId] Spokespersons by party ID
     * @param {module:api/PostsApi~apiPostsSpokespersonsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GovernmentOppositionPostItem>}
     */
    apiPostsSpokespersonsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'partyId': opts['partyId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = [GovernmentOppositionPostItem];
      return this.apiClient.callApi(
        '/api/Posts/Spokespersons', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
