/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GovernmentDepartment from './GovernmentDepartment';

/**
 * The AnsweringBody model module.
 * @module model/AnsweringBody
 * @version v1
 */
class AnsweringBody {
    /**
     * Constructs a new <code>AnsweringBody</code>.
     * @alias module:model/AnsweringBody
     */
    constructor() { 
        
        AnsweringBody.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnsweringBody</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnsweringBody} obj Optional instance to populate.
     * @return {module:model/AnsweringBody} The populated <code>AnsweringBody</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnsweringBody();

            if (data.hasOwnProperty('department')) {
                obj['department'] = GovernmentDepartment.constructFromObject(data['department']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('shortName')) {
                obj['shortName'] = ApiClient.convertToType(data['shortName'], 'String');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnsweringBody</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnsweringBody</code>.
     */
    static validateJSON(data) {
        // validate the optional field `department`
        if (data['department']) { // data not null
          GovernmentDepartment.validateJSON(data['department']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['shortName'] && !(typeof data['shortName'] === 'string' || data['shortName'] instanceof String)) {
            throw new Error("Expected the field `shortName` to be a primitive type in the JSON string but got " + data['shortName']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }

        return true;
    }


}



/**
 * @member {module:model/GovernmentDepartment} department
 */
AnsweringBody.prototype['department'] = undefined;

/**
 * @member {Number} id
 */
AnsweringBody.prototype['id'] = undefined;

/**
 * @member {String} name
 */
AnsweringBody.prototype['name'] = undefined;

/**
 * @member {String} shortName
 */
AnsweringBody.prototype['shortName'] = undefined;

/**
 * @member {String} target
 */
AnsweringBody.prototype['target'] = undefined;






export default AnsweringBody;

