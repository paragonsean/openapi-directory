/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GovernmentDepartment from './GovernmentDepartment';
import GovernmentOppositionPostHolder from './GovernmentOppositionPostHolder';
import PostType from './PostType';

/**
 * The GovernmentOppositionPost model module.
 * @module model/GovernmentOppositionPost
 * @version v1
 */
class GovernmentOppositionPost {
    /**
     * Constructs a new <code>GovernmentOppositionPost</code>.
     * @alias module:model/GovernmentOppositionPost
     */
    constructor() { 
        
        GovernmentOppositionPost.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GovernmentOppositionPost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GovernmentOppositionPost} obj Optional instance to populate.
     * @return {module:model/GovernmentOppositionPost} The populated <code>GovernmentOppositionPost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GovernmentOppositionPost();

            if (data.hasOwnProperty('createdWhen')) {
                obj['createdWhen'] = ApiClient.convertToType(data['createdWhen'], 'Date');
            }
            if (data.hasOwnProperty('governmentDepartments')) {
                obj['governmentDepartments'] = ApiClient.convertToType(data['governmentDepartments'], [GovernmentDepartment]);
            }
            if (data.hasOwnProperty('hansardName')) {
                obj['hansardName'] = ApiClient.convertToType(data['hansardName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'Number');
            }
            if (data.hasOwnProperty('postHolders')) {
                obj['postHolders'] = ApiClient.convertToType(data['postHolders'], [GovernmentOppositionPostHolder]);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = PostType.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GovernmentOppositionPost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GovernmentOppositionPost</code>.
     */
    static validateJSON(data) {
        if (data['governmentDepartments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['governmentDepartments'])) {
                throw new Error("Expected the field `governmentDepartments` to be an array in the JSON data but got " + data['governmentDepartments']);
            }
            // validate the optional field `governmentDepartments` (array)
            for (const item of data['governmentDepartments']) {
                GovernmentDepartment.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['hansardName'] && !(typeof data['hansardName'] === 'string' || data['hansardName'] instanceof String)) {
            throw new Error("Expected the field `hansardName` to be a primitive type in the JSON string but got " + data['hansardName']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['postHolders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['postHolders'])) {
                throw new Error("Expected the field `postHolders` to be an array in the JSON data but got " + data['postHolders']);
            }
            // validate the optional field `postHolders` (array)
            for (const item of data['postHolders']) {
                GovernmentOppositionPostHolder.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Date} createdWhen
 */
GovernmentOppositionPost.prototype['createdWhen'] = undefined;

/**
 * @member {Array.<module:model/GovernmentDepartment>} governmentDepartments
 */
GovernmentOppositionPost.prototype['governmentDepartments'] = undefined;

/**
 * @member {String} hansardName
 */
GovernmentOppositionPost.prototype['hansardName'] = undefined;

/**
 * @member {Number} id
 */
GovernmentOppositionPost.prototype['id'] = undefined;

/**
 * @member {String} name
 */
GovernmentOppositionPost.prototype['name'] = undefined;

/**
 * @member {Number} order
 */
GovernmentOppositionPost.prototype['order'] = undefined;

/**
 * @member {Array.<module:model/GovernmentOppositionPostHolder>} postHolders
 */
GovernmentOppositionPost.prototype['postHolders'] = undefined;

/**
 * @member {module:model/PostType} type
 */
GovernmentOppositionPost.prototype['type'] = undefined;






export default GovernmentOppositionPost;

