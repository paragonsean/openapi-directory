/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocationContext from './LocationContext';
import PartySeatCount from './PartySeatCount';

/**
 * The Location model module.
 * @module model/Location
 * @version v1
 */
class Location {
    /**
     * Constructs a new <code>Location</code>.
     * @alias module:model/Location
     */
    constructor() { 
        
        Location.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Location</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Location} obj Optional instance to populate.
     * @return {module:model/Location} The populated <code>Location</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Location();

            if (data.hasOwnProperty('childContexts')) {
                obj['childContexts'] = ApiClient.convertToType(data['childContexts'], [LocationContext]);
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = LocationContext.constructFromObject(data['context']);
            }
            if (data.hasOwnProperty('parentContext')) {
                obj['parentContext'] = LocationContext.constructFromObject(data['parentContext']);
            }
            if (data.hasOwnProperty('stateOfTheParties')) {
                obj['stateOfTheParties'] = ApiClient.convertToType(data['stateOfTheParties'], [PartySeatCount]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Location</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Location</code>.
     */
    static validateJSON(data) {
        if (data['childContexts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['childContexts'])) {
                throw new Error("Expected the field `childContexts` to be an array in the JSON data but got " + data['childContexts']);
            }
            // validate the optional field `childContexts` (array)
            for (const item of data['childContexts']) {
                LocationContext.validateJSON(item);
            };
        }
        // validate the optional field `context`
        if (data['context']) { // data not null
          LocationContext.validateJSON(data['context']);
        }
        // validate the optional field `parentContext`
        if (data['parentContext']) { // data not null
          LocationContext.validateJSON(data['parentContext']);
        }
        if (data['stateOfTheParties']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stateOfTheParties'])) {
                throw new Error("Expected the field `stateOfTheParties` to be an array in the JSON data but got " + data['stateOfTheParties']);
            }
            // validate the optional field `stateOfTheParties` (array)
            for (const item of data['stateOfTheParties']) {
                PartySeatCount.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/LocationContext>} childContexts
 */
Location.prototype['childContexts'] = undefined;

/**
 * @member {module:model/LocationContext} context
 */
Location.prototype['context'] = undefined;

/**
 * @member {module:model/LocationContext} parentContext
 */
Location.prototype['parentContext'] = undefined;

/**
 * @member {Array.<module:model/PartySeatCount>} stateOfTheParties
 */
Location.prototype['stateOfTheParties'] = undefined;






export default Location;

