/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HouseMembership from './HouseMembership';
import Party from './Party';

/**
 * The Member model module.
 * @module model/Member
 * @version v1
 */
class Member {
    /**
     * Constructs a new <code>Member</code>.
     * @alias module:model/Member
     */
    constructor() { 
        
        Member.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Member</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Member} obj Optional instance to populate.
     * @return {module:model/Member} The populated <code>Member</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Member();

            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('latestHouseMembership')) {
                obj['latestHouseMembership'] = HouseMembership.constructFromObject(data['latestHouseMembership']);
            }
            if (data.hasOwnProperty('latestParty')) {
                obj['latestParty'] = Party.constructFromObject(data['latestParty']);
            }
            if (data.hasOwnProperty('nameAddressAs')) {
                obj['nameAddressAs'] = ApiClient.convertToType(data['nameAddressAs'], 'String');
            }
            if (data.hasOwnProperty('nameDisplayAs')) {
                obj['nameDisplayAs'] = ApiClient.convertToType(data['nameDisplayAs'], 'String');
            }
            if (data.hasOwnProperty('nameFullTitle')) {
                obj['nameFullTitle'] = ApiClient.convertToType(data['nameFullTitle'], 'String');
            }
            if (data.hasOwnProperty('nameListAs')) {
                obj['nameListAs'] = ApiClient.convertToType(data['nameListAs'], 'String');
            }
            if (data.hasOwnProperty('thumbnailUrl')) {
                obj['thumbnailUrl'] = ApiClient.convertToType(data['thumbnailUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Member</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Member</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }
        // validate the optional field `latestHouseMembership`
        if (data['latestHouseMembership']) { // data not null
          HouseMembership.validateJSON(data['latestHouseMembership']);
        }
        // validate the optional field `latestParty`
        if (data['latestParty']) { // data not null
          Party.validateJSON(data['latestParty']);
        }
        // ensure the json data is a string
        if (data['nameAddressAs'] && !(typeof data['nameAddressAs'] === 'string' || data['nameAddressAs'] instanceof String)) {
            throw new Error("Expected the field `nameAddressAs` to be a primitive type in the JSON string but got " + data['nameAddressAs']);
        }
        // ensure the json data is a string
        if (data['nameDisplayAs'] && !(typeof data['nameDisplayAs'] === 'string' || data['nameDisplayAs'] instanceof String)) {
            throw new Error("Expected the field `nameDisplayAs` to be a primitive type in the JSON string but got " + data['nameDisplayAs']);
        }
        // ensure the json data is a string
        if (data['nameFullTitle'] && !(typeof data['nameFullTitle'] === 'string' || data['nameFullTitle'] instanceof String)) {
            throw new Error("Expected the field `nameFullTitle` to be a primitive type in the JSON string but got " + data['nameFullTitle']);
        }
        // ensure the json data is a string
        if (data['nameListAs'] && !(typeof data['nameListAs'] === 'string' || data['nameListAs'] instanceof String)) {
            throw new Error("Expected the field `nameListAs` to be a primitive type in the JSON string but got " + data['nameListAs']);
        }
        // ensure the json data is a string
        if (data['thumbnailUrl'] && !(typeof data['thumbnailUrl'] === 'string' || data['thumbnailUrl'] instanceof String)) {
            throw new Error("Expected the field `thumbnailUrl` to be a primitive type in the JSON string but got " + data['thumbnailUrl']);
        }

        return true;
    }


}



/**
 * @member {String} gender
 */
Member.prototype['gender'] = undefined;

/**
 * @member {Number} id
 */
Member.prototype['id'] = undefined;

/**
 * @member {module:model/HouseMembership} latestHouseMembership
 */
Member.prototype['latestHouseMembership'] = undefined;

/**
 * @member {module:model/Party} latestParty
 */
Member.prototype['latestParty'] = undefined;

/**
 * @member {String} nameAddressAs
 */
Member.prototype['nameAddressAs'] = undefined;

/**
 * @member {String} nameDisplayAs
 */
Member.prototype['nameDisplayAs'] = undefined;

/**
 * @member {String} nameFullTitle
 */
Member.prototype['nameFullTitle'] = undefined;

/**
 * @member {String} nameListAs
 */
Member.prototype['nameListAs'] = undefined;

/**
 * @member {String} thumbnailUrl
 */
Member.prototype['thumbnailUrl'] = undefined;






export default Member;

