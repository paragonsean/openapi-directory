/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Party from './Party';

/**
 * The ElectionCandidate model module.
 * @module model/ElectionCandidate
 * @version v1
 */
class ElectionCandidate {
    /**
     * Constructs a new <code>ElectionCandidate</code>.
     * @alias module:model/ElectionCandidate
     */
    constructor() { 
        
        ElectionCandidate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ElectionCandidate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ElectionCandidate} obj Optional instance to populate.
     * @return {module:model/ElectionCandidate} The populated <code>ElectionCandidate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ElectionCandidate();

            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('party')) {
                obj['party'] = Party.constructFromObject(data['party']);
            }
            if (data.hasOwnProperty('rankOrder')) {
                obj['rankOrder'] = ApiClient.convertToType(data['rankOrder'], 'Number');
            }
            if (data.hasOwnProperty('resultChange')) {
                obj['resultChange'] = ApiClient.convertToType(data['resultChange'], 'String');
            }
            if (data.hasOwnProperty('voteShare')) {
                obj['voteShare'] = ApiClient.convertToType(data['voteShare'], 'Number');
            }
            if (data.hasOwnProperty('votes')) {
                obj['votes'] = ApiClient.convertToType(data['votes'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ElectionCandidate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ElectionCandidate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `party`
        if (data['party']) { // data not null
          Party.validateJSON(data['party']);
        }
        // ensure the json data is a string
        if (data['resultChange'] && !(typeof data['resultChange'] === 'string' || data['resultChange'] instanceof String)) {
            throw new Error("Expected the field `resultChange` to be a primitive type in the JSON string but got " + data['resultChange']);
        }

        return true;
    }


}



/**
 * @member {Number} memberId
 */
ElectionCandidate.prototype['memberId'] = undefined;

/**
 * @member {String} name
 */
ElectionCandidate.prototype['name'] = undefined;

/**
 * @member {module:model/Party} party
 */
ElectionCandidate.prototype['party'] = undefined;

/**
 * @member {Number} rankOrder
 */
ElectionCandidate.prototype['rankOrder'] = undefined;

/**
 * @member {String} resultChange
 */
ElectionCandidate.prototype['resultChange'] = undefined;

/**
 * @member {Number} voteShare
 */
ElectionCandidate.prototype['voteShare'] = undefined;

/**
 * @member {Number} votes
 */
ElectionCandidate.prototype['votes'] = undefined;






export default ElectionCandidate;

