/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BiographyItem from './BiographyItem';

/**
 * The MemberBiography model module.
 * @module model/MemberBiography
 * @version v1
 */
class MemberBiography {
    /**
     * Constructs a new <code>MemberBiography</code>.
     * @alias module:model/MemberBiography
     */
    constructor() { 
        
        MemberBiography.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberBiography</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberBiography} obj Optional instance to populate.
     * @return {module:model/MemberBiography} The populated <code>MemberBiography</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberBiography();

            if (data.hasOwnProperty('committeeMemberships')) {
                obj['committeeMemberships'] = ApiClient.convertToType(data['committeeMemberships'], [BiographyItem]);
            }
            if (data.hasOwnProperty('electionsContested')) {
                obj['electionsContested'] = ApiClient.convertToType(data['electionsContested'], [BiographyItem]);
            }
            if (data.hasOwnProperty('governmentPosts')) {
                obj['governmentPosts'] = ApiClient.convertToType(data['governmentPosts'], [BiographyItem]);
            }
            if (data.hasOwnProperty('houseMemberships')) {
                obj['houseMemberships'] = ApiClient.convertToType(data['houseMemberships'], [BiographyItem]);
            }
            if (data.hasOwnProperty('oppositionPosts')) {
                obj['oppositionPosts'] = ApiClient.convertToType(data['oppositionPosts'], [BiographyItem]);
            }
            if (data.hasOwnProperty('otherPosts')) {
                obj['otherPosts'] = ApiClient.convertToType(data['otherPosts'], [BiographyItem]);
            }
            if (data.hasOwnProperty('partyAffiliations')) {
                obj['partyAffiliations'] = ApiClient.convertToType(data['partyAffiliations'], [BiographyItem]);
            }
            if (data.hasOwnProperty('representations')) {
                obj['representations'] = ApiClient.convertToType(data['representations'], [BiographyItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberBiography</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberBiography</code>.
     */
    static validateJSON(data) {
        if (data['committeeMemberships']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['committeeMemberships'])) {
                throw new Error("Expected the field `committeeMemberships` to be an array in the JSON data but got " + data['committeeMemberships']);
            }
            // validate the optional field `committeeMemberships` (array)
            for (const item of data['committeeMemberships']) {
                BiographyItem.validateJSON(item);
            };
        }
        if (data['electionsContested']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['electionsContested'])) {
                throw new Error("Expected the field `electionsContested` to be an array in the JSON data but got " + data['electionsContested']);
            }
            // validate the optional field `electionsContested` (array)
            for (const item of data['electionsContested']) {
                BiographyItem.validateJSON(item);
            };
        }
        if (data['governmentPosts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['governmentPosts'])) {
                throw new Error("Expected the field `governmentPosts` to be an array in the JSON data but got " + data['governmentPosts']);
            }
            // validate the optional field `governmentPosts` (array)
            for (const item of data['governmentPosts']) {
                BiographyItem.validateJSON(item);
            };
        }
        if (data['houseMemberships']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['houseMemberships'])) {
                throw new Error("Expected the field `houseMemberships` to be an array in the JSON data but got " + data['houseMemberships']);
            }
            // validate the optional field `houseMemberships` (array)
            for (const item of data['houseMemberships']) {
                BiographyItem.validateJSON(item);
            };
        }
        if (data['oppositionPosts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['oppositionPosts'])) {
                throw new Error("Expected the field `oppositionPosts` to be an array in the JSON data but got " + data['oppositionPosts']);
            }
            // validate the optional field `oppositionPosts` (array)
            for (const item of data['oppositionPosts']) {
                BiographyItem.validateJSON(item);
            };
        }
        if (data['otherPosts']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['otherPosts'])) {
                throw new Error("Expected the field `otherPosts` to be an array in the JSON data but got " + data['otherPosts']);
            }
            // validate the optional field `otherPosts` (array)
            for (const item of data['otherPosts']) {
                BiographyItem.validateJSON(item);
            };
        }
        if (data['partyAffiliations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['partyAffiliations'])) {
                throw new Error("Expected the field `partyAffiliations` to be an array in the JSON data but got " + data['partyAffiliations']);
            }
            // validate the optional field `partyAffiliations` (array)
            for (const item of data['partyAffiliations']) {
                BiographyItem.validateJSON(item);
            };
        }
        if (data['representations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['representations'])) {
                throw new Error("Expected the field `representations` to be an array in the JSON data but got " + data['representations']);
            }
            // validate the optional field `representations` (array)
            for (const item of data['representations']) {
                BiographyItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/BiographyItem>} committeeMemberships
 */
MemberBiography.prototype['committeeMemberships'] = undefined;

/**
 * @member {Array.<module:model/BiographyItem>} electionsContested
 */
MemberBiography.prototype['electionsContested'] = undefined;

/**
 * @member {Array.<module:model/BiographyItem>} governmentPosts
 */
MemberBiography.prototype['governmentPosts'] = undefined;

/**
 * @member {Array.<module:model/BiographyItem>} houseMemberships
 */
MemberBiography.prototype['houseMemberships'] = undefined;

/**
 * @member {Array.<module:model/BiographyItem>} oppositionPosts
 */
MemberBiography.prototype['oppositionPosts'] = undefined;

/**
 * @member {Array.<module:model/BiographyItem>} otherPosts
 */
MemberBiography.prototype['otherPosts'] = undefined;

/**
 * @member {Array.<module:model/BiographyItem>} partyAffiliations
 */
MemberBiography.prototype['partyAffiliations'] = undefined;

/**
 * @member {Array.<module:model/BiographyItem>} representations
 */
MemberBiography.prototype['representations'] = undefined;






export default MemberBiography;

