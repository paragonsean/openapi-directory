/**
 * Members API
 * An API which retrieves Members data.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HouseMembership from './HouseMembership';
import MemberName from './MemberName';
import MemberParty from './MemberParty';

/**
 * The MemberHistory model module.
 * @module model/MemberHistory
 * @version v1
 */
class MemberHistory {
    /**
     * Constructs a new <code>MemberHistory</code>.
     * @alias module:model/MemberHistory
     */
    constructor() { 
        
        MemberHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberHistory} obj Optional instance to populate.
     * @return {module:model/MemberHistory} The populated <code>MemberHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberHistory();

            if (data.hasOwnProperty('houseMembershipHistory')) {
                obj['houseMembershipHistory'] = ApiClient.convertToType(data['houseMembershipHistory'], [HouseMembership]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('nameHistory')) {
                obj['nameHistory'] = ApiClient.convertToType(data['nameHistory'], [MemberName]);
            }
            if (data.hasOwnProperty('partyHistory')) {
                obj['partyHistory'] = ApiClient.convertToType(data['partyHistory'], [MemberParty]);
            }
            if (data.hasOwnProperty('thumbnailUrl')) {
                obj['thumbnailUrl'] = ApiClient.convertToType(data['thumbnailUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberHistory</code>.
     */
    static validateJSON(data) {
        if (data['houseMembershipHistory']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['houseMembershipHistory'])) {
                throw new Error("Expected the field `houseMembershipHistory` to be an array in the JSON data but got " + data['houseMembershipHistory']);
            }
            // validate the optional field `houseMembershipHistory` (array)
            for (const item of data['houseMembershipHistory']) {
                HouseMembership.validateJSON(item);
            };
        }
        if (data['nameHistory']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['nameHistory'])) {
                throw new Error("Expected the field `nameHistory` to be an array in the JSON data but got " + data['nameHistory']);
            }
            // validate the optional field `nameHistory` (array)
            for (const item of data['nameHistory']) {
                MemberName.validateJSON(item);
            };
        }
        if (data['partyHistory']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['partyHistory'])) {
                throw new Error("Expected the field `partyHistory` to be an array in the JSON data but got " + data['partyHistory']);
            }
            // validate the optional field `partyHistory` (array)
            for (const item of data['partyHistory']) {
                MemberParty.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['thumbnailUrl'] && !(typeof data['thumbnailUrl'] === 'string' || data['thumbnailUrl'] instanceof String)) {
            throw new Error("Expected the field `thumbnailUrl` to be a primitive type in the JSON string but got " + data['thumbnailUrl']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/HouseMembership>} houseMembershipHistory
 */
MemberHistory.prototype['houseMembershipHistory'] = undefined;

/**
 * @member {Number} id
 */
MemberHistory.prototype['id'] = undefined;

/**
 * @member {Array.<module:model/MemberName>} nameHistory
 */
MemberHistory.prototype['nameHistory'] = undefined;

/**
 * @member {Array.<module:model/MemberParty>} partyHistory
 */
MemberHistory.prototype['partyHistory'] = undefined;

/**
 * @member {String} thumbnailUrl
 */
MemberHistory.prototype['thumbnailUrl'] = undefined;






export default MemberHistory;

