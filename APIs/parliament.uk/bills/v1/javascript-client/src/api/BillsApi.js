/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Bill from '../model/Bill';
import BillSortOrder from '../model/BillSortOrder';
import BillStageDetails from '../model/BillStageDetails';
import BillSummarySearchResult from '../model/BillSummarySearchResult';
import House from '../model/House';
import OriginatingHouse from '../model/OriginatingHouse';
import ProblemDetails from '../model/ProblemDetails';
import StageSummarySearchResult from '../model/StageSummarySearchResult';

/**
* Bills service.
* @module api/BillsApi
* @version v1
*/
export default class BillsApi {

    /**
    * Constructs a new BillsApi. 
    * @alias module:api/BillsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1BillsBillIdStagesGet operation.
     * @callback module:api/BillsApi~apiV1BillsBillIdStagesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/StageSummarySearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all Bill stages.
     * @param {Number} billId Stages relating to a Bill with Bill ID specified
     * @param {Object} opts Optional parameters
     * @param {Number} [skip] 
     * @param {Number} [take] 
     * @param {module:api/BillsApi~apiV1BillsBillIdStagesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/StageSummarySearchResult}
     */
    apiV1BillsBillIdStagesGet(billId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'billId' is set
      if (billId === undefined || billId === null) {
        throw new Error("Missing the required parameter 'billId' when calling apiV1BillsBillIdStagesGet");
      }

      let pathParams = {
        'billId': billId
      };
      let queryParams = {
        'Skip': opts['skip'],
        'Take': opts['take']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = StageSummarySearchResult;
      return this.apiClient.callApi(
        '/api/v1/Bills/{billId}/Stages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBill operation.
     * @callback module:api/BillsApi~getBillCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bill} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Return a Bill.
     * @param {Number} billId Bill with ID specified
     * @param {module:api/BillsApi~getBillCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bill}
     */
    getBill(billId, callback) {
      let postBody = null;
      // verify the required parameter 'billId' is set
      if (billId === undefined || billId === null) {
        throw new Error("Missing the required parameter 'billId' when calling getBill");
      }

      let pathParams = {
        'billId': billId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = Bill;
      return this.apiClient.callApi(
        '/api/v1/Bills/{billId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBillStageDetails operation.
     * @callback module:api/BillsApi~getBillStageDetailsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillStageDetails} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a Bill stage.
     * @param {Number} billId Bill stage relating to Bill with Bill ID specified
     * @param {Number} billStageId Bill stage with ID specified
     * @param {module:api/BillsApi~getBillStageDetailsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillStageDetails}
     */
    getBillStageDetails(billId, billStageId, callback) {
      let postBody = null;
      // verify the required parameter 'billId' is set
      if (billId === undefined || billId === null) {
        throw new Error("Missing the required parameter 'billId' when calling getBillStageDetails");
      }
      // verify the required parameter 'billStageId' is set
      if (billStageId === undefined || billStageId === null) {
        throw new Error("Missing the required parameter 'billStageId' when calling getBillStageDetails");
      }

      let pathParams = {
        'billId': billId,
        'billStageId': billStageId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = BillStageDetails;
      return this.apiClient.callApi(
        '/api/v1/Bills/{billId}/Stages/{billStageId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBills operation.
     * @callback module:api/BillsApi~getBillsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BillSummarySearchResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of Bills.
     * @param {Object} opts Optional parameters
     * @param {String} [searchTerm] 
     * @param {Number} [session] 
     * @param {module:model/House} [currentHouse] 
     * @param {module:model/OriginatingHouse} [originatingHouse] 
     * @param {Number} [memberId] 
     * @param {Number} [departmentId] 
     * @param {Array.<Number>} [billStage] 
     * @param {Array.<Number>} [billStagesExcluded] 
     * @param {Boolean} [isDefeated] 
     * @param {Boolean} [isWithdrawn] 
     * @param {Array.<Number>} [billType] 
     * @param {module:model/BillSortOrder} [sortOrder] 
     * @param {Array.<Number>} [billIds] 
     * @param {Number} [skip] 
     * @param {Number} [take] 
     * @param {module:api/BillsApi~getBillsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BillSummarySearchResult}
     */
    getBills(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'SearchTerm': opts['searchTerm'],
        'Session': opts['session'],
        'CurrentHouse': opts['currentHouse'],
        'OriginatingHouse': opts['originatingHouse'],
        'MemberId': opts['memberId'],
        'DepartmentId': opts['departmentId'],
        'BillStage': this.apiClient.buildCollectionParam(opts['billStage'], 'multi'),
        'BillStagesExcluded': this.apiClient.buildCollectionParam(opts['billStagesExcluded'], 'multi'),
        'IsDefeated': opts['isDefeated'],
        'IsWithdrawn': opts['isWithdrawn'],
        'BillType': this.apiClient.buildCollectionParam(opts['billType'], 'multi'),
        'SortOrder': opts['sortOrder'],
        'BillIds': this.apiClient.buildCollectionParam(opts['billIds'], 'multi'),
        'Skip': opts['skip'],
        'Take': opts['take']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = BillSummarySearchResult;
      return this.apiClient.callApi(
        '/api/v1/Bills', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
