/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ProblemDetails from '../model/ProblemDetails';

/**
* Rss service.
* @module api/RssApi
* @version v1
*/
export default class RssApi {

    /**
    * Constructs a new RssApi. 
    * @alias module:api/RssApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV1RssAllbillsRssGet operation.
     * @callback module:api/RssApi~apiV1RssAllbillsRssGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an Rss feed of all Bills.
     * @param {module:api/RssApi~apiV1RssAllbillsRssGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV1RssAllbillsRssGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/Rss/allbills.rss', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1RssBillsIdRssGet operation.
     * @callback module:api/RssApi~apiV1RssBillsIdRssGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an Rss feed of a certain Bill.
     * @param {Number} id Id of Bill
     * @param {module:api/RssApi~apiV1RssBillsIdRssGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV1RssBillsIdRssGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV1RssBillsIdRssGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/Rss/Bills/{id}.rss', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1RssPrivatebillsRssGet operation.
     * @callback module:api/RssApi~apiV1RssPrivatebillsRssGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an Rss feed of private Bills.
     * @param {module:api/RssApi~apiV1RssPrivatebillsRssGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV1RssPrivatebillsRssGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/Rss/privatebills.rss', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV1RssPublicbillsRssGet operation.
     * @callback module:api/RssApi~apiV1RssPublicbillsRssGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an Rss feed of public Bills.
     * @param {module:api/RssApi~apiV1RssPublicbillsRssGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV1RssPublicbillsRssGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/Rss/publicbills.rss', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
