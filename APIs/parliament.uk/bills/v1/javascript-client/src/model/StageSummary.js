/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillStageSitting from './BillStageSitting';
import House from './House';

/**
 * The StageSummary model module.
 * @module model/StageSummary
 * @version v1
 */
class StageSummary {
    /**
     * Constructs a new <code>StageSummary</code>.
     * @alias module:model/StageSummary
     */
    constructor() { 
        
        StageSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StageSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StageSummary} obj Optional instance to populate.
     * @return {module:model/StageSummary} The populated <code>StageSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StageSummary();

            if (data.hasOwnProperty('abbreviation')) {
                obj['abbreviation'] = ApiClient.convertToType(data['abbreviation'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('house')) {
                obj['house'] = House.constructFromObject(data['house']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('sessionId')) {
                obj['sessionId'] = ApiClient.convertToType(data['sessionId'], 'Number');
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
            if (data.hasOwnProperty('stageId')) {
                obj['stageId'] = ApiClient.convertToType(data['stageId'], 'Number');
            }
            if (data.hasOwnProperty('stageSittings')) {
                obj['stageSittings'] = ApiClient.convertToType(data['stageSittings'], [BillStageSitting]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StageSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StageSummary</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['abbreviation'] && !(typeof data['abbreviation'] === 'string' || data['abbreviation'] instanceof String)) {
            throw new Error("Expected the field `abbreviation` to be a primitive type in the JSON string but got " + data['abbreviation']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['stageSittings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['stageSittings'])) {
                throw new Error("Expected the field `stageSittings` to be an array in the JSON data but got " + data['stageSittings']);
            }
            // validate the optional field `stageSittings` (array)
            for (const item of data['stageSittings']) {
                BillStageSitting.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} abbreviation
 */
StageSummary.prototype['abbreviation'] = undefined;

/**
 * @member {String} description
 */
StageSummary.prototype['description'] = undefined;

/**
 * @member {module:model/House} house
 */
StageSummary.prototype['house'] = undefined;

/**
 * @member {Number} id
 */
StageSummary.prototype['id'] = undefined;

/**
 * @member {Number} sessionId
 */
StageSummary.prototype['sessionId'] = undefined;

/**
 * @member {Number} sortOrder
 */
StageSummary.prototype['sortOrder'] = undefined;

/**
 * @member {Number} stageId
 */
StageSummary.prototype['stageId'] = undefined;

/**
 * @member {Array.<module:model/BillStageSitting>} stageSittings
 */
StageSummary.prototype['stageSittings'] = undefined;






export default StageSummary;

