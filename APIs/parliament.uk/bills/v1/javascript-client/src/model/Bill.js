/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillAgent from './BillAgent';
import House from './House';
import Promoter from './Promoter';
import Sponsor from './Sponsor';
import StageSummary from './StageSummary';

/**
 * The Bill model module.
 * @module model/Bill
 * @version v1
 */
class Bill {
    /**
     * Constructs a new <code>Bill</code>.
     * @alias module:model/Bill
     */
    constructor() { 
        
        Bill.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Bill</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Bill} obj Optional instance to populate.
     * @return {module:model/Bill} The populated <code>Bill</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Bill();

            if (data.hasOwnProperty('agent')) {
                obj['agent'] = BillAgent.constructFromObject(data['agent']);
            }
            if (data.hasOwnProperty('billId')) {
                obj['billId'] = ApiClient.convertToType(data['billId'], 'Number');
            }
            if (data.hasOwnProperty('billTypeId')) {
                obj['billTypeId'] = ApiClient.convertToType(data['billTypeId'], 'Number');
            }
            if (data.hasOwnProperty('billWithdrawn')) {
                obj['billWithdrawn'] = ApiClient.convertToType(data['billWithdrawn'], 'Date');
            }
            if (data.hasOwnProperty('currentHouse')) {
                obj['currentHouse'] = House.constructFromObject(data['currentHouse']);
            }
            if (data.hasOwnProperty('currentStage')) {
                obj['currentStage'] = StageSummary.constructFromObject(data['currentStage']);
            }
            if (data.hasOwnProperty('includedSessionIds')) {
                obj['includedSessionIds'] = ApiClient.convertToType(data['includedSessionIds'], ['Number']);
            }
            if (data.hasOwnProperty('introducedSessionId')) {
                obj['introducedSessionId'] = ApiClient.convertToType(data['introducedSessionId'], 'Number');
            }
            if (data.hasOwnProperty('isAct')) {
                obj['isAct'] = ApiClient.convertToType(data['isAct'], 'Boolean');
            }
            if (data.hasOwnProperty('isDefeated')) {
                obj['isDefeated'] = ApiClient.convertToType(data['isDefeated'], 'Boolean');
            }
            if (data.hasOwnProperty('lastUpdate')) {
                obj['lastUpdate'] = ApiClient.convertToType(data['lastUpdate'], 'Date');
            }
            if (data.hasOwnProperty('longTitle')) {
                obj['longTitle'] = ApiClient.convertToType(data['longTitle'], 'String');
            }
            if (data.hasOwnProperty('originatingHouse')) {
                obj['originatingHouse'] = House.constructFromObject(data['originatingHouse']);
            }
            if (data.hasOwnProperty('petitionInformation')) {
                obj['petitionInformation'] = ApiClient.convertToType(data['petitionInformation'], 'String');
            }
            if (data.hasOwnProperty('petitioningPeriod')) {
                obj['petitioningPeriod'] = ApiClient.convertToType(data['petitioningPeriod'], 'String');
            }
            if (data.hasOwnProperty('promoters')) {
                obj['promoters'] = ApiClient.convertToType(data['promoters'], [Promoter]);
            }
            if (data.hasOwnProperty('shortTitle')) {
                obj['shortTitle'] = ApiClient.convertToType(data['shortTitle'], 'String');
            }
            if (data.hasOwnProperty('sponsors')) {
                obj['sponsors'] = ApiClient.convertToType(data['sponsors'], [Sponsor]);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Bill</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Bill</code>.
     */
    static validateJSON(data) {
        // validate the optional field `agent`
        if (data['agent']) { // data not null
          BillAgent.validateJSON(data['agent']);
        }
        // validate the optional field `currentStage`
        if (data['currentStage']) { // data not null
          StageSummary.validateJSON(data['currentStage']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['includedSessionIds'])) {
            throw new Error("Expected the field `includedSessionIds` to be an array in the JSON data but got " + data['includedSessionIds']);
        }
        // ensure the json data is a string
        if (data['longTitle'] && !(typeof data['longTitle'] === 'string' || data['longTitle'] instanceof String)) {
            throw new Error("Expected the field `longTitle` to be a primitive type in the JSON string but got " + data['longTitle']);
        }
        // ensure the json data is a string
        if (data['petitionInformation'] && !(typeof data['petitionInformation'] === 'string' || data['petitionInformation'] instanceof String)) {
            throw new Error("Expected the field `petitionInformation` to be a primitive type in the JSON string but got " + data['petitionInformation']);
        }
        // ensure the json data is a string
        if (data['petitioningPeriod'] && !(typeof data['petitioningPeriod'] === 'string' || data['petitioningPeriod'] instanceof String)) {
            throw new Error("Expected the field `petitioningPeriod` to be a primitive type in the JSON string but got " + data['petitioningPeriod']);
        }
        if (data['promoters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['promoters'])) {
                throw new Error("Expected the field `promoters` to be an array in the JSON data but got " + data['promoters']);
            }
            // validate the optional field `promoters` (array)
            for (const item of data['promoters']) {
                Promoter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['shortTitle'] && !(typeof data['shortTitle'] === 'string' || data['shortTitle'] instanceof String)) {
            throw new Error("Expected the field `shortTitle` to be a primitive type in the JSON string but got " + data['shortTitle']);
        }
        if (data['sponsors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['sponsors'])) {
                throw new Error("Expected the field `sponsors` to be an array in the JSON data but got " + data['sponsors']);
            }
            // validate the optional field `sponsors` (array)
            for (const item of data['sponsors']) {
                Sponsor.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['summary'] && !(typeof data['summary'] === 'string' || data['summary'] instanceof String)) {
            throw new Error("Expected the field `summary` to be a primitive type in the JSON string but got " + data['summary']);
        }

        return true;
    }


}



/**
 * @member {module:model/BillAgent} agent
 */
Bill.prototype['agent'] = undefined;

/**
 * @member {Number} billId
 */
Bill.prototype['billId'] = undefined;

/**
 * @member {Number} billTypeId
 */
Bill.prototype['billTypeId'] = undefined;

/**
 * @member {Date} billWithdrawn
 */
Bill.prototype['billWithdrawn'] = undefined;

/**
 * @member {module:model/House} currentHouse
 */
Bill.prototype['currentHouse'] = undefined;

/**
 * @member {module:model/StageSummary} currentStage
 */
Bill.prototype['currentStage'] = undefined;

/**
 * @member {Array.<Number>} includedSessionIds
 */
Bill.prototype['includedSessionIds'] = undefined;

/**
 * @member {Number} introducedSessionId
 */
Bill.prototype['introducedSessionId'] = undefined;

/**
 * @member {Boolean} isAct
 */
Bill.prototype['isAct'] = undefined;

/**
 * @member {Boolean} isDefeated
 */
Bill.prototype['isDefeated'] = undefined;

/**
 * @member {Date} lastUpdate
 */
Bill.prototype['lastUpdate'] = undefined;

/**
 * @member {String} longTitle
 */
Bill.prototype['longTitle'] = undefined;

/**
 * @member {module:model/House} originatingHouse
 */
Bill.prototype['originatingHouse'] = undefined;

/**
 * @member {String} petitionInformation
 */
Bill.prototype['petitionInformation'] = undefined;

/**
 * @member {String} petitioningPeriod
 */
Bill.prototype['petitioningPeriod'] = undefined;

/**
 * @member {Array.<module:model/Promoter>} promoters
 */
Bill.prototype['promoters'] = undefined;

/**
 * @member {String} shortTitle
 */
Bill.prototype['shortTitle'] = undefined;

/**
 * @member {Array.<module:model/Sponsor>} sponsors
 */
Bill.prototype['sponsors'] = undefined;

/**
 * @member {String} summary
 */
Bill.prototype['summary'] = undefined;






export default Bill;

