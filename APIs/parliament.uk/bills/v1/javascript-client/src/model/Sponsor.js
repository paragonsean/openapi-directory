/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Member from './Member';
import Organisation from './Organisation';

/**
 * The Sponsor model module.
 * @module model/Sponsor
 * @version v1
 */
class Sponsor {
    /**
     * Constructs a new <code>Sponsor</code>.
     * @alias module:model/Sponsor
     */
    constructor() { 
        
        Sponsor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Sponsor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Sponsor} obj Optional instance to populate.
     * @return {module:model/Sponsor} The populated <code>Sponsor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Sponsor();

            if (data.hasOwnProperty('member')) {
                obj['member'] = Member.constructFromObject(data['member']);
            }
            if (data.hasOwnProperty('organisation')) {
                obj['organisation'] = Organisation.constructFromObject(data['organisation']);
            }
            if (data.hasOwnProperty('sortOrder')) {
                obj['sortOrder'] = ApiClient.convertToType(data['sortOrder'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Sponsor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Sponsor</code>.
     */
    static validateJSON(data) {
        // validate the optional field `member`
        if (data['member']) { // data not null
          Member.validateJSON(data['member']);
        }
        // validate the optional field `organisation`
        if (data['organisation']) { // data not null
          Organisation.validateJSON(data['organisation']);
        }

        return true;
    }


}



/**
 * @member {module:model/Member} member
 */
Sponsor.prototype['member'] = undefined;

/**
 * @member {module:model/Organisation} organisation
 */
Sponsor.prototype['organisation'] = undefined;

/**
 * @member {Number} sortOrder
 */
Sponsor.prototype['sortOrder'] = undefined;






export default Sponsor;

