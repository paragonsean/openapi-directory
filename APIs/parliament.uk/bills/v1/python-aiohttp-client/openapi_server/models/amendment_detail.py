# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.amendment_decision import AmendmentDecision
from openapi_server.models.amendment_line import AmendmentLine
from openapi_server.models.amendment_member import AmendmentMember
from openapi_server.models.amendment_type import AmendmentType
from openapi_server import util


class AmendmentDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amendment_id: int=None, amendment_lines: List[AmendmentLine]=None, amendment_note: str=None, amendment_position: str=None, amendment_type: AmendmentType=None, bill_id: int=None, bill_stage_id: int=None, clause: int=None, decision: AmendmentDecision=None, explanatory_text: str=None, explanatory_text_prefix: str=None, line_number: int=None, marshalled_list_text: str=None, page_number: int=None, schedule: int=None, sponsors: List[AmendmentMember]=None):
        """AmendmentDetail - a model defined in OpenAPI

        :param amendment_id: The amendment_id of this AmendmentDetail.
        :param amendment_lines: The amendment_lines of this AmendmentDetail.
        :param amendment_note: The amendment_note of this AmendmentDetail.
        :param amendment_position: The amendment_position of this AmendmentDetail.
        :param amendment_type: The amendment_type of this AmendmentDetail.
        :param bill_id: The bill_id of this AmendmentDetail.
        :param bill_stage_id: The bill_stage_id of this AmendmentDetail.
        :param clause: The clause of this AmendmentDetail.
        :param decision: The decision of this AmendmentDetail.
        :param explanatory_text: The explanatory_text of this AmendmentDetail.
        :param explanatory_text_prefix: The explanatory_text_prefix of this AmendmentDetail.
        :param line_number: The line_number of this AmendmentDetail.
        :param marshalled_list_text: The marshalled_list_text of this AmendmentDetail.
        :param page_number: The page_number of this AmendmentDetail.
        :param schedule: The schedule of this AmendmentDetail.
        :param sponsors: The sponsors of this AmendmentDetail.
        """
        self.openapi_types = {
            'amendment_id': int,
            'amendment_lines': List[AmendmentLine],
            'amendment_note': str,
            'amendment_position': str,
            'amendment_type': AmendmentType,
            'bill_id': int,
            'bill_stage_id': int,
            'clause': int,
            'decision': AmendmentDecision,
            'explanatory_text': str,
            'explanatory_text_prefix': str,
            'line_number': int,
            'marshalled_list_text': str,
            'page_number': int,
            'schedule': int,
            'sponsors': List[AmendmentMember]
        }

        self.attribute_map = {
            'amendment_id': 'amendmentId',
            'amendment_lines': 'amendmentLines',
            'amendment_note': 'amendmentNote',
            'amendment_position': 'amendmentPosition',
            'amendment_type': 'amendmentType',
            'bill_id': 'billId',
            'bill_stage_id': 'billStageId',
            'clause': 'clause',
            'decision': 'decision',
            'explanatory_text': 'explanatoryText',
            'explanatory_text_prefix': 'explanatoryTextPrefix',
            'line_number': 'lineNumber',
            'marshalled_list_text': 'marshalledListText',
            'page_number': 'pageNumber',
            'schedule': 'schedule',
            'sponsors': 'sponsors'
        }

        self._amendment_id = amendment_id
        self._amendment_lines = amendment_lines
        self._amendment_note = amendment_note
        self._amendment_position = amendment_position
        self._amendment_type = amendment_type
        self._bill_id = bill_id
        self._bill_stage_id = bill_stage_id
        self._clause = clause
        self._decision = decision
        self._explanatory_text = explanatory_text
        self._explanatory_text_prefix = explanatory_text_prefix
        self._line_number = line_number
        self._marshalled_list_text = marshalled_list_text
        self._page_number = page_number
        self._schedule = schedule
        self._sponsors = sponsors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AmendmentDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AmendmentDetail of this AmendmentDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amendment_id(self):
        """Gets the amendment_id of this AmendmentDetail.


        :return: The amendment_id of this AmendmentDetail.
        :rtype: int
        """
        return self._amendment_id

    @amendment_id.setter
    def amendment_id(self, amendment_id):
        """Sets the amendment_id of this AmendmentDetail.


        :param amendment_id: The amendment_id of this AmendmentDetail.
        :type amendment_id: int
        """

        self._amendment_id = amendment_id

    @property
    def amendment_lines(self):
        """Gets the amendment_lines of this AmendmentDetail.


        :return: The amendment_lines of this AmendmentDetail.
        :rtype: List[AmendmentLine]
        """
        return self._amendment_lines

    @amendment_lines.setter
    def amendment_lines(self, amendment_lines):
        """Sets the amendment_lines of this AmendmentDetail.


        :param amendment_lines: The amendment_lines of this AmendmentDetail.
        :type amendment_lines: List[AmendmentLine]
        """

        self._amendment_lines = amendment_lines

    @property
    def amendment_note(self):
        """Gets the amendment_note of this AmendmentDetail.


        :return: The amendment_note of this AmendmentDetail.
        :rtype: str
        """
        return self._amendment_note

    @amendment_note.setter
    def amendment_note(self, amendment_note):
        """Sets the amendment_note of this AmendmentDetail.


        :param amendment_note: The amendment_note of this AmendmentDetail.
        :type amendment_note: str
        """

        self._amendment_note = amendment_note

    @property
    def amendment_position(self):
        """Gets the amendment_position of this AmendmentDetail.


        :return: The amendment_position of this AmendmentDetail.
        :rtype: str
        """
        return self._amendment_position

    @amendment_position.setter
    def amendment_position(self, amendment_position):
        """Sets the amendment_position of this AmendmentDetail.


        :param amendment_position: The amendment_position of this AmendmentDetail.
        :type amendment_position: str
        """

        self._amendment_position = amendment_position

    @property
    def amendment_type(self):
        """Gets the amendment_type of this AmendmentDetail.


        :return: The amendment_type of this AmendmentDetail.
        :rtype: AmendmentType
        """
        return self._amendment_type

    @amendment_type.setter
    def amendment_type(self, amendment_type):
        """Sets the amendment_type of this AmendmentDetail.


        :param amendment_type: The amendment_type of this AmendmentDetail.
        :type amendment_type: AmendmentType
        """

        self._amendment_type = amendment_type

    @property
    def bill_id(self):
        """Gets the bill_id of this AmendmentDetail.


        :return: The bill_id of this AmendmentDetail.
        :rtype: int
        """
        return self._bill_id

    @bill_id.setter
    def bill_id(self, bill_id):
        """Sets the bill_id of this AmendmentDetail.


        :param bill_id: The bill_id of this AmendmentDetail.
        :type bill_id: int
        """

        self._bill_id = bill_id

    @property
    def bill_stage_id(self):
        """Gets the bill_stage_id of this AmendmentDetail.


        :return: The bill_stage_id of this AmendmentDetail.
        :rtype: int
        """
        return self._bill_stage_id

    @bill_stage_id.setter
    def bill_stage_id(self, bill_stage_id):
        """Sets the bill_stage_id of this AmendmentDetail.


        :param bill_stage_id: The bill_stage_id of this AmendmentDetail.
        :type bill_stage_id: int
        """

        self._bill_stage_id = bill_stage_id

    @property
    def clause(self):
        """Gets the clause of this AmendmentDetail.


        :return: The clause of this AmendmentDetail.
        :rtype: int
        """
        return self._clause

    @clause.setter
    def clause(self, clause):
        """Sets the clause of this AmendmentDetail.


        :param clause: The clause of this AmendmentDetail.
        :type clause: int
        """

        self._clause = clause

    @property
    def decision(self):
        """Gets the decision of this AmendmentDetail.


        :return: The decision of this AmendmentDetail.
        :rtype: AmendmentDecision
        """
        return self._decision

    @decision.setter
    def decision(self, decision):
        """Sets the decision of this AmendmentDetail.


        :param decision: The decision of this AmendmentDetail.
        :type decision: AmendmentDecision
        """

        self._decision = decision

    @property
    def explanatory_text(self):
        """Gets the explanatory_text of this AmendmentDetail.


        :return: The explanatory_text of this AmendmentDetail.
        :rtype: str
        """
        return self._explanatory_text

    @explanatory_text.setter
    def explanatory_text(self, explanatory_text):
        """Sets the explanatory_text of this AmendmentDetail.


        :param explanatory_text: The explanatory_text of this AmendmentDetail.
        :type explanatory_text: str
        """

        self._explanatory_text = explanatory_text

    @property
    def explanatory_text_prefix(self):
        """Gets the explanatory_text_prefix of this AmendmentDetail.


        :return: The explanatory_text_prefix of this AmendmentDetail.
        :rtype: str
        """
        return self._explanatory_text_prefix

    @explanatory_text_prefix.setter
    def explanatory_text_prefix(self, explanatory_text_prefix):
        """Sets the explanatory_text_prefix of this AmendmentDetail.


        :param explanatory_text_prefix: The explanatory_text_prefix of this AmendmentDetail.
        :type explanatory_text_prefix: str
        """

        self._explanatory_text_prefix = explanatory_text_prefix

    @property
    def line_number(self):
        """Gets the line_number of this AmendmentDetail.


        :return: The line_number of this AmendmentDetail.
        :rtype: int
        """
        return self._line_number

    @line_number.setter
    def line_number(self, line_number):
        """Sets the line_number of this AmendmentDetail.


        :param line_number: The line_number of this AmendmentDetail.
        :type line_number: int
        """

        self._line_number = line_number

    @property
    def marshalled_list_text(self):
        """Gets the marshalled_list_text of this AmendmentDetail.


        :return: The marshalled_list_text of this AmendmentDetail.
        :rtype: str
        """
        return self._marshalled_list_text

    @marshalled_list_text.setter
    def marshalled_list_text(self, marshalled_list_text):
        """Sets the marshalled_list_text of this AmendmentDetail.


        :param marshalled_list_text: The marshalled_list_text of this AmendmentDetail.
        :type marshalled_list_text: str
        """

        self._marshalled_list_text = marshalled_list_text

    @property
    def page_number(self):
        """Gets the page_number of this AmendmentDetail.


        :return: The page_number of this AmendmentDetail.
        :rtype: int
        """
        return self._page_number

    @page_number.setter
    def page_number(self, page_number):
        """Sets the page_number of this AmendmentDetail.


        :param page_number: The page_number of this AmendmentDetail.
        :type page_number: int
        """

        self._page_number = page_number

    @property
    def schedule(self):
        """Gets the schedule of this AmendmentDetail.


        :return: The schedule of this AmendmentDetail.
        :rtype: int
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this AmendmentDetail.


        :param schedule: The schedule of this AmendmentDetail.
        :type schedule: int
        """

        self._schedule = schedule

    @property
    def sponsors(self):
        """Gets the sponsors of this AmendmentDetail.


        :return: The sponsors of this AmendmentDetail.
        :rtype: List[AmendmentMember]
        """
        return self._sponsors

    @sponsors.setter
    def sponsors(self, sponsors):
        """Sets the sponsors of this AmendmentDetail.


        :param sponsors: The sponsors of this AmendmentDetail.
        :type sponsors: List[AmendmentMember]
        """

        self._sponsors = sponsors
