/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAmendmentDecision.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAmendmentDecision::OAIAmendmentDecision(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAmendmentDecision::OAIAmendmentDecision() {
    this->initializeModel();
}

OAIAmendmentDecision::~OAIAmendmentDecision() {}

void OAIAmendmentDecision::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAmendmentDecision::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAmendmentDecision::fromJson(QString jsonString) {
    
    if ( jsonString.compare("NoDecision", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAmendmentDecision::NODECISION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Withdrawn", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAmendmentDecision::WITHDRAWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disagreed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAmendmentDecision::DISAGREED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotMoved", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAmendmentDecision::NOTMOVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Agreed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAmendmentDecision::AGREED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAmendmentDecision::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAmendmentDecision::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAmendmentDecision::NODECISION:
            val = "NoDecision";
            break;
        case eOAIAmendmentDecision::WITHDRAWN:
            val = "Withdrawn";
            break;
        case eOAIAmendmentDecision::DISAGREED:
            val = "Disagreed";
            break;
        case eOAIAmendmentDecision::NOTMOVED:
            val = "NotMoved";
            break;
        case eOAIAmendmentDecision::AGREED:
            val = "Agreed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAmendmentDecision::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAmendmentDecision::eOAIAmendmentDecision OAIAmendmentDecision::getValue() const {
    return m_value;
}

void OAIAmendmentDecision::setValue(const OAIAmendmentDecision::eOAIAmendmentDecision& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAmendmentDecision::isSet() const {
    
    return m_value_isSet;
}

bool OAIAmendmentDecision::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
