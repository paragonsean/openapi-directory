/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDecision.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDecision::OAIDecision(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDecision::OAIDecision() {
    this->initializeModel();
}

OAIDecision::~OAIDecision() {}

void OAIDecision::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDecision::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDecision::fromJson(QString jsonString) {
    
    if ( jsonString.compare("All", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDecision::ALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NoDecision", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDecision::NODECISION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Withdrawn", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDecision::WITHDRAWN;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Disagreed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDecision::DISAGREED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NotMoved", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDecision::NOTMOVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Agreed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDecision::AGREED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDecision::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDecision::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDecision::ALL:
            val = "All";
            break;
        case eOAIDecision::NODECISION:
            val = "NoDecision";
            break;
        case eOAIDecision::WITHDRAWN:
            val = "Withdrawn";
            break;
        case eOAIDecision::DISAGREED:
            val = "Disagreed";
            break;
        case eOAIDecision::NOTMOVED:
            val = "NotMoved";
            break;
        case eOAIDecision::AGREED:
            val = "Agreed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDecision::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDecision::eOAIDecision OAIDecision::getValue() const {
    return m_value;
}

void OAIDecision::setValue(const OAIDecision::eOAIDecision& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDecision::isSet() const {
    
    return m_value_isSet;
}

bool OAIDecision::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
