/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommitteeHouse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommitteeHouse::OAICommitteeHouse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommitteeHouse::OAICommitteeHouse() {
    this->initializeModel();
}

OAICommitteeHouse::~OAICommitteeHouse() {}

void OAICommitteeHouse::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICommitteeHouse::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICommitteeHouse::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Commons", Qt::CaseInsensitive) == 0) {
        m_value = eOAICommitteeHouse::COMMONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Lords", Qt::CaseInsensitive) == 0) {
        m_value = eOAICommitteeHouse::LORDS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Joint", Qt::CaseInsensitive) == 0) {
        m_value = eOAICommitteeHouse::JOINT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICommitteeHouse::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICommitteeHouse::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICommitteeHouse::COMMONS:
            val = "Commons";
            break;
        case eOAICommitteeHouse::LORDS:
            val = "Lords";
            break;
        case eOAICommitteeHouse::JOINT:
            val = "Joint";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICommitteeHouse::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICommitteeHouse::eOAICommitteeHouse OAICommitteeHouse::getValue() const {
    return m_value;
}

void OAICommitteeHouse::setValue(const OAICommitteeHouse::eOAICommitteeHouse& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICommitteeHouse::isSet() const {
    
    return m_value_isSet;
}

bool OAICommitteeHouse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
