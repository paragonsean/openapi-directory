/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillPublication.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillPublication::OAIBillPublication(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillPublication::OAIBillPublication() {
    this->initializeModel();
}

OAIBillPublication::~OAIBillPublication() {}

void OAIBillPublication::initializeModel() {

    m_display_date_isSet = false;
    m_display_date_isValid = false;

    m_files_isSet = false;
    m_files_isValid = false;

    m_house_isSet = false;
    m_house_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_publication_type_isSet = false;
    m_publication_type_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIBillPublication::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillPublication::fromJsonObject(QJsonObject json) {

    m_display_date_isValid = ::OpenAPI::fromJsonValue(m_display_date, json[QString("displayDate")]);
    m_display_date_isSet = !json[QString("displayDate")].isNull() && m_display_date_isValid;

    m_files_isValid = ::OpenAPI::fromJsonValue(m_files, json[QString("files")]);
    m_files_isSet = !json[QString("files")].isNull() && m_files_isValid;

    m_house_isValid = ::OpenAPI::fromJsonValue(m_house, json[QString("house")]);
    m_house_isSet = !json[QString("house")].isNull() && m_house_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_publication_type_isValid = ::OpenAPI::fromJsonValue(m_publication_type, json[QString("publicationType")]);
    m_publication_type_isSet = !json[QString("publicationType")].isNull() && m_publication_type_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIBillPublication::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillPublication::asJsonObject() const {
    QJsonObject obj;
    if (m_display_date_isSet) {
        obj.insert(QString("displayDate"), ::OpenAPI::toJsonValue(m_display_date));
    }
    if (m_files.size() > 0) {
        obj.insert(QString("files"), ::OpenAPI::toJsonValue(m_files));
    }
    if (m_house.isSet()) {
        obj.insert(QString("house"), ::OpenAPI::toJsonValue(m_house));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_links.size() > 0) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_publication_type.isSet()) {
        obj.insert(QString("publicationType"), ::OpenAPI::toJsonValue(m_publication_type));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QDateTime OAIBillPublication::getDisplayDate() const {
    return m_display_date;
}
void OAIBillPublication::setDisplayDate(const QDateTime &display_date) {
    m_display_date = display_date;
    m_display_date_isSet = true;
}

bool OAIBillPublication::is_display_date_Set() const{
    return m_display_date_isSet;
}

bool OAIBillPublication::is_display_date_Valid() const{
    return m_display_date_isValid;
}

QList<OAIPublicationDocument> OAIBillPublication::getFiles() const {
    return m_files;
}
void OAIBillPublication::setFiles(const QList<OAIPublicationDocument> &files) {
    m_files = files;
    m_files_isSet = true;
}

bool OAIBillPublication::is_files_Set() const{
    return m_files_isSet;
}

bool OAIBillPublication::is_files_Valid() const{
    return m_files_isValid;
}

OAIHouse OAIBillPublication::getHouse() const {
    return m_house;
}
void OAIBillPublication::setHouse(const OAIHouse &house) {
    m_house = house;
    m_house_isSet = true;
}

bool OAIBillPublication::is_house_Set() const{
    return m_house_isSet;
}

bool OAIBillPublication::is_house_Valid() const{
    return m_house_isValid;
}

qint32 OAIBillPublication::getId() const {
    return m_id;
}
void OAIBillPublication::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIBillPublication::is_id_Set() const{
    return m_id_isSet;
}

bool OAIBillPublication::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIPublicationLink> OAIBillPublication::getLinks() const {
    return m_links;
}
void OAIBillPublication::setLinks(const QList<OAIPublicationLink> &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIBillPublication::is_links_Set() const{
    return m_links_isSet;
}

bool OAIBillPublication::is_links_Valid() const{
    return m_links_isValid;
}

OAIPublicationType OAIBillPublication::getPublicationType() const {
    return m_publication_type;
}
void OAIBillPublication::setPublicationType(const OAIPublicationType &publication_type) {
    m_publication_type = publication_type;
    m_publication_type_isSet = true;
}

bool OAIBillPublication::is_publication_type_Set() const{
    return m_publication_type_isSet;
}

bool OAIBillPublication::is_publication_type_Valid() const{
    return m_publication_type_isValid;
}

QString OAIBillPublication::getTitle() const {
    return m_title;
}
void OAIBillPublication::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIBillPublication::is_title_Set() const{
    return m_title_isSet;
}

bool OAIBillPublication::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIBillPublication::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_files.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_house.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_publication_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillPublication::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
