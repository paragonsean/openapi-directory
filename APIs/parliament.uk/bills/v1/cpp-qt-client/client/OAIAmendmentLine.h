/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAmendmentLine.h
 *
 * 
 */

#ifndef OAIAmendmentLine_H
#define OAIAmendmentLine_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAmendmentLine : public OAIObject {
public:
    OAIAmendmentLine();
    OAIAmendmentLine(QString json);
    ~OAIAmendmentLine() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHangingIndentation() const;
    void setHangingIndentation(const QString &hanging_indentation);
    bool is_hanging_indentation_Set() const;
    bool is_hanging_indentation_Valid() const;

    QString getImageType() const;
    void setImageType(const QString &image_type);
    bool is_image_type_Set() const;
    bool is_image_type_Valid() const;

    qint32 getIndentation() const;
    void setIndentation(const qint32 &indentation);
    bool is_indentation_Set() const;
    bool is_indentation_Valid() const;

    bool isIsImage() const;
    void setIsImage(const bool &is_image);
    bool is_is_image_Set() const;
    bool is_is_image_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_hanging_indentation;
    bool m_hanging_indentation_isSet;
    bool m_hanging_indentation_isValid;

    QString m_image_type;
    bool m_image_type_isSet;
    bool m_image_type_isValid;

    qint32 m_indentation;
    bool m_indentation_isSet;
    bool m_indentation_isValid;

    bool m_is_image;
    bool m_is_image_isSet;
    bool m_is_image_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAmendmentLine)

#endif // OAIAmendmentLine_H
