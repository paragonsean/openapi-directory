/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBillStageSittingPublicationList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBillStageSittingPublicationList::OAIBillStageSittingPublicationList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBillStageSittingPublicationList::OAIBillStageSittingPublicationList() {
    this->initializeModel();
}

OAIBillStageSittingPublicationList::~OAIBillStageSittingPublicationList() {}

void OAIBillStageSittingPublicationList::initializeModel() {

    m_publications_isSet = false;
    m_publications_isValid = false;

    m_sitting_id_isSet = false;
    m_sitting_id_isValid = false;
}

void OAIBillStageSittingPublicationList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBillStageSittingPublicationList::fromJsonObject(QJsonObject json) {

    m_publications_isValid = ::OpenAPI::fromJsonValue(m_publications, json[QString("publications")]);
    m_publications_isSet = !json[QString("publications")].isNull() && m_publications_isValid;

    m_sitting_id_isValid = ::OpenAPI::fromJsonValue(m_sitting_id, json[QString("sittingId")]);
    m_sitting_id_isSet = !json[QString("sittingId")].isNull() && m_sitting_id_isValid;
}

QString OAIBillStageSittingPublicationList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBillStageSittingPublicationList::asJsonObject() const {
    QJsonObject obj;
    if (m_publications.size() > 0) {
        obj.insert(QString("publications"), ::OpenAPI::toJsonValue(m_publications));
    }
    if (m_sitting_id_isSet) {
        obj.insert(QString("sittingId"), ::OpenAPI::toJsonValue(m_sitting_id));
    }
    return obj;
}

QList<OAIPublication> OAIBillStageSittingPublicationList::getPublications() const {
    return m_publications;
}
void OAIBillStageSittingPublicationList::setPublications(const QList<OAIPublication> &publications) {
    m_publications = publications;
    m_publications_isSet = true;
}

bool OAIBillStageSittingPublicationList::is_publications_Set() const{
    return m_publications_isSet;
}

bool OAIBillStageSittingPublicationList::is_publications_Valid() const{
    return m_publications_isValid;
}

qint32 OAIBillStageSittingPublicationList::getSittingId() const {
    return m_sitting_id;
}
void OAIBillStageSittingPublicationList::setSittingId(const qint32 &sitting_id) {
    m_sitting_id = sitting_id;
    m_sitting_id_isSet = true;
}

bool OAIBillStageSittingPublicationList::is_sitting_id_Set() const{
    return m_sitting_id_isSet;
}

bool OAIBillStageSittingPublicationList::is_sitting_id_Valid() const{
    return m_sitting_id_isValid;
}

bool OAIBillStageSittingPublicationList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_publications.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sitting_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBillStageSittingPublicationList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
