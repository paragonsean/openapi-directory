/**
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBill.h
 *
 * 
 */

#ifndef OAIBill_H
#define OAIBill_H

#include <QJsonObject>

#include "OAIBillAgent.h"
#include "OAIHouse.h"
#include "OAIPromoter.h"
#include "OAISponsor.h"
#include "OAIStageSummary.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBillAgent;
class OAIStageSummary;
class OAIPromoter;
class OAISponsor;

class OAIBill : public OAIObject {
public:
    OAIBill();
    OAIBill(QString json);
    ~OAIBill() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBillAgent getAgent() const;
    void setAgent(const OAIBillAgent &agent);
    bool is_agent_Set() const;
    bool is_agent_Valid() const;

    qint32 getBillId() const;
    void setBillId(const qint32 &bill_id);
    bool is_bill_id_Set() const;
    bool is_bill_id_Valid() const;

    qint32 getBillTypeId() const;
    void setBillTypeId(const qint32 &bill_type_id);
    bool is_bill_type_id_Set() const;
    bool is_bill_type_id_Valid() const;

    QDateTime getBillWithdrawn() const;
    void setBillWithdrawn(const QDateTime &bill_withdrawn);
    bool is_bill_withdrawn_Set() const;
    bool is_bill_withdrawn_Valid() const;

    OAIHouse getCurrentHouse() const;
    void setCurrentHouse(const OAIHouse &current_house);
    bool is_current_house_Set() const;
    bool is_current_house_Valid() const;

    OAIStageSummary getCurrentStage() const;
    void setCurrentStage(const OAIStageSummary &current_stage);
    bool is_current_stage_Set() const;
    bool is_current_stage_Valid() const;

    QList<qint32> getIncludedSessionIds() const;
    void setIncludedSessionIds(const QList<qint32> &included_session_ids);
    bool is_included_session_ids_Set() const;
    bool is_included_session_ids_Valid() const;

    qint32 getIntroducedSessionId() const;
    void setIntroducedSessionId(const qint32 &introduced_session_id);
    bool is_introduced_session_id_Set() const;
    bool is_introduced_session_id_Valid() const;

    bool isIsAct() const;
    void setIsAct(const bool &is_act);
    bool is_is_act_Set() const;
    bool is_is_act_Valid() const;

    bool isIsDefeated() const;
    void setIsDefeated(const bool &is_defeated);
    bool is_is_defeated_Set() const;
    bool is_is_defeated_Valid() const;

    QDateTime getLastUpdate() const;
    void setLastUpdate(const QDateTime &last_update);
    bool is_last_update_Set() const;
    bool is_last_update_Valid() const;

    QString getLongTitle() const;
    void setLongTitle(const QString &long_title);
    bool is_long_title_Set() const;
    bool is_long_title_Valid() const;

    OAIHouse getOriginatingHouse() const;
    void setOriginatingHouse(const OAIHouse &originating_house);
    bool is_originating_house_Set() const;
    bool is_originating_house_Valid() const;

    QString getPetitionInformation() const;
    void setPetitionInformation(const QString &petition_information);
    bool is_petition_information_Set() const;
    bool is_petition_information_Valid() const;

    QString getPetitioningPeriod() const;
    void setPetitioningPeriod(const QString &petitioning_period);
    bool is_petitioning_period_Set() const;
    bool is_petitioning_period_Valid() const;

    QList<OAIPromoter> getPromoters() const;
    void setPromoters(const QList<OAIPromoter> &promoters);
    bool is_promoters_Set() const;
    bool is_promoters_Valid() const;

    QString getShortTitle() const;
    void setShortTitle(const QString &short_title);
    bool is_short_title_Set() const;
    bool is_short_title_Valid() const;

    QList<OAISponsor> getSponsors() const;
    void setSponsors(const QList<OAISponsor> &sponsors);
    bool is_sponsors_Set() const;
    bool is_sponsors_Valid() const;

    QString getSummary() const;
    void setSummary(const QString &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBillAgent m_agent;
    bool m_agent_isSet;
    bool m_agent_isValid;

    qint32 m_bill_id;
    bool m_bill_id_isSet;
    bool m_bill_id_isValid;

    qint32 m_bill_type_id;
    bool m_bill_type_id_isSet;
    bool m_bill_type_id_isValid;

    QDateTime m_bill_withdrawn;
    bool m_bill_withdrawn_isSet;
    bool m_bill_withdrawn_isValid;

    OAIHouse m_current_house;
    bool m_current_house_isSet;
    bool m_current_house_isValid;

    OAIStageSummary m_current_stage;
    bool m_current_stage_isSet;
    bool m_current_stage_isValid;

    QList<qint32> m_included_session_ids;
    bool m_included_session_ids_isSet;
    bool m_included_session_ids_isValid;

    qint32 m_introduced_session_id;
    bool m_introduced_session_id_isSet;
    bool m_introduced_session_id_isValid;

    bool m_is_act;
    bool m_is_act_isSet;
    bool m_is_act_isValid;

    bool m_is_defeated;
    bool m_is_defeated_isSet;
    bool m_is_defeated_isValid;

    QDateTime m_last_update;
    bool m_last_update_isSet;
    bool m_last_update_isValid;

    QString m_long_title;
    bool m_long_title_isSet;
    bool m_long_title_isValid;

    OAIHouse m_originating_house;
    bool m_originating_house_isSet;
    bool m_originating_house_isValid;

    QString m_petition_information;
    bool m_petition_information_isSet;
    bool m_petition_information_isValid;

    QString m_petitioning_period;
    bool m_petitioning_period_isSet;
    bool m_petitioning_period_isValid;

    QList<OAIPromoter> m_promoters;
    bool m_promoters_isSet;
    bool m_promoters_isValid;

    QString m_short_title;
    bool m_short_title_isSet;
    bool m_short_title_isValid;

    QList<OAISponsor> m_sponsors;
    bool m_sponsors_isSet;
    bool m_sponsors_isValid;

    QString m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBill)

#endif // OAIBill_H
