/*
 * Bills API
 * API to get and search for information regarding Bills, their stages, associated amendments and publications.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AmendmentDecision;
import org.openapitools.client.model.AmendmentMember;
import org.openapitools.client.model.AmendmentType;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AmendmentSearchItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:41.110497-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AmendmentSearchItem {
  public static final String SERIALIZED_NAME_AMENDMENT_ID = "amendmentId";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_ID)
  private Integer amendmentId;

  public static final String SERIALIZED_NAME_AMENDMENT_POSITION = "amendmentPosition";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_POSITION)
  private String amendmentPosition;

  public static final String SERIALIZED_NAME_AMENDMENT_TYPE = "amendmentType";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_TYPE)
  private AmendmentType amendmentType;

  public static final String SERIALIZED_NAME_BILL_ID = "billId";
  @SerializedName(SERIALIZED_NAME_BILL_ID)
  private Integer billId;

  public static final String SERIALIZED_NAME_BILL_STAGE_ID = "billStageId";
  @SerializedName(SERIALIZED_NAME_BILL_STAGE_ID)
  private Integer billStageId;

  public static final String SERIALIZED_NAME_CLAUSE = "clause";
  @SerializedName(SERIALIZED_NAME_CLAUSE)
  private Integer clause;

  public static final String SERIALIZED_NAME_DECISION = "decision";
  @SerializedName(SERIALIZED_NAME_DECISION)
  private AmendmentDecision decision;

  public static final String SERIALIZED_NAME_LINE_NUMBER = "lineNumber";
  @SerializedName(SERIALIZED_NAME_LINE_NUMBER)
  private Integer lineNumber;

  public static final String SERIALIZED_NAME_MARSHALLED_LIST_TEXT = "marshalledListText";
  @SerializedName(SERIALIZED_NAME_MARSHALLED_LIST_TEXT)
  private String marshalledListText;

  public static final String SERIALIZED_NAME_PAGE_NUMBER = "pageNumber";
  @SerializedName(SERIALIZED_NAME_PAGE_NUMBER)
  private Integer pageNumber;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private Integer schedule;

  public static final String SERIALIZED_NAME_SPONSORS = "sponsors";
  @SerializedName(SERIALIZED_NAME_SPONSORS)
  private List<AmendmentMember> sponsors;

  public static final String SERIALIZED_NAME_SUMMARY_TEXT = "summaryText";
  @SerializedName(SERIALIZED_NAME_SUMMARY_TEXT)
  private List<String> summaryText;

  public AmendmentSearchItem() {
  }

  public AmendmentSearchItem amendmentId(Integer amendmentId) {
    this.amendmentId = amendmentId;
    return this;
  }

  /**
   * Get amendmentId
   * @return amendmentId
   */
  @javax.annotation.Nullable
  public Integer getAmendmentId() {
    return amendmentId;
  }

  public void setAmendmentId(Integer amendmentId) {
    this.amendmentId = amendmentId;
  }


  public AmendmentSearchItem amendmentPosition(String amendmentPosition) {
    this.amendmentPosition = amendmentPosition;
    return this;
  }

  /**
   * Get amendmentPosition
   * @return amendmentPosition
   */
  @javax.annotation.Nullable
  public String getAmendmentPosition() {
    return amendmentPosition;
  }

  public void setAmendmentPosition(String amendmentPosition) {
    this.amendmentPosition = amendmentPosition;
  }


  public AmendmentSearchItem amendmentType(AmendmentType amendmentType) {
    this.amendmentType = amendmentType;
    return this;
  }

  /**
   * Get amendmentType
   * @return amendmentType
   */
  @javax.annotation.Nullable
  public AmendmentType getAmendmentType() {
    return amendmentType;
  }

  public void setAmendmentType(AmendmentType amendmentType) {
    this.amendmentType = amendmentType;
  }


  public AmendmentSearchItem billId(Integer billId) {
    this.billId = billId;
    return this;
  }

  /**
   * Get billId
   * @return billId
   */
  @javax.annotation.Nullable
  public Integer getBillId() {
    return billId;
  }

  public void setBillId(Integer billId) {
    this.billId = billId;
  }


  public AmendmentSearchItem billStageId(Integer billStageId) {
    this.billStageId = billStageId;
    return this;
  }

  /**
   * Get billStageId
   * @return billStageId
   */
  @javax.annotation.Nullable
  public Integer getBillStageId() {
    return billStageId;
  }

  public void setBillStageId(Integer billStageId) {
    this.billStageId = billStageId;
  }


  public AmendmentSearchItem clause(Integer clause) {
    this.clause = clause;
    return this;
  }

  /**
   * Get clause
   * @return clause
   */
  @javax.annotation.Nullable
  public Integer getClause() {
    return clause;
  }

  public void setClause(Integer clause) {
    this.clause = clause;
  }


  public AmendmentSearchItem decision(AmendmentDecision decision) {
    this.decision = decision;
    return this;
  }

  /**
   * Get decision
   * @return decision
   */
  @javax.annotation.Nullable
  public AmendmentDecision getDecision() {
    return decision;
  }

  public void setDecision(AmendmentDecision decision) {
    this.decision = decision;
  }


  public AmendmentSearchItem lineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
    return this;
  }

  /**
   * Get lineNumber
   * @return lineNumber
   */
  @javax.annotation.Nullable
  public Integer getLineNumber() {
    return lineNumber;
  }

  public void setLineNumber(Integer lineNumber) {
    this.lineNumber = lineNumber;
  }


  public AmendmentSearchItem marshalledListText(String marshalledListText) {
    this.marshalledListText = marshalledListText;
    return this;
  }

  /**
   * Get marshalledListText
   * @return marshalledListText
   */
  @javax.annotation.Nullable
  public String getMarshalledListText() {
    return marshalledListText;
  }

  public void setMarshalledListText(String marshalledListText) {
    this.marshalledListText = marshalledListText;
  }


  public AmendmentSearchItem pageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
    return this;
  }

  /**
   * Get pageNumber
   * @return pageNumber
   */
  @javax.annotation.Nullable
  public Integer getPageNumber() {
    return pageNumber;
  }

  public void setPageNumber(Integer pageNumber) {
    this.pageNumber = pageNumber;
  }


  public AmendmentSearchItem schedule(Integer schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nullable
  public Integer getSchedule() {
    return schedule;
  }

  public void setSchedule(Integer schedule) {
    this.schedule = schedule;
  }


  public AmendmentSearchItem sponsors(List<AmendmentMember> sponsors) {
    this.sponsors = sponsors;
    return this;
  }

  public AmendmentSearchItem addSponsorsItem(AmendmentMember sponsorsItem) {
    if (this.sponsors == null) {
      this.sponsors = new ArrayList<>();
    }
    this.sponsors.add(sponsorsItem);
    return this;
  }

  /**
   * Get sponsors
   * @return sponsors
   */
  @javax.annotation.Nullable
  public List<AmendmentMember> getSponsors() {
    return sponsors;
  }

  public void setSponsors(List<AmendmentMember> sponsors) {
    this.sponsors = sponsors;
  }


  public AmendmentSearchItem summaryText(List<String> summaryText) {
    this.summaryText = summaryText;
    return this;
  }

  public AmendmentSearchItem addSummaryTextItem(String summaryTextItem) {
    if (this.summaryText == null) {
      this.summaryText = new ArrayList<>();
    }
    this.summaryText.add(summaryTextItem);
    return this;
  }

  /**
   * Get summaryText
   * @return summaryText
   */
  @javax.annotation.Nullable
  public List<String> getSummaryText() {
    return summaryText;
  }

  public void setSummaryText(List<String> summaryText) {
    this.summaryText = summaryText;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AmendmentSearchItem amendmentSearchItem = (AmendmentSearchItem) o;
    return Objects.equals(this.amendmentId, amendmentSearchItem.amendmentId) &&
        Objects.equals(this.amendmentPosition, amendmentSearchItem.amendmentPosition) &&
        Objects.equals(this.amendmentType, amendmentSearchItem.amendmentType) &&
        Objects.equals(this.billId, amendmentSearchItem.billId) &&
        Objects.equals(this.billStageId, amendmentSearchItem.billStageId) &&
        Objects.equals(this.clause, amendmentSearchItem.clause) &&
        Objects.equals(this.decision, amendmentSearchItem.decision) &&
        Objects.equals(this.lineNumber, amendmentSearchItem.lineNumber) &&
        Objects.equals(this.marshalledListText, amendmentSearchItem.marshalledListText) &&
        Objects.equals(this.pageNumber, amendmentSearchItem.pageNumber) &&
        Objects.equals(this.schedule, amendmentSearchItem.schedule) &&
        Objects.equals(this.sponsors, amendmentSearchItem.sponsors) &&
        Objects.equals(this.summaryText, amendmentSearchItem.summaryText);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amendmentId, amendmentPosition, amendmentType, billId, billStageId, clause, decision, lineNumber, marshalledListText, pageNumber, schedule, sponsors, summaryText);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AmendmentSearchItem {\n");
    sb.append("    amendmentId: ").append(toIndentedString(amendmentId)).append("\n");
    sb.append("    amendmentPosition: ").append(toIndentedString(amendmentPosition)).append("\n");
    sb.append("    amendmentType: ").append(toIndentedString(amendmentType)).append("\n");
    sb.append("    billId: ").append(toIndentedString(billId)).append("\n");
    sb.append("    billStageId: ").append(toIndentedString(billStageId)).append("\n");
    sb.append("    clause: ").append(toIndentedString(clause)).append("\n");
    sb.append("    decision: ").append(toIndentedString(decision)).append("\n");
    sb.append("    lineNumber: ").append(toIndentedString(lineNumber)).append("\n");
    sb.append("    marshalledListText: ").append(toIndentedString(marshalledListText)).append("\n");
    sb.append("    pageNumber: ").append(toIndentedString(pageNumber)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    sponsors: ").append(toIndentedString(sponsors)).append("\n");
    sb.append("    summaryText: ").append(toIndentedString(summaryText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amendmentId");
    openapiFields.add("amendmentPosition");
    openapiFields.add("amendmentType");
    openapiFields.add("billId");
    openapiFields.add("billStageId");
    openapiFields.add("clause");
    openapiFields.add("decision");
    openapiFields.add("lineNumber");
    openapiFields.add("marshalledListText");
    openapiFields.add("pageNumber");
    openapiFields.add("schedule");
    openapiFields.add("sponsors");
    openapiFields.add("summaryText");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AmendmentSearchItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AmendmentSearchItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AmendmentSearchItem is not found in the empty JSON string", AmendmentSearchItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AmendmentSearchItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AmendmentSearchItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("amendmentPosition") != null && !jsonObj.get("amendmentPosition").isJsonNull()) && !jsonObj.get("amendmentPosition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `amendmentPosition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("amendmentPosition").toString()));
      }
      // validate the optional field `amendmentType`
      if (jsonObj.get("amendmentType") != null && !jsonObj.get("amendmentType").isJsonNull()) {
        AmendmentType.validateJsonElement(jsonObj.get("amendmentType"));
      }
      // validate the optional field `decision`
      if (jsonObj.get("decision") != null && !jsonObj.get("decision").isJsonNull()) {
        AmendmentDecision.validateJsonElement(jsonObj.get("decision"));
      }
      if ((jsonObj.get("marshalledListText") != null && !jsonObj.get("marshalledListText").isJsonNull()) && !jsonObj.get("marshalledListText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marshalledListText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marshalledListText").toString()));
      }
      if (jsonObj.get("sponsors") != null && !jsonObj.get("sponsors").isJsonNull()) {
        JsonArray jsonArraysponsors = jsonObj.getAsJsonArray("sponsors");
        if (jsonArraysponsors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("sponsors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `sponsors` to be an array in the JSON string but got `%s`", jsonObj.get("sponsors").toString()));
          }

          // validate the optional field `sponsors` (array)
          for (int i = 0; i < jsonArraysponsors.size(); i++) {
            AmendmentMember.validateJsonElement(jsonArraysponsors.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("summaryText") != null && !jsonObj.get("summaryText").isJsonNull() && !jsonObj.get("summaryText").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `summaryText` to be an array in the JSON string but got `%s`", jsonObj.get("summaryText").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AmendmentSearchItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AmendmentSearchItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AmendmentSearchItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AmendmentSearchItem.class));

       return (TypeAdapter<T>) new TypeAdapter<AmendmentSearchItem>() {
           @Override
           public void write(JsonWriter out, AmendmentSearchItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AmendmentSearchItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AmendmentSearchItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AmendmentSearchItem
   * @throws IOException if the JSON string is invalid with respect to AmendmentSearchItem
   */
  public static AmendmentSearchItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AmendmentSearchItem.class);
  }

  /**
   * Convert an instance of AmendmentSearchItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

