/**
 * House of Commons Oral and Written Questions API
 * An API that allows querying all tabled oral and written questions, and motions for the House of Commons.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPublishedOralQuestionTime.h
 *
 * 
 */

#ifndef OAIPublishedOralQuestionTime_H
#define OAIPublishedOralQuestionTime_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPublishedOralQuestionTime : public OAIObject {
public:
    OAIPublishedOralQuestionTime();
    OAIPublishedOralQuestionTime(QString json);
    ~OAIPublishedOralQuestionTime() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAnsweringBodyNames() const;
    void setAnsweringBodyNames(const QString &answering_body_names);
    bool is_answering_body_names_Set() const;
    bool is_answering_body_names_Valid() const;

    QString getAnsweringMinisterTitles() const;
    void setAnsweringMinisterTitles(const QString &answering_minister_titles);
    bool is_answering_minister_titles_Set() const;
    bool is_answering_minister_titles_Valid() const;

    QDateTime getAnsweringWhen() const;
    void setAnsweringWhen(const QDateTime &answering_when);
    bool is_answering_when_Set() const;
    bool is_answering_when_Valid() const;

    QDateTime getDeadlineWhen() const;
    void setDeadlineWhen(const QDateTime &deadline_when);
    bool is_deadline_when_Set() const;
    bool is_deadline_when_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getSubstantiveTime() const;
    void setSubstantiveTime(const QString &substantive_time);
    bool is_substantive_time_Set() const;
    bool is_substantive_time_Valid() const;

    QString getTopicalTime() const;
    void setTopicalTime(const QString &topical_time);
    bool is_topical_time_Set() const;
    bool is_topical_time_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_answering_body_names;
    bool m_answering_body_names_isSet;
    bool m_answering_body_names_isValid;

    QString m_answering_minister_titles;
    bool m_answering_minister_titles_isSet;
    bool m_answering_minister_titles_isValid;

    QDateTime m_answering_when;
    bool m_answering_when_isSet;
    bool m_answering_when_isValid;

    QDateTime m_deadline_when;
    bool m_deadline_when_isSet;
    bool m_deadline_when_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_substantive_time;
    bool m_substantive_time_isSet;
    bool m_substantive_time_isValid;

    QString m_topical_time;
    bool m_topical_time_isSet;
    bool m_topical_time_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPublishedOralQuestionTime)

#endif // OAIPublishedOralQuestionTime_H
