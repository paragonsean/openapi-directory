# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.member_for_date import MemberForDate
from openapi_server import util


class PublishedEarlyDayMotionSponsor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_when: datetime=None, id: int=None, is_withdrawn: bool=None, member: MemberForDate=None, member_id: int=None, sponsoring_order: int=None, withdrawn_date: datetime=None):
        """PublishedEarlyDayMotionSponsor - a model defined in OpenAPI

        :param created_when: The created_when of this PublishedEarlyDayMotionSponsor.
        :param id: The id of this PublishedEarlyDayMotionSponsor.
        :param is_withdrawn: The is_withdrawn of this PublishedEarlyDayMotionSponsor.
        :param member: The member of this PublishedEarlyDayMotionSponsor.
        :param member_id: The member_id of this PublishedEarlyDayMotionSponsor.
        :param sponsoring_order: The sponsoring_order of this PublishedEarlyDayMotionSponsor.
        :param withdrawn_date: The withdrawn_date of this PublishedEarlyDayMotionSponsor.
        """
        self.openapi_types = {
            'created_when': datetime,
            'id': int,
            'is_withdrawn': bool,
            'member': MemberForDate,
            'member_id': int,
            'sponsoring_order': int,
            'withdrawn_date': datetime
        }

        self.attribute_map = {
            'created_when': 'CreatedWhen',
            'id': 'Id',
            'is_withdrawn': 'IsWithdrawn',
            'member': 'Member',
            'member_id': 'MemberId',
            'sponsoring_order': 'SponsoringOrder',
            'withdrawn_date': 'WithdrawnDate'
        }

        self._created_when = created_when
        self._id = id
        self._is_withdrawn = is_withdrawn
        self._member = member
        self._member_id = member_id
        self._sponsoring_order = sponsoring_order
        self._withdrawn_date = withdrawn_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishedEarlyDayMotionSponsor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishedEarlyDayMotionSponsor of this PublishedEarlyDayMotionSponsor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_when(self):
        """Gets the created_when of this PublishedEarlyDayMotionSponsor.


        :return: The created_when of this PublishedEarlyDayMotionSponsor.
        :rtype: datetime
        """
        return self._created_when

    @created_when.setter
    def created_when(self, created_when):
        """Sets the created_when of this PublishedEarlyDayMotionSponsor.


        :param created_when: The created_when of this PublishedEarlyDayMotionSponsor.
        :type created_when: datetime
        """

        self._created_when = created_when

    @property
    def id(self):
        """Gets the id of this PublishedEarlyDayMotionSponsor.


        :return: The id of this PublishedEarlyDayMotionSponsor.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PublishedEarlyDayMotionSponsor.


        :param id: The id of this PublishedEarlyDayMotionSponsor.
        :type id: int
        """

        self._id = id

    @property
    def is_withdrawn(self):
        """Gets the is_withdrawn of this PublishedEarlyDayMotionSponsor.


        :return: The is_withdrawn of this PublishedEarlyDayMotionSponsor.
        :rtype: bool
        """
        return self._is_withdrawn

    @is_withdrawn.setter
    def is_withdrawn(self, is_withdrawn):
        """Sets the is_withdrawn of this PublishedEarlyDayMotionSponsor.


        :param is_withdrawn: The is_withdrawn of this PublishedEarlyDayMotionSponsor.
        :type is_withdrawn: bool
        """

        self._is_withdrawn = is_withdrawn

    @property
    def member(self):
        """Gets the member of this PublishedEarlyDayMotionSponsor.


        :return: The member of this PublishedEarlyDayMotionSponsor.
        :rtype: MemberForDate
        """
        return self._member

    @member.setter
    def member(self, member):
        """Sets the member of this PublishedEarlyDayMotionSponsor.


        :param member: The member of this PublishedEarlyDayMotionSponsor.
        :type member: MemberForDate
        """

        self._member = member

    @property
    def member_id(self):
        """Gets the member_id of this PublishedEarlyDayMotionSponsor.


        :return: The member_id of this PublishedEarlyDayMotionSponsor.
        :rtype: int
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id):
        """Sets the member_id of this PublishedEarlyDayMotionSponsor.


        :param member_id: The member_id of this PublishedEarlyDayMotionSponsor.
        :type member_id: int
        """

        self._member_id = member_id

    @property
    def sponsoring_order(self):
        """Gets the sponsoring_order of this PublishedEarlyDayMotionSponsor.


        :return: The sponsoring_order of this PublishedEarlyDayMotionSponsor.
        :rtype: int
        """
        return self._sponsoring_order

    @sponsoring_order.setter
    def sponsoring_order(self, sponsoring_order):
        """Sets the sponsoring_order of this PublishedEarlyDayMotionSponsor.


        :param sponsoring_order: The sponsoring_order of this PublishedEarlyDayMotionSponsor.
        :type sponsoring_order: int
        """

        self._sponsoring_order = sponsoring_order

    @property
    def withdrawn_date(self):
        """Gets the withdrawn_date of this PublishedEarlyDayMotionSponsor.


        :return: The withdrawn_date of this PublishedEarlyDayMotionSponsor.
        :rtype: datetime
        """
        return self._withdrawn_date

    @withdrawn_date.setter
    def withdrawn_date(self, withdrawn_date):
        """Sets the withdrawn_date of this PublishedEarlyDayMotionSponsor.


        :param withdrawn_date: The withdrawn_date of this PublishedEarlyDayMotionSponsor.
        :type withdrawn_date: datetime
        """

        self._withdrawn_date = withdrawn_date
