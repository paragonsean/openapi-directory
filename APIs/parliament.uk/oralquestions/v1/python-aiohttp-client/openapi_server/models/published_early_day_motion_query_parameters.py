# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PublishedEarlyDayMotionQueryParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_status_date_end: datetime=None, current_status_date_start: datetime=None, edm_ids: List[int]=None, include_sponsored_by_member: bool=None, is_prayer: bool=None, member_id: int=None, order_by: str=None, search_term: str=None, skip: int=None, statuses: List[str]=None, tabled_end_date: datetime=None, tabled_start_date: datetime=None, take: int=None, uin_with_amendment_suffix: str=None):
        """PublishedEarlyDayMotionQueryParameters - a model defined in OpenAPI

        :param current_status_date_end: The current_status_date_end of this PublishedEarlyDayMotionQueryParameters.
        :param current_status_date_start: The current_status_date_start of this PublishedEarlyDayMotionQueryParameters.
        :param edm_ids: The edm_ids of this PublishedEarlyDayMotionQueryParameters.
        :param include_sponsored_by_member: The include_sponsored_by_member of this PublishedEarlyDayMotionQueryParameters.
        :param is_prayer: The is_prayer of this PublishedEarlyDayMotionQueryParameters.
        :param member_id: The member_id of this PublishedEarlyDayMotionQueryParameters.
        :param order_by: The order_by of this PublishedEarlyDayMotionQueryParameters.
        :param search_term: The search_term of this PublishedEarlyDayMotionQueryParameters.
        :param skip: The skip of this PublishedEarlyDayMotionQueryParameters.
        :param statuses: The statuses of this PublishedEarlyDayMotionQueryParameters.
        :param tabled_end_date: The tabled_end_date of this PublishedEarlyDayMotionQueryParameters.
        :param tabled_start_date: The tabled_start_date of this PublishedEarlyDayMotionQueryParameters.
        :param take: The take of this PublishedEarlyDayMotionQueryParameters.
        :param uin_with_amendment_suffix: The uin_with_amendment_suffix of this PublishedEarlyDayMotionQueryParameters.
        """
        self.openapi_types = {
            'current_status_date_end': datetime,
            'current_status_date_start': datetime,
            'edm_ids': List[int],
            'include_sponsored_by_member': bool,
            'is_prayer': bool,
            'member_id': int,
            'order_by': str,
            'search_term': str,
            'skip': int,
            'statuses': List[str],
            'tabled_end_date': datetime,
            'tabled_start_date': datetime,
            'take': int,
            'uin_with_amendment_suffix': str
        }

        self.attribute_map = {
            'current_status_date_end': 'CurrentStatusDateEnd',
            'current_status_date_start': 'CurrentStatusDateStart',
            'edm_ids': 'EdmIds',
            'include_sponsored_by_member': 'IncludeSponsoredByMember',
            'is_prayer': 'IsPrayer',
            'member_id': 'MemberId',
            'order_by': 'OrderBy',
            'search_term': 'SearchTerm',
            'skip': 'Skip',
            'statuses': 'Statuses',
            'tabled_end_date': 'TabledEndDate',
            'tabled_start_date': 'TabledStartDate',
            'take': 'Take',
            'uin_with_amendment_suffix': 'UINWithAmendmentSuffix'
        }

        self._current_status_date_end = current_status_date_end
        self._current_status_date_start = current_status_date_start
        self._edm_ids = edm_ids
        self._include_sponsored_by_member = include_sponsored_by_member
        self._is_prayer = is_prayer
        self._member_id = member_id
        self._order_by = order_by
        self._search_term = search_term
        self._skip = skip
        self._statuses = statuses
        self._tabled_end_date = tabled_end_date
        self._tabled_start_date = tabled_start_date
        self._take = take
        self._uin_with_amendment_suffix = uin_with_amendment_suffix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishedEarlyDayMotionQueryParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishedEarlyDayMotionQueryParameters of this PublishedEarlyDayMotionQueryParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_status_date_end(self):
        """Gets the current_status_date_end of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the current status has been set on or before the date provided. Date format YYYY-MM-DD.

        :return: The current_status_date_end of this PublishedEarlyDayMotionQueryParameters.
        :rtype: datetime
        """
        return self._current_status_date_end

    @current_status_date_end.setter
    def current_status_date_end(self, current_status_date_end):
        """Sets the current_status_date_end of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the current status has been set on or before the date provided. Date format YYYY-MM-DD.

        :param current_status_date_end: The current_status_date_end of this PublishedEarlyDayMotionQueryParameters.
        :type current_status_date_end: datetime
        """

        self._current_status_date_end = current_status_date_end

    @property
    def current_status_date_start(self):
        """Gets the current_status_date_start of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the current status has been set on or after the date provided. Date format YYYY-MM-DD.

        :return: The current_status_date_start of this PublishedEarlyDayMotionQueryParameters.
        :rtype: datetime
        """
        return self._current_status_date_start

    @current_status_date_start.setter
    def current_status_date_start(self, current_status_date_start):
        """Sets the current_status_date_start of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the current status has been set on or after the date provided. Date format YYYY-MM-DD.

        :param current_status_date_start: The current_status_date_start of this PublishedEarlyDayMotionQueryParameters.
        :type current_status_date_start: datetime
        """

        self._current_status_date_start = current_status_date_start

    @property
    def edm_ids(self):
        """Gets the edm_ids of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions with an ID in the list provided.

        :return: The edm_ids of this PublishedEarlyDayMotionQueryParameters.
        :rtype: List[int]
        """
        return self._edm_ids

    @edm_ids.setter
    def edm_ids(self, edm_ids):
        """Sets the edm_ids of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions with an ID in the list provided.

        :param edm_ids: The edm_ids of this PublishedEarlyDayMotionQueryParameters.
        :type edm_ids: List[int]
        """

        self._edm_ids = edm_ids

    @property
    def include_sponsored_by_member(self):
        """Gets the include_sponsored_by_member of this PublishedEarlyDayMotionQueryParameters.

        Include Early Day Motions sponsored by Member specified

        :return: The include_sponsored_by_member of this PublishedEarlyDayMotionQueryParameters.
        :rtype: bool
        """
        return self._include_sponsored_by_member

    @include_sponsored_by_member.setter
    def include_sponsored_by_member(self, include_sponsored_by_member):
        """Sets the include_sponsored_by_member of this PublishedEarlyDayMotionQueryParameters.

        Include Early Day Motions sponsored by Member specified

        :param include_sponsored_by_member: The include_sponsored_by_member of this PublishedEarlyDayMotionQueryParameters.
        :type include_sponsored_by_member: bool
        """

        self._include_sponsored_by_member = include_sponsored_by_member

    @property
    def is_prayer(self):
        """Gets the is_prayer of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions which are a prayer against a Negative Statutory Instrument.

        :return: The is_prayer of this PublishedEarlyDayMotionQueryParameters.
        :rtype: bool
        """
        return self._is_prayer

    @is_prayer.setter
    def is_prayer(self, is_prayer):
        """Sets the is_prayer of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions which are a prayer against a Negative Statutory Instrument.

        :param is_prayer: The is_prayer of this PublishedEarlyDayMotionQueryParameters.
        :type is_prayer: bool
        """

        self._is_prayer = is_prayer

    @property
    def member_id(self):
        """Gets the member_id of this PublishedEarlyDayMotionQueryParameters.

        Return Early Day Motions tabled by Member with ID provided.

        :return: The member_id of this PublishedEarlyDayMotionQueryParameters.
        :rtype: int
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id):
        """Sets the member_id of this PublishedEarlyDayMotionQueryParameters.

        Return Early Day Motions tabled by Member with ID provided.

        :param member_id: The member_id of this PublishedEarlyDayMotionQueryParameters.
        :type member_id: int
        """

        self._member_id = member_id

    @property
    def order_by(self):
        """Gets the order_by of this PublishedEarlyDayMotionQueryParameters.

        Order results by date tabled, title or signature count. Default is date tabled.

        :return: The order_by of this PublishedEarlyDayMotionQueryParameters.
        :rtype: str
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this PublishedEarlyDayMotionQueryParameters.

        Order results by date tabled, title or signature count. Default is date tabled.

        :param order_by: The order_by of this PublishedEarlyDayMotionQueryParameters.
        :type order_by: str
        """
        allowed_values = ["DateTabledAsc", "DateTabledDesc", "TitleAsc", "TitleDesc", "SignatureCountAsc", "SignatureCountDesc"]  # noqa: E501
        if order_by not in allowed_values:
            raise ValueError(
                "Invalid value for `order_by` ({0}), must be one of {1}"
                .format(order_by, allowed_values)
            )

        self._order_by = order_by

    @property
    def search_term(self):
        """Gets the search_term of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the title includes the search term provided.

        :return: The search_term of this PublishedEarlyDayMotionQueryParameters.
        :rtype: str
        """
        return self._search_term

    @search_term.setter
    def search_term(self, search_term):
        """Sets the search_term of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the title includes the search term provided.

        :param search_term: The search_term of this PublishedEarlyDayMotionQueryParameters.
        :type search_term: str
        """

        self._search_term = search_term

    @property
    def skip(self):
        """Gets the skip of this PublishedEarlyDayMotionQueryParameters.

        The number of records to skip from the first, default is 0.

        :return: The skip of this PublishedEarlyDayMotionQueryParameters.
        :rtype: int
        """
        return self._skip

    @skip.setter
    def skip(self, skip):
        """Sets the skip of this PublishedEarlyDayMotionQueryParameters.

        The number of records to skip from the first, default is 0.

        :param skip: The skip of this PublishedEarlyDayMotionQueryParameters.
        :type skip: int
        """

        self._skip = skip

    @property
    def statuses(self):
        """Gets the statuses of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where current status is in the selected list.

        :return: The statuses of this PublishedEarlyDayMotionQueryParameters.
        :rtype: List[str]
        """
        return self._statuses

    @statuses.setter
    def statuses(self, statuses):
        """Sets the statuses of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where current status is in the selected list.

        :param statuses: The statuses of this PublishedEarlyDayMotionQueryParameters.
        :type statuses: List[str]
        """
        allowed_values = ["Published", "Withdrawn"]  # noqa: E501
        if not set(statuses).issubset(set(allowed_values)):
            raise ValueError(
                "Invalid values for `statuses` [{0}], must be a subset of [{1}]"
                .format(", ".join(map(str, set(statuses) - set(allowed_values))),
                        ", ".join(map(str, allowed_values)))
            )

        self._statuses = statuses

    @property
    def tabled_end_date(self):
        """Gets the tabled_end_date of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the date tabled is on or before the date provided. Date format YYYY-MM-DD.

        :return: The tabled_end_date of this PublishedEarlyDayMotionQueryParameters.
        :rtype: datetime
        """
        return self._tabled_end_date

    @tabled_end_date.setter
    def tabled_end_date(self, tabled_end_date):
        """Sets the tabled_end_date of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the date tabled is on or before the date provided. Date format YYYY-MM-DD.

        :param tabled_end_date: The tabled_end_date of this PublishedEarlyDayMotionQueryParameters.
        :type tabled_end_date: datetime
        """

        self._tabled_end_date = tabled_end_date

    @property
    def tabled_start_date(self):
        """Gets the tabled_start_date of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the date tabled is on or after the date provided. Date format YYYY-MM-DD.

        :return: The tabled_start_date of this PublishedEarlyDayMotionQueryParameters.
        :rtype: datetime
        """
        return self._tabled_start_date

    @tabled_start_date.setter
    def tabled_start_date(self, tabled_start_date):
        """Sets the tabled_start_date of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions where the date tabled is on or after the date provided. Date format YYYY-MM-DD.

        :param tabled_start_date: The tabled_start_date of this PublishedEarlyDayMotionQueryParameters.
        :type tabled_start_date: datetime
        """

        self._tabled_start_date = tabled_start_date

    @property
    def take(self):
        """Gets the take of this PublishedEarlyDayMotionQueryParameters.

        The number of records to return, default is 25, maximum is 100.

        :return: The take of this PublishedEarlyDayMotionQueryParameters.
        :rtype: int
        """
        return self._take

    @take.setter
    def take(self, take):
        """Sets the take of this PublishedEarlyDayMotionQueryParameters.

        The number of records to return, default is 25, maximum is 100.

        :param take: The take of this PublishedEarlyDayMotionQueryParameters.
        :type take: int
        """

        self._take = take

    @property
    def uin_with_amendment_suffix(self):
        """Gets the uin_with_amendment_suffix of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions with an UINWithAmendmentSuffix provided.

        :return: The uin_with_amendment_suffix of this PublishedEarlyDayMotionQueryParameters.
        :rtype: str
        """
        return self._uin_with_amendment_suffix

    @uin_with_amendment_suffix.setter
    def uin_with_amendment_suffix(self, uin_with_amendment_suffix):
        """Sets the uin_with_amendment_suffix of this PublishedEarlyDayMotionQueryParameters.

        Early Day Motions with an UINWithAmendmentSuffix provided.

        :param uin_with_amendment_suffix: The uin_with_amendment_suffix of this PublishedEarlyDayMotionQueryParameters.
        :type uin_with_amendment_suffix: str
        """

        self._uin_with_amendment_suffix = uin_with_amendment_suffix
