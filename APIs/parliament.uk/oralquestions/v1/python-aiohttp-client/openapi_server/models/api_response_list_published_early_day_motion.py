# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.paging_info import PagingInfo
from openapi_server.models.published_early_day_motion import PublishedEarlyDayMotion
from openapi_server import util


class ApiResponseListPublishedEarlyDayMotion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[str]=None, paging_info: PagingInfo=None, response: List[PublishedEarlyDayMotion]=None, status_code: str=None, success: bool=None):
        """ApiResponseListPublishedEarlyDayMotion - a model defined in OpenAPI

        :param errors: The errors of this ApiResponseListPublishedEarlyDayMotion.
        :param paging_info: The paging_info of this ApiResponseListPublishedEarlyDayMotion.
        :param response: The response of this ApiResponseListPublishedEarlyDayMotion.
        :param status_code: The status_code of this ApiResponseListPublishedEarlyDayMotion.
        :param success: The success of this ApiResponseListPublishedEarlyDayMotion.
        """
        self.openapi_types = {
            'errors': List[str],
            'paging_info': PagingInfo,
            'response': List[PublishedEarlyDayMotion],
            'status_code': str,
            'success': bool
        }

        self.attribute_map = {
            'errors': 'Errors',
            'paging_info': 'PagingInfo',
            'response': 'Response',
            'status_code': 'StatusCode',
            'success': 'Success'
        }

        self._errors = errors
        self._paging_info = paging_info
        self._response = response
        self._status_code = status_code
        self._success = success

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiResponseListPublishedEarlyDayMotion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApiResponse_List_PublishedEarlyDayMotion_ of this ApiResponseListPublishedEarlyDayMotion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this ApiResponseListPublishedEarlyDayMotion.


        :return: The errors of this ApiResponseListPublishedEarlyDayMotion.
        :rtype: List[str]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this ApiResponseListPublishedEarlyDayMotion.


        :param errors: The errors of this ApiResponseListPublishedEarlyDayMotion.
        :type errors: List[str]
        """

        self._errors = errors

    @property
    def paging_info(self):
        """Gets the paging_info of this ApiResponseListPublishedEarlyDayMotion.


        :return: The paging_info of this ApiResponseListPublishedEarlyDayMotion.
        :rtype: PagingInfo
        """
        return self._paging_info

    @paging_info.setter
    def paging_info(self, paging_info):
        """Sets the paging_info of this ApiResponseListPublishedEarlyDayMotion.


        :param paging_info: The paging_info of this ApiResponseListPublishedEarlyDayMotion.
        :type paging_info: PagingInfo
        """

        self._paging_info = paging_info

    @property
    def response(self):
        """Gets the response of this ApiResponseListPublishedEarlyDayMotion.


        :return: The response of this ApiResponseListPublishedEarlyDayMotion.
        :rtype: List[PublishedEarlyDayMotion]
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this ApiResponseListPublishedEarlyDayMotion.


        :param response: The response of this ApiResponseListPublishedEarlyDayMotion.
        :type response: List[PublishedEarlyDayMotion]
        """

        self._response = response

    @property
    def status_code(self):
        """Gets the status_code of this ApiResponseListPublishedEarlyDayMotion.


        :return: The status_code of this ApiResponseListPublishedEarlyDayMotion.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this ApiResponseListPublishedEarlyDayMotion.


        :param status_code: The status_code of this ApiResponseListPublishedEarlyDayMotion.
        :type status_code: str
        """
        allowed_values = ["Continue", "SwitchingProtocols", "OK", "Created", "Accepted", "NonAuthoritativeInformation", "NoContent", "ResetContent", "PartialContent", "MultipleChoices", "Ambiguous", "MovedPermanently", "Moved", "Found", "Redirect", "SeeOther", "RedirectMethod", "NotModified", "UseProxy", "Unused", "TemporaryRedirect", "RedirectKeepVerb", "BadRequest", "Unauthorized", "PaymentRequired", "Forbidden", "NotFound", "MethodNotAllowed", "NotAcceptable", "ProxyAuthenticationRequired", "RequestTimeout", "Conflict", "Gone", "LengthRequired", "PreconditionFailed", "RequestEntityTooLarge", "RequestUriTooLong", "UnsupportedMediaType", "RequestedRangeNotSatisfiable", "ExpectationFailed", "UpgradeRequired", "InternalServerError", "NotImplemented", "BadGateway", "ServiceUnavailable", "GatewayTimeout", "HttpVersionNotSupported"]  # noqa: E501
        if status_code not in allowed_values:
            raise ValueError(
                "Invalid value for `status_code` ({0}), must be one of {1}"
                .format(status_code, allowed_values)
            )

        self._status_code = status_code

    @property
    def success(self):
        """Gets the success of this ApiResponseListPublishedEarlyDayMotion.


        :return: The success of this ApiResponseListPublishedEarlyDayMotion.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this ApiResponseListPublishedEarlyDayMotion.


        :param success: The success of this ApiResponseListPublishedEarlyDayMotion.
        :type success: bool
        """

        self._success = success
