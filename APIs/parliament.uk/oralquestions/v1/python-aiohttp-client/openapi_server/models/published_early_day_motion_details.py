# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.member_for_date import MemberForDate
from openapi_server.models.published_early_day_motion_sponsor import PublishedEarlyDayMotionSponsor
from openapi_server import util


class PublishedEarlyDayMotionDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amendment_suffix: str=None, amendment_to_motion_id: int=None, amendments: List[PublishedEarlyDayMotionDetails]=None, date_tabled: datetime=None, id: int=None, member_id: int=None, motion_text: str=None, praying_against_negative_statutory_instrument_id: int=None, primary_sponsor: MemberForDate=None, sponsors: List[PublishedEarlyDayMotionSponsor]=None, sponsors_count: int=None, status: str=None, status_date: datetime=None, statutory_instrument_number: int=None, statutory_instrument_title: str=None, statutory_instrument_year: str=None, title: str=None, uin: int=None, uin_with_amendment_suffix: str=None):
        """PublishedEarlyDayMotionDetails - a model defined in OpenAPI

        :param amendment_suffix: The amendment_suffix of this PublishedEarlyDayMotionDetails.
        :param amendment_to_motion_id: The amendment_to_motion_id of this PublishedEarlyDayMotionDetails.
        :param amendments: The amendments of this PublishedEarlyDayMotionDetails.
        :param date_tabled: The date_tabled of this PublishedEarlyDayMotionDetails.
        :param id: The id of this PublishedEarlyDayMotionDetails.
        :param member_id: The member_id of this PublishedEarlyDayMotionDetails.
        :param motion_text: The motion_text of this PublishedEarlyDayMotionDetails.
        :param praying_against_negative_statutory_instrument_id: The praying_against_negative_statutory_instrument_id of this PublishedEarlyDayMotionDetails.
        :param primary_sponsor: The primary_sponsor of this PublishedEarlyDayMotionDetails.
        :param sponsors: The sponsors of this PublishedEarlyDayMotionDetails.
        :param sponsors_count: The sponsors_count of this PublishedEarlyDayMotionDetails.
        :param status: The status of this PublishedEarlyDayMotionDetails.
        :param status_date: The status_date of this PublishedEarlyDayMotionDetails.
        :param statutory_instrument_number: The statutory_instrument_number of this PublishedEarlyDayMotionDetails.
        :param statutory_instrument_title: The statutory_instrument_title of this PublishedEarlyDayMotionDetails.
        :param statutory_instrument_year: The statutory_instrument_year of this PublishedEarlyDayMotionDetails.
        :param title: The title of this PublishedEarlyDayMotionDetails.
        :param uin: The uin of this PublishedEarlyDayMotionDetails.
        :param uin_with_amendment_suffix: The uin_with_amendment_suffix of this PublishedEarlyDayMotionDetails.
        """
        self.openapi_types = {
            'amendment_suffix': str,
            'amendment_to_motion_id': int,
            'amendments': List[PublishedEarlyDayMotionDetails],
            'date_tabled': datetime,
            'id': int,
            'member_id': int,
            'motion_text': str,
            'praying_against_negative_statutory_instrument_id': int,
            'primary_sponsor': MemberForDate,
            'sponsors': List[PublishedEarlyDayMotionSponsor],
            'sponsors_count': int,
            'status': str,
            'status_date': datetime,
            'statutory_instrument_number': int,
            'statutory_instrument_title': str,
            'statutory_instrument_year': str,
            'title': str,
            'uin': int,
            'uin_with_amendment_suffix': str
        }

        self.attribute_map = {
            'amendment_suffix': 'AmendmentSuffix',
            'amendment_to_motion_id': 'AmendmentToMotionId',
            'amendments': 'Amendments',
            'date_tabled': 'DateTabled',
            'id': 'Id',
            'member_id': 'MemberId',
            'motion_text': 'MotionText',
            'praying_against_negative_statutory_instrument_id': 'PrayingAgainstNegativeStatutoryInstrumentId',
            'primary_sponsor': 'PrimarySponsor',
            'sponsors': 'Sponsors',
            'sponsors_count': 'SponsorsCount',
            'status': 'Status',
            'status_date': 'StatusDate',
            'statutory_instrument_number': 'StatutoryInstrumentNumber',
            'statutory_instrument_title': 'StatutoryInstrumentTitle',
            'statutory_instrument_year': 'StatutoryInstrumentYear',
            'title': 'Title',
            'uin': 'UIN',
            'uin_with_amendment_suffix': 'UINWithAmendmentSuffix'
        }

        self._amendment_suffix = amendment_suffix
        self._amendment_to_motion_id = amendment_to_motion_id
        self._amendments = amendments
        self._date_tabled = date_tabled
        self._id = id
        self._member_id = member_id
        self._motion_text = motion_text
        self._praying_against_negative_statutory_instrument_id = praying_against_negative_statutory_instrument_id
        self._primary_sponsor = primary_sponsor
        self._sponsors = sponsors
        self._sponsors_count = sponsors_count
        self._status = status
        self._status_date = status_date
        self._statutory_instrument_number = statutory_instrument_number
        self._statutory_instrument_title = statutory_instrument_title
        self._statutory_instrument_year = statutory_instrument_year
        self._title = title
        self._uin = uin
        self._uin_with_amendment_suffix = uin_with_amendment_suffix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PublishedEarlyDayMotionDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PublishedEarlyDayMotionDetails of this PublishedEarlyDayMotionDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amendment_suffix(self):
        """Gets the amendment_suffix of this PublishedEarlyDayMotionDetails.


        :return: The amendment_suffix of this PublishedEarlyDayMotionDetails.
        :rtype: str
        """
        return self._amendment_suffix

    @amendment_suffix.setter
    def amendment_suffix(self, amendment_suffix):
        """Sets the amendment_suffix of this PublishedEarlyDayMotionDetails.


        :param amendment_suffix: The amendment_suffix of this PublishedEarlyDayMotionDetails.
        :type amendment_suffix: str
        """

        self._amendment_suffix = amendment_suffix

    @property
    def amendment_to_motion_id(self):
        """Gets the amendment_to_motion_id of this PublishedEarlyDayMotionDetails.


        :return: The amendment_to_motion_id of this PublishedEarlyDayMotionDetails.
        :rtype: int
        """
        return self._amendment_to_motion_id

    @amendment_to_motion_id.setter
    def amendment_to_motion_id(self, amendment_to_motion_id):
        """Sets the amendment_to_motion_id of this PublishedEarlyDayMotionDetails.


        :param amendment_to_motion_id: The amendment_to_motion_id of this PublishedEarlyDayMotionDetails.
        :type amendment_to_motion_id: int
        """

        self._amendment_to_motion_id = amendment_to_motion_id

    @property
    def amendments(self):
        """Gets the amendments of this PublishedEarlyDayMotionDetails.


        :return: The amendments of this PublishedEarlyDayMotionDetails.
        :rtype: List[PublishedEarlyDayMotionDetails]
        """
        return self._amendments

    @amendments.setter
    def amendments(self, amendments):
        """Sets the amendments of this PublishedEarlyDayMotionDetails.


        :param amendments: The amendments of this PublishedEarlyDayMotionDetails.
        :type amendments: List[PublishedEarlyDayMotionDetails]
        """

        self._amendments = amendments

    @property
    def date_tabled(self):
        """Gets the date_tabled of this PublishedEarlyDayMotionDetails.


        :return: The date_tabled of this PublishedEarlyDayMotionDetails.
        :rtype: datetime
        """
        return self._date_tabled

    @date_tabled.setter
    def date_tabled(self, date_tabled):
        """Sets the date_tabled of this PublishedEarlyDayMotionDetails.


        :param date_tabled: The date_tabled of this PublishedEarlyDayMotionDetails.
        :type date_tabled: datetime
        """

        self._date_tabled = date_tabled

    @property
    def id(self):
        """Gets the id of this PublishedEarlyDayMotionDetails.


        :return: The id of this PublishedEarlyDayMotionDetails.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PublishedEarlyDayMotionDetails.


        :param id: The id of this PublishedEarlyDayMotionDetails.
        :type id: int
        """

        self._id = id

    @property
    def member_id(self):
        """Gets the member_id of this PublishedEarlyDayMotionDetails.


        :return: The member_id of this PublishedEarlyDayMotionDetails.
        :rtype: int
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id):
        """Sets the member_id of this PublishedEarlyDayMotionDetails.


        :param member_id: The member_id of this PublishedEarlyDayMotionDetails.
        :type member_id: int
        """

        self._member_id = member_id

    @property
    def motion_text(self):
        """Gets the motion_text of this PublishedEarlyDayMotionDetails.


        :return: The motion_text of this PublishedEarlyDayMotionDetails.
        :rtype: str
        """
        return self._motion_text

    @motion_text.setter
    def motion_text(self, motion_text):
        """Sets the motion_text of this PublishedEarlyDayMotionDetails.


        :param motion_text: The motion_text of this PublishedEarlyDayMotionDetails.
        :type motion_text: str
        """

        self._motion_text = motion_text

    @property
    def praying_against_negative_statutory_instrument_id(self):
        """Gets the praying_against_negative_statutory_instrument_id of this PublishedEarlyDayMotionDetails.


        :return: The praying_against_negative_statutory_instrument_id of this PublishedEarlyDayMotionDetails.
        :rtype: int
        """
        return self._praying_against_negative_statutory_instrument_id

    @praying_against_negative_statutory_instrument_id.setter
    def praying_against_negative_statutory_instrument_id(self, praying_against_negative_statutory_instrument_id):
        """Sets the praying_against_negative_statutory_instrument_id of this PublishedEarlyDayMotionDetails.


        :param praying_against_negative_statutory_instrument_id: The praying_against_negative_statutory_instrument_id of this PublishedEarlyDayMotionDetails.
        :type praying_against_negative_statutory_instrument_id: int
        """

        self._praying_against_negative_statutory_instrument_id = praying_against_negative_statutory_instrument_id

    @property
    def primary_sponsor(self):
        """Gets the primary_sponsor of this PublishedEarlyDayMotionDetails.


        :return: The primary_sponsor of this PublishedEarlyDayMotionDetails.
        :rtype: MemberForDate
        """
        return self._primary_sponsor

    @primary_sponsor.setter
    def primary_sponsor(self, primary_sponsor):
        """Sets the primary_sponsor of this PublishedEarlyDayMotionDetails.


        :param primary_sponsor: The primary_sponsor of this PublishedEarlyDayMotionDetails.
        :type primary_sponsor: MemberForDate
        """

        self._primary_sponsor = primary_sponsor

    @property
    def sponsors(self):
        """Gets the sponsors of this PublishedEarlyDayMotionDetails.


        :return: The sponsors of this PublishedEarlyDayMotionDetails.
        :rtype: List[PublishedEarlyDayMotionSponsor]
        """
        return self._sponsors

    @sponsors.setter
    def sponsors(self, sponsors):
        """Sets the sponsors of this PublishedEarlyDayMotionDetails.


        :param sponsors: The sponsors of this PublishedEarlyDayMotionDetails.
        :type sponsors: List[PublishedEarlyDayMotionSponsor]
        """

        self._sponsors = sponsors

    @property
    def sponsors_count(self):
        """Gets the sponsors_count of this PublishedEarlyDayMotionDetails.


        :return: The sponsors_count of this PublishedEarlyDayMotionDetails.
        :rtype: int
        """
        return self._sponsors_count

    @sponsors_count.setter
    def sponsors_count(self, sponsors_count):
        """Sets the sponsors_count of this PublishedEarlyDayMotionDetails.


        :param sponsors_count: The sponsors_count of this PublishedEarlyDayMotionDetails.
        :type sponsors_count: int
        """

        self._sponsors_count = sponsors_count

    @property
    def status(self):
        """Gets the status of this PublishedEarlyDayMotionDetails.


        :return: The status of this PublishedEarlyDayMotionDetails.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this PublishedEarlyDayMotionDetails.


        :param status: The status of this PublishedEarlyDayMotionDetails.
        :type status: str
        """
        allowed_values = ["Published", "Withdrawn"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status

    @property
    def status_date(self):
        """Gets the status_date of this PublishedEarlyDayMotionDetails.


        :return: The status_date of this PublishedEarlyDayMotionDetails.
        :rtype: datetime
        """
        return self._status_date

    @status_date.setter
    def status_date(self, status_date):
        """Sets the status_date of this PublishedEarlyDayMotionDetails.


        :param status_date: The status_date of this PublishedEarlyDayMotionDetails.
        :type status_date: datetime
        """

        self._status_date = status_date

    @property
    def statutory_instrument_number(self):
        """Gets the statutory_instrument_number of this PublishedEarlyDayMotionDetails.


        :return: The statutory_instrument_number of this PublishedEarlyDayMotionDetails.
        :rtype: int
        """
        return self._statutory_instrument_number

    @statutory_instrument_number.setter
    def statutory_instrument_number(self, statutory_instrument_number):
        """Sets the statutory_instrument_number of this PublishedEarlyDayMotionDetails.


        :param statutory_instrument_number: The statutory_instrument_number of this PublishedEarlyDayMotionDetails.
        :type statutory_instrument_number: int
        """

        self._statutory_instrument_number = statutory_instrument_number

    @property
    def statutory_instrument_title(self):
        """Gets the statutory_instrument_title of this PublishedEarlyDayMotionDetails.


        :return: The statutory_instrument_title of this PublishedEarlyDayMotionDetails.
        :rtype: str
        """
        return self._statutory_instrument_title

    @statutory_instrument_title.setter
    def statutory_instrument_title(self, statutory_instrument_title):
        """Sets the statutory_instrument_title of this PublishedEarlyDayMotionDetails.


        :param statutory_instrument_title: The statutory_instrument_title of this PublishedEarlyDayMotionDetails.
        :type statutory_instrument_title: str
        """

        self._statutory_instrument_title = statutory_instrument_title

    @property
    def statutory_instrument_year(self):
        """Gets the statutory_instrument_year of this PublishedEarlyDayMotionDetails.


        :return: The statutory_instrument_year of this PublishedEarlyDayMotionDetails.
        :rtype: str
        """
        return self._statutory_instrument_year

    @statutory_instrument_year.setter
    def statutory_instrument_year(self, statutory_instrument_year):
        """Sets the statutory_instrument_year of this PublishedEarlyDayMotionDetails.


        :param statutory_instrument_year: The statutory_instrument_year of this PublishedEarlyDayMotionDetails.
        :type statutory_instrument_year: str
        """

        self._statutory_instrument_year = statutory_instrument_year

    @property
    def title(self):
        """Gets the title of this PublishedEarlyDayMotionDetails.


        :return: The title of this PublishedEarlyDayMotionDetails.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PublishedEarlyDayMotionDetails.


        :param title: The title of this PublishedEarlyDayMotionDetails.
        :type title: str
        """

        self._title = title

    @property
    def uin(self):
        """Gets the uin of this PublishedEarlyDayMotionDetails.


        :return: The uin of this PublishedEarlyDayMotionDetails.
        :rtype: int
        """
        return self._uin

    @uin.setter
    def uin(self, uin):
        """Sets the uin of this PublishedEarlyDayMotionDetails.


        :param uin: The uin of this PublishedEarlyDayMotionDetails.
        :type uin: int
        """

        self._uin = uin

    @property
    def uin_with_amendment_suffix(self):
        """Gets the uin_with_amendment_suffix of this PublishedEarlyDayMotionDetails.


        :return: The uin_with_amendment_suffix of this PublishedEarlyDayMotionDetails.
        :rtype: str
        """
        return self._uin_with_amendment_suffix

    @uin_with_amendment_suffix.setter
    def uin_with_amendment_suffix(self, uin_with_amendment_suffix):
        """Sets the uin_with_amendment_suffix of this PublishedEarlyDayMotionDetails.


        :param uin_with_amendment_suffix: The uin_with_amendment_suffix of this PublishedEarlyDayMotionDetails.
        :type uin_with_amendment_suffix: str
        """

        self._uin_with_amendment_suffix = uin_with_amendment_suffix
