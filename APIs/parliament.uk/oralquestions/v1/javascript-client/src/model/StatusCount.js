/**
 * House of Commons Oral and Written Questions API
 * An API that allows querying all tabled oral and written questions, and motions for the House of Commons.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StatusCount model module.
 * @module model/StatusCount
 * @version v1
 */
class StatusCount {
    /**
     * Constructs a new <code>StatusCount</code>.
     * @alias module:model/StatusCount
     */
    constructor() { 
        
        StatusCount.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StatusCount</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StatusCount} obj Optional instance to populate.
     * @return {module:model/StatusCount} The populated <code>StatusCount</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StatusCount();

            if (data.hasOwnProperty('Count')) {
                obj['Count'] = ApiClient.convertToType(data['Count'], 'Number');
            }
            if (data.hasOwnProperty('StatusId')) {
                obj['StatusId'] = ApiClient.convertToType(data['StatusId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StatusCount</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StatusCount</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} Count
 */
StatusCount.prototype['Count'] = undefined;

/**
 * @member {Number} StatusId
 */
StatusCount.prototype['StatusId'] = undefined;






export default StatusCount;

