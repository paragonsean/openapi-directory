/*
 * House of Commons Oral and Written Questions API
 * An API that allows querying all tabled oral and written questions, and motions for the House of Commons.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MemberForDate;
import org.openapitools.client.model.PublishedEarlyDayMotionSponsor;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PublishedEarlyDayMotionDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:28.456197-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PublishedEarlyDayMotionDetails {
  public static final String SERIALIZED_NAME_AMENDMENT_SUFFIX = "AmendmentSuffix";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_SUFFIX)
  private String amendmentSuffix;

  public static final String SERIALIZED_NAME_AMENDMENT_TO_MOTION_ID = "AmendmentToMotionId";
  @SerializedName(SERIALIZED_NAME_AMENDMENT_TO_MOTION_ID)
  private Integer amendmentToMotionId;

  public static final String SERIALIZED_NAME_AMENDMENTS = "Amendments";
  @SerializedName(SERIALIZED_NAME_AMENDMENTS)
  private List<PublishedEarlyDayMotionDetails> amendments = new ArrayList<>();

  public static final String SERIALIZED_NAME_DATE_TABLED = "DateTabled";
  @SerializedName(SERIALIZED_NAME_DATE_TABLED)
  private OffsetDateTime dateTabled;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MEMBER_ID = "MemberId";
  @SerializedName(SERIALIZED_NAME_MEMBER_ID)
  private Integer memberId;

  public static final String SERIALIZED_NAME_MOTION_TEXT = "MotionText";
  @SerializedName(SERIALIZED_NAME_MOTION_TEXT)
  private String motionText;

  public static final String SERIALIZED_NAME_PRAYING_AGAINST_NEGATIVE_STATUTORY_INSTRUMENT_ID = "PrayingAgainstNegativeStatutoryInstrumentId";
  @SerializedName(SERIALIZED_NAME_PRAYING_AGAINST_NEGATIVE_STATUTORY_INSTRUMENT_ID)
  private Integer prayingAgainstNegativeStatutoryInstrumentId;

  public static final String SERIALIZED_NAME_PRIMARY_SPONSOR = "PrimarySponsor";
  @SerializedName(SERIALIZED_NAME_PRIMARY_SPONSOR)
  private MemberForDate primarySponsor;

  public static final String SERIALIZED_NAME_SPONSORS = "Sponsors";
  @SerializedName(SERIALIZED_NAME_SPONSORS)
  private List<PublishedEarlyDayMotionSponsor> sponsors = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPONSORS_COUNT = "SponsorsCount";
  @SerializedName(SERIALIZED_NAME_SPONSORS_COUNT)
  private Integer sponsorsCount;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PUBLISHED("Published"),
    
    WITHDRAWN("Withdrawn");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_STATUS_DATE = "StatusDate";
  @SerializedName(SERIALIZED_NAME_STATUS_DATE)
  private OffsetDateTime statusDate;

  public static final String SERIALIZED_NAME_STATUTORY_INSTRUMENT_NUMBER = "StatutoryInstrumentNumber";
  @SerializedName(SERIALIZED_NAME_STATUTORY_INSTRUMENT_NUMBER)
  private Integer statutoryInstrumentNumber;

  public static final String SERIALIZED_NAME_STATUTORY_INSTRUMENT_TITLE = "StatutoryInstrumentTitle";
  @SerializedName(SERIALIZED_NAME_STATUTORY_INSTRUMENT_TITLE)
  private String statutoryInstrumentTitle;

  public static final String SERIALIZED_NAME_STATUTORY_INSTRUMENT_YEAR = "StatutoryInstrumentYear";
  @SerializedName(SERIALIZED_NAME_STATUTORY_INSTRUMENT_YEAR)
  private String statutoryInstrumentYear;

  public static final String SERIALIZED_NAME_TITLE = "Title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_U_I_N = "UIN";
  @SerializedName(SERIALIZED_NAME_U_I_N)
  private Integer UIN;

  public static final String SERIALIZED_NAME_UI_N_WITH_AMENDMENT_SUFFIX = "UINWithAmendmentSuffix";
  @SerializedName(SERIALIZED_NAME_UI_N_WITH_AMENDMENT_SUFFIX)
  private String uiNWithAmendmentSuffix;

  public PublishedEarlyDayMotionDetails() {
  }

  public PublishedEarlyDayMotionDetails amendmentSuffix(String amendmentSuffix) {
    this.amendmentSuffix = amendmentSuffix;
    return this;
  }

  /**
   * Get amendmentSuffix
   * @return amendmentSuffix
   */
  @javax.annotation.Nullable
  public String getAmendmentSuffix() {
    return amendmentSuffix;
  }

  public void setAmendmentSuffix(String amendmentSuffix) {
    this.amendmentSuffix = amendmentSuffix;
  }


  public PublishedEarlyDayMotionDetails amendmentToMotionId(Integer amendmentToMotionId) {
    this.amendmentToMotionId = amendmentToMotionId;
    return this;
  }

  /**
   * Get amendmentToMotionId
   * @return amendmentToMotionId
   */
  @javax.annotation.Nullable
  public Integer getAmendmentToMotionId() {
    return amendmentToMotionId;
  }

  public void setAmendmentToMotionId(Integer amendmentToMotionId) {
    this.amendmentToMotionId = amendmentToMotionId;
  }


  public PublishedEarlyDayMotionDetails amendments(List<PublishedEarlyDayMotionDetails> amendments) {
    this.amendments = amendments;
    return this;
  }

  public PublishedEarlyDayMotionDetails addAmendmentsItem(PublishedEarlyDayMotionDetails amendmentsItem) {
    if (this.amendments == null) {
      this.amendments = new ArrayList<>();
    }
    this.amendments.add(amendmentsItem);
    return this;
  }

  /**
   * Get amendments
   * @return amendments
   */
  @javax.annotation.Nullable
  public List<PublishedEarlyDayMotionDetails> getAmendments() {
    return amendments;
  }

  public void setAmendments(List<PublishedEarlyDayMotionDetails> amendments) {
    this.amendments = amendments;
  }


  public PublishedEarlyDayMotionDetails dateTabled(OffsetDateTime dateTabled) {
    this.dateTabled = dateTabled;
    return this;
  }

  /**
   * Get dateTabled
   * @return dateTabled
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDateTabled() {
    return dateTabled;
  }

  public void setDateTabled(OffsetDateTime dateTabled) {
    this.dateTabled = dateTabled;
  }


  public PublishedEarlyDayMotionDetails id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public PublishedEarlyDayMotionDetails memberId(Integer memberId) {
    this.memberId = memberId;
    return this;
  }

  /**
   * Get memberId
   * @return memberId
   */
  @javax.annotation.Nullable
  public Integer getMemberId() {
    return memberId;
  }

  public void setMemberId(Integer memberId) {
    this.memberId = memberId;
  }


  public PublishedEarlyDayMotionDetails motionText(String motionText) {
    this.motionText = motionText;
    return this;
  }

  /**
   * Get motionText
   * @return motionText
   */
  @javax.annotation.Nullable
  public String getMotionText() {
    return motionText;
  }

  public void setMotionText(String motionText) {
    this.motionText = motionText;
  }


  public PublishedEarlyDayMotionDetails prayingAgainstNegativeStatutoryInstrumentId(Integer prayingAgainstNegativeStatutoryInstrumentId) {
    this.prayingAgainstNegativeStatutoryInstrumentId = prayingAgainstNegativeStatutoryInstrumentId;
    return this;
  }

  /**
   * Get prayingAgainstNegativeStatutoryInstrumentId
   * @return prayingAgainstNegativeStatutoryInstrumentId
   */
  @javax.annotation.Nullable
  public Integer getPrayingAgainstNegativeStatutoryInstrumentId() {
    return prayingAgainstNegativeStatutoryInstrumentId;
  }

  public void setPrayingAgainstNegativeStatutoryInstrumentId(Integer prayingAgainstNegativeStatutoryInstrumentId) {
    this.prayingAgainstNegativeStatutoryInstrumentId = prayingAgainstNegativeStatutoryInstrumentId;
  }


  public PublishedEarlyDayMotionDetails primarySponsor(MemberForDate primarySponsor) {
    this.primarySponsor = primarySponsor;
    return this;
  }

  /**
   * Get primarySponsor
   * @return primarySponsor
   */
  @javax.annotation.Nullable
  public MemberForDate getPrimarySponsor() {
    return primarySponsor;
  }

  public void setPrimarySponsor(MemberForDate primarySponsor) {
    this.primarySponsor = primarySponsor;
  }


  public PublishedEarlyDayMotionDetails sponsors(List<PublishedEarlyDayMotionSponsor> sponsors) {
    this.sponsors = sponsors;
    return this;
  }

  public PublishedEarlyDayMotionDetails addSponsorsItem(PublishedEarlyDayMotionSponsor sponsorsItem) {
    if (this.sponsors == null) {
      this.sponsors = new ArrayList<>();
    }
    this.sponsors.add(sponsorsItem);
    return this;
  }

  /**
   * Get sponsors
   * @return sponsors
   */
  @javax.annotation.Nullable
  public List<PublishedEarlyDayMotionSponsor> getSponsors() {
    return sponsors;
  }

  public void setSponsors(List<PublishedEarlyDayMotionSponsor> sponsors) {
    this.sponsors = sponsors;
  }


  public PublishedEarlyDayMotionDetails sponsorsCount(Integer sponsorsCount) {
    this.sponsorsCount = sponsorsCount;
    return this;
  }

  /**
   * Get sponsorsCount
   * @return sponsorsCount
   */
  @javax.annotation.Nullable
  public Integer getSponsorsCount() {
    return sponsorsCount;
  }

  public void setSponsorsCount(Integer sponsorsCount) {
    this.sponsorsCount = sponsorsCount;
  }


  public PublishedEarlyDayMotionDetails status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public PublishedEarlyDayMotionDetails statusDate(OffsetDateTime statusDate) {
    this.statusDate = statusDate;
    return this;
  }

  /**
   * Get statusDate
   * @return statusDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStatusDate() {
    return statusDate;
  }

  public void setStatusDate(OffsetDateTime statusDate) {
    this.statusDate = statusDate;
  }


  public PublishedEarlyDayMotionDetails statutoryInstrumentNumber(Integer statutoryInstrumentNumber) {
    this.statutoryInstrumentNumber = statutoryInstrumentNumber;
    return this;
  }

  /**
   * Get statutoryInstrumentNumber
   * @return statutoryInstrumentNumber
   */
  @javax.annotation.Nullable
  public Integer getStatutoryInstrumentNumber() {
    return statutoryInstrumentNumber;
  }

  public void setStatutoryInstrumentNumber(Integer statutoryInstrumentNumber) {
    this.statutoryInstrumentNumber = statutoryInstrumentNumber;
  }


  public PublishedEarlyDayMotionDetails statutoryInstrumentTitle(String statutoryInstrumentTitle) {
    this.statutoryInstrumentTitle = statutoryInstrumentTitle;
    return this;
  }

  /**
   * Get statutoryInstrumentTitle
   * @return statutoryInstrumentTitle
   */
  @javax.annotation.Nullable
  public String getStatutoryInstrumentTitle() {
    return statutoryInstrumentTitle;
  }

  public void setStatutoryInstrumentTitle(String statutoryInstrumentTitle) {
    this.statutoryInstrumentTitle = statutoryInstrumentTitle;
  }


  public PublishedEarlyDayMotionDetails statutoryInstrumentYear(String statutoryInstrumentYear) {
    this.statutoryInstrumentYear = statutoryInstrumentYear;
    return this;
  }

  /**
   * Get statutoryInstrumentYear
   * @return statutoryInstrumentYear
   */
  @javax.annotation.Nullable
  public String getStatutoryInstrumentYear() {
    return statutoryInstrumentYear;
  }

  public void setStatutoryInstrumentYear(String statutoryInstrumentYear) {
    this.statutoryInstrumentYear = statutoryInstrumentYear;
  }


  public PublishedEarlyDayMotionDetails title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Get title
   * @return title
   */
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public PublishedEarlyDayMotionDetails UIN(Integer UIN) {
    this.UIN = UIN;
    return this;
  }

  /**
   * Get UIN
   * @return UIN
   */
  @javax.annotation.Nullable
  public Integer getUIN() {
    return UIN;
  }

  public void setUIN(Integer UIN) {
    this.UIN = UIN;
  }


  public PublishedEarlyDayMotionDetails uiNWithAmendmentSuffix(String uiNWithAmendmentSuffix) {
    this.uiNWithAmendmentSuffix = uiNWithAmendmentSuffix;
    return this;
  }

  /**
   * Get uiNWithAmendmentSuffix
   * @return uiNWithAmendmentSuffix
   */
  @javax.annotation.Nullable
  public String getUiNWithAmendmentSuffix() {
    return uiNWithAmendmentSuffix;
  }

  public void setUiNWithAmendmentSuffix(String uiNWithAmendmentSuffix) {
    this.uiNWithAmendmentSuffix = uiNWithAmendmentSuffix;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublishedEarlyDayMotionDetails publishedEarlyDayMotionDetails = (PublishedEarlyDayMotionDetails) o;
    return Objects.equals(this.amendmentSuffix, publishedEarlyDayMotionDetails.amendmentSuffix) &&
        Objects.equals(this.amendmentToMotionId, publishedEarlyDayMotionDetails.amendmentToMotionId) &&
        Objects.equals(this.amendments, publishedEarlyDayMotionDetails.amendments) &&
        Objects.equals(this.dateTabled, publishedEarlyDayMotionDetails.dateTabled) &&
        Objects.equals(this.id, publishedEarlyDayMotionDetails.id) &&
        Objects.equals(this.memberId, publishedEarlyDayMotionDetails.memberId) &&
        Objects.equals(this.motionText, publishedEarlyDayMotionDetails.motionText) &&
        Objects.equals(this.prayingAgainstNegativeStatutoryInstrumentId, publishedEarlyDayMotionDetails.prayingAgainstNegativeStatutoryInstrumentId) &&
        Objects.equals(this.primarySponsor, publishedEarlyDayMotionDetails.primarySponsor) &&
        Objects.equals(this.sponsors, publishedEarlyDayMotionDetails.sponsors) &&
        Objects.equals(this.sponsorsCount, publishedEarlyDayMotionDetails.sponsorsCount) &&
        Objects.equals(this.status, publishedEarlyDayMotionDetails.status) &&
        Objects.equals(this.statusDate, publishedEarlyDayMotionDetails.statusDate) &&
        Objects.equals(this.statutoryInstrumentNumber, publishedEarlyDayMotionDetails.statutoryInstrumentNumber) &&
        Objects.equals(this.statutoryInstrumentTitle, publishedEarlyDayMotionDetails.statutoryInstrumentTitle) &&
        Objects.equals(this.statutoryInstrumentYear, publishedEarlyDayMotionDetails.statutoryInstrumentYear) &&
        Objects.equals(this.title, publishedEarlyDayMotionDetails.title) &&
        Objects.equals(this.UIN, publishedEarlyDayMotionDetails.UIN) &&
        Objects.equals(this.uiNWithAmendmentSuffix, publishedEarlyDayMotionDetails.uiNWithAmendmentSuffix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amendmentSuffix, amendmentToMotionId, amendments, dateTabled, id, memberId, motionText, prayingAgainstNegativeStatutoryInstrumentId, primarySponsor, sponsors, sponsorsCount, status, statusDate, statutoryInstrumentNumber, statutoryInstrumentTitle, statutoryInstrumentYear, title, UIN, uiNWithAmendmentSuffix);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublishedEarlyDayMotionDetails {\n");
    sb.append("    amendmentSuffix: ").append(toIndentedString(amendmentSuffix)).append("\n");
    sb.append("    amendmentToMotionId: ").append(toIndentedString(amendmentToMotionId)).append("\n");
    sb.append("    amendments: ").append(toIndentedString(amendments)).append("\n");
    sb.append("    dateTabled: ").append(toIndentedString(dateTabled)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    motionText: ").append(toIndentedString(motionText)).append("\n");
    sb.append("    prayingAgainstNegativeStatutoryInstrumentId: ").append(toIndentedString(prayingAgainstNegativeStatutoryInstrumentId)).append("\n");
    sb.append("    primarySponsor: ").append(toIndentedString(primarySponsor)).append("\n");
    sb.append("    sponsors: ").append(toIndentedString(sponsors)).append("\n");
    sb.append("    sponsorsCount: ").append(toIndentedString(sponsorsCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    statusDate: ").append(toIndentedString(statusDate)).append("\n");
    sb.append("    statutoryInstrumentNumber: ").append(toIndentedString(statutoryInstrumentNumber)).append("\n");
    sb.append("    statutoryInstrumentTitle: ").append(toIndentedString(statutoryInstrumentTitle)).append("\n");
    sb.append("    statutoryInstrumentYear: ").append(toIndentedString(statutoryInstrumentYear)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    UIN: ").append(toIndentedString(UIN)).append("\n");
    sb.append("    uiNWithAmendmentSuffix: ").append(toIndentedString(uiNWithAmendmentSuffix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AmendmentSuffix");
    openapiFields.add("AmendmentToMotionId");
    openapiFields.add("Amendments");
    openapiFields.add("DateTabled");
    openapiFields.add("Id");
    openapiFields.add("MemberId");
    openapiFields.add("MotionText");
    openapiFields.add("PrayingAgainstNegativeStatutoryInstrumentId");
    openapiFields.add("PrimarySponsor");
    openapiFields.add("Sponsors");
    openapiFields.add("SponsorsCount");
    openapiFields.add("Status");
    openapiFields.add("StatusDate");
    openapiFields.add("StatutoryInstrumentNumber");
    openapiFields.add("StatutoryInstrumentTitle");
    openapiFields.add("StatutoryInstrumentYear");
    openapiFields.add("Title");
    openapiFields.add("UIN");
    openapiFields.add("UINWithAmendmentSuffix");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PublishedEarlyDayMotionDetails
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PublishedEarlyDayMotionDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PublishedEarlyDayMotionDetails is not found in the empty JSON string", PublishedEarlyDayMotionDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PublishedEarlyDayMotionDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PublishedEarlyDayMotionDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AmendmentSuffix") != null && !jsonObj.get("AmendmentSuffix").isJsonNull()) && !jsonObj.get("AmendmentSuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AmendmentSuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AmendmentSuffix").toString()));
      }
      if (jsonObj.get("Amendments") != null && !jsonObj.get("Amendments").isJsonNull()) {
        JsonArray jsonArrayamendments = jsonObj.getAsJsonArray("Amendments");
        if (jsonArrayamendments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Amendments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Amendments` to be an array in the JSON string but got `%s`", jsonObj.get("Amendments").toString()));
          }

          // validate the optional field `Amendments` (array)
          for (int i = 0; i < jsonArrayamendments.size(); i++) {
            PublishedEarlyDayMotionDetails.validateJsonElement(jsonArrayamendments.get(i));
          };
        }
      }
      if ((jsonObj.get("MotionText") != null && !jsonObj.get("MotionText").isJsonNull()) && !jsonObj.get("MotionText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MotionText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MotionText").toString()));
      }
      // validate the optional field `PrimarySponsor`
      if (jsonObj.get("PrimarySponsor") != null && !jsonObj.get("PrimarySponsor").isJsonNull()) {
        MemberForDate.validateJsonElement(jsonObj.get("PrimarySponsor"));
      }
      if (jsonObj.get("Sponsors") != null && !jsonObj.get("Sponsors").isJsonNull()) {
        JsonArray jsonArraysponsors = jsonObj.getAsJsonArray("Sponsors");
        if (jsonArraysponsors != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Sponsors").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Sponsors` to be an array in the JSON string but got `%s`", jsonObj.get("Sponsors").toString()));
          }

          // validate the optional field `Sponsors` (array)
          for (int i = 0; i < jsonArraysponsors.size(); i++) {
            PublishedEarlyDayMotionSponsor.validateJsonElement(jsonArraysponsors.get(i));
          };
        }
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      // validate the optional field `Status`
      if (jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("Status"));
      }
      if ((jsonObj.get("StatutoryInstrumentTitle") != null && !jsonObj.get("StatutoryInstrumentTitle").isJsonNull()) && !jsonObj.get("StatutoryInstrumentTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StatutoryInstrumentTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StatutoryInstrumentTitle").toString()));
      }
      if ((jsonObj.get("StatutoryInstrumentYear") != null && !jsonObj.get("StatutoryInstrumentYear").isJsonNull()) && !jsonObj.get("StatutoryInstrumentYear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StatutoryInstrumentYear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StatutoryInstrumentYear").toString()));
      }
      if ((jsonObj.get("Title") != null && !jsonObj.get("Title").isJsonNull()) && !jsonObj.get("Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Title").toString()));
      }
      if ((jsonObj.get("UINWithAmendmentSuffix") != null && !jsonObj.get("UINWithAmendmentSuffix").isJsonNull()) && !jsonObj.get("UINWithAmendmentSuffix").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UINWithAmendmentSuffix` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UINWithAmendmentSuffix").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PublishedEarlyDayMotionDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PublishedEarlyDayMotionDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PublishedEarlyDayMotionDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PublishedEarlyDayMotionDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<PublishedEarlyDayMotionDetails>() {
           @Override
           public void write(JsonWriter out, PublishedEarlyDayMotionDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PublishedEarlyDayMotionDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PublishedEarlyDayMotionDetails given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PublishedEarlyDayMotionDetails
   * @throws IOException if the JSON string is invalid with respect to PublishedEarlyDayMotionDetails
   */
  public static PublishedEarlyDayMotionDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PublishedEarlyDayMotionDetails.class);
  }

  /**
   * Convert an instance of PublishedEarlyDayMotionDetails to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

