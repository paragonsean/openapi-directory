/*
 * House of Commons Oral and Written Questions API
 * An API that allows querying all tabled oral and written questions, and motions for the House of Commons.
 *
 * The version of the OpenAPI document: v1
 * Contact: softwareengineering@parliament.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.MemberForDate;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PublishedEarlyDayMotionSponsor
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:25:28.456197-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PublishedEarlyDayMotionSponsor {
  public static final String SERIALIZED_NAME_CREATED_WHEN = "CreatedWhen";
  @SerializedName(SERIALIZED_NAME_CREATED_WHEN)
  private OffsetDateTime createdWhen;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IS_WITHDRAWN = "IsWithdrawn";
  @SerializedName(SERIALIZED_NAME_IS_WITHDRAWN)
  private Boolean isWithdrawn;

  public static final String SERIALIZED_NAME_MEMBER = "Member";
  @SerializedName(SERIALIZED_NAME_MEMBER)
  private MemberForDate member;

  public static final String SERIALIZED_NAME_MEMBER_ID = "MemberId";
  @SerializedName(SERIALIZED_NAME_MEMBER_ID)
  private Integer memberId;

  public static final String SERIALIZED_NAME_SPONSORING_ORDER = "SponsoringOrder";
  @SerializedName(SERIALIZED_NAME_SPONSORING_ORDER)
  private Integer sponsoringOrder;

  public static final String SERIALIZED_NAME_WITHDRAWN_DATE = "WithdrawnDate";
  @SerializedName(SERIALIZED_NAME_WITHDRAWN_DATE)
  private OffsetDateTime withdrawnDate;

  public PublishedEarlyDayMotionSponsor() {
  }

  public PublishedEarlyDayMotionSponsor createdWhen(OffsetDateTime createdWhen) {
    this.createdWhen = createdWhen;
    return this;
  }

  /**
   * Get createdWhen
   * @return createdWhen
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedWhen() {
    return createdWhen;
  }

  public void setCreatedWhen(OffsetDateTime createdWhen) {
    this.createdWhen = createdWhen;
  }


  public PublishedEarlyDayMotionSponsor id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public PublishedEarlyDayMotionSponsor isWithdrawn(Boolean isWithdrawn) {
    this.isWithdrawn = isWithdrawn;
    return this;
  }

  /**
   * Get isWithdrawn
   * @return isWithdrawn
   */
  @javax.annotation.Nullable
  public Boolean getIsWithdrawn() {
    return isWithdrawn;
  }

  public void setIsWithdrawn(Boolean isWithdrawn) {
    this.isWithdrawn = isWithdrawn;
  }


  public PublishedEarlyDayMotionSponsor member(MemberForDate member) {
    this.member = member;
    return this;
  }

  /**
   * Get member
   * @return member
   */
  @javax.annotation.Nullable
  public MemberForDate getMember() {
    return member;
  }

  public void setMember(MemberForDate member) {
    this.member = member;
  }


  public PublishedEarlyDayMotionSponsor memberId(Integer memberId) {
    this.memberId = memberId;
    return this;
  }

  /**
   * Get memberId
   * @return memberId
   */
  @javax.annotation.Nullable
  public Integer getMemberId() {
    return memberId;
  }

  public void setMemberId(Integer memberId) {
    this.memberId = memberId;
  }


  public PublishedEarlyDayMotionSponsor sponsoringOrder(Integer sponsoringOrder) {
    this.sponsoringOrder = sponsoringOrder;
    return this;
  }

  /**
   * Get sponsoringOrder
   * @return sponsoringOrder
   */
  @javax.annotation.Nullable
  public Integer getSponsoringOrder() {
    return sponsoringOrder;
  }

  public void setSponsoringOrder(Integer sponsoringOrder) {
    this.sponsoringOrder = sponsoringOrder;
  }


  public PublishedEarlyDayMotionSponsor withdrawnDate(OffsetDateTime withdrawnDate) {
    this.withdrawnDate = withdrawnDate;
    return this;
  }

  /**
   * Get withdrawnDate
   * @return withdrawnDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getWithdrawnDate() {
    return withdrawnDate;
  }

  public void setWithdrawnDate(OffsetDateTime withdrawnDate) {
    this.withdrawnDate = withdrawnDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PublishedEarlyDayMotionSponsor publishedEarlyDayMotionSponsor = (PublishedEarlyDayMotionSponsor) o;
    return Objects.equals(this.createdWhen, publishedEarlyDayMotionSponsor.createdWhen) &&
        Objects.equals(this.id, publishedEarlyDayMotionSponsor.id) &&
        Objects.equals(this.isWithdrawn, publishedEarlyDayMotionSponsor.isWithdrawn) &&
        Objects.equals(this.member, publishedEarlyDayMotionSponsor.member) &&
        Objects.equals(this.memberId, publishedEarlyDayMotionSponsor.memberId) &&
        Objects.equals(this.sponsoringOrder, publishedEarlyDayMotionSponsor.sponsoringOrder) &&
        Objects.equals(this.withdrawnDate, publishedEarlyDayMotionSponsor.withdrawnDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdWhen, id, isWithdrawn, member, memberId, sponsoringOrder, withdrawnDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PublishedEarlyDayMotionSponsor {\n");
    sb.append("    createdWhen: ").append(toIndentedString(createdWhen)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isWithdrawn: ").append(toIndentedString(isWithdrawn)).append("\n");
    sb.append("    member: ").append(toIndentedString(member)).append("\n");
    sb.append("    memberId: ").append(toIndentedString(memberId)).append("\n");
    sb.append("    sponsoringOrder: ").append(toIndentedString(sponsoringOrder)).append("\n");
    sb.append("    withdrawnDate: ").append(toIndentedString(withdrawnDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CreatedWhen");
    openapiFields.add("Id");
    openapiFields.add("IsWithdrawn");
    openapiFields.add("Member");
    openapiFields.add("MemberId");
    openapiFields.add("SponsoringOrder");
    openapiFields.add("WithdrawnDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PublishedEarlyDayMotionSponsor
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PublishedEarlyDayMotionSponsor.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PublishedEarlyDayMotionSponsor is not found in the empty JSON string", PublishedEarlyDayMotionSponsor.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PublishedEarlyDayMotionSponsor.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PublishedEarlyDayMotionSponsor` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Member`
      if (jsonObj.get("Member") != null && !jsonObj.get("Member").isJsonNull()) {
        MemberForDate.validateJsonElement(jsonObj.get("Member"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PublishedEarlyDayMotionSponsor.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PublishedEarlyDayMotionSponsor' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PublishedEarlyDayMotionSponsor> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PublishedEarlyDayMotionSponsor.class));

       return (TypeAdapter<T>) new TypeAdapter<PublishedEarlyDayMotionSponsor>() {
           @Override
           public void write(JsonWriter out, PublishedEarlyDayMotionSponsor value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PublishedEarlyDayMotionSponsor read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PublishedEarlyDayMotionSponsor given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PublishedEarlyDayMotionSponsor
   * @throws IOException if the JSON string is invalid with respect to PublishedEarlyDayMotionSponsor
   */
  public static PublishedEarlyDayMotionSponsor fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PublishedEarlyDayMotionSponsor.class);
  }

  /**
   * Convert an instance of PublishedEarlyDayMotionSponsor to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

