# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.joke import Joke
from openapi_server import util


class JokeResponseContents(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, jokes: List[Joke]=None):
        """JokeResponseContents - a model defined in OpenAPI

        :param jokes: The jokes of this JokeResponseContents.
        """
        self.openapi_types = {
            'jokes': List[Joke]
        }

        self.attribute_map = {
            'jokes': 'jokes'
        }

        self._jokes = jokes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JokeResponseContents':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JokeResponse_contents of this JokeResponseContents.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def jokes(self):
        """Gets the jokes of this JokeResponseContents.

        List of jokes

        :return: The jokes of this JokeResponseContents.
        :rtype: List[Joke]
        """
        return self._jokes

    @jokes.setter
    def jokes(self, jokes):
        """Sets the jokes of this JokeResponseContents.

        List of jokes

        :param jokes: The jokes of this JokeResponseContents.
        :type jokes: List[Joke]
        """

        self._jokes = jokes
