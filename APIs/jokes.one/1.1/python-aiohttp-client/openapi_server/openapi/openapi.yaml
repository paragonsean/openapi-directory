openapi: 3.0.1
info:
  contact:
    name: Jokes One
    url: https://jokes.one/api/joke/
  description: " Jokes One API offers a complete feature rich REST API access to its\
    \ jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).\
    \  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret'\
    \ header and add your api key as the header value. You can test and play with\
    \ the API right here on this web page. For using the private end points and subscribing\
    \ to the API please visit https://jokes.one/api/joke/."
  termsOfService: https://jokes.one/terms
  title: Jokes One API
  version: "1.1"
  x-apisguru-categories:
  - entertainment
  x-issues:
  - https://github.com/APIs-guru/openapi-directory/issues/743
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://jokes.one/branding/smile_magenta.png
  x-origin:
  - format: swagger
    url: https://api.jokes.one/yaml/jokes.one.yaml
    version: "2.0"
  x-providerName: jokes.one
  x-tags:
  - helpWanted
servers:
- url: https://api.jokes.one/
- url: http://api.jokes.one/
tags:
- description: 'Access joke of the day service. Use this to get the joke of the day
    in various categories. This is a free API that is available to public. You must
    credit Jokes One if you are using the free version. '
  externalDocs:
    description: Find out more
    url: https://jokes.one/api#joke-of-the-day
  name: jod
- description: "Access random joke service. Use this to get random jokes , jokes filtered\
    \ by authors or tags etc. You need an API key to access this service."
  name: joke
paths:
  /jod:
    get:
      description: |
        Gets `Joke of the Day`.
        Optional `category` param determines
        the category of returned joke of the day
      operationId: jod_get
      parameters:
      - description: JOD Category
        in: query
        name: category
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                  "total": 1
                    },
                    "contents": {
                  "jokes": [
                      {
                    "category": "animal",
                    "title": "Animal Joke of the day ",
                    "description": "Animal Joke of the day ",
                    "background": "",
                    "joke": {
                        "title": "Elephant with Diarrhea",
                        "length": "67",
                        "clean": "0",
                        "racial": "0",
                        "date": "2018-11-05",
                        "id": "1tO_XKcm3_qYMkk0k19HEgeF",
                        "text": "What do you give an elephant with diarrhea? \r\n\r\n\r\nLots of room.\r\n\r\n"
                    }
                      }
                  ],
                  "copyright": "2018-20 https://jokes.one"
                    }
                }
              schema:
                $ref: '#/components/schemas/JokeOfTheDayResponse'
            application/xml:
              example: |-
                <?xml version="1.0"?>
                <response>
                  <success>
                    <total>1</total>
                  </success>
                  <contents>
                    <jokes>
                      <category>animal</category>
                      <title>Animal Joke of the day </title>
                      <description>Animal Joke of the day </description>
                      <background/>
                      <joke>
                        <title>Elephant with Diarrhea</title>
                        <length>67</length>
                        <clean>0</clean>
                        <racial>0</racial>
                        <date>2018-11-05</date>
                        <id>1tO_XKcm3_qYMkk0k19HEgeF</id>
                        <text>What do you give an elephant with diarrhea? &#xD; &#xD; &#xD; Lots of room.&#xD; &#xD;</text>
                      </joke>
                    </jokes>
                    <copyright>2018-20 https://jokes.one</copyright>
                  </contents>
                </response>
          description: 200  response
      security:
      - X-JokesOne-Api-Secret: []
      tags:
      - jod
      x-openapi-router-controller: openapi_server.controllers.jod_controller
  /jod/categories:
    get:
      description: |
        Gets a list of `Joke of the Day` Categories.
      operationId: jod_categories_get
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                  "total": 3
                    },
                    "contents": {
                  "categories": {
                      "jod": {
                    "category": "jod",
                    "title": "Joke of the day ",
                    "description": "Joke of the day ",
                    "background": ""
                      },
                      "animal": {
                    "category": "animal",
                    "title": "Animal Joke of the day ",
                    "description": "Animal Joke of the day ",
                    "background": ""
                      },
                      "blonde": {
                    "category": "blonde",
                    "title": "Blonde joke of the day!",
                    "description": "Blonde joke of the day!",
                    "background": ""
                      }
                  },
                  "copyright": "2018-20 https://jokes.one"
                    }
                }
          description: 200  response
      security:
      - X-JokesOne-Api-Secret: []
      tags:
      - jod
      x-openapi-router-controller: openapi_server.controllers.jod_controller
  /joke:
    delete:
      description: |
        Delete a joke. The user needs to be the owner of the joke to be able to delete it.
      operationId: joke_delete
      parameters:
      - description: Joke ID
        in: query
        name: id
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/xml:
              example: "{}"
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
        "404":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 404,\n        \"message\"\
                : \"Not Found: Joke not found\"\n    }\n}                      "
          description: 404  response
      security:
      - X-JokesOne-Api-Secret: []
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
    get:
      description: Gets a `Joke` with a given `id`.
      operationId: joke_get
      parameters:
      - description: Joke ID
        in: query
        name: id
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "jokes": [
                            {
                                "title": "Anti aircraft weapon",
                                "length": "212",
                                "clean": null,
                                "racial": null,
                                "id": "pZdOqARLsLVZ84EkBcWptAeF",
                                "text": "\nThe USA blamed the Russian companies that they were supplying Bagdad with the elastic band for pants. Iraq engineers made the catapults of them and now Iraq soldiers are striking a blow to American air forces.\n\n"
                            }
                        ],
                        "copyright": "2018-20 https://jokes.one"
                    }
                }
              schema:
                $ref: '#/components/schemas/JokeResponse'
            application/xml:
              example: |-
                <?xml version="1.0"?>
                <response>
                  <success>
                    <total>1</total>
                  </success>
                  <contents>
                    <jokes>
                      <title>Anti aircraft weapon</title>
                      <length>212</length>
                      <clean/>
                      <racial/>
                      <id>pZdOqARLsLVZ84EkBcWptAeF</id>
                      <text>
                The USA blamed the Russian companies that they were supplying Bagdad with the elastic band for pants. Iraq engineers made the catapults of them and now Iraq soldiers are striking a blow to American air forces.

                </text>
                    </jokes>
                    <copyright>2018-20 https://jokes.one</copyright>
                  </contents>
                </response>
              schema:
                $ref: '#/components/schemas/JokeResponse'
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-JokesOne-Api-Secret: []
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
    patch:
      description: Update a joke
      operationId: joke_patch
      parameters:
      - description: Joke ID
        in: query
        name: id
        required: true
        schema:
          format: string
          type: string
      - description: title
        in: query
        name: title
        schema:
          format: string
          type: string
      - description: text
        in: query
        name: text
        schema:
          format: string
          type: string
      - description: Joke Author
        in: query
        name: author
        schema:
          format: string
          type: string
      - description: Comma Separated tags
        in: query
        name: tags
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "content": {
                    "joke": {
                      "id": "0tztT1wYHRzdTf7jIccAzweF"
                    }
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}              "
          description: 401  response
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
    put:
      description: Add a new joke to your private collection.
      operationId: joke_put
      parameters:
      - description: Joke Title
        in: query
        name: title
        required: true
        schema:
          format: string
          type: string
      - description: Joke Text
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      - description: Joke Author
        in: query
        name: author
        schema:
          format: string
          type: string
      - description: Comma Separated tags
        in: query
        name: tags
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "content": {
                    "joke": {
                      "id": "0tztT1wYHRzdTf7jIccAzweF"
                    }
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}              "
          description: 401  response
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
  /joke/categories/search:
    get:
      description: |
        Gets a list of `Joke` Categories, based on a query term.
      operationId: joke_categories_search_get
      parameters:
      - description: Search Query
        in: query
        name: query
        required: true
        schema:
          format: string
          type: string
      - description: Response is paged. This parameter controls where response starts
          the listing at
        in: query
        name: start
        schema:
          default: 0
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: "{\n    \"success\": {\n        \"total\": 8\n    },\n    \"\
                contents\": {\n        \"categories\": {\n            \"jod\": \"\
                Joke of the day\",\n            \"work\": \"Work Related Joke of the\
                \ day\",\n            \"kids\": \"Joke of the day for kids\"\n   \
                \     },\n        \"copyright\": \"2018-20 https://jokes.one\"\n \
                \   }\n}    "
          description: 200  response
      security:
      - X-JokesOne-Api-Secret: []
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
  /joke/list:
    get:
      description: Get the list of jokes in your private collection.
      operationId: joke_list_get
      parameters:
      - description: Response is paged. This parameter controls where response starts
          the listing at
        in: query
        name: start
        schema:
          default: 0
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": "263",
                        "range": {
                            "start": 0,
                            "end": 5
                        }
                    },
                    "contents": {
                        "jokes": [
                            {
                                "joke": "I think you should defend to the death their right to march, and then go down and meet them with baseball bats.",
                                "length": "111",
                                "author": "Woody Allen",
                                "tags": [],
                                "id": "GkeLUydBfiAH0Tcs2w_gwAeF"
                            },
                            {
                                "joke": "We have come to dedicate a portion of that field, as a final resting place for those who here gave their lives that that nation might live. It is altogether fitting and proper that we should do this. ... The world will little note nor long remember what we say here, but it can never forget what they did here.",
                                "length": "310",
                                "author": "Abraham Lincoln",
                                "tags": [],
                                "id": "u6fD9eRFA2NFMHuEoeujaAeF"
                            },
                            {
                                "joke": "Eighty percent of success is showing up.",
                                "length": "40",
                                "author": "Woody Allen",
                                "tags": [
                                    "success",
                                    "tso-top-100"
                                ],
                                "id": "nLvp0vLfofW06PILxmERHgeF"
                            },
                            {
                                "joke": "Great ambition is the passion of a great character.  Those endowed with it may perform very good or very bad acts.  All depends on the principals which direct them.",
                                "length": "164",
                                "author": "Napoleon Bonaparte",
                                "tags": [
                                    "ambition",
                                    "inspire",
                                    "passion"
                                ],
                                "id": "X8juAoTtvxSEdgA0sGbYeQeF"
                            },
                            {
                                "joke": "I have had dreams, and I have had nightmares. I overcame the nightmares because of my dreams.",
                                "length": "93",
                                "author": "Dr. Jonas Salk",
                                "tags": [
                                    "dream",
                                    "nightmare"
                                ],
                                "id": "m_6Fj8QcXlVsQiiW7SAMLAeF"
                            }
                        ]
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
  /joke/random:
    get:
      description: Gets a `Random Joke`. When you are in a hurry this is what you
        call to get a random famous joke.
      operationId: joke_random_get
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "jokes": [
                            {
                                "title": "Blonde tap dancer",
                                "length": "86",
                                "clean": "0",
                                "racial": "0",
                                "id": "SVEPCMsk3SbyeWZbERGzKQeF",
                                "text": "What happened to the blonde tap dancer? \r\nShe slipped off and fell down the drain.\r\n\r\n"
                            }
                        ],
                        "copyright": "2018-20 https://jokes.one"
                    }
                }
              schema:
                $ref: '#/components/schemas/JokeResponse'
            application/xml:
              example: |-
                <?xml version="1.0"?>
                <response>
                  <success>
                    <total>1</total>
                  </success>
                  <contents>
                    <jokes>
                      <title>Blonde tap dancer</title>
                      <length>86</length>
                      <clean>0</clean>
                      <racial>0</racial>
                      <id>SVEPCMsk3SbyeWZbERGzKQeF</id>
                      <text>What happened to the blonde tap dancer? &#xD;
                She slipped off and fell down the drain.&#xD;
                &#xD;
                </text>
                    </jokes>
                    <copyright>2018-20 https://jokes.one</copyright>
                  </contents>
                </response>
              schema:
                $ref: '#/components/schemas/JokeResponse'
            application/js:
              schema:
                $ref: '#/components/schemas/JokeResponse'
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
  /joke/search:
    get:
      description: "Search for a `Joke` in Jokes One platform. Optional `category`\
        \ , `author`, `minlength`, `maxlength` params determines the filters applied\
        \ while searching for the joke. "
      operationId: joke_search_get
      parameters:
      - description: Joke Category
        in: query
        name: category
        schema:
          format: string
          type: string
      - description: keyword to search for in the joke
        in: query
        name: query
        schema:
          format: string
          type: string
      - description: Joke minimum Length
        in: query
        name: minlength
        schema:
          default: 100
          format: int32
          type: integer
      - description: Joke maximum Length
        in: query
        name: maxlength
        schema:
          default: 300
          format: int32
          type: integer
      - description: Joke Author
        in: query
        name: author
        schema:
          format: string
          type: string
      - description: Should search private collection? Default searches public collection.
        in: query
        name: private
        schema:
          default: false
          format: boolean
          type: boolean
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "jokes": [
                            {
                                "title": "Blonde tap dancer",
                                "length": "86",
                                "clean": "0",
                                "racial": "0",
                                "id": "SVEPCMsk3SbyeWZbERGzKQeF",
                                "text": "What happened to the blonde tap dancer? \r\nShe slipped off and fell down the drain.\r\n\r\n"
                            }
                        ],
                        "copyright": "2018-20 https://jokes.one"
                    }
                }
              schema:
                $ref: '#/components/schemas/JokeResponse'
            application/xml:
              example: "<?xml version=\"1.0\"?>\n<response>\n  <success>\n    <total>1</total>\n\
                \  </success>\n  <contents>\n    <jokes>\n      <title>Blonde tap\
                \ dancer</title>\n      <length>86</length>\n      <clean>0</clean>\n\
                \      <racial>0</racial>\n      <id>SVEPCMsk3SbyeWZbERGzKQeF</id>\n\
                \      <text>What happened to the blonde tap dancer? &#xD;\nShe slipped\
                \ off and fell down the drain.&#xD;\n&#xD;\n</text>\n    </jokes>\n\
                \    <copyright>2018-20 https://jokes.one</copyright>\n  </contents>\n\
                </response>        "
              schema:
                $ref: '#/components/schemas/JokeResponse'
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-JokesOne-Api-Secret: []
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
  /joke/tags/add:
    post:
      description: Add a tag to a given Joke.
      operationId: joke_tags_add_post
      parameters:
      - description: Joke ID
        in: query
        name: id
        required: true
        schema:
          format: string
          type: string
      - description: Comma Separated tags
        in: query
        name: tags
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
        "404":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 404,\n        \"message\"\
                : \"Not Found: Joke not found\"\n    }\n}                      "
          description: 404  response
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
  /joke/tags/remove:
    post:
      description: Remove a tag from a given joke.
      operationId: joke_tags_remove_post
      parameters:
      - description: Joke ID
        in: query
        name: id
        required: true
        schema:
          format: string
          type: string
      - description: Comma Separated tags
        in: query
        name: tags
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
        "404":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 404,\n        \"message\"\
                : \"Not Found: Joke not found\"\n    }\n}                      "
          description: 404  response
      tags:
      - joke
      x-openapi-router-controller: openapi_server.controllers.joke_controller
components:
  schemas:
    Joke:
      allOf:
      - $ref: '#/components/schemas/NewJoke'
      - properties:
          id:
            description: Unique identifier representing a specific joke in jokes.one.
            type: string
          image:
            description: Image URL that can be used for background to display this
              joke.
            type: string
          length:
            description: Length of the joke string.
            format: int32
            type: integer
        type: object
      example:
        image: image
        author: author
        length: 0
        id: id
        title: title
        joke: joke
        tags:
        - tags
        - tags
      title: Joke
    JokeOfTheDay:
      allOf:
      - $ref: '#/components/schemas/Joke'
      - properties:
          date:
            description: Date this joke of the day belongs to
            type: string
        required:
        - date
        type: object
      example:
        date: date
        image: image
        author: author
        length: 0
        id: id
        title: title
        joke: joke
        tags:
        - tags
        - tags
      title: JokeOfTheDay
    JokeOfTheDayResponse:
      example:
        contents:
          jokes:
          - date: date
            image: image
            author: author
            length: 0
            id: id
            title: title
            joke: joke
            tags:
            - tags
            - tags
          - date: date
            image: image
            author: author
            length: 0
            id: id
            title: title
            joke: joke
            tags:
            - tags
            - tags
        success: success
      properties:
        contents:
          $ref: '#/components/schemas/JokeOfTheDayResponse_contents'
        success:
          description: Metadata about this successful call
          title: success
          type: string
      title: JokeOfTheDayResponse
      type: object
    JokeResponse:
      example:
        contents:
          jokes:
          - image: image
            author: author
            length: 0
            id: id
            title: title
            joke: joke
            tags:
            - tags
            - tags
          - image: image
            author: author
            length: 0
            id: id
            title: title
            joke: joke
            tags:
            - tags
            - tags
        success: success
      properties:
        contents:
          $ref: '#/components/schemas/JokeResponse_contents'
        success:
          description: Metadata about this successful call
          title: success
          type: string
      title: JokeResponse
      type: object
    NewJoke:
      properties:
        author:
          description: Author name of joke.
          title: author
          type: string
        joke:
          description: The Joke.
          title: joke
          type: string
        tags:
          description: Array of tags/categories.
          items:
            type: string
          title: tags
          type: array
        title:
          description: Title of the Joke.
          title: title
          type: string
      required:
      - joke
      - title
      title: NewJoke
      type: object
    JokeOfTheDayResponse_contents:
      example:
        jokes:
        - date: date
          image: image
          author: author
          length: 0
          id: id
          title: title
          joke: joke
          tags:
          - tags
          - tags
        - date: date
          image: image
          author: author
          length: 0
          id: id
          title: title
          joke: joke
          tags:
          - tags
          - tags
      properties:
        jokes:
          description: List of jokes
          items:
            $ref: '#/components/schemas/JokeOfTheDay'
          title: jokes
          type: array
      title: JokeOfTheDayResponse_contents
      type: object
    JokeResponse_contents:
      example:
        jokes:
        - image: image
          author: author
          length: 0
          id: id
          title: title
          joke: joke
          tags:
          - tags
          - tags
        - image: image
          author: author
          length: 0
          id: id
          title: title
          joke: joke
          tags:
          - tags
          - tags
      properties:
        jokes:
          description: List of jokes
          items:
            $ref: '#/components/schemas/Joke'
          title: jokes
          type: array
      title: JokeResponse_contents
      type: object
  securitySchemes:
    X-JokesOne-Api-Secret:
      in: header
      name: X-JokesOne-Api-Secret
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_X-JokesOne-Api-Secret
x-original-swagger-version: "2.0"
