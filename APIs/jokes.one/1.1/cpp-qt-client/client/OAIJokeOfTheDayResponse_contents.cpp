/**
 * Jokes One API
 *  Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://jokes.one/api/joke/.
 *
 * The version of the OpenAPI document: 1.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJokeOfTheDayResponse_contents.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJokeOfTheDayResponse_contents::OAIJokeOfTheDayResponse_contents(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJokeOfTheDayResponse_contents::OAIJokeOfTheDayResponse_contents() {
    this->initializeModel();
}

OAIJokeOfTheDayResponse_contents::~OAIJokeOfTheDayResponse_contents() {}

void OAIJokeOfTheDayResponse_contents::initializeModel() {

    m_jokes_isSet = false;
    m_jokes_isValid = false;
}

void OAIJokeOfTheDayResponse_contents::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJokeOfTheDayResponse_contents::fromJsonObject(QJsonObject json) {

    m_jokes_isValid = ::OpenAPI::fromJsonValue(m_jokes, json[QString("jokes")]);
    m_jokes_isSet = !json[QString("jokes")].isNull() && m_jokes_isValid;
}

QString OAIJokeOfTheDayResponse_contents::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJokeOfTheDayResponse_contents::asJsonObject() const {
    QJsonObject obj;
    if (m_jokes.size() > 0) {
        obj.insert(QString("jokes"), ::OpenAPI::toJsonValue(m_jokes));
    }
    return obj;
}

QList<OAIJokeOfTheDay> OAIJokeOfTheDayResponse_contents::getJokes() const {
    return m_jokes;
}
void OAIJokeOfTheDayResponse_contents::setJokes(const QList<OAIJokeOfTheDay> &jokes) {
    m_jokes = jokes;
    m_jokes_isSet = true;
}

bool OAIJokeOfTheDayResponse_contents::is_jokes_Set() const{
    return m_jokes_isSet;
}

bool OAIJokeOfTheDayResponse_contents::is_jokes_Valid() const{
    return m_jokes_isValid;
}

bool OAIJokeOfTheDayResponse_contents::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_jokes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJokeOfTheDayResponse_contents::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
