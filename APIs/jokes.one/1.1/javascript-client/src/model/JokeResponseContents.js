/**
 * Jokes One API
 *  Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://jokes.one/api/joke/.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Joke from './Joke';

/**
 * The JokeResponseContents model module.
 * @module model/JokeResponseContents
 * @version 1.1
 */
class JokeResponseContents {
    /**
     * Constructs a new <code>JokeResponseContents</code>.
     * @alias module:model/JokeResponseContents
     */
    constructor() { 
        
        JokeResponseContents.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JokeResponseContents</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JokeResponseContents} obj Optional instance to populate.
     * @return {module:model/JokeResponseContents} The populated <code>JokeResponseContents</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JokeResponseContents();

            if (data.hasOwnProperty('jokes')) {
                obj['jokes'] = ApiClient.convertToType(data['jokes'], [Joke]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JokeResponseContents</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JokeResponseContents</code>.
     */
    static validateJSON(data) {
        if (data['jokes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['jokes'])) {
                throw new Error("Expected the field `jokes` to be an array in the JSON data but got " + data['jokes']);
            }
            // validate the optional field `jokes` (array)
            for (const item of data['jokes']) {
                Joke.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * List of jokes
 * @member {Array.<module:model/Joke>} jokes
 */
JokeResponseContents.prototype['jokes'] = undefined;






export default JokeResponseContents;

