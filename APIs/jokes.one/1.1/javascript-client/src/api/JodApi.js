/**
 * Jokes One API
 *  Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://jokes.one/api/joke/.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import JokeOfTheDayResponse from '../model/JokeOfTheDayResponse';

/**
* Jod service.
* @module api/JodApi
* @version 1.1
*/
export default class JodApi {

    /**
    * Constructs a new JodApi. 
    * @alias module:api/JodApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the jodCategoriesGet operation.
     * @callback module:api/JodApi~jodCategoriesGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of `Joke of the Day` Categories. 
     * @param {module:api/JodApi~jodCategoriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jodCategoriesGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-JokesOne-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jod/categories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jodGet operation.
     * @callback module:api/JodApi~jodGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JokeOfTheDayResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets `Joke of the Day`. Optional `category` param determines the category of returned joke of the day 
     * @param {Object} opts Optional parameters
     * @param {String} [category] JOD Category
     * @param {module:api/JodApi~jodGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JokeOfTheDayResponse}
     */
    jodGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'category': opts['category']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-JokesOne-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml'];
      let returnType = JokeOfTheDayResponse;
      return this.apiClient.callApi(
        '/jod', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
