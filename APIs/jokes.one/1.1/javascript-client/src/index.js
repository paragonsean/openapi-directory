/**
 * Jokes One API
 *  Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add 'X-JokesOne-Api-Secret' header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://jokes.one/api/joke/.
 *
 * The version of the OpenAPI document: 1.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Joke from './model/Joke';
import JokeOfTheDay from './model/JokeOfTheDay';
import JokeOfTheDayResponse from './model/JokeOfTheDayResponse';
import JokeOfTheDayResponseContents from './model/JokeOfTheDayResponseContents';
import JokeResponse from './model/JokeResponse';
import JokeResponseContents from './model/JokeResponseContents';
import NewJoke from './model/NewJoke';
import JodApi from './api/JodApi';
import JokeApi from './api/JokeApi';


/**
*  Jokes One API offers a complete feature rich REST API access to its jokes platform.  This is the documentation for the world famous [jokes API](https://jokes.one/api/joke/).  If you are a subscriber and you are trying this from a console add &#39;X-JokesOne-Api-Secret&#39; header and add your api key as the header value. You can test and play with the API right here on this web page. For using the private end points and subscribing to the API please visit https://jokes.one/api/joke/..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var JokesOneApi = require('index'); // See note below*.
* var xxxSvc = new JokesOneApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new JokesOneApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new JokesOneApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new JokesOneApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Joke model constructor.
     * @property {module:model/Joke}
     */
    Joke,

    /**
     * The JokeOfTheDay model constructor.
     * @property {module:model/JokeOfTheDay}
     */
    JokeOfTheDay,

    /**
     * The JokeOfTheDayResponse model constructor.
     * @property {module:model/JokeOfTheDayResponse}
     */
    JokeOfTheDayResponse,

    /**
     * The JokeOfTheDayResponseContents model constructor.
     * @property {module:model/JokeOfTheDayResponseContents}
     */
    JokeOfTheDayResponseContents,

    /**
     * The JokeResponse model constructor.
     * @property {module:model/JokeResponse}
     */
    JokeResponse,

    /**
     * The JokeResponseContents model constructor.
     * @property {module:model/JokeResponseContents}
     */
    JokeResponseContents,

    /**
     * The NewJoke model constructor.
     * @property {module:model/NewJoke}
     */
    NewJoke,

    /**
    * The JodApi service constructor.
    * @property {module:api/JodApi}
    */
    JodApi,

    /**
    * The JokeApi service constructor.
    * @property {module:api/JokeApi}
    */
    JokeApi
};
