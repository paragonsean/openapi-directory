/*
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ContentLanguageSelection;
import org.openapitools.client.model.EnglishTranslatedStringContract;
import org.openapitools.client.model.EntryStatus;
import org.openapitools.client.model.EntryThumbForApiContract;
import org.openapitools.client.model.LocalizedStringWithIdContract;
import org.openapitools.client.model.TagBaseContract;
import org.openapitools.client.model.WebLinkForApiContract;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TagForApiContract
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:00:40.974326-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TagForApiContract {
  public static final String SERIALIZED_NAME_ADDITIONAL_NAMES = "additionalNames";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_NAMES)
  private String additionalNames;

  public static final String SERIALIZED_NAME_ALIASED_TO = "aliasedTo";
  @SerializedName(SERIALIZED_NAME_ALIASED_TO)
  private TagBaseContract aliasedTo;

  public static final String SERIALIZED_NAME_CATEGORY_NAME = "categoryName";
  @SerializedName(SERIALIZED_NAME_CATEGORY_NAME)
  private String categoryName;

  public static final String SERIALIZED_NAME_CREATE_DATE = "createDate";
  @SerializedName(SERIALIZED_NAME_CREATE_DATE)
  private OffsetDateTime createDate;

  public static final String SERIALIZED_NAME_DEFAULT_NAME_LANGUAGE = "defaultNameLanguage";
  @SerializedName(SERIALIZED_NAME_DEFAULT_NAME_LANGUAGE)
  private ContentLanguageSelection defaultNameLanguage;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_MAIN_PICTURE = "mainPicture";
  @SerializedName(SERIALIZED_NAME_MAIN_PICTURE)
  private EntryThumbForApiContract mainPicture;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NAMES = "names";
  @SerializedName(SERIALIZED_NAME_NAMES)
  private List<LocalizedStringWithIdContract> names;

  public static final String SERIALIZED_NAME_PARENT = "parent";
  @SerializedName(SERIALIZED_NAME_PARENT)
  private TagBaseContract parent;

  public static final String SERIALIZED_NAME_RELATED_TAGS = "relatedTags";
  @SerializedName(SERIALIZED_NAME_RELATED_TAGS)
  private List<TagBaseContract> relatedTags;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private EntryStatus status;

  public static final String SERIALIZED_NAME_TARGETS = "targets";
  @SerializedName(SERIALIZED_NAME_TARGETS)
  private Integer targets;

  public static final String SERIALIZED_NAME_TRANSLATED_DESCRIPTION = "translatedDescription";
  @SerializedName(SERIALIZED_NAME_TRANSLATED_DESCRIPTION)
  private EnglishTranslatedStringContract translatedDescription;

  public static final String SERIALIZED_NAME_URL_SLUG = "urlSlug";
  @SerializedName(SERIALIZED_NAME_URL_SLUG)
  private String urlSlug;

  public static final String SERIALIZED_NAME_USAGE_COUNT = "usageCount";
  @SerializedName(SERIALIZED_NAME_USAGE_COUNT)
  private Integer usageCount;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public static final String SERIALIZED_NAME_WEB_LINKS = "webLinks";
  @SerializedName(SERIALIZED_NAME_WEB_LINKS)
  private List<WebLinkForApiContract> webLinks;

  public TagForApiContract() {
  }

  public TagForApiContract additionalNames(String additionalNames) {
    this.additionalNames = additionalNames;
    return this;
  }

  /**
   * Get additionalNames
   * @return additionalNames
   */
  @javax.annotation.Nullable
  public String getAdditionalNames() {
    return additionalNames;
  }

  public void setAdditionalNames(String additionalNames) {
    this.additionalNames = additionalNames;
  }


  public TagForApiContract aliasedTo(TagBaseContract aliasedTo) {
    this.aliasedTo = aliasedTo;
    return this;
  }

  /**
   * Get aliasedTo
   * @return aliasedTo
   */
  @javax.annotation.Nullable
  public TagBaseContract getAliasedTo() {
    return aliasedTo;
  }

  public void setAliasedTo(TagBaseContract aliasedTo) {
    this.aliasedTo = aliasedTo;
  }


  public TagForApiContract categoryName(String categoryName) {
    this.categoryName = categoryName;
    return this;
  }

  /**
   * Get categoryName
   * @return categoryName
   */
  @javax.annotation.Nullable
  public String getCategoryName() {
    return categoryName;
  }

  public void setCategoryName(String categoryName) {
    this.categoryName = categoryName;
  }


  public TagForApiContract createDate(OffsetDateTime createDate) {
    this.createDate = createDate;
    return this;
  }

  /**
   * Get createDate
   * @return createDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreateDate() {
    return createDate;
  }

  public void setCreateDate(OffsetDateTime createDate) {
    this.createDate = createDate;
  }


  public TagForApiContract defaultNameLanguage(ContentLanguageSelection defaultNameLanguage) {
    this.defaultNameLanguage = defaultNameLanguage;
    return this;
  }

  /**
   * Get defaultNameLanguage
   * @return defaultNameLanguage
   */
  @javax.annotation.Nullable
  public ContentLanguageSelection getDefaultNameLanguage() {
    return defaultNameLanguage;
  }

  public void setDefaultNameLanguage(ContentLanguageSelection defaultNameLanguage) {
    this.defaultNameLanguage = defaultNameLanguage;
  }


  public TagForApiContract description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public TagForApiContract id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public TagForApiContract mainPicture(EntryThumbForApiContract mainPicture) {
    this.mainPicture = mainPicture;
    return this;
  }

  /**
   * Get mainPicture
   * @return mainPicture
   */
  @javax.annotation.Nullable
  public EntryThumbForApiContract getMainPicture() {
    return mainPicture;
  }

  public void setMainPicture(EntryThumbForApiContract mainPicture) {
    this.mainPicture = mainPicture;
  }


  public TagForApiContract name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public TagForApiContract names(List<LocalizedStringWithIdContract> names) {
    this.names = names;
    return this;
  }

  public TagForApiContract addNamesItem(LocalizedStringWithIdContract namesItem) {
    if (this.names == null) {
      this.names = new ArrayList<>();
    }
    this.names.add(namesItem);
    return this;
  }

  /**
   * Get names
   * @return names
   */
  @javax.annotation.Nullable
  public List<LocalizedStringWithIdContract> getNames() {
    return names;
  }

  public void setNames(List<LocalizedStringWithIdContract> names) {
    this.names = names;
  }


  public TagForApiContract parent(TagBaseContract parent) {
    this.parent = parent;
    return this;
  }

  /**
   * Get parent
   * @return parent
   */
  @javax.annotation.Nullable
  public TagBaseContract getParent() {
    return parent;
  }

  public void setParent(TagBaseContract parent) {
    this.parent = parent;
  }


  public TagForApiContract relatedTags(List<TagBaseContract> relatedTags) {
    this.relatedTags = relatedTags;
    return this;
  }

  public TagForApiContract addRelatedTagsItem(TagBaseContract relatedTagsItem) {
    if (this.relatedTags == null) {
      this.relatedTags = new ArrayList<>();
    }
    this.relatedTags.add(relatedTagsItem);
    return this;
  }

  /**
   * Get relatedTags
   * @return relatedTags
   */
  @javax.annotation.Nullable
  public List<TagBaseContract> getRelatedTags() {
    return relatedTags;
  }

  public void setRelatedTags(List<TagBaseContract> relatedTags) {
    this.relatedTags = relatedTags;
  }


  public TagForApiContract status(EntryStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public EntryStatus getStatus() {
    return status;
  }

  public void setStatus(EntryStatus status) {
    this.status = status;
  }


  public TagForApiContract targets(Integer targets) {
    this.targets = targets;
    return this;
  }

  /**
   * Get targets
   * @return targets
   */
  @javax.annotation.Nullable
  public Integer getTargets() {
    return targets;
  }

  public void setTargets(Integer targets) {
    this.targets = targets;
  }


  public TagForApiContract translatedDescription(EnglishTranslatedStringContract translatedDescription) {
    this.translatedDescription = translatedDescription;
    return this;
  }

  /**
   * Get translatedDescription
   * @return translatedDescription
   */
  @javax.annotation.Nullable
  public EnglishTranslatedStringContract getTranslatedDescription() {
    return translatedDescription;
  }

  public void setTranslatedDescription(EnglishTranslatedStringContract translatedDescription) {
    this.translatedDescription = translatedDescription;
  }


  public TagForApiContract urlSlug(String urlSlug) {
    this.urlSlug = urlSlug;
    return this;
  }

  /**
   * Get urlSlug
   * @return urlSlug
   */
  @javax.annotation.Nullable
  public String getUrlSlug() {
    return urlSlug;
  }

  public void setUrlSlug(String urlSlug) {
    this.urlSlug = urlSlug;
  }


  public TagForApiContract usageCount(Integer usageCount) {
    this.usageCount = usageCount;
    return this;
  }

  /**
   * Get usageCount
   * @return usageCount
   */
  @javax.annotation.Nullable
  public Integer getUsageCount() {
    return usageCount;
  }

  public void setUsageCount(Integer usageCount) {
    this.usageCount = usageCount;
  }


  public TagForApiContract version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }


  public TagForApiContract webLinks(List<WebLinkForApiContract> webLinks) {
    this.webLinks = webLinks;
    return this;
  }

  public TagForApiContract addWebLinksItem(WebLinkForApiContract webLinksItem) {
    if (this.webLinks == null) {
      this.webLinks = new ArrayList<>();
    }
    this.webLinks.add(webLinksItem);
    return this;
  }

  /**
   * Get webLinks
   * @return webLinks
   */
  @javax.annotation.Nullable
  public List<WebLinkForApiContract> getWebLinks() {
    return webLinks;
  }

  public void setWebLinks(List<WebLinkForApiContract> webLinks) {
    this.webLinks = webLinks;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TagForApiContract tagForApiContract = (TagForApiContract) o;
    return Objects.equals(this.additionalNames, tagForApiContract.additionalNames) &&
        Objects.equals(this.aliasedTo, tagForApiContract.aliasedTo) &&
        Objects.equals(this.categoryName, tagForApiContract.categoryName) &&
        Objects.equals(this.createDate, tagForApiContract.createDate) &&
        Objects.equals(this.defaultNameLanguage, tagForApiContract.defaultNameLanguage) &&
        Objects.equals(this.description, tagForApiContract.description) &&
        Objects.equals(this.id, tagForApiContract.id) &&
        Objects.equals(this.mainPicture, tagForApiContract.mainPicture) &&
        Objects.equals(this.name, tagForApiContract.name) &&
        Objects.equals(this.names, tagForApiContract.names) &&
        Objects.equals(this.parent, tagForApiContract.parent) &&
        Objects.equals(this.relatedTags, tagForApiContract.relatedTags) &&
        Objects.equals(this.status, tagForApiContract.status) &&
        Objects.equals(this.targets, tagForApiContract.targets) &&
        Objects.equals(this.translatedDescription, tagForApiContract.translatedDescription) &&
        Objects.equals(this.urlSlug, tagForApiContract.urlSlug) &&
        Objects.equals(this.usageCount, tagForApiContract.usageCount) &&
        Objects.equals(this.version, tagForApiContract.version) &&
        Objects.equals(this.webLinks, tagForApiContract.webLinks);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalNames, aliasedTo, categoryName, createDate, defaultNameLanguage, description, id, mainPicture, name, names, parent, relatedTags, status, targets, translatedDescription, urlSlug, usageCount, version, webLinks);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TagForApiContract {\n");
    sb.append("    additionalNames: ").append(toIndentedString(additionalNames)).append("\n");
    sb.append("    aliasedTo: ").append(toIndentedString(aliasedTo)).append("\n");
    sb.append("    categoryName: ").append(toIndentedString(categoryName)).append("\n");
    sb.append("    createDate: ").append(toIndentedString(createDate)).append("\n");
    sb.append("    defaultNameLanguage: ").append(toIndentedString(defaultNameLanguage)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    mainPicture: ").append(toIndentedString(mainPicture)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    names: ").append(toIndentedString(names)).append("\n");
    sb.append("    parent: ").append(toIndentedString(parent)).append("\n");
    sb.append("    relatedTags: ").append(toIndentedString(relatedTags)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    targets: ").append(toIndentedString(targets)).append("\n");
    sb.append("    translatedDescription: ").append(toIndentedString(translatedDescription)).append("\n");
    sb.append("    urlSlug: ").append(toIndentedString(urlSlug)).append("\n");
    sb.append("    usageCount: ").append(toIndentedString(usageCount)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    webLinks: ").append(toIndentedString(webLinks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalNames");
    openapiFields.add("aliasedTo");
    openapiFields.add("categoryName");
    openapiFields.add("createDate");
    openapiFields.add("defaultNameLanguage");
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("mainPicture");
    openapiFields.add("name");
    openapiFields.add("names");
    openapiFields.add("parent");
    openapiFields.add("relatedTags");
    openapiFields.add("status");
    openapiFields.add("targets");
    openapiFields.add("translatedDescription");
    openapiFields.add("urlSlug");
    openapiFields.add("usageCount");
    openapiFields.add("version");
    openapiFields.add("webLinks");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TagForApiContract
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TagForApiContract.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TagForApiContract is not found in the empty JSON string", TagForApiContract.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TagForApiContract.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TagForApiContract` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("additionalNames") != null && !jsonObj.get("additionalNames").isJsonNull()) && !jsonObj.get("additionalNames").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalNames` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalNames").toString()));
      }
      // validate the optional field `aliasedTo`
      if (jsonObj.get("aliasedTo") != null && !jsonObj.get("aliasedTo").isJsonNull()) {
        TagBaseContract.validateJsonElement(jsonObj.get("aliasedTo"));
      }
      if ((jsonObj.get("categoryName") != null && !jsonObj.get("categoryName").isJsonNull()) && !jsonObj.get("categoryName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("categoryName").toString()));
      }
      // validate the optional field `defaultNameLanguage`
      if (jsonObj.get("defaultNameLanguage") != null && !jsonObj.get("defaultNameLanguage").isJsonNull()) {
        ContentLanguageSelection.validateJsonElement(jsonObj.get("defaultNameLanguage"));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `mainPicture`
      if (jsonObj.get("mainPicture") != null && !jsonObj.get("mainPicture").isJsonNull()) {
        EntryThumbForApiContract.validateJsonElement(jsonObj.get("mainPicture"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("names") != null && !jsonObj.get("names").isJsonNull()) {
        JsonArray jsonArraynames = jsonObj.getAsJsonArray("names");
        if (jsonArraynames != null) {
          // ensure the json data is an array
          if (!jsonObj.get("names").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `names` to be an array in the JSON string but got `%s`", jsonObj.get("names").toString()));
          }

          // validate the optional field `names` (array)
          for (int i = 0; i < jsonArraynames.size(); i++) {
            LocalizedStringWithIdContract.validateJsonElement(jsonArraynames.get(i));
          };
        }
      }
      // validate the optional field `parent`
      if (jsonObj.get("parent") != null && !jsonObj.get("parent").isJsonNull()) {
        TagBaseContract.validateJsonElement(jsonObj.get("parent"));
      }
      if (jsonObj.get("relatedTags") != null && !jsonObj.get("relatedTags").isJsonNull()) {
        JsonArray jsonArrayrelatedTags = jsonObj.getAsJsonArray("relatedTags");
        if (jsonArrayrelatedTags != null) {
          // ensure the json data is an array
          if (!jsonObj.get("relatedTags").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `relatedTags` to be an array in the JSON string but got `%s`", jsonObj.get("relatedTags").toString()));
          }

          // validate the optional field `relatedTags` (array)
          for (int i = 0; i < jsonArrayrelatedTags.size(); i++) {
            TagBaseContract.validateJsonElement(jsonArrayrelatedTags.get(i));
          };
        }
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        EntryStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `translatedDescription`
      if (jsonObj.get("translatedDescription") != null && !jsonObj.get("translatedDescription").isJsonNull()) {
        EnglishTranslatedStringContract.validateJsonElement(jsonObj.get("translatedDescription"));
      }
      if ((jsonObj.get("urlSlug") != null && !jsonObj.get("urlSlug").isJsonNull()) && !jsonObj.get("urlSlug").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `urlSlug` to be a primitive type in the JSON string but got `%s`", jsonObj.get("urlSlug").toString()));
      }
      if (jsonObj.get("webLinks") != null && !jsonObj.get("webLinks").isJsonNull()) {
        JsonArray jsonArraywebLinks = jsonObj.getAsJsonArray("webLinks");
        if (jsonArraywebLinks != null) {
          // ensure the json data is an array
          if (!jsonObj.get("webLinks").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `webLinks` to be an array in the JSON string but got `%s`", jsonObj.get("webLinks").toString()));
          }

          // validate the optional field `webLinks` (array)
          for (int i = 0; i < jsonArraywebLinks.size(); i++) {
            WebLinkForApiContract.validateJsonElement(jsonArraywebLinks.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TagForApiContract.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TagForApiContract' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TagForApiContract> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TagForApiContract.class));

       return (TypeAdapter<T>) new TypeAdapter<TagForApiContract>() {
           @Override
           public void write(JsonWriter out, TagForApiContract value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TagForApiContract read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TagForApiContract given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TagForApiContract
   * @throws IOException if the JSON string is invalid with respect to TagForApiContract
   */
  public static TagForApiContract fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TagForApiContract.class);
  }

  /**
   * Convert an instance of TagForApiContract to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

