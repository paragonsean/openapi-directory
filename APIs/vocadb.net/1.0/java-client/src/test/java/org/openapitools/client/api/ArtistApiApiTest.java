/*
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AdvancedSearchFilterParams;
import org.openapitools.client.model.ArtistForApiContract;
import org.openapitools.client.model.ArtistForApiContractPartialFindResult;
import org.openapitools.client.model.ArtistOptionalFields;
import org.openapitools.client.model.ArtistRelationsFields;
import org.openapitools.client.model.ArtistSortRule;
import org.openapitools.client.model.CommentForApiContract;
import org.openapitools.client.model.ContentLanguagePreference;
import org.openapitools.client.model.EntryStatus;
import org.openapitools.client.model.NameMatchMode;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ArtistApiApi
 */
@Disabled
public class ArtistApiApiTest {

    private final ArtistApiApi api = new ArtistApiApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsCommentsCommentIdDeleteTest() throws ApiException {
        Integer commentId = null;
        api.apiArtistsCommentsCommentIdDelete(commentId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsCommentsCommentIdPostTest() throws ApiException {
        Integer commentId = null;
        CommentForApiContract commentForApiContract = null;
        api.apiArtistsCommentsCommentIdPost(commentId, commentForApiContract);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsGetTest() throws ApiException {
        String query = null;
        String artistTypes = null;
        Boolean allowBaseVoicebanks = null;
        List<String> tagName = null;
        List<Integer> tagId = null;
        Boolean childTags = null;
        Integer followedByUserId = null;
        EntryStatus status = null;
        List<AdvancedSearchFilterParams> advancedFilters = null;
        Integer start = null;
        Integer maxResults = null;
        Boolean getTotalCount = null;
        ArtistSortRule sort = null;
        Boolean preferAccurateMatches = null;
        NameMatchMode nameMatchMode = null;
        ArtistOptionalFields fields = null;
        ContentLanguagePreference lang = null;
        ArtistForApiContractPartialFindResult response = api.apiArtistsGet(query, artistTypes, allowBaseVoicebanks, tagName, tagId, childTags, followedByUserId, status, advancedFilters, start, maxResults, getTotalCount, sort, preferAccurateMatches, nameMatchMode, fields, lang);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsIdCommentsGetTest() throws ApiException {
        Integer id = null;
        List<CommentForApiContract> response = api.apiArtistsIdCommentsGet(id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsIdCommentsPostTest() throws ApiException {
        Integer id = null;
        CommentForApiContract commentForApiContract = null;
        CommentForApiContract response = api.apiArtistsIdCommentsPost(id, commentForApiContract);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsIdDeleteTest() throws ApiException {
        Integer id = null;
        String notes = null;
        api.apiArtistsIdDelete(id, notes);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsIdGetTest() throws ApiException {
        Integer id = null;
        ArtistOptionalFields fields = null;
        ArtistRelationsFields relations = null;
        ContentLanguagePreference lang = null;
        ArtistForApiContract response = api.apiArtistsIdGet(id, fields, relations, lang);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiArtistsNamesGetTest() throws ApiException {
        String query = null;
        NameMatchMode nameMatchMode = null;
        Integer maxResults = null;
        List<String> response = api.apiArtistsNamesGet(query, nameMatchMode, maxResults);
        // TODO: test validations
    }

}
