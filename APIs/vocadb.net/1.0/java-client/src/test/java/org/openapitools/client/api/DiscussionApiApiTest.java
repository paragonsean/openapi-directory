/*
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CommentForApiContract;
import org.openapitools.client.model.DiscussionFolderContract;
import org.openapitools.client.model.DiscussionFolderOptionalFields;
import org.openapitools.client.model.DiscussionTopicContract;
import org.openapitools.client.model.DiscussionTopicContractPartialFindResult;
import org.openapitools.client.model.DiscussionTopicOptionalFields;
import org.openapitools.client.model.DiscussionTopicSortRule;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiscussionApiApi
 */
@Disabled
public class DiscussionApiApiTest {

    private final DiscussionApiApi api = new DiscussionApiApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsCommentsCommentIdDeleteTest() throws ApiException {
        Integer commentId = null;
        api.apiDiscussionsCommentsCommentIdDelete(commentId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsCommentsCommentIdPostTest() throws ApiException {
        Integer commentId = null;
        CommentForApiContract commentForApiContract = null;
        api.apiDiscussionsCommentsCommentIdPost(commentId, commentForApiContract);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsFoldersFolderIdTopicsGetTest() throws ApiException {
        Integer folderId = null;
        DiscussionTopicOptionalFields fields = null;
        List<DiscussionTopicContract> response = api.apiDiscussionsFoldersFolderIdTopicsGet(folderId, fields);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsFoldersFolderIdTopicsPostTest() throws ApiException {
        Integer folderId = null;
        DiscussionTopicContract discussionTopicContract = null;
        DiscussionTopicContract response = api.apiDiscussionsFoldersFolderIdTopicsPost(folderId, discussionTopicContract);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsFoldersGetTest() throws ApiException {
        DiscussionFolderOptionalFields fields = null;
        List<DiscussionFolderContract> response = api.apiDiscussionsFoldersGet(fields);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsFoldersPostTest() throws ApiException {
        DiscussionFolderContract discussionFolderContract = null;
        DiscussionFolderContract response = api.apiDiscussionsFoldersPost(discussionFolderContract);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsTopicsGetTest() throws ApiException {
        Integer folderId = null;
        Integer start = null;
        Integer maxResults = null;
        Boolean getTotalCount = null;
        DiscussionTopicSortRule sort = null;
        DiscussionTopicOptionalFields fields = null;
        DiscussionTopicContractPartialFindResult response = api.apiDiscussionsTopicsGet(folderId, start, maxResults, getTotalCount, sort, fields);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsTopicsTopicIdCommentsPostTest() throws ApiException {
        Integer topicId = null;
        CommentForApiContract commentForApiContract = null;
        CommentForApiContract response = api.apiDiscussionsTopicsTopicIdCommentsPost(topicId, commentForApiContract);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsTopicsTopicIdDeleteTest() throws ApiException {
        Integer topicId = null;
        api.apiDiscussionsTopicsTopicIdDelete(topicId);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsTopicsTopicIdGetTest() throws ApiException {
        Integer topicId = null;
        DiscussionTopicOptionalFields fields = null;
        DiscussionTopicContract response = api.apiDiscussionsTopicsTopicIdGet(topicId, fields);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiDiscussionsTopicsTopicIdPostTest() throws ApiException {
        Integer topicId = null;
        DiscussionTopicContract discussionTopicContract = null;
        api.apiDiscussionsTopicsTopicIdPost(topicId, discussionTopicContract);
        // TODO: test validations
    }

}
