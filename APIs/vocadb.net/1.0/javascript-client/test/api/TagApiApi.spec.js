/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VocaDbWeb);
  }
}(this, function(expect, VocaDbWeb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VocaDbWeb.TagApiApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TagApiApi', function() {
    describe('apiTagsByNameNameGet', function() {
      it('should call apiTagsByNameNameGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsByNameNameGet
        //instance.apiTagsByNameNameGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsCategoryNamesGet', function() {
      it('should call apiTagsCategoryNamesGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsCategoryNamesGet
        //instance.apiTagsCategoryNamesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsCommentsCommentIdDelete', function() {
      it('should call apiTagsCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiTagsCommentsCommentIdDelete
        //instance.apiTagsCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsCommentsCommentIdPost', function() {
      it('should call apiTagsCommentsCommentIdPost successfully', function(done) {
        //uncomment below and update the code to test apiTagsCommentsCommentIdPost
        //instance.apiTagsCommentsCommentIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsGet', function() {
      it('should call apiTagsGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsGet
        //instance.apiTagsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsIdDelete', function() {
      it('should call apiTagsIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiTagsIdDelete
        //instance.apiTagsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsIdGet', function() {
      it('should call apiTagsIdGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsIdGet
        //instance.apiTagsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsNamesGet', function() {
      it('should call apiTagsNamesGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsNamesGet
        //instance.apiTagsNamesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsPost', function() {
      it('should call apiTagsPost successfully', function(done) {
        //uncomment below and update the code to test apiTagsPost
        //instance.apiTagsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsTagIdChildrenGet', function() {
      it('should call apiTagsTagIdChildrenGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsTagIdChildrenGet
        //instance.apiTagsTagIdChildrenGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsTagIdCommentsGet', function() {
      it('should call apiTagsTagIdCommentsGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsTagIdCommentsGet
        //instance.apiTagsTagIdCommentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsTagIdCommentsPost', function() {
      it('should call apiTagsTagIdCommentsPost successfully', function(done) {
        //uncomment below and update the code to test apiTagsTagIdCommentsPost
        //instance.apiTagsTagIdCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsTagIdReportsPost', function() {
      it('should call apiTagsTagIdReportsPost successfully', function(done) {
        //uncomment below and update the code to test apiTagsTagIdReportsPost
        //instance.apiTagsTagIdReportsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiTagsTopGet', function() {
      it('should call apiTagsTopGet successfully', function(done) {
        //uncomment below and update the code to test apiTagsTopGet
        //instance.apiTagsTopGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
