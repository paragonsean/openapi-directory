/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VocaDbWeb);
  }
}(this, function(expect, VocaDbWeb) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VocaDbWeb.DiscussionApiApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DiscussionApiApi', function() {
    describe('apiDiscussionsCommentsCommentIdDelete', function() {
      it('should call apiDiscussionsCommentsCommentIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsCommentsCommentIdDelete
        //instance.apiDiscussionsCommentsCommentIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsCommentsCommentIdPost', function() {
      it('should call apiDiscussionsCommentsCommentIdPost successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsCommentsCommentIdPost
        //instance.apiDiscussionsCommentsCommentIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsFoldersFolderIdTopicsGet', function() {
      it('should call apiDiscussionsFoldersFolderIdTopicsGet successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsFoldersFolderIdTopicsGet
        //instance.apiDiscussionsFoldersFolderIdTopicsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsFoldersFolderIdTopicsPost', function() {
      it('should call apiDiscussionsFoldersFolderIdTopicsPost successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsFoldersFolderIdTopicsPost
        //instance.apiDiscussionsFoldersFolderIdTopicsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsFoldersGet', function() {
      it('should call apiDiscussionsFoldersGet successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsFoldersGet
        //instance.apiDiscussionsFoldersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsFoldersPost', function() {
      it('should call apiDiscussionsFoldersPost successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsFoldersPost
        //instance.apiDiscussionsFoldersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsTopicsGet', function() {
      it('should call apiDiscussionsTopicsGet successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsTopicsGet
        //instance.apiDiscussionsTopicsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsTopicsTopicIdCommentsPost', function() {
      it('should call apiDiscussionsTopicsTopicIdCommentsPost successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsTopicsTopicIdCommentsPost
        //instance.apiDiscussionsTopicsTopicIdCommentsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsTopicsTopicIdDelete', function() {
      it('should call apiDiscussionsTopicsTopicIdDelete successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsTopicsTopicIdDelete
        //instance.apiDiscussionsTopicsTopicIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsTopicsTopicIdGet', function() {
      it('should call apiDiscussionsTopicsTopicIdGet successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsTopicsTopicIdGet
        //instance.apiDiscussionsTopicsTopicIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('apiDiscussionsTopicsTopicIdPost', function() {
      it('should call apiDiscussionsTopicsTopicIdPost successfully', function(done) {
        //uncomment below and update the code to test apiDiscussionsTopicsTopicIdPost
        //instance.apiDiscussionsTopicsTopicIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
