/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EntryType from '../model/EntryType';
import TagForApiContract from '../model/TagForApiContract';
import TagOptionalFields from '../model/TagOptionalFields';

/**
* EntryTypesApi service.
* @module api/EntryTypesApiApi
* @version 1.0
*/
export default class EntryTypesApiApi {

    /**
    * Constructs a new EntryTypesApiApi. 
    * @alias module:api/EntryTypesApiApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiEntryTypesEntryTypeSubTypeTagGet operation.
     * @callback module:api/EntryTypesApiApi~apiEntryTypesEntryTypeSubTypeTagGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/TagForApiContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {module:model/EntryType} entryType 
     * @param {String} subType 
     * @param {Object} opts Optional parameters
     * @param {module:model/TagOptionalFields} [fields] 
     * @param {module:api/EntryTypesApiApi~apiEntryTypesEntryTypeSubTypeTagGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/TagForApiContract}
     */
    apiEntryTypesEntryTypeSubTypeTagGet(entryType, subType, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'entryType' is set
      if (entryType === undefined || entryType === null) {
        throw new Error("Missing the required parameter 'entryType' when calling apiEntryTypesEntryTypeSubTypeTagGet");
      }
      // verify the required parameter 'subType' is set
      if (subType === undefined || subType === null) {
        throw new Error("Missing the required parameter 'subType' when calling apiEntryTypesEntryTypeSubTypeTagGet");
      }

      let pathParams = {
        'entryType': entryType,
        'subType': subType
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = TagForApiContract;
      return this.apiClient.callApi(
        '/api/entry-types/{entryType}/{subType}/tag', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
