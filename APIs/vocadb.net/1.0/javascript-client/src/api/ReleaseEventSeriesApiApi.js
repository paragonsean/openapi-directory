/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ContentLanguagePreference from '../model/ContentLanguagePreference';
import NameMatchMode from '../model/NameMatchMode';
import ReleaseEventSeriesForApiContract from '../model/ReleaseEventSeriesForApiContract';
import ReleaseEventSeriesForApiContractPartialFindResult from '../model/ReleaseEventSeriesForApiContractPartialFindResult';
import ReleaseEventSeriesForEditForApiContract from '../model/ReleaseEventSeriesForEditForApiContract';
import ReleaseEventSeriesOptionalFields from '../model/ReleaseEventSeriesOptionalFields';

/**
* ReleaseEventSeriesApi service.
* @module api/ReleaseEventSeriesApiApi
* @version 1.0
*/
export default class ReleaseEventSeriesApiApi {

    /**
    * Constructs a new ReleaseEventSeriesApiApi. 
    * @alias module:api/ReleaseEventSeriesApiApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiReleaseEventSeriesGet operation.
     * @callback module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReleaseEventSeriesForApiContractPartialFindResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {String} [query = '')] 
     * @param {module:model/ReleaseEventSeriesOptionalFields} [fields] 
     * @param {Number} [start = 0)] 
     * @param {Number} [maxResults = 10)] 
     * @param {Boolean} [getTotalCount = false)] 
     * @param {module:model/NameMatchMode} [nameMatchMode] 
     * @param {module:model/ContentLanguagePreference} [lang] 
     * @param {module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReleaseEventSeriesForApiContractPartialFindResult}
     */
    apiReleaseEventSeriesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'query': opts['query'],
        'fields': opts['fields'],
        'start': opts['start'],
        'maxResults': opts['maxResults'],
        'getTotalCount': opts['getTotalCount'],
        'nameMatchMode': opts['nameMatchMode'],
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ReleaseEventSeriesForApiContractPartialFindResult;
      return this.apiClient.callApi(
        '/api/releaseEventSeries', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiReleaseEventSeriesIdDelete operation.
     * @callback module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {String} [notes = '')] 
     * @param {Boolean} [hardDelete = false)] 
     * @param {module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiReleaseEventSeriesIdDelete(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiReleaseEventSeriesIdDelete");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'notes': opts['notes'],
        'hardDelete': opts['hardDelete']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/releaseEventSeries/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiReleaseEventSeriesIdForEditGet operation.
     * @callback module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesIdForEditGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReleaseEventSeriesForEditForApiContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesIdForEditGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReleaseEventSeriesForEditForApiContract}
     */
    apiReleaseEventSeriesIdForEditGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiReleaseEventSeriesIdForEditGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ReleaseEventSeriesForEditForApiContract;
      return this.apiClient.callApi(
        '/api/releaseEventSeries/{id}/for-edit', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiReleaseEventSeriesIdGet operation.
     * @callback module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReleaseEventSeriesForApiContract} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {Object} opts Optional parameters
     * @param {module:model/ReleaseEventSeriesOptionalFields} [fields] 
     * @param {module:model/ContentLanguagePreference} [lang] 
     * @param {module:api/ReleaseEventSeriesApiApi~apiReleaseEventSeriesIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReleaseEventSeriesForApiContract}
     */
    apiReleaseEventSeriesIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiReleaseEventSeriesIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'fields': opts['fields'],
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json', 'text/plain'];
      let returnType = ReleaseEventSeriesForApiContract;
      return this.apiClient.callApi(
        '/api/releaseEventSeries/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
