/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntryStatus from './EntryStatus';
import LocalizedStringContract from './LocalizedStringContract';
import OptionalGeoPointContract from './OptionalGeoPointContract';
import ReleaseEventContract from './ReleaseEventContract';
import WebLinkForApiContract from './WebLinkForApiContract';

/**
 * The VenueForApiContract model module.
 * @module model/VenueForApiContract
 * @version 1.0
 */
class VenueForApiContract {
    /**
     * Constructs a new <code>VenueForApiContract</code>.
     * @alias module:model/VenueForApiContract
     */
    constructor() { 
        
        VenueForApiContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VenueForApiContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VenueForApiContract} obj Optional instance to populate.
     * @return {module:model/VenueForApiContract} The populated <code>VenueForApiContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VenueForApiContract();

            if (data.hasOwnProperty('additionalNames')) {
                obj['additionalNames'] = ApiClient.convertToType(data['additionalNames'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('addressCountryCode')) {
                obj['addressCountryCode'] = ApiClient.convertToType(data['addressCountryCode'], 'String');
            }
            if (data.hasOwnProperty('coordinates')) {
                obj['coordinates'] = OptionalGeoPointContract.constructFromObject(data['coordinates']);
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], [ReleaseEventContract]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('names')) {
                obj['names'] = ApiClient.convertToType(data['names'], [LocalizedStringContract]);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EntryStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
            if (data.hasOwnProperty('webLinks')) {
                obj['webLinks'] = ApiClient.convertToType(data['webLinks'], [WebLinkForApiContract]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VenueForApiContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VenueForApiContract</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['additionalNames'] && !(typeof data['additionalNames'] === 'string' || data['additionalNames'] instanceof String)) {
            throw new Error("Expected the field `additionalNames` to be a primitive type in the JSON string but got " + data['additionalNames']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['addressCountryCode'] && !(typeof data['addressCountryCode'] === 'string' || data['addressCountryCode'] instanceof String)) {
            throw new Error("Expected the field `addressCountryCode` to be a primitive type in the JSON string but got " + data['addressCountryCode']);
        }
        // validate the optional field `coordinates`
        if (data['coordinates']) { // data not null
          OptionalGeoPointContract.validateJSON(data['coordinates']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['events']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['events'])) {
                throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
            }
            // validate the optional field `events` (array)
            for (const item of data['events']) {
                ReleaseEventContract.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['names']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['names'])) {
                throw new Error("Expected the field `names` to be an array in the JSON data but got " + data['names']);
            }
            // validate the optional field `names` (array)
            for (const item of data['names']) {
                LocalizedStringContract.validateJSON(item);
            };
        }
        if (data['webLinks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['webLinks'])) {
                throw new Error("Expected the field `webLinks` to be an array in the JSON data but got " + data['webLinks']);
            }
            // validate the optional field `webLinks` (array)
            for (const item of data['webLinks']) {
                WebLinkForApiContract.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} additionalNames
 */
VenueForApiContract.prototype['additionalNames'] = undefined;

/**
 * @member {String} address
 */
VenueForApiContract.prototype['address'] = undefined;

/**
 * @member {String} addressCountryCode
 */
VenueForApiContract.prototype['addressCountryCode'] = undefined;

/**
 * @member {module:model/OptionalGeoPointContract} coordinates
 */
VenueForApiContract.prototype['coordinates'] = undefined;

/**
 * @member {Boolean} deleted
 */
VenueForApiContract.prototype['deleted'] = undefined;

/**
 * @member {String} description
 */
VenueForApiContract.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/ReleaseEventContract>} events
 */
VenueForApiContract.prototype['events'] = undefined;

/**
 * @member {Number} id
 */
VenueForApiContract.prototype['id'] = undefined;

/**
 * @member {String} name
 */
VenueForApiContract.prototype['name'] = undefined;

/**
 * @member {Array.<module:model/LocalizedStringContract>} names
 */
VenueForApiContract.prototype['names'] = undefined;

/**
 * @member {module:model/EntryStatus} status
 */
VenueForApiContract.prototype['status'] = undefined;

/**
 * @member {Number} version
 */
VenueForApiContract.prototype['version'] = undefined;

/**
 * @member {Array.<module:model/WebLinkForApiContract>} webLinks
 */
VenueForApiContract.prototype['webLinks'] = undefined;






export default VenueForApiContract;

