/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SongForApiContract from './SongForApiContract';

/**
 * The RelatedSongsContract model module.
 * @module model/RelatedSongsContract
 * @version 1.0
 */
class RelatedSongsContract {
    /**
     * Constructs a new <code>RelatedSongsContract</code>.
     * @alias module:model/RelatedSongsContract
     */
    constructor() { 
        
        RelatedSongsContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RelatedSongsContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RelatedSongsContract} obj Optional instance to populate.
     * @return {module:model/RelatedSongsContract} The populated <code>RelatedSongsContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RelatedSongsContract();

            if (data.hasOwnProperty('artistMatches')) {
                obj['artistMatches'] = ApiClient.convertToType(data['artistMatches'], [SongForApiContract]);
            }
            if (data.hasOwnProperty('likeMatches')) {
                obj['likeMatches'] = ApiClient.convertToType(data['likeMatches'], [SongForApiContract]);
            }
            if (data.hasOwnProperty('tagMatches')) {
                obj['tagMatches'] = ApiClient.convertToType(data['tagMatches'], [SongForApiContract]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RelatedSongsContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RelatedSongsContract</code>.
     */
    static validateJSON(data) {
        if (data['artistMatches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['artistMatches'])) {
                throw new Error("Expected the field `artistMatches` to be an array in the JSON data but got " + data['artistMatches']);
            }
            // validate the optional field `artistMatches` (array)
            for (const item of data['artistMatches']) {
                SongForApiContract.validateJSON(item);
            };
        }
        if (data['likeMatches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['likeMatches'])) {
                throw new Error("Expected the field `likeMatches` to be an array in the JSON data but got " + data['likeMatches']);
            }
            // validate the optional field `likeMatches` (array)
            for (const item of data['likeMatches']) {
                SongForApiContract.validateJSON(item);
            };
        }
        if (data['tagMatches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tagMatches'])) {
                throw new Error("Expected the field `tagMatches` to be an array in the JSON data but got " + data['tagMatches']);
            }
            // validate the optional field `tagMatches` (array)
            for (const item of data['tagMatches']) {
                SongForApiContract.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/SongForApiContract>} artistMatches
 */
RelatedSongsContract.prototype['artistMatches'] = undefined;

/**
 * @member {Array.<module:model/SongForApiContract>} likeMatches
 */
RelatedSongsContract.prototype['likeMatches'] = undefined;

/**
 * @member {Array.<module:model/SongForApiContract>} tagMatches
 */
RelatedSongsContract.prototype['tagMatches'] = undefined;






export default RelatedSongsContract;

