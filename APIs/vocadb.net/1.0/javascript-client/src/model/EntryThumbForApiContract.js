/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EntryThumbForApiContract model module.
 * @module model/EntryThumbForApiContract
 * @version 1.0
 */
class EntryThumbForApiContract {
    /**
     * Constructs a new <code>EntryThumbForApiContract</code>.
     * @alias module:model/EntryThumbForApiContract
     */
    constructor() { 
        
        EntryThumbForApiContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EntryThumbForApiContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EntryThumbForApiContract} obj Optional instance to populate.
     * @return {module:model/EntryThumbForApiContract} The populated <code>EntryThumbForApiContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EntryThumbForApiContract();

            if (data.hasOwnProperty('mime')) {
                obj['mime'] = ApiClient.convertToType(data['mime'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('urlOriginal')) {
                obj['urlOriginal'] = ApiClient.convertToType(data['urlOriginal'], 'String');
            }
            if (data.hasOwnProperty('urlSmallThumb')) {
                obj['urlSmallThumb'] = ApiClient.convertToType(data['urlSmallThumb'], 'String');
            }
            if (data.hasOwnProperty('urlThumb')) {
                obj['urlThumb'] = ApiClient.convertToType(data['urlThumb'], 'String');
            }
            if (data.hasOwnProperty('urlTinyThumb')) {
                obj['urlTinyThumb'] = ApiClient.convertToType(data['urlTinyThumb'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EntryThumbForApiContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EntryThumbForApiContract</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['mime'] && !(typeof data['mime'] === 'string' || data['mime'] instanceof String)) {
            throw new Error("Expected the field `mime` to be a primitive type in the JSON string but got " + data['mime']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['urlOriginal'] && !(typeof data['urlOriginal'] === 'string' || data['urlOriginal'] instanceof String)) {
            throw new Error("Expected the field `urlOriginal` to be a primitive type in the JSON string but got " + data['urlOriginal']);
        }
        // ensure the json data is a string
        if (data['urlSmallThumb'] && !(typeof data['urlSmallThumb'] === 'string' || data['urlSmallThumb'] instanceof String)) {
            throw new Error("Expected the field `urlSmallThumb` to be a primitive type in the JSON string but got " + data['urlSmallThumb']);
        }
        // ensure the json data is a string
        if (data['urlThumb'] && !(typeof data['urlThumb'] === 'string' || data['urlThumb'] instanceof String)) {
            throw new Error("Expected the field `urlThumb` to be a primitive type in the JSON string but got " + data['urlThumb']);
        }
        // ensure the json data is a string
        if (data['urlTinyThumb'] && !(typeof data['urlTinyThumb'] === 'string' || data['urlTinyThumb'] instanceof String)) {
            throw new Error("Expected the field `urlTinyThumb` to be a primitive type in the JSON string but got " + data['urlTinyThumb']);
        }

        return true;
    }


}



/**
 * @member {String} mime
 */
EntryThumbForApiContract.prototype['mime'] = undefined;

/**
 * @member {String} name
 */
EntryThumbForApiContract.prototype['name'] = undefined;

/**
 * @member {String} urlOriginal
 */
EntryThumbForApiContract.prototype['urlOriginal'] = undefined;

/**
 * @member {String} urlSmallThumb
 */
EntryThumbForApiContract.prototype['urlSmallThumb'] = undefined;

/**
 * @member {String} urlThumb
 */
EntryThumbForApiContract.prototype['urlThumb'] = undefined;

/**
 * @member {String} urlTinyThumb
 */
EntryThumbForApiContract.prototype['urlTinyThumb'] = undefined;






export default EntryThumbForApiContract;

