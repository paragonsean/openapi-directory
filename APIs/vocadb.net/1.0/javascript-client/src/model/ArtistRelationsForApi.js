/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AlbumForApiContract from './AlbumForApiContract';
import ReleaseEventForApiContract from './ReleaseEventForApiContract';
import SongForApiContract from './SongForApiContract';

/**
 * The ArtistRelationsForApi model module.
 * @module model/ArtistRelationsForApi
 * @version 1.0
 */
class ArtistRelationsForApi {
    /**
     * Constructs a new <code>ArtistRelationsForApi</code>.
     * @alias module:model/ArtistRelationsForApi
     */
    constructor() { 
        
        ArtistRelationsForApi.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArtistRelationsForApi</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArtistRelationsForApi} obj Optional instance to populate.
     * @return {module:model/ArtistRelationsForApi} The populated <code>ArtistRelationsForApi</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArtistRelationsForApi();

            if (data.hasOwnProperty('latestAlbums')) {
                obj['latestAlbums'] = ApiClient.convertToType(data['latestAlbums'], [AlbumForApiContract]);
            }
            if (data.hasOwnProperty('latestEvents')) {
                obj['latestEvents'] = ApiClient.convertToType(data['latestEvents'], [ReleaseEventForApiContract]);
            }
            if (data.hasOwnProperty('latestSongs')) {
                obj['latestSongs'] = ApiClient.convertToType(data['latestSongs'], [SongForApiContract]);
            }
            if (data.hasOwnProperty('popularAlbums')) {
                obj['popularAlbums'] = ApiClient.convertToType(data['popularAlbums'], [AlbumForApiContract]);
            }
            if (data.hasOwnProperty('popularSongs')) {
                obj['popularSongs'] = ApiClient.convertToType(data['popularSongs'], [SongForApiContract]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArtistRelationsForApi</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArtistRelationsForApi</code>.
     */
    static validateJSON(data) {
        if (data['latestAlbums']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['latestAlbums'])) {
                throw new Error("Expected the field `latestAlbums` to be an array in the JSON data but got " + data['latestAlbums']);
            }
            // validate the optional field `latestAlbums` (array)
            for (const item of data['latestAlbums']) {
                AlbumForApiContract.validateJSON(item);
            };
        }
        if (data['latestEvents']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['latestEvents'])) {
                throw new Error("Expected the field `latestEvents` to be an array in the JSON data but got " + data['latestEvents']);
            }
            // validate the optional field `latestEvents` (array)
            for (const item of data['latestEvents']) {
                ReleaseEventForApiContract.validateJSON(item);
            };
        }
        if (data['latestSongs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['latestSongs'])) {
                throw new Error("Expected the field `latestSongs` to be an array in the JSON data but got " + data['latestSongs']);
            }
            // validate the optional field `latestSongs` (array)
            for (const item of data['latestSongs']) {
                SongForApiContract.validateJSON(item);
            };
        }
        if (data['popularAlbums']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['popularAlbums'])) {
                throw new Error("Expected the field `popularAlbums` to be an array in the JSON data but got " + data['popularAlbums']);
            }
            // validate the optional field `popularAlbums` (array)
            for (const item of data['popularAlbums']) {
                AlbumForApiContract.validateJSON(item);
            };
        }
        if (data['popularSongs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['popularSongs'])) {
                throw new Error("Expected the field `popularSongs` to be an array in the JSON data but got " + data['popularSongs']);
            }
            // validate the optional field `popularSongs` (array)
            for (const item of data['popularSongs']) {
                SongForApiContract.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AlbumForApiContract>} latestAlbums
 */
ArtistRelationsForApi.prototype['latestAlbums'] = undefined;

/**
 * @member {Array.<module:model/ReleaseEventForApiContract>} latestEvents
 */
ArtistRelationsForApi.prototype['latestEvents'] = undefined;

/**
 * @member {Array.<module:model/SongForApiContract>} latestSongs
 */
ArtistRelationsForApi.prototype['latestSongs'] = undefined;

/**
 * @member {Array.<module:model/AlbumForApiContract>} popularAlbums
 */
ArtistRelationsForApi.prototype['popularAlbums'] = undefined;

/**
 * @member {Array.<module:model/SongForApiContract>} popularSongs
 */
ArtistRelationsForApi.prototype['popularSongs'] = undefined;






export default ArtistRelationsForApi;

