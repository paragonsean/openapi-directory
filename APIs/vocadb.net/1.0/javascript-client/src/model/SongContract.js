/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntryStatus from './EntryStatus';
import PVServices from './PVServices';
import SongType from './SongType';

/**
 * The SongContract model module.
 * @module model/SongContract
 * @version 1.0
 */
class SongContract {
    /**
     * Constructs a new <code>SongContract</code>.
     * @alias module:model/SongContract
     */
    constructor() { 
        
        SongContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SongContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SongContract} obj Optional instance to populate.
     * @return {module:model/SongContract} The populated <code>SongContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SongContract();

            if (data.hasOwnProperty('additionalNames')) {
                obj['additionalNames'] = ApiClient.convertToType(data['additionalNames'], 'String');
            }
            if (data.hasOwnProperty('artistString')) {
                obj['artistString'] = ApiClient.convertToType(data['artistString'], 'String');
            }
            if (data.hasOwnProperty('createDate')) {
                obj['createDate'] = ApiClient.convertToType(data['createDate'], 'Date');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('favoritedTimes')) {
                obj['favoritedTimes'] = ApiClient.convertToType(data['favoritedTimes'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('lengthSeconds')) {
                obj['lengthSeconds'] = ApiClient.convertToType(data['lengthSeconds'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nicoId')) {
                obj['nicoId'] = ApiClient.convertToType(data['nicoId'], 'String');
            }
            if (data.hasOwnProperty('publishDate')) {
                obj['publishDate'] = ApiClient.convertToType(data['publishDate'], 'Date');
            }
            if (data.hasOwnProperty('pvServices')) {
                obj['pvServices'] = PVServices.constructFromObject(data['pvServices']);
            }
            if (data.hasOwnProperty('ratingScore')) {
                obj['ratingScore'] = ApiClient.convertToType(data['ratingScore'], 'Number');
            }
            if (data.hasOwnProperty('songType')) {
                obj['songType'] = SongType.constructFromObject(data['songType']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EntryStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('thumbUrl')) {
                obj['thumbUrl'] = ApiClient.convertToType(data['thumbUrl'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SongContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SongContract</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['additionalNames'] && !(typeof data['additionalNames'] === 'string' || data['additionalNames'] instanceof String)) {
            throw new Error("Expected the field `additionalNames` to be a primitive type in the JSON string but got " + data['additionalNames']);
        }
        // ensure the json data is a string
        if (data['artistString'] && !(typeof data['artistString'] === 'string' || data['artistString'] instanceof String)) {
            throw new Error("Expected the field `artistString` to be a primitive type in the JSON string but got " + data['artistString']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['nicoId'] && !(typeof data['nicoId'] === 'string' || data['nicoId'] instanceof String)) {
            throw new Error("Expected the field `nicoId` to be a primitive type in the JSON string but got " + data['nicoId']);
        }
        // ensure the json data is a string
        if (data['thumbUrl'] && !(typeof data['thumbUrl'] === 'string' || data['thumbUrl'] instanceof String)) {
            throw new Error("Expected the field `thumbUrl` to be a primitive type in the JSON string but got " + data['thumbUrl']);
        }

        return true;
    }


}



/**
 * @member {String} additionalNames
 */
SongContract.prototype['additionalNames'] = undefined;

/**
 * @member {String} artistString
 */
SongContract.prototype['artistString'] = undefined;

/**
 * @member {Date} createDate
 */
SongContract.prototype['createDate'] = undefined;

/**
 * @member {Boolean} deleted
 */
SongContract.prototype['deleted'] = undefined;

/**
 * @member {Number} favoritedTimes
 */
SongContract.prototype['favoritedTimes'] = undefined;

/**
 * @member {Number} id
 */
SongContract.prototype['id'] = undefined;

/**
 * @member {Number} lengthSeconds
 */
SongContract.prototype['lengthSeconds'] = undefined;

/**
 * @member {String} name
 */
SongContract.prototype['name'] = undefined;

/**
 * @member {String} nicoId
 */
SongContract.prototype['nicoId'] = undefined;

/**
 * @member {Date} publishDate
 */
SongContract.prototype['publishDate'] = undefined;

/**
 * @member {module:model/PVServices} pvServices
 */
SongContract.prototype['pvServices'] = undefined;

/**
 * @member {Number} ratingScore
 */
SongContract.prototype['ratingScore'] = undefined;

/**
 * @member {module:model/SongType} songType
 */
SongContract.prototype['songType'] = undefined;

/**
 * @member {module:model/EntryStatus} status
 */
SongContract.prototype['status'] = undefined;

/**
 * @member {String} thumbUrl
 */
SongContract.prototype['thumbUrl'] = undefined;

/**
 * @member {Number} version
 */
SongContract.prototype['version'] = undefined;






export default SongContract;

