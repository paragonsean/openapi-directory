/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EntryStatus from './EntryStatus';
import EventCategory from './EventCategory';
import ReleaseEventSeriesContract from './ReleaseEventSeriesContract';
import SongListBaseContract from './SongListBaseContract';
import VenueContract from './VenueContract';

/**
 * The ReleaseEventContract model module.
 * @module model/ReleaseEventContract
 * @version 1.0
 */
class ReleaseEventContract {
    /**
     * Constructs a new <code>ReleaseEventContract</code>.
     * @alias module:model/ReleaseEventContract
     */
    constructor() { 
        
        ReleaseEventContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ReleaseEventContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ReleaseEventContract} obj Optional instance to populate.
     * @return {module:model/ReleaseEventContract} The populated <code>ReleaseEventContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ReleaseEventContract();

            if (data.hasOwnProperty('additionalNames')) {
                obj['additionalNames'] = ApiClient.convertToType(data['additionalNames'], 'String');
            }
            if (data.hasOwnProperty('category')) {
                obj['category'] = EventCategory.constructFromObject(data['category']);
            }
            if (data.hasOwnProperty('customName')) {
                obj['customName'] = ApiClient.convertToType(data['customName'], 'Boolean');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('deleted')) {
                obj['deleted'] = ApiClient.convertToType(data['deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('hasVenueOrVenueName')) {
                obj['hasVenueOrVenueName'] = ApiClient.convertToType(data['hasVenueOrVenueName'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('inheritedCategory')) {
                obj['inheritedCategory'] = EventCategory.constructFromObject(data['inheritedCategory']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('pictureMime')) {
                obj['pictureMime'] = ApiClient.convertToType(data['pictureMime'], 'String');
            }
            if (data.hasOwnProperty('series')) {
                obj['series'] = ReleaseEventSeriesContract.constructFromObject(data['series']);
            }
            if (data.hasOwnProperty('songList')) {
                obj['songList'] = SongListBaseContract.constructFromObject(data['songList']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = EntryStatus.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('urlSlug')) {
                obj['urlSlug'] = ApiClient.convertToType(data['urlSlug'], 'String');
            }
            if (data.hasOwnProperty('venue')) {
                obj['venue'] = VenueContract.constructFromObject(data['venue']);
            }
            if (data.hasOwnProperty('venueName')) {
                obj['venueName'] = ApiClient.convertToType(data['venueName'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ReleaseEventContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ReleaseEventContract</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['additionalNames'] && !(typeof data['additionalNames'] === 'string' || data['additionalNames'] instanceof String)) {
            throw new Error("Expected the field `additionalNames` to be a primitive type in the JSON string but got " + data['additionalNames']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['pictureMime'] && !(typeof data['pictureMime'] === 'string' || data['pictureMime'] instanceof String)) {
            throw new Error("Expected the field `pictureMime` to be a primitive type in the JSON string but got " + data['pictureMime']);
        }
        // validate the optional field `series`
        if (data['series']) { // data not null
          ReleaseEventSeriesContract.validateJSON(data['series']);
        }
        // validate the optional field `songList`
        if (data['songList']) { // data not null
          SongListBaseContract.validateJSON(data['songList']);
        }
        // ensure the json data is a string
        if (data['urlSlug'] && !(typeof data['urlSlug'] === 'string' || data['urlSlug'] instanceof String)) {
            throw new Error("Expected the field `urlSlug` to be a primitive type in the JSON string but got " + data['urlSlug']);
        }
        // validate the optional field `venue`
        if (data['venue']) { // data not null
          VenueContract.validateJSON(data['venue']);
        }
        // ensure the json data is a string
        if (data['venueName'] && !(typeof data['venueName'] === 'string' || data['venueName'] instanceof String)) {
            throw new Error("Expected the field `venueName` to be a primitive type in the JSON string but got " + data['venueName']);
        }

        return true;
    }


}



/**
 * @member {String} additionalNames
 */
ReleaseEventContract.prototype['additionalNames'] = undefined;

/**
 * @member {module:model/EventCategory} category
 */
ReleaseEventContract.prototype['category'] = undefined;

/**
 * @member {Boolean} customName
 */
ReleaseEventContract.prototype['customName'] = undefined;

/**
 * @member {Date} date
 */
ReleaseEventContract.prototype['date'] = undefined;

/**
 * @member {Boolean} deleted
 */
ReleaseEventContract.prototype['deleted'] = undefined;

/**
 * @member {String} description
 */
ReleaseEventContract.prototype['description'] = undefined;

/**
 * @member {Date} endDate
 */
ReleaseEventContract.prototype['endDate'] = undefined;

/**
 * @member {Boolean} hasVenueOrVenueName
 */
ReleaseEventContract.prototype['hasVenueOrVenueName'] = undefined;

/**
 * @member {Number} id
 */
ReleaseEventContract.prototype['id'] = undefined;

/**
 * @member {module:model/EventCategory} inheritedCategory
 */
ReleaseEventContract.prototype['inheritedCategory'] = undefined;

/**
 * @member {String} name
 */
ReleaseEventContract.prototype['name'] = undefined;

/**
 * @member {String} pictureMime
 */
ReleaseEventContract.prototype['pictureMime'] = undefined;

/**
 * @member {module:model/ReleaseEventSeriesContract} series
 */
ReleaseEventContract.prototype['series'] = undefined;

/**
 * @member {module:model/SongListBaseContract} songList
 */
ReleaseEventContract.prototype['songList'] = undefined;

/**
 * @member {module:model/EntryStatus} status
 */
ReleaseEventContract.prototype['status'] = undefined;

/**
 * @member {String} urlSlug
 */
ReleaseEventContract.prototype['urlSlug'] = undefined;

/**
 * @member {module:model/VenueContract} venue
 */
ReleaseEventContract.prototype['venue'] = undefined;

/**
 * @member {String} venueName
 */
ReleaseEventContract.prototype['venueName'] = undefined;

/**
 * @member {Number} version
 */
ReleaseEventContract.prototype['version'] = undefined;






export default ReleaseEventContract;

