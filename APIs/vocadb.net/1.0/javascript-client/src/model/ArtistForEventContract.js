/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArtistContract from './ArtistContract';
import ArtistEventRoles from './ArtistEventRoles';

/**
 * The ArtistForEventContract model module.
 * @module model/ArtistForEventContract
 * @version 1.0
 */
class ArtistForEventContract {
    /**
     * Constructs a new <code>ArtistForEventContract</code>.
     * @alias module:model/ArtistForEventContract
     */
    constructor() { 
        
        ArtistForEventContract.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ArtistForEventContract</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ArtistForEventContract} obj Optional instance to populate.
     * @return {module:model/ArtistForEventContract} The populated <code>ArtistForEventContract</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ArtistForEventContract();

            if (data.hasOwnProperty('artist')) {
                obj['artist'] = ArtistContract.constructFromObject(data['artist']);
            }
            if (data.hasOwnProperty('effectiveRoles')) {
                obj['effectiveRoles'] = ArtistEventRoles.constructFromObject(data['effectiveRoles']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('roles')) {
                obj['roles'] = ArtistEventRoles.constructFromObject(data['roles']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ArtistForEventContract</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ArtistForEventContract</code>.
     */
    static validateJSON(data) {
        // validate the optional field `artist`
        if (data['artist']) { // data not null
          ArtistContract.validateJSON(data['artist']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/ArtistContract} artist
 */
ArtistForEventContract.prototype['artist'] = undefined;

/**
 * @member {module:model/ArtistEventRoles} effectiveRoles
 */
ArtistForEventContract.prototype['effectiveRoles'] = undefined;

/**
 * @member {Number} id
 */
ArtistForEventContract.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ArtistForEventContract.prototype['name'] = undefined;

/**
 * @member {module:model/ArtistEventRoles} roles
 */
ArtistForEventContract.prototype['roles'] = undefined;






export default ArtistForEventContract;

