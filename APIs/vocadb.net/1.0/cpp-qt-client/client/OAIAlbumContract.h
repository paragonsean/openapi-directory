/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlbumContract.h
 *
 * 
 */

#ifndef OAIAlbumContract_H
#define OAIAlbumContract_H

#include <QJsonObject>

#include "OAIDiscType.h"
#include "OAIEntryStatus.h"
#include "OAIOptionalDateTimeContract.h"
#include "OAIReleaseEventForApiContract.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIOptionalDateTimeContract;
class OAIReleaseEventForApiContract;

class OAIAlbumContract : public OAIObject {
public:
    OAIAlbumContract();
    OAIAlbumContract(QString json);
    ~OAIAlbumContract() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalNames() const;
    void setAdditionalNames(const QString &additional_names);
    bool is_additional_names_Set() const;
    bool is_additional_names_Valid() const;

    QString getArtistString() const;
    void setArtistString(const QString &artist_string);
    bool is_artist_string_Set() const;
    bool is_artist_string_Valid() const;

    QString getCoverPictureMime() const;
    void setCoverPictureMime(const QString &cover_picture_mime);
    bool is_cover_picture_mime_Set() const;
    bool is_cover_picture_mime_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    OAIDiscType getDiscType() const;
    void setDiscType(const OAIDiscType &disc_type);
    bool is_disc_type_Set() const;
    bool is_disc_type_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getRatingAverage() const;
    void setRatingAverage(const double &rating_average);
    bool is_rating_average_Set() const;
    bool is_rating_average_Valid() const;

    qint32 getRatingCount() const;
    void setRatingCount(const qint32 &rating_count);
    bool is_rating_count_Set() const;
    bool is_rating_count_Valid() const;

    OAIOptionalDateTimeContract getReleaseDate() const;
    void setReleaseDate(const OAIOptionalDateTimeContract &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    OAIReleaseEventForApiContract getReleaseEvent() const;
    void setReleaseEvent(const OAIReleaseEventForApiContract &release_event);
    bool is_release_event_Set() const;
    bool is_release_event_Valid() const;

    OAIEntryStatus getStatus() const;
    void setStatus(const OAIEntryStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_names;
    bool m_additional_names_isSet;
    bool m_additional_names_isValid;

    QString m_artist_string;
    bool m_artist_string_isSet;
    bool m_artist_string_isValid;

    QString m_cover_picture_mime;
    bool m_cover_picture_mime_isSet;
    bool m_cover_picture_mime_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    OAIDiscType m_disc_type;
    bool m_disc_type_isSet;
    bool m_disc_type_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_rating_average;
    bool m_rating_average_isSet;
    bool m_rating_average_isValid;

    qint32 m_rating_count;
    bool m_rating_count_isSet;
    bool m_rating_count_isValid;

    OAIOptionalDateTimeContract m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    OAIReleaseEventForApiContract m_release_event;
    bool m_release_event_isSet;
    bool m_release_event_isValid;

    OAIEntryStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlbumContract)

#endif // OAIAlbumContract_H
