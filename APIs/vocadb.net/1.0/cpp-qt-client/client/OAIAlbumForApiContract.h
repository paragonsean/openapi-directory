/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAlbumForApiContract.h
 *
 * 
 */

#ifndef OAIAlbumForApiContract_H
#define OAIAlbumForApiContract_H

#include <QJsonObject>

#include "OAIAlbumDiscPropertiesContract.h"
#include "OAIAlbumIdentifierContract.h"
#include "OAIArtistForAlbumForApiContract.h"
#include "OAIContentLanguageSelection.h"
#include "OAIDiscType.h"
#include "OAIEntryStatus.h"
#include "OAIEntryThumbForApiContract.h"
#include "OAILocalizedStringContract.h"
#include "OAIOptionalDateTimeContract.h"
#include "OAIPVContract.h"
#include "OAIReleaseEventForApiContract.h"
#include "OAISongInAlbumForApiContract.h"
#include "OAITagUsageForApiContract.h"
#include "OAIWebLinkForApiContract.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArtistForAlbumForApiContract;
class OAIAlbumDiscPropertiesContract;
class OAIAlbumIdentifierContract;
class OAIEntryThumbForApiContract;
class OAILocalizedStringContract;
class OAIPVContract;
class OAIOptionalDateTimeContract;
class OAIReleaseEventForApiContract;
class OAITagUsageForApiContract;
class OAISongInAlbumForApiContract;
class OAIWebLinkForApiContract;

class OAIAlbumForApiContract : public OAIObject {
public:
    OAIAlbumForApiContract();
    OAIAlbumForApiContract(QString json);
    ~OAIAlbumForApiContract() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalNames() const;
    void setAdditionalNames(const QString &additional_names);
    bool is_additional_names_Set() const;
    bool is_additional_names_Valid() const;

    QString getArtistString() const;
    void setArtistString(const QString &artist_string);
    bool is_artist_string_Set() const;
    bool is_artist_string_Valid() const;

    QList<OAIArtistForAlbumForApiContract> getArtists() const;
    void setArtists(const QList<OAIArtistForAlbumForApiContract> &artists);
    bool is_artists_Set() const;
    bool is_artists_Valid() const;

    QString getBarcode() const;
    void setBarcode(const QString &barcode);
    bool is_barcode_Set() const;
    bool is_barcode_Valid() const;

    QString getCatalogNumber() const;
    void setCatalogNumber(const QString &catalog_number);
    bool is_catalog_number_Set() const;
    bool is_catalog_number_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    QString getDefaultName() const;
    void setDefaultName(const QString &default_name);
    bool is_default_name_Set() const;
    bool is_default_name_Valid() const;

    OAIContentLanguageSelection getDefaultNameLanguage() const;
    void setDefaultNameLanguage(const OAIContentLanguageSelection &default_name_language);
    bool is_default_name_language_Set() const;
    bool is_default_name_language_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDiscType getDiscType() const;
    void setDiscType(const OAIDiscType &disc_type);
    bool is_disc_type_Set() const;
    bool is_disc_type_Valid() const;

    QList<OAIAlbumDiscPropertiesContract> getDiscs() const;
    void setDiscs(const QList<OAIAlbumDiscPropertiesContract> &discs);
    bool is_discs_Set() const;
    bool is_discs_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIAlbumIdentifierContract> getIdentifiers() const;
    void setIdentifiers(const QList<OAIAlbumIdentifierContract> &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    OAIEntryThumbForApiContract getMainPicture() const;
    void setMainPicture(const OAIEntryThumbForApiContract &main_picture);
    bool is_main_picture_Set() const;
    bool is_main_picture_Valid() const;

    qint32 getMergedTo() const;
    void setMergedTo(const qint32 &merged_to);
    bool is_merged_to_Set() const;
    bool is_merged_to_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAILocalizedStringContract> getNames() const;
    void setNames(const QList<OAILocalizedStringContract> &names);
    bool is_names_Set() const;
    bool is_names_Valid() const;

    QList<OAIPVContract> getPvs() const;
    void setPvs(const QList<OAIPVContract> &pvs);
    bool is_pvs_Set() const;
    bool is_pvs_Valid() const;

    double getRatingAverage() const;
    void setRatingAverage(const double &rating_average);
    bool is_rating_average_Set() const;
    bool is_rating_average_Valid() const;

    qint32 getRatingCount() const;
    void setRatingCount(const qint32 &rating_count);
    bool is_rating_count_Set() const;
    bool is_rating_count_Valid() const;

    OAIOptionalDateTimeContract getReleaseDate() const;
    void setReleaseDate(const OAIOptionalDateTimeContract &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    OAIReleaseEventForApiContract getReleaseEvent() const;
    void setReleaseEvent(const OAIReleaseEventForApiContract &release_event);
    bool is_release_event_Set() const;
    bool is_release_event_Valid() const;

    OAIEntryStatus getStatus() const;
    void setStatus(const OAIEntryStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAITagUsageForApiContract> getTags() const;
    void setTags(const QList<OAITagUsageForApiContract> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QList<OAISongInAlbumForApiContract> getTracks() const;
    void setTracks(const QList<OAISongInAlbumForApiContract> &tracks);
    bool is_tracks_Set() const;
    bool is_tracks_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList<OAIWebLinkForApiContract> getWebLinks() const;
    void setWebLinks(const QList<OAIWebLinkForApiContract> &web_links);
    bool is_web_links_Set() const;
    bool is_web_links_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_names;
    bool m_additional_names_isSet;
    bool m_additional_names_isValid;

    QString m_artist_string;
    bool m_artist_string_isSet;
    bool m_artist_string_isValid;

    QList<OAIArtistForAlbumForApiContract> m_artists;
    bool m_artists_isSet;
    bool m_artists_isValid;

    QString m_barcode;
    bool m_barcode_isSet;
    bool m_barcode_isValid;

    QString m_catalog_number;
    bool m_catalog_number_isSet;
    bool m_catalog_number_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    QString m_default_name;
    bool m_default_name_isSet;
    bool m_default_name_isValid;

    OAIContentLanguageSelection m_default_name_language;
    bool m_default_name_language_isSet;
    bool m_default_name_language_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDiscType m_disc_type;
    bool m_disc_type_isSet;
    bool m_disc_type_isValid;

    QList<OAIAlbumDiscPropertiesContract> m_discs;
    bool m_discs_isSet;
    bool m_discs_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIAlbumIdentifierContract> m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    OAIEntryThumbForApiContract m_main_picture;
    bool m_main_picture_isSet;
    bool m_main_picture_isValid;

    qint32 m_merged_to;
    bool m_merged_to_isSet;
    bool m_merged_to_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAILocalizedStringContract> m_names;
    bool m_names_isSet;
    bool m_names_isValid;

    QList<OAIPVContract> m_pvs;
    bool m_pvs_isSet;
    bool m_pvs_isValid;

    double m_rating_average;
    bool m_rating_average_isSet;
    bool m_rating_average_isValid;

    qint32 m_rating_count;
    bool m_rating_count_isSet;
    bool m_rating_count_isValid;

    OAIOptionalDateTimeContract m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    OAIReleaseEventForApiContract m_release_event;
    bool m_release_event_isSet;
    bool m_release_event_isValid;

    OAIEntryStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAITagUsageForApiContract> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QList<OAISongInAlbumForApiContract> m_tracks;
    bool m_tracks_isSet;
    bool m_tracks_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList<OAIWebLinkForApiContract> m_web_links;
    bool m_web_links_isSet;
    bool m_web_links_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAlbumForApiContract)

#endif // OAIAlbumForApiContract_H
