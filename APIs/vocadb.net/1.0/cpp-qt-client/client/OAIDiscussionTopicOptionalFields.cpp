/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscussionTopicOptionalFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscussionTopicOptionalFields::OAIDiscussionTopicOptionalFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscussionTopicOptionalFields::OAIDiscussionTopicOptionalFields() {
    this->initializeModel();
}

OAIDiscussionTopicOptionalFields::~OAIDiscussionTopicOptionalFields() {}

void OAIDiscussionTopicOptionalFields::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDiscussionTopicOptionalFields::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDiscussionTopicOptionalFields::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDiscussionTopicOptionalFields::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Comments", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDiscussionTopicOptionalFields::COMMENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CommentCount", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDiscussionTopicOptionalFields::COMMENTCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Content", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDiscussionTopicOptionalFields::CONTENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LastComment", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDiscussionTopicOptionalFields::LASTCOMMENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("All", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDiscussionTopicOptionalFields::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDiscussionTopicOptionalFields::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDiscussionTopicOptionalFields::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDiscussionTopicOptionalFields::NONE:
            val = "None";
            break;
        case eOAIDiscussionTopicOptionalFields::COMMENTS:
            val = "Comments";
            break;
        case eOAIDiscussionTopicOptionalFields::COMMENTCOUNT:
            val = "CommentCount";
            break;
        case eOAIDiscussionTopicOptionalFields::CONTENT:
            val = "Content";
            break;
        case eOAIDiscussionTopicOptionalFields::LASTCOMMENT:
            val = "LastComment";
            break;
        case eOAIDiscussionTopicOptionalFields::ALL:
            val = "All";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDiscussionTopicOptionalFields::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDiscussionTopicOptionalFields::eOAIDiscussionTopicOptionalFields OAIDiscussionTopicOptionalFields::getValue() const {
    return m_value;
}

void OAIDiscussionTopicOptionalFields::setValue(const OAIDiscussionTopicOptionalFields::eOAIDiscussionTopicOptionalFields& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDiscussionTopicOptionalFields::isSet() const {
    
    return m_value_isSet;
}

bool OAIDiscussionTopicOptionalFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
