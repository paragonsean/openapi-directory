/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArtistRelationsFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArtistRelationsFields::OAIArtistRelationsFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArtistRelationsFields::OAIArtistRelationsFields() {
    this->initializeModel();
}

OAIArtistRelationsFields::~OAIArtistRelationsFields() {}

void OAIArtistRelationsFields::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIArtistRelationsFields::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIArtistRelationsFields::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistRelationsFields::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LatestAlbums", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistRelationsFields::LATESTALBUMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LatestEvents", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistRelationsFields::LATESTEVENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("LatestSongs", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistRelationsFields::LATESTSONGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PopularAlbums", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistRelationsFields::POPULARALBUMS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PopularSongs", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistRelationsFields::POPULARSONGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("All", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistRelationsFields::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIArtistRelationsFields::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIArtistRelationsFields::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIArtistRelationsFields::NONE:
            val = "None";
            break;
        case eOAIArtistRelationsFields::LATESTALBUMS:
            val = "LatestAlbums";
            break;
        case eOAIArtistRelationsFields::LATESTEVENTS:
            val = "LatestEvents";
            break;
        case eOAIArtistRelationsFields::LATESTSONGS:
            val = "LatestSongs";
            break;
        case eOAIArtistRelationsFields::POPULARALBUMS:
            val = "PopularAlbums";
            break;
        case eOAIArtistRelationsFields::POPULARSONGS:
            val = "PopularSongs";
            break;
        case eOAIArtistRelationsFields::ALL:
            val = "All";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIArtistRelationsFields::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIArtistRelationsFields::eOAIArtistRelationsFields OAIArtistRelationsFields::getValue() const {
    return m_value;
}

void OAIArtistRelationsFields::setValue(const OAIArtistRelationsFields::eOAIArtistRelationsFields& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIArtistRelationsFields::isSet() const {
    
    return m_value_isSet;
}

bool OAIArtistRelationsFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
