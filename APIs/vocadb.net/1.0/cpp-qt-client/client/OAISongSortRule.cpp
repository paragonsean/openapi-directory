/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISongSortRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISongSortRule::OAISongSortRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISongSortRule::OAISongSortRule() {
    this->initializeModel();
}

OAISongSortRule::~OAISongSortRule() {}

void OAISongSortRule::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISongSortRule::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISongSortRule::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Name", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AdditionDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::ADDITIONDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("PublishDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::PUBLISHDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("FavoritedTimes", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::FAVORITEDTIMES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RatingScore", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::RATINGSCORE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TagUsageCount", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::TAGUSAGECOUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("SongType", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongSortRule::SONGTYPE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISongSortRule::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISongSortRule::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISongSortRule::NONE:
            val = "None";
            break;
        case eOAISongSortRule::NAME:
            val = "Name";
            break;
        case eOAISongSortRule::ADDITIONDATE:
            val = "AdditionDate";
            break;
        case eOAISongSortRule::PUBLISHDATE:
            val = "PublishDate";
            break;
        case eOAISongSortRule::FAVORITEDTIMES:
            val = "FavoritedTimes";
            break;
        case eOAISongSortRule::RATINGSCORE:
            val = "RatingScore";
            break;
        case eOAISongSortRule::TAGUSAGECOUNT:
            val = "TagUsageCount";
            break;
        case eOAISongSortRule::SONGTYPE:
            val = "SongType";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISongSortRule::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISongSortRule::eOAISongSortRule OAISongSortRule::getValue() const {
    return m_value;
}

void OAISongSortRule::setValue(const OAISongSortRule::eOAISongSortRule& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISongSortRule::isSet() const {
    
    return m_value_isSet;
}

bool OAISongSortRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
