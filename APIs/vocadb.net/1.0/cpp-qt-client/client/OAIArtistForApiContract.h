/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArtistForApiContract.h
 *
 * 
 */

#ifndef OAIArtistForApiContract_H
#define OAIArtistForApiContract_H

#include <QJsonObject>

#include "OAIArtistContract.h"
#include "OAIArtistForArtistForApiContract.h"
#include "OAIArtistRelationsForApi.h"
#include "OAIArtistType.h"
#include "OAIContentLanguageSelection.h"
#include "OAIEntryStatus.h"
#include "OAIEntryThumbForApiContract.h"
#include "OAILocalizedStringContract.h"
#include "OAITagUsageForApiContract.h"
#include "OAIWebLinkForApiContract.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIArtistForArtistForApiContract;
class OAIArtistContract;
class OAIEntryThumbForApiContract;
class OAILocalizedStringContract;
class OAIArtistRelationsForApi;
class OAITagUsageForApiContract;
class OAIWebLinkForApiContract;

class OAIArtistForApiContract : public OAIObject {
public:
    OAIArtistForApiContract();
    OAIArtistForApiContract(QString json);
    ~OAIArtistForApiContract() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalNames() const;
    void setAdditionalNames(const QString &additional_names);
    bool is_additional_names_Set() const;
    bool is_additional_names_Valid() const;

    QList<OAIArtistForArtistForApiContract> getArtistLinks() const;
    void setArtistLinks(const QList<OAIArtistForArtistForApiContract> &artist_links);
    bool is_artist_links_Set() const;
    bool is_artist_links_Valid() const;

    QList<OAIArtistForArtistForApiContract> getArtistLinksReverse() const;
    void setArtistLinksReverse(const QList<OAIArtistForArtistForApiContract> &artist_links_reverse);
    bool is_artist_links_reverse_Set() const;
    bool is_artist_links_reverse_Valid() const;

    OAIArtistType getArtistType() const;
    void setArtistType(const OAIArtistType &artist_type);
    bool is_artist_type_Set() const;
    bool is_artist_type_Valid() const;

    OAIArtistContract getBaseVoicebank() const;
    void setBaseVoicebank(const OAIArtistContract &base_voicebank);
    bool is_base_voicebank_Set() const;
    bool is_base_voicebank_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    QString getDefaultName() const;
    void setDefaultName(const QString &default_name);
    bool is_default_name_Set() const;
    bool is_default_name_Valid() const;

    OAIContentLanguageSelection getDefaultNameLanguage() const;
    void setDefaultNameLanguage(const OAIContentLanguageSelection &default_name_language);
    bool is_default_name_language_Set() const;
    bool is_default_name_language_Valid() const;

    bool isDeleted() const;
    void setDeleted(const bool &deleted);
    bool is_deleted_Set() const;
    bool is_deleted_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEntryThumbForApiContract getMainPicture() const;
    void setMainPicture(const OAIEntryThumbForApiContract &main_picture);
    bool is_main_picture_Set() const;
    bool is_main_picture_Valid() const;

    qint32 getMergedTo() const;
    void setMergedTo(const qint32 &merged_to);
    bool is_merged_to_Set() const;
    bool is_merged_to_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAILocalizedStringContract> getNames() const;
    void setNames(const QList<OAILocalizedStringContract> &names);
    bool is_names_Set() const;
    bool is_names_Valid() const;

    QString getPictureMime() const;
    void setPictureMime(const QString &picture_mime);
    bool is_picture_mime_Set() const;
    bool is_picture_mime_Valid() const;

    OAIArtistRelationsForApi getRelations() const;
    void setRelations(const OAIArtistRelationsForApi &relations);
    bool is_relations_Set() const;
    bool is_relations_Valid() const;

    QDateTime getReleaseDate() const;
    void setReleaseDate(const QDateTime &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    OAIEntryStatus getStatus() const;
    void setStatus(const OAIEntryStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAITagUsageForApiContract> getTags() const;
    void setTags(const QList<OAITagUsageForApiContract> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList<OAIWebLinkForApiContract> getWebLinks() const;
    void setWebLinks(const QList<OAIWebLinkForApiContract> &web_links);
    bool is_web_links_Set() const;
    bool is_web_links_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_names;
    bool m_additional_names_isSet;
    bool m_additional_names_isValid;

    QList<OAIArtistForArtistForApiContract> m_artist_links;
    bool m_artist_links_isSet;
    bool m_artist_links_isValid;

    QList<OAIArtistForArtistForApiContract> m_artist_links_reverse;
    bool m_artist_links_reverse_isSet;
    bool m_artist_links_reverse_isValid;

    OAIArtistType m_artist_type;
    bool m_artist_type_isSet;
    bool m_artist_type_isValid;

    OAIArtistContract m_base_voicebank;
    bool m_base_voicebank_isSet;
    bool m_base_voicebank_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    QString m_default_name;
    bool m_default_name_isSet;
    bool m_default_name_isValid;

    OAIContentLanguageSelection m_default_name_language;
    bool m_default_name_language_isSet;
    bool m_default_name_language_isValid;

    bool m_deleted;
    bool m_deleted_isSet;
    bool m_deleted_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEntryThumbForApiContract m_main_picture;
    bool m_main_picture_isSet;
    bool m_main_picture_isValid;

    qint32 m_merged_to;
    bool m_merged_to_isSet;
    bool m_merged_to_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAILocalizedStringContract> m_names;
    bool m_names_isSet;
    bool m_names_isValid;

    QString m_picture_mime;
    bool m_picture_mime_isSet;
    bool m_picture_mime_isValid;

    OAIArtistRelationsForApi m_relations;
    bool m_relations_isSet;
    bool m_relations_isValid;

    QDateTime m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    OAIEntryStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAITagUsageForApiContract> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList<OAIWebLinkForApiContract> m_web_links;
    bool m_web_links_isSet;
    bool m_web_links_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArtistForApiContract)

#endif // OAIArtistForApiContract_H
