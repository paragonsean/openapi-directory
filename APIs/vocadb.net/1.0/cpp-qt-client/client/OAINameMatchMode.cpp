/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINameMatchMode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINameMatchMode::OAINameMatchMode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINameMatchMode::OAINameMatchMode() {
    this->initializeModel();
}

OAINameMatchMode::~OAINameMatchMode() {}

void OAINameMatchMode::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAINameMatchMode::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAINameMatchMode::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Auto", Qt::CaseInsensitive) == 0) {
        m_value = eOAINameMatchMode::AUTO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Partial", Qt::CaseInsensitive) == 0) {
        m_value = eOAINameMatchMode::PARTIAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("StartsWith", Qt::CaseInsensitive) == 0) {
        m_value = eOAINameMatchMode::STARTSWITH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Exact", Qt::CaseInsensitive) == 0) {
        m_value = eOAINameMatchMode::EXACT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Words", Qt::CaseInsensitive) == 0) {
        m_value = eOAINameMatchMode::WORDS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAINameMatchMode::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAINameMatchMode::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAINameMatchMode::AUTO:
            val = "Auto";
            break;
        case eOAINameMatchMode::PARTIAL:
            val = "Partial";
            break;
        case eOAINameMatchMode::STARTSWITH:
            val = "StartsWith";
            break;
        case eOAINameMatchMode::EXACT:
            val = "Exact";
            break;
        case eOAINameMatchMode::WORDS:
            val = "Words";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAINameMatchMode::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAINameMatchMode::eOAINameMatchMode OAINameMatchMode::getValue() const {
    return m_value;
}

void OAINameMatchMode::setValue(const OAINameMatchMode::eOAINameMatchMode& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAINameMatchMode::isSet() const {
    
    return m_value_isSet;
}

bool OAINameMatchMode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
