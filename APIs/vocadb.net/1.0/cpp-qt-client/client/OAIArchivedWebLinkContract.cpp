/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArchivedWebLinkContract.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArchivedWebLinkContract::OAIArchivedWebLinkContract(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArchivedWebLinkContract::OAIArchivedWebLinkContract() {
    this->initializeModel();
}

OAIArchivedWebLinkContract::~OAIArchivedWebLinkContract() {}

void OAIArchivedWebLinkContract::initializeModel() {

    m_category_isSet = false;
    m_category_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_disabled_isSet = false;
    m_disabled_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIArchivedWebLinkContract::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIArchivedWebLinkContract::fromJsonObject(QJsonObject json) {

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_disabled_isValid = ::OpenAPI::fromJsonValue(m_disabled, json[QString("disabled")]);
    m_disabled_isSet = !json[QString("disabled")].isNull() && m_disabled_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIArchivedWebLinkContract::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIArchivedWebLinkContract::asJsonObject() const {
    QJsonObject obj;
    if (m_category.isSet()) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_disabled_isSet) {
        obj.insert(QString("disabled"), ::OpenAPI::toJsonValue(m_disabled));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIWebLinkCategory OAIArchivedWebLinkContract::getCategory() const {
    return m_category;
}
void OAIArchivedWebLinkContract::setCategory(const OAIWebLinkCategory &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIArchivedWebLinkContract::is_category_Set() const{
    return m_category_isSet;
}

bool OAIArchivedWebLinkContract::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIArchivedWebLinkContract::getDescription() const {
    return m_description;
}
void OAIArchivedWebLinkContract::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIArchivedWebLinkContract::is_description_Set() const{
    return m_description_isSet;
}

bool OAIArchivedWebLinkContract::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIArchivedWebLinkContract::isDisabled() const {
    return m_disabled;
}
void OAIArchivedWebLinkContract::setDisabled(const bool &disabled) {
    m_disabled = disabled;
    m_disabled_isSet = true;
}

bool OAIArchivedWebLinkContract::is_disabled_Set() const{
    return m_disabled_isSet;
}

bool OAIArchivedWebLinkContract::is_disabled_Valid() const{
    return m_disabled_isValid;
}

QString OAIArchivedWebLinkContract::getUrl() const {
    return m_url;
}
void OAIArchivedWebLinkContract::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIArchivedWebLinkContract::is_url_Set() const{
    return m_url_isSet;
}

bool OAIArchivedWebLinkContract::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIArchivedWebLinkContract::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_category.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIArchivedWebLinkContract::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
