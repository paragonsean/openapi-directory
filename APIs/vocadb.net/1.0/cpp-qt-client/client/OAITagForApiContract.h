/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITagForApiContract.h
 *
 * 
 */

#ifndef OAITagForApiContract_H
#define OAITagForApiContract_H

#include <QJsonObject>

#include "OAIContentLanguageSelection.h"
#include "OAIEnglishTranslatedStringContract.h"
#include "OAIEntryStatus.h"
#include "OAIEntryThumbForApiContract.h"
#include "OAILocalizedStringWithIdContract.h"
#include "OAITagBaseContract.h"
#include "OAIWebLinkForApiContract.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITagBaseContract;
class OAIEntryThumbForApiContract;
class OAILocalizedStringWithIdContract;
class OAIEnglishTranslatedStringContract;
class OAIWebLinkForApiContract;

class OAITagForApiContract : public OAIObject {
public:
    OAITagForApiContract();
    OAITagForApiContract(QString json);
    ~OAITagForApiContract() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalNames() const;
    void setAdditionalNames(const QString &additional_names);
    bool is_additional_names_Set() const;
    bool is_additional_names_Valid() const;

    OAITagBaseContract getAliasedTo() const;
    void setAliasedTo(const OAITagBaseContract &aliased_to);
    bool is_aliased_to_Set() const;
    bool is_aliased_to_Valid() const;

    QString getCategoryName() const;
    void setCategoryName(const QString &category_name);
    bool is_category_name_Set() const;
    bool is_category_name_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    OAIContentLanguageSelection getDefaultNameLanguage() const;
    void setDefaultNameLanguage(const OAIContentLanguageSelection &default_name_language);
    bool is_default_name_language_Set() const;
    bool is_default_name_language_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEntryThumbForApiContract getMainPicture() const;
    void setMainPicture(const OAIEntryThumbForApiContract &main_picture);
    bool is_main_picture_Set() const;
    bool is_main_picture_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAILocalizedStringWithIdContract> getNames() const;
    void setNames(const QList<OAILocalizedStringWithIdContract> &names);
    bool is_names_Set() const;
    bool is_names_Valid() const;

    OAITagBaseContract getParent() const;
    void setParent(const OAITagBaseContract &parent);
    bool is_parent_Set() const;
    bool is_parent_Valid() const;

    QList<OAITagBaseContract> getRelatedTags() const;
    void setRelatedTags(const QList<OAITagBaseContract> &related_tags);
    bool is_related_tags_Set() const;
    bool is_related_tags_Valid() const;

    OAIEntryStatus getStatus() const;
    void setStatus(const OAIEntryStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTargets() const;
    void setTargets(const qint32 &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    OAIEnglishTranslatedStringContract getTranslatedDescription() const;
    void setTranslatedDescription(const OAIEnglishTranslatedStringContract &translated_description);
    bool is_translated_description_Set() const;
    bool is_translated_description_Valid() const;

    QString getUrlSlug() const;
    void setUrlSlug(const QString &url_slug);
    bool is_url_slug_Set() const;
    bool is_url_slug_Valid() const;

    qint32 getUsageCount() const;
    void setUsageCount(const qint32 &usage_count);
    bool is_usage_count_Set() const;
    bool is_usage_count_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList<OAIWebLinkForApiContract> getWebLinks() const;
    void setWebLinks(const QList<OAIWebLinkForApiContract> &web_links);
    bool is_web_links_Set() const;
    bool is_web_links_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_names;
    bool m_additional_names_isSet;
    bool m_additional_names_isValid;

    OAITagBaseContract m_aliased_to;
    bool m_aliased_to_isSet;
    bool m_aliased_to_isValid;

    QString m_category_name;
    bool m_category_name_isSet;
    bool m_category_name_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    OAIContentLanguageSelection m_default_name_language;
    bool m_default_name_language_isSet;
    bool m_default_name_language_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEntryThumbForApiContract m_main_picture;
    bool m_main_picture_isSet;
    bool m_main_picture_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAILocalizedStringWithIdContract> m_names;
    bool m_names_isSet;
    bool m_names_isValid;

    OAITagBaseContract m_parent;
    bool m_parent_isSet;
    bool m_parent_isValid;

    QList<OAITagBaseContract> m_related_tags;
    bool m_related_tags_isSet;
    bool m_related_tags_isValid;

    OAIEntryStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;

    OAIEnglishTranslatedStringContract m_translated_description;
    bool m_translated_description_isSet;
    bool m_translated_description_isValid;

    QString m_url_slug;
    bool m_url_slug_isSet;
    bool m_url_slug_isValid;

    qint32 m_usage_count;
    bool m_usage_count_isSet;
    bool m_usage_count_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList<OAIWebLinkForApiContract> m_web_links;
    bool m_web_links_isSet;
    bool m_web_links_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITagForApiContract)

#endif // OAITagForApiContract_H
