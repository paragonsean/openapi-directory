/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISongVoteRating.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISongVoteRating::OAISongVoteRating(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISongVoteRating::OAISongVoteRating() {
    this->initializeModel();
}

OAISongVoteRating::~OAISongVoteRating() {}

void OAISongVoteRating::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISongVoteRating::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISongVoteRating::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Nothing", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongVoteRating::NOTHING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Dislike", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongVoteRating::DISLIKE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Like", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongVoteRating::LIKE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Favorite", Qt::CaseInsensitive) == 0) {
        m_value = eOAISongVoteRating::FAVORITE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISongVoteRating::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISongVoteRating::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISongVoteRating::NOTHING:
            val = "Nothing";
            break;
        case eOAISongVoteRating::DISLIKE:
            val = "Dislike";
            break;
        case eOAISongVoteRating::LIKE:
            val = "Like";
            break;
        case eOAISongVoteRating::FAVORITE:
            val = "Favorite";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISongVoteRating::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISongVoteRating::eOAISongVoteRating OAISongVoteRating::getValue() const {
    return m_value;
}

void OAISongVoteRating::setValue(const OAISongVoteRating::eOAISongVoteRating& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISongVoteRating::isSet() const {
    
    return m_value_isSet;
}

bool OAISongVoteRating::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
