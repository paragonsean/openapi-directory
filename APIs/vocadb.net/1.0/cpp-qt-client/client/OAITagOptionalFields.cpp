/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITagOptionalFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITagOptionalFields::OAITagOptionalFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITagOptionalFields::OAITagOptionalFields() {
    this->initializeModel();
}

OAITagOptionalFields::~OAITagOptionalFields() {}

void OAITagOptionalFields::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITagOptionalFields::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITagOptionalFields::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AdditionalNames", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::ADDITIONALNAMES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AliasedTo", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::ALIASEDTO;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Description", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::DESCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("MainPicture", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::MAINPICTURE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Names", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::NAMES;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Parent", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::PARENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RelatedTags", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::RELATEDTAGS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("TranslatedDescription", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::TRANSLATEDDESCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("WebLinks", Qt::CaseInsensitive) == 0) {
        m_value = eOAITagOptionalFields::WEBLINKS;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITagOptionalFields::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITagOptionalFields::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITagOptionalFields::NONE:
            val = "None";
            break;
        case eOAITagOptionalFields::ADDITIONALNAMES:
            val = "AdditionalNames";
            break;
        case eOAITagOptionalFields::ALIASEDTO:
            val = "AliasedTo";
            break;
        case eOAITagOptionalFields::DESCRIPTION:
            val = "Description";
            break;
        case eOAITagOptionalFields::MAINPICTURE:
            val = "MainPicture";
            break;
        case eOAITagOptionalFields::NAMES:
            val = "Names";
            break;
        case eOAITagOptionalFields::PARENT:
            val = "Parent";
            break;
        case eOAITagOptionalFields::RELATEDTAGS:
            val = "RelatedTags";
            break;
        case eOAITagOptionalFields::TRANSLATEDDESCRIPTION:
            val = "TranslatedDescription";
            break;
        case eOAITagOptionalFields::WEBLINKS:
            val = "WebLinks";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITagOptionalFields::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITagOptionalFields::eOAITagOptionalFields OAITagOptionalFields::getValue() const {
    return m_value;
}

void OAITagOptionalFields::setValue(const OAITagOptionalFields::eOAITagOptionalFields& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITagOptionalFields::isSet() const {
    
    return m_value_isSet;
}

bool OAITagOptionalFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
