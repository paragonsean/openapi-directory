/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOldUsernameContract.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOldUsernameContract::OAIOldUsernameContract(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOldUsernameContract::OAIOldUsernameContract() {
    this->initializeModel();
}

OAIOldUsernameContract::~OAIOldUsernameContract() {}

void OAIOldUsernameContract::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_old_name_isSet = false;
    m_old_name_isValid = false;
}

void OAIOldUsernameContract::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOldUsernameContract::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_old_name_isValid = ::OpenAPI::fromJsonValue(m_old_name, json[QString("oldName")]);
    m_old_name_isSet = !json[QString("oldName")].isNull() && m_old_name_isValid;
}

QString OAIOldUsernameContract::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOldUsernameContract::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_old_name_isSet) {
        obj.insert(QString("oldName"), ::OpenAPI::toJsonValue(m_old_name));
    }
    return obj;
}

QDateTime OAIOldUsernameContract::getDate() const {
    return m_date;
}
void OAIOldUsernameContract::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIOldUsernameContract::is_date_Set() const{
    return m_date_isSet;
}

bool OAIOldUsernameContract::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIOldUsernameContract::getOldName() const {
    return m_old_name;
}
void OAIOldUsernameContract::setOldName(const QString &old_name) {
    m_old_name = old_name;
    m_old_name_isSet = true;
}

bool OAIOldUsernameContract::is_old_name_Set() const{
    return m_old_name_isSet;
}

bool OAIOldUsernameContract::is_old_name_Valid() const{
    return m_old_name_isValid;
}

bool OAIOldUsernameContract::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_old_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOldUsernameContract::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
