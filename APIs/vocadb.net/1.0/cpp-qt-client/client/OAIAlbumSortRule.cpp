/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAlbumSortRule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAlbumSortRule::OAIAlbumSortRule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAlbumSortRule::OAIAlbumSortRule() {
    this->initializeModel();
}

OAIAlbumSortRule::~OAIAlbumSortRule() {}

void OAIAlbumSortRule::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAlbumSortRule::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAlbumSortRule::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Name", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ReleaseDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::RELEASEDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("ReleaseDateWithNulls", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::RELEASEDATEWITHNULLS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("AdditionDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::ADDITIONDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RatingAverage", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::RATINGAVERAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RatingTotal", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::RATINGTOTAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("NameThenReleaseDate", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::NAMETHENRELEASEDATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("CollectionCount", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAlbumSortRule::COLLECTIONCOUNT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAlbumSortRule::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAlbumSortRule::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAlbumSortRule::NONE:
            val = "None";
            break;
        case eOAIAlbumSortRule::NAME:
            val = "Name";
            break;
        case eOAIAlbumSortRule::RELEASEDATE:
            val = "ReleaseDate";
            break;
        case eOAIAlbumSortRule::RELEASEDATEWITHNULLS:
            val = "ReleaseDateWithNulls";
            break;
        case eOAIAlbumSortRule::ADDITIONDATE:
            val = "AdditionDate";
            break;
        case eOAIAlbumSortRule::RATINGAVERAGE:
            val = "RatingAverage";
            break;
        case eOAIAlbumSortRule::RATINGTOTAL:
            val = "RatingTotal";
            break;
        case eOAIAlbumSortRule::NAMETHENRELEASEDATE:
            val = "NameThenReleaseDate";
            break;
        case eOAIAlbumSortRule::COLLECTIONCOUNT:
            val = "CollectionCount";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAlbumSortRule::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAlbumSortRule::eOAIAlbumSortRule OAIAlbumSortRule::getValue() const {
    return m_value;
}

void OAIAlbumSortRule::setValue(const OAIAlbumSortRule::eOAIAlbumSortRule& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAlbumSortRule::isSet() const {
    
    return m_value_isSet;
}

bool OAIAlbumSortRule::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
