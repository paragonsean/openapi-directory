/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEntryForApiContract.h
 *
 * 
 */

#ifndef OAIEntryForApiContract_H
#define OAIEntryForApiContract_H

#include <QJsonObject>

#include "OAIArchivedWebLinkContract.h"
#include "OAIArtistType.h"
#include "OAIContentLanguageSelection.h"
#include "OAIDiscType.h"
#include "OAIEntryStatus.h"
#include "OAIEntryThumbForApiContract.h"
#include "OAIEntryType.h"
#include "OAIEventCategory.h"
#include "OAILocalizedStringContract.h"
#include "OAIPVContract.h"
#include "OAISongListFeaturedCategory.h"
#include "OAISongType.h"
#include "OAITagUsageForApiContract.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEntryThumbForApiContract;
class OAILocalizedStringContract;
class OAIPVContract;
class OAITagUsageForApiContract;
class OAIArchivedWebLinkContract;

class OAIEntryForApiContract : public OAIObject {
public:
    OAIEntryForApiContract();
    OAIEntryForApiContract(QString json);
    ~OAIEntryForApiContract() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getActivityDate() const;
    void setActivityDate(const QDateTime &activity_date);
    bool is_activity_date_Set() const;
    bool is_activity_date_Valid() const;

    QString getAdditionalNames() const;
    void setAdditionalNames(const QString &additional_names);
    bool is_additional_names_Set() const;
    bool is_additional_names_Valid() const;

    QString getArtistString() const;
    void setArtistString(const QString &artist_string);
    bool is_artist_string_Set() const;
    bool is_artist_string_Valid() const;

    OAIArtistType getArtistType() const;
    void setArtistType(const OAIArtistType &artist_type);
    bool is_artist_type_Set() const;
    bool is_artist_type_Valid() const;

    QDateTime getCreateDate() const;
    void setCreateDate(const QDateTime &create_date);
    bool is_create_date_Set() const;
    bool is_create_date_Valid() const;

    QString getDefaultName() const;
    void setDefaultName(const QString &default_name);
    bool is_default_name_Set() const;
    bool is_default_name_Valid() const;

    OAIContentLanguageSelection getDefaultNameLanguage() const;
    void setDefaultNameLanguage(const OAIContentLanguageSelection &default_name_language);
    bool is_default_name_language_Set() const;
    bool is_default_name_language_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDiscType getDiscType() const;
    void setDiscType(const OAIDiscType &disc_type);
    bool is_disc_type_Set() const;
    bool is_disc_type_Valid() const;

    OAIEntryType getEntryType() const;
    void setEntryType(const OAIEntryType &entry_type);
    bool is_entry_type_Set() const;
    bool is_entry_type_Valid() const;

    OAIEventCategory getEventCategory() const;
    void setEventCategory(const OAIEventCategory &event_category);
    bool is_event_category_Set() const;
    bool is_event_category_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIEntryThumbForApiContract getMainPicture() const;
    void setMainPicture(const OAIEntryThumbForApiContract &main_picture);
    bool is_main_picture_Set() const;
    bool is_main_picture_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAILocalizedStringContract> getNames() const;
    void setNames(const QList<OAILocalizedStringContract> &names);
    bool is_names_Set() const;
    bool is_names_Valid() const;

    QList<OAIPVContract> getPvs() const;
    void setPvs(const QList<OAIPVContract> &pvs);
    bool is_pvs_Set() const;
    bool is_pvs_Valid() const;

    QString getReleaseEventSeriesName() const;
    void setReleaseEventSeriesName(const QString &release_event_series_name);
    bool is_release_event_series_name_Set() const;
    bool is_release_event_series_name_Valid() const;

    OAISongListFeaturedCategory getSongListFeaturedCategory() const;
    void setSongListFeaturedCategory(const OAISongListFeaturedCategory &song_list_featured_category);
    bool is_song_list_featured_category_Set() const;
    bool is_song_list_featured_category_Valid() const;

    OAISongType getSongType() const;
    void setSongType(const OAISongType &song_type);
    bool is_song_type_Set() const;
    bool is_song_type_Valid() const;

    OAIEntryStatus getStatus() const;
    void setStatus(const OAIEntryStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTagCategoryName() const;
    void setTagCategoryName(const QString &tag_category_name);
    bool is_tag_category_name_Set() const;
    bool is_tag_category_name_Valid() const;

    QList<OAITagUsageForApiContract> getTags() const;
    void setTags(const QList<OAITagUsageForApiContract> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getUrlSlug() const;
    void setUrlSlug(const QString &url_slug);
    bool is_url_slug_Set() const;
    bool is_url_slug_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QList<OAIArchivedWebLinkContract> getWebLinks() const;
    void setWebLinks(const QList<OAIArchivedWebLinkContract> &web_links);
    bool is_web_links_Set() const;
    bool is_web_links_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_activity_date;
    bool m_activity_date_isSet;
    bool m_activity_date_isValid;

    QString m_additional_names;
    bool m_additional_names_isSet;
    bool m_additional_names_isValid;

    QString m_artist_string;
    bool m_artist_string_isSet;
    bool m_artist_string_isValid;

    OAIArtistType m_artist_type;
    bool m_artist_type_isSet;
    bool m_artist_type_isValid;

    QDateTime m_create_date;
    bool m_create_date_isSet;
    bool m_create_date_isValid;

    QString m_default_name;
    bool m_default_name_isSet;
    bool m_default_name_isValid;

    OAIContentLanguageSelection m_default_name_language;
    bool m_default_name_language_isSet;
    bool m_default_name_language_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDiscType m_disc_type;
    bool m_disc_type_isSet;
    bool m_disc_type_isValid;

    OAIEntryType m_entry_type;
    bool m_entry_type_isSet;
    bool m_entry_type_isValid;

    OAIEventCategory m_event_category;
    bool m_event_category_isSet;
    bool m_event_category_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIEntryThumbForApiContract m_main_picture;
    bool m_main_picture_isSet;
    bool m_main_picture_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAILocalizedStringContract> m_names;
    bool m_names_isSet;
    bool m_names_isValid;

    QList<OAIPVContract> m_pvs;
    bool m_pvs_isSet;
    bool m_pvs_isValid;

    QString m_release_event_series_name;
    bool m_release_event_series_name_isSet;
    bool m_release_event_series_name_isValid;

    OAISongListFeaturedCategory m_song_list_featured_category;
    bool m_song_list_featured_category_isSet;
    bool m_song_list_featured_category_isValid;

    OAISongType m_song_type;
    bool m_song_type_isSet;
    bool m_song_type_isValid;

    OAIEntryStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_tag_category_name;
    bool m_tag_category_name_isSet;
    bool m_tag_category_name_isValid;

    QList<OAITagUsageForApiContract> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_url_slug;
    bool m_url_slug_isSet;
    bool m_url_slug_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QList<OAIArchivedWebLinkContract> m_web_links;
    bool m_web_links_isSet;
    bool m_web_links_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEntryForApiContract)

#endif // OAIEntryForApiContract_H
