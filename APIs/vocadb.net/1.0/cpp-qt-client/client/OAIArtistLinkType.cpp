/**
 * VocaDbWeb
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIArtistLinkType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIArtistLinkType::OAIArtistLinkType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIArtistLinkType::OAIArtistLinkType() {
    this->initializeModel();
}

OAIArtistLinkType::~OAIArtistLinkType() {}

void OAIArtistLinkType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIArtistLinkType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIArtistLinkType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("CharacterDesigner", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistLinkType::CHARACTERDESIGNER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Group", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistLinkType::GROUP;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Illustrator", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistLinkType::ILLUSTRATOR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Manager", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistLinkType::MANAGER;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("VoiceProvider", Qt::CaseInsensitive) == 0) {
        m_value = eOAIArtistLinkType::VOICEPROVIDER;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIArtistLinkType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIArtistLinkType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIArtistLinkType::CHARACTERDESIGNER:
            val = "CharacterDesigner";
            break;
        case eOAIArtistLinkType::GROUP:
            val = "Group";
            break;
        case eOAIArtistLinkType::ILLUSTRATOR:
            val = "Illustrator";
            break;
        case eOAIArtistLinkType::MANAGER:
            val = "Manager";
            break;
        case eOAIArtistLinkType::VOICEPROVIDER:
            val = "VoiceProvider";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIArtistLinkType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIArtistLinkType::eOAIArtistLinkType OAIArtistLinkType::getValue() const {
    return m_value;
}

void OAIArtistLinkType::setValue(const OAIArtistLinkType::eOAIArtistLinkType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIArtistLinkType::isSet() const {
    
    return m_value_isSet;
}

bool OAIArtistLinkType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
