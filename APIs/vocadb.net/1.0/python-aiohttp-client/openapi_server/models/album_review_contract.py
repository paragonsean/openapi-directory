# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_for_api_contract import UserForApiContract
from openapi_server import util


class AlbumReviewContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album_id: int=None, _date: datetime=None, id: int=None, language_code: str=None, text: str=None, title: str=None, user: UserForApiContract=None):
        """AlbumReviewContract - a model defined in OpenAPI

        :param album_id: The album_id of this AlbumReviewContract.
        :param _date: The _date of this AlbumReviewContract.
        :param id: The id of this AlbumReviewContract.
        :param language_code: The language_code of this AlbumReviewContract.
        :param text: The text of this AlbumReviewContract.
        :param title: The title of this AlbumReviewContract.
        :param user: The user of this AlbumReviewContract.
        """
        self.openapi_types = {
            'album_id': int,
            '_date': datetime,
            'id': int,
            'language_code': str,
            'text': str,
            'title': str,
            'user': UserForApiContract
        }

        self.attribute_map = {
            'album_id': 'albumId',
            '_date': 'date',
            'id': 'id',
            'language_code': 'languageCode',
            'text': 'text',
            'title': 'title',
            'user': 'user'
        }

        self._album_id = album_id
        self.__date = _date
        self._id = id
        self._language_code = language_code
        self._text = text
        self._title = title
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlbumReviewContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlbumReviewContract of this AlbumReviewContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album_id(self):
        """Gets the album_id of this AlbumReviewContract.


        :return: The album_id of this AlbumReviewContract.
        :rtype: int
        """
        return self._album_id

    @album_id.setter
    def album_id(self, album_id):
        """Sets the album_id of this AlbumReviewContract.


        :param album_id: The album_id of this AlbumReviewContract.
        :type album_id: int
        """

        self._album_id = album_id

    @property
    def _date(self):
        """Gets the _date of this AlbumReviewContract.


        :return: The _date of this AlbumReviewContract.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this AlbumReviewContract.


        :param _date: The _date of this AlbumReviewContract.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def id(self):
        """Gets the id of this AlbumReviewContract.


        :return: The id of this AlbumReviewContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlbumReviewContract.


        :param id: The id of this AlbumReviewContract.
        :type id: int
        """

        self._id = id

    @property
    def language_code(self):
        """Gets the language_code of this AlbumReviewContract.


        :return: The language_code of this AlbumReviewContract.
        :rtype: str
        """
        return self._language_code

    @language_code.setter
    def language_code(self, language_code):
        """Sets the language_code of this AlbumReviewContract.


        :param language_code: The language_code of this AlbumReviewContract.
        :type language_code: str
        """

        self._language_code = language_code

    @property
    def text(self):
        """Gets the text of this AlbumReviewContract.


        :return: The text of this AlbumReviewContract.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this AlbumReviewContract.


        :param text: The text of this AlbumReviewContract.
        :type text: str
        """

        self._text = text

    @property
    def title(self):
        """Gets the title of this AlbumReviewContract.


        :return: The title of this AlbumReviewContract.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this AlbumReviewContract.


        :param title: The title of this AlbumReviewContract.
        :type title: str
        """

        self._title = title

    @property
    def user(self):
        """Gets the user of this AlbumReviewContract.


        :return: The user of this AlbumReviewContract.
        :rtype: UserForApiContract
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AlbumReviewContract.


        :param user: The user of this AlbumReviewContract.
        :type user: UserForApiContract
        """

        self._user = user
