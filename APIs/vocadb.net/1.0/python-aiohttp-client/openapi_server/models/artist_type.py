# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtistType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    UNKNOWN = 'Unknown'
    CIRCLE = 'Circle'
    LABEL = 'Label'
    PRODUCER = 'Producer'
    ANIMATOR = 'Animator'
    ILLUSTRATOR = 'Illustrator'
    LYRICIST = 'Lyricist'
    VOCALOID = 'Vocaloid'
    UTAU = 'UTAU'
    CEVIO = 'CeVIO'
    OTHERVOICESYNTHESIZER = 'OtherVoiceSynthesizer'
    OTHERVOCALIST = 'OtherVocalist'
    OTHERGROUP = 'OtherGroup'
    OTHERINDIVIDUAL = 'OtherIndividual'
    UTAITE = 'Utaite'
    BAND = 'Band'
    VOCALIST = 'Vocalist'
    CHARACTER = 'Character'
    SYNTHESIZERV = 'SynthesizerV'
    COVERARTIST = 'CoverArtist'

    def __init__(self):
        """ArtistType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtistType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtistType of this ArtistType.
        """
        return util.deserialize_model(dikt, cls)
