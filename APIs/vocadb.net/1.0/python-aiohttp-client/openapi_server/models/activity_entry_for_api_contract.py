# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.archived_object_version_for_api_contract import ArchivedObjectVersionForApiContract
from openapi_server.models.entry_edit_event import EntryEditEvent
from openapi_server.models.entry_for_api_contract import EntryForApiContract
from openapi_server.models.user_for_api_contract import UserForApiContract
from openapi_server import util


class ActivityEntryForApiContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archived_version: ArchivedObjectVersionForApiContract=None, author: UserForApiContract=None, create_date: datetime=None, edit_event: EntryEditEvent=None, entry: EntryForApiContract=None):
        """ActivityEntryForApiContract - a model defined in OpenAPI

        :param archived_version: The archived_version of this ActivityEntryForApiContract.
        :param author: The author of this ActivityEntryForApiContract.
        :param create_date: The create_date of this ActivityEntryForApiContract.
        :param edit_event: The edit_event of this ActivityEntryForApiContract.
        :param entry: The entry of this ActivityEntryForApiContract.
        """
        self.openapi_types = {
            'archived_version': ArchivedObjectVersionForApiContract,
            'author': UserForApiContract,
            'create_date': datetime,
            'edit_event': EntryEditEvent,
            'entry': EntryForApiContract
        }

        self.attribute_map = {
            'archived_version': 'archivedVersion',
            'author': 'author',
            'create_date': 'createDate',
            'edit_event': 'editEvent',
            'entry': 'entry'
        }

        self._archived_version = archived_version
        self._author = author
        self._create_date = create_date
        self._edit_event = edit_event
        self._entry = entry

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivityEntryForApiContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ActivityEntryForApiContract of this ActivityEntryForApiContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archived_version(self):
        """Gets the archived_version of this ActivityEntryForApiContract.


        :return: The archived_version of this ActivityEntryForApiContract.
        :rtype: ArchivedObjectVersionForApiContract
        """
        return self._archived_version

    @archived_version.setter
    def archived_version(self, archived_version):
        """Sets the archived_version of this ActivityEntryForApiContract.


        :param archived_version: The archived_version of this ActivityEntryForApiContract.
        :type archived_version: ArchivedObjectVersionForApiContract
        """

        self._archived_version = archived_version

    @property
    def author(self):
        """Gets the author of this ActivityEntryForApiContract.


        :return: The author of this ActivityEntryForApiContract.
        :rtype: UserForApiContract
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this ActivityEntryForApiContract.


        :param author: The author of this ActivityEntryForApiContract.
        :type author: UserForApiContract
        """

        self._author = author

    @property
    def create_date(self):
        """Gets the create_date of this ActivityEntryForApiContract.


        :return: The create_date of this ActivityEntryForApiContract.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this ActivityEntryForApiContract.


        :param create_date: The create_date of this ActivityEntryForApiContract.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def edit_event(self):
        """Gets the edit_event of this ActivityEntryForApiContract.


        :return: The edit_event of this ActivityEntryForApiContract.
        :rtype: EntryEditEvent
        """
        return self._edit_event

    @edit_event.setter
    def edit_event(self, edit_event):
        """Sets the edit_event of this ActivityEntryForApiContract.


        :param edit_event: The edit_event of this ActivityEntryForApiContract.
        :type edit_event: EntryEditEvent
        """

        self._edit_event = edit_event

    @property
    def entry(self):
        """Gets the entry of this ActivityEntryForApiContract.


        :return: The entry of this ActivityEntryForApiContract.
        :rtype: EntryForApiContract
        """
        return self._entry

    @entry.setter
    def entry(self, entry):
        """Sets the entry of this ActivityEntryForApiContract.


        :param entry: The entry of this ActivityEntryForApiContract.
        :type entry: EntryForApiContract
        """

        self._entry = entry
