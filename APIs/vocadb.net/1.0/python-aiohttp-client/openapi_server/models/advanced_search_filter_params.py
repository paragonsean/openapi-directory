# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advanced_filter_type import AdvancedFilterType
from openapi_server import util


class AdvancedSearchFilterParams(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filter_type: AdvancedFilterType=None, negate: bool=None, param: str=None):
        """AdvancedSearchFilterParams - a model defined in OpenAPI

        :param filter_type: The filter_type of this AdvancedSearchFilterParams.
        :param negate: The negate of this AdvancedSearchFilterParams.
        :param param: The param of this AdvancedSearchFilterParams.
        """
        self.openapi_types = {
            'filter_type': AdvancedFilterType,
            'negate': bool,
            'param': str
        }

        self.attribute_map = {
            'filter_type': 'filterType',
            'negate': 'negate',
            'param': 'param'
        }

        self._filter_type = filter_type
        self._negate = negate
        self._param = param

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AdvancedSearchFilterParams':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AdvancedSearchFilterParams of this AdvancedSearchFilterParams.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filter_type(self):
        """Gets the filter_type of this AdvancedSearchFilterParams.


        :return: The filter_type of this AdvancedSearchFilterParams.
        :rtype: AdvancedFilterType
        """
        return self._filter_type

    @filter_type.setter
    def filter_type(self, filter_type):
        """Sets the filter_type of this AdvancedSearchFilterParams.


        :param filter_type: The filter_type of this AdvancedSearchFilterParams.
        :type filter_type: AdvancedFilterType
        """

        self._filter_type = filter_type

    @property
    def negate(self):
        """Gets the negate of this AdvancedSearchFilterParams.


        :return: The negate of this AdvancedSearchFilterParams.
        :rtype: bool
        """
        return self._negate

    @negate.setter
    def negate(self, negate):
        """Sets the negate of this AdvancedSearchFilterParams.


        :param negate: The negate of this AdvancedSearchFilterParams.
        :type negate: bool
        """

        self._negate = negate

    @property
    def param(self):
        """Gets the param of this AdvancedSearchFilterParams.


        :return: The param of this AdvancedSearchFilterParams.
        :rtype: str
        """
        return self._param

    @param.setter
    def param(self, param):
        """Sets the param of this AdvancedSearchFilterParams.


        :param param: The param of this AdvancedSearchFilterParams.
        :type param: str
        """

        self._param = param
