# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_for_api_contract import UserForApiContract
from openapi_server import util


class DiscussionFolderContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, id: int=None, last_topic_author: UserForApiContract=None, last_topic_date: datetime=None, name: str=None, topic_count: int=None):
        """DiscussionFolderContract - a model defined in OpenAPI

        :param description: The description of this DiscussionFolderContract.
        :param id: The id of this DiscussionFolderContract.
        :param last_topic_author: The last_topic_author of this DiscussionFolderContract.
        :param last_topic_date: The last_topic_date of this DiscussionFolderContract.
        :param name: The name of this DiscussionFolderContract.
        :param topic_count: The topic_count of this DiscussionFolderContract.
        """
        self.openapi_types = {
            'description': str,
            'id': int,
            'last_topic_author': UserForApiContract,
            'last_topic_date': datetime,
            'name': str,
            'topic_count': int
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'last_topic_author': 'lastTopicAuthor',
            'last_topic_date': 'lastTopicDate',
            'name': 'name',
            'topic_count': 'topicCount'
        }

        self._description = description
        self._id = id
        self._last_topic_author = last_topic_author
        self._last_topic_date = last_topic_date
        self._name = name
        self._topic_count = topic_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DiscussionFolderContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DiscussionFolderContract of this DiscussionFolderContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this DiscussionFolderContract.


        :return: The description of this DiscussionFolderContract.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DiscussionFolderContract.


        :param description: The description of this DiscussionFolderContract.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this DiscussionFolderContract.


        :return: The id of this DiscussionFolderContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DiscussionFolderContract.


        :param id: The id of this DiscussionFolderContract.
        :type id: int
        """

        self._id = id

    @property
    def last_topic_author(self):
        """Gets the last_topic_author of this DiscussionFolderContract.


        :return: The last_topic_author of this DiscussionFolderContract.
        :rtype: UserForApiContract
        """
        return self._last_topic_author

    @last_topic_author.setter
    def last_topic_author(self, last_topic_author):
        """Sets the last_topic_author of this DiscussionFolderContract.


        :param last_topic_author: The last_topic_author of this DiscussionFolderContract.
        :type last_topic_author: UserForApiContract
        """

        self._last_topic_author = last_topic_author

    @property
    def last_topic_date(self):
        """Gets the last_topic_date of this DiscussionFolderContract.


        :return: The last_topic_date of this DiscussionFolderContract.
        :rtype: datetime
        """
        return self._last_topic_date

    @last_topic_date.setter
    def last_topic_date(self, last_topic_date):
        """Sets the last_topic_date of this DiscussionFolderContract.


        :param last_topic_date: The last_topic_date of this DiscussionFolderContract.
        :type last_topic_date: datetime
        """

        self._last_topic_date = last_topic_date

    @property
    def name(self):
        """Gets the name of this DiscussionFolderContract.


        :return: The name of this DiscussionFolderContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DiscussionFolderContract.


        :param name: The name of this DiscussionFolderContract.
        :type name: str
        """

        self._name = name

    @property
    def topic_count(self):
        """Gets the topic_count of this DiscussionFolderContract.


        :return: The topic_count of this DiscussionFolderContract.
        :rtype: int
        """
        return self._topic_count

    @topic_count.setter
    def topic_count(self, topic_count):
        """Sets the topic_count of this DiscussionFolderContract.


        :param topic_count: The topic_count of this DiscussionFolderContract.
        :type topic_count: int
        """

        self._topic_count = topic_count
