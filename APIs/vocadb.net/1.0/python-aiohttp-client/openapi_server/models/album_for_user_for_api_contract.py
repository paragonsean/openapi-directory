# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.album_for_api_contract import AlbumForApiContract
from openapi_server.models.media_type import MediaType
from openapi_server.models.purchase_status import PurchaseStatus
from openapi_server.models.user_for_api_contract import UserForApiContract
from openapi_server import util


class AlbumForUserForApiContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, album: AlbumForApiContract=None, media_type: MediaType=None, purchase_status: PurchaseStatus=None, rating: int=None, user: UserForApiContract=None):
        """AlbumForUserForApiContract - a model defined in OpenAPI

        :param album: The album of this AlbumForUserForApiContract.
        :param media_type: The media_type of this AlbumForUserForApiContract.
        :param purchase_status: The purchase_status of this AlbumForUserForApiContract.
        :param rating: The rating of this AlbumForUserForApiContract.
        :param user: The user of this AlbumForUserForApiContract.
        """
        self.openapi_types = {
            'album': AlbumForApiContract,
            'media_type': MediaType,
            'purchase_status': PurchaseStatus,
            'rating': int,
            'user': UserForApiContract
        }

        self.attribute_map = {
            'album': 'album',
            'media_type': 'mediaType',
            'purchase_status': 'purchaseStatus',
            'rating': 'rating',
            'user': 'user'
        }

        self._album = album
        self._media_type = media_type
        self._purchase_status = purchase_status
        self._rating = rating
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlbumForUserForApiContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlbumForUserForApiContract of this AlbumForUserForApiContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def album(self):
        """Gets the album of this AlbumForUserForApiContract.


        :return: The album of this AlbumForUserForApiContract.
        :rtype: AlbumForApiContract
        """
        return self._album

    @album.setter
    def album(self, album):
        """Sets the album of this AlbumForUserForApiContract.


        :param album: The album of this AlbumForUserForApiContract.
        :type album: AlbumForApiContract
        """

        self._album = album

    @property
    def media_type(self):
        """Gets the media_type of this AlbumForUserForApiContract.


        :return: The media_type of this AlbumForUserForApiContract.
        :rtype: MediaType
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this AlbumForUserForApiContract.


        :param media_type: The media_type of this AlbumForUserForApiContract.
        :type media_type: MediaType
        """

        self._media_type = media_type

    @property
    def purchase_status(self):
        """Gets the purchase_status of this AlbumForUserForApiContract.


        :return: The purchase_status of this AlbumForUserForApiContract.
        :rtype: PurchaseStatus
        """
        return self._purchase_status

    @purchase_status.setter
    def purchase_status(self, purchase_status):
        """Sets the purchase_status of this AlbumForUserForApiContract.


        :param purchase_status: The purchase_status of this AlbumForUserForApiContract.
        :type purchase_status: PurchaseStatus
        """

        self._purchase_status = purchase_status

    @property
    def rating(self):
        """Gets the rating of this AlbumForUserForApiContract.


        :return: The rating of this AlbumForUserForApiContract.
        :rtype: int
        """
        return self._rating

    @rating.setter
    def rating(self, rating):
        """Sets the rating of this AlbumForUserForApiContract.


        :param rating: The rating of this AlbumForUserForApiContract.
        :type rating: int
        """

        self._rating = rating

    @property
    def user(self):
        """Gets the user of this AlbumForUserForApiContract.


        :return: The user of this AlbumForUserForApiContract.
        :rtype: UserForApiContract
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AlbumForUserForApiContract.


        :param user: The user of this AlbumForUserForApiContract.
        :type user: UserForApiContract
        """

        self._user = user
