# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_language_selection import ContentLanguageSelection
from openapi_server.models.entry_status import EntryStatus
from openapi_server.models.entry_thumb_for_api_contract import EntryThumbForApiContract
from openapi_server.models.event_category import EventCategory
from openapi_server.models.localized_string_with_id_contract import LocalizedStringWithIdContract
from openapi_server.models.web_link_for_api_contract import WebLinkForApiContract
from openapi_server import util


class ReleaseEventSeriesForEditForApiContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: EventCategory=None, default_name_language: ContentLanguageSelection=None, deleted: bool=None, description: str=None, id: int=None, main_picture: EntryThumbForApiContract=None, name: str=None, names: List[LocalizedStringWithIdContract]=None, status: EntryStatus=None, web_links: List[WebLinkForApiContract]=None):
        """ReleaseEventSeriesForEditForApiContract - a model defined in OpenAPI

        :param category: The category of this ReleaseEventSeriesForEditForApiContract.
        :param default_name_language: The default_name_language of this ReleaseEventSeriesForEditForApiContract.
        :param deleted: The deleted of this ReleaseEventSeriesForEditForApiContract.
        :param description: The description of this ReleaseEventSeriesForEditForApiContract.
        :param id: The id of this ReleaseEventSeriesForEditForApiContract.
        :param main_picture: The main_picture of this ReleaseEventSeriesForEditForApiContract.
        :param name: The name of this ReleaseEventSeriesForEditForApiContract.
        :param names: The names of this ReleaseEventSeriesForEditForApiContract.
        :param status: The status of this ReleaseEventSeriesForEditForApiContract.
        :param web_links: The web_links of this ReleaseEventSeriesForEditForApiContract.
        """
        self.openapi_types = {
            'category': EventCategory,
            'default_name_language': ContentLanguageSelection,
            'deleted': bool,
            'description': str,
            'id': int,
            'main_picture': EntryThumbForApiContract,
            'name': str,
            'names': List[LocalizedStringWithIdContract],
            'status': EntryStatus,
            'web_links': List[WebLinkForApiContract]
        }

        self.attribute_map = {
            'category': 'category',
            'default_name_language': 'defaultNameLanguage',
            'deleted': 'deleted',
            'description': 'description',
            'id': 'id',
            'main_picture': 'mainPicture',
            'name': 'name',
            'names': 'names',
            'status': 'status',
            'web_links': 'webLinks'
        }

        self._category = category
        self._default_name_language = default_name_language
        self._deleted = deleted
        self._description = description
        self._id = id
        self._main_picture = main_picture
        self._name = name
        self._names = names
        self._status = status
        self._web_links = web_links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReleaseEventSeriesForEditForApiContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReleaseEventSeriesForEditForApiContract of this ReleaseEventSeriesForEditForApiContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this ReleaseEventSeriesForEditForApiContract.


        :return: The category of this ReleaseEventSeriesForEditForApiContract.
        :rtype: EventCategory
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this ReleaseEventSeriesForEditForApiContract.


        :param category: The category of this ReleaseEventSeriesForEditForApiContract.
        :type category: EventCategory
        """

        self._category = category

    @property
    def default_name_language(self):
        """Gets the default_name_language of this ReleaseEventSeriesForEditForApiContract.


        :return: The default_name_language of this ReleaseEventSeriesForEditForApiContract.
        :rtype: ContentLanguageSelection
        """
        return self._default_name_language

    @default_name_language.setter
    def default_name_language(self, default_name_language):
        """Sets the default_name_language of this ReleaseEventSeriesForEditForApiContract.


        :param default_name_language: The default_name_language of this ReleaseEventSeriesForEditForApiContract.
        :type default_name_language: ContentLanguageSelection
        """

        self._default_name_language = default_name_language

    @property
    def deleted(self):
        """Gets the deleted of this ReleaseEventSeriesForEditForApiContract.


        :return: The deleted of this ReleaseEventSeriesForEditForApiContract.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this ReleaseEventSeriesForEditForApiContract.


        :param deleted: The deleted of this ReleaseEventSeriesForEditForApiContract.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def description(self):
        """Gets the description of this ReleaseEventSeriesForEditForApiContract.


        :return: The description of this ReleaseEventSeriesForEditForApiContract.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ReleaseEventSeriesForEditForApiContract.


        :param description: The description of this ReleaseEventSeriesForEditForApiContract.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this ReleaseEventSeriesForEditForApiContract.


        :return: The id of this ReleaseEventSeriesForEditForApiContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ReleaseEventSeriesForEditForApiContract.


        :param id: The id of this ReleaseEventSeriesForEditForApiContract.
        :type id: int
        """

        self._id = id

    @property
    def main_picture(self):
        """Gets the main_picture of this ReleaseEventSeriesForEditForApiContract.


        :return: The main_picture of this ReleaseEventSeriesForEditForApiContract.
        :rtype: EntryThumbForApiContract
        """
        return self._main_picture

    @main_picture.setter
    def main_picture(self, main_picture):
        """Sets the main_picture of this ReleaseEventSeriesForEditForApiContract.


        :param main_picture: The main_picture of this ReleaseEventSeriesForEditForApiContract.
        :type main_picture: EntryThumbForApiContract
        """

        self._main_picture = main_picture

    @property
    def name(self):
        """Gets the name of this ReleaseEventSeriesForEditForApiContract.


        :return: The name of this ReleaseEventSeriesForEditForApiContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ReleaseEventSeriesForEditForApiContract.


        :param name: The name of this ReleaseEventSeriesForEditForApiContract.
        :type name: str
        """

        self._name = name

    @property
    def names(self):
        """Gets the names of this ReleaseEventSeriesForEditForApiContract.


        :return: The names of this ReleaseEventSeriesForEditForApiContract.
        :rtype: List[LocalizedStringWithIdContract]
        """
        return self._names

    @names.setter
    def names(self, names):
        """Sets the names of this ReleaseEventSeriesForEditForApiContract.


        :param names: The names of this ReleaseEventSeriesForEditForApiContract.
        :type names: List[LocalizedStringWithIdContract]
        """

        self._names = names

    @property
    def status(self):
        """Gets the status of this ReleaseEventSeriesForEditForApiContract.


        :return: The status of this ReleaseEventSeriesForEditForApiContract.
        :rtype: EntryStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ReleaseEventSeriesForEditForApiContract.


        :param status: The status of this ReleaseEventSeriesForEditForApiContract.
        :type status: EntryStatus
        """

        self._status = status

    @property
    def web_links(self):
        """Gets the web_links of this ReleaseEventSeriesForEditForApiContract.


        :return: The web_links of this ReleaseEventSeriesForEditForApiContract.
        :rtype: List[WebLinkForApiContract]
        """
        return self._web_links

    @web_links.setter
    def web_links(self, web_links):
        """Sets the web_links of this ReleaseEventSeriesForEditForApiContract.


        :param web_links: The web_links of this ReleaseEventSeriesForEditForApiContract.
        :type web_links: List[WebLinkForApiContract]
        """

        self._web_links = web_links
