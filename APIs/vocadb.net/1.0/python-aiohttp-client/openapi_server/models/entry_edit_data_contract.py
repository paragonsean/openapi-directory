# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntryEditDataContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, time: datetime=None, user_id: int=None, user_name: str=None):
        """EntryEditDataContract - a model defined in OpenAPI

        :param time: The time of this EntryEditDataContract.
        :param user_id: The user_id of this EntryEditDataContract.
        :param user_name: The user_name of this EntryEditDataContract.
        """
        self.openapi_types = {
            'time': datetime,
            'user_id': int,
            'user_name': str
        }

        self.attribute_map = {
            'time': 'time',
            'user_id': 'userId',
            'user_name': 'userName'
        }

        self._time = time
        self._user_id = user_id
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntryEditDataContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntryEditDataContract of this EntryEditDataContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def time(self):
        """Gets the time of this EntryEditDataContract.


        :return: The time of this EntryEditDataContract.
        :rtype: datetime
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this EntryEditDataContract.


        :param time: The time of this EntryEditDataContract.
        :type time: datetime
        """

        self._time = time

    @property
    def user_id(self):
        """Gets the user_id of this EntryEditDataContract.


        :return: The user_id of this EntryEditDataContract.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this EntryEditDataContract.


        :param user_id: The user_id of this EntryEditDataContract.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this EntryEditDataContract.


        :return: The user_name of this EntryEditDataContract.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this EntryEditDataContract.


        :param user_name: The user_name of this EntryEditDataContract.
        :type user_name: str
        """

        self._user_name = user_name
