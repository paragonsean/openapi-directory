# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.song_in_list_for_api_contract import SongInListForApiContract
from openapi_server import util


class SongInListForApiContractPartialFindResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[SongInListForApiContract]=None, term: str=None, total_count: int=None):
        """SongInListForApiContractPartialFindResult - a model defined in OpenAPI

        :param items: The items of this SongInListForApiContractPartialFindResult.
        :param term: The term of this SongInListForApiContractPartialFindResult.
        :param total_count: The total_count of this SongInListForApiContractPartialFindResult.
        """
        self.openapi_types = {
            'items': List[SongInListForApiContract],
            'term': str,
            'total_count': int
        }

        self.attribute_map = {
            'items': 'items',
            'term': 'term',
            'total_count': 'totalCount'
        }

        self._items = items
        self._term = term
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SongInListForApiContractPartialFindResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SongInListForApiContractPartialFindResult of this SongInListForApiContractPartialFindResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this SongInListForApiContractPartialFindResult.


        :return: The items of this SongInListForApiContractPartialFindResult.
        :rtype: List[SongInListForApiContract]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this SongInListForApiContractPartialFindResult.


        :param items: The items of this SongInListForApiContractPartialFindResult.
        :type items: List[SongInListForApiContract]
        """

        self._items = items

    @property
    def term(self):
        """Gets the term of this SongInListForApiContractPartialFindResult.


        :return: The term of this SongInListForApiContractPartialFindResult.
        :rtype: str
        """
        return self._term

    @term.setter
    def term(self, term):
        """Sets the term of this SongInListForApiContractPartialFindResult.


        :param term: The term of this SongInListForApiContractPartialFindResult.
        :type term: str
        """

        self._term = term

    @property
    def total_count(self):
        """Gets the total_count of this SongInListForApiContractPartialFindResult.


        :return: The total_count of this SongInListForApiContractPartialFindResult.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this SongInListForApiContractPartialFindResult.


        :param total_count: The total_count of this SongInListForApiContractPartialFindResult.
        :type total_count: int
        """

        self._total_count = total_count
