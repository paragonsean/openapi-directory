# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtistRoles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    DEFAULT = 'Default'
    ANIMATOR = 'Animator'
    ARRANGER = 'Arranger'
    COMPOSER = 'Composer'
    DISTRIBUTOR = 'Distributor'
    ILLUSTRATOR = 'Illustrator'
    INSTRUMENTALIST = 'Instrumentalist'
    LYRICIST = 'Lyricist'
    MASTERING = 'Mastering'
    PUBLISHER = 'Publisher'
    VOCALIST = 'Vocalist'
    VOICEMANIPULATOR = 'VoiceManipulator'
    OTHER = 'Other'
    MIXER = 'Mixer'
    CHORUS = 'Chorus'
    ENCODER = 'Encoder'
    VOCALDATAPROVIDER = 'VocalDataProvider'

    def __init__(self):
        """ArtistRoles - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtistRoles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtistRoles of this ArtistRoles.
        """
        return util.deserialize_model(dikt, cls)
