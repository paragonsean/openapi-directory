# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EntryThumbForApiContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mime: str=None, name: str=None, url_original: str=None, url_small_thumb: str=None, url_thumb: str=None, url_tiny_thumb: str=None):
        """EntryThumbForApiContract - a model defined in OpenAPI

        :param mime: The mime of this EntryThumbForApiContract.
        :param name: The name of this EntryThumbForApiContract.
        :param url_original: The url_original of this EntryThumbForApiContract.
        :param url_small_thumb: The url_small_thumb of this EntryThumbForApiContract.
        :param url_thumb: The url_thumb of this EntryThumbForApiContract.
        :param url_tiny_thumb: The url_tiny_thumb of this EntryThumbForApiContract.
        """
        self.openapi_types = {
            'mime': str,
            'name': str,
            'url_original': str,
            'url_small_thumb': str,
            'url_thumb': str,
            'url_tiny_thumb': str
        }

        self.attribute_map = {
            'mime': 'mime',
            'name': 'name',
            'url_original': 'urlOriginal',
            'url_small_thumb': 'urlSmallThumb',
            'url_thumb': 'urlThumb',
            'url_tiny_thumb': 'urlTinyThumb'
        }

        self._mime = mime
        self._name = name
        self._url_original = url_original
        self._url_small_thumb = url_small_thumb
        self._url_thumb = url_thumb
        self._url_tiny_thumb = url_tiny_thumb

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntryThumbForApiContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntryThumbForApiContract of this EntryThumbForApiContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mime(self):
        """Gets the mime of this EntryThumbForApiContract.


        :return: The mime of this EntryThumbForApiContract.
        :rtype: str
        """
        return self._mime

    @mime.setter
    def mime(self, mime):
        """Sets the mime of this EntryThumbForApiContract.


        :param mime: The mime of this EntryThumbForApiContract.
        :type mime: str
        """

        self._mime = mime

    @property
    def name(self):
        """Gets the name of this EntryThumbForApiContract.


        :return: The name of this EntryThumbForApiContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EntryThumbForApiContract.


        :param name: The name of this EntryThumbForApiContract.
        :type name: str
        """

        self._name = name

    @property
    def url_original(self):
        """Gets the url_original of this EntryThumbForApiContract.


        :return: The url_original of this EntryThumbForApiContract.
        :rtype: str
        """
        return self._url_original

    @url_original.setter
    def url_original(self, url_original):
        """Sets the url_original of this EntryThumbForApiContract.


        :param url_original: The url_original of this EntryThumbForApiContract.
        :type url_original: str
        """

        self._url_original = url_original

    @property
    def url_small_thumb(self):
        """Gets the url_small_thumb of this EntryThumbForApiContract.


        :return: The url_small_thumb of this EntryThumbForApiContract.
        :rtype: str
        """
        return self._url_small_thumb

    @url_small_thumb.setter
    def url_small_thumb(self, url_small_thumb):
        """Sets the url_small_thumb of this EntryThumbForApiContract.


        :param url_small_thumb: The url_small_thumb of this EntryThumbForApiContract.
        :type url_small_thumb: str
        """

        self._url_small_thumb = url_small_thumb

    @property
    def url_thumb(self):
        """Gets the url_thumb of this EntryThumbForApiContract.


        :return: The url_thumb of this EntryThumbForApiContract.
        :rtype: str
        """
        return self._url_thumb

    @url_thumb.setter
    def url_thumb(self, url_thumb):
        """Sets the url_thumb of this EntryThumbForApiContract.


        :param url_thumb: The url_thumb of this EntryThumbForApiContract.
        :type url_thumb: str
        """

        self._url_thumb = url_thumb

    @property
    def url_tiny_thumb(self):
        """Gets the url_tiny_thumb of this EntryThumbForApiContract.


        :return: The url_tiny_thumb of this EntryThumbForApiContract.
        :rtype: str
        """
        return self._url_tiny_thumb

    @url_tiny_thumb.setter
    def url_tiny_thumb(self, url_tiny_thumb):
        """Sets the url_tiny_thumb of this EntryThumbForApiContract.


        :param url_tiny_thumb: The url_tiny_thumb of this EntryThumbForApiContract.
        :type url_tiny_thumb: str
        """

        self._url_tiny_thumb = url_tiny_thumb
