# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.album_for_api_contract import AlbumForApiContract
from openapi_server.models.release_event_for_api_contract import ReleaseEventForApiContract
from openapi_server.models.song_for_api_contract import SongForApiContract
from openapi_server import util


class ArtistRelationsForApi(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, latest_albums: List[AlbumForApiContract]=None, latest_events: List[ReleaseEventForApiContract]=None, latest_songs: List[SongForApiContract]=None, popular_albums: List[AlbumForApiContract]=None, popular_songs: List[SongForApiContract]=None):
        """ArtistRelationsForApi - a model defined in OpenAPI

        :param latest_albums: The latest_albums of this ArtistRelationsForApi.
        :param latest_events: The latest_events of this ArtistRelationsForApi.
        :param latest_songs: The latest_songs of this ArtistRelationsForApi.
        :param popular_albums: The popular_albums of this ArtistRelationsForApi.
        :param popular_songs: The popular_songs of this ArtistRelationsForApi.
        """
        self.openapi_types = {
            'latest_albums': List[AlbumForApiContract],
            'latest_events': List[ReleaseEventForApiContract],
            'latest_songs': List[SongForApiContract],
            'popular_albums': List[AlbumForApiContract],
            'popular_songs': List[SongForApiContract]
        }

        self.attribute_map = {
            'latest_albums': 'latestAlbums',
            'latest_events': 'latestEvents',
            'latest_songs': 'latestSongs',
            'popular_albums': 'popularAlbums',
            'popular_songs': 'popularSongs'
        }

        self._latest_albums = latest_albums
        self._latest_events = latest_events
        self._latest_songs = latest_songs
        self._popular_albums = popular_albums
        self._popular_songs = popular_songs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtistRelationsForApi':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtistRelationsForApi of this ArtistRelationsForApi.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def latest_albums(self):
        """Gets the latest_albums of this ArtistRelationsForApi.


        :return: The latest_albums of this ArtistRelationsForApi.
        :rtype: List[AlbumForApiContract]
        """
        return self._latest_albums

    @latest_albums.setter
    def latest_albums(self, latest_albums):
        """Sets the latest_albums of this ArtistRelationsForApi.


        :param latest_albums: The latest_albums of this ArtistRelationsForApi.
        :type latest_albums: List[AlbumForApiContract]
        """

        self._latest_albums = latest_albums

    @property
    def latest_events(self):
        """Gets the latest_events of this ArtistRelationsForApi.


        :return: The latest_events of this ArtistRelationsForApi.
        :rtype: List[ReleaseEventForApiContract]
        """
        return self._latest_events

    @latest_events.setter
    def latest_events(self, latest_events):
        """Sets the latest_events of this ArtistRelationsForApi.


        :param latest_events: The latest_events of this ArtistRelationsForApi.
        :type latest_events: List[ReleaseEventForApiContract]
        """

        self._latest_events = latest_events

    @property
    def latest_songs(self):
        """Gets the latest_songs of this ArtistRelationsForApi.


        :return: The latest_songs of this ArtistRelationsForApi.
        :rtype: List[SongForApiContract]
        """
        return self._latest_songs

    @latest_songs.setter
    def latest_songs(self, latest_songs):
        """Sets the latest_songs of this ArtistRelationsForApi.


        :param latest_songs: The latest_songs of this ArtistRelationsForApi.
        :type latest_songs: List[SongForApiContract]
        """

        self._latest_songs = latest_songs

    @property
    def popular_albums(self):
        """Gets the popular_albums of this ArtistRelationsForApi.


        :return: The popular_albums of this ArtistRelationsForApi.
        :rtype: List[AlbumForApiContract]
        """
        return self._popular_albums

    @popular_albums.setter
    def popular_albums(self, popular_albums):
        """Sets the popular_albums of this ArtistRelationsForApi.


        :param popular_albums: The popular_albums of this ArtistRelationsForApi.
        :type popular_albums: List[AlbumForApiContract]
        """

        self._popular_albums = popular_albums

    @property
    def popular_songs(self):
        """Gets the popular_songs of this ArtistRelationsForApi.


        :return: The popular_songs of this ArtistRelationsForApi.
        :rtype: List[SongForApiContract]
        """
        return self._popular_songs

    @popular_songs.setter
    def popular_songs(self, popular_songs):
        """Sets the popular_songs of this ArtistRelationsForApi.


        :param popular_songs: The popular_songs of this ArtistRelationsForApi.
        :type popular_songs: List[SongForApiContract]
        """

        self._popular_songs = popular_songs
