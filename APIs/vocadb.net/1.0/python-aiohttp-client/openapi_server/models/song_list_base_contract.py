# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.song_list_featured_category import SongListFeaturedCategory
from openapi_server import util


class SongListBaseContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, featured_category: SongListFeaturedCategory=None, id: int=None, name: str=None):
        """SongListBaseContract - a model defined in OpenAPI

        :param featured_category: The featured_category of this SongListBaseContract.
        :param id: The id of this SongListBaseContract.
        :param name: The name of this SongListBaseContract.
        """
        self.openapi_types = {
            'featured_category': SongListFeaturedCategory,
            'id': int,
            'name': str
        }

        self.attribute_map = {
            'featured_category': 'featuredCategory',
            'id': 'id',
            'name': 'name'
        }

        self._featured_category = featured_category
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SongListBaseContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SongListBaseContract of this SongListBaseContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def featured_category(self):
        """Gets the featured_category of this SongListBaseContract.


        :return: The featured_category of this SongListBaseContract.
        :rtype: SongListFeaturedCategory
        """
        return self._featured_category

    @featured_category.setter
    def featured_category(self, featured_category):
        """Sets the featured_category of this SongListBaseContract.


        :param featured_category: The featured_category of this SongListBaseContract.
        :type featured_category: SongListFeaturedCategory
        """

        self._featured_category = featured_category

    @property
    def id(self):
        """Gets the id of this SongListBaseContract.


        :return: The id of this SongListBaseContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SongListBaseContract.


        :param id: The id of this SongListBaseContract.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this SongListBaseContract.


        :return: The name of this SongListBaseContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SongListBaseContract.


        :param name: The name of this SongListBaseContract.
        :type name: str
        """

        self._name = name
