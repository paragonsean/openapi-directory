# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.translation_type import TranslationType
from openapi_server import util


class LyricsForSongContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, culture_code: str='', id: int=None, source: str='', translation_type: TranslationType=None, url: str='', value: str=None):
        """LyricsForSongContract - a model defined in OpenAPI

        :param culture_code: The culture_code of this LyricsForSongContract.
        :param id: The id of this LyricsForSongContract.
        :param source: The source of this LyricsForSongContract.
        :param translation_type: The translation_type of this LyricsForSongContract.
        :param url: The url of this LyricsForSongContract.
        :param value: The value of this LyricsForSongContract.
        """
        self.openapi_types = {
            'culture_code': str,
            'id': int,
            'source': str,
            'translation_type': TranslationType,
            'url': str,
            'value': str
        }

        self.attribute_map = {
            'culture_code': 'cultureCode',
            'id': 'id',
            'source': 'source',
            'translation_type': 'translationType',
            'url': 'url',
            'value': 'value'
        }

        self._culture_code = culture_code
        self._id = id
        self._source = source
        self._translation_type = translation_type
        self._url = url
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LyricsForSongContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LyricsForSongContract of this LyricsForSongContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def culture_code(self):
        """Gets the culture_code of this LyricsForSongContract.


        :return: The culture_code of this LyricsForSongContract.
        :rtype: str
        """
        return self._culture_code

    @culture_code.setter
    def culture_code(self, culture_code):
        """Sets the culture_code of this LyricsForSongContract.


        :param culture_code: The culture_code of this LyricsForSongContract.
        :type culture_code: str
        """

        self._culture_code = culture_code

    @property
    def id(self):
        """Gets the id of this LyricsForSongContract.


        :return: The id of this LyricsForSongContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LyricsForSongContract.


        :param id: The id of this LyricsForSongContract.
        :type id: int
        """

        self._id = id

    @property
    def source(self):
        """Gets the source of this LyricsForSongContract.


        :return: The source of this LyricsForSongContract.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this LyricsForSongContract.


        :param source: The source of this LyricsForSongContract.
        :type source: str
        """

        self._source = source

    @property
    def translation_type(self):
        """Gets the translation_type of this LyricsForSongContract.


        :return: The translation_type of this LyricsForSongContract.
        :rtype: TranslationType
        """
        return self._translation_type

    @translation_type.setter
    def translation_type(self, translation_type):
        """Sets the translation_type of this LyricsForSongContract.


        :param translation_type: The translation_type of this LyricsForSongContract.
        :type translation_type: TranslationType
        """

        self._translation_type = translation_type

    @property
    def url(self):
        """Gets the url of this LyricsForSongContract.


        :return: The url of this LyricsForSongContract.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this LyricsForSongContract.


        :param url: The url of this LyricsForSongContract.
        :type url: str
        """

        self._url = url

    @property
    def value(self):
        """Gets the value of this LyricsForSongContract.


        :return: The value of this LyricsForSongContract.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this LyricsForSongContract.


        :param value: The value of this LyricsForSongContract.
        :type value: str
        """

        self._value = value
