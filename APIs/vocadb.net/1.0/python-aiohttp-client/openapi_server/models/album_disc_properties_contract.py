# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.disc_media_type import DiscMediaType
from openapi_server import util


class AlbumDiscPropertiesContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disc_number: int=None, id: int=None, media_type: DiscMediaType=None, name: str=None):
        """AlbumDiscPropertiesContract - a model defined in OpenAPI

        :param disc_number: The disc_number of this AlbumDiscPropertiesContract.
        :param id: The id of this AlbumDiscPropertiesContract.
        :param media_type: The media_type of this AlbumDiscPropertiesContract.
        :param name: The name of this AlbumDiscPropertiesContract.
        """
        self.openapi_types = {
            'disc_number': int,
            'id': int,
            'media_type': DiscMediaType,
            'name': str
        }

        self.attribute_map = {
            'disc_number': 'discNumber',
            'id': 'id',
            'media_type': 'mediaType',
            'name': 'name'
        }

        self._disc_number = disc_number
        self._id = id
        self._media_type = media_type
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AlbumDiscPropertiesContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AlbumDiscPropertiesContract of this AlbumDiscPropertiesContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disc_number(self):
        """Gets the disc_number of this AlbumDiscPropertiesContract.


        :return: The disc_number of this AlbumDiscPropertiesContract.
        :rtype: int
        """
        return self._disc_number

    @disc_number.setter
    def disc_number(self, disc_number):
        """Sets the disc_number of this AlbumDiscPropertiesContract.


        :param disc_number: The disc_number of this AlbumDiscPropertiesContract.
        :type disc_number: int
        """

        self._disc_number = disc_number

    @property
    def id(self):
        """Gets the id of this AlbumDiscPropertiesContract.


        :return: The id of this AlbumDiscPropertiesContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AlbumDiscPropertiesContract.


        :param id: The id of this AlbumDiscPropertiesContract.
        :type id: int
        """

        self._id = id

    @property
    def media_type(self):
        """Gets the media_type of this AlbumDiscPropertiesContract.


        :return: The media_type of this AlbumDiscPropertiesContract.
        :rtype: DiscMediaType
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this AlbumDiscPropertiesContract.


        :param media_type: The media_type of this AlbumDiscPropertiesContract.
        :type media_type: DiscMediaType
        """

        self._media_type = media_type

    @property
    def name(self):
        """Gets the name of this AlbumDiscPropertiesContract.


        :return: The name of this AlbumDiscPropertiesContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AlbumDiscPropertiesContract.


        :param name: The name of this AlbumDiscPropertiesContract.
        :type name: str
        """

        self._name = name
