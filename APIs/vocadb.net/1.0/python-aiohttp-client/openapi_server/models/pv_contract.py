# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pv_extended_metadata import PVExtendedMetadata
from openapi_server.models.pv_service import PVService
from openapi_server.models.pv_type import PVType
from openapi_server import util


class PVContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, created_by: int=None, disabled: bool=None, extended_metadata: PVExtendedMetadata=None, id: int=None, length: int=None, name: str=None, publish_date: datetime=None, pv_id: str=None, pv_type: PVType=None, service: PVService=None, thumb_url: str=None, url: str=None):
        """PVContract - a model defined in OpenAPI

        :param author: The author of this PVContract.
        :param created_by: The created_by of this PVContract.
        :param disabled: The disabled of this PVContract.
        :param extended_metadata: The extended_metadata of this PVContract.
        :param id: The id of this PVContract.
        :param length: The length of this PVContract.
        :param name: The name of this PVContract.
        :param publish_date: The publish_date of this PVContract.
        :param pv_id: The pv_id of this PVContract.
        :param pv_type: The pv_type of this PVContract.
        :param service: The service of this PVContract.
        :param thumb_url: The thumb_url of this PVContract.
        :param url: The url of this PVContract.
        """
        self.openapi_types = {
            'author': str,
            'created_by': int,
            'disabled': bool,
            'extended_metadata': PVExtendedMetadata,
            'id': int,
            'length': int,
            'name': str,
            'publish_date': datetime,
            'pv_id': str,
            'pv_type': PVType,
            'service': PVService,
            'thumb_url': str,
            'url': str
        }

        self.attribute_map = {
            'author': 'author',
            'created_by': 'createdBy',
            'disabled': 'disabled',
            'extended_metadata': 'extendedMetadata',
            'id': 'id',
            'length': 'length',
            'name': 'name',
            'publish_date': 'publishDate',
            'pv_id': 'pvId',
            'pv_type': 'pvType',
            'service': 'service',
            'thumb_url': 'thumbUrl',
            'url': 'url'
        }

        self._author = author
        self._created_by = created_by
        self._disabled = disabled
        self._extended_metadata = extended_metadata
        self._id = id
        self._length = length
        self._name = name
        self._publish_date = publish_date
        self._pv_id = pv_id
        self._pv_type = pv_type
        self._service = service
        self._thumb_url = thumb_url
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PVContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PVContract of this PVContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this PVContract.


        :return: The author of this PVContract.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this PVContract.


        :param author: The author of this PVContract.
        :type author: str
        """

        self._author = author

    @property
    def created_by(self):
        """Gets the created_by of this PVContract.


        :return: The created_by of this PVContract.
        :rtype: int
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this PVContract.


        :param created_by: The created_by of this PVContract.
        :type created_by: int
        """

        self._created_by = created_by

    @property
    def disabled(self):
        """Gets the disabled of this PVContract.


        :return: The disabled of this PVContract.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this PVContract.


        :param disabled: The disabled of this PVContract.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def extended_metadata(self):
        """Gets the extended_metadata of this PVContract.


        :return: The extended_metadata of this PVContract.
        :rtype: PVExtendedMetadata
        """
        return self._extended_metadata

    @extended_metadata.setter
    def extended_metadata(self, extended_metadata):
        """Sets the extended_metadata of this PVContract.


        :param extended_metadata: The extended_metadata of this PVContract.
        :type extended_metadata: PVExtendedMetadata
        """

        self._extended_metadata = extended_metadata

    @property
    def id(self):
        """Gets the id of this PVContract.


        :return: The id of this PVContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PVContract.


        :param id: The id of this PVContract.
        :type id: int
        """

        self._id = id

    @property
    def length(self):
        """Gets the length of this PVContract.


        :return: The length of this PVContract.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this PVContract.


        :param length: The length of this PVContract.
        :type length: int
        """

        self._length = length

    @property
    def name(self):
        """Gets the name of this PVContract.


        :return: The name of this PVContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PVContract.


        :param name: The name of this PVContract.
        :type name: str
        """

        self._name = name

    @property
    def publish_date(self):
        """Gets the publish_date of this PVContract.


        :return: The publish_date of this PVContract.
        :rtype: datetime
        """
        return self._publish_date

    @publish_date.setter
    def publish_date(self, publish_date):
        """Sets the publish_date of this PVContract.


        :param publish_date: The publish_date of this PVContract.
        :type publish_date: datetime
        """

        self._publish_date = publish_date

    @property
    def pv_id(self):
        """Gets the pv_id of this PVContract.


        :return: The pv_id of this PVContract.
        :rtype: str
        """
        return self._pv_id

    @pv_id.setter
    def pv_id(self, pv_id):
        """Sets the pv_id of this PVContract.


        :param pv_id: The pv_id of this PVContract.
        :type pv_id: str
        """

        self._pv_id = pv_id

    @property
    def pv_type(self):
        """Gets the pv_type of this PVContract.


        :return: The pv_type of this PVContract.
        :rtype: PVType
        """
        return self._pv_type

    @pv_type.setter
    def pv_type(self, pv_type):
        """Sets the pv_type of this PVContract.


        :param pv_type: The pv_type of this PVContract.
        :type pv_type: PVType
        """

        self._pv_type = pv_type

    @property
    def service(self):
        """Gets the service of this PVContract.


        :return: The service of this PVContract.
        :rtype: PVService
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this PVContract.


        :param service: The service of this PVContract.
        :type service: PVService
        """

        self._service = service

    @property
    def thumb_url(self):
        """Gets the thumb_url of this PVContract.


        :return: The thumb_url of this PVContract.
        :rtype: str
        """
        return self._thumb_url

    @thumb_url.setter
    def thumb_url(self, thumb_url):
        """Sets the thumb_url of this PVContract.


        :param thumb_url: The thumb_url of this PVContract.
        :type thumb_url: str
        """

        self._thumb_url = thumb_url

    @property
    def url(self):
        """Gets the url of this PVContract.


        :return: The url of this PVContract.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PVContract.


        :param url: The url of this PVContract.
        :type url: str
        """

        self._url = url
