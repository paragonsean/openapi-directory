# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.web_link_category import WebLinkCategory
from openapi_server import util


class ArchivedWebLinkContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category: WebLinkCategory=None, description: str=None, disabled: bool=None, url: str=None):
        """ArchivedWebLinkContract - a model defined in OpenAPI

        :param category: The category of this ArchivedWebLinkContract.
        :param description: The description of this ArchivedWebLinkContract.
        :param disabled: The disabled of this ArchivedWebLinkContract.
        :param url: The url of this ArchivedWebLinkContract.
        """
        self.openapi_types = {
            'category': WebLinkCategory,
            'description': str,
            'disabled': bool,
            'url': str
        }

        self.attribute_map = {
            'category': 'category',
            'description': 'description',
            'disabled': 'disabled',
            'url': 'url'
        }

        self._category = category
        self._description = description
        self._disabled = disabled
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArchivedWebLinkContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArchivedWebLinkContract of this ArchivedWebLinkContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category(self):
        """Gets the category of this ArchivedWebLinkContract.


        :return: The category of this ArchivedWebLinkContract.
        :rtype: WebLinkCategory
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this ArchivedWebLinkContract.


        :param category: The category of this ArchivedWebLinkContract.
        :type category: WebLinkCategory
        """

        self._category = category

    @property
    def description(self):
        """Gets the description of this ArchivedWebLinkContract.


        :return: The description of this ArchivedWebLinkContract.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ArchivedWebLinkContract.


        :param description: The description of this ArchivedWebLinkContract.
        :type description: str
        """

        self._description = description

    @property
    def disabled(self):
        """Gets the disabled of this ArchivedWebLinkContract.


        :return: The disabled of this ArchivedWebLinkContract.
        :rtype: bool
        """
        return self._disabled

    @disabled.setter
    def disabled(self, disabled):
        """Sets the disabled of this ArchivedWebLinkContract.


        :param disabled: The disabled of this ArchivedWebLinkContract.
        :type disabled: bool
        """

        self._disabled = disabled

    @property
    def url(self):
        """Gets the url of this ArchivedWebLinkContract.


        :return: The url of this ArchivedWebLinkContract.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ArchivedWebLinkContract.


        :param url: The url of this ArchivedWebLinkContract.
        :type url: str
        """

        self._url = url
