# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.archived_web_link_contract import ArchivedWebLinkContract
from openapi_server.models.artist_type import ArtistType
from openapi_server.models.content_language_selection import ContentLanguageSelection
from openapi_server.models.disc_type import DiscType
from openapi_server.models.entry_status import EntryStatus
from openapi_server.models.entry_thumb_for_api_contract import EntryThumbForApiContract
from openapi_server.models.entry_type import EntryType
from openapi_server.models.event_category import EventCategory
from openapi_server.models.localized_string_contract import LocalizedStringContract
from openapi_server.models.pv_contract import PVContract
from openapi_server.models.song_list_featured_category import SongListFeaturedCategory
from openapi_server.models.song_type import SongType
from openapi_server.models.tag_usage_for_api_contract import TagUsageForApiContract
from openapi_server import util


class EntryForApiContract(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_date: datetime=None, additional_names: str=None, artist_string: str=None, artist_type: ArtistType=None, create_date: datetime=None, default_name: str=None, default_name_language: ContentLanguageSelection=None, description: str=None, disc_type: DiscType=None, entry_type: EntryType=None, event_category: EventCategory=None, id: int=None, main_picture: EntryThumbForApiContract=None, name: str=None, names: List[LocalizedStringContract]=None, pvs: List[PVContract]=None, release_event_series_name: str=None, song_list_featured_category: SongListFeaturedCategory=None, song_type: SongType=None, status: EntryStatus=None, tag_category_name: str=None, tags: List[TagUsageForApiContract]=None, url_slug: str=None, version: int=None, web_links: List[ArchivedWebLinkContract]=None):
        """EntryForApiContract - a model defined in OpenAPI

        :param activity_date: The activity_date of this EntryForApiContract.
        :param additional_names: The additional_names of this EntryForApiContract.
        :param artist_string: The artist_string of this EntryForApiContract.
        :param artist_type: The artist_type of this EntryForApiContract.
        :param create_date: The create_date of this EntryForApiContract.
        :param default_name: The default_name of this EntryForApiContract.
        :param default_name_language: The default_name_language of this EntryForApiContract.
        :param description: The description of this EntryForApiContract.
        :param disc_type: The disc_type of this EntryForApiContract.
        :param entry_type: The entry_type of this EntryForApiContract.
        :param event_category: The event_category of this EntryForApiContract.
        :param id: The id of this EntryForApiContract.
        :param main_picture: The main_picture of this EntryForApiContract.
        :param name: The name of this EntryForApiContract.
        :param names: The names of this EntryForApiContract.
        :param pvs: The pvs of this EntryForApiContract.
        :param release_event_series_name: The release_event_series_name of this EntryForApiContract.
        :param song_list_featured_category: The song_list_featured_category of this EntryForApiContract.
        :param song_type: The song_type of this EntryForApiContract.
        :param status: The status of this EntryForApiContract.
        :param tag_category_name: The tag_category_name of this EntryForApiContract.
        :param tags: The tags of this EntryForApiContract.
        :param url_slug: The url_slug of this EntryForApiContract.
        :param version: The version of this EntryForApiContract.
        :param web_links: The web_links of this EntryForApiContract.
        """
        self.openapi_types = {
            'activity_date': datetime,
            'additional_names': str,
            'artist_string': str,
            'artist_type': ArtistType,
            'create_date': datetime,
            'default_name': str,
            'default_name_language': ContentLanguageSelection,
            'description': str,
            'disc_type': DiscType,
            'entry_type': EntryType,
            'event_category': EventCategory,
            'id': int,
            'main_picture': EntryThumbForApiContract,
            'name': str,
            'names': List[LocalizedStringContract],
            'pvs': List[PVContract],
            'release_event_series_name': str,
            'song_list_featured_category': SongListFeaturedCategory,
            'song_type': SongType,
            'status': EntryStatus,
            'tag_category_name': str,
            'tags': List[TagUsageForApiContract],
            'url_slug': str,
            'version': int,
            'web_links': List[ArchivedWebLinkContract]
        }

        self.attribute_map = {
            'activity_date': 'activityDate',
            'additional_names': 'additionalNames',
            'artist_string': 'artistString',
            'artist_type': 'artistType',
            'create_date': 'createDate',
            'default_name': 'defaultName',
            'default_name_language': 'defaultNameLanguage',
            'description': 'description',
            'disc_type': 'discType',
            'entry_type': 'entryType',
            'event_category': 'eventCategory',
            'id': 'id',
            'main_picture': 'mainPicture',
            'name': 'name',
            'names': 'names',
            'pvs': 'pvs',
            'release_event_series_name': 'releaseEventSeriesName',
            'song_list_featured_category': 'songListFeaturedCategory',
            'song_type': 'songType',
            'status': 'status',
            'tag_category_name': 'tagCategoryName',
            'tags': 'tags',
            'url_slug': 'urlSlug',
            'version': 'version',
            'web_links': 'webLinks'
        }

        self._activity_date = activity_date
        self._additional_names = additional_names
        self._artist_string = artist_string
        self._artist_type = artist_type
        self._create_date = create_date
        self._default_name = default_name
        self._default_name_language = default_name_language
        self._description = description
        self._disc_type = disc_type
        self._entry_type = entry_type
        self._event_category = event_category
        self._id = id
        self._main_picture = main_picture
        self._name = name
        self._names = names
        self._pvs = pvs
        self._release_event_series_name = release_event_series_name
        self._song_list_featured_category = song_list_featured_category
        self._song_type = song_type
        self._status = status
        self._tag_category_name = tag_category_name
        self._tags = tags
        self._url_slug = url_slug
        self._version = version
        self._web_links = web_links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EntryForApiContract':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EntryForApiContract of this EntryForApiContract.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_date(self):
        """Gets the activity_date of this EntryForApiContract.


        :return: The activity_date of this EntryForApiContract.
        :rtype: datetime
        """
        return self._activity_date

    @activity_date.setter
    def activity_date(self, activity_date):
        """Sets the activity_date of this EntryForApiContract.


        :param activity_date: The activity_date of this EntryForApiContract.
        :type activity_date: datetime
        """

        self._activity_date = activity_date

    @property
    def additional_names(self):
        """Gets the additional_names of this EntryForApiContract.


        :return: The additional_names of this EntryForApiContract.
        :rtype: str
        """
        return self._additional_names

    @additional_names.setter
    def additional_names(self, additional_names):
        """Sets the additional_names of this EntryForApiContract.


        :param additional_names: The additional_names of this EntryForApiContract.
        :type additional_names: str
        """

        self._additional_names = additional_names

    @property
    def artist_string(self):
        """Gets the artist_string of this EntryForApiContract.


        :return: The artist_string of this EntryForApiContract.
        :rtype: str
        """
        return self._artist_string

    @artist_string.setter
    def artist_string(self, artist_string):
        """Sets the artist_string of this EntryForApiContract.


        :param artist_string: The artist_string of this EntryForApiContract.
        :type artist_string: str
        """

        self._artist_string = artist_string

    @property
    def artist_type(self):
        """Gets the artist_type of this EntryForApiContract.


        :return: The artist_type of this EntryForApiContract.
        :rtype: ArtistType
        """
        return self._artist_type

    @artist_type.setter
    def artist_type(self, artist_type):
        """Sets the artist_type of this EntryForApiContract.


        :param artist_type: The artist_type of this EntryForApiContract.
        :type artist_type: ArtistType
        """

        self._artist_type = artist_type

    @property
    def create_date(self):
        """Gets the create_date of this EntryForApiContract.


        :return: The create_date of this EntryForApiContract.
        :rtype: datetime
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this EntryForApiContract.


        :param create_date: The create_date of this EntryForApiContract.
        :type create_date: datetime
        """

        self._create_date = create_date

    @property
    def default_name(self):
        """Gets the default_name of this EntryForApiContract.


        :return: The default_name of this EntryForApiContract.
        :rtype: str
        """
        return self._default_name

    @default_name.setter
    def default_name(self, default_name):
        """Sets the default_name of this EntryForApiContract.


        :param default_name: The default_name of this EntryForApiContract.
        :type default_name: str
        """

        self._default_name = default_name

    @property
    def default_name_language(self):
        """Gets the default_name_language of this EntryForApiContract.


        :return: The default_name_language of this EntryForApiContract.
        :rtype: ContentLanguageSelection
        """
        return self._default_name_language

    @default_name_language.setter
    def default_name_language(self, default_name_language):
        """Sets the default_name_language of this EntryForApiContract.


        :param default_name_language: The default_name_language of this EntryForApiContract.
        :type default_name_language: ContentLanguageSelection
        """

        self._default_name_language = default_name_language

    @property
    def description(self):
        """Gets the description of this EntryForApiContract.


        :return: The description of this EntryForApiContract.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this EntryForApiContract.


        :param description: The description of this EntryForApiContract.
        :type description: str
        """

        self._description = description

    @property
    def disc_type(self):
        """Gets the disc_type of this EntryForApiContract.


        :return: The disc_type of this EntryForApiContract.
        :rtype: DiscType
        """
        return self._disc_type

    @disc_type.setter
    def disc_type(self, disc_type):
        """Sets the disc_type of this EntryForApiContract.


        :param disc_type: The disc_type of this EntryForApiContract.
        :type disc_type: DiscType
        """

        self._disc_type = disc_type

    @property
    def entry_type(self):
        """Gets the entry_type of this EntryForApiContract.


        :return: The entry_type of this EntryForApiContract.
        :rtype: EntryType
        """
        return self._entry_type

    @entry_type.setter
    def entry_type(self, entry_type):
        """Sets the entry_type of this EntryForApiContract.


        :param entry_type: The entry_type of this EntryForApiContract.
        :type entry_type: EntryType
        """

        self._entry_type = entry_type

    @property
    def event_category(self):
        """Gets the event_category of this EntryForApiContract.


        :return: The event_category of this EntryForApiContract.
        :rtype: EventCategory
        """
        return self._event_category

    @event_category.setter
    def event_category(self, event_category):
        """Sets the event_category of this EntryForApiContract.


        :param event_category: The event_category of this EntryForApiContract.
        :type event_category: EventCategory
        """

        self._event_category = event_category

    @property
    def id(self):
        """Gets the id of this EntryForApiContract.


        :return: The id of this EntryForApiContract.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this EntryForApiContract.


        :param id: The id of this EntryForApiContract.
        :type id: int
        """

        self._id = id

    @property
    def main_picture(self):
        """Gets the main_picture of this EntryForApiContract.


        :return: The main_picture of this EntryForApiContract.
        :rtype: EntryThumbForApiContract
        """
        return self._main_picture

    @main_picture.setter
    def main_picture(self, main_picture):
        """Sets the main_picture of this EntryForApiContract.


        :param main_picture: The main_picture of this EntryForApiContract.
        :type main_picture: EntryThumbForApiContract
        """

        self._main_picture = main_picture

    @property
    def name(self):
        """Gets the name of this EntryForApiContract.


        :return: The name of this EntryForApiContract.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this EntryForApiContract.


        :param name: The name of this EntryForApiContract.
        :type name: str
        """

        self._name = name

    @property
    def names(self):
        """Gets the names of this EntryForApiContract.


        :return: The names of this EntryForApiContract.
        :rtype: List[LocalizedStringContract]
        """
        return self._names

    @names.setter
    def names(self, names):
        """Sets the names of this EntryForApiContract.


        :param names: The names of this EntryForApiContract.
        :type names: List[LocalizedStringContract]
        """

        self._names = names

    @property
    def pvs(self):
        """Gets the pvs of this EntryForApiContract.


        :return: The pvs of this EntryForApiContract.
        :rtype: List[PVContract]
        """
        return self._pvs

    @pvs.setter
    def pvs(self, pvs):
        """Sets the pvs of this EntryForApiContract.


        :param pvs: The pvs of this EntryForApiContract.
        :type pvs: List[PVContract]
        """

        self._pvs = pvs

    @property
    def release_event_series_name(self):
        """Gets the release_event_series_name of this EntryForApiContract.


        :return: The release_event_series_name of this EntryForApiContract.
        :rtype: str
        """
        return self._release_event_series_name

    @release_event_series_name.setter
    def release_event_series_name(self, release_event_series_name):
        """Sets the release_event_series_name of this EntryForApiContract.


        :param release_event_series_name: The release_event_series_name of this EntryForApiContract.
        :type release_event_series_name: str
        """

        self._release_event_series_name = release_event_series_name

    @property
    def song_list_featured_category(self):
        """Gets the song_list_featured_category of this EntryForApiContract.


        :return: The song_list_featured_category of this EntryForApiContract.
        :rtype: SongListFeaturedCategory
        """
        return self._song_list_featured_category

    @song_list_featured_category.setter
    def song_list_featured_category(self, song_list_featured_category):
        """Sets the song_list_featured_category of this EntryForApiContract.


        :param song_list_featured_category: The song_list_featured_category of this EntryForApiContract.
        :type song_list_featured_category: SongListFeaturedCategory
        """

        self._song_list_featured_category = song_list_featured_category

    @property
    def song_type(self):
        """Gets the song_type of this EntryForApiContract.


        :return: The song_type of this EntryForApiContract.
        :rtype: SongType
        """
        return self._song_type

    @song_type.setter
    def song_type(self, song_type):
        """Sets the song_type of this EntryForApiContract.


        :param song_type: The song_type of this EntryForApiContract.
        :type song_type: SongType
        """

        self._song_type = song_type

    @property
    def status(self):
        """Gets the status of this EntryForApiContract.


        :return: The status of this EntryForApiContract.
        :rtype: EntryStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this EntryForApiContract.


        :param status: The status of this EntryForApiContract.
        :type status: EntryStatus
        """

        self._status = status

    @property
    def tag_category_name(self):
        """Gets the tag_category_name of this EntryForApiContract.


        :return: The tag_category_name of this EntryForApiContract.
        :rtype: str
        """
        return self._tag_category_name

    @tag_category_name.setter
    def tag_category_name(self, tag_category_name):
        """Sets the tag_category_name of this EntryForApiContract.


        :param tag_category_name: The tag_category_name of this EntryForApiContract.
        :type tag_category_name: str
        """

        self._tag_category_name = tag_category_name

    @property
    def tags(self):
        """Gets the tags of this EntryForApiContract.


        :return: The tags of this EntryForApiContract.
        :rtype: List[TagUsageForApiContract]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this EntryForApiContract.


        :param tags: The tags of this EntryForApiContract.
        :type tags: List[TagUsageForApiContract]
        """

        self._tags = tags

    @property
    def url_slug(self):
        """Gets the url_slug of this EntryForApiContract.


        :return: The url_slug of this EntryForApiContract.
        :rtype: str
        """
        return self._url_slug

    @url_slug.setter
    def url_slug(self, url_slug):
        """Sets the url_slug of this EntryForApiContract.


        :param url_slug: The url_slug of this EntryForApiContract.
        :type url_slug: str
        """

        self._url_slug = url_slug

    @property
    def version(self):
        """Gets the version of this EntryForApiContract.


        :return: The version of this EntryForApiContract.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this EntryForApiContract.


        :param version: The version of this EntryForApiContract.
        :type version: int
        """

        self._version = version

    @property
    def web_links(self):
        """Gets the web_links of this EntryForApiContract.


        :return: The web_links of this EntryForApiContract.
        :rtype: List[ArchivedWebLinkContract]
        """
        return self._web_links

    @web_links.setter
    def web_links(self, web_links):
        """Sets the web_links of this EntryForApiContract.


        :param web_links: The web_links of this EntryForApiContract.
        :type web_links: List[ArchivedWebLinkContract]
        """

        self._web_links = web_links
