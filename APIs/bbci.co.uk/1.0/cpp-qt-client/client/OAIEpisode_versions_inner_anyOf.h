/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEpisode_versions_inner_anyOf.h
 *
 * 
 */

#ifndef OAIEpisode_versions_inner_anyOf_H
#define OAIEpisode_versions_inner_anyOf_H

#include <QJsonObject>

#include "OAIBroadcast_duration.h"
#include "OAIClip_versions_inner_guidance.h"
#include "OAIEpisode_versions_inner_anyOf_store_session.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBroadcast_duration;
class OAIClip_versions_inner_guidance;
class OAIEpisode_versions_inner_anyOf_store_session;

class OAIEpisode_versions_inner_anyOf : public OAIObject {
public:
    OAIEpisode_versions_inner_anyOf();
    OAIEpisode_versions_inner_anyOf(QString json);
    ~OAIEpisode_versions_inner_anyOf() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDownload() const;
    void setDownload(const bool &download);
    bool is_download_Set() const;
    bool is_download_Valid() const;

    OAIBroadcast_duration getDuration() const;
    void setDuration(const OAIBroadcast_duration &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    OAIClip_versions_inner_guidance getGuidance() const;
    void setGuidance(const OAIClip_versions_inner_guidance &guidance);
    bool is_guidance_Set() const;
    bool is_guidance_Valid() const;

    bool isHd() const;
    void setHd(const bool &hd);
    bool is_hd_Set() const;
    bool is_hd_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getStoreId() const;
    void setStoreId(const QString &store_id);
    bool is_store_id_Set() const;
    bool is_store_id_Valid() const;

    QString getStoreProfile() const;
    void setStoreProfile(const QString &store_profile);
    bool is_store_profile_Set() const;
    bool is_store_profile_Valid() const;

    OAIEpisode_versions_inner_anyOf_store_session getStoreSession() const;
    void setStoreSession(const OAIEpisode_versions_inner_anyOf_store_session &store_session);
    bool is_store_session_Set() const;
    bool is_store_session_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_download;
    bool m_download_isSet;
    bool m_download_isValid;

    OAIBroadcast_duration m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    OAIClip_versions_inner_guidance m_guidance;
    bool m_guidance_isSet;
    bool m_guidance_isValid;

    bool m_hd;
    bool m_hd_isSet;
    bool m_hd_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_store_id;
    bool m_store_id_isSet;
    bool m_store_id_isValid;

    QString m_store_profile;
    bool m_store_profile_isSet;
    bool m_store_profile_isValid;

    OAIEpisode_versions_inner_anyOf_store_session m_store_session;
    bool m_store_session_isSet;
    bool m_store_session_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEpisode_versions_inner_anyOf)

#endif // OAIEpisode_versions_inner_anyOf_H
