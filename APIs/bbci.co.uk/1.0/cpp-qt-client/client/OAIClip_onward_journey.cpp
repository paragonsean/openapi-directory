/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClip_onward_journey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClip_onward_journey::OAIClip_onward_journey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClip_onward_journey::OAIClip_onward_journey() {
    this->initializeModel();
}

OAIClip_onward_journey::~OAIClip_onward_journey() {}

void OAIClip_onward_journey::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIClip_onward_journey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClip_onward_journey::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIClip_onward_journey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClip_onward_journey::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIClip_onward_journey::getId() const {
    return m_id;
}
void OAIClip_onward_journey::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIClip_onward_journey::is_id_Set() const{
    return m_id_isSet;
}

bool OAIClip_onward_journey::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIClip_onward_journey::getType() const {
    return m_type;
}
void OAIClip_onward_journey::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIClip_onward_journey::is_type_Set() const{
    return m_type_isSet;
}

bool OAIClip_onward_journey::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIClip_onward_journey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClip_onward_journey::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
