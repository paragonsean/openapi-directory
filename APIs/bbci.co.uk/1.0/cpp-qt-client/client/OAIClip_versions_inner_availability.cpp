/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClip_versions_inner_availability.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClip_versions_inner_availability::OAIClip_versions_inner_availability(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClip_versions_inner_availability::OAIClip_versions_inner_availability() {
    this->initializeModel();
}

OAIClip_versions_inner_availability::~OAIClip_versions_inner_availability() {}

void OAIClip_versions_inner_availability::initializeModel() {

    m_accurate_start_isSet = false;
    m_accurate_start_isValid = false;

    m_end_isSet = false;
    m_end_isValid = false;

    m_remaining_isSet = false;
    m_remaining_isValid = false;

    m_start_isSet = false;
    m_start_isValid = false;
}

void OAIClip_versions_inner_availability::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClip_versions_inner_availability::fromJsonObject(QJsonObject json) {

    m_accurate_start_isValid = ::OpenAPI::fromJsonValue(m_accurate_start, json[QString("accurate_start")]);
    m_accurate_start_isSet = !json[QString("accurate_start")].isNull() && m_accurate_start_isValid;

    m_end_isValid = ::OpenAPI::fromJsonValue(m_end, json[QString("end")]);
    m_end_isSet = !json[QString("end")].isNull() && m_end_isValid;

    m_remaining_isValid = ::OpenAPI::fromJsonValue(m_remaining, json[QString("remaining")]);
    m_remaining_isSet = !json[QString("remaining")].isNull() && m_remaining_isValid;

    m_start_isValid = ::OpenAPI::fromJsonValue(m_start, json[QString("start")]);
    m_start_isSet = !json[QString("start")].isNull() && m_start_isValid;
}

QString OAIClip_versions_inner_availability::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClip_versions_inner_availability::asJsonObject() const {
    QJsonObject obj;
    if (m_accurate_start_isSet) {
        obj.insert(QString("accurate_start"), ::OpenAPI::toJsonValue(m_accurate_start));
    }
    if (m_end_isSet) {
        obj.insert(QString("end"), ::OpenAPI::toJsonValue(m_end));
    }
    if (m_remaining.isSet()) {
        obj.insert(QString("remaining"), ::OpenAPI::toJsonValue(m_remaining));
    }
    if (m_start_isSet) {
        obj.insert(QString("start"), ::OpenAPI::toJsonValue(m_start));
    }
    return obj;
}

QString OAIClip_versions_inner_availability::getAccurateStart() const {
    return m_accurate_start;
}
void OAIClip_versions_inner_availability::setAccurateStart(const QString &accurate_start) {
    m_accurate_start = accurate_start;
    m_accurate_start_isSet = true;
}

bool OAIClip_versions_inner_availability::is_accurate_start_Set() const{
    return m_accurate_start_isSet;
}

bool OAIClip_versions_inner_availability::is_accurate_start_Valid() const{
    return m_accurate_start_isValid;
}

QString OAIClip_versions_inner_availability::getEnd() const {
    return m_end;
}
void OAIClip_versions_inner_availability::setEnd(const QString &end) {
    m_end = end;
    m_end_isSet = true;
}

bool OAIClip_versions_inner_availability::is_end_Set() const{
    return m_end_isSet;
}

bool OAIClip_versions_inner_availability::is_end_Valid() const{
    return m_end_isValid;
}

OAIClip_versions_inner_availability_remaining OAIClip_versions_inner_availability::getRemaining() const {
    return m_remaining;
}
void OAIClip_versions_inner_availability::setRemaining(const OAIClip_versions_inner_availability_remaining &remaining) {
    m_remaining = remaining;
    m_remaining_isSet = true;
}

bool OAIClip_versions_inner_availability::is_remaining_Set() const{
    return m_remaining_isSet;
}

bool OAIClip_versions_inner_availability::is_remaining_Valid() const{
    return m_remaining_isValid;
}

QString OAIClip_versions_inner_availability::getStart() const {
    return m_start;
}
void OAIClip_versions_inner_availability::setStart(const QString &start) {
    m_start = start;
    m_start_isSet = true;
}

bool OAIClip_versions_inner_availability::is_start_Set() const{
    return m_start_isSet;
}

bool OAIClip_versions_inner_availability::is_start_Valid() const{
    return m_start_isValid;
}

bool OAIClip_versions_inner_availability::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accurate_start_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remaining.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClip_versions_inner_availability::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_start_isValid && true;
}

} // namespace OpenAPI
