/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInteraction_title.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInteraction_title::OAIInteraction_title(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInteraction_title::OAIInteraction_title() {
    this->initializeModel();
}

OAIInteraction_title::~OAIInteraction_title() {}

void OAIInteraction_title::initializeModel() {

    m_r_long_isSet = false;
    m_r_long_isValid = false;

    m_r_short_isSet = false;
    m_r_short_isValid = false;
}

void OAIInteraction_title::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInteraction_title::fromJsonObject(QJsonObject json) {

    m_r_long_isValid = ::OpenAPI::fromJsonValue(m_r_long, json[QString("long")]);
    m_r_long_isSet = !json[QString("long")].isNull() && m_r_long_isValid;

    m_r_short_isValid = ::OpenAPI::fromJsonValue(m_r_short, json[QString("short")]);
    m_r_short_isSet = !json[QString("short")].isNull() && m_r_short_isValid;
}

QString OAIInteraction_title::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInteraction_title::asJsonObject() const {
    QJsonObject obj;
    if (m_r_long.isSet()) {
        obj.insert(QString("long"), ::OpenAPI::toJsonValue(m_r_long));
    }
    if (m_r_short.isSet()) {
        obj.insert(QString("short"), ::OpenAPI::toJsonValue(m_r_short));
    }
    return obj;
}

OAIInteraction_title_long OAIInteraction_title::getRLong() const {
    return m_r_long;
}
void OAIInteraction_title::setRLong(const OAIInteraction_title_long &r_long) {
    m_r_long = r_long;
    m_r_long_isSet = true;
}

bool OAIInteraction_title::is_r_long_Set() const{
    return m_r_long_isSet;
}

bool OAIInteraction_title::is_r_long_Valid() const{
    return m_r_long_isValid;
}

OAIInteraction_title_short OAIInteraction_title::getRShort() const {
    return m_r_short;
}
void OAIInteraction_title::setRShort(const OAIInteraction_title_short &r_short) {
    m_r_short = r_short;
    m_r_short_isSet = true;
}

bool OAIInteraction_title::is_r_short_Set() const{
    return m_r_short_isSet;
}

bool OAIInteraction_title::is_r_short_Valid() const{
    return m_r_short_isValid;
}

bool OAIInteraction_title::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_long.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_short.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInteraction_title::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_r_long_isValid && m_r_short_isValid && true;
}

} // namespace OpenAPI
