/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUser_recommendation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUser_recommendation::OAIUser_recommendation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUser_recommendation::OAIUser_recommendation() {
    this->initializeModel();
}

OAIUser_recommendation::~OAIUser_recommendation() {}

void OAIUser_recommendation::initializeModel() {

    m_algorithm_isSet = false;
    m_algorithm_isValid = false;

    m_episode_isSet = false;
    m_episode_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIUser_recommendation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUser_recommendation::fromJsonObject(QJsonObject json) {

    m_algorithm_isValid = ::OpenAPI::fromJsonValue(m_algorithm, json[QString("algorithm")]);
    m_algorithm_isSet = !json[QString("algorithm")].isNull() && m_algorithm_isValid;

    m_episode_isValid = ::OpenAPI::fromJsonValue(m_episode, json[QString("episode")]);
    m_episode_isSet = !json[QString("episode")].isNull() && m_episode_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIUser_recommendation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUser_recommendation::asJsonObject() const {
    QJsonObject obj;
    if (m_algorithm_isSet) {
        obj.insert(QString("algorithm"), ::OpenAPI::toJsonValue(m_algorithm));
    }
    if (m_episode.isSet()) {
        obj.insert(QString("episode"), ::OpenAPI::toJsonValue(m_episode));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIUser_recommendation::getAlgorithm() const {
    return m_algorithm;
}
void OAIUser_recommendation::setAlgorithm(const QString &algorithm) {
    m_algorithm = algorithm;
    m_algorithm_isSet = true;
}

bool OAIUser_recommendation::is_algorithm_Set() const{
    return m_algorithm_isSet;
}

bool OAIUser_recommendation::is_algorithm_Valid() const{
    return m_algorithm_isValid;
}

OAIEpisode OAIUser_recommendation::getEpisode() const {
    return m_episode;
}
void OAIUser_recommendation::setEpisode(const OAIEpisode &episode) {
    m_episode = episode;
    m_episode_isSet = true;
}

bool OAIUser_recommendation::is_episode_Set() const{
    return m_episode_isSet;
}

bool OAIUser_recommendation::is_episode_Valid() const{
    return m_episode_isValid;
}

QString OAIUser_recommendation::getType() const {
    return m_type;
}
void OAIUser_recommendation::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIUser_recommendation::is_type_Set() const{
    return m_type_isSet;
}

bool OAIUser_recommendation::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIUser_recommendation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_episode.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUser_recommendation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_algorithm_isValid && m_episode_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
