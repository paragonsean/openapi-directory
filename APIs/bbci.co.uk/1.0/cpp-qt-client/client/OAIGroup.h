/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGroup.h
 *
 * 
 */

#ifndef OAIGroup_H
#define OAIGroup_H

#include <QJsonObject>

#include "OAIClip_versions_inner_guidance_text.h"
#include "OAIGroup_images.h"
#include "OAIGroup_initial_children_inner.h"
#include "OAIGroup_related_links_inner.h"
#include "OAIMaster_brand.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGroup_images;
class OAIGroup_initial_children_inner;
class OAIMaster_brand;
class OAIGroup_related_links_inner;
class OAIClip_versions_inner_guidance_text;

class OAIGroup : public OAIObject {
public:
    OAIGroup();
    OAIGroup(QString json);
    ~OAIGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCount() const;
    void setCount(const double &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getEpisodeSortDirection() const;
    void setEpisodeSortDirection(const QString &episode_sort_direction);
    bool is_episode_sort_direction_Set() const;
    bool is_episode_sort_direction_Valid() const;

    QString getGroupType() const;
    void setGroupType(const QString &group_type);
    bool is_group_type_Set() const;
    bool is_group_type_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIGroup_images getImages() const;
    void setImages(const OAIGroup_images &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QList<OAIGroup_initial_children_inner> getInitialChildren() const;
    void setInitialChildren(const QList<OAIGroup_initial_children_inner> &initial_children);
    bool is_initial_children_Set() const;
    bool is_initial_children_Valid() const;

    OAIMaster_brand getMasterBrand() const;
    void setMasterBrand(const OAIMaster_brand &master_brand);
    bool is_master_brand_Set() const;
    bool is_master_brand_Valid() const;

    QList<OAIGroup_related_links_inner> getRelatedLinks() const;
    void setRelatedLinks(const QList<OAIGroup_related_links_inner> &related_links);
    bool is_related_links_Set() const;
    bool is_related_links_Valid() const;

    QString getShortTitle() const;
    void setShortTitle(const QString &short_title);
    bool is_short_title_Set() const;
    bool is_short_title_Valid() const;

    bool isStacked() const;
    void setStacked(const bool &stacked);
    bool is_stacked_Set() const;
    bool is_stacked_Valid() const;

    OAIClip_versions_inner_guidance_text getSynopses() const;
    void setSynopses(const OAIClip_versions_inner_guidance_text &synopses);
    bool is_synopses_Set() const;
    bool is_synopses_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_episode_sort_direction;
    bool m_episode_sort_direction_isSet;
    bool m_episode_sort_direction_isValid;

    QString m_group_type;
    bool m_group_type_isSet;
    bool m_group_type_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIGroup_images m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QList<OAIGroup_initial_children_inner> m_initial_children;
    bool m_initial_children_isSet;
    bool m_initial_children_isValid;

    OAIMaster_brand m_master_brand;
    bool m_master_brand_isSet;
    bool m_master_brand_isValid;

    QList<OAIGroup_related_links_inner> m_related_links;
    bool m_related_links_isSet;
    bool m_related_links_isValid;

    QString m_short_title;
    bool m_short_title_isSet;
    bool m_short_title_isValid;

    bool m_stacked;
    bool m_stacked_isSet;
    bool m_stacked_isValid;

    OAIClip_versions_inner_guidance_text m_synopses;
    bool m_synopses_isSet;
    bool m_synopses_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGroup)

#endif // OAIGroup_H
