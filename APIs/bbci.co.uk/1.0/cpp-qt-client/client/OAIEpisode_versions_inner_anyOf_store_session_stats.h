/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEpisode_versions_inner_anyOf_store_session_stats.h
 *
 * 
 */

#ifndef OAIEpisode_versions_inner_anyOf_store_session_stats_H
#define OAIEpisode_versions_inner_anyOf_store_session_stats_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEpisode_versions_inner_anyOf_store_session_stats : public OAIObject {
public:
    OAIEpisode_versions_inner_anyOf_store_session_stats();
    OAIEpisode_versions_inner_anyOf_store_session_stats(QString json);
    ~OAIEpisode_versions_inner_anyOf_store_session_stats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAssetName() const;
    void setAssetName(const QString &asset_name);
    bool is_asset_name_Set() const;
    bool is_asset_name_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getContentVariant() const;
    void setContentVariant(const QString &content_variant);
    bool is_content_variant_Set() const;
    bool is_content_variant_Valid() const;

    QString getEpisodeName() const;
    void setEpisodeName(const QString &episode_name);
    bool is_episode_name_Set() const;
    bool is_episode_name_Valid() const;

    QString getParentPid() const;
    void setParentPid(const QString &parent_pid);
    bool is_parent_pid_Set() const;
    bool is_parent_pid_Valid() const;

    QString getParentPidType() const;
    void setParentPidType(const QString &parent_pid_type);
    bool is_parent_pid_type_Set() const;
    bool is_parent_pid_type_Valid() const;

    QString getProductVariant() const;
    void setProductVariant(const QString &product_variant);
    bool is_product_variant_Set() const;
    bool is_product_variant_Valid() const;

    QString getViewerId() const;
    void setViewerId(const QString &viewer_id);
    bool is_viewer_id_Set() const;
    bool is_viewer_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_asset_name;
    bool m_asset_name_isSet;
    bool m_asset_name_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_content_variant;
    bool m_content_variant_isSet;
    bool m_content_variant_isValid;

    QString m_episode_name;
    bool m_episode_name_isSet;
    bool m_episode_name_isValid;

    QString m_parent_pid;
    bool m_parent_pid_isSet;
    bool m_parent_pid_isValid;

    QString m_parent_pid_type;
    bool m_parent_pid_type_isSet;
    bool m_parent_pid_type_isValid;

    QString m_product_variant;
    bool m_product_variant_isSet;
    bool m_product_variant_isValid;

    QString m_viewer_id;
    bool m_viewer_id_isSet;
    bool m_viewer_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEpisode_versions_inner_anyOf_store_session_stats)

#endif // OAIEpisode_versions_inner_anyOf_store_session_stats_H
