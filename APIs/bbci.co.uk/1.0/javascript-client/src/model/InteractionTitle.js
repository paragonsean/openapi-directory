/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InteractionTitleLong from './InteractionTitleLong';
import InteractionTitleShort from './InteractionTitleShort';

/**
 * The InteractionTitle model module.
 * @module model/InteractionTitle
 * @version 1.0
 */
class InteractionTitle {
    /**
     * Constructs a new <code>InteractionTitle</code>.
     * @alias module:model/InteractionTitle
     * @param _long {module:model/InteractionTitleLong} 
     * @param _short {module:model/InteractionTitleShort} 
     */
    constructor(_long, _short) { 
        
        InteractionTitle.initialize(this, _long, _short);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, _long, _short) { 
        obj['long'] = _long;
        obj['short'] = _short;
    }

    /**
     * Constructs a <code>InteractionTitle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InteractionTitle} obj Optional instance to populate.
     * @return {module:model/InteractionTitle} The populated <code>InteractionTitle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InteractionTitle();

            if (data.hasOwnProperty('long')) {
                obj['long'] = InteractionTitleLong.constructFromObject(data['long']);
            }
            if (data.hasOwnProperty('short')) {
                obj['short'] = InteractionTitleShort.constructFromObject(data['short']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InteractionTitle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InteractionTitle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InteractionTitle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `long`
        if (data['long']) { // data not null
          InteractionTitleLong.validateJSON(data['long']);
        }
        // validate the optional field `short`
        if (data['short']) { // data not null
          InteractionTitleShort.validateJSON(data['short']);
        }

        return true;
    }


}

InteractionTitle.RequiredProperties = ["long", "short"];

/**
 * @member {module:model/InteractionTitleLong} long
 */
InteractionTitle.prototype['long'] = undefined;

/**
 * @member {module:model/InteractionTitleShort} short
 */
InteractionTitle.prototype['short'] = undefined;






export default InteractionTitle;

