/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EpisodeNextBroadcast model module.
 * @module model/EpisodeNextBroadcast
 * @version 1.0
 */
class EpisodeNextBroadcast {
    /**
     * Constructs a new <code>EpisodeNextBroadcast</code>.
     * @alias module:model/EpisodeNextBroadcast
     * @param channelTitle {String} 
     * @param scheduledStart {String} 
     */
    constructor(channelTitle, scheduledStart) { 
        
        EpisodeNextBroadcast.initialize(this, channelTitle, scheduledStart);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelTitle, scheduledStart) { 
        obj['channel_title'] = channelTitle;
        obj['scheduled_start'] = scheduledStart;
    }

    /**
     * Constructs a <code>EpisodeNextBroadcast</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EpisodeNextBroadcast} obj Optional instance to populate.
     * @return {module:model/EpisodeNextBroadcast} The populated <code>EpisodeNextBroadcast</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EpisodeNextBroadcast();

            if (data.hasOwnProperty('channel_title')) {
                obj['channel_title'] = ApiClient.convertToType(data['channel_title'], 'String');
            }
            if (data.hasOwnProperty('scheduled_start')) {
                obj['scheduled_start'] = ApiClient.convertToType(data['scheduled_start'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EpisodeNextBroadcast</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EpisodeNextBroadcast</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EpisodeNextBroadcast.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['channel_title'] && !(typeof data['channel_title'] === 'string' || data['channel_title'] instanceof String)) {
            throw new Error("Expected the field `channel_title` to be a primitive type in the JSON string but got " + data['channel_title']);
        }
        // ensure the json data is a string
        if (data['scheduled_start'] && !(typeof data['scheduled_start'] === 'string' || data['scheduled_start'] instanceof String)) {
            throw new Error("Expected the field `scheduled_start` to be a primitive type in the JSON string but got " + data['scheduled_start']);
        }

        return true;
    }


}

EpisodeNextBroadcast.RequiredProperties = ["channel_title", "scheduled_start"];

/**
 * @member {String} channel_title
 */
EpisodeNextBroadcast.prototype['channel_title'] = undefined;

/**
 * @member {String} scheduled_start
 */
EpisodeNextBroadcast.prototype['scheduled_start'] = undefined;






export default EpisodeNextBroadcast;

