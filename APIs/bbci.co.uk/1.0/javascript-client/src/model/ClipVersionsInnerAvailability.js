/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClipVersionsInnerAvailabilityRemaining from './ClipVersionsInnerAvailabilityRemaining';

/**
 * The ClipVersionsInnerAvailability model module.
 * @module model/ClipVersionsInnerAvailability
 * @version 1.0
 */
class ClipVersionsInnerAvailability {
    /**
     * Constructs a new <code>ClipVersionsInnerAvailability</code>.
     * @alias module:model/ClipVersionsInnerAvailability
     * @param start {String} 
     */
    constructor(start) { 
        
        ClipVersionsInnerAvailability.initialize(this, start);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, start) { 
        obj['start'] = start;
    }

    /**
     * Constructs a <code>ClipVersionsInnerAvailability</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClipVersionsInnerAvailability} obj Optional instance to populate.
     * @return {module:model/ClipVersionsInnerAvailability} The populated <code>ClipVersionsInnerAvailability</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClipVersionsInnerAvailability();

            if (data.hasOwnProperty('accurate_start')) {
                obj['accurate_start'] = ApiClient.convertToType(data['accurate_start'], 'String');
            }
            if (data.hasOwnProperty('end')) {
                obj['end'] = ApiClient.convertToType(data['end'], 'String');
            }
            if (data.hasOwnProperty('remaining')) {
                obj['remaining'] = ClipVersionsInnerAvailabilityRemaining.constructFromObject(data['remaining']);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClipVersionsInnerAvailability</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClipVersionsInnerAvailability</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ClipVersionsInnerAvailability.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['accurate_start'] && !(typeof data['accurate_start'] === 'string' || data['accurate_start'] instanceof String)) {
            throw new Error("Expected the field `accurate_start` to be a primitive type in the JSON string but got " + data['accurate_start']);
        }
        // ensure the json data is a string
        if (data['end'] && !(typeof data['end'] === 'string' || data['end'] instanceof String)) {
            throw new Error("Expected the field `end` to be a primitive type in the JSON string but got " + data['end']);
        }
        // validate the optional field `remaining`
        if (data['remaining']) { // data not null
          ClipVersionsInnerAvailabilityRemaining.validateJSON(data['remaining']);
        }
        // ensure the json data is a string
        if (data['start'] && !(typeof data['start'] === 'string' || data['start'] instanceof String)) {
            throw new Error("Expected the field `start` to be a primitive type in the JSON string but got " + data['start']);
        }

        return true;
    }


}

ClipVersionsInnerAvailability.RequiredProperties = ["start"];

/**
 * @member {String} accurate_start
 */
ClipVersionsInnerAvailability.prototype['accurate_start'] = undefined;

/**
 * @member {String} end
 */
ClipVersionsInnerAvailability.prototype['end'] = undefined;

/**
 * @member {module:model/ClipVersionsInnerAvailabilityRemaining} remaining
 */
ClipVersionsInnerAvailability.prototype['remaining'] = undefined;

/**
 * @member {String} start
 */
ClipVersionsInnerAvailability.prototype['start'] = undefined;






export default ClipVersionsInnerAvailability;

