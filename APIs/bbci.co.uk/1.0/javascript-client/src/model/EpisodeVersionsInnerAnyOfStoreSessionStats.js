/**
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EpisodeVersionsInnerAnyOfStoreSessionStats model module.
 * @module model/EpisodeVersionsInnerAnyOfStoreSessionStats
 * @version 1.0
 */
class EpisodeVersionsInnerAnyOfStoreSessionStats {
    /**
     * Constructs a new <code>EpisodeVersionsInnerAnyOfStoreSessionStats</code>.
     * @alias module:model/EpisodeVersionsInnerAnyOfStoreSessionStats
     */
    constructor() { 
        
        EpisodeVersionsInnerAnyOfStoreSessionStats.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EpisodeVersionsInnerAnyOfStoreSessionStats</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EpisodeVersionsInnerAnyOfStoreSessionStats} obj Optional instance to populate.
     * @return {module:model/EpisodeVersionsInnerAnyOfStoreSessionStats} The populated <code>EpisodeVersionsInnerAnyOfStoreSessionStats</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EpisodeVersionsInnerAnyOfStoreSessionStats();

            if (data.hasOwnProperty('assetName')) {
                obj['assetName'] = ApiClient.convertToType(data['assetName'], 'String');
            }
            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
            }
            if (data.hasOwnProperty('contentVariant')) {
                obj['contentVariant'] = ApiClient.convertToType(data['contentVariant'], 'String');
            }
            if (data.hasOwnProperty('episodeName')) {
                obj['episodeName'] = ApiClient.convertToType(data['episodeName'], 'String');
            }
            if (data.hasOwnProperty('parentPID')) {
                obj['parentPID'] = ApiClient.convertToType(data['parentPID'], 'String');
            }
            if (data.hasOwnProperty('parentPIDType')) {
                obj['parentPIDType'] = ApiClient.convertToType(data['parentPIDType'], 'String');
            }
            if (data.hasOwnProperty('productVariant')) {
                obj['productVariant'] = ApiClient.convertToType(data['productVariant'], 'String');
            }
            if (data.hasOwnProperty('viewerId')) {
                obj['viewerId'] = ApiClient.convertToType(data['viewerId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EpisodeVersionsInnerAnyOfStoreSessionStats</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EpisodeVersionsInnerAnyOfStoreSessionStats</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['assetName'] && !(typeof data['assetName'] === 'string' || data['assetName'] instanceof String)) {
            throw new Error("Expected the field `assetName` to be a primitive type in the JSON string but got " + data['assetName']);
        }
        // ensure the json data is a string
        if (data['contentType'] && !(typeof data['contentType'] === 'string' || data['contentType'] instanceof String)) {
            throw new Error("Expected the field `contentType` to be a primitive type in the JSON string but got " + data['contentType']);
        }
        // ensure the json data is a string
        if (data['contentVariant'] && !(typeof data['contentVariant'] === 'string' || data['contentVariant'] instanceof String)) {
            throw new Error("Expected the field `contentVariant` to be a primitive type in the JSON string but got " + data['contentVariant']);
        }
        // ensure the json data is a string
        if (data['episodeName'] && !(typeof data['episodeName'] === 'string' || data['episodeName'] instanceof String)) {
            throw new Error("Expected the field `episodeName` to be a primitive type in the JSON string but got " + data['episodeName']);
        }
        // ensure the json data is a string
        if (data['parentPID'] && !(typeof data['parentPID'] === 'string' || data['parentPID'] instanceof String)) {
            throw new Error("Expected the field `parentPID` to be a primitive type in the JSON string but got " + data['parentPID']);
        }
        // ensure the json data is a string
        if (data['parentPIDType'] && !(typeof data['parentPIDType'] === 'string' || data['parentPIDType'] instanceof String)) {
            throw new Error("Expected the field `parentPIDType` to be a primitive type in the JSON string but got " + data['parentPIDType']);
        }
        // ensure the json data is a string
        if (data['productVariant'] && !(typeof data['productVariant'] === 'string' || data['productVariant'] instanceof String)) {
            throw new Error("Expected the field `productVariant` to be a primitive type in the JSON string but got " + data['productVariant']);
        }
        // ensure the json data is a string
        if (data['viewerId'] && !(typeof data['viewerId'] === 'string' || data['viewerId'] instanceof String)) {
            throw new Error("Expected the field `viewerId` to be a primitive type in the JSON string but got " + data['viewerId']);
        }

        return true;
    }


}



/**
 * @member {String} assetName
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['assetName'] = undefined;

/**
 * @member {String} contentType
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['contentType'] = undefined;

/**
 * @member {String} contentVariant
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['contentVariant'] = undefined;

/**
 * @member {String} episodeName
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['episodeName'] = undefined;

/**
 * @member {String} parentPID
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['parentPID'] = undefined;

/**
 * @member {String} parentPIDType
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['parentPIDType'] = undefined;

/**
 * @member {String} productVariant
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['productVariant'] = undefined;

/**
 * @member {String} viewerId
 */
EpisodeVersionsInnerAnyOfStoreSessionStats.prototype['viewerId'] = undefined;






export default EpisodeVersionsInnerAnyOfStoreSessionStats;

