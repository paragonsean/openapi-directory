/*
 * BBC iPlayer Business Layer
 * The definitive iPlayer API.
 *
 * The version of the OpenAPI document: 1.0
 * Contact: ibl-team@lists.forge.bbc.co.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EpisodeVersionsInnerAnyOfStoreSessionStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:15.122769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EpisodeVersionsInnerAnyOfStoreSessionStats {
  public static final String SERIALIZED_NAME_ASSET_NAME = "assetName";
  @SerializedName(SERIALIZED_NAME_ASSET_NAME)
  private String assetName;

  public static final String SERIALIZED_NAME_CONTENT_TYPE = "contentType";
  @SerializedName(SERIALIZED_NAME_CONTENT_TYPE)
  private String contentType;

  public static final String SERIALIZED_NAME_CONTENT_VARIANT = "contentVariant";
  @SerializedName(SERIALIZED_NAME_CONTENT_VARIANT)
  private String contentVariant;

  public static final String SERIALIZED_NAME_EPISODE_NAME = "episodeName";
  @SerializedName(SERIALIZED_NAME_EPISODE_NAME)
  private String episodeName;

  public static final String SERIALIZED_NAME_PARENT_P_I_D = "parentPID";
  @SerializedName(SERIALIZED_NAME_PARENT_P_I_D)
  private String parentPID;

  public static final String SERIALIZED_NAME_PARENT_P_I_D_TYPE = "parentPIDType";
  @SerializedName(SERIALIZED_NAME_PARENT_P_I_D_TYPE)
  private String parentPIDType;

  public static final String SERIALIZED_NAME_PRODUCT_VARIANT = "productVariant";
  @SerializedName(SERIALIZED_NAME_PRODUCT_VARIANT)
  private String productVariant;

  public static final String SERIALIZED_NAME_VIEWER_ID = "viewerId";
  @SerializedName(SERIALIZED_NAME_VIEWER_ID)
  private String viewerId;

  public EpisodeVersionsInnerAnyOfStoreSessionStats() {
  }

  public EpisodeVersionsInnerAnyOfStoreSessionStats assetName(String assetName) {
    this.assetName = assetName;
    return this;
  }

  /**
   * Get assetName
   * @return assetName
   */
  @javax.annotation.Nullable
  public String getAssetName() {
    return assetName;
  }

  public void setAssetName(String assetName) {
    this.assetName = assetName;
  }


  public EpisodeVersionsInnerAnyOfStoreSessionStats contentType(String contentType) {
    this.contentType = contentType;
    return this;
  }

  /**
   * Get contentType
   * @return contentType
   */
  @javax.annotation.Nullable
  public String getContentType() {
    return contentType;
  }

  public void setContentType(String contentType) {
    this.contentType = contentType;
  }


  public EpisodeVersionsInnerAnyOfStoreSessionStats contentVariant(String contentVariant) {
    this.contentVariant = contentVariant;
    return this;
  }

  /**
   * Get contentVariant
   * @return contentVariant
   */
  @javax.annotation.Nullable
  public String getContentVariant() {
    return contentVariant;
  }

  public void setContentVariant(String contentVariant) {
    this.contentVariant = contentVariant;
  }


  public EpisodeVersionsInnerAnyOfStoreSessionStats episodeName(String episodeName) {
    this.episodeName = episodeName;
    return this;
  }

  /**
   * Get episodeName
   * @return episodeName
   */
  @javax.annotation.Nullable
  public String getEpisodeName() {
    return episodeName;
  }

  public void setEpisodeName(String episodeName) {
    this.episodeName = episodeName;
  }


  public EpisodeVersionsInnerAnyOfStoreSessionStats parentPID(String parentPID) {
    this.parentPID = parentPID;
    return this;
  }

  /**
   * Get parentPID
   * @return parentPID
   */
  @javax.annotation.Nullable
  public String getParentPID() {
    return parentPID;
  }

  public void setParentPID(String parentPID) {
    this.parentPID = parentPID;
  }


  public EpisodeVersionsInnerAnyOfStoreSessionStats parentPIDType(String parentPIDType) {
    this.parentPIDType = parentPIDType;
    return this;
  }

  /**
   * Get parentPIDType
   * @return parentPIDType
   */
  @javax.annotation.Nullable
  public String getParentPIDType() {
    return parentPIDType;
  }

  public void setParentPIDType(String parentPIDType) {
    this.parentPIDType = parentPIDType;
  }


  public EpisodeVersionsInnerAnyOfStoreSessionStats productVariant(String productVariant) {
    this.productVariant = productVariant;
    return this;
  }

  /**
   * Get productVariant
   * @return productVariant
   */
  @javax.annotation.Nullable
  public String getProductVariant() {
    return productVariant;
  }

  public void setProductVariant(String productVariant) {
    this.productVariant = productVariant;
  }


  public EpisodeVersionsInnerAnyOfStoreSessionStats viewerId(String viewerId) {
    this.viewerId = viewerId;
    return this;
  }

  /**
   * Get viewerId
   * @return viewerId
   */
  @javax.annotation.Nullable
  public String getViewerId() {
    return viewerId;
  }

  public void setViewerId(String viewerId) {
    this.viewerId = viewerId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EpisodeVersionsInnerAnyOfStoreSessionStats episodeVersionsInnerAnyOfStoreSessionStats = (EpisodeVersionsInnerAnyOfStoreSessionStats) o;
    return Objects.equals(this.assetName, episodeVersionsInnerAnyOfStoreSessionStats.assetName) &&
        Objects.equals(this.contentType, episodeVersionsInnerAnyOfStoreSessionStats.contentType) &&
        Objects.equals(this.contentVariant, episodeVersionsInnerAnyOfStoreSessionStats.contentVariant) &&
        Objects.equals(this.episodeName, episodeVersionsInnerAnyOfStoreSessionStats.episodeName) &&
        Objects.equals(this.parentPID, episodeVersionsInnerAnyOfStoreSessionStats.parentPID) &&
        Objects.equals(this.parentPIDType, episodeVersionsInnerAnyOfStoreSessionStats.parentPIDType) &&
        Objects.equals(this.productVariant, episodeVersionsInnerAnyOfStoreSessionStats.productVariant) &&
        Objects.equals(this.viewerId, episodeVersionsInnerAnyOfStoreSessionStats.viewerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assetName, contentType, contentVariant, episodeName, parentPID, parentPIDType, productVariant, viewerId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EpisodeVersionsInnerAnyOfStoreSessionStats {\n");
    sb.append("    assetName: ").append(toIndentedString(assetName)).append("\n");
    sb.append("    contentType: ").append(toIndentedString(contentType)).append("\n");
    sb.append("    contentVariant: ").append(toIndentedString(contentVariant)).append("\n");
    sb.append("    episodeName: ").append(toIndentedString(episodeName)).append("\n");
    sb.append("    parentPID: ").append(toIndentedString(parentPID)).append("\n");
    sb.append("    parentPIDType: ").append(toIndentedString(parentPIDType)).append("\n");
    sb.append("    productVariant: ").append(toIndentedString(productVariant)).append("\n");
    sb.append("    viewerId: ").append(toIndentedString(viewerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assetName");
    openapiFields.add("contentType");
    openapiFields.add("contentVariant");
    openapiFields.add("episodeName");
    openapiFields.add("parentPID");
    openapiFields.add("parentPIDType");
    openapiFields.add("productVariant");
    openapiFields.add("viewerId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EpisodeVersionsInnerAnyOfStoreSessionStats
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EpisodeVersionsInnerAnyOfStoreSessionStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EpisodeVersionsInnerAnyOfStoreSessionStats is not found in the empty JSON string", EpisodeVersionsInnerAnyOfStoreSessionStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EpisodeVersionsInnerAnyOfStoreSessionStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EpisodeVersionsInnerAnyOfStoreSessionStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("assetName") != null && !jsonObj.get("assetName").isJsonNull()) && !jsonObj.get("assetName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assetName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assetName").toString()));
      }
      if ((jsonObj.get("contentType") != null && !jsonObj.get("contentType").isJsonNull()) && !jsonObj.get("contentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentType").toString()));
      }
      if ((jsonObj.get("contentVariant") != null && !jsonObj.get("contentVariant").isJsonNull()) && !jsonObj.get("contentVariant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contentVariant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contentVariant").toString()));
      }
      if ((jsonObj.get("episodeName") != null && !jsonObj.get("episodeName").isJsonNull()) && !jsonObj.get("episodeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `episodeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("episodeName").toString()));
      }
      if ((jsonObj.get("parentPID") != null && !jsonObj.get("parentPID").isJsonNull()) && !jsonObj.get("parentPID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentPID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentPID").toString()));
      }
      if ((jsonObj.get("parentPIDType") != null && !jsonObj.get("parentPIDType").isJsonNull()) && !jsonObj.get("parentPIDType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `parentPIDType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("parentPIDType").toString()));
      }
      if ((jsonObj.get("productVariant") != null && !jsonObj.get("productVariant").isJsonNull()) && !jsonObj.get("productVariant").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productVariant` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productVariant").toString()));
      }
      if ((jsonObj.get("viewerId") != null && !jsonObj.get("viewerId").isJsonNull()) && !jsonObj.get("viewerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewerId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EpisodeVersionsInnerAnyOfStoreSessionStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EpisodeVersionsInnerAnyOfStoreSessionStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EpisodeVersionsInnerAnyOfStoreSessionStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EpisodeVersionsInnerAnyOfStoreSessionStats.class));

       return (TypeAdapter<T>) new TypeAdapter<EpisodeVersionsInnerAnyOfStoreSessionStats>() {
           @Override
           public void write(JsonWriter out, EpisodeVersionsInnerAnyOfStoreSessionStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EpisodeVersionsInnerAnyOfStoreSessionStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EpisodeVersionsInnerAnyOfStoreSessionStats given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EpisodeVersionsInnerAnyOfStoreSessionStats
   * @throws IOException if the JSON string is invalid with respect to EpisodeVersionsInnerAnyOfStoreSessionStats
   */
  public static EpisodeVersionsInnerAnyOfStoreSessionStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EpisodeVersionsInnerAnyOfStoreSessionStats.class);
  }

  /**
   * Convert an instance of EpisodeVersionsInnerAnyOfStoreSessionStats to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

