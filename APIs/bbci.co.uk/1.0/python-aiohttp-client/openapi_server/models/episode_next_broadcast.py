# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EpisodeNextBroadcast(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_title: str=None, scheduled_start: str=None):
        """EpisodeNextBroadcast - a model defined in OpenAPI

        :param channel_title: The channel_title of this EpisodeNextBroadcast.
        :param scheduled_start: The scheduled_start of this EpisodeNextBroadcast.
        """
        self.openapi_types = {
            'channel_title': str,
            'scheduled_start': str
        }

        self.attribute_map = {
            'channel_title': 'channel_title',
            'scheduled_start': 'scheduled_start'
        }

        self._channel_title = channel_title
        self._scheduled_start = scheduled_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EpisodeNextBroadcast':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The episode_next_broadcast of this EpisodeNextBroadcast.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_title(self):
        """Gets the channel_title of this EpisodeNextBroadcast.


        :return: The channel_title of this EpisodeNextBroadcast.
        :rtype: str
        """
        return self._channel_title

    @channel_title.setter
    def channel_title(self, channel_title):
        """Sets the channel_title of this EpisodeNextBroadcast.


        :param channel_title: The channel_title of this EpisodeNextBroadcast.
        :type channel_title: str
        """
        if channel_title is None:
            raise ValueError("Invalid value for `channel_title`, must not be `None`")

        self._channel_title = channel_title

    @property
    def scheduled_start(self):
        """Gets the scheduled_start of this EpisodeNextBroadcast.


        :return: The scheduled_start of this EpisodeNextBroadcast.
        :rtype: str
        """
        return self._scheduled_start

    @scheduled_start.setter
    def scheduled_start(self, scheduled_start):
        """Sets the scheduled_start of this EpisodeNextBroadcast.


        :param scheduled_start: The scheduled_start of this EpisodeNextBroadcast.
        :type scheduled_start: str
        """
        if scheduled_start is None:
            raise ValueError("Invalid value for `scheduled_start`, must not be `None`")

        self._scheduled_start = scheduled_start
