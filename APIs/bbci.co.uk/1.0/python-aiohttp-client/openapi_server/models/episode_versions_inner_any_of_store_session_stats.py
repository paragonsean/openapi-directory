# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EpisodeVersionsInnerAnyOfStoreSessionStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_name: str=None, content_type: str=None, content_variant: str=None, episode_name: str=None, parent_pid: str=None, parent_pid_type: str=None, product_variant: str=None, viewer_id: str=None):
        """EpisodeVersionsInnerAnyOfStoreSessionStats - a model defined in OpenAPI

        :param asset_name: The asset_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :param content_type: The content_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :param content_variant: The content_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :param episode_name: The episode_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :param parent_pid: The parent_pid of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :param parent_pid_type: The parent_pid_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :param product_variant: The product_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :param viewer_id: The viewer_id of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        """
        self.openapi_types = {
            'asset_name': str,
            'content_type': str,
            'content_variant': str,
            'episode_name': str,
            'parent_pid': str,
            'parent_pid_type': str,
            'product_variant': str,
            'viewer_id': str
        }

        self.attribute_map = {
            'asset_name': 'assetName',
            'content_type': 'contentType',
            'content_variant': 'contentVariant',
            'episode_name': 'episodeName',
            'parent_pid': 'parentPID',
            'parent_pid_type': 'parentPIDType',
            'product_variant': 'productVariant',
            'viewer_id': 'viewerId'
        }

        self._asset_name = asset_name
        self._content_type = content_type
        self._content_variant = content_variant
        self._episode_name = episode_name
        self._parent_pid = parent_pid
        self._parent_pid_type = parent_pid_type
        self._product_variant = product_variant
        self._viewer_id = viewer_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EpisodeVersionsInnerAnyOfStoreSessionStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The episode_versions_inner_anyOf_store_session_stats of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_name(self):
        """Gets the asset_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The asset_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._asset_name

    @asset_name.setter
    def asset_name(self, asset_name):
        """Sets the asset_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param asset_name: The asset_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type asset_name: str
        """

        self._asset_name = asset_name

    @property
    def content_type(self):
        """Gets the content_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The content_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param content_type: The content_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def content_variant(self):
        """Gets the content_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The content_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._content_variant

    @content_variant.setter
    def content_variant(self, content_variant):
        """Sets the content_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param content_variant: The content_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type content_variant: str
        """

        self._content_variant = content_variant

    @property
    def episode_name(self):
        """Gets the episode_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The episode_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._episode_name

    @episode_name.setter
    def episode_name(self, episode_name):
        """Sets the episode_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param episode_name: The episode_name of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type episode_name: str
        """

        self._episode_name = episode_name

    @property
    def parent_pid(self):
        """Gets the parent_pid of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The parent_pid of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._parent_pid

    @parent_pid.setter
    def parent_pid(self, parent_pid):
        """Sets the parent_pid of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param parent_pid: The parent_pid of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type parent_pid: str
        """

        self._parent_pid = parent_pid

    @property
    def parent_pid_type(self):
        """Gets the parent_pid_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The parent_pid_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._parent_pid_type

    @parent_pid_type.setter
    def parent_pid_type(self, parent_pid_type):
        """Sets the parent_pid_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param parent_pid_type: The parent_pid_type of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type parent_pid_type: str
        """

        self._parent_pid_type = parent_pid_type

    @property
    def product_variant(self):
        """Gets the product_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The product_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._product_variant

    @product_variant.setter
    def product_variant(self, product_variant):
        """Sets the product_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param product_variant: The product_variant of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type product_variant: str
        """

        self._product_variant = product_variant

    @property
    def viewer_id(self):
        """Gets the viewer_id of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :return: The viewer_id of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :rtype: str
        """
        return self._viewer_id

    @viewer_id.setter
    def viewer_id(self, viewer_id):
        """Sets the viewer_id of this EpisodeVersionsInnerAnyOfStoreSessionStats.


        :param viewer_id: The viewer_id of this EpisodeVersionsInnerAnyOfStoreSessionStats.
        :type viewer_id: str
        """

        self._viewer_id = viewer_id
