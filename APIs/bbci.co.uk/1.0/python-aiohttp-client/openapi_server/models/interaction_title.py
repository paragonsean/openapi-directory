# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.interaction_title_long import InteractionTitleLong
from openapi_server.models.interaction_title_short import InteractionTitleShort
from openapi_server import util


class InteractionTitle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, long: InteractionTitleLong=None, short: InteractionTitleShort=None):
        """InteractionTitle - a model defined in OpenAPI

        :param long: The long of this InteractionTitle.
        :param short: The short of this InteractionTitle.
        """
        self.openapi_types = {
            'long': InteractionTitleLong,
            'short': InteractionTitleShort
        }

        self.attribute_map = {
            'long': 'long',
            'short': 'short'
        }

        self._long = long
        self._short = short

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InteractionTitle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The interaction_title of this InteractionTitle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def long(self):
        """Gets the long of this InteractionTitle.


        :return: The long of this InteractionTitle.
        :rtype: InteractionTitleLong
        """
        return self._long

    @long.setter
    def long(self, long):
        """Sets the long of this InteractionTitle.


        :param long: The long of this InteractionTitle.
        :type long: InteractionTitleLong
        """
        if long is None:
            raise ValueError("Invalid value for `long`, must not be `None`")

        self._long = long

    @property
    def short(self):
        """Gets the short of this InteractionTitle.


        :return: The short of this InteractionTitle.
        :rtype: InteractionTitleShort
        """
        return self._short

    @short.setter
    def short(self, short):
        """Sets the short of this InteractionTitle.


        :param short: The short of this InteractionTitle.
        :type short: InteractionTitleShort
        """
        if short is None:
            raise ValueError("Invalid value for `short`, must not be `None`")

        self._short = short
