/*
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessToken;
import java.math.BigDecimal;
import org.openapitools.client.model.CreateAccessTokenRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.GetAccessTokensResponse;
import org.openapitools.client.model.PatchAccessTokenRequest;
import org.openapitools.client.model.V2AccessTokensUuidGet200Response;
import org.openapitools.client.model.ValueError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AccessTokensApi
 */
@Disabled
public class AccessTokensApiTest {

    private final AccessTokensApi api = new AccessTokensApi();

    /**
     * Get a list of personal access tokens
     *
     * Returns a paginated list of personal access tokens.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2AccessTokensGetTest() throws ApiException {
        BigDecimal page = null;
        BigDecimal pageSize = null;
        GetAccessTokensResponse response = api.v2AccessTokensGet(page, pageSize);
        // TODO: test validations
    }

    /**
     * Create a personal access token
     *
     * Creates and returns a personal access token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2AccessTokensPostTest() throws ApiException {
        CreateAccessTokenRequest createAccessTokenRequest = null;
        AccessToken response = api.v2AccessTokensPost(createAccessTokenRequest);
        // TODO: test validations
    }

    /**
     * Delete a personal access token
     *
     * Deletes a personal access token permanently. This cannot be undone. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2AccessTokensUuidDeleteTest() throws ApiException {
        String uuid = null;
        api.v2AccessTokensUuidDelete(uuid);
        // TODO: test validations
    }

    /**
     * Get a personal access token
     *
     * Returns a personal access token by UUID.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2AccessTokensUuidGetTest() throws ApiException {
        String uuid = null;
        V2AccessTokensUuidGet200Response response = api.v2AccessTokensUuidGet(uuid);
        // TODO: test validations
    }

    /**
     * Update a personal access token
     *
     * Updates a personal access token partially. You can either update the token&#39;s label or enable/disable it. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2AccessTokensUuidPatchTest() throws ApiException {
        String uuid = null;
        PatchAccessTokenRequest patchAccessTokenRequest = null;
        AccessToken response = api.v2AccessTokensUuidPatch(uuid, patchAccessTokenRequest);
        // TODO: test validations
    }

}
