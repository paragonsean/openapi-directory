/*
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.PaginatedTags;
import org.openapitools.client.model.Tag;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RepositoriesApi
 */
@Disabled
public class RepositoriesApiTest {

    private final RepositoriesApi api = new RepositoriesApi();

    /**
     * List repository tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NamespacesNamespaceRepositoriesRepositoryTagsGetTest() throws ApiException {
        String namespace = null;
        String repository = null;
        Integer page = null;
        Integer pageSize = null;
        PaginatedTags response = api.v2NamespacesNamespaceRepositoriesRepositoryTagsGet(namespace, repository, page, pageSize);
        // TODO: test validations
    }

    /**
     * Check repository tags
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NamespacesNamespaceRepositoriesRepositoryTagsHeadTest() throws ApiException {
        String namespace = null;
        String repository = null;
        api.v2NamespacesNamespaceRepositoriesRepositoryTagsHead(namespace, repository);
        // TODO: test validations
    }

    /**
     * Read repository tag
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NamespacesNamespaceRepositoriesRepositoryTagsTagGetTest() throws ApiException {
        String namespace = null;
        String repository = null;
        String tag = null;
        Tag response = api.v2NamespacesNamespaceRepositoriesRepositoryTagsTagGet(namespace, repository, tag);
        // TODO: test validations
    }

    /**
     * Check repository tag
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v2NamespacesNamespaceRepositoriesRepositoryTagsTagHeadTest() throws ApiException {
        String namespace = null;
        String repository = null;
        String tag = null;
        api.v2NamespacesNamespaceRepositoriesRepositoryTagsTagHead(namespace, repository, tag);
        // TODO: test validations
    }

}
