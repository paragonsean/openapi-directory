/*
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PostUsers2FALoginErrorResponse;
import org.openapitools.client.model.PostUsersLoginErrorResponse;
import org.openapitools.client.model.PostUsersLoginSuccessResponse;
import org.openapitools.client.model.Users2FALoginRequest;
import org.openapitools.client.model.UsersLoginRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationApi
 */
@Disabled
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    /**
     * Second factor authentication.
     *
     * When user has 2FA enabled, this is the second call to perform after &#x60;/v2/users/login&#x60; call.  Creates and returns a bearer token in JWT format that you can use to authenticate with Docker Hub APIs.  The returned token is used in the HTTP Authorization header like &#x60;Authorization: Bearer {TOKEN}&#x60;.  Most Docker Hub APIs require this token either to consume or to get detailed information. For example, to list images in a private repository. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUsers2FALoginTest() throws ApiException {
        Users2FALoginRequest users2FALoginRequest = null;
        PostUsersLoginSuccessResponse response = api.postUsers2FALogin(users2FALoginRequest);
        // TODO: test validations
    }

    /**
     * Create an authentication token
     *
     * Creates and returns a bearer token in JWT format that you can use to authenticate with Docker Hub APIs.  The returned token is used in the HTTP Authorization header like &#x60;Authorization: Bearer {TOKEN}&#x60;.  Most Docker Hub APIs require this token either to consume or to get detailed information. For example, to list images in a private repository. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postUsersLoginTest() throws ApiException {
        UsersLoginRequest usersLoginRequest = null;
        PostUsersLoginSuccessResponse response = api.postUsersLogin(usersLoginRequest);
        // TODO: test validations
    }

}
