/*
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GetAuditActionsResponse;
import org.openapitools.client.model.GetAuditLogsResponse;
import java.time.OffsetDateTime;
import org.openapitools.client.model.RpcStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuditLogsApi
 */
@Disabled
public class AuditLogsApiTest {

    private final AuditLogsApi api = new AuditLogsApi();

    /**
     * Returns list of audit log actions.
     *
     * Get audit log actions for a namespace to be used as a filter for querying audit events.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void auditLogsGetAuditActionsTest() throws ApiException {
        String account = null;
        GetAuditActionsResponse response = api.auditLogsGetAuditActions(account);
        // TODO: test validations
    }

    /**
     * Returns list of audit log  events.
     *
     * Get audit log events for a given namespace.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void auditLogsGetAuditLogsTest() throws ApiException {
        String account = null;
        String action = null;
        String name = null;
        String actor = null;
        OffsetDateTime from = null;
        OffsetDateTime to = null;
        Integer page = null;
        Integer pageSize = null;
        GetAuditLogsResponse response = api.auditLogsGetAuditLogs(account, action, name, actor, from, to, page, pageSize);
        // TODO: test validations
    }

}
