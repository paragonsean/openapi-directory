/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNamespaceRepositoryImagesSummaryResponse.h
 *
 * Summary information for images in a repository.
 */

#ifndef OAIGetNamespaceRepositoryImagesSummaryResponse_H
#define OAIGetNamespaceRepositoryImagesSummaryResponse_H

#include <QJsonObject>

#include "OAIGetNamespaceRepositoryImagesSummaryResponse_statistics.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetNamespaceRepositoryImagesSummaryResponse_statistics;

class OAIGetNamespaceRepositoryImagesSummaryResponse : public OAIObject {
public:
    OAIGetNamespaceRepositoryImagesSummaryResponse();
    OAIGetNamespaceRepositoryImagesSummaryResponse(QString json);
    ~OAIGetNamespaceRepositoryImagesSummaryResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveFrom() const;
    void setActiveFrom(const QString &active_from);
    bool is_active_from_Set() const;
    bool is_active_from_Valid() const;

    OAIGetNamespaceRepositoryImagesSummaryResponse_statistics getStatistics() const;
    void setStatistics(const OAIGetNamespaceRepositoryImagesSummaryResponse_statistics &statistics);
    bool is_statistics_Set() const;
    bool is_statistics_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_from;
    bool m_active_from_isSet;
    bool m_active_from_isValid;

    OAIGetNamespaceRepositoryImagesSummaryResponse_statistics m_statistics;
    bool m_statistics_isSet;
    bool m_statistics_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNamespaceRepositoryImagesSummaryResponse)

#endif // OAIGetNamespaceRepositoryImagesSummaryResponse_H
