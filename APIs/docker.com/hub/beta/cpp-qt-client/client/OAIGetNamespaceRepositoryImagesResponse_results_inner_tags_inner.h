/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner.h
 *
 * 
 */

#ifndef OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner_H
#define OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner : public OAIObject {
public:
    OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner();
    OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner(QString json);
    ~OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIsCurrent() const;
    void setIsCurrent(const bool &is_current);
    bool is_is_current_Set() const;
    bool is_is_current_Valid() const;

    QString getTag() const;
    void setTag(const QString &tag);
    bool is_tag_Set() const;
    bool is_tag_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_is_current;
    bool m_is_current_isSet;
    bool m_is_current_isValid;

    QString m_tag;
    bool m_tag_isSet;
    bool m_tag_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner)

#endif // OAIGetNamespaceRepositoryImagesResponse_results_inner_tags_inner_H
