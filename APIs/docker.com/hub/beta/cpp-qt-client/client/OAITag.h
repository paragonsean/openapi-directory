/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITag.h
 *
 * 
 */

#ifndef OAITag_H
#define OAITag_H

#include <QJsonObject>

#include "OAIImage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITag : public OAIObject {
public:
    OAITag();
    OAITag(QString json);
    ~OAITag() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCreator() const;
    void setCreator(const qint32 &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    qint32 getFullSize() const;
    void setFullSize(const qint32 &full_size);
    bool is_full_size_Set() const;
    bool is_full_size_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIImage getImages() const;
    void setImages(const OAIImage &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QString getLastUpdated() const;
    void setLastUpdated(const QString &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint32 getLastUpdater() const;
    void setLastUpdater(const qint32 &last_updater);
    bool is_last_updater_Set() const;
    bool is_last_updater_Valid() const;

    QString getLastUpdaterUsername() const;
    void setLastUpdaterUsername(const QString &last_updater_username);
    bool is_last_updater_username_Set() const;
    bool is_last_updater_username_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getRepository() const;
    void setRepository(const qint32 &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTagLastPulled() const;
    void setTagLastPulled(const QString &tag_last_pulled);
    bool is_tag_last_pulled_Set() const;
    bool is_tag_last_pulled_Valid() const;

    QString getTagLastPushed() const;
    void setTagLastPushed(const QString &tag_last_pushed);
    bool is_tag_last_pushed_Set() const;
    bool is_tag_last_pushed_Valid() const;

    QString getV2() const;
    void setV2(const QString &v2);
    bool is_v2_Set() const;
    bool is_v2_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    qint32 m_full_size;
    bool m_full_size_isSet;
    bool m_full_size_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIImage m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QString m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint32 m_last_updater;
    bool m_last_updater_isSet;
    bool m_last_updater_isValid;

    QString m_last_updater_username;
    bool m_last_updater_username_isSet;
    bool m_last_updater_username_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_tag_last_pulled;
    bool m_tag_last_pulled_isSet;
    bool m_tag_last_pulled_isValid;

    QString m_tag_last_pushed;
    bool m_tag_last_pushed_isSet;
    bool m_tag_last_pushed_isValid;

    QString m_v2;
    bool m_v2_isSet;
    bool m_v2_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITag)

#endif // OAITag_H
