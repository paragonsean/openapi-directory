/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScim_user.h
 *
 * 
 */

#ifndef OAIScim_user_H
#define OAIScim_user_H

#include <QJsonObject>

#include "OAIScim_email.h"
#include "OAIScim_group.h"
#include "OAIScim_user_meta.h"
#include "OAIScim_user_name.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScim_email;
class OAIScim_group;
class OAIScim_user_meta;
class OAIScim_user_name;

class OAIScim_user : public OAIObject {
public:
    OAIScim_user();
    OAIScim_user(QString json);
    ~OAIScim_user() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIScim_email> getEmails() const;
    void setEmails(const QList<OAIScim_email> &emails);
    bool is_emails_Set() const;
    bool is_emails_Valid() const;

    QList<OAIScim_group> getGroups() const;
    void setGroups(const QList<OAIScim_group> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIScim_user_meta getMeta() const;
    void setMeta(const OAIScim_user_meta &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    OAIScim_user_name getName() const;
    void setName(const OAIScim_user_name &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getSchemas() const;
    void setSchemas(const QList<QString> &schemas);
    bool is_schemas_Set() const;
    bool is_schemas_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIScim_email> m_emails;
    bool m_emails_isSet;
    bool m_emails_isValid;

    QList<OAIScim_group> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIScim_user_meta m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;

    OAIScim_user_name m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_schemas;
    bool m_schemas_isSet;
    bool m_schemas_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScim_user)

#endif // OAIScim_user_H
