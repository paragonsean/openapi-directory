/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIScim_schema_attribute.h
 *
 * 
 */

#ifndef OAIScim_schema_attribute_H
#define OAIScim_schema_attribute_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIScim_schema_attribute : public OAIObject {
public:
    OAIScim_schema_attribute();
    OAIScim_schema_attribute(QString json);
    ~OAIScim_schema_attribute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCaseExact() const;
    void setCaseExact(const bool &case_exact);
    bool is_case_exact_Set() const;
    bool is_case_exact_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isMultiValued() const;
    void setMultiValued(const bool &multi_valued);
    bool is_multi_valued_Set() const;
    bool is_multi_valued_Valid() const;

    QString getMutability() const;
    void setMutability(const QString &mutability);
    bool is_mutability_Set() const;
    bool is_mutability_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getReturned() const;
    void setReturned(const QString &returned);
    bool is_returned_Set() const;
    bool is_returned_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUniqueness() const;
    void setUniqueness(const QString &uniqueness);
    bool is_uniqueness_Set() const;
    bool is_uniqueness_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_case_exact;
    bool m_case_exact_isSet;
    bool m_case_exact_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_multi_valued;
    bool m_multi_valued_isSet;
    bool m_multi_valued_isValid;

    QString m_mutability;
    bool m_mutability_isSet;
    bool m_mutability_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_returned;
    bool m_returned_isSet;
    bool m_returned_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uniqueness;
    bool m_uniqueness_isSet;
    bool m_uniqueness_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIScim_schema_attribute)

#endif // OAIScim_schema_attribute_H
