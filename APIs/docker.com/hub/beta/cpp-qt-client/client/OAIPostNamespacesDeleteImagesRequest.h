/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPostNamespacesDeleteImagesRequest.h
 *
 * Delete images request.
 */

#ifndef OAIPostNamespacesDeleteImagesRequest_H
#define OAIPostNamespacesDeleteImagesRequest_H

#include <QJsonObject>

#include "OAIPostNamespacesDeleteImagesRequest_ignore_warnings_inner.h"
#include "OAIPostNamespacesDeleteImagesRequest_manifests_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPostNamespacesDeleteImagesRequest_ignore_warnings_inner;
class OAIPostNamespacesDeleteImagesRequest_manifests_inner;

class OAIPostNamespacesDeleteImagesRequest : public OAIObject {
public:
    OAIPostNamespacesDeleteImagesRequest();
    OAIPostNamespacesDeleteImagesRequest(QString json);
    ~OAIPostNamespacesDeleteImagesRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActiveFrom() const;
    void setActiveFrom(const QString &active_from);
    bool is_active_from_Set() const;
    bool is_active_from_Valid() const;

    bool isDryRun() const;
    void setDryRun(const bool &dry_run);
    bool is_dry_run_Set() const;
    bool is_dry_run_Valid() const;

    QList<OAIPostNamespacesDeleteImagesRequest_ignore_warnings_inner> getIgnoreWarnings() const;
    void setIgnoreWarnings(const QList<OAIPostNamespacesDeleteImagesRequest_ignore_warnings_inner> &ignore_warnings);
    bool is_ignore_warnings_Set() const;
    bool is_ignore_warnings_Valid() const;

    QList<OAIPostNamespacesDeleteImagesRequest_manifests_inner> getManifests() const;
    void setManifests(const QList<OAIPostNamespacesDeleteImagesRequest_manifests_inner> &manifests);
    bool is_manifests_Set() const;
    bool is_manifests_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_active_from;
    bool m_active_from_isSet;
    bool m_active_from_isValid;

    bool m_dry_run;
    bool m_dry_run_isSet;
    bool m_dry_run_isValid;

    QList<OAIPostNamespacesDeleteImagesRequest_ignore_warnings_inner> m_ignore_warnings;
    bool m_ignore_warnings_isSet;
    bool m_ignore_warnings_isValid;

    QList<OAIPostNamespacesDeleteImagesRequest_manifests_inner> m_manifests;
    bool m_manifests_isSet;
    bool m_manifests_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPostNamespacesDeleteImagesRequest)

#endif // OAIPostNamespacesDeleteImagesRequest_H
