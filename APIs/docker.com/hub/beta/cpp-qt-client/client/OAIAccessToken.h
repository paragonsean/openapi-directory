/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccessToken.h
 *
 * 
 */

#ifndef OAIAccessToken_H
#define OAIAccessToken_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccessToken : public OAIObject {
public:
    OAIAccessToken();
    OAIAccessToken(QString json);
    ~OAIAccessToken() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientId() const;
    void setClientId(const QString &client_id);
    bool is_client_id_Set() const;
    bool is_client_id_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatorIp() const;
    void setCreatorIp(const QString &creator_ip);
    bool is_creator_ip_Set() const;
    bool is_creator_ip_Valid() const;

    QString getCreatorUa() const;
    void setCreatorUa(const QString &creator_ua);
    bool is_creator_ua_Set() const;
    bool is_creator_ua_Valid() const;

    QString getGeneratedBy() const;
    void setGeneratedBy(const QString &generated_by);
    bool is_generated_by_Set() const;
    bool is_generated_by_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    QString getLastUsed() const;
    void setLastUsed(const QString &last_used);
    bool is_last_used_Set() const;
    bool is_last_used_Valid() const;

    QList<QString> getScopes() const;
    void setScopes(const QList<QString> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getTokenLabel() const;
    void setTokenLabel(const QString &token_label);
    bool is_token_label_Set() const;
    bool is_token_label_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_id;
    bool m_client_id_isSet;
    bool m_client_id_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_creator_ip;
    bool m_creator_ip_isSet;
    bool m_creator_ip_isValid;

    QString m_creator_ua;
    bool m_creator_ua_isSet;
    bool m_creator_ua_isValid;

    QString m_generated_by;
    bool m_generated_by_isSet;
    bool m_generated_by_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    QString m_last_used;
    bool m_last_used_isSet;
    bool m_last_used_isValid;

    QList<QString> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_token_label;
    bool m_token_label_isSet;
    bool m_token_label_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccessToken)

#endif // OAIAccessToken_H
