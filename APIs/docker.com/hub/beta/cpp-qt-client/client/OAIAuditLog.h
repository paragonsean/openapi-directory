/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuditLog.h
 *
 * Audit log event.
 */

#ifndef OAIAuditLog_H
#define OAIAuditLog_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuditLog : public OAIObject {
public:
    OAIAuditLog();
    OAIAuditLog(QString json);
    ~OAIAuditLog() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccount() const;
    void setAccount(const QString &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    QString getActionDescription() const;
    void setActionDescription(const QString &action_description);
    bool is_action_description_Set() const;
    bool is_action_description_Valid() const;

    QString getActor() const;
    void setActor(const QString &actor);
    bool is_actor_Set() const;
    bool is_actor_Valid() const;

    QMap<QString, QString> getData() const;
    void setData(const QMap<QString, QString> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    QString m_action_description;
    bool m_action_description_isSet;
    bool m_action_description_isValid;

    QString m_actor;
    bool m_actor_isSet;
    bool m_actor_isValid;

    QMap<QString, QString> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuditLog)

#endif // OAIAuditLog_H
