/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIErrorResponse.h
 *
 * Represents an error.
 */

#ifndef OAIErrorResponse_H
#define OAIErrorResponse_H

#include <QJsonObject>

#include "OAIErrorInfo.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIErrorInfo;

class OAIErrorResponse : public OAIObject {
public:
    OAIErrorResponse();
    OAIErrorResponse(QString json);
    ~OAIErrorResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIErrorInfo getErrinfo() const;
    void setErrinfo(const OAIErrorInfo &errinfo);
    bool is_errinfo_Set() const;
    bool is_errinfo_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getTxnid() const;
    void setTxnid(const QString &txnid);
    bool is_txnid_Set() const;
    bool is_txnid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIErrorInfo m_errinfo;
    bool m_errinfo_isSet;
    bool m_errinfo_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_txnid;
    bool m_txnid_isSet;
    bool m_txnid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIErrorResponse)

#endif // OAIErrorResponse_H
