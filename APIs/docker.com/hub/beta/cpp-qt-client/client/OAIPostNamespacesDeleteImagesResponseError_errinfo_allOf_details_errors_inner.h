/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner.h
 *
 * 
 */

#ifndef OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner_H
#define OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner : public OAIObject {
public:
    OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner();
    OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner(QString json);
    ~OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDigest() const;
    void setDigest(const QString &digest);
    bool is_digest_Set() const;
    bool is_digest_Valid() const;

    QString getError() const;
    void setError(const QString &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getRepository() const;
    void setRepository(const QString &repository);
    bool is_repository_Set() const;
    bool is_repository_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_digest;
    bool m_digest_isSet;
    bool m_digest_isValid;

    QString m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_repository;
    bool m_repository_isSet;
    bool m_repository_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner)

#endif // OAIPostNamespacesDeleteImagesResponseError_errinfo_allOf_details_errors_inner_H
