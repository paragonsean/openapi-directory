/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIScim_service_provider_config_authenticationSchemes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIScim_service_provider_config_authenticationSchemes::OAIScim_service_provider_config_authenticationSchemes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIScim_service_provider_config_authenticationSchemes::OAIScim_service_provider_config_authenticationSchemes() {
    this->initializeModel();
}

OAIScim_service_provider_config_authenticationSchemes::~OAIScim_service_provider_config_authenticationSchemes() {}

void OAIScim_service_provider_config_authenticationSchemes::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_spec_uri_isSet = false;
    m_spec_uri_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIScim_service_provider_config_authenticationSchemes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIScim_service_provider_config_authenticationSchemes::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_spec_uri_isValid = ::OpenAPI::fromJsonValue(m_spec_uri, json[QString("specUri")]);
    m_spec_uri_isSet = !json[QString("specUri")].isNull() && m_spec_uri_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIScim_service_provider_config_authenticationSchemes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIScim_service_provider_config_authenticationSchemes::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_spec_uri_isSet) {
        obj.insert(QString("specUri"), ::OpenAPI::toJsonValue(m_spec_uri));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIScim_service_provider_config_authenticationSchemes::getDescription() const {
    return m_description;
}
void OAIScim_service_provider_config_authenticationSchemes::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_description_Set() const{
    return m_description_isSet;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIScim_service_provider_config_authenticationSchemes::getName() const {
    return m_name;
}
void OAIScim_service_provider_config_authenticationSchemes::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_name_Set() const{
    return m_name_isSet;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIScim_service_provider_config_authenticationSchemes::getSpecUri() const {
    return m_spec_uri;
}
void OAIScim_service_provider_config_authenticationSchemes::setSpecUri(const QString &spec_uri) {
    m_spec_uri = spec_uri;
    m_spec_uri_isSet = true;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_spec_uri_Set() const{
    return m_spec_uri_isSet;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_spec_uri_Valid() const{
    return m_spec_uri_isValid;
}

QString OAIScim_service_provider_config_authenticationSchemes::getType() const {
    return m_type;
}
void OAIScim_service_provider_config_authenticationSchemes::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_type_Set() const{
    return m_type_isSet;
}

bool OAIScim_service_provider_config_authenticationSchemes::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIScim_service_provider_config_authenticationSchemes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_spec_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIScim_service_provider_config_authenticationSchemes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
