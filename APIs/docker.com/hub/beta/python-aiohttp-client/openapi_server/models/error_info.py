# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, api_call_docker_id: str=None, api_call_name: str=None, api_call_start: str=None, api_call_txnid: str=None):
        """ErrorInfo - a model defined in OpenAPI

        :param api_call_docker_id: The api_call_docker_id of this ErrorInfo.
        :param api_call_name: The api_call_name of this ErrorInfo.
        :param api_call_start: The api_call_start of this ErrorInfo.
        :param api_call_txnid: The api_call_txnid of this ErrorInfo.
        """
        self.openapi_types = {
            'api_call_docker_id': str,
            'api_call_name': str,
            'api_call_start': str,
            'api_call_txnid': str
        }

        self.attribute_map = {
            'api_call_docker_id': 'api_call_docker_id',
            'api_call_name': 'api_call_name',
            'api_call_start': 'api_call_start',
            'api_call_txnid': 'api_call_txnid'
        }

        self._api_call_docker_id = api_call_docker_id
        self._api_call_name = api_call_name
        self._api_call_start = api_call_start
        self._api_call_txnid = api_call_txnid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorInfo of this ErrorInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def api_call_docker_id(self):
        """Gets the api_call_docker_id of this ErrorInfo.

        ID of docker user.

        :return: The api_call_docker_id of this ErrorInfo.
        :rtype: str
        """
        return self._api_call_docker_id

    @api_call_docker_id.setter
    def api_call_docker_id(self, api_call_docker_id):
        """Sets the api_call_docker_id of this ErrorInfo.

        ID of docker user.

        :param api_call_docker_id: The api_call_docker_id of this ErrorInfo.
        :type api_call_docker_id: str
        """

        self._api_call_docker_id = api_call_docker_id

    @property
    def api_call_name(self):
        """Gets the api_call_name of this ErrorInfo.

        Name of the API operation called.

        :return: The api_call_name of this ErrorInfo.
        :rtype: str
        """
        return self._api_call_name

    @api_call_name.setter
    def api_call_name(self, api_call_name):
        """Sets the api_call_name of this ErrorInfo.

        Name of the API operation called.

        :param api_call_name: The api_call_name of this ErrorInfo.
        :type api_call_name: str
        """

        self._api_call_name = api_call_name

    @property
    def api_call_start(self):
        """Gets the api_call_start of this ErrorInfo.

        Date/time of call start.

        :return: The api_call_start of this ErrorInfo.
        :rtype: str
        """
        return self._api_call_start

    @api_call_start.setter
    def api_call_start(self, api_call_start):
        """Sets the api_call_start of this ErrorInfo.

        Date/time of call start.

        :param api_call_start: The api_call_start of this ErrorInfo.
        :type api_call_start: str
        """

        self._api_call_start = api_call_start

    @property
    def api_call_txnid(self):
        """Gets the api_call_txnid of this ErrorInfo.

        Unique ID for this call.

        :return: The api_call_txnid of this ErrorInfo.
        :rtype: str
        """
        return self._api_call_txnid

    @api_call_txnid.setter
    def api_call_txnid(self, api_call_txnid):
        """Sets the api_call_txnid of this ErrorInfo.

        Unique ID for this call.

        :param api_call_txnid: The api_call_txnid of this ErrorInfo.
        :type api_call_txnid: str
        """

        self._api_call_txnid = api_call_txnid
