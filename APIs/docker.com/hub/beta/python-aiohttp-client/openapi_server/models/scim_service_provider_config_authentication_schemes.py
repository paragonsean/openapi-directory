# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScimServiceProviderConfigAuthenticationSchemes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, spec_uri: str=None, type: str=None):
        """ScimServiceProviderConfigAuthenticationSchemes - a model defined in OpenAPI

        :param description: The description of this ScimServiceProviderConfigAuthenticationSchemes.
        :param name: The name of this ScimServiceProviderConfigAuthenticationSchemes.
        :param spec_uri: The spec_uri of this ScimServiceProviderConfigAuthenticationSchemes.
        :param type: The type of this ScimServiceProviderConfigAuthenticationSchemes.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'spec_uri': str,
            'type': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'spec_uri': 'specUri',
            'type': 'type'
        }

        self._description = description
        self._name = name
        self._spec_uri = spec_uri
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScimServiceProviderConfigAuthenticationSchemes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scim_service_provider_config_authenticationSchemes of this ScimServiceProviderConfigAuthenticationSchemes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ScimServiceProviderConfigAuthenticationSchemes.


        :return: The description of this ScimServiceProviderConfigAuthenticationSchemes.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ScimServiceProviderConfigAuthenticationSchemes.


        :param description: The description of this ScimServiceProviderConfigAuthenticationSchemes.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this ScimServiceProviderConfigAuthenticationSchemes.


        :return: The name of this ScimServiceProviderConfigAuthenticationSchemes.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ScimServiceProviderConfigAuthenticationSchemes.


        :param name: The name of this ScimServiceProviderConfigAuthenticationSchemes.
        :type name: str
        """

        self._name = name

    @property
    def spec_uri(self):
        """Gets the spec_uri of this ScimServiceProviderConfigAuthenticationSchemes.


        :return: The spec_uri of this ScimServiceProviderConfigAuthenticationSchemes.
        :rtype: str
        """
        return self._spec_uri

    @spec_uri.setter
    def spec_uri(self, spec_uri):
        """Sets the spec_uri of this ScimServiceProviderConfigAuthenticationSchemes.


        :param spec_uri: The spec_uri of this ScimServiceProviderConfigAuthenticationSchemes.
        :type spec_uri: str
        """

        self._spec_uri = spec_uri

    @property
    def type(self):
        """Gets the type of this ScimServiceProviderConfigAuthenticationSchemes.


        :return: The type of this ScimServiceProviderConfigAuthenticationSchemes.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ScimServiceProviderConfigAuthenticationSchemes.


        :param type: The type of this ScimServiceProviderConfigAuthenticationSchemes.
        :type type: str
        """

        self._type = type
