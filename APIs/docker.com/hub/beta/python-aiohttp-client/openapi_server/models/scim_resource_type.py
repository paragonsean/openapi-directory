# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScimResourceType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, endpoint: str=None, id: str=None, name: str=None, _schema: str=None, schemas: List[str]=None):
        """ScimResourceType - a model defined in OpenAPI

        :param description: The description of this ScimResourceType.
        :param endpoint: The endpoint of this ScimResourceType.
        :param id: The id of this ScimResourceType.
        :param name: The name of this ScimResourceType.
        :param _schema: The _schema of this ScimResourceType.
        :param schemas: The schemas of this ScimResourceType.
        """
        self.openapi_types = {
            'description': str,
            'endpoint': str,
            'id': str,
            'name': str,
            '_schema': str,
            'schemas': List[str]
        }

        self.attribute_map = {
            'description': 'description',
            'endpoint': 'endpoint',
            'id': 'id',
            'name': 'name',
            '_schema': 'schema',
            'schemas': 'schemas'
        }

        self._description = description
        self._endpoint = endpoint
        self._id = id
        self._name = name
        self.__schema = _schema
        self._schemas = schemas

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScimResourceType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scim_resource_type of this ScimResourceType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ScimResourceType.


        :return: The description of this ScimResourceType.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ScimResourceType.


        :param description: The description of this ScimResourceType.
        :type description: str
        """

        self._description = description

    @property
    def endpoint(self):
        """Gets the endpoint of this ScimResourceType.


        :return: The endpoint of this ScimResourceType.
        :rtype: str
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this ScimResourceType.


        :param endpoint: The endpoint of this ScimResourceType.
        :type endpoint: str
        """

        self._endpoint = endpoint

    @property
    def id(self):
        """Gets the id of this ScimResourceType.


        :return: The id of this ScimResourceType.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ScimResourceType.


        :param id: The id of this ScimResourceType.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ScimResourceType.


        :return: The name of this ScimResourceType.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ScimResourceType.


        :param name: The name of this ScimResourceType.
        :type name: str
        """

        self._name = name

    @property
    def _schema(self):
        """Gets the _schema of this ScimResourceType.


        :return: The _schema of this ScimResourceType.
        :rtype: str
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this ScimResourceType.


        :param _schema: The _schema of this ScimResourceType.
        :type _schema: str
        """

        self.__schema = _schema

    @property
    def schemas(self):
        """Gets the schemas of this ScimResourceType.


        :return: The schemas of this ScimResourceType.
        :rtype: List[str]
        """
        return self._schemas

    @schemas.setter
    def schemas(self, schemas):
        """Sets the schemas of this ScimResourceType.


        :param schemas: The schemas of this ScimResourceType.
        :type schemas: List[str]
        """

        self._schemas = schemas
