# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scim_schema import ScimSchema
from openapi_server import util


class V2Scim20SchemasGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, resources: List[ScimSchema]=None, schemas: List[str]=None, total_results: int=None):
        """V2Scim20SchemasGet200Response - a model defined in OpenAPI

        :param resources: The resources of this V2Scim20SchemasGet200Response.
        :param schemas: The schemas of this V2Scim20SchemasGet200Response.
        :param total_results: The total_results of this V2Scim20SchemasGet200Response.
        """
        self.openapi_types = {
            'resources': List[ScimSchema],
            'schemas': List[str],
            'total_results': int
        }

        self.attribute_map = {
            'resources': 'resources',
            'schemas': 'schemas',
            'total_results': 'totalResults'
        }

        self._resources = resources
        self._schemas = schemas
        self._total_results = total_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2Scim20SchemasGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _v2_scim_2_0_Schemas_get_200_response of this V2Scim20SchemasGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def resources(self):
        """Gets the resources of this V2Scim20SchemasGet200Response.


        :return: The resources of this V2Scim20SchemasGet200Response.
        :rtype: List[ScimSchema]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this V2Scim20SchemasGet200Response.


        :param resources: The resources of this V2Scim20SchemasGet200Response.
        :type resources: List[ScimSchema]
        """

        self._resources = resources

    @property
    def schemas(self):
        """Gets the schemas of this V2Scim20SchemasGet200Response.


        :return: The schemas of this V2Scim20SchemasGet200Response.
        :rtype: List[str]
        """
        return self._schemas

    @schemas.setter
    def schemas(self, schemas):
        """Sets the schemas of this V2Scim20SchemasGet200Response.


        :param schemas: The schemas of this V2Scim20SchemasGet200Response.
        :type schemas: List[str]
        """

        self._schemas = schemas

    @property
    def total_results(self):
        """Gets the total_results of this V2Scim20SchemasGet200Response.


        :return: The total_results of this V2Scim20SchemasGet200Response.
        :rtype: int
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results):
        """Sets the total_results of this V2Scim20SchemasGet200Response.


        :param total_results: The total_results of this V2Scim20SchemasGet200Response.
        :type total_results: int
        """

        self._total_results = total_results
