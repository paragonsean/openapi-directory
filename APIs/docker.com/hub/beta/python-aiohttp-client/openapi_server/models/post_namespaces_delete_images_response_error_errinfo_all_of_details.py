# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.post_namespaces_delete_images_response_error_errinfo_all_of_details_errors_inner import PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsErrorsInner
from openapi_server.models.post_namespaces_delete_images_response_error_errinfo_all_of_details_warnings_inner import PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner
from openapi_server import util


class PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsErrorsInner]=None, warnings: List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner]=None):
        """PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails - a model defined in OpenAPI

        :param errors: The errors of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.
        :param warnings: The warnings of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.
        """
        self.openapi_types = {
            'errors': List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsErrorsInner],
            'warnings': List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner]
        }

        self.attribute_map = {
            'errors': 'errors',
            'warnings': 'warnings'
        }

        self._errors = errors
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostNamespacesDeleteImagesResponseError_errinfo_allOf_details of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.

        Errors from validating delete request. These cannot be ignored.

        :return: The errors of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.
        :rtype: List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsErrorsInner]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.

        Errors from validating delete request. These cannot be ignored.

        :param errors: The errors of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.
        :type errors: List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsErrorsInner]
        """

        self._errors = errors

    @property
    def warnings(self):
        """Gets the warnings of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.

        Warnings that can be ignored.  These warnings include:  - is_active: warning when attempting to delete an image that is marked as  active. - current_tag: warning when attempting to delete an image that has one or  more current tags in the repository.  Warnings can be copied from the response to the request. 

        :return: The warnings of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.
        :rtype: List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.

        Warnings that can be ignored.  These warnings include:  - is_active: warning when attempting to delete an image that is marked as  active. - current_tag: warning when attempting to delete an image that has one or  more current tags in the repository.  Warnings can be copied from the response to the request. 

        :param warnings: The warnings of this PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetails.
        :type warnings: List[PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner]
        """

        self._warnings = warnings
