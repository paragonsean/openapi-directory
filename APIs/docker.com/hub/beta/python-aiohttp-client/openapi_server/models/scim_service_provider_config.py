# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scim_service_provider_config_authentication_schemes import ScimServiceProviderConfigAuthenticationSchemes
from openapi_server.models.scim_service_provider_config_bulk import ScimServiceProviderConfigBulk
from openapi_server.models.scim_service_provider_config_change_password import ScimServiceProviderConfigChangePassword
from openapi_server.models.scim_service_provider_config_filter import ScimServiceProviderConfigFilter
from openapi_server.models.scim_service_provider_config_patch import ScimServiceProviderConfigPatch
from openapi_server.models.scim_service_provider_config_sort import ScimServiceProviderConfigSort
from openapi_server import util


class ScimServiceProviderConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authentication_schemes: ScimServiceProviderConfigAuthenticationSchemes=None, bulk: ScimServiceProviderConfigBulk=None, change_password: ScimServiceProviderConfigChangePassword=None, documentation_uri: str=None, etag: ScimServiceProviderConfigChangePassword=None, filter: ScimServiceProviderConfigFilter=None, patch: ScimServiceProviderConfigPatch=None, schemas: List[str]=None, sort: ScimServiceProviderConfigSort=None):
        """ScimServiceProviderConfig - a model defined in OpenAPI

        :param authentication_schemes: The authentication_schemes of this ScimServiceProviderConfig.
        :param bulk: The bulk of this ScimServiceProviderConfig.
        :param change_password: The change_password of this ScimServiceProviderConfig.
        :param documentation_uri: The documentation_uri of this ScimServiceProviderConfig.
        :param etag: The etag of this ScimServiceProviderConfig.
        :param filter: The filter of this ScimServiceProviderConfig.
        :param patch: The patch of this ScimServiceProviderConfig.
        :param schemas: The schemas of this ScimServiceProviderConfig.
        :param sort: The sort of this ScimServiceProviderConfig.
        """
        self.openapi_types = {
            'authentication_schemes': ScimServiceProviderConfigAuthenticationSchemes,
            'bulk': ScimServiceProviderConfigBulk,
            'change_password': ScimServiceProviderConfigChangePassword,
            'documentation_uri': str,
            'etag': ScimServiceProviderConfigChangePassword,
            'filter': ScimServiceProviderConfigFilter,
            'patch': ScimServiceProviderConfigPatch,
            'schemas': List[str],
            'sort': ScimServiceProviderConfigSort
        }

        self.attribute_map = {
            'authentication_schemes': 'authenticationSchemes',
            'bulk': 'bulk',
            'change_password': 'changePassword',
            'documentation_uri': 'documentationUri',
            'etag': 'etag',
            'filter': 'filter',
            'patch': 'patch',
            'schemas': 'schemas',
            'sort': 'sort'
        }

        self._authentication_schemes = authentication_schemes
        self._bulk = bulk
        self._change_password = change_password
        self._documentation_uri = documentation_uri
        self._etag = etag
        self._filter = filter
        self._patch = patch
        self._schemas = schemas
        self._sort = sort

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScimServiceProviderConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scim_service_provider_config of this ScimServiceProviderConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authentication_schemes(self):
        """Gets the authentication_schemes of this ScimServiceProviderConfig.


        :return: The authentication_schemes of this ScimServiceProviderConfig.
        :rtype: ScimServiceProviderConfigAuthenticationSchemes
        """
        return self._authentication_schemes

    @authentication_schemes.setter
    def authentication_schemes(self, authentication_schemes):
        """Sets the authentication_schemes of this ScimServiceProviderConfig.


        :param authentication_schemes: The authentication_schemes of this ScimServiceProviderConfig.
        :type authentication_schemes: ScimServiceProviderConfigAuthenticationSchemes
        """

        self._authentication_schemes = authentication_schemes

    @property
    def bulk(self):
        """Gets the bulk of this ScimServiceProviderConfig.


        :return: The bulk of this ScimServiceProviderConfig.
        :rtype: ScimServiceProviderConfigBulk
        """
        return self._bulk

    @bulk.setter
    def bulk(self, bulk):
        """Sets the bulk of this ScimServiceProviderConfig.


        :param bulk: The bulk of this ScimServiceProviderConfig.
        :type bulk: ScimServiceProviderConfigBulk
        """

        self._bulk = bulk

    @property
    def change_password(self):
        """Gets the change_password of this ScimServiceProviderConfig.


        :return: The change_password of this ScimServiceProviderConfig.
        :rtype: ScimServiceProviderConfigChangePassword
        """
        return self._change_password

    @change_password.setter
    def change_password(self, change_password):
        """Sets the change_password of this ScimServiceProviderConfig.


        :param change_password: The change_password of this ScimServiceProviderConfig.
        :type change_password: ScimServiceProviderConfigChangePassword
        """

        self._change_password = change_password

    @property
    def documentation_uri(self):
        """Gets the documentation_uri of this ScimServiceProviderConfig.


        :return: The documentation_uri of this ScimServiceProviderConfig.
        :rtype: str
        """
        return self._documentation_uri

    @documentation_uri.setter
    def documentation_uri(self, documentation_uri):
        """Sets the documentation_uri of this ScimServiceProviderConfig.


        :param documentation_uri: The documentation_uri of this ScimServiceProviderConfig.
        :type documentation_uri: str
        """

        self._documentation_uri = documentation_uri

    @property
    def etag(self):
        """Gets the etag of this ScimServiceProviderConfig.


        :return: The etag of this ScimServiceProviderConfig.
        :rtype: ScimServiceProviderConfigChangePassword
        """
        return self._etag

    @etag.setter
    def etag(self, etag):
        """Sets the etag of this ScimServiceProviderConfig.


        :param etag: The etag of this ScimServiceProviderConfig.
        :type etag: ScimServiceProviderConfigChangePassword
        """

        self._etag = etag

    @property
    def filter(self):
        """Gets the filter of this ScimServiceProviderConfig.


        :return: The filter of this ScimServiceProviderConfig.
        :rtype: ScimServiceProviderConfigFilter
        """
        return self._filter

    @filter.setter
    def filter(self, filter):
        """Sets the filter of this ScimServiceProviderConfig.


        :param filter: The filter of this ScimServiceProviderConfig.
        :type filter: ScimServiceProviderConfigFilter
        """

        self._filter = filter

    @property
    def patch(self):
        """Gets the patch of this ScimServiceProviderConfig.


        :return: The patch of this ScimServiceProviderConfig.
        :rtype: ScimServiceProviderConfigPatch
        """
        return self._patch

    @patch.setter
    def patch(self, patch):
        """Sets the patch of this ScimServiceProviderConfig.


        :param patch: The patch of this ScimServiceProviderConfig.
        :type patch: ScimServiceProviderConfigPatch
        """

        self._patch = patch

    @property
    def schemas(self):
        """Gets the schemas of this ScimServiceProviderConfig.


        :return: The schemas of this ScimServiceProviderConfig.
        :rtype: List[str]
        """
        return self._schemas

    @schemas.setter
    def schemas(self, schemas):
        """Sets the schemas of this ScimServiceProviderConfig.


        :param schemas: The schemas of this ScimServiceProviderConfig.
        :type schemas: List[str]
        """

        self._schemas = schemas

    @property
    def sort(self):
        """Gets the sort of this ScimServiceProviderConfig.


        :return: The sort of this ScimServiceProviderConfig.
        :rtype: ScimServiceProviderConfigSort
        """
        return self._sort

    @sort.setter
    def sort(self, sort):
        """Sets the sort of this ScimServiceProviderConfig.


        :param sort: The sort of this ScimServiceProviderConfig.
        :type sort: ScimServiceProviderConfigSort
        """

        self._sort = sort
