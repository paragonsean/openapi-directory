# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScimServiceProviderConfigBulk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_operations: int=None, max_payload_size: int=None, supported: bool=None):
        """ScimServiceProviderConfigBulk - a model defined in OpenAPI

        :param max_operations: The max_operations of this ScimServiceProviderConfigBulk.
        :param max_payload_size: The max_payload_size of this ScimServiceProviderConfigBulk.
        :param supported: The supported of this ScimServiceProviderConfigBulk.
        """
        self.openapi_types = {
            'max_operations': int,
            'max_payload_size': int,
            'supported': bool
        }

        self.attribute_map = {
            'max_operations': 'maxOperations',
            'max_payload_size': 'maxPayloadSize',
            'supported': 'supported'
        }

        self._max_operations = max_operations
        self._max_payload_size = max_payload_size
        self._supported = supported

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScimServiceProviderConfigBulk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scim_service_provider_config_bulk of this ScimServiceProviderConfigBulk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_operations(self):
        """Gets the max_operations of this ScimServiceProviderConfigBulk.


        :return: The max_operations of this ScimServiceProviderConfigBulk.
        :rtype: int
        """
        return self._max_operations

    @max_operations.setter
    def max_operations(self, max_operations):
        """Sets the max_operations of this ScimServiceProviderConfigBulk.


        :param max_operations: The max_operations of this ScimServiceProviderConfigBulk.
        :type max_operations: int
        """

        self._max_operations = max_operations

    @property
    def max_payload_size(self):
        """Gets the max_payload_size of this ScimServiceProviderConfigBulk.


        :return: The max_payload_size of this ScimServiceProviderConfigBulk.
        :rtype: int
        """
        return self._max_payload_size

    @max_payload_size.setter
    def max_payload_size(self, max_payload_size):
        """Sets the max_payload_size of this ScimServiceProviderConfigBulk.


        :param max_payload_size: The max_payload_size of this ScimServiceProviderConfigBulk.
        :type max_payload_size: int
        """

        self._max_payload_size = max_payload_size

    @property
    def supported(self):
        """Gets the supported of this ScimServiceProviderConfigBulk.


        :return: The supported of this ScimServiceProviderConfigBulk.
        :rtype: bool
        """
        return self._supported

    @supported.setter
    def supported(self, supported):
        """Sets the supported of this ScimServiceProviderConfigBulk.


        :param supported: The supported of this ScimServiceProviderConfigBulk.
        :type supported: bool
        """

        self._supported = supported
