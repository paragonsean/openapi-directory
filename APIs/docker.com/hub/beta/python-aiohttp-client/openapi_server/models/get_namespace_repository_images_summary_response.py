# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_namespace_repository_images_summary_response_statistics import GetNamespaceRepositoryImagesSummaryResponseStatistics
from openapi_server import util


class GetNamespaceRepositoryImagesSummaryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active_from: str=None, statistics: GetNamespaceRepositoryImagesSummaryResponseStatistics=None):
        """GetNamespaceRepositoryImagesSummaryResponse - a model defined in OpenAPI

        :param active_from: The active_from of this GetNamespaceRepositoryImagesSummaryResponse.
        :param statistics: The statistics of this GetNamespaceRepositoryImagesSummaryResponse.
        """
        self.openapi_types = {
            'active_from': str,
            'statistics': GetNamespaceRepositoryImagesSummaryResponseStatistics
        }

        self.attribute_map = {
            'active_from': 'active_from',
            'statistics': 'statistics'
        }

        self._active_from = active_from
        self._statistics = statistics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetNamespaceRepositoryImagesSummaryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetNamespaceRepositoryImagesSummaryResponse of this GetNamespaceRepositoryImagesSummaryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active_from(self):
        """Gets the active_from of this GetNamespaceRepositoryImagesSummaryResponse.

        Time from which an image must have been pushed or pulled to be counted as active.

        :return: The active_from of this GetNamespaceRepositoryImagesSummaryResponse.
        :rtype: str
        """
        return self._active_from

    @active_from.setter
    def active_from(self, active_from):
        """Sets the active_from of this GetNamespaceRepositoryImagesSummaryResponse.

        Time from which an image must have been pushed or pulled to be counted as active.

        :param active_from: The active_from of this GetNamespaceRepositoryImagesSummaryResponse.
        :type active_from: str
        """

        self._active_from = active_from

    @property
    def statistics(self):
        """Gets the statistics of this GetNamespaceRepositoryImagesSummaryResponse.


        :return: The statistics of this GetNamespaceRepositoryImagesSummaryResponse.
        :rtype: GetNamespaceRepositoryImagesSummaryResponseStatistics
        """
        return self._statistics

    @statistics.setter
    def statistics(self, statistics):
        """Sets the statistics of this GetNamespaceRepositoryImagesSummaryResponse.


        :param statistics: The statistics of this GetNamespaceRepositoryImagesSummaryResponse.
        :type statistics: GetNamespaceRepositoryImagesSummaryResponseStatistics
        """

        self._statistics = statistics
