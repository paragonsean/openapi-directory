# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScimEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display: str=None, primary: bool=None, value: str=None):
        """ScimEmail - a model defined in OpenAPI

        :param display: The display of this ScimEmail.
        :param primary: The primary of this ScimEmail.
        :param value: The value of this ScimEmail.
        """
        self.openapi_types = {
            'display': str,
            'primary': bool,
            'value': str
        }

        self.attribute_map = {
            'display': 'display',
            'primary': 'primary',
            'value': 'value'
        }

        self._display = display
        self._primary = primary
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScimEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scim_email of this ScimEmail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display(self):
        """Gets the display of this ScimEmail.


        :return: The display of this ScimEmail.
        :rtype: str
        """
        return self._display

    @display.setter
    def display(self, display):
        """Sets the display of this ScimEmail.


        :param display: The display of this ScimEmail.
        :type display: str
        """

        self._display = display

    @property
    def primary(self):
        """Gets the primary of this ScimEmail.


        :return: The primary of this ScimEmail.
        :rtype: bool
        """
        return self._primary

    @primary.setter
    def primary(self, primary):
        """Sets the primary of this ScimEmail.


        :param primary: The primary of this ScimEmail.
        :type primary: bool
        """

        self._primary = primary

    @property
    def value(self):
        """Gets the value of this ScimEmail.


        :return: The value of this ScimEmail.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ScimEmail.


        :param value: The value of this ScimEmail.
        :type value: str
        """

        self._value = value
