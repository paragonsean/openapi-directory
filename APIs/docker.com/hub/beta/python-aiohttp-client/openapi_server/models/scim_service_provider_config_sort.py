# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ScimServiceProviderConfigSort(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, supported: bool=None):
        """ScimServiceProviderConfigSort - a model defined in OpenAPI

        :param supported: The supported of this ScimServiceProviderConfigSort.
        """
        self.openapi_types = {
            'supported': bool
        }

        self.attribute_map = {
            'supported': 'supported'
        }

        self._supported = supported

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ScimServiceProviderConfigSort':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The scim_service_provider_config_sort of this ScimServiceProviderConfigSort.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def supported(self):
        """Gets the supported of this ScimServiceProviderConfigSort.


        :return: The supported of this ScimServiceProviderConfigSort.
        :rtype: bool
        """
        return self._supported

    @supported.setter
    def supported(self, supported):
        """Sets the supported of this ScimServiceProviderConfigSort.


        :param supported: The supported of this ScimServiceProviderConfigSort.
        :type supported: bool
        """

        self._supported = supported
