# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProtobufAny(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type_url: str=None, value: str=None):
        """ProtobufAny - a model defined in OpenAPI

        :param type_url: The type_url of this ProtobufAny.
        :param value: The value of this ProtobufAny.
        """
        self.openapi_types = {
            'type_url': str,
            'value': str
        }

        self.attribute_map = {
            'type_url': 'type_url',
            'value': 'value'
        }

        self._type_url = type_url
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtobufAny':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The protobufAny of this ProtobufAny.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type_url(self):
        """Gets the type_url of this ProtobufAny.


        :return: The type_url of this ProtobufAny.
        :rtype: str
        """
        return self._type_url

    @type_url.setter
    def type_url(self, type_url):
        """Sets the type_url of this ProtobufAny.


        :param type_url: The type_url of this ProtobufAny.
        :type type_url: str
        """

        self._type_url = type_url

    @property
    def value(self):
        """Gets the value of this ProtobufAny.


        :return: The value of this ProtobufAny.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ProtobufAny.


        :param value: The value of this ProtobufAny.
        :type value: str
        """

        self._value = value
