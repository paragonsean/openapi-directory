# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.scim_user import ScimUser
from openapi_server import util


class V2Scim20UsersGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items_per_page: int=None, resources: List[ScimUser]=None, schemas: List[str]=None, start_index: int=None, total_results: int=None):
        """V2Scim20UsersGet200Response - a model defined in OpenAPI

        :param items_per_page: The items_per_page of this V2Scim20UsersGet200Response.
        :param resources: The resources of this V2Scim20UsersGet200Response.
        :param schemas: The schemas of this V2Scim20UsersGet200Response.
        :param start_index: The start_index of this V2Scim20UsersGet200Response.
        :param total_results: The total_results of this V2Scim20UsersGet200Response.
        """
        self.openapi_types = {
            'items_per_page': int,
            'resources': List[ScimUser],
            'schemas': List[str],
            'start_index': int,
            'total_results': int
        }

        self.attribute_map = {
            'items_per_page': 'itemsPerPage',
            'resources': 'resources',
            'schemas': 'schemas',
            'start_index': 'startIndex',
            'total_results': 'totalResults'
        }

        self._items_per_page = items_per_page
        self._resources = resources
        self._schemas = schemas
        self._start_index = start_index
        self._total_results = total_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'V2Scim20UsersGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _v2_scim_2_0_Users_get_200_response of this V2Scim20UsersGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items_per_page(self):
        """Gets the items_per_page of this V2Scim20UsersGet200Response.


        :return: The items_per_page of this V2Scim20UsersGet200Response.
        :rtype: int
        """
        return self._items_per_page

    @items_per_page.setter
    def items_per_page(self, items_per_page):
        """Sets the items_per_page of this V2Scim20UsersGet200Response.


        :param items_per_page: The items_per_page of this V2Scim20UsersGet200Response.
        :type items_per_page: int
        """

        self._items_per_page = items_per_page

    @property
    def resources(self):
        """Gets the resources of this V2Scim20UsersGet200Response.


        :return: The resources of this V2Scim20UsersGet200Response.
        :rtype: List[ScimUser]
        """
        return self._resources

    @resources.setter
    def resources(self, resources):
        """Sets the resources of this V2Scim20UsersGet200Response.


        :param resources: The resources of this V2Scim20UsersGet200Response.
        :type resources: List[ScimUser]
        """

        self._resources = resources

    @property
    def schemas(self):
        """Gets the schemas of this V2Scim20UsersGet200Response.


        :return: The schemas of this V2Scim20UsersGet200Response.
        :rtype: List[str]
        """
        return self._schemas

    @schemas.setter
    def schemas(self, schemas):
        """Sets the schemas of this V2Scim20UsersGet200Response.


        :param schemas: The schemas of this V2Scim20UsersGet200Response.
        :type schemas: List[str]
        """

        self._schemas = schemas

    @property
    def start_index(self):
        """Gets the start_index of this V2Scim20UsersGet200Response.


        :return: The start_index of this V2Scim20UsersGet200Response.
        :rtype: int
        """
        return self._start_index

    @start_index.setter
    def start_index(self, start_index):
        """Sets the start_index of this V2Scim20UsersGet200Response.


        :param start_index: The start_index of this V2Scim20UsersGet200Response.
        :type start_index: int
        """

        self._start_index = start_index

    @property
    def total_results(self):
        """Gets the total_results of this V2Scim20UsersGet200Response.


        :return: The total_results of this V2Scim20UsersGet200Response.
        :rtype: int
        """
        return self._total_results

    @total_results.setter
    def total_results(self, total_results):
        """Sets the total_results of this V2Scim20UsersGet200Response.


        :param total_results: The total_results of this V2Scim20UsersGet200Response.
        :type total_results: int
        """

        self._total_results = total_results
