/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostNamespacesDeleteImagesResponseErrorErrinfo from './PostNamespacesDeleteImagesResponseErrorErrinfo';

/**
 * The PostNamespacesDeleteImagesResponseError model module.
 * @module model/PostNamespacesDeleteImagesResponseError
 * @version beta
 */
class PostNamespacesDeleteImagesResponseError {
    /**
     * Constructs a new <code>PostNamespacesDeleteImagesResponseError</code>.
     * Deletion not possible.
     * @alias module:model/PostNamespacesDeleteImagesResponseError
     */
    constructor() { 
        
        PostNamespacesDeleteImagesResponseError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostNamespacesDeleteImagesResponseError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostNamespacesDeleteImagesResponseError} obj Optional instance to populate.
     * @return {module:model/PostNamespacesDeleteImagesResponseError} The populated <code>PostNamespacesDeleteImagesResponseError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostNamespacesDeleteImagesResponseError();

            if (data.hasOwnProperty('errinfo')) {
                obj['errinfo'] = PostNamespacesDeleteImagesResponseErrorErrinfo.constructFromObject(data['errinfo']);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('txnid')) {
                obj['txnid'] = ApiClient.convertToType(data['txnid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostNamespacesDeleteImagesResponseError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostNamespacesDeleteImagesResponseError</code>.
     */
    static validateJSON(data) {
        // validate the optional field `errinfo`
        if (data['errinfo']) { // data not null
          PostNamespacesDeleteImagesResponseErrorErrinfo.validateJSON(data['errinfo']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['txnid'] && !(typeof data['txnid'] === 'string' || data['txnid'] instanceof String)) {
            throw new Error("Expected the field `txnid` to be a primitive type in the JSON string but got " + data['txnid']);
        }

        return true;
    }


}



/**
 * @member {module:model/PostNamespacesDeleteImagesResponseErrorErrinfo} errinfo
 */
PostNamespacesDeleteImagesResponseError.prototype['errinfo'] = undefined;

/**
 * The error message.
 * @member {String} message
 */
PostNamespacesDeleteImagesResponseError.prototype['message'] = undefined;

/**
 * Unique ID for this call.
 * @member {String} txnid
 */
PostNamespacesDeleteImagesResponseError.prototype['txnid'] = undefined;






export default PostNamespacesDeleteImagesResponseError;

