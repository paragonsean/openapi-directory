/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import V2Scim20UsersIdPutRequestName from './V2Scim20UsersIdPutRequestName';

/**
 * The V2Scim20UsersIdPutRequest model module.
 * @module model/V2Scim20UsersIdPutRequest
 * @version beta
 */
class V2Scim20UsersIdPutRequest {
    /**
     * Constructs a new <code>V2Scim20UsersIdPutRequest</code>.
     * @alias module:model/V2Scim20UsersIdPutRequest
     * @param schemas {Array.<String>} 
     */
    constructor(schemas) { 
        
        V2Scim20UsersIdPutRequest.initialize(this, schemas);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, schemas) { 
        obj['enabled'] = false;
        obj['schemas'] = schemas;
    }

    /**
     * Constructs a <code>V2Scim20UsersIdPutRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/V2Scim20UsersIdPutRequest} obj Optional instance to populate.
     * @return {module:model/V2Scim20UsersIdPutRequest} The populated <code>V2Scim20UsersIdPutRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new V2Scim20UsersIdPutRequest();

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = V2Scim20UsersIdPutRequestName.constructFromObject(data['name']);
            }
            if (data.hasOwnProperty('schemas')) {
                obj['schemas'] = ApiClient.convertToType(data['schemas'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>V2Scim20UsersIdPutRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>V2Scim20UsersIdPutRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of V2Scim20UsersIdPutRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `name`
        if (data['name']) { // data not null
          V2Scim20UsersIdPutRequestName.validateJSON(data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['schemas'])) {
            throw new Error("Expected the field `schemas` to be an array in the JSON data but got " + data['schemas']);
        }

        return true;
    }


}

V2Scim20UsersIdPutRequest.RequiredProperties = ["schemas"];

/**
 * If this is omitted from the request, it will default to false resulting in a deactivated user.
 * @member {Boolean} enabled
 * @default false
 */
V2Scim20UsersIdPutRequest.prototype['enabled'] = false;

/**
 * @member {module:model/V2Scim20UsersIdPutRequestName} name
 */
V2Scim20UsersIdPutRequest.prototype['name'] = undefined;

/**
 * @member {Array.<String>} schemas
 */
V2Scim20UsersIdPutRequest.prototype['schemas'] = undefined;






export default V2Scim20UsersIdPutRequest;

