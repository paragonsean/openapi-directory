/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PostNamespacesDeleteImagesRequestIgnoreWarningsInner from './PostNamespacesDeleteImagesRequestIgnoreWarningsInner';
import PostNamespacesDeleteImagesRequestManifestsInner from './PostNamespacesDeleteImagesRequestManifestsInner';

/**
 * The PostNamespacesDeleteImagesRequest model module.
 * @module model/PostNamespacesDeleteImagesRequest
 * @version beta
 */
class PostNamespacesDeleteImagesRequest {
    /**
     * Constructs a new <code>PostNamespacesDeleteImagesRequest</code>.
     * Delete images request.
     * @alias module:model/PostNamespacesDeleteImagesRequest
     */
    constructor() { 
        
        PostNamespacesDeleteImagesRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostNamespacesDeleteImagesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostNamespacesDeleteImagesRequest} obj Optional instance to populate.
     * @return {module:model/PostNamespacesDeleteImagesRequest} The populated <code>PostNamespacesDeleteImagesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostNamespacesDeleteImagesRequest();

            if (data.hasOwnProperty('active_from')) {
                obj['active_from'] = ApiClient.convertToType(data['active_from'], 'String');
            }
            if (data.hasOwnProperty('dry_run')) {
                obj['dry_run'] = ApiClient.convertToType(data['dry_run'], 'Boolean');
            }
            if (data.hasOwnProperty('ignore_warnings')) {
                obj['ignore_warnings'] = ApiClient.convertToType(data['ignore_warnings'], [PostNamespacesDeleteImagesRequestIgnoreWarningsInner]);
            }
            if (data.hasOwnProperty('manifests')) {
                obj['manifests'] = ApiClient.convertToType(data['manifests'], [PostNamespacesDeleteImagesRequestManifestsInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostNamespacesDeleteImagesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostNamespacesDeleteImagesRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['active_from'] && !(typeof data['active_from'] === 'string' || data['active_from'] instanceof String)) {
            throw new Error("Expected the field `active_from` to be a primitive type in the JSON string but got " + data['active_from']);
        }
        if (data['ignore_warnings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ignore_warnings'])) {
                throw new Error("Expected the field `ignore_warnings` to be an array in the JSON data but got " + data['ignore_warnings']);
            }
            // validate the optional field `ignore_warnings` (array)
            for (const item of data['ignore_warnings']) {
                PostNamespacesDeleteImagesRequestIgnoreWarningsInner.validateJSON(item);
            };
        }
        if (data['manifests']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['manifests'])) {
                throw new Error("Expected the field `manifests` to be an array in the JSON data but got " + data['manifests']);
            }
            // validate the optional field `manifests` (array)
            for (const item of data['manifests']) {
                PostNamespacesDeleteImagesRequestManifestsInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Sets the time from which an image must have been pushed or pulled to be counted as active.  Defaults to 1 month before the current time. 
 * @member {String} active_from
 */
PostNamespacesDeleteImagesRequest.prototype['active_from'] = undefined;

/**
 * If `true` then will check and return errors and unignored warnings for the deletion request but will not delete any images.
 * @member {Boolean} dry_run
 */
PostNamespacesDeleteImagesRequest.prototype['dry_run'] = undefined;

/**
 * Warnings to ignore. If a warning is not ignored then no deletions will happen and the  warning is returned in the response.  These warnings include:  - is_active: warning when attempting to delete an image that is marked as active. - current_tag: warning when attempting to delete an image that has one or more current  tags in the repository.  Warnings can be copied from the response to the request. 
 * @member {Array.<module:model/PostNamespacesDeleteImagesRequestIgnoreWarningsInner>} ignore_warnings
 */
PostNamespacesDeleteImagesRequest.prototype['ignore_warnings'] = undefined;

/**
 * Image manifests to delete.
 * @member {Array.<module:model/PostNamespacesDeleteImagesRequestManifestsInner>} manifests
 */
PostNamespacesDeleteImagesRequest.prototype['manifests'] = undefined;






export default PostNamespacesDeleteImagesRequest;

