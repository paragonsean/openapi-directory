/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ErrorInfo model module.
 * @module model/ErrorInfo
 * @version beta
 */
class ErrorInfo {
    /**
     * Constructs a new <code>ErrorInfo</code>.
     * Context information for an error used for diagnostics.
     * @alias module:model/ErrorInfo
     */
    constructor() { 
        
        ErrorInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ErrorInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ErrorInfo} obj Optional instance to populate.
     * @return {module:model/ErrorInfo} The populated <code>ErrorInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ErrorInfo();

            if (data.hasOwnProperty('api_call_docker_id')) {
                obj['api_call_docker_id'] = ApiClient.convertToType(data['api_call_docker_id'], 'String');
            }
            if (data.hasOwnProperty('api_call_name')) {
                obj['api_call_name'] = ApiClient.convertToType(data['api_call_name'], 'String');
            }
            if (data.hasOwnProperty('api_call_start')) {
                obj['api_call_start'] = ApiClient.convertToType(data['api_call_start'], 'String');
            }
            if (data.hasOwnProperty('api_call_txnid')) {
                obj['api_call_txnid'] = ApiClient.convertToType(data['api_call_txnid'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ErrorInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ErrorInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['api_call_docker_id'] && !(typeof data['api_call_docker_id'] === 'string' || data['api_call_docker_id'] instanceof String)) {
            throw new Error("Expected the field `api_call_docker_id` to be a primitive type in the JSON string but got " + data['api_call_docker_id']);
        }
        // ensure the json data is a string
        if (data['api_call_name'] && !(typeof data['api_call_name'] === 'string' || data['api_call_name'] instanceof String)) {
            throw new Error("Expected the field `api_call_name` to be a primitive type in the JSON string but got " + data['api_call_name']);
        }
        // ensure the json data is a string
        if (data['api_call_start'] && !(typeof data['api_call_start'] === 'string' || data['api_call_start'] instanceof String)) {
            throw new Error("Expected the field `api_call_start` to be a primitive type in the JSON string but got " + data['api_call_start']);
        }
        // ensure the json data is a string
        if (data['api_call_txnid'] && !(typeof data['api_call_txnid'] === 'string' || data['api_call_txnid'] instanceof String)) {
            throw new Error("Expected the field `api_call_txnid` to be a primitive type in the JSON string but got " + data['api_call_txnid']);
        }

        return true;
    }


}



/**
 * ID of docker user.
 * @member {String} api_call_docker_id
 */
ErrorInfo.prototype['api_call_docker_id'] = undefined;

/**
 * Name of the API operation called.
 * @member {String} api_call_name
 */
ErrorInfo.prototype['api_call_name'] = undefined;

/**
 * Date/time of call start.
 * @member {String} api_call_start
 */
ErrorInfo.prototype['api_call_start'] = undefined;

/**
 * Unique ID for this call.
 * @member {String} api_call_txnid
 */
ErrorInfo.prototype['api_call_txnid'] = undefined;






export default ErrorInfo;

