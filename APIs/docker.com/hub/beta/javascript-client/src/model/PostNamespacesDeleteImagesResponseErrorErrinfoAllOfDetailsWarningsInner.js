/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner model module.
 * @module model/PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner
 * @version beta
 */
class PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner {
    /**
     * Constructs a new <code>PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner</code>.
     * @alias module:model/PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner
     */
    constructor() { 
        
        PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner} obj Optional instance to populate.
     * @return {module:model/PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner} The populated <code>PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner();

            if (data.hasOwnProperty('digest')) {
                obj['digest'] = ApiClient.convertToType(data['digest'], 'String');
            }
            if (data.hasOwnProperty('repository')) {
                obj['repository'] = ApiClient.convertToType(data['repository'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('warning')) {
                obj['warning'] = ApiClient.convertToType(data['warning'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['digest'] && !(typeof data['digest'] === 'string' || data['digest'] instanceof String)) {
            throw new Error("Expected the field `digest` to be a primitive type in the JSON string but got " + data['digest']);
        }
        // ensure the json data is a string
        if (data['repository'] && !(typeof data['repository'] === 'string' || data['repository'] instanceof String)) {
            throw new Error("Expected the field `repository` to be a primitive type in the JSON string but got " + data['repository']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['warning'] && !(typeof data['warning'] === 'string' || data['warning'] instanceof String)) {
            throw new Error("Expected the field `warning` to be a primitive type in the JSON string but got " + data['warning']);
        }

        return true;
    }


}



/**
 * Digest of the image that caused the warning.
 * @member {String} digest
 */
PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner.prototype['digest'] = undefined;

/**
 * Name of the repository of the image that caused the warning.
 * @member {String} repository
 */
PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner.prototype['repository'] = undefined;

/**
 * Current tags if warning is `current_tag`.
 * @member {Array.<String>} tags
 */
PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner.prototype['tags'] = undefined;

/**
 * Warning type.
 * @member {module:model/PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner.WarningEnum} warning
 */
PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner.prototype['warning'] = undefined;





/**
 * Allowed values for the <code>warning</code> property.
 * @enum {String}
 * @readonly
 */
PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner['WarningEnum'] = {

    /**
     * value: "is_active"
     * @const
     */
    "is_active": "is_active",

    /**
     * value: "current_tag"
     * @const
     */
    "current_tag": "current_tag"
};



export default PostNamespacesDeleteImagesResponseErrorErrinfoAllOfDetailsWarningsInner;

