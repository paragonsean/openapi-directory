/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AccessToken from '../model/AccessToken';
import CreateAccessTokenRequest from '../model/CreateAccessTokenRequest';
import Error from '../model/Error';
import GetAccessTokensResponse from '../model/GetAccessTokensResponse';
import PatchAccessTokenRequest from '../model/PatchAccessTokenRequest';
import V2AccessTokensUuidGet200Response from '../model/V2AccessTokensUuidGet200Response';
import ValueError from '../model/ValueError';

/**
* AccessTokens service.
* @module api/AccessTokensApi
* @version beta
*/
export default class AccessTokensApi {

    /**
    * Constructs a new AccessTokensApi. 
    * @alias module:api/AccessTokensApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v2AccessTokensGet operation.
     * @callback module:api/AccessTokensApi~v2AccessTokensGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAccessTokensResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of personal access tokens
     * Returns a paginated list of personal access tokens.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] 
     * @param {Number} [pageSize = 10)] 
     * @param {module:api/AccessTokensApi~v2AccessTokensGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAccessTokensResponse}
     */
    v2AccessTokensGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAccessTokensResponse;
      return this.apiClient.callApi(
        '/v2/access-tokens', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v2AccessTokensPost operation.
     * @callback module:api/AccessTokensApi~v2AccessTokensPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccessToken} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a personal access token
     * Creates and returns a personal access token.
     * @param {module:model/CreateAccessTokenRequest} createAccessTokenRequest 
     * @param {module:api/AccessTokensApi~v2AccessTokensPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccessToken}
     */
    v2AccessTokensPost(createAccessTokenRequest, callback) {
      let postBody = createAccessTokenRequest;
      // verify the required parameter 'createAccessTokenRequest' is set
      if (createAccessTokenRequest === undefined || createAccessTokenRequest === null) {
        throw new Error("Missing the required parameter 'createAccessTokenRequest' when calling v2AccessTokensPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AccessToken;
      return this.apiClient.callApi(
        '/v2/access-tokens', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v2AccessTokensUuidDelete operation.
     * @callback module:api/AccessTokensApi~v2AccessTokensUuidDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a personal access token
     * Deletes a personal access token permanently. This cannot be undone. 
     * @param {String} uuid 
     * @param {module:api/AccessTokensApi~v2AccessTokensUuidDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v2AccessTokensUuidDelete(uuid, callback) {
      let postBody = null;
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling v2AccessTokensUuidDelete");
      }

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/v2/access-tokens/{uuid}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v2AccessTokensUuidGet operation.
     * @callback module:api/AccessTokensApi~v2AccessTokensUuidGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V2AccessTokensUuidGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a personal access token
     * Returns a personal access token by UUID.
     * @param {String} uuid 
     * @param {module:api/AccessTokensApi~v2AccessTokensUuidGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V2AccessTokensUuidGet200Response}
     */
    v2AccessTokensUuidGet(uuid, callback) {
      let postBody = null;
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling v2AccessTokensUuidGet");
      }

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = V2AccessTokensUuidGet200Response;
      return this.apiClient.callApi(
        '/v2/access-tokens/{uuid}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v2AccessTokensUuidPatch operation.
     * @callback module:api/AccessTokensApi~v2AccessTokensUuidPatchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccessToken} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a personal access token
     * Updates a personal access token partially. You can either update the token's label or enable/disable it. 
     * @param {String} uuid 
     * @param {module:model/PatchAccessTokenRequest} patchAccessTokenRequest 
     * @param {module:api/AccessTokensApi~v2AccessTokensUuidPatchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccessToken}
     */
    v2AccessTokensUuidPatch(uuid, patchAccessTokenRequest, callback) {
      let postBody = patchAccessTokenRequest;
      // verify the required parameter 'uuid' is set
      if (uuid === undefined || uuid === null) {
        throw new Error("Missing the required parameter 'uuid' when calling v2AccessTokensUuidPatch");
      }
      // verify the required parameter 'patchAccessTokenRequest' is set
      if (patchAccessTokenRequest === undefined || patchAccessTokenRequest === null) {
        throw new Error("Missing the required parameter 'patchAccessTokenRequest' when calling v2AccessTokensUuidPatch");
      }

      let pathParams = {
        'uuid': uuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AccessToken;
      return this.apiClient.callApi(
        '/v2/access-tokens/{uuid}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
