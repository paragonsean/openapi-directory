/**
 * Docker HUB API
 * Docker Hub is a service provided by Docker for finding and sharing container images with your team.  It is the world's largest library and community for container images.  In addition to the [Docker Hub UI](https://docs.docker.com/docker-hub/) and [Docker Hub CLI tool](https://github.com/docker/hub-tool#readme) (currently experimental),  Docker provides an API that allows you to interact with Docker Hub.  Browse through the Docker Hub API documentation to explore the supported endpoints. 
 *
 * The version of the OpenAPI document: beta
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DockerHubApi);
  }
}(this, function(expect, DockerHubApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DockerHubApi.AccessToken();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccessToken', function() {
    it('should create an instance of AccessToken', function() {
      // uncomment below and update the code to test AccessToken
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be.a(DockerHubApi.AccessToken);
    });

    it('should have the property clientId (base name: "client_id")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property createdAt (base name: "created_at")', function() {
      // uncomment below and update the code to test the property createdAt
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property creatorIp (base name: "creator_ip")', function() {
      // uncomment below and update the code to test the property creatorIp
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property creatorUa (base name: "creator_ua")', function() {
      // uncomment below and update the code to test the property creatorUa
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property generatedBy (base name: "generated_by")', function() {
      // uncomment below and update the code to test the property generatedBy
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "is_active")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property lastUsed (base name: "last_used")', function() {
      // uncomment below and update the code to test the property lastUsed
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property scopes (base name: "scopes")', function() {
      // uncomment below and update the code to test the property scopes
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property token (base name: "token")', function() {
      // uncomment below and update the code to test the property token
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property tokenLabel (base name: "token_label")', function() {
      // uncomment below and update the code to test the property tokenLabel
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

    it('should have the property uuid (base name: "uuid")', function() {
      // uncomment below and update the code to test the property uuid
      //var instance = new DockerHubApi.AccessToken();
      //expect(instance).to.be();
    });

  });

}));
