# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dataset_model import DatasetModel
from openapi_server import util


class NamespaceMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datasets: List[DatasetModel]=None, extra_repos: List[str]=None, namespace: str=None):
        """NamespaceMetadata - a model defined in OpenAPI

        :param datasets: The datasets of this NamespaceMetadata.
        :param extra_repos: The extra_repos of this NamespaceMetadata.
        :param namespace: The namespace of this NamespaceMetadata.
        """
        self.openapi_types = {
            'datasets': List[DatasetModel],
            'extra_repos': List[str],
            'namespace': str
        }

        self.attribute_map = {
            'datasets': 'datasets',
            'extra_repos': 'extraRepos',
            'namespace': 'namespace'
        }

        self._datasets = datasets
        self._extra_repos = extra_repos
        self._namespace = namespace

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NamespaceMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NamespaceMetadata of this NamespaceMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datasets(self):
        """Gets the datasets of this NamespaceMetadata.


        :return: The datasets of this NamespaceMetadata.
        :rtype: List[DatasetModel]
        """
        return self._datasets

    @datasets.setter
    def datasets(self, datasets):
        """Sets the datasets of this NamespaceMetadata.


        :param datasets: The datasets of this NamespaceMetadata.
        :type datasets: List[DatasetModel]
        """

        self._datasets = datasets

    @property
    def extra_repos(self):
        """Gets the extra_repos of this NamespaceMetadata.


        :return: The extra_repos of this NamespaceMetadata.
        :rtype: List[str]
        """
        return self._extra_repos

    @extra_repos.setter
    def extra_repos(self, extra_repos):
        """Sets the extra_repos of this NamespaceMetadata.


        :param extra_repos: The extra_repos of this NamespaceMetadata.
        :type extra_repos: List[str]
        """

        self._extra_repos = extra_repos

    @property
    def namespace(self):
        """Gets the namespace of this NamespaceMetadata.


        :return: The namespace of this NamespaceMetadata.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this NamespaceMetadata.


        :param namespace: The namespace of this NamespaceMetadata.
        :type namespace: str
        """

        self._namespace = namespace
