/**
 * NPR Authorization Service
 * The interface to our OAuth2 server
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeviceCodeData model module.
 * @module model/DeviceCodeData
 * @version 2
 */
class DeviceCodeData {
    /**
     * Constructs a new <code>DeviceCodeData</code>.
     * @alias module:model/DeviceCodeData
     * @param deviceCode {String} 40-character code for the device to input into the /token endpoint, not for display to the user
     * @param expiresIn {Number} The number of seconds for which this set of codes will be valid, after which they will be purged
     * @param interval {Number} The number of seconds the client application should maintain between requests to the /token endpoint
     * @param userCode {String} 6-character alphanumeric code for the user to enter at http://npr.org/device, to be displayed by the client application
     * @param verificationUri {String} The URL where the user should input their code, to be displayed by the client application
     */
    constructor(deviceCode, expiresIn, interval, userCode, verificationUri) { 
        
        DeviceCodeData.initialize(this, deviceCode, expiresIn, interval, userCode, verificationUri);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deviceCode, expiresIn, interval, userCode, verificationUri) { 
        obj['device_code'] = deviceCode;
        obj['expires_in'] = expiresIn || 1800;
        obj['interval'] = interval || 5;
        obj['user_code'] = userCode;
        obj['verification_uri'] = verificationUri || 'http://npr.org/device';
    }

    /**
     * Constructs a <code>DeviceCodeData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeviceCodeData} obj Optional instance to populate.
     * @return {module:model/DeviceCodeData} The populated <code>DeviceCodeData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeviceCodeData();

            if (data.hasOwnProperty('device_code')) {
                obj['device_code'] = ApiClient.convertToType(data['device_code'], 'String');
            }
            if (data.hasOwnProperty('expires_in')) {
                obj['expires_in'] = ApiClient.convertToType(data['expires_in'], 'Number');
            }
            if (data.hasOwnProperty('interval')) {
                obj['interval'] = ApiClient.convertToType(data['interval'], 'Number');
            }
            if (data.hasOwnProperty('user_code')) {
                obj['user_code'] = ApiClient.convertToType(data['user_code'], 'String');
            }
            if (data.hasOwnProperty('verification_uri')) {
                obj['verification_uri'] = ApiClient.convertToType(data['verification_uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeviceCodeData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeviceCodeData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeviceCodeData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['device_code'] && !(typeof data['device_code'] === 'string' || data['device_code'] instanceof String)) {
            throw new Error("Expected the field `device_code` to be a primitive type in the JSON string but got " + data['device_code']);
        }
        // ensure the json data is a string
        if (data['user_code'] && !(typeof data['user_code'] === 'string' || data['user_code'] instanceof String)) {
            throw new Error("Expected the field `user_code` to be a primitive type in the JSON string but got " + data['user_code']);
        }
        // ensure the json data is a string
        if (data['verification_uri'] && !(typeof data['verification_uri'] === 'string' || data['verification_uri'] instanceof String)) {
            throw new Error("Expected the field `verification_uri` to be a primitive type in the JSON string but got " + data['verification_uri']);
        }

        return true;
    }


}

DeviceCodeData.RequiredProperties = ["device_code", "expires_in", "interval", "user_code", "verification_uri"];

/**
 * 40-character code for the device to input into the /token endpoint, not for display to the user
 * @member {String} device_code
 */
DeviceCodeData.prototype['device_code'] = undefined;

/**
 * The number of seconds for which this set of codes will be valid, after which they will be purged
 * @member {Number} expires_in
 * @default 1800
 */
DeviceCodeData.prototype['expires_in'] = 1800;

/**
 * The number of seconds the client application should maintain between requests to the /token endpoint
 * @member {Number} interval
 * @default 5
 */
DeviceCodeData.prototype['interval'] = 5;

/**
 * 6-character alphanumeric code for the user to enter at http://npr.org/device, to be displayed by the client application
 * @member {String} user_code
 */
DeviceCodeData.prototype['user_code'] = undefined;

/**
 * The URL where the user should input their code, to be displayed by the client application
 * @member {String} verification_uri
 * @default 'http://npr.org/device'
 */
DeviceCodeData.prototype['verification_uri'] = 'http://npr.org/device';






export default DeviceCodeData;

