/**
 * NPR Identity Service
 * The entry point to user-specific information
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AbstractCDocLink from './model/AbstractCDocLink';
import AbstractLink from './model/AbstractLink';
import Affiliation from './model/Affiliation';
import Algolia from './model/Algolia';
import Cohort from './model/Cohort';
import CollectionDocument from './model/CollectionDocument';
import Error from './model/Error';
import ErrorDocument from './model/ErrorDocument';
import Organization from './model/Organization';
import UserData from './model/UserData';
import UserDocument from './model/UserDocument';
import IdentityApi from './api/IdentityApi';


/**
* The entry point to user-specific information.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NprIdentityService = require('index'); // See note below*.
* var xxxSvc = new NprIdentityService.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NprIdentityService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NprIdentityService.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NprIdentityService.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AbstractCDocLink model constructor.
     * @property {module:model/AbstractCDocLink}
     */
    AbstractCDocLink,

    /**
     * The AbstractLink model constructor.
     * @property {module:model/AbstractLink}
     */
    AbstractLink,

    /**
     * The Affiliation model constructor.
     * @property {module:model/Affiliation}
     */
    Affiliation,

    /**
     * The Algolia model constructor.
     * @property {module:model/Algolia}
     */
    Algolia,

    /**
     * The Cohort model constructor.
     * @property {module:model/Cohort}
     */
    Cohort,

    /**
     * The CollectionDocument model constructor.
     * @property {module:model/CollectionDocument}
     */
    CollectionDocument,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorDocument model constructor.
     * @property {module:model/ErrorDocument}
     */
    ErrorDocument,

    /**
     * The Organization model constructor.
     * @property {module:model/Organization}
     */
    Organization,

    /**
     * The UserData model constructor.
     * @property {module:model/UserData}
     */
    UserData,

    /**
     * The UserDocument model constructor.
     * @property {module:model/UserDocument}
     */
    UserDocument,

    /**
    * The IdentityApi service constructor.
    * @property {module:api/IdentityApi}
    */
    IdentityApi
};
