/*
 * NPR Identity Service
 * The entry point to user-specific information
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Affiliation;
import org.openapitools.client.model.ErrorDocument;
import java.time.OffsetDateTime;
import org.openapitools.client.model.UserDocument;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IdentityApi
 */
@Disabled
public class IdentityApiTest {

    private final IdentityApi api = new IdentityApi();

    /**
     * Delete the user&#39;s account
     *
     * Use with caution as some steps are irreverisble. Initiates the user account deletion process, including removal of all user PII and account access.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteUserTest() throws ApiException {
        String authorization = null;
        UserDocument response = api.deleteUser(authorization);
        // TODO: test validations
    }

    /**
     * Get the latest state information about the logged-in user
     *
     * After a successful login, the client should send a &#x60;GET&#x60; call approximately once an hour to refresh the user data.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        String authorization = null;
        UserDocument response = api.getUser(authorization);
        // TODO: test validations
    }

    /**
     * Copy listening data from a temporary user account to the logged-in user&#39;s account
     *
     * This can and should only be used by clients who have access to the &#x60;temporary_user&#x60; grant type.     Third-party developers do not have access to this grant type by default, and will not need this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void inheritFromTempUserTest() throws ApiException {
        String authorization = null;
        Integer tempUser = null;
        UserDocument response = api.inheritFromTempUser(authorization, tempUser);
        // TODO: test validations
    }

    /**
     * Update the following status of the logged-in user for a particular aggregation
     *
     * After a successful call, this returns a User document with an updated list of affiliations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postFollowingTest() throws ApiException {
        String authorization = null;
        Affiliation body = null;
        UserDocument response = api.postFollowing(authorization, body);
        // TODO: test validations
    }

    /**
     * Update the logged-in user&#39;s favorite station(s)
     *
     * Right now, only the primary station can be changed. Previously selected stations will not be deleted, but the new station will be moved to first in the array.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateStationsTest() throws ApiException {
        String authorization = null;
        List<Integer> body = null;
        UserDocument response = api.updateStations(authorization, body);
        // TODO: test validations
    }

}
