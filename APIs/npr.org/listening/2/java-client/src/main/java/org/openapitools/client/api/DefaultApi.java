/*
 * NPR Listening Service
 * Audio recommendations tailored to a user's preferences
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AggregationAudioItemListDocument;
import org.openapitools.client.model.AudioItemListDocument;
import org.openapitools.client.model.ChannelsDocument;
import org.openapitools.client.model.ErrorDocument;
import java.time.OffsetDateTime;
import org.openapitools.client.model.OrganizationCategoryAudioListDocument;
import org.openapitools.client.model.OrganizationOverviewDocument;
import org.openapitools.client.model.RatingData;
import org.openapitools.client.model.SearchListDocument;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getAggRecommendations
     * @param aggId ID of an aggregation such as a program or podcast. If the specified ID is a program that publishes rundowns, the latest rundown will be returned. (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param startNum The result to start with. Allows paging through the episodes of a podcast or program, with the default, &#x60;startNum&#x3D;0&#x60;, being the most recent episode. Ignored for programs that publish a rundown. (optional, default to 0)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from the specified aggregation </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getAggRecommendationsCall(Long aggId, String authorization, Integer startNum, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/aggregation/{aggId}/recommendations"
            .replace("{" + "aggId" + "}", localVarApiClient.escapeString(aggId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (startNum != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("startNum", startNum));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAggRecommendationsValidateBeforeCall(Long aggId, String authorization, Integer startNum, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'aggId' is set
        if (aggId == null) {
            throw new ApiException("Missing the required parameter 'aggId' when calling getAggRecommendations(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getAggRecommendations(Async)");
        }

        return getAggRecommendationsCall(aggId, authorization, startNum, _callback);

    }

    /**
     * Get a set of recommendations for an aggregation independent of the user&#39;s listening history
     * This endpoint provides a list of recent audio items associated with the aggregation along with metadata about the aggregation.
     * @param aggId ID of an aggregation such as a program or podcast. If the specified ID is a program that publishes rundowns, the latest rundown will be returned. (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param startNum The result to start with. Allows paging through the episodes of a podcast or program, with the default, &#x60;startNum&#x3D;0&#x60;, being the most recent episode. Ignored for programs that publish a rundown. (optional, default to 0)
     * @return AggregationAudioItemListDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from the specified aggregation </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public AggregationAudioItemListDocument getAggRecommendations(Long aggId, String authorization, Integer startNum) throws ApiException {
        ApiResponse<AggregationAudioItemListDocument> localVarResp = getAggRecommendationsWithHttpInfo(aggId, authorization, startNum);
        return localVarResp.getData();
    }

    /**
     * Get a set of recommendations for an aggregation independent of the user&#39;s listening history
     * This endpoint provides a list of recent audio items associated with the aggregation along with metadata about the aggregation.
     * @param aggId ID of an aggregation such as a program or podcast. If the specified ID is a program that publishes rundowns, the latest rundown will be returned. (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param startNum The result to start with. Allows paging through the episodes of a podcast or program, with the default, &#x60;startNum&#x3D;0&#x60;, being the most recent episode. Ignored for programs that publish a rundown. (optional, default to 0)
     * @return ApiResponse&lt;AggregationAudioItemListDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from the specified aggregation </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<AggregationAudioItemListDocument> getAggRecommendationsWithHttpInfo(Long aggId, String authorization, Integer startNum) throws ApiException {
        okhttp3.Call localVarCall = getAggRecommendationsValidateBeforeCall(aggId, authorization, startNum, null);
        Type localVarReturnType = new TypeToken<AggregationAudioItemListDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a set of recommendations for an aggregation independent of the user&#39;s listening history (asynchronously)
     * This endpoint provides a list of recent audio items associated with the aggregation along with metadata about the aggregation.
     * @param aggId ID of an aggregation such as a program or podcast. If the specified ID is a program that publishes rundowns, the latest rundown will be returned. (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param startNum The result to start with. Allows paging through the episodes of a podcast or program, with the default, &#x60;startNum&#x3D;0&#x60;, being the most recent episode. Ignored for programs that publish a rundown. (optional, default to 0)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from the specified aggregation </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getAggRecommendationsAsync(Long aggId, String authorization, Integer startNum, final ApiCallback<AggregationAudioItemListDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAggRecommendationsValidateBeforeCall(aggId, authorization, startNum, _callback);
        Type localVarReturnType = new TypeToken<AggregationAudioItemListDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getChannels
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param exploreOnly If set to &#x60;true&#x60;, this call will return only channels that should be shown in the client&#39;s &#x60;Explore&#x60; view (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of channels </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getChannelsCall(String authorization, Boolean exploreOnly, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/channels";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (exploreOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exploreOnly", exploreOnly));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getChannelsValidateBeforeCall(String authorization, Boolean exploreOnly, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getChannels(Async)");
        }

        return getChannelsCall(authorization, exploreOnly, _callback);

    }

    /**
     * Get the list of available channels
     * These channels allow the user to specify a focus for the content returned in the recommendations endpoint.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param exploreOnly If set to &#x60;true&#x60;, this call will return only channels that should be shown in the client&#39;s &#x60;Explore&#x60; view (optional, default to false)
     * @return ChannelsDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of channels </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ChannelsDocument getChannels(String authorization, Boolean exploreOnly) throws ApiException {
        ApiResponse<ChannelsDocument> localVarResp = getChannelsWithHttpInfo(authorization, exploreOnly);
        return localVarResp.getData();
    }

    /**
     * Get the list of available channels
     * These channels allow the user to specify a focus for the content returned in the recommendations endpoint.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param exploreOnly If set to &#x60;true&#x60;, this call will return only channels that should be shown in the client&#39;s &#x60;Explore&#x60; view (optional, default to false)
     * @return ApiResponse&lt;ChannelsDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of channels </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<ChannelsDocument> getChannelsWithHttpInfo(String authorization, Boolean exploreOnly) throws ApiException {
        okhttp3.Call localVarCall = getChannelsValidateBeforeCall(authorization, exploreOnly, null);
        Type localVarReturnType = new TypeToken<ChannelsDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get the list of available channels (asynchronously)
     * These channels allow the user to specify a focus for the content returned in the recommendations endpoint.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param exploreOnly If set to &#x60;true&#x60;, this call will return only channels that should be shown in the client&#39;s &#x60;Explore&#x60; view (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of channels </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getChannelsAsync(String authorization, Boolean exploreOnly, final ApiCallback<ChannelsDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getChannelsValidateBeforeCall(authorization, exploreOnly, _callback);
        Type localVarReturnType = new TypeToken<ChannelsDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getHistory
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getHistoryCall(String authorization, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/history";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getHistoryValidateBeforeCall(String authorization, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getHistory(Async)");
        }

        return getHistoryCall(authorization, _callback);

    }

    /**
     * Get recent ratings the logged-in user has submitted
     * This endpoint provides the list of recently-rated audio recommendations that the logged-in user has consumed. Some rated recommendations are filtered, such as sponsorship and donation.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return AudioItemListDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public AudioItemListDocument getHistory(String authorization) throws ApiException {
        ApiResponse<AudioItemListDocument> localVarResp = getHistoryWithHttpInfo(authorization);
        return localVarResp.getData();
    }

    /**
     * Get recent ratings the logged-in user has submitted
     * This endpoint provides the list of recently-rated audio recommendations that the logged-in user has consumed. Some rated recommendations are filtered, such as sponsorship and donation.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return ApiResponse&lt;AudioItemListDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<AudioItemListDocument> getHistoryWithHttpInfo(String authorization) throws ApiException {
        okhttp3.Call localVarCall = getHistoryValidateBeforeCall(authorization, null);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get recent ratings the logged-in user has submitted (asynchronously)
     * This endpoint provides the list of recently-rated audio recommendations that the logged-in user has consumed. Some rated recommendations are filtered, such as sponsorship and donation.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getHistoryAsync(String authorization, final ApiCallback<AudioItemListDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getHistoryValidateBeforeCall(authorization, _callback);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getOrganizationCategory
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param category One of the three categories of content - newscast, story, or podcast (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from a category of content from an organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationCategoryCall(Long orgId, String category, String authorization, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/organizations/{orgId}/categories/{category}/recommendations"
            .replace("{" + "orgId" + "}", localVarApiClient.escapeString(orgId.toString()))
            .replace("{" + "category" + "}", localVarApiClient.escapeString(category.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getOrganizationCategoryValidateBeforeCall(Long orgId, String category, String authorization, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'orgId' is set
        if (orgId == null) {
            throw new ApiException("Missing the required parameter 'orgId' when calling getOrganizationCategory(Async)");
        }

        // verify the required parameter 'category' is set
        if (category == null) {
            throw new ApiException("Missing the required parameter 'category' when calling getOrganizationCategory(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getOrganizationCategory(Async)");
        }

        return getOrganizationCategoryCall(orgId, category, authorization, _callback);

    }

    /**
     * Get a list of recommendations from a category of content from an organization
     * This endpoint provides a list of recommendations from a category of content from  an organization.
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param category One of the three categories of content - newscast, story, or podcast (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return OrganizationCategoryAudioListDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from a category of content from an organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public OrganizationCategoryAudioListDocument getOrganizationCategory(Long orgId, String category, String authorization) throws ApiException {
        ApiResponse<OrganizationCategoryAudioListDocument> localVarResp = getOrganizationCategoryWithHttpInfo(orgId, category, authorization);
        return localVarResp.getData();
    }

    /**
     * Get a list of recommendations from a category of content from an organization
     * This endpoint provides a list of recommendations from a category of content from  an organization.
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param category One of the three categories of content - newscast, story, or podcast (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return ApiResponse&lt;OrganizationCategoryAudioListDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from a category of content from an organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<OrganizationCategoryAudioListDocument> getOrganizationCategoryWithHttpInfo(Long orgId, String category, String authorization) throws ApiException {
        okhttp3.Call localVarCall = getOrganizationCategoryValidateBeforeCall(orgId, category, authorization, null);
        Type localVarReturnType = new TypeToken<OrganizationCategoryAudioListDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a list of recommendations from a category of content from an organization (asynchronously)
     * This endpoint provides a list of recommendations from a category of content from  an organization.
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param category One of the three categories of content - newscast, story, or podcast (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items from a category of content from an organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationCategoryAsync(Long orgId, String category, String authorization, final ApiCallback<OrganizationCategoryAudioListDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getOrganizationCategoryValidateBeforeCall(orgId, category, authorization, _callback);
        Type localVarReturnType = new TypeToken<OrganizationCategoryAudioListDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getOrganizationOverview
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of up to four different categories of audio items from a specific organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationOverviewCall(Long orgId, String authorization, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/organizations/{orgId}/recommendations"
            .replace("{" + "orgId" + "}", localVarApiClient.escapeString(orgId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getOrganizationOverviewValidateBeforeCall(Long orgId, String authorization, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'orgId' is set
        if (orgId == null) {
            throw new ApiException("Missing the required parameter 'orgId' when calling getOrganizationOverview(Async)");
        }

        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getOrganizationOverview(Async)");
        }

        return getOrganizationOverviewCall(orgId, authorization, _callback);

    }

    /**
     * Get a variety of details about an organization including various lists of recent audio items
     * This endpoint provides a variety of details about an organization including various lists of recent audio items.
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return OrganizationOverviewDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of up to four different categories of audio items from a specific organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public OrganizationOverviewDocument getOrganizationOverview(Long orgId, String authorization) throws ApiException {
        ApiResponse<OrganizationOverviewDocument> localVarResp = getOrganizationOverviewWithHttpInfo(orgId, authorization);
        return localVarResp.getData();
    }

    /**
     * Get a variety of details about an organization including various lists of recent audio items
     * This endpoint provides a variety of details about an organization including various lists of recent audio items.
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return ApiResponse&lt;OrganizationOverviewDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of up to four different categories of audio items from a specific organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<OrganizationOverviewDocument> getOrganizationOverviewWithHttpInfo(Long orgId, String authorization) throws ApiException {
        okhttp3.Call localVarCall = getOrganizationOverviewValidateBeforeCall(orgId, authorization, null);
        Type localVarReturnType = new TypeToken<OrganizationOverviewDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a variety of details about an organization including various lists of recent audio items (asynchronously)
     * This endpoint provides a variety of details about an organization including various lists of recent audio items.
     * @param orgId ID of an organization, such as an NPR One station (required)
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of up to four different categories of audio items from a specific organization </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> The resource with the requested ID could not be found, and the server was unable to complete the request. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getOrganizationOverviewAsync(Long orgId, String authorization, final ApiCallback<OrganizationOverviewDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getOrganizationOverviewValidateBeforeCall(orgId, authorization, _callback);
        Type localVarReturnType = new TypeToken<OrganizationOverviewDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getPromo
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getPromoCall(String authorization, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/promo/recommendations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getPromoValidateBeforeCall(String authorization, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getPromo(Async)");
        }

        return getPromoCall(authorization, _callback);

    }

    /**
     * Retrieve the most recent promo audio heard by the logged-in user
     * Gets the most recently played promo for which the user has neither tapped through the promo or listened to the target story.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return AudioItemListDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public AudioItemListDocument getPromo(String authorization) throws ApiException {
        ApiResponse<AudioItemListDocument> localVarResp = getPromoWithHttpInfo(authorization);
        return localVarResp.getData();
    }

    /**
     * Retrieve the most recent promo audio heard by the logged-in user
     * Gets the most recently played promo for which the user has neither tapped through the promo or listened to the target story.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @return ApiResponse&lt;AudioItemListDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<AudioItemListDocument> getPromoWithHttpInfo(String authorization) throws ApiException {
        okhttp3.Call localVarCall = getPromoValidateBeforeCall(authorization, null);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Retrieve the most recent promo audio heard by the logged-in user (asynchronously)
     * Gets the most recently played promo for which the user has neither tapped through the promo or listened to the target story.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getPromoAsync(String authorization, final ApiCallback<AudioItemListDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getPromoValidateBeforeCall(authorization, _callback);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getRecommendations
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param sharedMediaId This media was shared directly with the user; if provided, the service will add this recommendation to the top of the list (optional)
     * @param notifiedMediaId The user received a push notification about this media; if provided, the service will add this recommendation to the top of the list (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getRecommendationsCall(String authorization, String xAdvertisingID, String channel, String sharedMediaId, String notifiedMediaId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/recommendations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (channel != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("channel", channel));
        }

        if (sharedMediaId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sharedMediaId", sharedMediaId));
        }

        if (notifiedMediaId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("notifiedMediaId", notifiedMediaId));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (xAdvertisingID != null) {
            localVarHeaderParams.put("X-Advertising-ID", localVarApiClient.parameterToString(xAdvertisingID));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getRecommendationsValidateBeforeCall(String authorization, String xAdvertisingID, String channel, String sharedMediaId, String notifiedMediaId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getRecommendations(Async)");
        }

        return getRecommendationsCall(authorization, xAdvertisingID, channel, sharedMediaId, notifiedMediaId, _callback);

    }

    /**
     * Get a list of media for the logged-in user from NPR&#39;s recommendation engine
     * This endpoint returns a list of audio recommendations. It is designed to be used for an initial list of recommendations, and then &#x60;POST /v2/ratings?recommend&#x3D;true&#x60; should be used for subsequent requests for recommendations.  A fully-populated link to the ratings endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the &#x60;links[&#39;recommendations&#39;]&#x60; object. The query parameters in this link should not be modified. Be sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.  A 500 will be returned if there are no eligible remaining recommendations.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param sharedMediaId This media was shared directly with the user; if provided, the service will add this recommendation to the top of the list (optional)
     * @param notifiedMediaId The user received a push notification about this media; if provided, the service will add this recommendation to the top of the list (optional)
     * @return AudioItemListDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public AudioItemListDocument getRecommendations(String authorization, String xAdvertisingID, String channel, String sharedMediaId, String notifiedMediaId) throws ApiException {
        ApiResponse<AudioItemListDocument> localVarResp = getRecommendationsWithHttpInfo(authorization, xAdvertisingID, channel, sharedMediaId, notifiedMediaId);
        return localVarResp.getData();
    }

    /**
     * Get a list of media for the logged-in user from NPR&#39;s recommendation engine
     * This endpoint returns a list of audio recommendations. It is designed to be used for an initial list of recommendations, and then &#x60;POST /v2/ratings?recommend&#x3D;true&#x60; should be used for subsequent requests for recommendations.  A fully-populated link to the ratings endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the &#x60;links[&#39;recommendations&#39;]&#x60; object. The query parameters in this link should not be modified. Be sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.  A 500 will be returned if there are no eligible remaining recommendations.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param sharedMediaId This media was shared directly with the user; if provided, the service will add this recommendation to the top of the list (optional)
     * @param notifiedMediaId The user received a push notification about this media; if provided, the service will add this recommendation to the top of the list (optional)
     * @return ApiResponse&lt;AudioItemListDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<AudioItemListDocument> getRecommendationsWithHttpInfo(String authorization, String xAdvertisingID, String channel, String sharedMediaId, String notifiedMediaId) throws ApiException {
        okhttp3.Call localVarCall = getRecommendationsValidateBeforeCall(authorization, xAdvertisingID, channel, sharedMediaId, notifiedMediaId, null);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a list of media for the logged-in user from NPR&#39;s recommendation engine (asynchronously)
     * This endpoint returns a list of audio recommendations. It is designed to be used for an initial list of recommendations, and then &#x60;POST /v2/ratings?recommend&#x3D;true&#x60; should be used for subsequent requests for recommendations.  A fully-populated link to the ratings endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the &#x60;links[&#39;recommendations&#39;]&#x60; object. The query parameters in this link should not be modified. Be sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.  A 500 will be returned if there are no eligible remaining recommendations.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param sharedMediaId This media was shared directly with the user; if provided, the service will add this recommendation to the top of the list (optional)
     * @param notifiedMediaId The user received a push notification about this media; if provided, the service will add this recommendation to the top of the list (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio items (recommendations) </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getRecommendationsAsync(String authorization, String xAdvertisingID, String channel, String sharedMediaId, String notifiedMediaId, final ApiCallback<AudioItemListDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getRecommendationsValidateBeforeCall(authorization, xAdvertisingID, channel, sharedMediaId, notifiedMediaId, _callback);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getSearchRecommendations
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param searchTerms Search terms to search on; can include URL-encoded punctuation (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio and aggregation items matching the search query </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getSearchRecommendationsCall(String authorization, String searchTerms, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v2/search/recommendations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (searchTerms != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("searchTerms", searchTerms));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getSearchRecommendationsValidateBeforeCall(String authorization, String searchTerms, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling getSearchRecommendations(Async)");
        }

        // verify the required parameter 'searchTerms' is set
        if (searchTerms == null) {
            throw new ApiException("Missing the required parameter 'searchTerms' when calling getSearchRecommendations(Async)");
        }

        return getSearchRecommendationsCall(authorization, searchTerms, _callback);

    }

    /**
     * Get a list of recent audio and aggregation items associated with search terms
     * In the schema shown below, SearchItemDocument is not an actual type of returned object; the object returned by a search will be either an AggregationAudioItemListDocument or an AudioItemDocument.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param searchTerms Search terms to search on; can include URL-encoded punctuation (required)
     * @return SearchListDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio and aggregation items matching the search query </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public SearchListDocument getSearchRecommendations(String authorization, String searchTerms) throws ApiException {
        ApiResponse<SearchListDocument> localVarResp = getSearchRecommendationsWithHttpInfo(authorization, searchTerms);
        return localVarResp.getData();
    }

    /**
     * Get a list of recent audio and aggregation items associated with search terms
     * In the schema shown below, SearchItemDocument is not an actual type of returned object; the object returned by a search will be either an AggregationAudioItemListDocument or an AudioItemDocument.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param searchTerms Search terms to search on; can include URL-encoded punctuation (required)
     * @return ApiResponse&lt;SearchListDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio and aggregation items matching the search query </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<SearchListDocument> getSearchRecommendationsWithHttpInfo(String authorization, String searchTerms) throws ApiException {
        okhttp3.Call localVarCall = getSearchRecommendationsValidateBeforeCall(authorization, searchTerms, null);
        Type localVarReturnType = new TypeToken<SearchListDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a list of recent audio and aggregation items associated with search terms (asynchronously)
     * In the schema shown below, SearchItemDocument is not an actual type of returned object; the object returned by a search will be either an AggregationAudioItemListDocument or an AudioItemDocument.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param searchTerms Search terms to search on; can include URL-encoded punctuation (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A list of audio and aggregation items matching the search query </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call getSearchRecommendationsAsync(String authorization, String searchTerms, final ApiCallback<SearchListDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = getSearchRecommendationsValidateBeforeCall(authorization, searchTerms, _callback);
        Type localVarReturnType = new TypeToken<SearchListDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for postRating
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param body A list of RatingData objects which contains data about ratings such as the id of the content, the rating value, elapsed time and more. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param recommend If set to &#x60;false&#x60;, this call will return a blank document; otherwise it will return a new recommendation object (optional, default to true)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> If the &#x60;recommend&#x60; param was set to &#x60;true&#x60;, this returns a list of audio items; otherwise, a blank document is returned. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call postRatingCall(String authorization, List<RatingData> body, String xAdvertisingID, String channel, Boolean recommend, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/v2/ratings";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (channel != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("channel", channel));
        }

        if (recommend != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("recommend", recommend));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (xAdvertisingID != null) {
            localVarHeaderParams.put("X-Advertising-ID", localVarApiClient.parameterToString(xAdvertisingID));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/vnd.collection.doc+json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call postRatingValidateBeforeCall(String authorization, List<RatingData> body, String xAdvertisingID, String channel, Boolean recommend, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling postRating(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling postRating(Async)");
        }

        return postRatingCall(authorization, body, xAdvertisingID, channel, recommend, _callback);

    }

    /**
     * Collect new ratings for media previously recommended to the logged-in user
     * This endpoint is the main mechanism for providing feedback from the user to NPR about the recommendations that are obtained from &#x60;GET /listening/v2/recommendations&#x60;.  A fully-populated link to this endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the &#x60;links[&#39;recommendations&#39;]&#x60; object. The query parameters in this link should not be modified. Be sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.  This endpoint can return a blank JSON.doc or AudioItemDocument depending on the &#x60;recommend&#x3D;true|false&#x60; parameter. The &#x60;recommend&#x3D;true&#x60; flag allows this endpoint to both receive ratings and send back recommendations in the same call.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param body A list of RatingData objects which contains data about ratings such as the id of the content, the rating value, elapsed time and more. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param recommend If set to &#x60;false&#x60;, this call will return a blank document; otherwise it will return a new recommendation object (optional, default to true)
     * @return AudioItemListDocument
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> If the &#x60;recommend&#x60; param was set to &#x60;true&#x60;, this returns a list of audio items; otherwise, a blank document is returned. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public AudioItemListDocument postRating(String authorization, List<RatingData> body, String xAdvertisingID, String channel, Boolean recommend) throws ApiException {
        ApiResponse<AudioItemListDocument> localVarResp = postRatingWithHttpInfo(authorization, body, xAdvertisingID, channel, recommend);
        return localVarResp.getData();
    }

    /**
     * Collect new ratings for media previously recommended to the logged-in user
     * This endpoint is the main mechanism for providing feedback from the user to NPR about the recommendations that are obtained from &#x60;GET /listening/v2/recommendations&#x60;.  A fully-populated link to this endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the &#x60;links[&#39;recommendations&#39;]&#x60; object. The query parameters in this link should not be modified. Be sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.  This endpoint can return a blank JSON.doc or AudioItemDocument depending on the &#x60;recommend&#x3D;true|false&#x60; parameter. The &#x60;recommend&#x3D;true&#x60; flag allows this endpoint to both receive ratings and send back recommendations in the same call.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param body A list of RatingData objects which contains data about ratings such as the id of the content, the rating value, elapsed time and more. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param recommend If set to &#x60;false&#x60;, this call will return a blank document; otherwise it will return a new recommendation object (optional, default to true)
     * @return ApiResponse&lt;AudioItemListDocument&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> If the &#x60;recommend&#x60; param was set to &#x60;true&#x60;, this returns a list of audio items; otherwise, a blank document is returned. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public ApiResponse<AudioItemListDocument> postRatingWithHttpInfo(String authorization, List<RatingData> body, String xAdvertisingID, String channel, Boolean recommend) throws ApiException {
        okhttp3.Call localVarCall = postRatingValidateBeforeCall(authorization, body, xAdvertisingID, channel, recommend, null);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Collect new ratings for media previously recommended to the logged-in user (asynchronously)
     * This endpoint is the main mechanism for providing feedback from the user to NPR about the recommendations that are obtained from &#x60;GET /listening/v2/recommendations&#x60;.  A fully-populated link to this endpoint is returned with each individual recommendation and is located in the AudioItemDocument under the &#x60;links[&#39;recommendations&#39;]&#x60; object. The query parameters in this link should not be modified. Be sure to copy and send back the entire ratings object (RatingData), as new fields may be added to it in the future.  This endpoint can return a blank JSON.doc or AudioItemDocument depending on the &#x60;recommend&#x3D;true|false&#x60; parameter. The &#x60;recommend&#x3D;true&#x60; flag allows this endpoint to both receive ratings and send back recommendations in the same call.
     * @param authorization Your access token from the Authorization Service. Should start with &#x60;Bearer&#x60;, followed by a space, followed by the token. (required)
     * @param body A list of RatingData objects which contains data about ratings such as the id of the content, the rating value, elapsed time and more. (required)
     * @param xAdvertisingID A device-specific advertising identifier, if possible. Apple&#39;s IDFA is an example. (optional)
     * @param channel Determines the focus of the recommendations returned. Channel &#x60;npr&#x60; is recommended for most use cases. (optional, default to npr)
     * @param recommend If set to &#x60;false&#x60;, this call will return a blank document; otherwise it will return a new recommendation object (optional, default to true)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> If the &#x60;recommend&#x60; param was set to &#x60;true&#x60;, this returns a list of audio items; otherwise, a blank document is returned. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 400 </td><td> A bad request; generally, one or more parameters passed in were incorrect or missing </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 401 </td><td> The client is not authorized to complete this request. Check to ensure a valid access token was passed in the headers. </td><td>  -  </td></tr>
        <tr><td> 429 </td><td> The client has exceeded the number of daily calls as per their rate limit. For now, this only applies to prototype applications and untrusted clients. Trusted clients will never be rate-limited, nor will any production apps. </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 500 </td><td> A server error </td><td>  * X-RateLimit-Remaining - The number of remaining requests in the current period <br>  * X-RateLimit-Reset - The number of seconds left in the current period <br>  * X-RateLimit-Limit - The number of allowed requests in the current period <br>  </td></tr>
        <tr><td> 503 </td><td> The system is undergoing maintenance and we are unable to fulfill this request. Look for a &#x60;Retry-After&#x60; header to see the predicted time the system will be back up. </td><td>  * Retry-After - The predicted time the system will be back up <br>  </td></tr>
     </table>
     */
    public okhttp3.Call postRatingAsync(String authorization, List<RatingData> body, String xAdvertisingID, String channel, Boolean recommend, final ApiCallback<AudioItemListDocument> _callback) throws ApiException {

        okhttp3.Call localVarCall = postRatingValidateBeforeCall(authorization, body, xAdvertisingID, channel, recommend, _callback);
        Type localVarReturnType = new TypeToken<AudioItemListDocument>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
