/**
 * NPR Listening Service
 * Audio recommendations tailored to a user's preferences
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageLink from './ImageLink';
import OtherLink from './OtherLink';

/**
 * The AggregationLinks model module.
 * @module model/AggregationLinks
 * @version 2
 */
class AggregationLinks {
    /**
     * Constructs a new <code>AggregationLinks</code>.
     * @alias module:model/AggregationLinks
     */
    constructor() { 
        
        AggregationLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AggregationLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AggregationLinks} obj Optional instance to populate.
     * @return {module:model/AggregationLinks} The populated <code>AggregationLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AggregationLinks();

            if (data.hasOwnProperty('binge')) {
                obj['binge'] = ApiClient.convertToType(data['binge'], [OtherLink]);
            }
            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], [ImageLink]);
            }
            if (data.hasOwnProperty('more')) {
                obj['more'] = ApiClient.convertToType(data['more'], [OtherLink]);
            }
            if (data.hasOwnProperty('web')) {
                obj['web'] = ApiClient.convertToType(data['web'], [OtherLink]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AggregationLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AggregationLinks</code>.
     */
    static validateJSON(data) {
        if (data['binge']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['binge'])) {
                throw new Error("Expected the field `binge` to be an array in the JSON data but got " + data['binge']);
            }
            // validate the optional field `binge` (array)
            for (const item of data['binge']) {
                OtherLink.validateJSON(item);
            };
        }
        if (data['image']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['image'])) {
                throw new Error("Expected the field `image` to be an array in the JSON data but got " + data['image']);
            }
            // validate the optional field `image` (array)
            for (const item of data['image']) {
                ImageLink.validateJSON(item);
            };
        }
        if (data['more']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['more'])) {
                throw new Error("Expected the field `more` to be an array in the JSON data but got " + data['more']);
            }
            // validate the optional field `more` (array)
            for (const item of data['more']) {
                OtherLink.validateJSON(item);
            };
        }
        if (data['web']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['web'])) {
                throw new Error("Expected the field `web` to be an array in the JSON data but got " + data['web']);
            }
            // validate the optional field `web` (array)
            for (const item of data['web']) {
                OtherLink.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * One or more links to more unrated / unheard recommendations from this aggregation
 * @member {Array.<module:model/OtherLink>} binge
 */
AggregationLinks.prototype['binge'] = undefined;

/**
 * One or more links to an image, along with metadata for display
 * @member {Array.<module:model/ImageLink>} image
 */
AggregationLinks.prototype['image'] = undefined;

/**
 * One or more links to more episodes for the aggregation
 * @member {Array.<module:model/OtherLink>} more
 */
AggregationLinks.prototype['more'] = undefined;

/**
 * One or more links to a web page for the item
 * @member {Array.<module:model/OtherLink>} web
 */
AggregationLinks.prototype['web'] = undefined;






export default AggregationLinks;

