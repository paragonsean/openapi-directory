/**
 * NPR Listening Service
 * Audio recommendations tailored to a user's preferences
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ImageLink from './ImageLink';
import OtherLink from './OtherLink';

/**
 * The OrganizationOverviewLinks model module.
 * @module model/OrganizationOverviewLinks
 * @version 2
 */
class OrganizationOverviewLinks {
    /**
     * Constructs a new <code>OrganizationOverviewLinks</code>.
     * @alias module:model/OrganizationOverviewLinks
     */
    constructor() { 
        
        OrganizationOverviewLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrganizationOverviewLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrganizationOverviewLinks} obj Optional instance to populate.
     * @return {module:model/OrganizationOverviewLinks} The populated <code>OrganizationOverviewLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrganizationOverviewLinks();

            if (data.hasOwnProperty('image')) {
                obj['image'] = ApiClient.convertToType(data['image'], [ImageLink]);
            }
            if (data.hasOwnProperty('related')) {
                obj['related'] = ApiClient.convertToType(data['related'], [OtherLink]);
            }
            if (data.hasOwnProperty('web')) {
                obj['web'] = ApiClient.convertToType(data['web'], [OtherLink]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrganizationOverviewLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrganizationOverviewLinks</code>.
     */
    static validateJSON(data) {
        if (data['image']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['image'])) {
                throw new Error("Expected the field `image` to be an array in the JSON data but got " + data['image']);
            }
            // validate the optional field `image` (array)
            for (const item of data['image']) {
                ImageLink.validateJSON(item);
            };
        }
        if (data['related']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['related'])) {
                throw new Error("Expected the field `related` to be an array in the JSON data but got " + data['related']);
            }
            // validate the optional field `related` (array)
            for (const item of data['related']) {
                OtherLink.validateJSON(item);
            };
        }
        if (data['web']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['web'])) {
                throw new Error("Expected the field `web` to be an array in the JSON data but got " + data['web']);
            }
            // validate the optional field `web` (array)
            for (const item of data['web']) {
                OtherLink.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * One or more links to an image that can be as for branding (logo and small logo)
 * @member {Array.<module:model/ImageLink>} image
 */
OrganizationOverviewLinks.prototype['image'] = undefined;

/**
 * One or more links to related web pages for the organization (their twitter feed or facebook page for example)
 * @member {Array.<module:model/OtherLink>} related
 */
OrganizationOverviewLinks.prototype['related'] = undefined;

/**
 * One or more links to main page for the organization (their homepage for example)
 * @member {Array.<module:model/OtherLink>} web
 */
OrganizationOverviewLinks.prototype['web'] = undefined;






export default OrganizationOverviewLinks;

