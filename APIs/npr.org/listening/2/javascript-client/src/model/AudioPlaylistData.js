/**
 * NPR Listening Service
 * Audio recommendations tailored to a user's preferences
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AudioPlaylistData model module.
 * @module model/AudioPlaylistData
 * @version 2
 */
class AudioPlaylistData {
    /**
     * Constructs a new <code>AudioPlaylistData</code>.
     * @alias module:model/AudioPlaylistData
     * @param id {String} The globally unique identifier for the playlist.
     * @param title {String} The user-editable title of the playlist
     * @param uids {Array.<String>} Individual content identifiers; see AudioItemDocument
     */
    constructor(id, title, uids) { 
        
        AudioPlaylistData.initialize(this, id, title, uids);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, title, uids) { 
        obj['id'] = id;
        obj['title'] = title;
        obj['uids'] = uids;
    }

    /**
     * Constructs a <code>AudioPlaylistData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AudioPlaylistData} obj Optional instance to populate.
     * @return {module:model/AudioPlaylistData} The populated <code>AudioPlaylistData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AudioPlaylistData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('uids')) {
                obj['uids'] = ApiClient.convertToType(data['uids'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AudioPlaylistData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AudioPlaylistData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AudioPlaylistData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['uids'])) {
            throw new Error("Expected the field `uids` to be an array in the JSON data but got " + data['uids']);
        }

        return true;
    }


}

AudioPlaylistData.RequiredProperties = ["id", "title", "uids"];

/**
 * The globally unique identifier for the playlist.
 * @member {String} id
 */
AudioPlaylistData.prototype['id'] = undefined;

/**
 * The user-editable title of the playlist
 * @member {String} title
 */
AudioPlaylistData.prototype['title'] = undefined;

/**
 * Individual content identifiers; see AudioItemDocument
 * @member {Array.<String>} uids
 */
AudioPlaylistData.prototype['uids'] = undefined;






export default AudioPlaylistData;

