/**
 * NPR Listening Service
 * Audio recommendations tailored to a user's preferences
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOtherLink.h
 *
 * An individual link from a list of links
 */

#ifndef OAIOtherLink_H
#define OAIOtherLink_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOtherLink : public OAIObject {
public:
    OAIOtherLink();
    OAIOtherLink(QString json);
    ~OAIOtherLink() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getContentType() const;
    void setContentType(const QString &content_type);
    bool is_content_type_Set() const;
    bool is_content_type_Valid() const;

    QString getLinkText() const;
    void setLinkText(const QString &link_text);
    bool is_link_text_Set() const;
    bool is_link_text_Valid() const;

    qint32 getPollInterval() const;
    void setPollInterval(const qint32 &poll_interval);
    bool is_poll_interval_Set() const;
    bool is_poll_interval_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_content_type;
    bool m_content_type_isSet;
    bool m_content_type_isValid;

    QString m_link_text;
    bool m_link_text_isSet;
    bool m_link_text_isValid;

    qint32 m_poll_interval;
    bool m_poll_interval_isSet;
    bool m_poll_interval_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOtherLink)

#endif // OAIOtherLink_H
