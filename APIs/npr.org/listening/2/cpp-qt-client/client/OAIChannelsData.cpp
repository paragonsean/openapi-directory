/**
 * NPR Listening Service
 * Audio recommendations tailored to a user's preferences
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIChannelsData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIChannelsData::OAIChannelsData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIChannelsData::OAIChannelsData() {
    this->initializeModel();
}

OAIChannelsData::~OAIChannelsData() {}

void OAIChannelsData::initializeModel() {

    m_default_channel_isSet = false;
    m_default_channel_isValid = false;
}

void OAIChannelsData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIChannelsData::fromJsonObject(QJsonObject json) {

    m_default_channel_isValid = ::OpenAPI::fromJsonValue(m_default_channel, json[QString("defaultChannel")]);
    m_default_channel_isSet = !json[QString("defaultChannel")].isNull() && m_default_channel_isValid;
}

QString OAIChannelsData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIChannelsData::asJsonObject() const {
    QJsonObject obj;
    if (m_default_channel_isSet) {
        obj.insert(QString("defaultChannel"), ::OpenAPI::toJsonValue(m_default_channel));
    }
    return obj;
}

QString OAIChannelsData::getDefaultChannel() const {
    return m_default_channel;
}
void OAIChannelsData::setDefaultChannel(const QString &default_channel) {
    m_default_channel = default_channel;
    m_default_channel_isSet = true;
}

bool OAIChannelsData::is_default_channel_Set() const{
    return m_default_channel_isSet;
}

bool OAIChannelsData::is_default_channel_Valid() const{
    return m_default_channel_isValid;
}

bool OAIChannelsData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_default_channel_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIChannelsData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
