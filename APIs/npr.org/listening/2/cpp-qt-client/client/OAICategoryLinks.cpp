/**
 * NPR Listening Service
 * Audio recommendations tailored to a user's preferences
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategoryLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategoryLinks::OAICategoryLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategoryLinks::OAICategoryLinks() {
    this->initializeModel();
}

OAICategoryLinks::~OAICategoryLinks() {}

void OAICategoryLinks::initializeModel() {

    m_more_isSet = false;
    m_more_isValid = false;
}

void OAICategoryLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategoryLinks::fromJsonObject(QJsonObject json) {

    m_more_isValid = ::OpenAPI::fromJsonValue(m_more, json[QString("more")]);
    m_more_isSet = !json[QString("more")].isNull() && m_more_isValid;
}

QString OAICategoryLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategoryLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_more.size() > 0) {
        obj.insert(QString("more"), ::OpenAPI::toJsonValue(m_more));
    }
    return obj;
}

QList<OAIOtherLink> OAICategoryLinks::getMore() const {
    return m_more;
}
void OAICategoryLinks::setMore(const QList<OAIOtherLink> &more) {
    m_more = more;
    m_more_isSet = true;
}

bool OAICategoryLinks::is_more_Set() const{
    return m_more_isSet;
}

bool OAICategoryLinks::is_more_Valid() const{
    return m_more_isValid;
}

bool OAICategoryLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_more.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategoryLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
