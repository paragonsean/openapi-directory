# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.image_link import ImageLink
from openapi_server.models.other_link import OtherLink
from openapi_server import util


class OrganizationOverviewLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, image: List[ImageLink]=None, related: List[OtherLink]=None, web: List[OtherLink]=None):
        """OrganizationOverviewLinks - a model defined in OpenAPI

        :param image: The image of this OrganizationOverviewLinks.
        :param related: The related of this OrganizationOverviewLinks.
        :param web: The web of this OrganizationOverviewLinks.
        """
        self.openapi_types = {
            'image': List[ImageLink],
            'related': List[OtherLink],
            'web': List[OtherLink]
        }

        self.attribute_map = {
            'image': 'image',
            'related': 'related',
            'web': 'web'
        }

        self._image = image
        self._related = related
        self._web = web

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrganizationOverviewLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrganizationOverviewLinks of this OrganizationOverviewLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def image(self):
        """Gets the image of this OrganizationOverviewLinks.

        One or more links to an image that can be as for branding (logo and small logo)

        :return: The image of this OrganizationOverviewLinks.
        :rtype: List[ImageLink]
        """
        return self._image

    @image.setter
    def image(self, image):
        """Sets the image of this OrganizationOverviewLinks.

        One or more links to an image that can be as for branding (logo and small logo)

        :param image: The image of this OrganizationOverviewLinks.
        :type image: List[ImageLink]
        """

        self._image = image

    @property
    def related(self):
        """Gets the related of this OrganizationOverviewLinks.

        One or more links to related web pages for the organization (their twitter feed or facebook page for example)

        :return: The related of this OrganizationOverviewLinks.
        :rtype: List[OtherLink]
        """
        return self._related

    @related.setter
    def related(self, related):
        """Sets the related of this OrganizationOverviewLinks.

        One or more links to related web pages for the organization (their twitter feed or facebook page for example)

        :param related: The related of this OrganizationOverviewLinks.
        :type related: List[OtherLink]
        """

        self._related = related

    @property
    def web(self):
        """Gets the web of this OrganizationOverviewLinks.

        One or more links to main page for the organization (their homepage for example)

        :return: The web of this OrganizationOverviewLinks.
        :rtype: List[OtherLink]
        """
        return self._web

    @web.setter
    def web(self, web):
        """Sets the web of this OrganizationOverviewLinks.

        One or more links to main page for the organization (their homepage for example)

        :param web: The web of this OrganizationOverviewLinks.
        :type web: List[OtherLink]
        """

        self._web = web
