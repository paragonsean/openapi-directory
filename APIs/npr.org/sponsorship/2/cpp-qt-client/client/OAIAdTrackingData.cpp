/**
 * NPR Sponsorship Service
 * Sponsorship for non-NPR One client applications
 *
 * The version of the OpenAPI document: 2
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdTrackingData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdTrackingData::OAIAdTrackingData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdTrackingData::OAIAdTrackingData() {
    this->initializeModel();
}

OAIAdTrackingData::~OAIAdTrackingData() {}

void OAIAdTrackingData::initializeModel() {

    m_ad_id_isSet = false;
    m_ad_id_isValid = false;

    m_event_isSet = false;
    m_event_isValid = false;
}

void OAIAdTrackingData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdTrackingData::fromJsonObject(QJsonObject json) {

    m_ad_id_isValid = ::OpenAPI::fromJsonValue(m_ad_id, json[QString("adId")]);
    m_ad_id_isSet = !json[QString("adId")].isNull() && m_ad_id_isValid;

    m_event_isValid = ::OpenAPI::fromJsonValue(m_event, json[QString("event")]);
    m_event_isSet = !json[QString("event")].isNull() && m_event_isValid;
}

QString OAIAdTrackingData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdTrackingData::asJsonObject() const {
    QJsonObject obj;
    if (m_ad_id_isSet) {
        obj.insert(QString("adId"), ::OpenAPI::toJsonValue(m_ad_id));
    }
    if (m_event_isSet) {
        obj.insert(QString("event"), ::OpenAPI::toJsonValue(m_event));
    }
    return obj;
}

QString OAIAdTrackingData::getAdId() const {
    return m_ad_id;
}
void OAIAdTrackingData::setAdId(const QString &ad_id) {
    m_ad_id = ad_id;
    m_ad_id_isSet = true;
}

bool OAIAdTrackingData::is_ad_id_Set() const{
    return m_ad_id_isSet;
}

bool OAIAdTrackingData::is_ad_id_Valid() const{
    return m_ad_id_isValid;
}

QString OAIAdTrackingData::getEvent() const {
    return m_event;
}
void OAIAdTrackingData::setEvent(const QString &event) {
    m_event = event;
    m_event_isSet = true;
}

bool OAIAdTrackingData::is_event_Set() const{
    return m_event_isSet;
}

bool OAIAdTrackingData::is_event_Valid() const{
    return m_event_isValid;
}

bool OAIAdTrackingData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ad_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdTrackingData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ad_id_isValid && m_event_isValid && true;
}

} // namespace OpenAPI
