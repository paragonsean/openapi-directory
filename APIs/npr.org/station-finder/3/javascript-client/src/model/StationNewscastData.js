/**
 * NPR Station Finder Service
 * Allows clients to look up NPR member station information
 *
 * The version of the OpenAPI document: 3
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StationNewscastData model module.
 * @module model/StationNewscastData
 * @version 3
 */
class StationNewscastData {
    /**
     * Constructs a new <code>StationNewscastData</code>.
     * Metadata about the newscast for this station; newscasts are handled internally by other microservices such as the NPR One Listening Service, so this data should typically not be used by consumers
     * @alias module:model/StationNewscastData
     * @param id {String} The ID of the newscast that should be played for this station; this is handled internally by other microservices such as the NPR One Listening Service, so this field should typically not be used by consumers
     * @param recency {Number} How often the newscast should be played, in minutes; a value of `null` implies no information is available, and sensible defaults should be used
     */
    constructor(id, recency) { 
        
        StationNewscastData.initialize(this, id, recency);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, recency) { 
        obj['id'] = id;
        obj['recency'] = recency;
    }

    /**
     * Constructs a <code>StationNewscastData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StationNewscastData} obj Optional instance to populate.
     * @return {module:model/StationNewscastData} The populated <code>StationNewscastData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StationNewscastData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('recency')) {
                obj['recency'] = ApiClient.convertToType(data['recency'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StationNewscastData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StationNewscastData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StationNewscastData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}

StationNewscastData.RequiredProperties = ["id", "recency"];

/**
 * The ID of the newscast that should be played for this station; this is handled internally by other microservices such as the NPR One Listening Service, so this field should typically not be used by consumers
 * @member {String} id
 */
StationNewscastData.prototype['id'] = undefined;

/**
 * How often the newscast should be played, in minutes; a value of `null` implies no information is available, and sensible defaults should be used
 * @member {Number} recency
 */
StationNewscastData.prototype['recency'] = undefined;






export default StationNewscastData;

