/**
 * NPR Station Finder Service
 * Allows clients to look up NPR member station information
 *
 * The version of the OpenAPI document: 3
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StationNetworkTierThreeData from './StationNetworkTierThreeData';

/**
 * The StationNetworkTierTwoData model module.
 * @module model/StationNetworkTierTwoData
 * @version 3
 */
class StationNetworkTierTwoData {
    /**
     * Constructs a new <code>StationNetworkTierTwoData</code>.
     * Metadata about a tier 2 organization in the network, if this station is part of a network
     * @alias module:model/StationNetworkTierTwoData
     * @param id {String} The unique identifier of a tier 2 organization in the network
     * @param name {String} The display name for a tier 2 organization in the network
     * @param usesInheritance {Boolean} Whether or not this station inherits from a parent organization, also referred to as a network
     */
    constructor(id, name, usesInheritance) { 
        
        StationNetworkTierTwoData.initialize(this, id, name, usesInheritance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name, usesInheritance) { 
        obj['id'] = id;
        obj['name'] = name;
        obj['usesInheritance'] = usesInheritance;
    }

    /**
     * Constructs a <code>StationNetworkTierTwoData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StationNetworkTierTwoData} obj Optional instance to populate.
     * @return {module:model/StationNetworkTierTwoData} The populated <code>StationNetworkTierTwoData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StationNetworkTierTwoData();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('tier3')) {
                obj['tier3'] = ApiClient.convertToType(data['tier3'], [StationNetworkTierThreeData]);
            }
            if (data.hasOwnProperty('usesInheritance')) {
                obj['usesInheritance'] = ApiClient.convertToType(data['usesInheritance'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StationNetworkTierTwoData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StationNetworkTierTwoData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StationNetworkTierTwoData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        if (data['tier3']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tier3'])) {
                throw new Error("Expected the field `tier3` to be an array in the JSON data but got " + data['tier3']);
            }
            // validate the optional field `tier3` (array)
            for (const item of data['tier3']) {
                StationNetworkTierThreeData.validateJSON(item);
            };
        }

        return true;
    }


}

StationNetworkTierTwoData.RequiredProperties = ["id", "name", "usesInheritance"];

/**
 * The unique identifier of a tier 2 organization in the network
 * @member {String} id
 */
StationNetworkTierTwoData.prototype['id'] = undefined;

/**
 * The display name for a tier 2 organization in the network
 * @member {String} name
 */
StationNetworkTierTwoData.prototype['name'] = undefined;

/**
 * One or more stations that are hierarchical children of this organization
 * @member {Array.<module:model/StationNetworkTierThreeData>} tier3
 */
StationNetworkTierTwoData.prototype['tier3'] = undefined;

/**
 * Whether or not this station inherits from a parent organization, also referred to as a network
 * @member {Boolean} usesInheritance
 */
StationNetworkTierTwoData.prototype['usesInheritance'] = undefined;






export default StationNetworkTierTwoData;

