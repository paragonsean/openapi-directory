/**
 * NPR Station Finder Service
 * Allows clients to look up NPR member station information
 *
 * The version of the OpenAPI document: 3
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StationEligibilityData model module.
 * @module model/StationEligibilityData
 * @version 3
 */
class StationEligibilityData {
    /**
     * Constructs a new <code>StationEligibilityData</code>.
     * An associative array of eligibility-related metadata for this station
     * @alias module:model/StationEligibilityData
     * @param format {String} The format of the programming on this station
     * @param musicOnly {Boolean} Whether or not this station only plays music.  Deprecated.
     * @param nprOne {Boolean} Whether or not this station is considered an NPR One station
     * @param status {module:model/StationEligibilityData.StatusEnum} The status of the station within NPR's system, not typically used by consumers
     */
    constructor(format, musicOnly, nprOne, status) { 
        
        StationEligibilityData.initialize(this, format, musicOnly, nprOne, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, format, musicOnly, nprOne, status) { 
        obj['format'] = format || 'Public Radio';
        obj['localization'] = 'Show everywhere';
        obj['musicOnly'] = musicOnly || false;
        obj['nprOne'] = nprOne || true;
        obj['status'] = status || '1';
    }

    /**
     * Constructs a <code>StationEligibilityData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StationEligibilityData} obj Optional instance to populate.
     * @return {module:model/StationEligibilityData} The populated <code>StationEligibilityData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StationEligibilityData();

            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('localization')) {
                obj['localization'] = ApiClient.convertToType(data['localization'], 'String');
            }
            if (data.hasOwnProperty('musicOnly')) {
                obj['musicOnly'] = ApiClient.convertToType(data['musicOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('nprOne')) {
                obj['nprOne'] = ApiClient.convertToType(data['nprOne'], 'Boolean');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StationEligibilityData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StationEligibilityData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of StationEligibilityData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['localization'] && !(typeof data['localization'] === 'string' || data['localization'] instanceof String)) {
            throw new Error("Expected the field `localization` to be a primitive type in the JSON string but got " + data['localization']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

StationEligibilityData.RequiredProperties = ["format", "musicOnly", "nprOne", "status"];

/**
 * The format of the programming on this station
 * @member {String} format
 * @default 'Public Radio'
 */
StationEligibilityData.prototype['format'] = 'Public Radio';

/**
 * Whether or not this station should be shown in search for news context, any context or no context
 * @member {String} localization
 * @default 'Show everywhere'
 */
StationEligibilityData.prototype['localization'] = 'Show everywhere';

/**
 * Whether or not this station only plays music.  Deprecated.
 * @member {Boolean} musicOnly
 * @default false
 */
StationEligibilityData.prototype['musicOnly'] = false;

/**
 * Whether or not this station is considered an NPR One station
 * @member {Boolean} nprOne
 * @default true
 */
StationEligibilityData.prototype['nprOne'] = true;

/**
 * The status of the station within NPR's system, not typically used by consumers
 * @member {module:model/StationEligibilityData.StatusEnum} status
 * @default '1'
 */
StationEligibilityData.prototype['status'] = '1';





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
StationEligibilityData['StatusEnum'] = {

    /**
     * value: "1"
     * @const
     */
    "1": "1",

    /**
     * value: "9"
     * @const
     */
    "9": "9",

    /**
     * value: "10"
     * @const
     */
    "10": "10",

    /**
     * value: "12"
     * @const
     */
    "12": "12",

    /**
     * value: "15"
     * @const
     */
    "15": "15"
};



export default StationEligibilityData;

