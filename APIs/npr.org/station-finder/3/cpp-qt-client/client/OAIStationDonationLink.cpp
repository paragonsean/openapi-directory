/**
 * NPR Station Finder Service
 * Allows clients to look up NPR member station information
 *
 * The version of the OpenAPI document: 3
 * Contact: NPROneEnterprise@npr.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStationDonationLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStationDonationLink::OAIStationDonationLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStationDonationLink::OAIStationDonationLink() {
    this->initializeModel();
}

OAIStationDonationLink::~OAIStationDonationLink() {}

void OAIStationDonationLink::initializeModel() {

    m_href_isSet = false;
    m_href_isValid = false;

    m_guid_isSet = false;
    m_guid_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_type_name_isSet = false;
    m_type_name_isValid = false;

    m_type_id_isSet = false;
    m_type_id_isValid = false;
}

void OAIStationDonationLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStationDonationLink::fromJsonObject(QJsonObject json) {

    m_href_isValid = ::OpenAPI::fromJsonValue(m_href, json[QString("href")]);
    m_href_isSet = !json[QString("href")].isNull() && m_href_isValid;

    m_guid_isValid = ::OpenAPI::fromJsonValue(m_guid, json[QString("guid")]);
    m_guid_isSet = !json[QString("guid")].isNull() && m_guid_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_type_name_isValid = ::OpenAPI::fromJsonValue(m_type_name, json[QString("typeName")]);
    m_type_name_isSet = !json[QString("typeName")].isNull() && m_type_name_isValid;

    m_type_id_isValid = ::OpenAPI::fromJsonValue(m_type_id, json[QString("typeId")]);
    m_type_id_isSet = !json[QString("typeId")].isNull() && m_type_id_isValid;
}

QString OAIStationDonationLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStationDonationLink::asJsonObject() const {
    QJsonObject obj;
    if (m_href_isSet) {
        obj.insert(QString("href"), ::OpenAPI::toJsonValue(m_href));
    }
    if (m_guid_isSet) {
        obj.insert(QString("guid"), ::OpenAPI::toJsonValue(m_guid));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_type_name_isSet) {
        obj.insert(QString("typeName"), ::OpenAPI::toJsonValue(m_type_name));
    }
    if (m_type_id_isSet) {
        obj.insert(QString("typeId"), ::OpenAPI::toJsonValue(m_type_id));
    }
    return obj;
}

QString OAIStationDonationLink::getHref() const {
    return m_href;
}
void OAIStationDonationLink::setHref(const QString &href) {
    m_href = href;
    m_href_isSet = true;
}

bool OAIStationDonationLink::is_href_Set() const{
    return m_href_isSet;
}

bool OAIStationDonationLink::is_href_Valid() const{
    return m_href_isValid;
}

QString OAIStationDonationLink::getGuid() const {
    return m_guid;
}
void OAIStationDonationLink::setGuid(const QString &guid) {
    m_guid = guid;
    m_guid_isSet = true;
}

bool OAIStationDonationLink::is_guid_Set() const{
    return m_guid_isSet;
}

bool OAIStationDonationLink::is_guid_Valid() const{
    return m_guid_isValid;
}

QString OAIStationDonationLink::getTitle() const {
    return m_title;
}
void OAIStationDonationLink::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIStationDonationLink::is_title_Set() const{
    return m_title_isSet;
}

bool OAIStationDonationLink::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIStationDonationLink::getTypeName() const {
    return m_type_name;
}
void OAIStationDonationLink::setTypeName(const QString &type_name) {
    m_type_name = type_name;
    m_type_name_isSet = true;
}

bool OAIStationDonationLink::is_type_name_Set() const{
    return m_type_name_isSet;
}

bool OAIStationDonationLink::is_type_name_Valid() const{
    return m_type_name_isValid;
}

QString OAIStationDonationLink::getTypeId() const {
    return m_type_id;
}
void OAIStationDonationLink::setTypeId(const QString &type_id) {
    m_type_id = type_id;
    m_type_id_isSet = true;
}

bool OAIStationDonationLink::is_type_id_Set() const{
    return m_type_id_isSet;
}

bool OAIStationDonationLink::is_type_id_Valid() const{
    return m_type_id_isValid;
}

bool OAIStationDonationLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_href_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_guid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStationDonationLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_href_isValid && m_type_name_isValid && m_type_id_isValid && true;
}

} // namespace OpenAPI
