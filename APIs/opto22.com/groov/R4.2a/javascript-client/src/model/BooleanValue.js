/**
 * groov View Public API
 * #### Revised: 2019-11-21  ### Overview groov View Public API revision 1. 
 *
 * The version of the OpenAPI document: R4.2a
 * Contact: developer@opto22.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TagValue from './TagValue';

/**
 * The BooleanValue model module.
 * @module model/BooleanValue
 * @version R4.2a
 */
class BooleanValue {
    /**
     * Constructs a new <code>BooleanValue</code>.
     * @alias module:model/BooleanValue
     * @extends module:model/TagValue
     * @implements module:model/TagValue
     * @param valueType {String} 
     * @param value {Boolean} 
     */
    constructor(valueType, value) { 
        TagValue.initialize(this, valueType);
        BooleanValue.initialize(this, valueType, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, valueType, value) { 
        obj['value'] = value;
    }

    /**
     * Constructs a <code>BooleanValue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BooleanValue} obj Optional instance to populate.
     * @return {module:model/BooleanValue} The populated <code>BooleanValue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BooleanValue();
            TagValue.constructFromObject(data, obj);
            TagValue.constructFromObject(data, obj);

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BooleanValue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BooleanValue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BooleanValue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

BooleanValue.RequiredProperties = ["value", "valueType"];

/**
 * @member {Boolean} value
 */
BooleanValue.prototype['value'] = undefined;


// Implement TagValue interface:
/**
 * @member {String} valueType
 */
TagValue.prototype['valueType'] = undefined;




export default BooleanValue;

