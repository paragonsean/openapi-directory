/**
 * PAC Control REST API
 * #### Revised: 6/15/2018  ### Overview This API provides secure access to a SNAP-PAC-R or -S series controller's variable and I/O tags. Confidentiality for API transactions is provided by HTTPS. Authentication uses HTTP Basic Authentication with an API key. An API key ID is submitted in the Basic Authentication userid field and API key value in the password field.  **For more information visit:** [developer.opto22.com](http://developer.opto22.com)  ### Examples  **Read an array** of all the integer32 variables defined in the PAC's strategy. For example, on your SNAP-PAC-R or -S series controller at IP address 1.2.3.4, you would use the URL:   ``` https://1.2.3.4/api/v1/device/strategy/vars/int32s ``` and provide appropriate authentication. The GET response will be a JSON array of name-value  pairs such as:  ```json [ { \"nMyVeryFavoriteNumber\": 22 },   { \"nWidgetsProducedToday\": 22222 },   { \"DELAY_LOOP_TIME_IN_MSECS\"  : 200 } ] ``` **Read the engineering units** (EU) of an analog input point configured in the PAC's strategy. For an analog input (I/O point) named aiTemperatureInDegreesF, use   `https://1.2.3.4/api/v1/device/strategy/ios/analogInputs/aiTemperatureInDegreesF/eu`  The GET response will be a single JSON name-value pair such as: ```json { \"value\": 72.22 } ```      ### Note on packet sizes: When doing POSTs or GETs, the JSON payload in the body should not exceed 3k (3072 bytes). 
 *
 * The version of the OpenAPI document: R1.0a
 * Contact: developer@opto22.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The StrategyResponse model module.
 * @module model/StrategyResponse
 * @version R1.0a
 */
class StrategyResponse {
    /**
     * Constructs a new <code>StrategyResponse</code>.
     * @alias module:model/StrategyResponse
     */
    constructor() { 
        
        StrategyResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StrategyResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StrategyResponse} obj Optional instance to populate.
     * @return {module:model/StrategyResponse} The populated <code>StrategyResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StrategyResponse();

            if (data.hasOwnProperty('crc')) {
                obj['crc'] = ApiClient.convertToType(data['crc'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'String');
            }
            if (data.hasOwnProperty('runningCharts')) {
                obj['runningCharts'] = ApiClient.convertToType(data['runningCharts'], 'Number');
            }
            if (data.hasOwnProperty('strategyName')) {
                obj['strategyName'] = ApiClient.convertToType(data['strategyName'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StrategyResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StrategyResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['crc'] && !(typeof data['crc'] === 'string' || data['crc'] instanceof String)) {
            throw new Error("Expected the field `crc` to be a primitive type in the JSON string but got " + data['crc']);
        }
        // ensure the json data is a string
        if (data['date'] && !(typeof data['date'] === 'string' || data['date'] instanceof String)) {
            throw new Error("Expected the field `date` to be a primitive type in the JSON string but got " + data['date']);
        }
        // ensure the json data is a string
        if (data['strategyName'] && !(typeof data['strategyName'] === 'string' || data['strategyName'] instanceof String)) {
            throw new Error("Expected the field `strategyName` to be a primitive type in the JSON string but got " + data['strategyName']);
        }
        // ensure the json data is a string
        if (data['time'] && !(typeof data['time'] === 'string' || data['time'] instanceof String)) {
            throw new Error("Expected the field `time` to be a primitive type in the JSON string but got " + data['time']);
        }

        return true;
    }


}



/**
 * @member {String} crc
 */
StrategyResponse.prototype['crc'] = undefined;

/**
 * @member {String} date
 */
StrategyResponse.prototype['date'] = undefined;

/**
 * @member {Number} runningCharts
 */
StrategyResponse.prototype['runningCharts'] = undefined;

/**
 * @member {String} strategyName
 */
StrategyResponse.prototype['strategyName'] = undefined;

/**
 * @member {String} time
 */
StrategyResponse.prototype['time'] = undefined;






export default StrategyResponse;

