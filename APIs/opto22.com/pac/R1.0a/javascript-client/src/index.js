/**
 * PAC Control REST API
 * #### Revised: 6/15/2018  ### Overview This API provides secure access to a SNAP-PAC-R or -S series controller's variable and I/O tags. Confidentiality for API transactions is provided by HTTPS. Authentication uses HTTP Basic Authentication with an API key. An API key ID is submitted in the Basic Authentication userid field and API key value in the password field.  **For more information visit:** [developer.opto22.com](http://developer.opto22.com)  ### Examples  **Read an array** of all the integer32 variables defined in the PAC's strategy. For example, on your SNAP-PAC-R or -S series controller at IP address 1.2.3.4, you would use the URL:   ``` https://1.2.3.4/api/v1/device/strategy/vars/int32s ``` and provide appropriate authentication. The GET response will be a JSON array of name-value  pairs such as:  ```json [ { \"nMyVeryFavoriteNumber\": 22 },   { \"nWidgetsProducedToday\": 22222 },   { \"DELAY_LOOP_TIME_IN_MSECS\"  : 200 } ] ``` **Read the engineering units** (EU) of an analog input point configured in the PAC's strategy. For an analog input (I/O point) named aiTemperatureInDegreesF, use   `https://1.2.3.4/api/v1/device/strategy/ios/analogInputs/aiTemperatureInDegreesF/eu`  The GET response will be a single JSON name-value pair such as: ```json { \"value\": 72.22 } ```      ### Note on packet sizes: When doing POSTs or GETs, the JSON payload in the body should not exceed 3k (3072 bytes). 
 *
 * The version of the OpenAPI document: R1.0a
 * Contact: developer@opto22.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import ControllerResponse from './model/ControllerResponse';
import DigitalPointStateObject from './model/DigitalPointStateObject';
import DigitalPointStateVar from './model/DigitalPointStateVar';
import ErrorResponse200OKish from './model/ErrorResponse200OKish';
import ErrorResponse400BadAdminOrValue from './model/ErrorResponse400BadAdminOrValue';
import ErrorResponse401BadKeyForBasicAuth from './model/ErrorResponse401BadKeyForBasicAuth';
import ErrorResponse404NotFound from './model/ErrorResponse404NotFound';
import FloatValueObject from './model/FloatValueObject';
import FloatVar from './model/FloatVar';
import Int32ValueObject from './model/Int32ValueObject';
import Int32Var from './model/Int32Var';
import Int64StringValueObject from './model/Int64StringValueObject';
import Int64ValueObject from './model/Int64ValueObject';
import Int64Var from './model/Int64Var';
import Int64VarAsString from './model/Int64VarAsString';
import StrategyResponse from './model/StrategyResponse';
import StringValueObject from './model/StringValueObject';
import StringVar from './model/StringVar';
import TableDef from './model/TableDef';
import AllApi from './api/AllApi';
import DeviceApi from './api/DeviceApi';
import IosApi from './api/IosApi';
import StrategyApi from './api/StrategyApi';
import TablesApi from './api/TablesApi';
import VarsApi from './api/VarsApi';


/**
* #### Revised: 6/15/2018  ### Overview This API provides secure access to a SNAP-PAC-R or -S series controller&#39;s variable and I/O tags. Confidentiality for API transactions is provided by HTTPS. Authentication uses HTTP Basic Authentication with an API key. An API key ID is submitted in the Basic Authentication userid field and API key value in the password field.  **For more information visit:** [developer.opto22.com](http://developer.opto22.com)  ### Examples  **Read an array** of all the integer32 variables defined in the PAC&#39;s strategy. For example, on your SNAP-PAC-R or -S series controller at IP address 1.2.3.4, you would use the URL:   &#x60;&#x60;&#x60; https://1.2.3.4/api/v1/device/strategy/vars/int32s &#x60;&#x60;&#x60; and provide appropriate authentication. The GET response will be a JSON array of name-value  pairs such as:  &#x60;&#x60;&#x60;json [ { \&quot;nMyVeryFavoriteNumber\&quot;: 22 },   { \&quot;nWidgetsProducedToday\&quot;: 22222 },   { \&quot;DELAY_LOOP_TIME_IN_MSECS\&quot;  : 200 } ] &#x60;&#x60;&#x60; **Read the engineering units** (EU) of an analog input point configured in the PAC&#39;s strategy. For an analog input (I/O point) named aiTemperatureInDegreesF, use   &#x60;https://1.2.3.4/api/v1/device/strategy/ios/analogInputs/aiTemperatureInDegreesF/eu&#x60;  The GET response will be a single JSON name-value pair such as: &#x60;&#x60;&#x60;json { \&quot;value\&quot;: 72.22 } &#x60;&#x60;&#x60;      ### Note on packet sizes: When doing POSTs or GETs, the JSON payload in the body should not exceed 3k (3072 bytes). .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var PacControlRestApi = require('index'); // See note below*.
* var xxxSvc = new PacControlRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new PacControlRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new PacControlRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new PacControlRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version R1.0a
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The ControllerResponse model constructor.
     * @property {module:model/ControllerResponse}
     */
    ControllerResponse,

    /**
     * The DigitalPointStateObject model constructor.
     * @property {module:model/DigitalPointStateObject}
     */
    DigitalPointStateObject,

    /**
     * The DigitalPointStateVar model constructor.
     * @property {module:model/DigitalPointStateVar}
     */
    DigitalPointStateVar,

    /**
     * The ErrorResponse200OKish model constructor.
     * @property {module:model/ErrorResponse200OKish}
     */
    ErrorResponse200OKish,

    /**
     * The ErrorResponse400BadAdminOrValue model constructor.
     * @property {module:model/ErrorResponse400BadAdminOrValue}
     */
    ErrorResponse400BadAdminOrValue,

    /**
     * The ErrorResponse401BadKeyForBasicAuth model constructor.
     * @property {module:model/ErrorResponse401BadKeyForBasicAuth}
     */
    ErrorResponse401BadKeyForBasicAuth,

    /**
     * The ErrorResponse404NotFound model constructor.
     * @property {module:model/ErrorResponse404NotFound}
     */
    ErrorResponse404NotFound,

    /**
     * The FloatValueObject model constructor.
     * @property {module:model/FloatValueObject}
     */
    FloatValueObject,

    /**
     * The FloatVar model constructor.
     * @property {module:model/FloatVar}
     */
    FloatVar,

    /**
     * The Int32ValueObject model constructor.
     * @property {module:model/Int32ValueObject}
     */
    Int32ValueObject,

    /**
     * The Int32Var model constructor.
     * @property {module:model/Int32Var}
     */
    Int32Var,

    /**
     * The Int64StringValueObject model constructor.
     * @property {module:model/Int64StringValueObject}
     */
    Int64StringValueObject,

    /**
     * The Int64ValueObject model constructor.
     * @property {module:model/Int64ValueObject}
     */
    Int64ValueObject,

    /**
     * The Int64Var model constructor.
     * @property {module:model/Int64Var}
     */
    Int64Var,

    /**
     * The Int64VarAsString model constructor.
     * @property {module:model/Int64VarAsString}
     */
    Int64VarAsString,

    /**
     * The StrategyResponse model constructor.
     * @property {module:model/StrategyResponse}
     */
    StrategyResponse,

    /**
     * The StringValueObject model constructor.
     * @property {module:model/StringValueObject}
     */
    StringValueObject,

    /**
     * The StringVar model constructor.
     * @property {module:model/StringVar}
     */
    StringVar,

    /**
     * The TableDef model constructor.
     * @property {module:model/TableDef}
     */
    TableDef,

    /**
    * The AllApi service constructor.
    * @property {module:api/AllApi}
    */
    AllApi,

    /**
    * The DeviceApi service constructor.
    * @property {module:api/DeviceApi}
    */
    DeviceApi,

    /**
    * The IosApi service constructor.
    * @property {module:api/IosApi}
    */
    IosApi,

    /**
    * The StrategyApi service constructor.
    * @property {module:api/StrategyApi}
    */
    StrategyApi,

    /**
    * The TablesApi service constructor.
    * @property {module:api/TablesApi}
    */
    TablesApi,

    /**
    * The VarsApi service constructor.
    * @property {module:api/VarsApi}
    */
    VarsApi
};
