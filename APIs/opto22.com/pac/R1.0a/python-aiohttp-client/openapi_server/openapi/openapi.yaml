openapi: 3.0.1
info:
  contact:
    email: developer@opto22.com
    name: Opto 22
    url: http://developer.opto22.com
  description: "#### Revised: 6/15/2018\n\n### Overview\nThis API provides secure\
    \ access to a SNAP-PAC-R or -S series controller's variable and I/O tags. Confidentiality\
    \ for API transactions is provided by HTTPS. Authentication uses HTTP Basic Authentication\
    \ with an API key. An API key ID is submitted in the Basic Authentication userid\
    \ field and API key value in the password field.\n\n**For more information visit:**\
    \ [developer.opto22.com](http://developer.opto22.com)\n\n### Examples\n\n**Read\
    \ an array** of all the integer32 variables defined in the PAC's strategy.\nFor\
    \ example, on your SNAP-PAC-R or -S series controller at IP address 1.2.3.4, you\
    \ would use the URL: \n\n```\nhttps://1.2.3.4/api/v1/device/strategy/vars/int32s\n\
    ```\nand provide appropriate authentication. The GET response will be a JSON array\
    \ of name-value \npairs such as: \n```json\n[ { \"nMyVeryFavoriteNumber\": 22\
    \ },\n  { \"nWidgetsProducedToday\": 22222 },\n  { \"DELAY_LOOP_TIME_IN_MSECS\"\
    \  : 200 } ]\n```\n**Read the engineering units** (EU) of an analog input point\
    \ configured in the PAC's strategy.\nFor an analog input (I/O point) named aiTemperatureInDegreesF,\
    \ use \n\n`https://1.2.3.4/api/v1/device/strategy/ios/analogInputs/aiTemperatureInDegreesF/eu`\n\
    \nThe GET response will be a single JSON name-value pair such as:\n```json\n{\
    \ \"value\": 72.22 }\n```    \n\n### Note on packet sizes:\nWhen doing POSTs or\
    \ GETs, the JSON payload in the body should not exceed 3k (3072 bytes).\n"
  title: PAC Control REST API
  version: R1.0a
  x-apisguru-categories:
  - iot
  x-logo:
    url: https://twitter.com/opto22/profile_image?size=original
  x-origin:
  - format: swagger
    url: http://developer.opto22.com/static/generated/pac-rest-api/pac-rest-api.snap-pac.yaml
    version: "2.0"
  x-providerName: opto22.com
  x-serviceName: pac
servers:
- url: /api/v1
tags:
- description: Everything available through this RESTful API related to the PAC and
    its strategy
  name: all
- description: "PAC's type, firmware version, mac addresses, and uptime"
  name: device
- description: Information about the currently loaded strategy
  name: strategy
- description: I/O points in the strategy
  name: ios
- description: Numeric and string tables in the strategy
  name: tables
- description: Numeric and string variables in the strategy
  name: vars
paths:
  /device:
    get:
      description: Returns controller's type; firmware version; both mac addresses;
        and uptime in seconds
      operationId: read_device_details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ControllerResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - device
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy:
    get:
      description: "Returns the name, date, time, and CRC of the strategy currently\
        \ in the controller, and the number of charts currently running. Empty strings\
        \ and a 0 will be returned when there is no strategy."
      operationId: read_strategy_details
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StrategyResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - strategy
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/analogInputs:
    get:
      description: Returns the name and engineering units (EU) for all analog input
        points in the strategy
      operationId: read_analog_inputs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FloatVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/analogInputs/{ioName}/eu:
    get:
      description: Reads the value in engineering units (EU) of the specified analog
        input
      operationId: read_analog_input_eu
      parameters:
      - description: Name of the analog input point to read
        in: path
        name: ioName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/analogOutputs:
    get:
      description: Returns the name and engineering units (EU) for all analog output
        points in the strategy
      operationId: read_analog_outputs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FloatVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/analogOutputs/{ioName}/eu:
    get:
      description: Reads the value in engineering units (EU) of the specified analog
        output
      operationId: read_analog_output_eu
      parameters:
      - description: Name of analog output point to read
        in: path
        name: ioName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Sets the value of the specified analog output point
      operationId: write_analog_output_eu
      parameters:
      - description: Name of the analog output point to write
        in: path
        name: ioName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatValueObject'
        description: Value to write
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/digitalInputs:
    get:
      description: "Returns the name and state (true = on, false = off) of all digital\
        \ input points in the strategy. If there is no strategy in the controller,\
        \ or the strategy includes no digital inputs, the returned array will be empty."
      operationId: read_digital_inputs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DigitalPointStateVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/digitalInputs/{ioName}/state:
    get:
      description: "Returns the specified digital input point's state (true = on,\
        \ false = off)"
      operationId: read_digital_input_state
      parameters:
      - description: Name of the digital input point to read
        in: path
        name: ioName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalPointStateObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/digitalOutputs:
    get:
      description: "Returns the name and state (true = on, false = off) of all digital\
        \ output points in the strategy"
      operationId: read_digital_outputs
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DigitalPointStateVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/ios/digitalOutputs/{ioName}/state:
    get:
      description: "Returns the specified digital output point's state (true = on,\
        \ false = off)"
      operationId: read_digital_output_state
      parameters:
      - description: Name of the digit output point to read
        in: path
        name: ioName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DigitalPointStateObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Sets the value of the specified digital output point
      operationId: write_digital_output_state
      parameters:
      - description: Name of the digital output point to write
        in: path
        name: ioName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DigitalPointStateObject'
        description: Value to write
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - ios
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/floats:
    get:
      description: Returns an array of the name and length of all the float tables
        in the strategy
      operationId: read_float_tables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TableDef'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/floats/{tableName}:
    get:
      description: |
        Read table elements
        #### Examples ####
        * Read all elements in a table named ftable: https://1.2.3.4/api/v1/device/strategy/tables/floats/ftable
        * Read elements 5 and up in a table named ftable starting with index 5: https://1.2.3.4/api/v1/device/strategy/tables/floats/ftable?startIndex=5
        * Read 3 consecutive elements in a table named ftable starting with the element at index 10: https://1.2.3.4/api/v1/device/strategy/tables/floats/ftable?startIndex=10&numElements=3
      operationId: read_float_table
      parameters:
      - description: Name of float table to read; starting index and number of elements
          may be specified (defaults to all elements)
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to read (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - description: Number of elements to read (default is number of elements in
          the table minus startIndex)
        in: query
        name: numElements
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  description: Value of the float variable
                  format: float
                  type: number
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: |
        Write table elements
        #### Examples ####
        * Write the values (1.5, 2.4, 3.5) to 3 consecutive elements in a table named ftable starting with the element at index 10:POST to https://1.2.3.4/api/v1/device/strategy/tables/floats/ftable?startIndex=10  with body of the POST request set to [ 1.5, 2.4, 3.5 ]
      operationId: write_float_table
      parameters:
      - description: Name of float table to write; starting index may be specified
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to write (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: Value of the float variable
                format: float
                type: number
              type: array
        description: Array of element values to write starting at startIndex
        required: true
        x-body-name: floatArray
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: floatArray
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/floats/{tableName}/{index}:
    get:
      description: Read specified table element
      operationId: read_float_table_element
      parameters:
      - description: Name of float table to read
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to read
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Write specified table element
      operationId: write_float_table_element
      parameters:
      - description: Name of float table to write
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to write
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatValueObject'
        description: Element to write starting at index
        required: true
        x-body-name: FloatElementObject
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: FloatElementObject
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int32s:
    get:
      description: Returns an array of the name and length of all the integer32 tables
        in the strategy
      operationId: read_int32_tables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TableDef'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int32s/{tableName}:
    get:
      description: |
        "Read a range of table elements from the specified integer32 table"
         #### Examples ####
         * Read all elements in a table named itable: https://1.2.3.4/api/v1/device/strategy/tables/int32s/itable
         * Read elements 5 and up in a table named itable starting with index 5: https://1.2.3.4/api/v1/device/strategy/tables/int32s/itable?startIndex=5
         * Read 3 consecutive elements in a table named itable starting with the element at index 10: https://1.2.3.4/api/v1/device/strategy/tables/int32s/itable?startIndex=10&numElements=3
      operationId: read_int32_table
      parameters:
      - description: Name of integer32 table to read; starting index and number of
          elements may be specified (defaults to all elements)
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to read (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - description: Number of elements to read (default is number of elements in
          the table minus startIndex)
        in: query
        name: numElements
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  description: Value of the integer32 variable
                  format: int32
                  type: integer
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: "\"Write a range of table elements\"\n#### Examples ####\n* Write\
        \ the values (1, 2, 3) to 3 consecutive elements in a table named itable starting\
        \ with the element at index 10:POST to https://1.2.3.4/api/v1/device/strategy/tables/int32s/itable?startIndex=10\
        \  with body of the POST request set to [ 1, 2, 3 ]      \n"
      operationId: write_int32_table
      parameters:
      - description: Name of integer32 table to write; starting index may be specified
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to write (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: Value of the integer32 variable
                format: int32
                type: integer
              type: array
        description: "Array of element values to write starting at startIndex; if\
          \ the list of elements is too long to fit in the specified table, extra\
          \ elements will be ignored"
        required: true
        x-body-name: int32Array
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: int32Array
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int32s/{tableName}/{index}:
    get:
      description: Read specified integer32 table element
      operationId: read_int32_table_element
      parameters:
      - description: Name of the integer32 table to read
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to read
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int32ValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Write specified integer32 table element
      operationId: write_int32_table_element
      parameters:
      - description: Name of the integer32 table to write
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to write
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Int32ValueObject'
        description: Element to write at index specified
        required: true
        x-body-name: int32ElementObject
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: int32ElementObject
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int64s:
    get:
      description: Returns an array of the name and length of all the integer64 tables
        in the strategy
      operationId: read_int64_tables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TableDef'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int64s/{tableName}:
    get:
      description: |
        "Read a range of table elements from the specified integer64 table"
         #### Examples ####
         * Read all elements in a table named i64table: https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table
         * Read elements 5 and up in a table named i64table starting with index 5: https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table?startIndex=5
         * Read 3 consecutive elements in a table named i64table starting with the element at index 10: https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table?startIndex=10&numElements=3
      operationId: read_int64_table
      parameters:
      - description: Name of the integer64 table to read; starting index and number
          of elements may be specified (defaults to all elements)
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to read (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - description: Number of elements to read (default is number of elements in
          the table minus startIndex)
        in: query
        name: numElements
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  description: Value of the integer64 variable
                  format: int64
                  type: integer
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: |
        "Write a range of table elements"
        #### Examples ####
        * Write the values (1, 2, 3) to 3 consecutive elements in a table named i64table starting with the element at index 10:POST to https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table?startIndex=10  with body of the POST request set to [ 1, 2, 3 ]
      operationId: write_int64_table
      parameters:
      - description: Name of integer64 table to write; starting index may be specified
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to write; default is 0
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: Value of the integer64 variable
                format: int64
                type: integer
              type: array
        description: "Array of element values to write starting at startIndex; if\
          \ the array of elements is too long  to fit in the specified table, extra\
          \ elements will be ignored"
        required: true
        x-body-name: int64Array
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: int64Array
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int64s/{tableName}/_string:
    get:
      description: |
        "Read a range of table elements from the specified integer64 table"
         #### Examples ####
         * Read all elements in a table named i64table: https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table/_string
         * Read elements 5 and up in a table named i64table starting with index 5: https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table/_string?startIndex=5
         * Read 3 consecutive elements in a table named i64table starting with the element at index 10: https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table/_string?startIndex=10&numElements=3
      operationId: read_int64_table_as_string
      parameters:
      - description: Name of the integer64 table to read; starting index and number
          of elements may be specified (defaults to all elements)
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to read (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - description: Number of elements to read (default is number of elements in
          the table minus startIndex)
        in: query
        name: numElements
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  description: Value of the integer64 variable expressed as a decimal
                    string. E.g. "34359738367"
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: |
        "Write a range of table elements"
        #### Examples ####
        * Write the values (1, 2, 3) to 3 consecutive elements in a table named i64table starting with the element at index 10:POST to https://1.2.3.4/api/v1/device/strategy/tables/int64s/i64table/_string?startIndex=10  with body of the POST request set to [ "1", "2", "3" ]
      operationId: write_int64_table_as_string
      parameters:
      - description: Name of integer64 table to write; starting index may be specified
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to write; default is 0.
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: Value of the integer64 variable expressed as a decimal
                  string. E.g. "34359738367"
                type: string
              type: array
        description: "Array of element values to write starting at startIndex; if\
          \ the array of elements is too long  to fit in the specified table, extra\
          \ elements will be ignored"
        required: true
        x-body-name: int64AsStringArray
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: int64AsStringArray
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int64s/{tableName}/{index}:
    get:
      description: Read specified integer64 table element
      operationId: read_int64_table_element
      parameters:
      - description: Name of integer64 table to read
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to read
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int64ValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Write specified integer64 table element
      operationId: write_int64_table_element
      parameters:
      - description: Name of the integer64 table to write
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to write
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Int64ValueObject'
        description: Element to write starting at index specified
        required: true
        x-body-name: int64ElementObject
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: int64ElementObject
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/int64s/{tableName}/{index}/_string:
    get:
      description: Read specified integer64 table element as string
      operationId: read_int64_table_element_as_string
      parameters:
      - description: Name of integer64 table to read
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to read
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int64StringValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Write specified integer64 table element as string
      operationId: write_int64_table_element_as_string
      parameters:
      - description: Name of the integer64 table to write
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to write
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Int64StringValueObject'
        description: Element to write starting at index specified
        required: true
        x-body-name: int64ElementObject
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: int64ElementObject
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/strings:
    get:
      description: Returns an array of the name and length of all the string tables
        in the strategy
      operationId: read_string_tables
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TableDef'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/strings/{tableName}:
    get:
      description: |
        "Read a range of table elements from the specified string table"
         #### Examples ####
         * Read all elements in a table named strTable: https://1.2.3.4/api/v1/device/strategy/tables/strings/strTable
         * Read elements 5 and up in a table named i64table starting with index 5: https://1.2.3.4/api/v1/device/strategy/tables/strings/strTable?startIndex=5
         * Read 3 consecutive elements in a table named i64table starting with the element at index 10: https://1.2.3.4/api/v1/device/strategy/tables/strings/strTable?startIndex=10&numElements=3
      operationId: read_string_table
      parameters:
      - description: Name of string table to read; starting index and number of elements
          may be specified (defaults to all elements)
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to read (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      - description: Number of elements to read (default is number of elements in
          the table minus startIndex)
        in: query
        name: numElements
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  description: The value of a string; string width (max length) for
                    each string table is defined in the strategy
                  maxLength: 1024
                  type: string
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: |
        "Write a range of table elements"
        #### Examples ####
        * Write the values ("first", "second", "third") to 3 consecutive elements in a table named strTable starting with the element at index 10:POST to https://1.2.3.4/api/v1/device/strategy/tables/strings/strtable?startIndex=10  with body of the POST request set to [ "first", "second", "third" ]
      operationId: write_string_table
      parameters:
      - description: Name of string table to write; starting index may be specified
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of first element to write (default is 0)
        in: query
        name: startIndex
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                description: The value of a string; string width (max length) for
                  each string variable is defined in the strategy
                maxLength: 1024
                type: string
              type: array
        description: "Array of element values to write starting at startIndex; if\
          \ an element value is longer than the string width, the string will be truncated\
          \ to fit"
        required: true
        x-body-name: stringArray
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse200OKish'
          description: OK - but check details for any error messages
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: stringArray
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/tables/strings/{tableName}/{index}:
    get:
      description: Read specified table element
      operationId: read_string_table_element
      parameters:
      - description: Name of string table to read
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to read
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Write specified table element
      operationId: write_string_table_element
      parameters:
      - description: Name of string table to write
        in: path
        name: tableName
        required: true
        schema:
          type: string
      - description: Index of element to write
        in: path
        name: index
        required: true
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StringValueObject'
        description: Element to write starting at index
        required: true
        x-body-name: stringElementObject
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - tables
      x-codegen-request-body-name: stringElementObject
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/downTimers:
    get:
      description: Returns the name and current value of all down timers in the strategy
      operationId: read_down_timer_vars
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FloatVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/downTimers/{downTimerName}/value:
    get:
      description: Returns current value of the specified down timer
      operationId: read_down_timer_value
      parameters:
      - description: Name of the down timer variable to read
        in: path
        name: downTimerName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/floats:
    get:
      description: Returns the name and value of all (single-precision) float variables
        in the strategy
      operationId: read_float_vars
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FloatVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/floats/{floatName}:
    get:
      description: Returns value of the specified float variable
      operationId: read_float_var
      parameters:
      - description: Name of float variable to read
        in: path
        name: floatName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Sets the value of a float variable
      operationId: write_float_var
      parameters:
      - description: Name of the float variable to write
        in: path
        name: floatName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FloatValueObject'
        description: Value to write to the float variable
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/int32s:
    get:
      description: Returns the name and value of all integer32 variables in the strategy
      operationId: read_int32_vars
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Int32Var'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/int32s/{int32Name}:
    get:
      description: Returns value of the specified integer32 variable
      operationId: read_int32_var
      parameters:
      - description: Name of integer32 variable to read
        in: path
        name: int32Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int32ValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Sets the value of an integer32 variable
      operationId: write_int32_var
      parameters:
      - description: Name of integer32 variable to write
        in: path
        name: int32Name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Int32ValueObject'
        description: Value to write to the integer32 variable
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/int64s:
    get:
      description: Returns the name and value of all integer64 variables in the strategy
      operationId: read_int64_vars
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Int64Var'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/int64s/_string:
    get:
      description: Returns the name and value as a string of all integer64 variables
        in the strategy
      operationId: read_int64_vars_as_strings
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Int64VarAsString'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/int64s/{int64Name}:
    get:
      description: Returns value of the specified integer64 variable
      operationId: read_int64_var
      parameters:
      - description: Name of integer64 variable to read
        in: path
        name: int64Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int64ValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Sets the value of an integer64 variable
      operationId: write_int64_var
      parameters:
      - description: Name of integer64 variable to write
        in: path
        name: int64Name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Int64ValueObject'
        description: Value to write to the integer64 variable
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/int64s/{int64Name}/_string:
    get:
      description: Returns value of the specified integer64 variable as a string
      operationId: read_int64_var_as_string
      parameters:
      - description: Name of integer64 variable to read
        in: path
        name: int64Name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Int64StringValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Sets the value of an integer64 variable as a string
      operationId: write_int64_var_as_string
      parameters:
      - description: Name of integer64 variable to write
        in: path
        name: int64Name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Int64StringValueObject'
        description: Value to write to the integer64 variable
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/strings:
    get:
      description: Returns the name and value of all string variables in the strategy
      operationId: read_string_vars
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StringVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/strings/{stringName}:
    get:
      description: Returns value of the specified string
      operationId: read_string_var
      parameters:
      - description: Name of string variable to read
        in: path
        name: stringName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StringValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
    post:
      description: Sets the value of a string variable
      operationId: write_string_var
      parameters:
      - description: Name of string variable to write
        in: path
        name: stringName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StringValueObject'
        description: "String to write. If the value is longer than the string width,\
          \ the string will be truncated to fit."
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse200OKish'
          description: OK - but check details for any error messages
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/upTimers:
    get:
      description: Returns the name and current value of all up timers in the strategy
      operationId: read_up_timer_vars
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FloatVar'
                type: array
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
  /device/strategy/vars/upTimers/{upTimerName}/value:
    get:
      description: Returns current value of the specified up timer
      operationId: read_up_timer_value
      parameters:
      - description: Name of the up timer variable to read
        in: path
        name: upTimerName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FloatValueObject'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse400BadAdminOrValue'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse401BadKeyForBasicAuth'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse404NotFound'
          description: Not found
      security:
      - basicAuth: []
      tags:
      - all
      - vars
      x-openapi-router-controller: openapi_server.controllers.all_controller
components:
  schemas:
    ControllerResponse:
      example:
        mac2: mac2
        mac1: mac1
        upTimeSeconds: 0
        firmwareDate: firmwareDate
        controllerType: controllerType
        firmwareTime: firmwareTime
        firmwareVersion: firmwareVersion
      properties:
        controllerType:
          title: controllerType
          type: string
        firmwareDate:
          title: firmwareDate
          type: string
        firmwareTime:
          title: firmwareTime
          type: string
        firmwareVersion:
          title: firmwareVersion
          type: string
        mac1:
          title: mac1
          type: string
        mac2:
          title: mac2
          type: string
        upTimeSeconds:
          format: int32
          title: upTimeSeconds
          type: integer
      title: ControllerResponse
      type: object
    DigitalPointStateObject:
      example:
        value: true
      properties:
        value:
          description: "State of a digital point (true = on, false = off)"
          title: value
          type: boolean
      title: DigitalPointStateObject
      type: object
    DigitalPointStateVar:
      example:
        name: name
        value: true
      properties:
        name:
          description: "Name of the tag (strategy variable, i/o point, etc.)"
          maxLength: 50
          title: name
          type: string
        value:
          description: "State of a digital point (true = on, false = off)"
          title: value
          type: boolean
      title: DigitalPointStateVar
      type: object
    ErrorResponse200OKish:
      example:
        errorCode: 0
        message: message
      properties:
        errorCode:
          description: "Details: ** -23 ** The string you passed is longer than the\
            \ width of PAC Control string variable or table element you are writing\
            \ to."
          format: int32
          title: errorCode
          type: integer
        message:
          title: message
          type: string
      required:
      - errorCode
      - message
      title: ErrorResponse200OKish
      type: object
    ErrorResponse400BadAdminOrValue:
      example:
        errorCode: 6
        message: message
      properties:
        errorCode:
          description: "Details: ** -1 ** Invalid or no strategy. Use PAC Control\
            \ to download strategy logic. ** -3 ** Buffer overrun or invalid length.\
            \ The number or range of table indicies you specified exceeds elements\
            \ in the PAC Control table. ** -8 ** Invalid data. Check format of data\
            \ written. Compare to what's read for the same endpoint. ** -12 ** You've\
            \ passed a table index that is less than zero or greater than the length\
            \ of the table minus 1. ** -13 ** The value you passed to write is outside\
            \ of the valid range for the PAC Control data type you're writing to.\
            \ For example, if you specified the value 999999999999999 for an integer32\
            \ (since integer32 data types must be in the range: -2147483648 to 2147483647).\
            \ ** -17 or -20 ** The controller is busy with another task, for example,\
            \ downloading a new strategy. Try again later. ** -36 ** Endpoint is not\
            \ defined. ** -109 ** Attempting to write without write permissions. Check\
            \ /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of\
            \ the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using\
            \ the API on this device, you must first change the default user name\
            \ and password via the URL /admin/keys. Use the default User Name: 'admin'\
            \ and Password: 'password' to log ininitially."
          format: int32
          title: errorCode
          type: integer
        message:
          title: message
          type: string
      required:
      - errorCode
      - message
      title: ErrorResponse400BadAdminOrValue
      type: object
    ErrorResponse401BadKeyForBasicAuth:
      example:
        errorCode: 1
        message: message
      properties:
        errorCode:
          description: "Details: ** -104 ** Invalid key ID/value in HTTP header. Before\
            \ using the API on this device, you must create at least one key ID/value\
            \ via the URL /admin/keys. Then use one of those in your HTTP header for\
            \ Basic Authentication."
          format: int32
          title: errorCode
          type: integer
        message:
          title: message
          type: string
      required:
      - errorCode
      - message
      title: ErrorResponse401BadKeyForBasicAuth
      type: object
    ErrorResponse404NotFound:
      example:
        errorCode: 6
        message: message
      properties:
        errorCode:
          description: "Details: ** -29 ** The tag (variable, table, timer, I/O point,\
            \ etc.) you requested exists on the controller but does not match the\
            \ data type for this endpoint.  ** -28 ** The tag (variable, table, timer,\
            \ I/O point, etc.) does not currently exist on the controller. Check the\
            \ tag name and the controller's status. ** 404 ** Endpoint does not exist.\
            \ Check URL."
          format: int32
          title: errorCode
          type: integer
        message:
          title: message
          type: string
      required:
      - errorCode
      - message
      title: ErrorResponse404NotFound
      type: object
    FloatValueObject:
      example:
        value: 0.8008282
      properties:
        value:
          description: Value of the float variable
          format: float
          title: value
          type: number
      title: FloatValueObject
      type: object
    FloatVar:
      example:
        name: name
        value: 0.8008282
      properties:
        name:
          description: "Name of the tag (strategy variable, i/o point, etc.)"
          maxLength: 50
          title: name
          type: string
        value:
          description: Value of the float variable
          format: float
          title: value
          type: number
      title: FloatVar
      type: object
    Int32ValueObject:
      example:
        value: 0
      properties:
        value:
          description: Value of the integer32 variable
          format: int32
          title: value
          type: integer
      title: Int32ValueObject
      type: object
    Int32Var:
      example:
        name: name
        value: 0
      properties:
        name:
          description: "Name of the tag (strategy variable, i/o point, etc.)"
          maxLength: 50
          title: name
          type: string
        value:
          description: Value of the integer32 variable
          format: int32
          title: value
          type: integer
      title: Int32Var
      type: object
    Int64StringValueObject:
      example:
        value: value
      properties:
        value:
          description: "Value of the integer64 variable expressed as decimal string,\
            \ e.g. \"34359738367\""
          title: value
          type: string
      title: Int64StringValueObject
      type: object
    Int64ValueObject:
      example:
        value: 0
      properties:
        value:
          description: Value of the integer64 variable
          format: int64
          title: value
          type: integer
      title: Int64ValueObject
      type: object
    Int64Var:
      example:
        name: name
        value: 0
      properties:
        name:
          description: "Name of the tag (strategy variable, i/o point, etc.)"
          maxLength: 50
          title: name
          type: string
        value:
          description: Value of the integer64 variable
          format: int64
          title: value
          type: integer
      title: Int64Var
      type: object
    Int64VarAsString:
      example:
        name: name
        value: value
      properties:
        name:
          description: "Name of the tag (strategy variable, i/o point, etc.)"
          maxLength: 50
          title: name
          type: string
        value:
          description: "Value of the integer64 variable expressed as a decimal string,\
            \ E.g. \"34359738367\""
          title: value
          type: string
      title: Int64VarAsString
      type: object
    StrategyResponse:
      example:
        date: date
        strategyName: strategyName
        crc: crc
        runningCharts: 0
        time: time
      properties:
        crc:
          title: crc
          type: string
        date:
          title: date
          type: string
        runningCharts:
          format: int32
          title: runningCharts
          type: integer
        strategyName:
          title: strategyName
          type: string
        time:
          title: time
          type: string
      title: StrategyResponse
      type: object
    StringValueObject:
      example:
        value: value
      properties:
        value:
          description: The value of a string; string width (max length) for each string
            variable is defined in the strategy
          maxLength: 1024
          title: value
          type: string
      title: StringValueObject
      type: object
    StringVar:
      example:
        name: name
        value: value
      properties:
        name:
          description: "Name of the tag (strategy variable, i/o point, etc.)"
          maxLength: 50
          title: name
          type: string
        value:
          description: The value of a string; string width (max length) for each string
            variable is defined in the strategy
          maxLength: 1024
          title: value
          type: string
      title: StringVar
      type: object
    TableDef:
      example:
        length: 0
        name: name
      properties:
        length:
          description: Number of elements contained in this table
          format: int32
          title: length
          type: integer
        name:
          description: "Name of the tag (strategy variable, i/o point, etc.)"
          maxLength: 50
          title: name
          type: string
      title: TableDef
      type: object
  securitySchemes:
    basicAuth:
      description: HTTP Basic Authentication over HTTPS
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_basicAuth
x-original-swagger-version: "2.0"
