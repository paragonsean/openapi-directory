# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StrategyResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crc: str=None, _date: str=None, running_charts: int=None, strategy_name: str=None, time: str=None):
        """StrategyResponse - a model defined in OpenAPI

        :param crc: The crc of this StrategyResponse.
        :param _date: The _date of this StrategyResponse.
        :param running_charts: The running_charts of this StrategyResponse.
        :param strategy_name: The strategy_name of this StrategyResponse.
        :param time: The time of this StrategyResponse.
        """
        self.openapi_types = {
            'crc': str,
            '_date': str,
            'running_charts': int,
            'strategy_name': str,
            'time': str
        }

        self.attribute_map = {
            'crc': 'crc',
            '_date': 'date',
            'running_charts': 'runningCharts',
            'strategy_name': 'strategyName',
            'time': 'time'
        }

        self._crc = crc
        self.__date = _date
        self._running_charts = running_charts
        self._strategy_name = strategy_name
        self._time = time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StrategyResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StrategyResponse of this StrategyResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crc(self):
        """Gets the crc of this StrategyResponse.


        :return: The crc of this StrategyResponse.
        :rtype: str
        """
        return self._crc

    @crc.setter
    def crc(self, crc):
        """Sets the crc of this StrategyResponse.


        :param crc: The crc of this StrategyResponse.
        :type crc: str
        """

        self._crc = crc

    @property
    def _date(self):
        """Gets the _date of this StrategyResponse.


        :return: The _date of this StrategyResponse.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this StrategyResponse.


        :param _date: The _date of this StrategyResponse.
        :type _date: str
        """

        self.__date = _date

    @property
    def running_charts(self):
        """Gets the running_charts of this StrategyResponse.


        :return: The running_charts of this StrategyResponse.
        :rtype: int
        """
        return self._running_charts

    @running_charts.setter
    def running_charts(self, running_charts):
        """Sets the running_charts of this StrategyResponse.


        :param running_charts: The running_charts of this StrategyResponse.
        :type running_charts: int
        """

        self._running_charts = running_charts

    @property
    def strategy_name(self):
        """Gets the strategy_name of this StrategyResponse.


        :return: The strategy_name of this StrategyResponse.
        :rtype: str
        """
        return self._strategy_name

    @strategy_name.setter
    def strategy_name(self, strategy_name):
        """Sets the strategy_name of this StrategyResponse.


        :param strategy_name: The strategy_name of this StrategyResponse.
        :type strategy_name: str
        """

        self._strategy_name = strategy_name

    @property
    def time(self):
        """Gets the time of this StrategyResponse.


        :return: The time of this StrategyResponse.
        :rtype: str
        """
        return self._time

    @time.setter
    def time(self, time):
        """Sets the time of this StrategyResponse.


        :param time: The time of this StrategyResponse.
        :type time: str
        """

        self._time = time
