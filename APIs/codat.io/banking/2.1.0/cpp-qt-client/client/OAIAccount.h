/**
 * Banking API
 * Codat's Banking API allows you to access standardised data from over bank accounts via third party providers.  Standardize how you connect to your customersâ€™ bank accounts. Retrieve bank account and bank transaction data in the same way via our partnerships with Plaid and TrueLayer.  [Read more...](https://docs.codat.io/banking-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccount.h
 *
 * This data type provides a list of all the SMB&#39;s bank accounts, with rich data like balances, account numbers, and institutions holding the accounts.  Explore our [data coverage](https://knowledge.codat.io/supported-features/banking?view&#x3D;tab-by-data-type&amp;dataType&#x3D;banking-accounts).  Responses are paged, so you should provide &#x60;page&#x60; and &#x60;pageSize&#x60; query parameters in your request.
 */

#ifndef OAIAccount_H
#define OAIAccount_H

#include <QJsonObject>

#include "OAIAccountBalanceAmounts.h"
#include "OAIAccountIdentifiers.h"
#include "OAIAccountInstitution.h"
#include "OAIAccountType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAccount : public OAIObject {
public:
    OAIAccount();
    OAIAccount(QString json);
    ~OAIAccount() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getModifiedDate() const;
    void setModifiedDate(const QString &modified_date);
    bool is_modified_date_Set() const;
    bool is_modified_date_Valid() const;

    QString getSourceModifiedDate() const;
    void setSourceModifiedDate(const QString &source_modified_date);
    bool is_source_modified_date_Set() const;
    bool is_source_modified_date_Valid() const;

    OAIAccountBalanceAmounts getBalance() const;
    void setBalance(const OAIAccountBalanceAmounts &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getHolder() const;
    void setHolder(const QString &holder);
    bool is_holder_Set() const;
    bool is_holder_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIAccountIdentifiers getIdentifiers() const;
    void setIdentifiers(const OAIAccountIdentifiers &identifiers);
    bool is_identifiers_Set() const;
    bool is_identifiers_Valid() const;

    QString getInformalName() const;
    void setInformalName(const QString &informal_name);
    bool is_informal_name_Set() const;
    bool is_informal_name_Valid() const;

    OAIAccountInstitution getInstitution() const;
    void setInstitution(const OAIAccountInstitution &institution);
    bool is_institution_Set() const;
    bool is_institution_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIAccountType getType() const;
    void setType(const OAIAccountType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_modified_date;
    bool m_modified_date_isSet;
    bool m_modified_date_isValid;

    QString m_source_modified_date;
    bool m_source_modified_date_isSet;
    bool m_source_modified_date_isValid;

    OAIAccountBalanceAmounts m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_holder;
    bool m_holder_isSet;
    bool m_holder_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIAccountIdentifiers m_identifiers;
    bool m_identifiers_isSet;
    bool m_identifiers_isValid;

    QString m_informal_name;
    bool m_informal_name_isSet;
    bool m_informal_name_isValid;

    OAIAccountInstitution m_institution;
    bool m_institution_isSet;
    bool m_institution_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIAccountType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccount)

#endif // OAIAccount_H
