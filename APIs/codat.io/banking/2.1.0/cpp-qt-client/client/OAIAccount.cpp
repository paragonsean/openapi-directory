/**
 * Banking API
 * Codat's Banking API allows you to access standardised data from over bank accounts via third party providers.  Standardize how you connect to your customersâ€™ bank accounts. Retrieve bank account and bank transaction data in the same way via our partnerships with Plaid and TrueLayer.  [Read more...](https://docs.codat.io/banking-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccount::OAIAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccount::OAIAccount() {
    this->initializeModel();
}

OAIAccount::~OAIAccount() {}

void OAIAccount::initializeModel() {

    m_modified_date_isSet = false;
    m_modified_date_isValid = false;

    m_source_modified_date_isSet = false;
    m_source_modified_date_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_holder_isSet = false;
    m_holder_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_identifiers_isSet = false;
    m_identifiers_isValid = false;

    m_informal_name_isSet = false;
    m_informal_name_isValid = false;

    m_institution_isSet = false;
    m_institution_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccount::fromJsonObject(QJsonObject json) {

    m_modified_date_isValid = ::OpenAPI::fromJsonValue(m_modified_date, json[QString("modifiedDate")]);
    m_modified_date_isSet = !json[QString("modifiedDate")].isNull() && m_modified_date_isValid;

    m_source_modified_date_isValid = ::OpenAPI::fromJsonValue(m_source_modified_date, json[QString("sourceModifiedDate")]);
    m_source_modified_date_isSet = !json[QString("sourceModifiedDate")].isNull() && m_source_modified_date_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_holder_isValid = ::OpenAPI::fromJsonValue(m_holder, json[QString("holder")]);
    m_holder_isSet = !json[QString("holder")].isNull() && m_holder_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_identifiers_isValid = ::OpenAPI::fromJsonValue(m_identifiers, json[QString("identifiers")]);
    m_identifiers_isSet = !json[QString("identifiers")].isNull() && m_identifiers_isValid;

    m_informal_name_isValid = ::OpenAPI::fromJsonValue(m_informal_name, json[QString("informalName")]);
    m_informal_name_isSet = !json[QString("informalName")].isNull() && m_informal_name_isValid;

    m_institution_isValid = ::OpenAPI::fromJsonValue(m_institution, json[QString("institution")]);
    m_institution_isSet = !json[QString("institution")].isNull() && m_institution_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_modified_date_isSet) {
        obj.insert(QString("modifiedDate"), ::OpenAPI::toJsonValue(m_modified_date));
    }
    if (m_source_modified_date_isSet) {
        obj.insert(QString("sourceModifiedDate"), ::OpenAPI::toJsonValue(m_source_modified_date));
    }
    if (m_balance.isSet()) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_holder_isSet) {
        obj.insert(QString("holder"), ::OpenAPI::toJsonValue(m_holder));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_identifiers.isSet()) {
        obj.insert(QString("identifiers"), ::OpenAPI::toJsonValue(m_identifiers));
    }
    if (m_informal_name_isSet) {
        obj.insert(QString("informalName"), ::OpenAPI::toJsonValue(m_informal_name));
    }
    if (m_institution.isSet()) {
        obj.insert(QString("institution"), ::OpenAPI::toJsonValue(m_institution));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAccount::getModifiedDate() const {
    return m_modified_date;
}
void OAIAccount::setModifiedDate(const QString &modified_date) {
    m_modified_date = modified_date;
    m_modified_date_isSet = true;
}

bool OAIAccount::is_modified_date_Set() const{
    return m_modified_date_isSet;
}

bool OAIAccount::is_modified_date_Valid() const{
    return m_modified_date_isValid;
}

QString OAIAccount::getSourceModifiedDate() const {
    return m_source_modified_date;
}
void OAIAccount::setSourceModifiedDate(const QString &source_modified_date) {
    m_source_modified_date = source_modified_date;
    m_source_modified_date_isSet = true;
}

bool OAIAccount::is_source_modified_date_Set() const{
    return m_source_modified_date_isSet;
}

bool OAIAccount::is_source_modified_date_Valid() const{
    return m_source_modified_date_isValid;
}

OAIAccountBalanceAmounts OAIAccount::getBalance() const {
    return m_balance;
}
void OAIAccount::setBalance(const OAIAccountBalanceAmounts &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIAccount::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIAccount::is_balance_Valid() const{
    return m_balance_isValid;
}

QString OAIAccount::getCurrency() const {
    return m_currency;
}
void OAIAccount::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIAccount::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIAccount::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIAccount::getHolder() const {
    return m_holder;
}
void OAIAccount::setHolder(const QString &holder) {
    m_holder = holder;
    m_holder_isSet = true;
}

bool OAIAccount::is_holder_Set() const{
    return m_holder_isSet;
}

bool OAIAccount::is_holder_Valid() const{
    return m_holder_isValid;
}

QString OAIAccount::getId() const {
    return m_id;
}
void OAIAccount::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAccount::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAccount::is_id_Valid() const{
    return m_id_isValid;
}

OAIAccountIdentifiers OAIAccount::getIdentifiers() const {
    return m_identifiers;
}
void OAIAccount::setIdentifiers(const OAIAccountIdentifiers &identifiers) {
    m_identifiers = identifiers;
    m_identifiers_isSet = true;
}

bool OAIAccount::is_identifiers_Set() const{
    return m_identifiers_isSet;
}

bool OAIAccount::is_identifiers_Valid() const{
    return m_identifiers_isValid;
}

QString OAIAccount::getInformalName() const {
    return m_informal_name;
}
void OAIAccount::setInformalName(const QString &informal_name) {
    m_informal_name = informal_name;
    m_informal_name_isSet = true;
}

bool OAIAccount::is_informal_name_Set() const{
    return m_informal_name_isSet;
}

bool OAIAccount::is_informal_name_Valid() const{
    return m_informal_name_isValid;
}

OAIAccountInstitution OAIAccount::getInstitution() const {
    return m_institution;
}
void OAIAccount::setInstitution(const OAIAccountInstitution &institution) {
    m_institution = institution;
    m_institution_isSet = true;
}

bool OAIAccount::is_institution_Set() const{
    return m_institution_isSet;
}

bool OAIAccount::is_institution_Valid() const{
    return m_institution_isValid;
}

QString OAIAccount::getName() const {
    return m_name;
}
void OAIAccount::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAccount::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAccount::is_name_Valid() const{
    return m_name_isValid;
}

OAIAccountType OAIAccount::getType() const {
    return m_type;
}
void OAIAccount::setType(const OAIAccountType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAccount::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAccount::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_holder_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_identifiers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_informal_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_institution.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_balance_isValid && m_currency_isValid && m_id_isValid && m_identifiers_isValid && m_institution_isValid && m_name_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
