/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CommerceApi);
  }
}(this, function(expect, CommerceApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CommerceApi.TaxComponentAllocation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaxComponentAllocation', function() {
    it('should create an instance of TaxComponentAllocation', function() {
      // uncomment below and update the code to test TaxComponentAllocation
      //var instance = new CommerceApi.TaxComponentAllocation();
      //expect(instance).to.be.a(CommerceApi.TaxComponentAllocation);
    });

    it('should have the property rate (base name: "rate")', function() {
      // uncomment below and update the code to test the property rate
      //var instance = new CommerceApi.TaxComponentAllocation();
      //expect(instance).to.be();
    });

    it('should have the property taxComponentRef (base name: "taxComponentRef")', function() {
      // uncomment below and update the code to test the property taxComponentRef
      //var instance = new CommerceApi.TaxComponentAllocation();
      //expect(instance).to.be();
    });

  });

}));
