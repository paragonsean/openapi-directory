/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Customers from '../model/Customers';

/**
* Customers service.
* @module api/CustomersApi
* @version 2.1.0
*/
export default class CustomersApi {

    /**
    * Constructs a new CustomersApi. 
    * @alias module:api/CustomersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the listCustomers operation.
     * @callback module:api/CustomersApi~listCustomersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Customers} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List customers
     * List all commerce customers for the given company and data connection
     * @param {Number} page Page number. [Read more](https://docs.codat.io/using-the-api/paging).
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 100)] Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
     * @param {String} [query] Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
     * @param {String} [orderBy] Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
     * @param {module:api/CustomersApi~listCustomersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Customers}
     */
    listCustomers(page, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'page' is set
      if (page === undefined || page === null) {
        throw new Error("Missing the required parameter 'page' when calling listCustomers");
      }

      let pathParams = {
      };
      let queryParams = {
        'page': page,
        'pageSize': opts['pageSize'],
        'query': opts['query'],
        'orderBy': opts['orderBy']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['auth_header'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Customers;
      return this.apiClient.callApi(
        '/companies/{companyId}/connections/{connectionId}/data/commerce-customers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
