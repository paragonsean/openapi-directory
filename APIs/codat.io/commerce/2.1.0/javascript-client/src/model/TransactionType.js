/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class TransactionType.
* @enum {}
* @readonly
*/
export default class TransactionType {
    
        /**
         * value: "Payment"
         * @const
         */
        "Payment" = "Payment";

    
        /**
         * value: "Refund"
         * @const
         */
        "Refund" = "Refund";

    
        /**
         * value: "Payout"
         * @const
         */
        "Payout" = "Payout";

    
        /**
         * value: "FailedPayout"
         * @const
         */
        "FailedPayout" = "FailedPayout";

    
        /**
         * value: "Transfer"
         * @const
         */
        "Transfer" = "Transfer";

    
        /**
         * value: "PaymentFee"
         * @const
         */
        "PaymentFee" = "PaymentFee";

    
        /**
         * value: "PaymentFeeRefund"
         * @const
         */
        "PaymentFeeRefund" = "PaymentFeeRefund";

    
        /**
         * value: "Unknown"
         * @const
         */
        "Unknown" = "Unknown";

    

    /**
    * Returns a <code>TransactionType</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/TransactionType} The enum <code>TransactionType</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

