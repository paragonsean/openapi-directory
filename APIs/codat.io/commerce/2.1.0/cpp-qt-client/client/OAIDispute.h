/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDispute.h
 *
 * A customer may file a payment dispute with their bank or other card issuer when they&#39;re unsatisfied with their purchase or believe they have been charged incorrectly. For example:   - They didn&#39;t receive an order.   - The product they received was different to the commerce store&#39;s description.   - They&#39;ve been the victim of online fraud.    You can use data from the Disputes endpoints to calculate key metrics, such as the number of chargebacks.  Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view&#x3D;tab-by-data-type&amp;dataType&#x3D;commerce-disputes) for this data type.
 */

#ifndef OAIDispute_H
#define OAIDispute_H

#include <QJsonObject>

#include "OAIDisputeStatus.h"
#include "OAITransactionSourceRef.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDispute : public OAIObject {
public:
    OAIDispute();
    OAIDispute(QString json);
    ~OAIDispute() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCreatedDate() const;
    void setCreatedDate(const QString &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getModifiedDate() const;
    void setModifiedDate(const QString &modified_date);
    bool is_modified_date_Set() const;
    bool is_modified_date_Valid() const;

    QString getSourceModifiedDate() const;
    void setSourceModifiedDate(const QString &source_modified_date);
    bool is_source_modified_date_Set() const;
    bool is_source_modified_date_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAITransactionSourceRef getDisputedTransactions() const;
    void setDisputedTransactions(const OAITransactionSourceRef &disputed_transactions);
    bool is_disputed_transactions_Set() const;
    bool is_disputed_transactions_Valid() const;

    QString getDueDate() const;
    void setDueDate(const QString &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    OAIDisputeStatus getStatus() const;
    void setStatus(const OAIDisputeStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTotalAmount() const;
    void setTotalAmount(const QString &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_modified_date;
    bool m_modified_date_isSet;
    bool m_modified_date_isValid;

    QString m_source_modified_date;
    bool m_source_modified_date_isSet;
    bool m_source_modified_date_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAITransactionSourceRef m_disputed_transactions;
    bool m_disputed_transactions_isSet;
    bool m_disputed_transactions_isValid;

    QString m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    OAIDisputeStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDispute)

#endif // OAIDispute_H
