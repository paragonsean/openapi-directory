/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customers’ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionType.h
 *
 * The type of the platform transaction:   - &#x60;Unknown&#x60;   - &#x60;FailedPayout&#x60; — Failed transfer of funds from the seller&#39;s merchant account to their bank account.   - &#x60;Payment&#x60; — Credit and debit card payments.   - &#x60;PaymentFee&#x60; — Payment provider&#39;s fee on each card payment.   - &#x60;PaymentFeeRefund&#x60; — Payment provider&#39;s fee that has been refunded to the seller.   - &#x60;Payout&#x60; — Transfer of funds from the seller&#39;s merchant account to their bank account.   - &#x60;Refund&#x60; — Refunds to a customer&#39;s credit or debit card.   - &#x60;Transfer&#x60; — Secure transfer of funds to the seller&#39;s bank account.  
 */

#ifndef OAITransactionType_H
#define OAITransactionType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransactionType : public OAIEnum {
public:
    OAITransactionType();
    OAITransactionType(QString json);
    ~OAITransactionType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAITransactionType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        PAYMENT, 
        REFUND, 
        PAYOUT, 
        FAILEDPAYOUT, 
        TRANSFER, 
        PAYMENTFEE, 
        PAYMENTFEEREFUND, 
        UNKNOWN
    };
    OAITransactionType::eOAITransactionType getValue() const;
    void setValue(const OAITransactionType::eOAITransactionType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAITransactionType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionType)

#endif // OAITransactionType_H
