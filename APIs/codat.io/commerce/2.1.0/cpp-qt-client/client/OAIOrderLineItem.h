/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderLineItem.h
 *
 * 
 */

#ifndef OAIOrderLineItem_H
#define OAIOrderLineItem_H

#include <QJsonObject>

#include "OAIOrderDiscountAllocation.h"
#include "OAIProductRef.h"
#include "OAIProductVariantRef.h"
#include "OAITaxComponentAllocation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProductRef;
class OAIProductVariantRef;
class OAITaxComponentAllocation;

class OAIOrderLineItem : public OAIObject {
public:
    OAIOrderLineItem();
    OAIOrderLineItem(QString json);
    ~OAIOrderLineItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIOrderDiscountAllocation> getDiscountAllocations() const;
    void setDiscountAllocations(const QList<OAIOrderDiscountAllocation> &discount_allocations);
    bool is_discount_allocations_Set() const;
    bool is_discount_allocations_Valid() const;

    OAIProductRef getProductRef() const;
    void setProductRef(const OAIProductRef &product_ref);
    bool is_product_ref_Set() const;
    bool is_product_ref_Valid() const;

    OAIProductVariantRef getProductVariantRef() const;
    void setProductVariantRef(const OAIProductVariantRef &product_variant_ref);
    bool is_product_variant_ref_Set() const;
    bool is_product_variant_ref_Valid() const;

    QString getQuantity() const;
    void setQuantity(const QString &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getTaxPercentage() const;
    void setTaxPercentage(const QString &tax_percentage);
    bool is_tax_percentage_Set() const;
    bool is_tax_percentage_Valid() const;

    QList<OAITaxComponentAllocation> getTaxes() const;
    void setTaxes(const QList<OAITaxComponentAllocation> &taxes);
    bool is_taxes_Set() const;
    bool is_taxes_Valid() const;

    QString getTotalAmount() const;
    void setTotalAmount(const QString &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    QString getTotalTaxAmount() const;
    void setTotalTaxAmount(const QString &total_tax_amount);
    bool is_total_tax_amount_Set() const;
    bool is_total_tax_amount_Valid() const;

    QString getUnitPrice() const;
    void setUnitPrice(const QString &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIOrderDiscountAllocation> m_discount_allocations;
    bool m_discount_allocations_isSet;
    bool m_discount_allocations_isValid;

    OAIProductRef m_product_ref;
    bool m_product_ref_isSet;
    bool m_product_ref_isValid;

    OAIProductVariantRef m_product_variant_ref;
    bool m_product_variant_ref_isSet;
    bool m_product_variant_ref_isValid;

    QString m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_tax_percentage;
    bool m_tax_percentage_isSet;
    bool m_tax_percentage_isValid;

    QList<OAITaxComponentAllocation> m_taxes;
    bool m_taxes_isSet;
    bool m_taxes_isValid;

    QString m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;

    QString m_total_tax_amount;
    bool m_total_tax_amount_isSet;
    bool m_total_tax_amount_isValid;

    QString m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderLineItem)

#endif // OAIOrderLineItem_H
