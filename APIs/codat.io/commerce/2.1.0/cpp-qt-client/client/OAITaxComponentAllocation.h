/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaxComponentAllocation.h
 *
 * 
 */

#ifndef OAITaxComponentAllocation_H
#define OAITaxComponentAllocation_H

#include <QJsonObject>

#include "OAITaxComponentRef.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITaxComponentRef;

class OAITaxComponentAllocation : public OAIObject {
public:
    OAITaxComponentAllocation();
    OAITaxComponentAllocation(QString json);
    ~OAITaxComponentAllocation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getRate() const;
    void setRate(const QString &rate);
    bool is_rate_Set() const;
    bool is_rate_Valid() const;

    OAITaxComponentRef getTaxComponentRef() const;
    void setTaxComponentRef(const OAITaxComponentRef &tax_component_ref);
    bool is_tax_component_ref_Set() const;
    bool is_tax_component_ref_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_rate;
    bool m_rate_isSet;
    bool m_rate_isValid;

    OAITaxComponentRef m_tax_component_ref;
    bool m_tax_component_ref_isSet;
    bool m_tax_component_ref_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaxComponentAllocation)

#endif // OAITaxComponentAllocation_H
