/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProduct.h
 *
 * A Product is an item in the company&#39;s inventory, and includes information about the price and quantity of all products, and variants thereof, available for sale.  Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view&#x3D;tab-by-data-type&amp;dataType&#x3D;commerce-products) for this data type. 
 */

#ifndef OAIProduct_H
#define OAIProduct_H

#include <QJsonObject>

#include "OAIProductVariant.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProduct : public OAIObject {
public:
    OAIProduct();
    OAIProduct(QString json);
    ~OAIProduct() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCategorization() const;
    void setCategorization(const QString &categorization);
    bool is_categorization_Set() const;
    bool is_categorization_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    bool isIsGiftCard() const;
    void setIsGiftCard(const bool &is_gift_card);
    bool is_is_gift_card_Set() const;
    bool is_is_gift_card_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIProductVariant> getVariants() const;
    void setVariants(const QList<OAIProductVariant> &variants);
    bool is_variants_Set() const;
    bool is_variants_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_categorization;
    bool m_categorization_isSet;
    bool m_categorization_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    bool m_is_gift_card;
    bool m_is_gift_card_isSet;
    bool m_is_gift_card_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIProductVariant> m_variants;
    bool m_variants_isSet;
    bool m_variants_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProduct)

#endif // OAIProduct_H
