/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPayment.h
 *
 * Payments contain details of all payments made by customers to a company, including: amounts, currency used, payment method, payment provider, and payment status.  Refunds are recorded as separate, negative payments. Note that a refund can only occur in relation to a payment that has been completed (i.e. has a status of &#x60;Paid&#x60;). When a customer cancels an order _before_ a payment has been completed, the payment shows as &#x60;Cancelled&#x60;.  You can use data from the Payments endpoints to calculate key metrics, such as gross sales and monthly recurring revenue (MRR).  Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view&#x3D;tab-by-data-type&amp;dataType&#x3D;commerce-payments) for this data type.
 */

#ifndef OAIPayment_H
#define OAIPayment_H

#include <QJsonObject>

#include "OAIPaymentMethodRef.h"
#include "OAIPaymentStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPaymentMethodRef;

class OAIPayment : public OAIObject {
public:
    OAIPayment();
    OAIPayment(QString json);
    ~OAIPayment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCreatedDate() const;
    void setCreatedDate(const QString &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getModifiedDate() const;
    void setModifiedDate(const QString &modified_date);
    bool is_modified_date_Set() const;
    bool is_modified_date_Valid() const;

    QString getSourceModifiedDate() const;
    void setSourceModifiedDate(const QString &source_modified_date);
    bool is_source_modified_date_Set() const;
    bool is_source_modified_date_Valid() const;

    QString getAmount() const;
    void setAmount(const QString &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDueDate() const;
    void setDueDate(const QString &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    OAIPaymentMethodRef getPaymentMethodRef() const;
    void setPaymentMethodRef(const OAIPaymentMethodRef &payment_method_ref);
    bool is_payment_method_ref_Set() const;
    bool is_payment_method_ref_Valid() const;

    QString getPaymentProvider() const;
    void setPaymentProvider(const QString &payment_provider);
    bool is_payment_provider_Set() const;
    bool is_payment_provider_Valid() const;

    OAIPaymentStatus getStatus() const;
    void setStatus(const OAIPaymentStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_modified_date;
    bool m_modified_date_isSet;
    bool m_modified_date_isValid;

    QString m_source_modified_date;
    bool m_source_modified_date_isSet;
    bool m_source_modified_date_isValid;

    QString m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    OAIPaymentMethodRef m_payment_method_ref;
    bool m_payment_method_ref_isSet;
    bool m_payment_method_ref_isValid;

    QString m_payment_provider;
    bool m_payment_provider_isSet;
    bool m_payment_provider_isValid;

    OAIPaymentStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPayment)

#endif // OAIPayment_H
