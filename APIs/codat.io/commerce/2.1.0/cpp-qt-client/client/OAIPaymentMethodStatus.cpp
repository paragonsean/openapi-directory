/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentMethodStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentMethodStatus::OAIPaymentMethodStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentMethodStatus::OAIPaymentMethodStatus() {
    this->initializeModel();
}

OAIPaymentMethodStatus::~OAIPaymentMethodStatus() {}

void OAIPaymentMethodStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIPaymentMethodStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIPaymentMethodStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentMethodStatus::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Archived", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentMethodStatus::ARCHIVED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Unknown", Qt::CaseInsensitive) == 0) {
        m_value = eOAIPaymentMethodStatus::UNKNOWN;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIPaymentMethodStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIPaymentMethodStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIPaymentMethodStatus::ACTIVE:
            val = "Active";
            break;
        case eOAIPaymentMethodStatus::ARCHIVED:
            val = "Archived";
            break;
        case eOAIPaymentMethodStatus::UNKNOWN:
            val = "Unknown";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIPaymentMethodStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIPaymentMethodStatus::eOAIPaymentMethodStatus OAIPaymentMethodStatus::getValue() const {
    return m_value;
}

void OAIPaymentMethodStatus::setValue(const OAIPaymentMethodStatus::eOAIPaymentMethodStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIPaymentMethodStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIPaymentMethodStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
