/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransaction.h
 *
 * Details of all financial transactions recorded in the commerce or point of sale system are added to the Transactions data type. For example, payments, service charges, and fees.  You can use data from the Transactions endpoints to calculate key metrics, such as:   - Transaction volumes   - Average transaction volume   - Average transaction value   - Returns   - Payouts  Explore our [data coverage](https://knowledge.codat.io/supported-features/commerce?view&#x3D;tab-by-data-type&amp;dataType&#x3D;commerce-transactions) for this data type.
 */

#ifndef OAITransaction_H
#define OAITransaction_H

#include <QJsonObject>

#include "OAITransactionSourceRef.h"
#include "OAITransactionType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransaction : public OAIObject {
public:
    OAITransaction();
    OAITransaction(QString json);
    ~OAITransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getSubType() const;
    void setSubType(const QString &sub_type);
    bool is_sub_type_Set() const;
    bool is_sub_type_Valid() const;

    QString getTotalAmount() const;
    void setTotalAmount(const QString &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    OAITransactionSourceRef getTransactionSourceRef() const;
    void setTransactionSourceRef(const OAITransactionSourceRef &transaction_source_ref);
    bool is_transaction_source_ref_Set() const;
    bool is_transaction_source_ref_Valid() const;

    OAITransactionType getType() const;
    void setType(const OAITransactionType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getCreatedDate() const;
    void setCreatedDate(const QString &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getSourceCreatedDate() const;
    void setSourceCreatedDate(const QString &source_created_date);
    bool is_source_created_date_Set() const;
    bool is_source_created_date_Valid() const;

    QString getModifiedDate() const;
    void setModifiedDate(const QString &modified_date);
    bool is_modified_date_Set() const;
    bool is_modified_date_Valid() const;

    QString getSourceModifiedDate() const;
    void setSourceModifiedDate(const QString &source_modified_date);
    bool is_source_modified_date_Set() const;
    bool is_source_modified_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_sub_type;
    bool m_sub_type_isSet;
    bool m_sub_type_isValid;

    QString m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;

    OAITransactionSourceRef m_transaction_source_ref;
    bool m_transaction_source_ref_isSet;
    bool m_transaction_source_ref_isValid;

    OAITransactionType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_source_created_date;
    bool m_source_created_date_isSet;
    bool m_source_created_date_isValid;

    QString m_modified_date;
    bool m_modified_date_isSet;
    bool m_modified_date_isValid;

    QString m_source_modified_date;
    bool m_source_modified_date_isSet;
    bool m_source_modified_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransaction)

#endif // OAITransaction_H
