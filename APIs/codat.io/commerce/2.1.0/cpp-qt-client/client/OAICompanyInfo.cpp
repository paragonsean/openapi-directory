/**
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyInfo::OAICompanyInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyInfo::OAICompanyInfo() {
    this->initializeModel();
}

OAICompanyInfo::~OAICompanyInfo() {}

void OAICompanyInfo::initializeModel() {

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_modified_date_isSet = false;
    m_modified_date_isValid = false;

    m_source_modified_date_isSet = false;
    m_source_modified_date_isValid = false;

    m_account_balances_isSet = false;
    m_account_balances_isValid = false;

    m_addresses_isSet = false;
    m_addresses_isValid = false;

    m_base_currency_isSet = false;
    m_base_currency_isValid = false;

    m_commerce_platform_ref_isSet = false;
    m_commerce_platform_ref_isValid = false;

    m_company_legal_name_isSet = false;
    m_company_legal_name_isValid = false;

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_phone_numbers_isSet = false;
    m_phone_numbers_isValid = false;

    m_registration_number_isSet = false;
    m_registration_number_isValid = false;

    m_source_urls_isSet = false;
    m_source_urls_isValid = false;

    m_web_links_isSet = false;
    m_web_links_isValid = false;
}

void OAICompanyInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyInfo::fromJsonObject(QJsonObject json) {

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("createdDate")]);
    m_created_date_isSet = !json[QString("createdDate")].isNull() && m_created_date_isValid;

    m_modified_date_isValid = ::OpenAPI::fromJsonValue(m_modified_date, json[QString("modifiedDate")]);
    m_modified_date_isSet = !json[QString("modifiedDate")].isNull() && m_modified_date_isValid;

    m_source_modified_date_isValid = ::OpenAPI::fromJsonValue(m_source_modified_date, json[QString("sourceModifiedDate")]);
    m_source_modified_date_isSet = !json[QString("sourceModifiedDate")].isNull() && m_source_modified_date_isValid;

    m_account_balances_isValid = ::OpenAPI::fromJsonValue(m_account_balances, json[QString("accountBalances")]);
    m_account_balances_isSet = !json[QString("accountBalances")].isNull() && m_account_balances_isValid;

    m_addresses_isValid = ::OpenAPI::fromJsonValue(m_addresses, json[QString("addresses")]);
    m_addresses_isSet = !json[QString("addresses")].isNull() && m_addresses_isValid;

    m_base_currency_isValid = ::OpenAPI::fromJsonValue(m_base_currency, json[QString("baseCurrency")]);
    m_base_currency_isSet = !json[QString("baseCurrency")].isNull() && m_base_currency_isValid;

    m_commerce_platform_ref_isValid = ::OpenAPI::fromJsonValue(m_commerce_platform_ref, json[QString("commercePlatformRef")]);
    m_commerce_platform_ref_isSet = !json[QString("commercePlatformRef")].isNull() && m_commerce_platform_ref_isValid;

    m_company_legal_name_isValid = ::OpenAPI::fromJsonValue(m_company_legal_name, json[QString("companyLegalName")]);
    m_company_legal_name_isSet = !json[QString("companyLegalName")].isNull() && m_company_legal_name_isValid;

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("companyName")]);
    m_company_name_isSet = !json[QString("companyName")].isNull() && m_company_name_isValid;

    m_phone_numbers_isValid = ::OpenAPI::fromJsonValue(m_phone_numbers, json[QString("phoneNumbers")]);
    m_phone_numbers_isSet = !json[QString("phoneNumbers")].isNull() && m_phone_numbers_isValid;

    m_registration_number_isValid = ::OpenAPI::fromJsonValue(m_registration_number, json[QString("registrationNumber")]);
    m_registration_number_isSet = !json[QString("registrationNumber")].isNull() && m_registration_number_isValid;

    m_source_urls_isValid = ::OpenAPI::fromJsonValue(m_source_urls, json[QString("sourceUrls")]);
    m_source_urls_isSet = !json[QString("sourceUrls")].isNull() && m_source_urls_isValid;

    m_web_links_isValid = ::OpenAPI::fromJsonValue(m_web_links, json[QString("webLinks")]);
    m_web_links_isSet = !json[QString("webLinks")].isNull() && m_web_links_isValid;
}

QString OAICompanyInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_isSet) {
        obj.insert(QString("createdDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_modified_date_isSet) {
        obj.insert(QString("modifiedDate"), ::OpenAPI::toJsonValue(m_modified_date));
    }
    if (m_source_modified_date_isSet) {
        obj.insert(QString("sourceModifiedDate"), ::OpenAPI::toJsonValue(m_source_modified_date));
    }
    if (m_account_balances.size() > 0) {
        obj.insert(QString("accountBalances"), ::OpenAPI::toJsonValue(m_account_balances));
    }
    if (m_addresses.size() > 0) {
        obj.insert(QString("addresses"), ::OpenAPI::toJsonValue(m_addresses));
    }
    if (m_base_currency_isSet) {
        obj.insert(QString("baseCurrency"), ::OpenAPI::toJsonValue(m_base_currency));
    }
    if (m_commerce_platform_ref_isSet) {
        obj.insert(QString("commercePlatformRef"), ::OpenAPI::toJsonValue(m_commerce_platform_ref));
    }
    if (m_company_legal_name_isSet) {
        obj.insert(QString("companyLegalName"), ::OpenAPI::toJsonValue(m_company_legal_name));
    }
    if (m_company_name_isSet) {
        obj.insert(QString("companyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_phone_numbers.size() > 0) {
        obj.insert(QString("phoneNumbers"), ::OpenAPI::toJsonValue(m_phone_numbers));
    }
    if (m_registration_number_isSet) {
        obj.insert(QString("registrationNumber"), ::OpenAPI::toJsonValue(m_registration_number));
    }
    if (m_source_urls.size() > 0) {
        obj.insert(QString("sourceUrls"), ::OpenAPI::toJsonValue(m_source_urls));
    }
    if (m_web_links.size() > 0) {
        obj.insert(QString("webLinks"), ::OpenAPI::toJsonValue(m_web_links));
    }
    return obj;
}

QString OAICompanyInfo::getCreatedDate() const {
    return m_created_date;
}
void OAICompanyInfo::setCreatedDate(const QString &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAICompanyInfo::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAICompanyInfo::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAICompanyInfo::getModifiedDate() const {
    return m_modified_date;
}
void OAICompanyInfo::setModifiedDate(const QString &modified_date) {
    m_modified_date = modified_date;
    m_modified_date_isSet = true;
}

bool OAICompanyInfo::is_modified_date_Set() const{
    return m_modified_date_isSet;
}

bool OAICompanyInfo::is_modified_date_Valid() const{
    return m_modified_date_isValid;
}

QString OAICompanyInfo::getSourceModifiedDate() const {
    return m_source_modified_date;
}
void OAICompanyInfo::setSourceModifiedDate(const QString &source_modified_date) {
    m_source_modified_date = source_modified_date;
    m_source_modified_date_isSet = true;
}

bool OAICompanyInfo::is_source_modified_date_Set() const{
    return m_source_modified_date_isSet;
}

bool OAICompanyInfo::is_source_modified_date_Valid() const{
    return m_source_modified_date_isValid;
}

QList<OAIAccountBalance> OAICompanyInfo::getAccountBalances() const {
    return m_account_balances;
}
void OAICompanyInfo::setAccountBalances(const QList<OAIAccountBalance> &account_balances) {
    m_account_balances = account_balances;
    m_account_balances_isSet = true;
}

bool OAICompanyInfo::is_account_balances_Set() const{
    return m_account_balances_isSet;
}

bool OAICompanyInfo::is_account_balances_Valid() const{
    return m_account_balances_isValid;
}

QList<OAIAddress> OAICompanyInfo::getAddresses() const {
    return m_addresses;
}
void OAICompanyInfo::setAddresses(const QList<OAIAddress> &addresses) {
    m_addresses = addresses;
    m_addresses_isSet = true;
}

bool OAICompanyInfo::is_addresses_Set() const{
    return m_addresses_isSet;
}

bool OAICompanyInfo::is_addresses_Valid() const{
    return m_addresses_isValid;
}

QString OAICompanyInfo::getBaseCurrency() const {
    return m_base_currency;
}
void OAICompanyInfo::setBaseCurrency(const QString &base_currency) {
    m_base_currency = base_currency;
    m_base_currency_isSet = true;
}

bool OAICompanyInfo::is_base_currency_Set() const{
    return m_base_currency_isSet;
}

bool OAICompanyInfo::is_base_currency_Valid() const{
    return m_base_currency_isValid;
}

QString OAICompanyInfo::getCommercePlatformRef() const {
    return m_commerce_platform_ref;
}
void OAICompanyInfo::setCommercePlatformRef(const QString &commerce_platform_ref) {
    m_commerce_platform_ref = commerce_platform_ref;
    m_commerce_platform_ref_isSet = true;
}

bool OAICompanyInfo::is_commerce_platform_ref_Set() const{
    return m_commerce_platform_ref_isSet;
}

bool OAICompanyInfo::is_commerce_platform_ref_Valid() const{
    return m_commerce_platform_ref_isValid;
}

QString OAICompanyInfo::getCompanyLegalName() const {
    return m_company_legal_name;
}
void OAICompanyInfo::setCompanyLegalName(const QString &company_legal_name) {
    m_company_legal_name = company_legal_name;
    m_company_legal_name_isSet = true;
}

bool OAICompanyInfo::is_company_legal_name_Set() const{
    return m_company_legal_name_isSet;
}

bool OAICompanyInfo::is_company_legal_name_Valid() const{
    return m_company_legal_name_isValid;
}

QString OAICompanyInfo::getCompanyName() const {
    return m_company_name;
}
void OAICompanyInfo::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAICompanyInfo::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAICompanyInfo::is_company_name_Valid() const{
    return m_company_name_isValid;
}

QList<OAIPhoneNumber> OAICompanyInfo::getPhoneNumbers() const {
    return m_phone_numbers;
}
void OAICompanyInfo::setPhoneNumbers(const QList<OAIPhoneNumber> &phone_numbers) {
    m_phone_numbers = phone_numbers;
    m_phone_numbers_isSet = true;
}

bool OAICompanyInfo::is_phone_numbers_Set() const{
    return m_phone_numbers_isSet;
}

bool OAICompanyInfo::is_phone_numbers_Valid() const{
    return m_phone_numbers_isValid;
}

QString OAICompanyInfo::getRegistrationNumber() const {
    return m_registration_number;
}
void OAICompanyInfo::setRegistrationNumber(const QString &registration_number) {
    m_registration_number = registration_number;
    m_registration_number_isSet = true;
}

bool OAICompanyInfo::is_registration_number_Set() const{
    return m_registration_number_isSet;
}

bool OAICompanyInfo::is_registration_number_Valid() const{
    return m_registration_number_isValid;
}

QMap<QString, QString> OAICompanyInfo::getSourceUrls() const {
    return m_source_urls;
}
void OAICompanyInfo::setSourceUrls(const QMap<QString, QString> &source_urls) {
    m_source_urls = source_urls;
    m_source_urls_isSet = true;
}

bool OAICompanyInfo::is_source_urls_Set() const{
    return m_source_urls_isSet;
}

bool OAICompanyInfo::is_source_urls_Valid() const{
    return m_source_urls_isValid;
}

QList<OAIWeblink> OAICompanyInfo::getWebLinks() const {
    return m_web_links;
}
void OAICompanyInfo::setWebLinks(const QList<OAIWeblink> &web_links) {
    m_web_links = web_links;
    m_web_links_isSet = true;
}

bool OAICompanyInfo::is_web_links_Set() const{
    return m_web_links_isSet;
}

bool OAICompanyInfo::is_web_links_Valid() const{
    return m_web_links_isValid;
}

bool OAICompanyInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_balances.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commerce_platform_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_legal_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_numbers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_urls.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
