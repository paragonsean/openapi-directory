# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tax_component_ref import TaxComponentRef
from openapi_server import util


class TaxComponentAllocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rate: str=None, tax_component_ref: TaxComponentRef=None):
        """TaxComponentAllocation - a model defined in OpenAPI

        :param rate: The rate of this TaxComponentAllocation.
        :param tax_component_ref: The tax_component_ref of this TaxComponentAllocation.
        """
        self.openapi_types = {
            'rate': str,
            'tax_component_ref': TaxComponentRef
        }

        self.attribute_map = {
            'rate': 'rate',
            'tax_component_ref': 'taxComponentRef'
        }

        self._rate = rate
        self._tax_component_ref = tax_component_ref

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaxComponentAllocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The taxComponentAllocation of this TaxComponentAllocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rate(self):
        """Gets the rate of this TaxComponentAllocation.

        Tax amount on order line sale as available from source commerce platform.

        :return: The rate of this TaxComponentAllocation.
        :rtype: str
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this TaxComponentAllocation.

        Tax amount on order line sale as available from source commerce platform.

        :param rate: The rate of this TaxComponentAllocation.
        :type rate: str
        """

        self._rate = rate

    @property
    def tax_component_ref(self):
        """Gets the tax_component_ref of this TaxComponentAllocation.


        :return: The tax_component_ref of this TaxComponentAllocation.
        :rtype: TaxComponentRef
        """
        return self._tax_component_ref

    @tax_component_ref.setter
    def tax_component_ref(self, tax_component_ref):
        """Sets the tax_component_ref of this TaxComponentAllocation.


        :param tax_component_ref: The tax_component_ref of this TaxComponentAllocation.
        :type tax_component_ref: TaxComponentRef
        """

        self._tax_component_ref = tax_component_ref
