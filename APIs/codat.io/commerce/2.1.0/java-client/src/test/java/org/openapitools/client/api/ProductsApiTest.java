/*
 * Commerce API
 * Codat's Commerce API allows you to access standardised data from over 11 commerce and POS systems.  Standardize how you connect to your customersâ€™ payment, PoS, and eCommerce systems. Retrieve orders, payouts, payments, and product data in the same way for all the leading commerce platforms.  [Read more...](https://docs.codat.io/commerce-api/overview)  [See our OpenAPI spec](https://github.com/codatio/oas) 
 *
 * The version of the OpenAPI document: 2.1.0
 * Contact: support@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ProductCategories;
import org.openapitools.client.model.Products;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProductsApi
 */
@Disabled
public class ProductsApiTest {

    private final ProductsApi api = new ProductsApi();

    /**
     * List product categories
     *
     * Product categories are used to classify a group of products together, either by type (eg \&quot;Furniture\&quot;), or sometimes by tax profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProductCategoriesTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        String query = null;
        String orderBy = null;
        ProductCategories response = api.listProductCategories(page, pageSize, query, orderBy);
        // TODO: test validations
    }

    /**
     * List products
     *
     * The Products data type provides the company&#39;s product inventory, and includes the price and quantity of all products, and product variants, available for sale.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listProductsTest() throws ApiException {
        Integer page = null;
        Integer pageSize = null;
        String query = null;
        String orderBy = null;
        Products response = api.listProducts(page, pageSize, query, orderBy);
        // TODO: test validations
    }

}
