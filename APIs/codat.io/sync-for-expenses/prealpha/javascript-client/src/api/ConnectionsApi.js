/**
 * Codat Expense API
 * The API for Sync for Expenses. Sync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.  [Read more...](https://docs.codat.io/sync-for-expenses/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)
 *
 * The version of the OpenAPI document: prealpha
 * Contact: expenses@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DataConnection from '../model/DataConnection';

/**
* Connections service.
* @module api/ConnectionsApi
* @version prealpha
*/
export default class ConnectionsApi {

    /**
    * Constructs a new ConnectionsApi. 
    * @alias module:api/ConnectionsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createPartnerExpenseConnection operation.
     * @callback module:api/ConnectionsApi~createPartnerExpenseConnectionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DataConnection} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create Partner Expense connection
     * Creates a Partner Expense data connection
     * @param {String} companyId 
     * @param {module:api/ConnectionsApi~createPartnerExpenseConnectionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DataConnection}
     */
    createPartnerExpenseConnection(companyId, callback) {
      let postBody = null;
      // verify the required parameter 'companyId' is set
      if (companyId === undefined || companyId === null) {
        throw new Error("Missing the required parameter 'companyId' when calling createPartnerExpenseConnection");
      }

      let pathParams = {
        'companyId': companyId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['auth_header'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DataConnection;
      return this.apiClient.callApi(
        '/companies/{companyId}/sync/expenses/connections/partnerExpense', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
