/**
 * Codat Expense API
 * The API for Sync for Expenses. Sync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.  [Read more...](https://docs.codat.io/sync-for-expenses/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)
 *
 * The version of the OpenAPI document: prealpha
 * Contact: expenses@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyConfiguration::OAICompanyConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyConfiguration::OAICompanyConfiguration() {
    this->initializeModel();
}

OAICompanyConfiguration::~OAICompanyConfiguration() {}

void OAICompanyConfiguration::initializeModel() {

    m_bank_account_isSet = false;
    m_bank_account_isValid = false;

    m_customer_isSet = false;
    m_customer_isValid = false;

    m_supplier_isSet = false;
    m_supplier_isValid = false;
}

void OAICompanyConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyConfiguration::fromJsonObject(QJsonObject json) {

    m_bank_account_isValid = ::OpenAPI::fromJsonValue(m_bank_account, json[QString("bankAccount")]);
    m_bank_account_isSet = !json[QString("bankAccount")].isNull() && m_bank_account_isValid;

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;

    m_supplier_isValid = ::OpenAPI::fromJsonValue(m_supplier, json[QString("supplier")]);
    m_supplier_isSet = !json[QString("supplier")].isNull() && m_supplier_isValid;
}

QString OAICompanyConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_account.isSet()) {
        obj.insert(QString("bankAccount"), ::OpenAPI::toJsonValue(m_bank_account));
    }
    if (m_customer.isSet()) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    if (m_supplier.isSet()) {
        obj.insert(QString("supplier"), ::OpenAPI::toJsonValue(m_supplier));
    }
    return obj;
}

OAIBankAccount OAICompanyConfiguration::getBankAccount() const {
    return m_bank_account;
}
void OAICompanyConfiguration::setBankAccount(const OAIBankAccount &bank_account) {
    m_bank_account = bank_account;
    m_bank_account_isSet = true;
}

bool OAICompanyConfiguration::is_bank_account_Set() const{
    return m_bank_account_isSet;
}

bool OAICompanyConfiguration::is_bank_account_Valid() const{
    return m_bank_account_isValid;
}

OAICustomer OAICompanyConfiguration::getCustomer() const {
    return m_customer;
}
void OAICompanyConfiguration::setCustomer(const OAICustomer &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAICompanyConfiguration::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAICompanyConfiguration::is_customer_Valid() const{
    return m_customer_isValid;
}

OAISupplier OAICompanyConfiguration::getSupplier() const {
    return m_supplier;
}
void OAICompanyConfiguration::setSupplier(const OAISupplier &supplier) {
    m_supplier = supplier;
    m_supplier_isSet = true;
}

bool OAICompanyConfiguration::is_supplier_Set() const{
    return m_supplier_isSet;
}

bool OAICompanyConfiguration::is_supplier_Valid() const{
    return m_supplier_isValid;
}

bool OAICompanyConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
