/**
 * Codat Expense API
 * The API for Sync for Expenses. Sync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.  [Read more...](https://docs.codat.io/sync-for-expenses/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)
 *
 * The version of the OpenAPI document: prealpha
 * Contact: expenses@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionMetadata.h
 *
 * 
 */

#ifndef OAITransactionMetadata_H
#define OAITransactionMetadata_H

#include <QJsonObject>

#include "OAIIntegrationType.h"
#include "OAITransactionStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITransactionMetadata : public OAIObject {
public:
    OAITransactionMetadata();
    OAITransactionMetadata(QString json);
    ~OAITransactionMetadata() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIIntegrationType getIntegrationType() const;
    void setIntegrationType(const OAIIntegrationType &integration_type);
    bool is_integration_type_Set() const;
    bool is_integration_type_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    OAITransactionStatus getStatus() const;
    void setStatus(const OAITransactionStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIIntegrationType m_integration_type;
    bool m_integration_type_isSet;
    bool m_integration_type_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    OAITransactionStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionMetadata)

#endif // OAITransactionMetadata_H
