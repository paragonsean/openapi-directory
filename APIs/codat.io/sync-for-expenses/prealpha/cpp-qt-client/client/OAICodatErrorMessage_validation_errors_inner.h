/**
 * Codat Expense API
 * The API for Sync for Expenses. Sync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.  [Read more...](https://docs.codat.io/sync-for-expenses/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)
 *
 * The version of the OpenAPI document: prealpha
 * Contact: expenses@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICodatErrorMessage_validation_errors_inner.h
 *
 * 
 */

#ifndef OAICodatErrorMessage_validation_errors_inner_H
#define OAICodatErrorMessage_validation_errors_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICodatErrorMessage_validation_errors_inner : public OAIObject {
public:
    OAICodatErrorMessage_validation_errors_inner();
    OAICodatErrorMessage_validation_errors_inner(QString json);
    ~OAICodatErrorMessage_validation_errors_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getRuleId() const;
    void setRuleId(const QString &rule_id);
    bool is_rule_id_Set() const;
    bool is_rule_id_Valid() const;

    QString getValidatorName() const;
    void setValidatorName(const QString &validator_name);
    bool is_validator_name_Set() const;
    bool is_validator_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_rule_id;
    bool m_rule_id_isSet;
    bool m_rule_id_isValid;

    QString m_validator_name;
    bool m_validator_name_isSet;
    bool m_validator_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICodatErrorMessage_validation_errors_inner)

#endif // OAICodatErrorMessage_validation_errors_inner_H
