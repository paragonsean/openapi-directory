/**
 * Codat Expense API
 * The API for Sync for Expenses. Sync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.  [Read more...](https://docs.codat.io/sync-for-expenses/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)
 *
 * The version of the OpenAPI document: prealpha
 * Contact: expenses@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPostSync.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPostSync::OAIPostSync(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPostSync::OAIPostSync() {
    this->initializeModel();
}

OAIPostSync::~OAIPostSync() {}

void OAIPostSync::initializeModel() {

    m_dataset_ids_isSet = false;
    m_dataset_ids_isValid = false;
}

void OAIPostSync::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPostSync::fromJsonObject(QJsonObject json) {

    m_dataset_ids_isValid = ::OpenAPI::fromJsonValue(m_dataset_ids, json[QString("datasetIds")]);
    m_dataset_ids_isSet = !json[QString("datasetIds")].isNull() && m_dataset_ids_isValid;
}

QString OAIPostSync::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPostSync::asJsonObject() const {
    QJsonObject obj;
    if (m_dataset_ids.size() > 0) {
        obj.insert(QString("datasetIds"), ::OpenAPI::toJsonValue(m_dataset_ids));
    }
    return obj;
}

QList<QString> OAIPostSync::getDatasetIds() const {
    return m_dataset_ids;
}
void OAIPostSync::setDatasetIds(const QList<QString> &dataset_ids) {
    m_dataset_ids = dataset_ids;
    m_dataset_ids_isSet = true;
}

bool OAIPostSync::is_dataset_ids_Set() const{
    return m_dataset_ids_isSet;
}

bool OAIPostSync::is_dataset_ids_Valid() const{
    return m_dataset_ids_isValid;
}

bool OAIPostSync::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dataset_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPostSync::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
