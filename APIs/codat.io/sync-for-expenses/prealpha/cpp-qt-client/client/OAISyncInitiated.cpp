/**
 * Codat Expense API
 * The API for Sync for Expenses. Sync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.  [Read more...](https://docs.codat.io/sync-for-expenses/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)
 *
 * The version of the OpenAPI document: prealpha
 * Contact: expenses@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISyncInitiated.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISyncInitiated::OAISyncInitiated(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISyncInitiated::OAISyncInitiated() {
    this->initializeModel();
}

OAISyncInitiated::~OAISyncInitiated() {}

void OAISyncInitiated::initializeModel() {

    m_sync_id_isSet = false;
    m_sync_id_isValid = false;
}

void OAISyncInitiated::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISyncInitiated::fromJsonObject(QJsonObject json) {

    m_sync_id_isValid = ::OpenAPI::fromJsonValue(m_sync_id, json[QString("syncId")]);
    m_sync_id_isSet = !json[QString("syncId")].isNull() && m_sync_id_isValid;
}

QString OAISyncInitiated::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISyncInitiated::asJsonObject() const {
    QJsonObject obj;
    if (m_sync_id_isSet) {
        obj.insert(QString("syncId"), ::OpenAPI::toJsonValue(m_sync_id));
    }
    return obj;
}

QString OAISyncInitiated::getSyncId() const {
    return m_sync_id;
}
void OAISyncInitiated::setSyncId(const QString &sync_id) {
    m_sync_id = sync_id;
    m_sync_id_isSet = true;
}

bool OAISyncInitiated::is_sync_id_Set() const{
    return m_sync_id_isSet;
}

bool OAISyncInitiated::is_sync_id_Valid() const{
    return m_sync_id_isValid;
}

bool OAISyncInitiated::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sync_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISyncInitiated::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
