/**
 * Codat Expense API
 * The API for Sync for Expenses. Sync for Expenses is an API and a set of supporting tools. It has been built to enable corporate card and expense management platforms to provide high-quality integrations with multiple accounting platforms through a standardized API.  [Read more...](https://docs.codat.io/sync-for-expenses/overview)  [See our OpenAPI spec](https://github.com/codatio/oas)
 *
 * The version of the OpenAPI document: prealpha
 * Contact: expenses@codat.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpenseTransaction.h
 *
 * 
 */

#ifndef OAIExpenseTransaction_H
#define OAIExpenseTransaction_H

#include <QJsonObject>

#include "OAIExpenseTransactionLine.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExpenseTransaction : public OAIObject {
public:
    OAIExpenseTransaction();
    OAIExpenseTransaction(QString json);
    ~OAIExpenseTransaction() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    double getCurrencyRate() const;
    void setCurrencyRate(const double &currency_rate);
    bool is_currency_rate_Set() const;
    bool is_currency_rate_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getIssueDate() const;
    void setIssueDate(const QString &issue_date);
    bool is_issue_date_Set() const;
    bool is_issue_date_Valid() const;

    QList<OAIExpenseTransactionLine> getLines() const;
    void setLines(const QList<OAIExpenseTransactionLine> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    QString getMerchantName() const;
    void setMerchantName(const QString &merchant_name);
    bool is_merchant_name_Set() const;
    bool is_merchant_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    double m_currency_rate;
    bool m_currency_rate_isSet;
    bool m_currency_rate_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_issue_date;
    bool m_issue_date_isSet;
    bool m_issue_date_isValid;

    QList<OAIExpenseTransactionLine> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    QString m_merchant_name;
    bool m_merchant_name_isSet;
    bool m_merchant_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpenseTransaction)

#endif // OAIExpenseTransaction_H
