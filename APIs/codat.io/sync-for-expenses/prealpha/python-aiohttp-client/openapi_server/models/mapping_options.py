# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.account_mapping_info import AccountMappingInfo
from openapi_server.models.tax_rate_mapping_info import TaxRateMappingInfo
from openapi_server.models.tracking_category_mapping_info import TrackingCategoryMappingInfo
from openapi_server import util


class MappingOptions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accounts: List[AccountMappingInfo]=None, expense_provider: str=None, tax_rates: List[TaxRateMappingInfo]=None, tracking_categories: List[TrackingCategoryMappingInfo]=None):
        """MappingOptions - a model defined in OpenAPI

        :param accounts: The accounts of this MappingOptions.
        :param expense_provider: The expense_provider of this MappingOptions.
        :param tax_rates: The tax_rates of this MappingOptions.
        :param tracking_categories: The tracking_categories of this MappingOptions.
        """
        self.openapi_types = {
            'accounts': List[AccountMappingInfo],
            'expense_provider': str,
            'tax_rates': List[TaxRateMappingInfo],
            'tracking_categories': List[TrackingCategoryMappingInfo]
        }

        self.attribute_map = {
            'accounts': 'accounts',
            'expense_provider': 'expenseProvider',
            'tax_rates': 'taxRates',
            'tracking_categories': 'trackingCategories'
        }

        self._accounts = accounts
        self._expense_provider = expense_provider
        self._tax_rates = tax_rates
        self._tracking_categories = tracking_categories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MappingOptions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MappingOptions of this MappingOptions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accounts(self):
        """Gets the accounts of this MappingOptions.

        Array of available accounts for mapping.

        :return: The accounts of this MappingOptions.
        :rtype: List[AccountMappingInfo]
        """
        return self._accounts

    @accounts.setter
    def accounts(self, accounts):
        """Sets the accounts of this MappingOptions.

        Array of available accounts for mapping.

        :param accounts: The accounts of this MappingOptions.
        :type accounts: List[AccountMappingInfo]
        """

        self._accounts = accounts

    @property
    def expense_provider(self):
        """Gets the expense_provider of this MappingOptions.

        Name of the expense integration.

        :return: The expense_provider of this MappingOptions.
        :rtype: str
        """
        return self._expense_provider

    @expense_provider.setter
    def expense_provider(self, expense_provider):
        """Sets the expense_provider of this MappingOptions.

        Name of the expense integration.

        :param expense_provider: The expense_provider of this MappingOptions.
        :type expense_provider: str
        """

        self._expense_provider = expense_provider

    @property
    def tax_rates(self):
        """Gets the tax_rates of this MappingOptions.

        Array of available tax rates for mapping.

        :return: The tax_rates of this MappingOptions.
        :rtype: List[TaxRateMappingInfo]
        """
        return self._tax_rates

    @tax_rates.setter
    def tax_rates(self, tax_rates):
        """Sets the tax_rates of this MappingOptions.

        Array of available tax rates for mapping.

        :param tax_rates: The tax_rates of this MappingOptions.
        :type tax_rates: List[TaxRateMappingInfo]
        """

        self._tax_rates = tax_rates

    @property
    def tracking_categories(self):
        """Gets the tracking_categories of this MappingOptions.

        Array of available tracking categories for mapping.

        :return: The tracking_categories of this MappingOptions.
        :rtype: List[TrackingCategoryMappingInfo]
        """
        return self._tracking_categories

    @tracking_categories.setter
    def tracking_categories(self, tracking_categories):
        """Sets the tracking_categories of this MappingOptions.

        Array of available tracking categories for mapping.

        :param tracking_categories: The tracking_categories of this MappingOptions.
        :type tracking_categories: List[TrackingCategoryMappingInfo]
        """

        self._tracking_categories = tracking_categories
