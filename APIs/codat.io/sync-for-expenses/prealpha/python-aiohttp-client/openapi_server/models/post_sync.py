# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PostSync(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dataset_ids: List[str]=None):
        """PostSync - a model defined in OpenAPI

        :param dataset_ids: The dataset_ids of this PostSync.
        """
        self.openapi_types = {
            'dataset_ids': List[str]
        }

        self.attribute_map = {
            'dataset_ids': 'datasetIds'
        }

        self._dataset_ids = dataset_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PostSync':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PostSync of this PostSync.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dataset_ids(self):
        """Gets the dataset_ids of this PostSync.


        :return: The dataset_ids of this PostSync.
        :rtype: List[str]
        """
        return self._dataset_ids

    @dataset_ids.setter
    def dataset_ids(self, dataset_ids):
        """Sets the dataset_ids of this PostSync.


        :param dataset_ids: The dataset_ids of this PostSync.
        :type dataset_ids: List[str]
        """
        if dataset_ids is not None and len(dataset_ids) < 1:
            raise ValueError("Invalid value for `dataset_ids`, number of items must be greater than or equal to `1`")

        self._dataset_ids = dataset_ids
