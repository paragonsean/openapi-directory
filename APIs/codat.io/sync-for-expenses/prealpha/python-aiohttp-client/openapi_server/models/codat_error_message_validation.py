# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.codat_error_message_validation_errors_inner import CodatErrorMessageValidationErrorsInner
from openapi_server import util


class CodatErrorMessageValidation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[CodatErrorMessageValidationErrorsInner]=None, has_errors: bool=None, has_internals: bool=None, has_warnings: bool=None, internals: List[CodatErrorMessageValidationErrorsInner]=None, warnings: List[CodatErrorMessageValidationErrorsInner]=None):
        """CodatErrorMessageValidation - a model defined in OpenAPI

        :param errors: The errors of this CodatErrorMessageValidation.
        :param has_errors: The has_errors of this CodatErrorMessageValidation.
        :param has_internals: The has_internals of this CodatErrorMessageValidation.
        :param has_warnings: The has_warnings of this CodatErrorMessageValidation.
        :param internals: The internals of this CodatErrorMessageValidation.
        :param warnings: The warnings of this CodatErrorMessageValidation.
        """
        self.openapi_types = {
            'errors': List[CodatErrorMessageValidationErrorsInner],
            'has_errors': bool,
            'has_internals': bool,
            'has_warnings': bool,
            'internals': List[CodatErrorMessageValidationErrorsInner],
            'warnings': List[CodatErrorMessageValidationErrorsInner]
        }

        self.attribute_map = {
            'errors': 'errors',
            'has_errors': 'hasErrors',
            'has_internals': 'hasInternals',
            'has_warnings': 'hasWarnings',
            'internals': 'internals',
            'warnings': 'warnings'
        }

        self._errors = errors
        self._has_errors = has_errors
        self._has_internals = has_internals
        self._has_warnings = has_warnings
        self._internals = internals
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodatErrorMessageValidation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodatErrorMessage_validation of this CodatErrorMessageValidation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this CodatErrorMessageValidation.


        :return: The errors of this CodatErrorMessageValidation.
        :rtype: List[CodatErrorMessageValidationErrorsInner]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this CodatErrorMessageValidation.


        :param errors: The errors of this CodatErrorMessageValidation.
        :type errors: List[CodatErrorMessageValidationErrorsInner]
        """

        self._errors = errors

    @property
    def has_errors(self):
        """Gets the has_errors of this CodatErrorMessageValidation.


        :return: The has_errors of this CodatErrorMessageValidation.
        :rtype: bool
        """
        return self._has_errors

    @has_errors.setter
    def has_errors(self, has_errors):
        """Sets the has_errors of this CodatErrorMessageValidation.


        :param has_errors: The has_errors of this CodatErrorMessageValidation.
        :type has_errors: bool
        """

        self._has_errors = has_errors

    @property
    def has_internals(self):
        """Gets the has_internals of this CodatErrorMessageValidation.


        :return: The has_internals of this CodatErrorMessageValidation.
        :rtype: bool
        """
        return self._has_internals

    @has_internals.setter
    def has_internals(self, has_internals):
        """Sets the has_internals of this CodatErrorMessageValidation.


        :param has_internals: The has_internals of this CodatErrorMessageValidation.
        :type has_internals: bool
        """

        self._has_internals = has_internals

    @property
    def has_warnings(self):
        """Gets the has_warnings of this CodatErrorMessageValidation.


        :return: The has_warnings of this CodatErrorMessageValidation.
        :rtype: bool
        """
        return self._has_warnings

    @has_warnings.setter
    def has_warnings(self, has_warnings):
        """Sets the has_warnings of this CodatErrorMessageValidation.


        :param has_warnings: The has_warnings of this CodatErrorMessageValidation.
        :type has_warnings: bool
        """

        self._has_warnings = has_warnings

    @property
    def internals(self):
        """Gets the internals of this CodatErrorMessageValidation.


        :return: The internals of this CodatErrorMessageValidation.
        :rtype: List[CodatErrorMessageValidationErrorsInner]
        """
        return self._internals

    @internals.setter
    def internals(self, internals):
        """Sets the internals of this CodatErrorMessageValidation.


        :param internals: The internals of this CodatErrorMessageValidation.
        :type internals: List[CodatErrorMessageValidationErrorsInner]
        """

        self._internals = internals

    @property
    def warnings(self):
        """Gets the warnings of this CodatErrorMessageValidation.


        :return: The warnings of this CodatErrorMessageValidation.
        :rtype: List[CodatErrorMessageValidationErrorsInner]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this CodatErrorMessageValidation.


        :param warnings: The warnings of this CodatErrorMessageValidation.
        :type warnings: List[CodatErrorMessageValidationErrorsInner]
        """

        self._warnings = warnings
