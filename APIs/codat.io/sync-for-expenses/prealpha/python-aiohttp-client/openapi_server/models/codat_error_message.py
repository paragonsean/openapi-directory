# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.codat_error_message_validation import CodatErrorMessageValidation
from openapi_server import util


class CodatErrorMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_be_retried: str=None, correlation_id: str=None, detailed_error_code: int=None, error: str=None, inner: str=None, service: str=None, status_code: int=None, validation: CodatErrorMessageValidation=None):
        """CodatErrorMessage - a model defined in OpenAPI

        :param can_be_retried: The can_be_retried of this CodatErrorMessage.
        :param correlation_id: The correlation_id of this CodatErrorMessage.
        :param detailed_error_code: The detailed_error_code of this CodatErrorMessage.
        :param error: The error of this CodatErrorMessage.
        :param inner: The inner of this CodatErrorMessage.
        :param service: The service of this CodatErrorMessage.
        :param status_code: The status_code of this CodatErrorMessage.
        :param validation: The validation of this CodatErrorMessage.
        """
        self.openapi_types = {
            'can_be_retried': str,
            'correlation_id': str,
            'detailed_error_code': int,
            'error': str,
            'inner': str,
            'service': str,
            'status_code': int,
            'validation': CodatErrorMessageValidation
        }

        self.attribute_map = {
            'can_be_retried': 'canBeRetried',
            'correlation_id': 'correlationId',
            'detailed_error_code': 'detailedErrorCode',
            'error': 'error',
            'inner': 'inner',
            'service': 'service',
            'status_code': 'statusCode',
            'validation': 'validation'
        }

        self._can_be_retried = can_be_retried
        self._correlation_id = correlation_id
        self._detailed_error_code = detailed_error_code
        self._error = error
        self._inner = inner
        self._service = service
        self._status_code = status_code
        self._validation = validation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CodatErrorMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CodatErrorMessage of this CodatErrorMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_be_retried(self):
        """Gets the can_be_retried of this CodatErrorMessage.


        :return: The can_be_retried of this CodatErrorMessage.
        :rtype: str
        """
        return self._can_be_retried

    @can_be_retried.setter
    def can_be_retried(self, can_be_retried):
        """Sets the can_be_retried of this CodatErrorMessage.


        :param can_be_retried: The can_be_retried of this CodatErrorMessage.
        :type can_be_retried: str
        """

        self._can_be_retried = can_be_retried

    @property
    def correlation_id(self):
        """Gets the correlation_id of this CodatErrorMessage.


        :return: The correlation_id of this CodatErrorMessage.
        :rtype: str
        """
        return self._correlation_id

    @correlation_id.setter
    def correlation_id(self, correlation_id):
        """Sets the correlation_id of this CodatErrorMessage.


        :param correlation_id: The correlation_id of this CodatErrorMessage.
        :type correlation_id: str
        """

        self._correlation_id = correlation_id

    @property
    def detailed_error_code(self):
        """Gets the detailed_error_code of this CodatErrorMessage.


        :return: The detailed_error_code of this CodatErrorMessage.
        :rtype: int
        """
        return self._detailed_error_code

    @detailed_error_code.setter
    def detailed_error_code(self, detailed_error_code):
        """Sets the detailed_error_code of this CodatErrorMessage.


        :param detailed_error_code: The detailed_error_code of this CodatErrorMessage.
        :type detailed_error_code: int
        """

        self._detailed_error_code = detailed_error_code

    @property
    def error(self):
        """Gets the error of this CodatErrorMessage.


        :return: The error of this CodatErrorMessage.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this CodatErrorMessage.


        :param error: The error of this CodatErrorMessage.
        :type error: str
        """

        self._error = error

    @property
    def inner(self):
        """Gets the inner of this CodatErrorMessage.


        :return: The inner of this CodatErrorMessage.
        :rtype: str
        """
        return self._inner

    @inner.setter
    def inner(self, inner):
        """Sets the inner of this CodatErrorMessage.


        :param inner: The inner of this CodatErrorMessage.
        :type inner: str
        """

        self._inner = inner

    @property
    def service(self):
        """Gets the service of this CodatErrorMessage.


        :return: The service of this CodatErrorMessage.
        :rtype: str
        """
        return self._service

    @service.setter
    def service(self, service):
        """Sets the service of this CodatErrorMessage.


        :param service: The service of this CodatErrorMessage.
        :type service: str
        """

        self._service = service

    @property
    def status_code(self):
        """Gets the status_code of this CodatErrorMessage.


        :return: The status_code of this CodatErrorMessage.
        :rtype: int
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this CodatErrorMessage.


        :param status_code: The status_code of this CodatErrorMessage.
        :type status_code: int
        """

        self._status_code = status_code

    @property
    def validation(self):
        """Gets the validation of this CodatErrorMessage.


        :return: The validation of this CodatErrorMessage.
        :rtype: CodatErrorMessageValidation
        """
        return self._validation

    @validation.setter
    def validation(self, validation):
        """Sets the validation of this CodatErrorMessage.


        :param validation: The validation of this CodatErrorMessage.
        :type validation: CodatErrorMessageValidation
        """

        self._validation = validation
