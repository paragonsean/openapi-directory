# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.integration_type import IntegrationType
from openapi_server.models.transaction_status import TransactionStatus
from openapi_server import util


class TransactionMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, integration_type: IntegrationType=IntegrationType.EXPENSES, message: str=None, status: TransactionStatus=None, transaction_id: str=None):
        """TransactionMetadata - a model defined in OpenAPI

        :param integration_type: The integration_type of this TransactionMetadata.
        :param message: The message of this TransactionMetadata.
        :param status: The status of this TransactionMetadata.
        :param transaction_id: The transaction_id of this TransactionMetadata.
        """
        self.openapi_types = {
            'integration_type': IntegrationType,
            'message': str,
            'status': TransactionStatus,
            'transaction_id': str
        }

        self.attribute_map = {
            'integration_type': 'integrationType',
            'message': 'message',
            'status': 'status',
            'transaction_id': 'transactionId'
        }

        self._integration_type = integration_type
        self._message = message
        self._status = status
        self._transaction_id = transaction_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransactionMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransactionMetadata of this TransactionMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def integration_type(self):
        """Gets the integration_type of this TransactionMetadata.


        :return: The integration_type of this TransactionMetadata.
        :rtype: IntegrationType
        """
        return self._integration_type

    @integration_type.setter
    def integration_type(self, integration_type):
        """Sets the integration_type of this TransactionMetadata.


        :param integration_type: The integration_type of this TransactionMetadata.
        :type integration_type: IntegrationType
        """

        self._integration_type = integration_type

    @property
    def message(self):
        """Gets the message of this TransactionMetadata.

        Metadata such as validation errors or the resulting record created in the accounting software.

        :return: The message of this TransactionMetadata.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TransactionMetadata.

        Metadata such as validation errors or the resulting record created in the accounting software.

        :param message: The message of this TransactionMetadata.
        :type message: str
        """

        self._message = message

    @property
    def status(self):
        """Gets the status of this TransactionMetadata.


        :return: The status of this TransactionMetadata.
        :rtype: TransactionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TransactionMetadata.


        :param status: The status of this TransactionMetadata.
        :type status: TransactionStatus
        """

        self._status = status

    @property
    def transaction_id(self):
        """Gets the transaction_id of this TransactionMetadata.

        Your unique idenfier of the transaction.

        :return: The transaction_id of this TransactionMetadata.
        :rtype: str
        """
        return self._transaction_id

    @transaction_id.setter
    def transaction_id(self, transaction_id):
        """Sets the transaction_id of this TransactionMetadata.

        Your unique idenfier of the transaction.

        :param transaction_id: The transaction_id of this TransactionMetadata.
        :type transaction_id: str
        """

        self._transaction_id = transaction_id
