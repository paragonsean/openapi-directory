# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DirectDepositAdditionalDirectDepositInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_number: str=None, account_type: str=None, amount: float=None, amount_type: str=None, block_special: bool=None, is_skip_pre_note: bool=None, name_on_account: str=None, pre_note_date: str=None, routing_number: str=None):
        """DirectDepositAdditionalDirectDepositInner - a model defined in OpenAPI

        :param account_number: The account_number of this DirectDepositAdditionalDirectDepositInner.
        :param account_type: The account_type of this DirectDepositAdditionalDirectDepositInner.
        :param amount: The amount of this DirectDepositAdditionalDirectDepositInner.
        :param amount_type: The amount_type of this DirectDepositAdditionalDirectDepositInner.
        :param block_special: The block_special of this DirectDepositAdditionalDirectDepositInner.
        :param is_skip_pre_note: The is_skip_pre_note of this DirectDepositAdditionalDirectDepositInner.
        :param name_on_account: The name_on_account of this DirectDepositAdditionalDirectDepositInner.
        :param pre_note_date: The pre_note_date of this DirectDepositAdditionalDirectDepositInner.
        :param routing_number: The routing_number of this DirectDepositAdditionalDirectDepositInner.
        """
        self.openapi_types = {
            'account_number': str,
            'account_type': str,
            'amount': float,
            'amount_type': str,
            'block_special': bool,
            'is_skip_pre_note': bool,
            'name_on_account': str,
            'pre_note_date': str,
            'routing_number': str
        }

        self.attribute_map = {
            'account_number': 'accountNumber',
            'account_type': 'accountType',
            'amount': 'amount',
            'amount_type': 'amountType',
            'block_special': 'blockSpecial',
            'is_skip_pre_note': 'isSkipPreNote',
            'name_on_account': 'nameOnAccount',
            'pre_note_date': 'preNoteDate',
            'routing_number': 'routingNumber'
        }

        self._account_number = account_number
        self._account_type = account_type
        self._amount = amount
        self._amount_type = amount_type
        self._block_special = block_special
        self._is_skip_pre_note = is_skip_pre_note
        self._name_on_account = name_on_account
        self._pre_note_date = pre_note_date
        self._routing_number = routing_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DirectDepositAdditionalDirectDepositInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The directDeposit_additionalDirectDeposit_inner of this DirectDepositAdditionalDirectDepositInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_number(self):
        """Gets the account_number of this DirectDepositAdditionalDirectDepositInner.

        Account number, entered without special characters and spaces. <br  />Max length: 17<br />

        :return: The account_number of this DirectDepositAdditionalDirectDepositInner.
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this DirectDepositAdditionalDirectDepositInner.

        Account number, entered without special characters and spaces. <br  />Max length: 17<br />

        :param account_number: The account_number of this DirectDepositAdditionalDirectDepositInner.
        :type account_number: str
        """

        self._account_number = account_number

    @property
    def account_type(self):
        """Gets the account_type of this DirectDepositAdditionalDirectDepositInner.

        Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1<br />

        :return: The account_type of this DirectDepositAdditionalDirectDepositInner.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this DirectDepositAdditionalDirectDepositInner.

        Account type. Valid values are *C* (Checking), *S* (Saving), *P* (Pay Card). <br   />Max length: 1<br />

        :param account_type: The account_type of this DirectDepositAdditionalDirectDepositInner.
        :type account_type: str
        """

        self._account_type = account_type

    @property
    def amount(self):
        """Gets the amount of this DirectDepositAdditionalDirectDepositInner.

        Amount value to be deposited to the account.<br  />Decimal (12,2)<br />

        :return: The amount of this DirectDepositAdditionalDirectDepositInner.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this DirectDepositAdditionalDirectDepositInner.

        Amount value to be deposited to the account.<br  />Decimal (12,2)<br />

        :param amount: The amount of this DirectDepositAdditionalDirectDepositInner.
        :type amount: float
        """

        self._amount = amount

    @property
    def amount_type(self):
        """Gets the amount_type of this DirectDepositAdditionalDirectDepositInner.

        Amount type to indicate the context of the amount. Common values are *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length: 5<br />

        :return: The amount_type of this DirectDepositAdditionalDirectDepositInner.
        :rtype: str
        """
        return self._amount_type

    @amount_type.setter
    def amount_type(self, amount_type):
        """Sets the amount_type of this DirectDepositAdditionalDirectDepositInner.

        Amount type to indicate the context of the amount. Common values are *F* (FLAT), *F-* (Net Minus), *P* (Percent). <br  /> Max length: 5<br />

        :param amount_type: The amount_type of this DirectDepositAdditionalDirectDepositInner.
        :type amount_type: str
        """

        self._amount_type = amount_type

    @property
    def block_special(self):
        """Gets the block_special of this DirectDepositAdditionalDirectDepositInner.

        Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br />

        :return: The block_special of this DirectDepositAdditionalDirectDepositInner.
        :rtype: bool
        """
        return self._block_special

    @block_special.setter
    def block_special(self, block_special):
        """Sets the block_special of this DirectDepositAdditionalDirectDepositInner.

        Indicates if direct deposit should be blocked when special check types such as Bonus are processed.<br />

        :param block_special: The block_special of this DirectDepositAdditionalDirectDepositInner.
        :type block_special: bool
        """

        self._block_special = block_special

    @property
    def is_skip_pre_note(self):
        """Gets the is_skip_pre_note of this DirectDepositAdditionalDirectDepositInner.

        Indicates if account will not pre-note.<br />

        :return: The is_skip_pre_note of this DirectDepositAdditionalDirectDepositInner.
        :rtype: bool
        """
        return self._is_skip_pre_note

    @is_skip_pre_note.setter
    def is_skip_pre_note(self, is_skip_pre_note):
        """Sets the is_skip_pre_note of this DirectDepositAdditionalDirectDepositInner.

        Indicates if account will not pre-note.<br />

        :param is_skip_pre_note: The is_skip_pre_note of this DirectDepositAdditionalDirectDepositInner.
        :type is_skip_pre_note: bool
        """

        self._is_skip_pre_note = is_skip_pre_note

    @property
    def name_on_account(self):
        """Gets the name_on_account of this DirectDepositAdditionalDirectDepositInner.

        Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br />

        :return: The name_on_account of this DirectDepositAdditionalDirectDepositInner.
        :rtype: str
        """
        return self._name_on_account

    @name_on_account.setter
    def name_on_account(self, name_on_account):
        """Sets the name_on_account of this DirectDepositAdditionalDirectDepositInner.

        Name on the bank account. Defaults to employee's name. <br  />Max length: 30<br />

        :param name_on_account: The name_on_account of this DirectDepositAdditionalDirectDepositInner.
        :type name_on_account: str
        """

        self._name_on_account = name_on_account

    @property
    def pre_note_date(self):
        """Gets the pre_note_date of this DirectDepositAdditionalDirectDepositInner.

        Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />

        :return: The pre_note_date of this DirectDepositAdditionalDirectDepositInner.
        :rtype: str
        """
        return self._pre_note_date

    @pre_note_date.setter
    def pre_note_date(self, pre_note_date):
        """Sets the pre_note_date of this DirectDepositAdditionalDirectDepositInner.

        Date to end the pre-note of the account. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.<br />

        :param pre_note_date: The pre_note_date of this DirectDepositAdditionalDirectDepositInner.
        :type pre_note_date: str
        """

        self._pre_note_date = pre_note_date

    @property
    def routing_number(self):
        """Gets the routing_number of this DirectDepositAdditionalDirectDepositInner.

        ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9<br />

        :return: The routing_number of this DirectDepositAdditionalDirectDepositInner.
        :rtype: str
        """
        return self._routing_number

    @routing_number.setter
    def routing_number(self, routing_number):
        """Sets the routing_number of this DirectDepositAdditionalDirectDepositInner.

        ABA Transit Routing Number, entered without dashes or spaces. <br  />Max length: 9<br />

        :param routing_number: The routing_number of this DirectDepositAdditionalDirectDepositInner.
        :type routing_number: str
        """

        self._routing_number = routing_number
