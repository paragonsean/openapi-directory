# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmployeePrimaryPayRate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annual_salary: float=None, base_rate: float=None, begin_check_date: str=None, change_reason: str=None, default_hours: float=None, effective_date: str=None, is_auto_pay: bool=None, pay_frequency: str=None, pay_grade: str=None, pay_rate_note: str=None, pay_type: str=None, rate_per: str=None, salary: float=None):
        """EmployeePrimaryPayRate - a model defined in OpenAPI

        :param annual_salary: The annual_salary of this EmployeePrimaryPayRate.
        :param base_rate: The base_rate of this EmployeePrimaryPayRate.
        :param begin_check_date: The begin_check_date of this EmployeePrimaryPayRate.
        :param change_reason: The change_reason of this EmployeePrimaryPayRate.
        :param default_hours: The default_hours of this EmployeePrimaryPayRate.
        :param effective_date: The effective_date of this EmployeePrimaryPayRate.
        :param is_auto_pay: The is_auto_pay of this EmployeePrimaryPayRate.
        :param pay_frequency: The pay_frequency of this EmployeePrimaryPayRate.
        :param pay_grade: The pay_grade of this EmployeePrimaryPayRate.
        :param pay_rate_note: The pay_rate_note of this EmployeePrimaryPayRate.
        :param pay_type: The pay_type of this EmployeePrimaryPayRate.
        :param rate_per: The rate_per of this EmployeePrimaryPayRate.
        :param salary: The salary of this EmployeePrimaryPayRate.
        """
        self.openapi_types = {
            'annual_salary': float,
            'base_rate': float,
            'begin_check_date': str,
            'change_reason': str,
            'default_hours': float,
            'effective_date': str,
            'is_auto_pay': bool,
            'pay_frequency': str,
            'pay_grade': str,
            'pay_rate_note': str,
            'pay_type': str,
            'rate_per': str,
            'salary': float
        }

        self.attribute_map = {
            'annual_salary': 'annualSalary',
            'base_rate': 'baseRate',
            'begin_check_date': 'beginCheckDate',
            'change_reason': 'changeReason',
            'default_hours': 'defaultHours',
            'effective_date': 'effectiveDate',
            'is_auto_pay': 'isAutoPay',
            'pay_frequency': 'payFrequency',
            'pay_grade': 'payGrade',
            'pay_rate_note': 'payRateNote',
            'pay_type': 'payType',
            'rate_per': 'ratePer',
            'salary': 'salary'
        }

        self._annual_salary = annual_salary
        self._base_rate = base_rate
        self._begin_check_date = begin_check_date
        self._change_reason = change_reason
        self._default_hours = default_hours
        self._effective_date = effective_date
        self._is_auto_pay = is_auto_pay
        self._pay_frequency = pay_frequency
        self._pay_grade = pay_grade
        self._pay_rate_note = pay_rate_note
        self._pay_type = pay_type
        self._rate_per = rate_per
        self._salary = salary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmployeePrimaryPayRate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The employee_primaryPayRate of this EmployeePrimaryPayRate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annual_salary(self):
        """Gets the annual_salary of this EmployeePrimaryPayRate.

        Employee annual salary.<br />Decimal (12,6)

        :return: The annual_salary of this EmployeePrimaryPayRate.
        :rtype: float
        """
        return self._annual_salary

    @annual_salary.setter
    def annual_salary(self, annual_salary):
        """Sets the annual_salary of this EmployeePrimaryPayRate.

        Employee annual salary.<br />Decimal (12,6)

        :param annual_salary: The annual_salary of this EmployeePrimaryPayRate.
        :type annual_salary: float
        """

        self._annual_salary = annual_salary

    @property
    def base_rate(self):
        """Gets the base_rate of this EmployeePrimaryPayRate.

        Employee base rate, used for Hourly employees. <br  />Decimal (12,6)

        :return: The base_rate of this EmployeePrimaryPayRate.
        :rtype: float
        """
        return self._base_rate

    @base_rate.setter
    def base_rate(self, base_rate):
        """Sets the base_rate of this EmployeePrimaryPayRate.

        Employee base rate, used for Hourly employees. <br  />Decimal (12,6)

        :param base_rate: The base_rate of this EmployeePrimaryPayRate.
        :type base_rate: float
        """

        self._base_rate = base_rate

    @property
    def begin_check_date(self):
        """Gets the begin_check_date of this EmployeePrimaryPayRate.

        The date of the first check on which the new pay rate will appear. This value is only applicable when updating an existing employee. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.

        :return: The begin_check_date of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._begin_check_date

    @begin_check_date.setter
    def begin_check_date(self, begin_check_date):
        """Sets the begin_check_date of this EmployeePrimaryPayRate.

        The date of the first check on which the new pay rate will appear. This value is only applicable when updating an existing employee. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.

        :param begin_check_date: The begin_check_date of this EmployeePrimaryPayRate.
        :type begin_check_date: str
        """

        self._begin_check_date = begin_check_date

    @property
    def change_reason(self):
        """Gets the change_reason of this EmployeePrimaryPayRate.

        Pay rate change reason.<br  /> Max length: 30

        :return: The change_reason of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._change_reason

    @change_reason.setter
    def change_reason(self, change_reason):
        """Sets the change_reason of this EmployeePrimaryPayRate.

        Pay rate change reason.<br  /> Max length: 30

        :param change_reason: The change_reason of this EmployeePrimaryPayRate.
        :type change_reason: str
        """

        self._change_reason = change_reason

    @property
    def default_hours(self):
        """Gets the default_hours of this EmployeePrimaryPayRate.

        Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)

        :return: The default_hours of this EmployeePrimaryPayRate.
        :rtype: float
        """
        return self._default_hours

    @default_hours.setter
    def default_hours(self, default_hours):
        """Sets the default_hours of this EmployeePrimaryPayRate.

        Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)

        :param default_hours: The default_hours of this EmployeePrimaryPayRate.
        :type default_hours: float
        """

        self._default_hours = default_hours

    @property
    def effective_date(self):
        """Gets the effective_date of this EmployeePrimaryPayRate.

        The date the employee's pay rate takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.

        :return: The effective_date of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._effective_date

    @effective_date.setter
    def effective_date(self, effective_date):
        """Sets the effective_date of this EmployeePrimaryPayRate.

        The date the employee's pay rate takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.

        :param effective_date: The effective_date of this EmployeePrimaryPayRate.
        :type effective_date: str
        """

        self._effective_date = effective_date

    @property
    def is_auto_pay(self):
        """Gets the is_auto_pay of this EmployeePrimaryPayRate.

        If set to *True*, employee will be paid automatically using deafultHours.

        :return: The is_auto_pay of this EmployeePrimaryPayRate.
        :rtype: bool
        """
        return self._is_auto_pay

    @is_auto_pay.setter
    def is_auto_pay(self, is_auto_pay):
        """Sets the is_auto_pay of this EmployeePrimaryPayRate.

        If set to *True*, employee will be paid automatically using deafultHours.

        :param is_auto_pay: The is_auto_pay of this EmployeePrimaryPayRate.
        :type is_auto_pay: bool
        """

        self._is_auto_pay = is_auto_pay

    @property
    def pay_frequency(self):
        """Gets the pay_frequency of this EmployeePrimaryPayRate.

        Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5

        :return: The pay_frequency of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._pay_frequency

    @pay_frequency.setter
    def pay_frequency(self, pay_frequency):
        """Sets the pay_frequency of this EmployeePrimaryPayRate.

        Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5

        :param pay_frequency: The pay_frequency of this EmployeePrimaryPayRate.
        :type pay_frequency: str
        """

        self._pay_frequency = pay_frequency

    @property
    def pay_grade(self):
        """Gets the pay_grade of this EmployeePrimaryPayRate.

        Employee pay grade. Must match Company setup. <br  /> Max length: 10

        :return: The pay_grade of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._pay_grade

    @pay_grade.setter
    def pay_grade(self, pay_grade):
        """Sets the pay_grade of this EmployeePrimaryPayRate.

        Employee pay grade. Must match Company setup. <br  /> Max length: 10

        :param pay_grade: The pay_grade of this EmployeePrimaryPayRate.
        :type pay_grade: str
        """

        self._pay_grade = pay_grade

    @property
    def pay_rate_note(self):
        """Gets the pay_rate_note of this EmployeePrimaryPayRate.

        Pay rate notes regarding employee.<br  /> Max length: 250

        :return: The pay_rate_note of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._pay_rate_note

    @pay_rate_note.setter
    def pay_rate_note(self, pay_rate_note):
        """Sets the pay_rate_note of this EmployeePrimaryPayRate.

        Pay rate notes regarding employee.<br  /> Max length: 250

        :param pay_rate_note: The pay_rate_note of this EmployeePrimaryPayRate.
        :type pay_rate_note: str
        """

        self._pay_rate_note = pay_rate_note

    @property
    def pay_type(self):
        """Gets the pay_type of this EmployeePrimaryPayRate.

        Employee pay type (rate code). Valid values are *Hourly* or *Salary*. <br  />Max length: 10

        :return: The pay_type of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._pay_type

    @pay_type.setter
    def pay_type(self, pay_type):
        """Sets the pay_type of this EmployeePrimaryPayRate.

        Employee pay type (rate code). Valid values are *Hourly* or *Salary*. <br  />Max length: 10

        :param pay_type: The pay_type of this EmployeePrimaryPayRate.
        :type pay_type: str
        """

        self._pay_type = pay_type

    @property
    def rate_per(self):
        """Gets the rate_per of this EmployeePrimaryPayRate.

        Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10

        :return: The rate_per of this EmployeePrimaryPayRate.
        :rtype: str
        """
        return self._rate_per

    @rate_per.setter
    def rate_per(self, rate_per):
        """Sets the rate_per of this EmployeePrimaryPayRate.

        Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10

        :param rate_per: The rate_per of this EmployeePrimaryPayRate.
        :type rate_per: str
        """

        self._rate_per = rate_per

    @property
    def salary(self):
        """Gets the salary of this EmployeePrimaryPayRate.

        Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,6)

        :return: The salary of this EmployeePrimaryPayRate.
        :rtype: float
        """
        return self._salary

    @salary.setter
    def salary(self, salary):
        """Sets the salary of this EmployeePrimaryPayRate.

        Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,6)

        :param salary: The salary of this EmployeePrimaryPayRate.
        :type salary: float
        """

        self._salary = salary
