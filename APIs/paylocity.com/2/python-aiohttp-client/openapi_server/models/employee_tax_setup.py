# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmployeeTaxSetup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fitw_exempt_notes: str=None, fitw_exempt_reason: str=None, futa_exempt_notes: str=None, futa_exempt_reason: str=None, is_employee943: bool=None, is_pension: bool=None, is_statutory: bool=None, med_exempt_notes: str=None, med_exempt_reason: str=None, sitw_exempt_notes: str=None, sitw_exempt_reason: str=None, ss_exempt_notes: str=None, ss_exempt_reason: str=None, sui_exempt_notes: str=None, sui_exempt_reason: str=None, sui_state: str=None, tax_distribution_code1099_r: str=None, tax_form: str=None):
        """EmployeeTaxSetup - a model defined in OpenAPI

        :param fitw_exempt_notes: The fitw_exempt_notes of this EmployeeTaxSetup.
        :param fitw_exempt_reason: The fitw_exempt_reason of this EmployeeTaxSetup.
        :param futa_exempt_notes: The futa_exempt_notes of this EmployeeTaxSetup.
        :param futa_exempt_reason: The futa_exempt_reason of this EmployeeTaxSetup.
        :param is_employee943: The is_employee943 of this EmployeeTaxSetup.
        :param is_pension: The is_pension of this EmployeeTaxSetup.
        :param is_statutory: The is_statutory of this EmployeeTaxSetup.
        :param med_exempt_notes: The med_exempt_notes of this EmployeeTaxSetup.
        :param med_exempt_reason: The med_exempt_reason of this EmployeeTaxSetup.
        :param sitw_exempt_notes: The sitw_exempt_notes of this EmployeeTaxSetup.
        :param sitw_exempt_reason: The sitw_exempt_reason of this EmployeeTaxSetup.
        :param ss_exempt_notes: The ss_exempt_notes of this EmployeeTaxSetup.
        :param ss_exempt_reason: The ss_exempt_reason of this EmployeeTaxSetup.
        :param sui_exempt_notes: The sui_exempt_notes of this EmployeeTaxSetup.
        :param sui_exempt_reason: The sui_exempt_reason of this EmployeeTaxSetup.
        :param sui_state: The sui_state of this EmployeeTaxSetup.
        :param tax_distribution_code1099_r: The tax_distribution_code1099_r of this EmployeeTaxSetup.
        :param tax_form: The tax_form of this EmployeeTaxSetup.
        """
        self.openapi_types = {
            'fitw_exempt_notes': str,
            'fitw_exempt_reason': str,
            'futa_exempt_notes': str,
            'futa_exempt_reason': str,
            'is_employee943': bool,
            'is_pension': bool,
            'is_statutory': bool,
            'med_exempt_notes': str,
            'med_exempt_reason': str,
            'sitw_exempt_notes': str,
            'sitw_exempt_reason': str,
            'ss_exempt_notes': str,
            'ss_exempt_reason': str,
            'sui_exempt_notes': str,
            'sui_exempt_reason': str,
            'sui_state': str,
            'tax_distribution_code1099_r': str,
            'tax_form': str
        }

        self.attribute_map = {
            'fitw_exempt_notes': 'fitwExemptNotes',
            'fitw_exempt_reason': 'fitwExemptReason',
            'futa_exempt_notes': 'futaExemptNotes',
            'futa_exempt_reason': 'futaExemptReason',
            'is_employee943': 'isEmployee943',
            'is_pension': 'isPension',
            'is_statutory': 'isStatutory',
            'med_exempt_notes': 'medExemptNotes',
            'med_exempt_reason': 'medExemptReason',
            'sitw_exempt_notes': 'sitwExemptNotes',
            'sitw_exempt_reason': 'sitwExemptReason',
            'ss_exempt_notes': 'ssExemptNotes',
            'ss_exempt_reason': 'ssExemptReason',
            'sui_exempt_notes': 'suiExemptNotes',
            'sui_exempt_reason': 'suiExemptReason',
            'sui_state': 'suiState',
            'tax_distribution_code1099_r': 'taxDistributionCode1099R',
            'tax_form': 'taxForm'
        }

        self._fitw_exempt_notes = fitw_exempt_notes
        self._fitw_exempt_reason = fitw_exempt_reason
        self._futa_exempt_notes = futa_exempt_notes
        self._futa_exempt_reason = futa_exempt_reason
        self._is_employee943 = is_employee943
        self._is_pension = is_pension
        self._is_statutory = is_statutory
        self._med_exempt_notes = med_exempt_notes
        self._med_exempt_reason = med_exempt_reason
        self._sitw_exempt_notes = sitw_exempt_notes
        self._sitw_exempt_reason = sitw_exempt_reason
        self._ss_exempt_notes = ss_exempt_notes
        self._ss_exempt_reason = ss_exempt_reason
        self._sui_exempt_notes = sui_exempt_notes
        self._sui_exempt_reason = sui_exempt_reason
        self._sui_state = sui_state
        self._tax_distribution_code1099_r = tax_distribution_code1099_r
        self._tax_form = tax_form

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmployeeTaxSetup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The employee_taxSetup of this EmployeeTaxSetup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fitw_exempt_notes(self):
        """Gets the fitw_exempt_notes of this EmployeeTaxSetup.

        Notes for FITW exemption.<br  /> Max length: 250

        :return: The fitw_exempt_notes of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._fitw_exempt_notes

    @fitw_exempt_notes.setter
    def fitw_exempt_notes(self, fitw_exempt_notes):
        """Sets the fitw_exempt_notes of this EmployeeTaxSetup.

        Notes for FITW exemption.<br  /> Max length: 250

        :param fitw_exempt_notes: The fitw_exempt_notes of this EmployeeTaxSetup.
        :type fitw_exempt_notes: str
        """

        self._fitw_exempt_notes = fitw_exempt_notes

    @property
    def fitw_exempt_reason(self):
        """Gets the fitw_exempt_reason of this EmployeeTaxSetup.

        Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :return: The fitw_exempt_reason of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._fitw_exempt_reason

    @fitw_exempt_reason.setter
    def fitw_exempt_reason(self, fitw_exempt_reason):
        """Sets the fitw_exempt_reason of this EmployeeTaxSetup.

        Reason code for FITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :param fitw_exempt_reason: The fitw_exempt_reason of this EmployeeTaxSetup.
        :type fitw_exempt_reason: str
        """

        self._fitw_exempt_reason = fitw_exempt_reason

    @property
    def futa_exempt_notes(self):
        """Gets the futa_exempt_notes of this EmployeeTaxSetup.

        Notes for FUTA exemption.<br  /> Max length: 250

        :return: The futa_exempt_notes of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._futa_exempt_notes

    @futa_exempt_notes.setter
    def futa_exempt_notes(self, futa_exempt_notes):
        """Sets the futa_exempt_notes of this EmployeeTaxSetup.

        Notes for FUTA exemption.<br  /> Max length: 250

        :param futa_exempt_notes: The futa_exempt_notes of this EmployeeTaxSetup.
        :type futa_exempt_notes: str
        """

        self._futa_exempt_notes = futa_exempt_notes

    @property
    def futa_exempt_reason(self):
        """Gets the futa_exempt_reason of this EmployeeTaxSetup.

        Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30

        :return: The futa_exempt_reason of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._futa_exempt_reason

    @futa_exempt_reason.setter
    def futa_exempt_reason(self, futa_exempt_reason):
        """Sets the futa_exempt_reason of this EmployeeTaxSetup.

        Reason code for FUTA exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30

        :param futa_exempt_reason: The futa_exempt_reason of this EmployeeTaxSetup.
        :type futa_exempt_reason: str
        """

        self._futa_exempt_reason = futa_exempt_reason

    @property
    def is_employee943(self):
        """Gets the is_employee943 of this EmployeeTaxSetup.

        Indicates if employee in agriculture or farming.

        :return: The is_employee943 of this EmployeeTaxSetup.
        :rtype: bool
        """
        return self._is_employee943

    @is_employee943.setter
    def is_employee943(self, is_employee943):
        """Sets the is_employee943 of this EmployeeTaxSetup.

        Indicates if employee in agriculture or farming.

        :param is_employee943: The is_employee943 of this EmployeeTaxSetup.
        :type is_employee943: bool
        """

        self._is_employee943 = is_employee943

    @property
    def is_pension(self):
        """Gets the is_pension of this EmployeeTaxSetup.

        Indicates if employee is eligible for pension.

        :return: The is_pension of this EmployeeTaxSetup.
        :rtype: bool
        """
        return self._is_pension

    @is_pension.setter
    def is_pension(self, is_pension):
        """Sets the is_pension of this EmployeeTaxSetup.

        Indicates if employee is eligible for pension.

        :param is_pension: The is_pension of this EmployeeTaxSetup.
        :type is_pension: bool
        """

        self._is_pension = is_pension

    @property
    def is_statutory(self):
        """Gets the is_statutory of this EmployeeTaxSetup.

        Indicates if employee is statutory.

        :return: The is_statutory of this EmployeeTaxSetup.
        :rtype: bool
        """
        return self._is_statutory

    @is_statutory.setter
    def is_statutory(self, is_statutory):
        """Sets the is_statutory of this EmployeeTaxSetup.

        Indicates if employee is statutory.

        :param is_statutory: The is_statutory of this EmployeeTaxSetup.
        :type is_statutory: bool
        """

        self._is_statutory = is_statutory

    @property
    def med_exempt_notes(self):
        """Gets the med_exempt_notes of this EmployeeTaxSetup.

        Notes for Medicare exemption.<br  /> Max length: 250

        :return: The med_exempt_notes of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._med_exempt_notes

    @med_exempt_notes.setter
    def med_exempt_notes(self, med_exempt_notes):
        """Sets the med_exempt_notes of this EmployeeTaxSetup.

        Notes for Medicare exemption.<br  /> Max length: 250

        :param med_exempt_notes: The med_exempt_notes of this EmployeeTaxSetup.
        :type med_exempt_notes: str
        """

        self._med_exempt_notes = med_exempt_notes

    @property
    def med_exempt_reason(self):
        """Gets the med_exempt_reason of this EmployeeTaxSetup.

        Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30

        :return: The med_exempt_reason of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._med_exempt_reason

    @med_exempt_reason.setter
    def med_exempt_reason(self, med_exempt_reason):
        """Sets the med_exempt_reason of this EmployeeTaxSetup.

        Reason code for Medicare exemption. Common values are *501* (5019c)(3) Organization), *IC* (Independent Contractor).<br  /> Max length: 30

        :param med_exempt_reason: The med_exempt_reason of this EmployeeTaxSetup.
        :type med_exempt_reason: str
        """

        self._med_exempt_reason = med_exempt_reason

    @property
    def sitw_exempt_notes(self):
        """Gets the sitw_exempt_notes of this EmployeeTaxSetup.

        Notes for SITW exemption.<br  /> Max length: 250

        :return: The sitw_exempt_notes of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._sitw_exempt_notes

    @sitw_exempt_notes.setter
    def sitw_exempt_notes(self, sitw_exempt_notes):
        """Sets the sitw_exempt_notes of this EmployeeTaxSetup.

        Notes for SITW exemption.<br  /> Max length: 250

        :param sitw_exempt_notes: The sitw_exempt_notes of this EmployeeTaxSetup.
        :type sitw_exempt_notes: str
        """

        self._sitw_exempt_notes = sitw_exempt_notes

    @property
    def sitw_exempt_reason(self):
        """Gets the sitw_exempt_reason of this EmployeeTaxSetup.

        Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :return: The sitw_exempt_reason of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._sitw_exempt_reason

    @sitw_exempt_reason.setter
    def sitw_exempt_reason(self, sitw_exempt_reason):
        """Sets the sitw_exempt_reason of this EmployeeTaxSetup.

        Reason code for SITW exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :param sitw_exempt_reason: The sitw_exempt_reason of this EmployeeTaxSetup.
        :type sitw_exempt_reason: str
        """

        self._sitw_exempt_reason = sitw_exempt_reason

    @property
    def ss_exempt_notes(self):
        """Gets the ss_exempt_notes of this EmployeeTaxSetup.

        Notes for Social Security exemption.<br  /> Max length: 250

        :return: The ss_exempt_notes of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._ss_exempt_notes

    @ss_exempt_notes.setter
    def ss_exempt_notes(self, ss_exempt_notes):
        """Sets the ss_exempt_notes of this EmployeeTaxSetup.

        Notes for Social Security exemption.<br  /> Max length: 250

        :param ss_exempt_notes: The ss_exempt_notes of this EmployeeTaxSetup.
        :type ss_exempt_notes: str
        """

        self._ss_exempt_notes = ss_exempt_notes

    @property
    def ss_exempt_reason(self):
        """Gets the ss_exempt_reason of this EmployeeTaxSetup.

        Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :return: The ss_exempt_reason of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._ss_exempt_reason

    @ss_exempt_reason.setter
    def ss_exempt_reason(self, ss_exempt_reason):
        """Sets the ss_exempt_reason of this EmployeeTaxSetup.

        Reason code for Social Security exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :param ss_exempt_reason: The ss_exempt_reason of this EmployeeTaxSetup.
        :type ss_exempt_reason: str
        """

        self._ss_exempt_reason = ss_exempt_reason

    @property
    def sui_exempt_notes(self):
        """Gets the sui_exempt_notes of this EmployeeTaxSetup.

        Notes for SUI exemption.<br  /> Max length: 250

        :return: The sui_exempt_notes of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._sui_exempt_notes

    @sui_exempt_notes.setter
    def sui_exempt_notes(self, sui_exempt_notes):
        """Sets the sui_exempt_notes of this EmployeeTaxSetup.

        Notes for SUI exemption.<br  /> Max length: 250

        :param sui_exempt_notes: The sui_exempt_notes of this EmployeeTaxSetup.
        :type sui_exempt_notes: str
        """

        self._sui_exempt_notes = sui_exempt_notes

    @property
    def sui_exempt_reason(self):
        """Gets the sui_exempt_reason of this EmployeeTaxSetup.

        Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :return: The sui_exempt_reason of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._sui_exempt_reason

    @sui_exempt_reason.setter
    def sui_exempt_reason(self, sui_exempt_reason):
        """Sets the sui_exempt_reason of this EmployeeTaxSetup.

        Reason code for SUI exemption. Common values are *SE* (Statutory employee), *CR* (clergy/Religious). <br  /> Max length: 30

        :param sui_exempt_reason: The sui_exempt_reason of this EmployeeTaxSetup.
        :type sui_exempt_reason: str
        """

        self._sui_exempt_reason = sui_exempt_reason

    @property
    def sui_state(self):
        """Gets the sui_state of this EmployeeTaxSetup.

        Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2

        :return: The sui_state of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._sui_state

    @sui_state.setter
    def sui_state(self, sui_state):
        """Sets the sui_state of this EmployeeTaxSetup.

        Employee SUI (State Unemployment Insurance) state. <br  />Max length: 2

        :param sui_state: The sui_state of this EmployeeTaxSetup.
        :type sui_state: str
        """

        self._sui_state = sui_state

    @property
    def tax_distribution_code1099_r(self):
        """Gets the tax_distribution_code1099_r of this EmployeeTaxSetup.

        Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1

        :return: The tax_distribution_code1099_r of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._tax_distribution_code1099_r

    @tax_distribution_code1099_r.setter
    def tax_distribution_code1099_r(self, tax_distribution_code1099_r):
        """Sets the tax_distribution_code1099_r of this EmployeeTaxSetup.

        Employee 1099R distribution code. Common values are *7* (Normal Distribution), *F* (Charitable Gift Annuity). <br  />Max length: 1

        :param tax_distribution_code1099_r: The tax_distribution_code1099_r of this EmployeeTaxSetup.
        :type tax_distribution_code1099_r: str
        """

        self._tax_distribution_code1099_r = tax_distribution_code1099_r

    @property
    def tax_form(self):
        """Gets the tax_form of this EmployeeTaxSetup.

        Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15

        :return: The tax_form of this EmployeeTaxSetup.
        :rtype: str
        """
        return self._tax_form

    @tax_form.setter
    def tax_form(self, tax_form):
        """Sets the tax_form of this EmployeeTaxSetup.

        Employee tax form for reporting income. Valid values are *W2, 1099M, 1099R*. Default is W2. <br  />Max length: 15

        :param tax_form: The tax_form of this EmployeeTaxSetup.
        :type tax_form: str
        """

        self._tax_form = tax_form
