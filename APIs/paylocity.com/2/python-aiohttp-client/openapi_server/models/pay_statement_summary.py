# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PayStatementSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_pay: bool=None, begin_date: str=None, check_date: str=None, check_number: int=None, direct_deposit_amount: float=None, end_date: str=None, gross_pay: float=None, hours: float=None, net_check: float=None, net_pay: float=None, overtime_dollars: float=None, overtime_hours: float=None, process: int=None, regular_dollars: float=None, regular_hours: float=None, transaction_number: int=None, voucher_number: int=None, workers_comp_code: str=None, year: int=None):
        """PayStatementSummary - a model defined in OpenAPI

        :param auto_pay: The auto_pay of this PayStatementSummary.
        :param begin_date: The begin_date of this PayStatementSummary.
        :param check_date: The check_date of this PayStatementSummary.
        :param check_number: The check_number of this PayStatementSummary.
        :param direct_deposit_amount: The direct_deposit_amount of this PayStatementSummary.
        :param end_date: The end_date of this PayStatementSummary.
        :param gross_pay: The gross_pay of this PayStatementSummary.
        :param hours: The hours of this PayStatementSummary.
        :param net_check: The net_check of this PayStatementSummary.
        :param net_pay: The net_pay of this PayStatementSummary.
        :param overtime_dollars: The overtime_dollars of this PayStatementSummary.
        :param overtime_hours: The overtime_hours of this PayStatementSummary.
        :param process: The process of this PayStatementSummary.
        :param regular_dollars: The regular_dollars of this PayStatementSummary.
        :param regular_hours: The regular_hours of this PayStatementSummary.
        :param transaction_number: The transaction_number of this PayStatementSummary.
        :param voucher_number: The voucher_number of this PayStatementSummary.
        :param workers_comp_code: The workers_comp_code of this PayStatementSummary.
        :param year: The year of this PayStatementSummary.
        """
        self.openapi_types = {
            'auto_pay': bool,
            'begin_date': str,
            'check_date': str,
            'check_number': int,
            'direct_deposit_amount': float,
            'end_date': str,
            'gross_pay': float,
            'hours': float,
            'net_check': float,
            'net_pay': float,
            'overtime_dollars': float,
            'overtime_hours': float,
            'process': int,
            'regular_dollars': float,
            'regular_hours': float,
            'transaction_number': int,
            'voucher_number': int,
            'workers_comp_code': str,
            'year': int
        }

        self.attribute_map = {
            'auto_pay': 'autoPay',
            'begin_date': 'beginDate',
            'check_date': 'checkDate',
            'check_number': 'checkNumber',
            'direct_deposit_amount': 'directDepositAmount',
            'end_date': 'endDate',
            'gross_pay': 'grossPay',
            'hours': 'hours',
            'net_check': 'netCheck',
            'net_pay': 'netPay',
            'overtime_dollars': 'overtimeDollars',
            'overtime_hours': 'overtimeHours',
            'process': 'process',
            'regular_dollars': 'regularDollars',
            'regular_hours': 'regularHours',
            'transaction_number': 'transactionNumber',
            'voucher_number': 'voucherNumber',
            'workers_comp_code': 'workersCompCode',
            'year': 'year'
        }

        self._auto_pay = auto_pay
        self._begin_date = begin_date
        self._check_date = check_date
        self._check_number = check_number
        self._direct_deposit_amount = direct_deposit_amount
        self._end_date = end_date
        self._gross_pay = gross_pay
        self._hours = hours
        self._net_check = net_check
        self._net_pay = net_pay
        self._overtime_dollars = overtime_dollars
        self._overtime_hours = overtime_hours
        self._process = process
        self._regular_dollars = regular_dollars
        self._regular_hours = regular_hours
        self._transaction_number = transaction_number
        self._voucher_number = voucher_number
        self._workers_comp_code = workers_comp_code
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PayStatementSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The payStatementSummary of this PayStatementSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_pay(self):
        """Gets the auto_pay of this PayStatementSummary.

        .<br />

        :return: The auto_pay of this PayStatementSummary.
        :rtype: bool
        """
        return self._auto_pay

    @auto_pay.setter
    def auto_pay(self, auto_pay):
        """Sets the auto_pay of this PayStatementSummary.

        .<br />

        :param auto_pay: The auto_pay of this PayStatementSummary.
        :type auto_pay: bool
        """

        self._auto_pay = auto_pay

    @property
    def begin_date(self):
        """Gets the begin_date of this PayStatementSummary.

        .<br />

        :return: The begin_date of this PayStatementSummary.
        :rtype: str
        """
        return self._begin_date

    @begin_date.setter
    def begin_date(self, begin_date):
        """Sets the begin_date of this PayStatementSummary.

        .<br />

        :param begin_date: The begin_date of this PayStatementSummary.
        :type begin_date: str
        """

        self._begin_date = begin_date

    @property
    def check_date(self):
        """Gets the check_date of this PayStatementSummary.

        .<br />

        :return: The check_date of this PayStatementSummary.
        :rtype: str
        """
        return self._check_date

    @check_date.setter
    def check_date(self, check_date):
        """Sets the check_date of this PayStatementSummary.

        .<br />

        :param check_date: The check_date of this PayStatementSummary.
        :type check_date: str
        """

        self._check_date = check_date

    @property
    def check_number(self):
        """Gets the check_number of this PayStatementSummary.

        .<br />

        :return: The check_number of this PayStatementSummary.
        :rtype: int
        """
        return self._check_number

    @check_number.setter
    def check_number(self, check_number):
        """Sets the check_number of this PayStatementSummary.

        .<br />

        :param check_number: The check_number of this PayStatementSummary.
        :type check_number: int
        """

        self._check_number = check_number

    @property
    def direct_deposit_amount(self):
        """Gets the direct_deposit_amount of this PayStatementSummary.

        .<br />

        :return: The direct_deposit_amount of this PayStatementSummary.
        :rtype: float
        """
        return self._direct_deposit_amount

    @direct_deposit_amount.setter
    def direct_deposit_amount(self, direct_deposit_amount):
        """Sets the direct_deposit_amount of this PayStatementSummary.

        .<br />

        :param direct_deposit_amount: The direct_deposit_amount of this PayStatementSummary.
        :type direct_deposit_amount: float
        """

        self._direct_deposit_amount = direct_deposit_amount

    @property
    def end_date(self):
        """Gets the end_date of this PayStatementSummary.

        .<br />

        :return: The end_date of this PayStatementSummary.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this PayStatementSummary.

        .<br />

        :param end_date: The end_date of this PayStatementSummary.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def gross_pay(self):
        """Gets the gross_pay of this PayStatementSummary.

        .<br />

        :return: The gross_pay of this PayStatementSummary.
        :rtype: float
        """
        return self._gross_pay

    @gross_pay.setter
    def gross_pay(self, gross_pay):
        """Sets the gross_pay of this PayStatementSummary.

        .<br />

        :param gross_pay: The gross_pay of this PayStatementSummary.
        :type gross_pay: float
        """

        self._gross_pay = gross_pay

    @property
    def hours(self):
        """Gets the hours of this PayStatementSummary.

        .<br />

        :return: The hours of this PayStatementSummary.
        :rtype: float
        """
        return self._hours

    @hours.setter
    def hours(self, hours):
        """Sets the hours of this PayStatementSummary.

        .<br />

        :param hours: The hours of this PayStatementSummary.
        :type hours: float
        """

        self._hours = hours

    @property
    def net_check(self):
        """Gets the net_check of this PayStatementSummary.

        .<br />

        :return: The net_check of this PayStatementSummary.
        :rtype: float
        """
        return self._net_check

    @net_check.setter
    def net_check(self, net_check):
        """Sets the net_check of this PayStatementSummary.

        .<br />

        :param net_check: The net_check of this PayStatementSummary.
        :type net_check: float
        """

        self._net_check = net_check

    @property
    def net_pay(self):
        """Gets the net_pay of this PayStatementSummary.

        .<br />

        :return: The net_pay of this PayStatementSummary.
        :rtype: float
        """
        return self._net_pay

    @net_pay.setter
    def net_pay(self, net_pay):
        """Sets the net_pay of this PayStatementSummary.

        .<br />

        :param net_pay: The net_pay of this PayStatementSummary.
        :type net_pay: float
        """

        self._net_pay = net_pay

    @property
    def overtime_dollars(self):
        """Gets the overtime_dollars of this PayStatementSummary.

        .<br />

        :return: The overtime_dollars of this PayStatementSummary.
        :rtype: float
        """
        return self._overtime_dollars

    @overtime_dollars.setter
    def overtime_dollars(self, overtime_dollars):
        """Sets the overtime_dollars of this PayStatementSummary.

        .<br />

        :param overtime_dollars: The overtime_dollars of this PayStatementSummary.
        :type overtime_dollars: float
        """

        self._overtime_dollars = overtime_dollars

    @property
    def overtime_hours(self):
        """Gets the overtime_hours of this PayStatementSummary.

        .<br />

        :return: The overtime_hours of this PayStatementSummary.
        :rtype: float
        """
        return self._overtime_hours

    @overtime_hours.setter
    def overtime_hours(self, overtime_hours):
        """Sets the overtime_hours of this PayStatementSummary.

        .<br />

        :param overtime_hours: The overtime_hours of this PayStatementSummary.
        :type overtime_hours: float
        """

        self._overtime_hours = overtime_hours

    @property
    def process(self):
        """Gets the process of this PayStatementSummary.

        .<br />

        :return: The process of this PayStatementSummary.
        :rtype: int
        """
        return self._process

    @process.setter
    def process(self, process):
        """Sets the process of this PayStatementSummary.

        .<br />

        :param process: The process of this PayStatementSummary.
        :type process: int
        """

        self._process = process

    @property
    def regular_dollars(self):
        """Gets the regular_dollars of this PayStatementSummary.

        .<br />

        :return: The regular_dollars of this PayStatementSummary.
        :rtype: float
        """
        return self._regular_dollars

    @regular_dollars.setter
    def regular_dollars(self, regular_dollars):
        """Sets the regular_dollars of this PayStatementSummary.

        .<br />

        :param regular_dollars: The regular_dollars of this PayStatementSummary.
        :type regular_dollars: float
        """

        self._regular_dollars = regular_dollars

    @property
    def regular_hours(self):
        """Gets the regular_hours of this PayStatementSummary.

        .<br />

        :return: The regular_hours of this PayStatementSummary.
        :rtype: float
        """
        return self._regular_hours

    @regular_hours.setter
    def regular_hours(self, regular_hours):
        """Sets the regular_hours of this PayStatementSummary.

        .<br />

        :param regular_hours: The regular_hours of this PayStatementSummary.
        :type regular_hours: float
        """

        self._regular_hours = regular_hours

    @property
    def transaction_number(self):
        """Gets the transaction_number of this PayStatementSummary.

        <br />

        :return: The transaction_number of this PayStatementSummary.
        :rtype: int
        """
        return self._transaction_number

    @transaction_number.setter
    def transaction_number(self, transaction_number):
        """Sets the transaction_number of this PayStatementSummary.

        <br />

        :param transaction_number: The transaction_number of this PayStatementSummary.
        :type transaction_number: int
        """

        self._transaction_number = transaction_number

    @property
    def voucher_number(self):
        """Gets the voucher_number of this PayStatementSummary.

        .<br />

        :return: The voucher_number of this PayStatementSummary.
        :rtype: int
        """
        return self._voucher_number

    @voucher_number.setter
    def voucher_number(self, voucher_number):
        """Sets the voucher_number of this PayStatementSummary.

        .<br />

        :param voucher_number: The voucher_number of this PayStatementSummary.
        :type voucher_number: int
        """

        self._voucher_number = voucher_number

    @property
    def workers_comp_code(self):
        """Gets the workers_comp_code of this PayStatementSummary.

        .<br />

        :return: The workers_comp_code of this PayStatementSummary.
        :rtype: str
        """
        return self._workers_comp_code

    @workers_comp_code.setter
    def workers_comp_code(self, workers_comp_code):
        """Sets the workers_comp_code of this PayStatementSummary.

        .<br />

        :param workers_comp_code: The workers_comp_code of this PayStatementSummary.
        :type workers_comp_code: str
        """

        self._workers_comp_code = workers_comp_code

    @property
    def year(self):
        """Gets the year of this PayStatementSummary.

        .<br />

        :return: The year of this PayStatementSummary.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this PayStatementSummary.

        .<br />

        :param year: The year of this PayStatementSummary.
        :type year: int
        """

        self._year = year
