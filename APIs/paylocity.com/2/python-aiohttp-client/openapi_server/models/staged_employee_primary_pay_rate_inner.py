# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StagedEmployeePrimaryPayRateInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_rate: float=None, change_reason: str=None, default_hours: float=None, effective_date: str=None, is_auto_pay: bool=None, pay_frequency: str=None, pay_grade: str=None, pay_type: str=None, rate_per: str=None, salary: float=None):
        """StagedEmployeePrimaryPayRateInner - a model defined in OpenAPI

        :param base_rate: The base_rate of this StagedEmployeePrimaryPayRateInner.
        :param change_reason: The change_reason of this StagedEmployeePrimaryPayRateInner.
        :param default_hours: The default_hours of this StagedEmployeePrimaryPayRateInner.
        :param effective_date: The effective_date of this StagedEmployeePrimaryPayRateInner.
        :param is_auto_pay: The is_auto_pay of this StagedEmployeePrimaryPayRateInner.
        :param pay_frequency: The pay_frequency of this StagedEmployeePrimaryPayRateInner.
        :param pay_grade: The pay_grade of this StagedEmployeePrimaryPayRateInner.
        :param pay_type: The pay_type of this StagedEmployeePrimaryPayRateInner.
        :param rate_per: The rate_per of this StagedEmployeePrimaryPayRateInner.
        :param salary: The salary of this StagedEmployeePrimaryPayRateInner.
        """
        self.openapi_types = {
            'base_rate': float,
            'change_reason': str,
            'default_hours': float,
            'effective_date': str,
            'is_auto_pay': bool,
            'pay_frequency': str,
            'pay_grade': str,
            'pay_type': str,
            'rate_per': str,
            'salary': float
        }

        self.attribute_map = {
            'base_rate': 'baseRate',
            'change_reason': 'changeReason',
            'default_hours': 'defaultHours',
            'effective_date': 'effectiveDate',
            'is_auto_pay': 'isAutoPay',
            'pay_frequency': 'payFrequency',
            'pay_grade': 'payGrade',
            'pay_type': 'payType',
            'rate_per': 'ratePer',
            'salary': 'salary'
        }

        self._base_rate = base_rate
        self._change_reason = change_reason
        self._default_hours = default_hours
        self._effective_date = effective_date
        self._is_auto_pay = is_auto_pay
        self._pay_frequency = pay_frequency
        self._pay_grade = pay_grade
        self._pay_type = pay_type
        self._rate_per = rate_per
        self._salary = salary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StagedEmployeePrimaryPayRateInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The stagedEmployee_primaryPayRate_inner of this StagedEmployeePrimaryPayRateInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_rate(self):
        """Gets the base_rate of this StagedEmployeePrimaryPayRateInner.

        Employee base rate, used for Hourly employees. <br  />Decimal (12,2)

        :return: The base_rate of this StagedEmployeePrimaryPayRateInner.
        :rtype: float
        """
        return self._base_rate

    @base_rate.setter
    def base_rate(self, base_rate):
        """Sets the base_rate of this StagedEmployeePrimaryPayRateInner.

        Employee base rate, used for Hourly employees. <br  />Decimal (12,2)

        :param base_rate: The base_rate of this StagedEmployeePrimaryPayRateInner.
        :type base_rate: float
        """

        self._base_rate = base_rate

    @property
    def change_reason(self):
        """Gets the change_reason of this StagedEmployeePrimaryPayRateInner.

        Pay rate change reason.<br  /> Max length: 30

        :return: The change_reason of this StagedEmployeePrimaryPayRateInner.
        :rtype: str
        """
        return self._change_reason

    @change_reason.setter
    def change_reason(self, change_reason):
        """Sets the change_reason of this StagedEmployeePrimaryPayRateInner.

        Pay rate change reason.<br  /> Max length: 30

        :param change_reason: The change_reason of this StagedEmployeePrimaryPayRateInner.
        :type change_reason: str
        """

        self._change_reason = change_reason

    @property
    def default_hours(self):
        """Gets the default_hours of this StagedEmployeePrimaryPayRateInner.

        Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)

        :return: The default_hours of this StagedEmployeePrimaryPayRateInner.
        :rtype: float
        """
        return self._default_hours

    @default_hours.setter
    def default_hours(self, default_hours):
        """Sets the default_hours of this StagedEmployeePrimaryPayRateInner.

        Employee default hours consistently worked. If autoPayType is set to D, employee will be paid hourly base rate for the defaultHours. <br  />Decimal (12,2)

        :param default_hours: The default_hours of this StagedEmployeePrimaryPayRateInner.
        :type default_hours: float
        """

        self._default_hours = default_hours

    @property
    def effective_date(self):
        """Gets the effective_date of this StagedEmployeePrimaryPayRateInner.

        The date the employee's pay rate takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.

        :return: The effective_date of this StagedEmployeePrimaryPayRateInner.
        :rtype: str
        """
        return self._effective_date

    @effective_date.setter
    def effective_date(self, effective_date):
        """Sets the effective_date of this StagedEmployeePrimaryPayRateInner.

        The date the employee's pay rate takes effect. Common formats include *MM-DD-CCYY*, *CCYY-MM-DD*.

        :param effective_date: The effective_date of this StagedEmployeePrimaryPayRateInner.
        :type effective_date: str
        """

        self._effective_date = effective_date

    @property
    def is_auto_pay(self):
        """Gets the is_auto_pay of this StagedEmployeePrimaryPayRateInner.

        If set to *True*, employee will be paid automatically using deafultHours.

        :return: The is_auto_pay of this StagedEmployeePrimaryPayRateInner.
        :rtype: bool
        """
        return self._is_auto_pay

    @is_auto_pay.setter
    def is_auto_pay(self, is_auto_pay):
        """Sets the is_auto_pay of this StagedEmployeePrimaryPayRateInner.

        If set to *True*, employee will be paid automatically using deafultHours.

        :param is_auto_pay: The is_auto_pay of this StagedEmployeePrimaryPayRateInner.
        :type is_auto_pay: bool
        """

        self._is_auto_pay = is_auto_pay

    @property
    def pay_frequency(self):
        """Gets the pay_frequency of this StagedEmployeePrimaryPayRateInner.

        Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5

        :return: The pay_frequency of this StagedEmployeePrimaryPayRateInner.
        :rtype: str
        """
        return self._pay_frequency

    @pay_frequency.setter
    def pay_frequency(self, pay_frequency):
        """Sets the pay_frequency of this StagedEmployeePrimaryPayRateInner.

        Employee current pay frequency. Common values are *A (Annual), B (Bi-Weekly), D (Daily), M (Monthly), S (Semi-Monthly), Q (Quarterly), W (Weekly)*. <br  />Max length: 5

        :param pay_frequency: The pay_frequency of this StagedEmployeePrimaryPayRateInner.
        :type pay_frequency: str
        """

        self._pay_frequency = pay_frequency

    @property
    def pay_grade(self):
        """Gets the pay_grade of this StagedEmployeePrimaryPayRateInner.

        Employee pay grade. Must match Company setup. <br  /> Max length: 10

        :return: The pay_grade of this StagedEmployeePrimaryPayRateInner.
        :rtype: str
        """
        return self._pay_grade

    @pay_grade.setter
    def pay_grade(self, pay_grade):
        """Sets the pay_grade of this StagedEmployeePrimaryPayRateInner.

        Employee pay grade. Must match Company setup. <br  /> Max length: 10

        :param pay_grade: The pay_grade of this StagedEmployeePrimaryPayRateInner.
        :type pay_grade: str
        """

        self._pay_grade = pay_grade

    @property
    def pay_type(self):
        """Gets the pay_type of this StagedEmployeePrimaryPayRateInner.

        Employee pay type (rate code). Valid values are *Hourly* or *Salary*. <br  />Max length: 10

        :return: The pay_type of this StagedEmployeePrimaryPayRateInner.
        :rtype: str
        """
        return self._pay_type

    @pay_type.setter
    def pay_type(self, pay_type):
        """Sets the pay_type of this StagedEmployeePrimaryPayRateInner.

        Employee pay type (rate code). Valid values are *Hourly* or *Salary*. <br  />Max length: 10

        :param pay_type: The pay_type of this StagedEmployeePrimaryPayRateInner.
        :type pay_type: str
        """

        self._pay_type = pay_type

    @property
    def rate_per(self):
        """Gets the rate_per of this StagedEmployeePrimaryPayRateInner.

        Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10

        :return: The rate_per of this StagedEmployeePrimaryPayRateInner.
        :rtype: str
        """
        return self._rate_per

    @rate_per.setter
    def rate_per(self, rate_per):
        """Sets the rate_per of this StagedEmployeePrimaryPayRateInner.

        Employee base rate frequency used with payType Hourly. Common values are *Hour, Week*. Default is Hour. <br  />Max length: 10

        :param rate_per: The rate_per of this StagedEmployeePrimaryPayRateInner.
        :type rate_per: str
        """

        self._rate_per = rate_per

    @property
    def salary(self):
        """Gets the salary of this StagedEmployeePrimaryPayRateInner.

        Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,6)

        :return: The salary of this StagedEmployeePrimaryPayRateInner.
        :rtype: float
        """
        return self._salary

    @salary.setter
    def salary(self, salary):
        """Sets the salary of this StagedEmployeePrimaryPayRateInner.

        Employee gross salary per pay period used with payType Salary.<br  />Decimal (12,6)

        :param salary: The salary of this StagedEmployeePrimaryPayRateInner.
        :type salary: float
        """

        self._salary = salary
