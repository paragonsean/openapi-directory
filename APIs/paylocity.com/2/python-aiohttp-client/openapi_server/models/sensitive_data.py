# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sensitive_data_disability import SensitiveDataDisability
from openapi_server.models.sensitive_data_ethnicity import SensitiveDataEthnicity
from openapi_server.models.sensitive_data_gender import SensitiveDataGender
from openapi_server.models.sensitive_data_veteran import SensitiveDataVeteran
from openapi_server import util


class SensitiveData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disability: SensitiveDataDisability=None, ethnicity: SensitiveDataEthnicity=None, gender: SensitiveDataGender=None, veteran: SensitiveDataVeteran=None):
        """SensitiveData - a model defined in OpenAPI

        :param disability: The disability of this SensitiveData.
        :param ethnicity: The ethnicity of this SensitiveData.
        :param gender: The gender of this SensitiveData.
        :param veteran: The veteran of this SensitiveData.
        """
        self.openapi_types = {
            'disability': SensitiveDataDisability,
            'ethnicity': SensitiveDataEthnicity,
            'gender': SensitiveDataGender,
            'veteran': SensitiveDataVeteran
        }

        self.attribute_map = {
            'disability': 'disability',
            'ethnicity': 'ethnicity',
            'gender': 'gender',
            'veteran': 'veteran'
        }

        self._disability = disability
        self._ethnicity = ethnicity
        self._gender = gender
        self._veteran = veteran

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SensitiveData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sensitiveData of this SensitiveData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disability(self):
        """Gets the disability of this SensitiveData.


        :return: The disability of this SensitiveData.
        :rtype: SensitiveDataDisability
        """
        return self._disability

    @disability.setter
    def disability(self, disability):
        """Sets the disability of this SensitiveData.


        :param disability: The disability of this SensitiveData.
        :type disability: SensitiveDataDisability
        """

        self._disability = disability

    @property
    def ethnicity(self):
        """Gets the ethnicity of this SensitiveData.


        :return: The ethnicity of this SensitiveData.
        :rtype: SensitiveDataEthnicity
        """
        return self._ethnicity

    @ethnicity.setter
    def ethnicity(self, ethnicity):
        """Sets the ethnicity of this SensitiveData.


        :param ethnicity: The ethnicity of this SensitiveData.
        :type ethnicity: SensitiveDataEthnicity
        """

        self._ethnicity = ethnicity

    @property
    def gender(self):
        """Gets the gender of this SensitiveData.


        :return: The gender of this SensitiveData.
        :rtype: SensitiveDataGender
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this SensitiveData.


        :param gender: The gender of this SensitiveData.
        :type gender: SensitiveDataGender
        """

        self._gender = gender

    @property
    def veteran(self):
        """Gets the veteran of this SensitiveData.


        :return: The veteran of this SensitiveData.
        :rtype: SensitiveDataVeteran
        """
        return self._veteran

    @veteran.setter
    def veteran(self, veteran):
        """Sets the veteran of this SensitiveData.


        :param veteran: The veteran of this SensitiveData.
        :type veteran: SensitiveDataVeteran
        """

        self._veteran = veteran
