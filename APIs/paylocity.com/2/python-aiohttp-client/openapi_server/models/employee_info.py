# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EmployeeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, employee_id: str=None, status_code: str=None, status_type_code: str=None):
        """EmployeeInfo - a model defined in OpenAPI

        :param employee_id: The employee_id of this EmployeeInfo.
        :param status_code: The status_code of this EmployeeInfo.
        :param status_type_code: The status_type_code of this EmployeeInfo.
        """
        self.openapi_types = {
            'employee_id': str,
            'status_code': str,
            'status_type_code': str
        }

        self.attribute_map = {
            'employee_id': 'employeeId',
            'status_code': 'statusCode',
            'status_type_code': 'statusTypeCode'
        }

        self._employee_id = employee_id
        self._status_code = status_code
        self._status_type_code = status_type_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EmployeeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The employeeInfo of this EmployeeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def employee_id(self):
        """Gets the employee_id of this EmployeeInfo.

        Employee Id.<br  /> Max length: 10

        :return: The employee_id of this EmployeeInfo.
        :rtype: str
        """
        return self._employee_id

    @employee_id.setter
    def employee_id(self, employee_id):
        """Sets the employee_id of this EmployeeInfo.

        Employee Id.<br  /> Max length: 10

        :param employee_id: The employee_id of this EmployeeInfo.
        :type employee_id: str
        """

        self._employee_id = employee_id

    @property
    def status_code(self):
        """Gets the status_code of this EmployeeInfo.

        Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20

        :return: The status_code of this EmployeeInfo.
        :rtype: str
        """
        return self._status_code

    @status_code.setter
    def status_code(self, status_code):
        """Sets the status_code of this EmployeeInfo.

        Employee current work status. Common values are *A* (Active), *L* (Leave of Absence), *T* (Terminated). <br  />Max length: 20

        :param status_code: The status_code of this EmployeeInfo.
        :type status_code: str
        """

        self._status_code = status_code

    @property
    def status_type_code(self):
        """Gets the status_type_code of this EmployeeInfo.

        Employee current work status type. <br  />Max length: 10

        :return: The status_type_code of this EmployeeInfo.
        :rtype: str
        """
        return self._status_type_code

    @status_type_code.setter
    def status_type_code(self, status_type_code):
        """Sets the status_type_code of this EmployeeInfo.

        Employee current work status type. <br  />Max length: 10

        :param status_type_code: The status_type_code of this EmployeeInfo.
        :type status_type_code: str
        """

        self._status_type_code = status_type_code
