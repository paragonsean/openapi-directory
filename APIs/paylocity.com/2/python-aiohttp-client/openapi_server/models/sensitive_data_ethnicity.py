# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sensitive_data_ethnicity_ethnic_racial_identities_inner import SensitiveDataEthnicityEthnicRacialIdentitiesInner
from openapi_server import util


class SensitiveDataEthnicity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ethnic_racial_identities: List[SensitiveDataEthnicityEthnicRacialIdentitiesInner]=None, ethnicity: str=None):
        """SensitiveDataEthnicity - a model defined in OpenAPI

        :param ethnic_racial_identities: The ethnic_racial_identities of this SensitiveDataEthnicity.
        :param ethnicity: The ethnicity of this SensitiveDataEthnicity.
        """
        self.openapi_types = {
            'ethnic_racial_identities': List[SensitiveDataEthnicityEthnicRacialIdentitiesInner],
            'ethnicity': str
        }

        self.attribute_map = {
            'ethnic_racial_identities': 'ethnicRacialIdentities',
            'ethnicity': 'ethnicity'
        }

        self._ethnic_racial_identities = ethnic_racial_identities
        self._ethnicity = ethnicity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SensitiveDataEthnicity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sensitiveData_ethnicity of this SensitiveDataEthnicity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ethnic_racial_identities(self):
        """Gets the ethnic_racial_identities of this SensitiveDataEthnicity.

        Add or update Ethnic Racial Identity

        :return: The ethnic_racial_identities of this SensitiveDataEthnicity.
        :rtype: List[SensitiveDataEthnicityEthnicRacialIdentitiesInner]
        """
        return self._ethnic_racial_identities

    @ethnic_racial_identities.setter
    def ethnic_racial_identities(self, ethnic_racial_identities):
        """Sets the ethnic_racial_identities of this SensitiveDataEthnicity.

        Add or update Ethnic Racial Identity

        :param ethnic_racial_identities: The ethnic_racial_identities of this SensitiveDataEthnicity.
        :type ethnic_racial_identities: List[SensitiveDataEthnicityEthnicRacialIdentitiesInner]
        """

        self._ethnic_racial_identities = ethnic_racial_identities

    @property
    def ethnicity(self):
        """Gets the ethnicity of this SensitiveDataEthnicity.

        Employee's legal ethnicity or race.<br  />A = Asian<br  />B = Black<br  />H = Hispanic<br  />I = American Indian<br  />N = Native Hawaiian or Pacific Islander<br  />T = Two or More Races<br  />W = White<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = ethnicity

        :return: The ethnicity of this SensitiveDataEthnicity.
        :rtype: str
        """
        return self._ethnicity

    @ethnicity.setter
    def ethnicity(self, ethnicity):
        """Sets the ethnicity of this SensitiveDataEthnicity.

        Employee's legal ethnicity or race.<br  />A = Asian<br  />B = Black<br  />H = Hispanic<br  />I = American Indian<br  />N = Native Hawaiian or Pacific Islander<br  />T = Two or More Races<br  />W = White<br  /><br  />Valid values can be obtained from Company Codes endpoint, codeResource = ethnicity

        :param ethnicity: The ethnicity of this SensitiveDataEthnicity.
        :type ethnicity: str
        """

        self._ethnicity = ethnicity
