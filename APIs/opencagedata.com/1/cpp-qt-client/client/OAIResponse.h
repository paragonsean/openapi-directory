/**
 * OpenCage Geocoder
 * Worldwide forward and reverse geocoding
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResponse.h
 *
 * 
 */

#ifndef OAIResponse_H
#define OAIResponse_H

#include <QJsonObject>

#include "OAIResponse_licenses_inner.h"
#include "OAIResponse_rate.h"
#include "OAIResponse_results_inner.h"
#include "OAIResponse_status.h"
#include "OAIResponse_stay_informed.h"
#include "OAIResponse_timestamp.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResponse_licenses_inner;
class OAIResponse_rate;
class OAIResponse_results_inner;
class OAIResponse_status;
class OAIResponse_stay_informed;
class OAIResponse_timestamp;

class OAIResponse : public OAIObject {
public:
    OAIResponse();
    OAIResponse(QString json);
    ~OAIResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDocumentation() const;
    void setDocumentation(const QString &documentation);
    bool is_documentation_Set() const;
    bool is_documentation_Valid() const;

    QList<OAIResponse_licenses_inner> getLicenses() const;
    void setLicenses(const QList<OAIResponse_licenses_inner> &licenses);
    bool is_licenses_Set() const;
    bool is_licenses_Valid() const;

    OAIResponse_rate getRate() const;
    void setRate(const OAIResponse_rate &rate);
    bool is_rate_Set() const;
    bool is_rate_Valid() const;

    QList<OAIResponse_results_inner> getResults() const;
    void setResults(const QList<OAIResponse_results_inner> &results);
    bool is_results_Set() const;
    bool is_results_Valid() const;

    OAIResponse_status getStatus() const;
    void setStatus(const OAIResponse_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIResponse_stay_informed getStayInformed() const;
    void setStayInformed(const OAIResponse_stay_informed &stay_informed);
    bool is_stay_informed_Set() const;
    bool is_stay_informed_Valid() const;

    QString getThanks() const;
    void setThanks(const QString &thanks);
    bool is_thanks_Set() const;
    bool is_thanks_Valid() const;

    OAIResponse_timestamp getTimestamp() const;
    void setTimestamp(const OAIResponse_timestamp &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    qint32 getTotalResults() const;
    void setTotalResults(const qint32 &total_results);
    bool is_total_results_Set() const;
    bool is_total_results_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_documentation;
    bool m_documentation_isSet;
    bool m_documentation_isValid;

    QList<OAIResponse_licenses_inner> m_licenses;
    bool m_licenses_isSet;
    bool m_licenses_isValid;

    OAIResponse_rate m_rate;
    bool m_rate_isSet;
    bool m_rate_isValid;

    QList<OAIResponse_results_inner> m_results;
    bool m_results_isSet;
    bool m_results_isValid;

    OAIResponse_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIResponse_stay_informed m_stay_informed;
    bool m_stay_informed_isSet;
    bool m_stay_informed_isValid;

    QString m_thanks;
    bool m_thanks_isSet;
    bool m_thanks_isValid;

    OAIResponse_timestamp m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    qint32 m_total_results;
    bool m_total_results_isSet;
    bool m_total_results_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResponse)

#endif // OAIResponse_H
