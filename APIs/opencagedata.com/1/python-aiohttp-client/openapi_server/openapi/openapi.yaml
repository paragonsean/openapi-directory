openapi: 3.0.1
info:
  contact:
    name: OpenCage GmbH
    url: https://opencagedata.com/contact
  description: Worldwide forward and reverse geocoding
  termsOfService: https://opencagedata.com/terms
  title: OpenCage Geocoder
  version: "1"
  x-apisguru-categories:
  - location
  x-logo:
    url: https://opencagedata.com/opencagelogo-green.png
  x-origin:
  - format: swagger
    url: https://opencagedata.com/swagger.yaml
    version: "2.0"
  - format: swagger
    url: https://geocoder.opencagedata.com/swagger.yaml
    version: "2.0"
  x-providerName: opencagedata.com
externalDocs:
  description: OpenCage Geocoder Website
  url: https://opencagedata.com/api
servers:
- url: https://api.opencagedata.com/geocode
paths:
  /v{version}/{format}:
    get:
      description: geocode a query
      operationId: vversion_format_get
      parameters:
      - description: API version.
        in: path
        name: version
        required: true
        schema:
          type: integer
      - description: "format of the response. One of 'json', 'xml' or 'map'."
        in: path
        name: format
        required: true
        schema:
          type: string
      - description: "string or lat,lng to be geocoded."
        in: query
        name: q
        required: true
        schema:
          type: string
      - description: an application key.
        in: query
        name: key
        required: true
        schema:
          type: string
      - description: when true we attempt to abbreviate the formatted field of results.
        in: query
        name: abbrv
        schema:
          type: boolean
      - description: when true we include only address details in the formatted field
          of results.
        in: query
        name: address_only
        schema:
          type: boolean
      - description: if true the request is included in the response.
        in: query
        name: add_request
        schema:
          type: boolean
      - description: "four coordinate points forming the south-west and north-east\
          \ corners of a bounding box (min long, min lat, max long, max lat)."
        in: query
        name: bounds
        schema:
          type: string
      - description: two letter code ISO 3166-1 Alpha 2 code to limit results to that
          country.
        in: query
        name: countrycode
        schema:
          type: string
      - description: wraps the returned JSON with a function name.
        in: query
        name: jsonp
        schema:
          type: string
      - description: "an IETF format language code (ex: 'es' or 'pt-BR')."
        in: query
        name: language
        schema:
          type: string
      - description: maximum number of results to return. Default is 10. Maximum is
          100.
        in: query
        name: limit
        schema:
          type: integer
      - description: integer from 1-10. Only results with at least this confidence
          are returned.
        in: query
        name: min_confidence
        schema:
          type: integer
      - description: when true annotations are not added to results.
        in: query
        name: no_annotations
        schema:
          type: boolean
      - description: when true results are not deduplicated.
        in: query
        name: no_dedupe
        schema:
          type: boolean
      - description: when true query content is not logged.
        in: query
        name: no_record
        schema:
          type: boolean
      - description: when true results are pretty printed. Useful for debugging.
        in: query
        name: pretty
        schema:
          type: boolean
      - description: "lat,lng to bias results."
        in: query
        name: proximity
        schema:
          type: string
      - description: "match nearest road, include roadinfo annotation"
        in: query
        name: roadinfo
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Successful response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Invalid request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Unable to authenticate
        "402":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Valid request but quota exceeded
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Invalid API endpoint
        "405":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Method not allowed
        "408":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Timeout; you can try again
        "410":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Request too long
        "426":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Upgrade required
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Too many requests
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
            application/xml:
              schema:
                $ref: '#/components/schemas/Response'
            text/html:
              schema:
                $ref: '#/components/schemas/Response'
          description: Internal server error
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    LatLng:
      example:
        lng: 5.637377
        lat: 5.962134
      properties:
        lat:
          format: float
          title: lat
          type: number
        lng:
          format: float
          title: lng
          type: number
      title: LatLng
      type: object
    Response:
      example:
        thanks: thanks
        licenses:
        - name: name
          url: url
        - name: name
          url: url
        rate:
          limit: 0
          reset: 1
          remaining: 6
        documentation: documentation
        stay_informed:
          twitter: twitter
          blog: blog
        results:
        - components: "{}"
          formatted: formatted
          confidence: 2
          bounds:
            southwest:
              lng: 5.637377
              lat: 5.962134
            northeast:
              lng: 5.637377
              lat: 5.962134
          annotations: "{}"
          geometry:
            lng: 5.637377
            lat: 5.962134
        - components: "{}"
          formatted: formatted
          confidence: 2
          bounds:
            southwest:
              lng: 5.637377
              lat: 5.962134
            northeast:
              lng: 5.637377
              lat: 5.962134
          annotations: "{}"
          geometry:
            lng: 5.637377
            lat: 5.962134
        status:
          code: 7
          message: message
        timestamp:
          created_unix: 9
          created_http: created_http
        total_results: 3
      properties:
        documentation:
          title: documentation
          type: string
        licenses:
          items:
            $ref: '#/components/schemas/Response_licenses_inner'
          title: licenses
          type: array
        rate:
          $ref: '#/components/schemas/Response_rate'
        results:
          items:
            $ref: '#/components/schemas/Response_results_inner'
          title: results
          type: array
        status:
          $ref: '#/components/schemas/Response_status'
        stay_informed:
          $ref: '#/components/schemas/Response_stay_informed'
        thanks:
          title: thanks
          type: string
        timestamp:
          $ref: '#/components/schemas/Response_timestamp'
        total_results:
          title: total_results
          type: integer
      title: Response
      type: object
    Response_licenses_inner:
      example:
        name: name
        url: url
      properties:
        name:
          title: name
          type: string
        url:
          title: url
          type: string
      title: Response_licenses_inner
      type: object
    Response_rate:
      example:
        limit: 0
        reset: 1
        remaining: 6
      properties:
        limit:
          title: limit
          type: integer
        remaining:
          title: remaining
          type: integer
        reset:
          title: reset
          type: integer
      title: Response_rate
      type: object
    Response_results_inner_bounds:
      example:
        southwest:
          lng: 5.637377
          lat: 5.962134
        northeast:
          lng: 5.637377
          lat: 5.962134
      properties:
        northeast:
          $ref: '#/components/schemas/LatLng'
        southwest:
          $ref: '#/components/schemas/LatLng'
      title: Response_results_inner_bounds
      type: object
    Response_results_inner:
      example:
        components: "{}"
        formatted: formatted
        confidence: 2
        bounds:
          southwest:
            lng: 5.637377
            lat: 5.962134
          northeast:
            lng: 5.637377
            lat: 5.962134
        annotations: "{}"
        geometry:
          lng: 5.637377
          lat: 5.962134
      properties:
        annotations:
          properties: {}
          title: annotations
          type: object
        bounds:
          $ref: '#/components/schemas/Response_results_inner_bounds'
        components:
          properties: {}
          title: components
          type: object
        confidence:
          title: confidence
          type: integer
        formatted:
          title: formatted
          type: string
        geometry:
          $ref: '#/components/schemas/LatLng'
      title: Response_results_inner
      type: object
    Response_status:
      example:
        code: 7
        message: message
      properties:
        code:
          title: code
          type: integer
        message:
          title: message
          type: string
      title: Response_status
      type: object
    Response_stay_informed:
      example:
        twitter: twitter
        blog: blog
      properties:
        blog:
          title: blog
          type: string
        twitter:
          title: twitter
          type: string
      title: Response_stay_informed
      type: object
    Response_timestamp:
      example:
        created_unix: 9
        created_http: created_http
      properties:
        created_http:
          title: created_http
          type: string
        created_unix:
          title: created_unix
          type: integer
      title: Response_timestamp
      type: object
x-original-swagger-version: "2.0"
