# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.lat_lng import LatLng
from openapi_server.models.response_results_inner_bounds import ResponseResultsInnerBounds
from openapi_server import util


class ResponseResultsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotations: object=None, bounds: ResponseResultsInnerBounds=None, components: object=None, confidence: int=None, formatted: str=None, geometry: LatLng=None):
        """ResponseResultsInner - a model defined in OpenAPI

        :param annotations: The annotations of this ResponseResultsInner.
        :param bounds: The bounds of this ResponseResultsInner.
        :param components: The components of this ResponseResultsInner.
        :param confidence: The confidence of this ResponseResultsInner.
        :param formatted: The formatted of this ResponseResultsInner.
        :param geometry: The geometry of this ResponseResultsInner.
        """
        self.openapi_types = {
            'annotations': object,
            'bounds': ResponseResultsInnerBounds,
            'components': object,
            'confidence': int,
            'formatted': str,
            'geometry': LatLng
        }

        self.attribute_map = {
            'annotations': 'annotations',
            'bounds': 'bounds',
            'components': 'components',
            'confidence': 'confidence',
            'formatted': 'formatted',
            'geometry': 'geometry'
        }

        self._annotations = annotations
        self._bounds = bounds
        self._components = components
        self._confidence = confidence
        self._formatted = formatted
        self._geometry = geometry

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseResultsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Response_results_inner of this ResponseResultsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotations(self):
        """Gets the annotations of this ResponseResultsInner.


        :return: The annotations of this ResponseResultsInner.
        :rtype: object
        """
        return self._annotations

    @annotations.setter
    def annotations(self, annotations):
        """Sets the annotations of this ResponseResultsInner.


        :param annotations: The annotations of this ResponseResultsInner.
        :type annotations: object
        """

        self._annotations = annotations

    @property
    def bounds(self):
        """Gets the bounds of this ResponseResultsInner.


        :return: The bounds of this ResponseResultsInner.
        :rtype: ResponseResultsInnerBounds
        """
        return self._bounds

    @bounds.setter
    def bounds(self, bounds):
        """Sets the bounds of this ResponseResultsInner.


        :param bounds: The bounds of this ResponseResultsInner.
        :type bounds: ResponseResultsInnerBounds
        """

        self._bounds = bounds

    @property
    def components(self):
        """Gets the components of this ResponseResultsInner.


        :return: The components of this ResponseResultsInner.
        :rtype: object
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this ResponseResultsInner.


        :param components: The components of this ResponseResultsInner.
        :type components: object
        """

        self._components = components

    @property
    def confidence(self):
        """Gets the confidence of this ResponseResultsInner.


        :return: The confidence of this ResponseResultsInner.
        :rtype: int
        """
        return self._confidence

    @confidence.setter
    def confidence(self, confidence):
        """Sets the confidence of this ResponseResultsInner.


        :param confidence: The confidence of this ResponseResultsInner.
        :type confidence: int
        """

        self._confidence = confidence

    @property
    def formatted(self):
        """Gets the formatted of this ResponseResultsInner.


        :return: The formatted of this ResponseResultsInner.
        :rtype: str
        """
        return self._formatted

    @formatted.setter
    def formatted(self, formatted):
        """Sets the formatted of this ResponseResultsInner.


        :param formatted: The formatted of this ResponseResultsInner.
        :type formatted: str
        """

        self._formatted = formatted

    @property
    def geometry(self):
        """Gets the geometry of this ResponseResultsInner.


        :return: The geometry of this ResponseResultsInner.
        :rtype: LatLng
        """
        return self._geometry

    @geometry.setter
    def geometry(self, geometry):
        """Sets the geometry of this ResponseResultsInner.


        :param geometry: The geometry of this ResponseResultsInner.
        :type geometry: LatLng
        """

        self._geometry = geometry
