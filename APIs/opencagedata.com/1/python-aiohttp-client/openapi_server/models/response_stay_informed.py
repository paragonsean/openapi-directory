# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseStayInformed(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, blog: str=None, twitter: str=None):
        """ResponseStayInformed - a model defined in OpenAPI

        :param blog: The blog of this ResponseStayInformed.
        :param twitter: The twitter of this ResponseStayInformed.
        """
        self.openapi_types = {
            'blog': str,
            'twitter': str
        }

        self.attribute_map = {
            'blog': 'blog',
            'twitter': 'twitter'
        }

        self._blog = blog
        self._twitter = twitter

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseStayInformed':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Response_stay_informed of this ResponseStayInformed.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def blog(self):
        """Gets the blog of this ResponseStayInformed.


        :return: The blog of this ResponseStayInformed.
        :rtype: str
        """
        return self._blog

    @blog.setter
    def blog(self, blog):
        """Sets the blog of this ResponseStayInformed.


        :param blog: The blog of this ResponseStayInformed.
        :type blog: str
        """

        self._blog = blog

    @property
    def twitter(self):
        """Gets the twitter of this ResponseStayInformed.


        :return: The twitter of this ResponseStayInformed.
        :rtype: str
        """
        return self._twitter

    @twitter.setter
    def twitter(self, twitter):
        """Sets the twitter of this ResponseStayInformed.


        :param twitter: The twitter of this ResponseStayInformed.
        :type twitter: str
        """

        self._twitter = twitter
