/**
 * Urlbox API
 * A plugin that allows the user to capture screenshots of a web page from a URL or HTML using ChatGPT.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.UrlboxApi);
  }
}(this, function(expect, UrlboxApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new UrlboxApi.RenderRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RenderRequest', function() {
    it('should create an instance of RenderRequest', function() {
      // uncomment below and update the code to test RenderRequest
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be.a(UrlboxApi.RenderRequest);
    });

    it('should have the property blockAds (base name: "block_ads")', function() {
      // uncomment below and update the code to test the property blockAds
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property clickAccept (base name: "click_accept")', function() {
      // uncomment below and update the code to test the property clickAccept
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property delay (base name: "delay")', function() {
      // uncomment below and update the code to test the property delay
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property format (base name: "format")', function() {
      // uncomment below and update the code to test the property format
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property fullPage (base name: "full_page")', function() {
      // uncomment below and update the code to test the property fullPage
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property gpu (base name: "gpu")', function() {
      // uncomment below and update the code to test the property gpu
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property hideCookieBanners (base name: "hide_cookie_banners")', function() {
      // uncomment below and update the code to test the property hideCookieBanners
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property html (base name: "html")', function() {
      // uncomment below and update the code to test the property html
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property metadata (base name: "metadata")', function() {
      // uncomment below and update the code to test the property metadata
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property retina (base name: "retina")', function() {
      // uncomment below and update the code to test the property retina
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property selector (base name: "selector")', function() {
      // uncomment below and update the code to test the property selector
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property thumbHeight (base name: "thumb_height")', function() {
      // uncomment below and update the code to test the property thumbHeight
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property thumbWidth (base name: "thumb_width")', function() {
      // uncomment below and update the code to test the property thumbWidth
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property waitFor (base name: "wait_for")', function() {
      // uncomment below and update the code to test the property waitFor
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property waitToLeave (base name: "wait_to_leave")', function() {
      // uncomment below and update the code to test the property waitToLeave
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property waitUntil (base name: "wait_until")', function() {
      // uncomment below and update the code to test the property waitUntil
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new UrlboxApi.RenderRequest();
      //expect(instance).to.be();
    });

  });

}));
