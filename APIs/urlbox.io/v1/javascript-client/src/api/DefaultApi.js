/**
 * Urlbox API
 * A plugin that allows the user to capture screenshots of a web page from a URL or HTML using ChatGPT.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import RedirectResponse from '../model/RedirectResponse';
import RenderRequest from '../model/RenderRequest';
import RenderResponse from '../model/RenderResponse';

/**
* Default service.
* @module api/DefaultApi
* @version v1
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the renderSync operation.
     * @callback module:api/DefaultApi~renderSyncCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RenderResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Render a URL as an image or video
     * @param {module:model/RenderRequest} renderRequest 
     * @param {module:api/DefaultApi~renderSyncCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RenderResponse}
     */
    renderSync(renderRequest, callback) {
      let postBody = renderRequest;
      // verify the required parameter 'renderRequest' is set
      if (renderRequest === undefined || renderRequest === null) {
        throw new Error("Missing the required parameter 'renderRequest' when calling renderSync");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['SecretKey'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = RenderResponse;
      return this.apiClient.callApi(
        '/v1/render/sync', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
