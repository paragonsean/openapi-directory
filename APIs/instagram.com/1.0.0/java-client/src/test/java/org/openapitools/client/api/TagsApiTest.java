/*
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.TagInfoResponse;
import org.openapitools.client.model.TagMediaListResponse;
import org.openapitools.client.model.TagSearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagsApi
 */
@Disabled
public class TagsApiTest {

    private final TagsApi api = new TagsApi();

    /**
     * Search for tags by name.
     *
     * Search for tags by name.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagsSearchGetTest() throws ApiException {
        String q = null;
        TagSearchResponse response = api.tagsSearchGet(q);
        // TODO: test validations
    }

    /**
     * Get information about a tag object.
     *
     * Get information about a tag object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagsTagNameGetTest() throws ApiException {
        String tagName = null;
        TagInfoResponse response = api.tagsTagNameGet(tagName);
        // TODO: test validations
    }

    /**
     * Get a list of recently tagged media.
     *
     * Get a list of recently tagged media. Use the &#x60;max_tag_id&#x60; and &#x60;min_tag_id&#x60; parameters in the pagination response to paginate through these objects. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagsTagNameMediaRecentGetTest() throws ApiException {
        String tagName = null;
        Integer count = null;
        String minTagId = null;
        String maxTagId = null;
        TagMediaListResponse response = api.tagsTagNameMediaRecentGet(tagName, count, minTagId, maxTagId);
        // TODO: test validations
    }

}
