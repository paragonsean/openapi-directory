/*
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MediaEntryResponse;
import org.openapitools.client.model.MediaSearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MediaApi
 */
@Disabled
public class MediaApiTest {

    private final MediaApi api = new MediaApi();

    /**
     * Get information about a media object.
     *
     * Get information about a media object. The returned type key will allow you to differentiate between image and video media.  **Note:** if you authenticate with an OAuth Token, you will receive the user_has_liked key which quickly tells you whether the current user has liked this media item. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaMediaIdGetTest() throws ApiException {
        String mediaId = null;
        MediaEntryResponse response = api.mediaMediaIdGet(mediaId);
        // TODO: test validations
    }

    /**
     * Get a list of currently popular media.
     *
     * Get a list of what media is most popular at the moment. Can return mix of &#x60;image&#x60; and &#x60;video&#x60; types.  **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaPopularGetTest() throws ApiException {
        MediaSearchResponse response = api.mediaPopularGet();
        // TODO: test validations
    }

    /**
     * Search for media in a given area.
     *
     * Search for media in a given area. The default time span is set to 5 days. The time span must not exceed 7 days. Defaults time stamps cover the last 5 days. Can return mix of &#x60;image&#x60; and &#x60;video&#x60; types. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaSearchGetTest() throws ApiException {
        Double lat = null;
        Double lng = null;
        Long minTimestamp = null;
        Long maxTimestamp = null;
        Integer distance = null;
        MediaSearchResponse response = api.mediaSearchGet(lat, lng, minTimestamp, maxTimestamp, distance);
        // TODO: test validations
    }

    /**
     * Get information about a media object.
     *
     * This endpoint returns the same response as &#x60;GET /media/{media-id}&#x60;.  A media object&#39;s shortcode can be found in its shortlink URL. An example shortlink is &#x60;http://instagram.com/p/D/&#x60;, its corresponding shortcode is &#x60;D&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void mediaShortcodeShortcodeGetTest() throws ApiException {
        String shortcode = null;
        MediaEntryResponse response = api.mediaShortcodeShortcodeGet(shortcode);
        // TODO: test validations
    }

}
