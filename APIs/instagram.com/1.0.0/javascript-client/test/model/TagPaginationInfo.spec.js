/**
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InstagramApi);
  }
}(this, function(expect, InstagramApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InstagramApi.TagPaginationInfo();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TagPaginationInfo', function() {
    it('should create an instance of TagPaginationInfo', function() {
      // uncomment below and update the code to test TagPaginationInfo
      //var instance = new InstagramApi.TagPaginationInfo();
      //expect(instance).to.be.a(InstagramApi.TagPaginationInfo);
    });

    it('should have the property deprecationWarning (base name: "deprecation_warning")', function() {
      // uncomment below and update the code to test the property deprecationWarning
      //var instance = new InstagramApi.TagPaginationInfo();
      //expect(instance).to.be();
    });

    it('should have the property minTagId (base name: "min_tag_id")', function() {
      // uncomment below and update the code to test the property minTagId
      //var instance = new InstagramApi.TagPaginationInfo();
      //expect(instance).to.be();
    });

    it('should have the property nextMaxId (base name: "next_max_id")', function() {
      // uncomment below and update the code to test the property nextMaxId
      //var instance = new InstagramApi.TagPaginationInfo();
      //expect(instance).to.be();
    });

    it('should have the property nextMaxTagId (base name: "next_max_tag_id")', function() {
      // uncomment below and update the code to test the property nextMaxTagId
      //var instance = new InstagramApi.TagPaginationInfo();
      //expect(instance).to.be();
    });

    it('should have the property nextMinId (base name: "next_min_id")', function() {
      // uncomment below and update the code to test the property nextMinId
      //var instance = new InstagramApi.TagPaginationInfo();
      //expect(instance).to.be();
    });

    it('should have the property nextUrl (base name: "next_url")', function() {
      // uncomment below and update the code to test the property nextUrl
      //var instance = new InstagramApi.TagPaginationInfo();
      //expect(instance).to.be();
    });

  });

}));
