/**
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MediaListResponse from '../model/MediaListResponse';

/**
* Geographies service.
* @module api/GeographiesApi
* @version 1.0.0
*/
export default class GeographiesApi {

    /**
    * Constructs a new GeographiesApi. 
    * @alias module:api/GeographiesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the geographiesGeoIdMediaRecentGet operation.
     * @callback module:api/GeographiesApi~geographiesGeoIdMediaRecentGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MediaListResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get recent media from a custom geo-id.
     * Get recent media from a geography subscription that you created.  **Note:** You can only access Geographies that were explicitly created by your OAuth client. Check the Geography Subscriptions section of the [real-time updates page](https://instagram.com/developer/realtime/). When you create a subscription to some geography that you define, you will be returned a unique `geo-id` that can be used in this query. To backfill photos from the location covered by this geography, use the [media search endpoint](https://instagram.com/developer/endpoints/media/).  **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015 
     * @param {String} geoId The geography ID.
     * @param {Object} opts Optional parameters
     * @param {Number} [count] Max number of media to return.
     * @param {String} [minId] Return media before this `min_id`.
     * @param {module:api/GeographiesApi~geographiesGeoIdMediaRecentGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MediaListResponse}
     */
    geographiesGeoIdMediaRecentGet(geoId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'geoId' is set
      if (geoId === undefined || geoId === null) {
        throw new Error("Missing the required parameter 'geoId' when calling geographiesGeoIdMediaRecentGet");
      }

      let pathParams = {
        'geo-id': geoId
      };
      let queryParams = {
        'count': opts['count'],
        'min_id': opts['minId']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['api_key', 'instagram_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MediaListResponse;
      return this.apiClient.callApi(
        '/geographies/{geo-id}/media/recent', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
