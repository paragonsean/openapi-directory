/**
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TagPaginationInfo model module.
 * @module model/TagPaginationInfo
 * @version 1.0.0
 */
class TagPaginationInfo {
    /**
     * Constructs a new <code>TagPaginationInfo</code>.
     * @alias module:model/TagPaginationInfo
     */
    constructor() { 
        
        TagPaginationInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TagPaginationInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TagPaginationInfo} obj Optional instance to populate.
     * @return {module:model/TagPaginationInfo} The populated <code>TagPaginationInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TagPaginationInfo();

            if (data.hasOwnProperty('deprecation_warning')) {
                obj['deprecation_warning'] = ApiClient.convertToType(data['deprecation_warning'], 'String');
            }
            if (data.hasOwnProperty('min_tag_id')) {
                obj['min_tag_id'] = ApiClient.convertToType(data['min_tag_id'], 'String');
            }
            if (data.hasOwnProperty('next_max_id')) {
                obj['next_max_id'] = ApiClient.convertToType(data['next_max_id'], 'String');
            }
            if (data.hasOwnProperty('next_max_tag_id')) {
                obj['next_max_tag_id'] = ApiClient.convertToType(data['next_max_tag_id'], 'String');
            }
            if (data.hasOwnProperty('next_min_id')) {
                obj['next_min_id'] = ApiClient.convertToType(data['next_min_id'], 'String');
            }
            if (data.hasOwnProperty('next_url')) {
                obj['next_url'] = ApiClient.convertToType(data['next_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TagPaginationInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TagPaginationInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['deprecation_warning'] && !(typeof data['deprecation_warning'] === 'string' || data['deprecation_warning'] instanceof String)) {
            throw new Error("Expected the field `deprecation_warning` to be a primitive type in the JSON string but got " + data['deprecation_warning']);
        }
        // ensure the json data is a string
        if (data['min_tag_id'] && !(typeof data['min_tag_id'] === 'string' || data['min_tag_id'] instanceof String)) {
            throw new Error("Expected the field `min_tag_id` to be a primitive type in the JSON string but got " + data['min_tag_id']);
        }
        // ensure the json data is a string
        if (data['next_max_id'] && !(typeof data['next_max_id'] === 'string' || data['next_max_id'] instanceof String)) {
            throw new Error("Expected the field `next_max_id` to be a primitive type in the JSON string but got " + data['next_max_id']);
        }
        // ensure the json data is a string
        if (data['next_max_tag_id'] && !(typeof data['next_max_tag_id'] === 'string' || data['next_max_tag_id'] instanceof String)) {
            throw new Error("Expected the field `next_max_tag_id` to be a primitive type in the JSON string but got " + data['next_max_tag_id']);
        }
        // ensure the json data is a string
        if (data['next_min_id'] && !(typeof data['next_min_id'] === 'string' || data['next_min_id'] instanceof String)) {
            throw new Error("Expected the field `next_min_id` to be a primitive type in the JSON string but got " + data['next_min_id']);
        }
        // ensure the json data is a string
        if (data['next_url'] && !(typeof data['next_url'] === 'string' || data['next_url'] instanceof String)) {
            throw new Error("Expected the field `next_url` to be a primitive type in the JSON string but got " + data['next_url']);
        }

        return true;
    }


}



/**
 * The deprication warning, if information is available
 * @member {String} deprecation_warning
 */
TagPaginationInfo.prototype['deprecation_warning'] = undefined;

/**
 * The min ID of a tag for the next page
 * @member {String} min_tag_id
 */
TagPaginationInfo.prototype['min_tag_id'] = undefined;

/**
 * Depricated. Use min_tag_id instead
 * @member {String} next_max_id
 */
TagPaginationInfo.prototype['next_max_id'] = undefined;

/**
 * The max ID of a tag for the next page
 * @member {String} next_max_tag_id
 */
TagPaginationInfo.prototype['next_max_tag_id'] = undefined;

/**
 * Depricated. Use max_tag_id instead
 * @member {String} next_min_id
 */
TagPaginationInfo.prototype['next_min_id'] = undefined;

/**
 * URL to retrieve next page of entries
 * @member {String} next_url
 */
TagPaginationInfo.prototype['next_url'] = undefined;






export default TagPaginationInfo;

