/**
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Position from './Position';
import UserShortInfo from './UserShortInfo';

/**
 * The UserInPhoto model module.
 * @module model/UserInPhoto
 * @version 1.0.0
 */
class UserInPhoto {
    /**
     * Constructs a new <code>UserInPhoto</code>.
     * @alias module:model/UserInPhoto
     */
    constructor() { 
        
        UserInPhoto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserInPhoto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserInPhoto} obj Optional instance to populate.
     * @return {module:model/UserInPhoto} The populated <code>UserInPhoto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserInPhoto();

            if (data.hasOwnProperty('position')) {
                obj['position'] = Position.constructFromObject(data['position']);
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = UserShortInfo.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserInPhoto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserInPhoto</code>.
     */
    static validateJSON(data) {
        // validate the optional field `position`
        if (data['position']) { // data not null
          Position.validateJSON(data['position']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          UserShortInfo.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {module:model/Position} position
 */
UserInPhoto.prototype['position'] = undefined;

/**
 * @member {module:model/UserShortInfo} user
 */
UserInPhoto.prototype['user'] = undefined;






export default UserInPhoto;

