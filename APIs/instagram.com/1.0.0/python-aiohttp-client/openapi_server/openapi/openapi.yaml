openapi: 3.0.1
info:
  contact:
    name: Instagram
    url: https://instagram.com/developer/support
  description: |
    Description of Instagram RESTful API.

    Current limitations:
      * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)
      for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.
      * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)
      that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and
      started in [Sandbox Mode](http://instagram.com/developer/sandbox/).
      * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.

    **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses
    containing media objects no longer return the `data` field in `comments` and `likes` nodes.

    Last update: 2015-11-28
  termsOfService: https://instagram.com/about/legal/terms/api/
  title: Instagram API
  version: 1.0.0
  x-apisguru-categories:
  - social
  - media
  x-logo:
    url: https://twitter.com/instagram/profile_image?size=original
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/darklynx/swagger-api-collection/master/api/yaml/instagram.yaml
    version: "2.0"
  x-providerName: instagram.com
  x-unofficialSpec: true
externalDocs:
  description: Instagram Developer Documentation
  url: https://instagram.com/developer
servers:
- url: https://api.instagram.com/v1
tags:
- description: Get information about users
  name: users
- description: Relationships to other users outgoing and incoming
  name: relationships
- description: Get information about media
  name: media
- description: Manage comments
  name: comments
- description: Manage likes
  name: likes
- description: Get information about tags
  name: tags
- description: Get information about locations
  name: locations
- description: Get geographies
  name: geographies
paths:
  /geographies/{geo-id}/media/recent:
    get:
      deprecated: true
      description: |
        Get recent media from a geography subscription that you created.

        **Note:** You can only access Geographies that were explicitly created by your OAuth client. Check the
        Geography Subscriptions section of the [real-time updates page](https://instagram.com/developer/realtime/).
        When you create a subscription to some geography that you define, you will be returned a unique `geo-id` that
        can be used in this query. To backfill photos from the location covered by this geography, use the
        [media search endpoint](https://instagram.com/developer/endpoints/media/).

        **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015
      operationId: geographies_geo_id_media_recent_get
      parameters:
      - description: The geography ID.
        in: path
        name: geo-id
        required: true
        schema:
          type: string
      - description: Max number of media to return.
        in: query
        name: count
        schema:
          format: int32
          type: integer
      - description: Return media before this `min_id`.
        in: query
        name: min_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaListResponse'
          description: List of recent media entries from a geography subscription.
      security:
      - api_key: []
      - instagram_auth:
        - basic
      summary: Get recent media from a custom geo-id.
      tags:
      - geographies
      x-openapi-router-controller: openapi_server.controllers.geographies_controller
  /locations/search:
    get:
      description: Search for a location by geographic coordinate.
      operationId: locations_search_get
      parameters:
      - description: "Default is 1000m (distance=1000), max distance is 5000."
        in: query
        name: distance
        schema:
          format: int32
          type: integer
      - description: "Returns a location mapped off of a Facebook places id. If used,\
          \ a Foursquare id and `lat`, `lng` are not required."
        in: query
        name: facebook_places_id
        schema:
          type: string
      - description: |
          Returns a location mapped off of a foursquare v1 api location id. If used, you are not required to use
          `lat` and `lng`. Note that this method is deprecated; you should use the new foursquare IDs with V2 of their API.
        in: query
        name: foursquare_id
        schema:
          type: string
      - description: "Latitude of the center search coordinate. If used, `lng` is\
          \ required."
        in: query
        name: lat
        schema:
          format: double
          type: number
      - description: "Longitude of the center search coordinate. If used, `lat` is\
          \ required."
        in: query
        name: lng
        schema:
          format: double
          type: number
      - description: |
          Returns a location mapped off of a foursquare v2 api location id. If used, you are not required to use
          `lat` and `lng`.
        in: query
        name: foursquare_v2_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationSearchResponse'
          description: List of found locations.
      security:
      - api_key: []
      - instagram_auth:
        - public_content
      summary: Search for a location by geographic coordinate.
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
  /locations/{location-id}:
    get:
      description: Get information about a location.
      operationId: locations_location_id_get
      parameters:
      - description: The location ID.
        in: path
        name: location-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocationInfoResponse'
          description: Location information response.
      security:
      - api_key: []
      - instagram_auth:
        - public_content
      summary: Get information about a location.
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
  /locations/{location-id}/media/recent:
    get:
      description: Get a list of recent media objects from a given location.
      operationId: locations_location_id_media_recent_get
      parameters:
      - description: The location ID.
        in: path
        name: location-id
        required: true
        schema:
          type: string
      - description: Return media after this UNIX timestamp.
        in: query
        name: min_timestamp
        schema:
          format: int64
          type: integer
      - description: Return media before this UNIX timestamp.
        in: query
        name: max_timestamp
        schema:
          format: int64
          type: integer
      - description: Return media before this `min_id`.
        in: query
        name: min_id
        schema:
          type: string
      - description: Return media after this `max_id`.
        in: query
        name: max_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaListResponse'
          description: List of media entries from this location.
      security:
      - api_key: []
      - instagram_auth:
        - public_content
      summary: Get a list of recent media objects from a given location.
      tags:
      - locations
      x-openapi-router-controller: openapi_server.controllers.locations_controller
  /media/popular:
    get:
      deprecated: true
      description: |
        Get a list of what media is most popular at the moment. Can return mix of `image` and `video` types.

        **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015
      operationId: media_popular_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSearchResponse'
          description: Found media resources (without likes information).
      security:
      - api_key: []
      - instagram_auth:
        - basic
      summary: Get a list of currently popular media.
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /media/search:
    get:
      description: |
        Search for media in a given area. The default time span is set to 5 days. The time span must not exceed 7 days.
        Defaults time stamps cover the last 5 days. Can return mix of `image` and `video` types.
      operationId: media_search_get
      parameters:
      - description: "Latitude of the center search coordinate. If used, `lng` is\
          \ required."
        in: query
        name: lat
        required: true
        schema:
          format: double
          type: number
      - description: "Longitude of the center search coordinate. If used, `lat` is\
          \ required."
        in: query
        name: lng
        required: true
        schema:
          format: double
          type: number
      - description: A unix timestamp. All media returned will be taken later than
          this timestamp.
        in: query
        name: min_timestamp
        schema:
          format: int64
          type: integer
      - description: A unix timestamp. All media returned will be taken earlier than
          this timestamp.
        in: query
        name: max_timestamp
        schema:
          format: int64
          type: integer
      - description: "Default is 1km (distance=1000), max distance is 5km."
        in: query
        name: distance
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaSearchResponse'
          description: Found media resources (without likes information) in a given
            area.
      security:
      - api_key: []
      - instagram_auth:
        - public_content
      summary: Search for media in a given area.
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /media/shortcode/{shortcode}:
    get:
      description: |
        This endpoint returns the same response as `GET /media/{media-id}`.

        A media object's shortcode can be found in its shortlink URL. An example shortlink is
        `http://instagram.com/p/D/`, its corresponding shortcode is `D`.
      operationId: media_shortcode_shortcode_get
      parameters:
      - description: The short code of the media resource.
        in: path
        name: shortcode
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaEntryResponse'
          description: Media resource information.
      security:
      - api_key: []
      - instagram_auth:
        - basic
        - public_content
      summary: Get information about a media object.
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /media/{media-id}:
    get:
      description: |
        Get information about a media object. The returned type key will allow you to differentiate between image and
        video media.

        **Note:** if you authenticate with an OAuth Token, you will receive the user_has_liked key which quickly tells
        you whether the current user has liked this media item.
      operationId: media_media_id_get
      parameters:
      - description: The ID of the media resource.
        in: path
        name: media-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaEntryResponse'
          description: Media resource information.
      security:
      - api_key: []
      - instagram_auth:
        - basic
        - public_content
      summary: Get information about a media object.
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /media/{media-id}/comments:
    get:
      description: Get a list of recent comments on a media object.
      operationId: media_media_id_comments_get
      parameters:
      - description: The ID of the media resource.
        in: path
        name: media-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommentsResponse'
          description: List of comments of the media resource.
      security:
      - api_key: []
      - instagram_auth:
        - basic
        - public_content
      summary: Get a list of recent comments on a media object.
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
    post:
      description: |
        Create a comment on a media object with the following rules:

          * The total length of the comment cannot exceed 300 characters.
          * The comment cannot contain more than 4 hashtags.
          * The comment cannot contain more than 1 URL.
          * The comment cannot consist of all capital letters.
      operationId: media_media_id_comments_post
      parameters:
      - description: The ID of the media resource.
        in: path
        name: media-id
        required: true
        schema:
          type: string
      - description: Text to post as a comment on the media object as specified in
          `media-id`.
        in: query
        name: text
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Result of posting a comment.
      security:
      - api_key: []
      - instagram_auth:
        - comments
      summary: Create a comment on a media object.
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /media/{media-id}/comments/{comment-id}:
    delete:
      description: |
        Remove a comment either on the authenticated user's media object or authored by the authenticated user.
      operationId: media_media_id_comments_comment_id_delete
      parameters:
      - description: The ID of the media resource.
        in: path
        name: media-id
        required: true
        schema:
          type: string
      - description: The ID of the comment entry.
        in: path
        name: comment-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Result of deleting a comment.
      security:
      - api_key: []
      - instagram_auth:
        - comments
      summary: Remove a comment.
      tags:
      - comments
      x-openapi-router-controller: openapi_server.controllers.comments_controller
  /media/{media-id}/likes:
    delete:
      description: Remove a like on this media by the currently authenticated user.
      operationId: media_media_id_likes_delete
      parameters:
      - description: The ID of the media resource.
        in: path
        name: media-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Result of removing a like.
      security:
      - api_key: []
      - instagram_auth:
        - likes
      summary: Remove a like on this media by the current user.
      tags:
      - likes
      x-openapi-router-controller: openapi_server.controllers.likes_controller
    get:
      description: Get a list of users who have liked this media.
      operationId: media_media_id_likes_get
      parameters:
      - description: The ID of the media resource.
        in: path
        name: media-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInfoResponse'
          description: List of users who liked the media resource.
      security:
      - api_key: []
      - instagram_auth:
        - basic
        - public_content
      summary: Get a list of users who have liked this media.
      tags:
      - likes
      x-openapi-router-controller: openapi_server.controllers.likes_controller
    post:
      description: Set a like on this media by the currently authenticated user.
      operationId: media_media_id_likes_post
      parameters:
      - description: The ID of the media resource.
        in: path
        name: media-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: Result of setting a like.
      security:
      - api_key: []
      - instagram_auth:
        - likes
      summary: Set a like on this media by the current user.
      tags:
      - likes
      x-openapi-router-controller: openapi_server.controllers.likes_controller
  /tags/search:
    get:
      description: Search for tags by name.
      operationId: tags_search_get
      parameters:
      - description: "A valid tag name without a leading \\#. (eg. snowy, nofilter)"
        in: query
        name: q
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagSearchResponse'
          description: List of found tags and their statistics.
      security:
      - api_key: []
      - instagram_auth:
        - public_content
      summary: Search for tags by name.
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /tags/{tag-name}:
    get:
      description: Get information about a tag object.
      operationId: tags_tag_name_get
      parameters:
      - description: The tag name.
        in: path
        name: tag-name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagInfoResponse'
          description: Tag information response.
      security:
      - api_key: []
      - instagram_auth:
        - public_content
      summary: Get information about a tag object.
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /tags/{tag-name}/media/recent:
    get:
      description: |
        Get a list of recently tagged media. Use the `max_tag_id` and `min_tag_id` parameters in the pagination
        response to paginate through these objects.
      operationId: tags_tag_name_media_recent_get
      parameters:
      - description: The tag name.
        in: path
        name: tag-name
        required: true
        schema:
          type: string
      - description: Count of tagged media to return.
        in: query
        name: count
        schema:
          type: integer
      - description: Return media before this `min_tag_id`.
        in: query
        name: min_tag_id
        schema:
          type: string
      - description: Return media after this `max_tag_id`.
        in: query
        name: max_tag_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagMediaListResponse'
          description: List of media entries with this tag.
      security:
      - api_key: []
      - instagram_auth:
        - public_content
      summary: Get a list of recently tagged media.
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /users/search:
    get:
      description: Search for a user by name.
      operationId: users_search_get
      parameters:
      - description: A query string.
        in: query
        name: q
        required: true
        schema:
          type: string
      - description: Number of users to return.
        in: query
        name: count
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInfoResponse'
          description: List of found users.
      security:
      - api_key: []
      - instagram_auth:
        - basic
      summary: Search for a user by name.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/self/feed:
    get:
      deprecated: true
      description: |
        See the authenticated user's feed.

        **Warning:** [Deprecated](http://instagram.com/developer/changelog/) for Apps created **on or after** Nov 17, 2015
      operationId: users_self_feed_get
      parameters:
      - description: Count of media to return.
        in: query
        name: count
        schema:
          type: integer
      - description: Return media later than this `min_id`.
        in: query
        name: min_id
        schema:
          type: string
      - description: Return media earlier than this `max_id`.
        in: query
        name: max_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaListResponse'
          description: Users feed entries.
      security:
      - api_key: []
      - instagram_auth:
        - basic
      summary: See the authenticated user's feed.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/self/media/liked:
    get:
      description: |
        See the list of media liked by the authenticated user. Private media is returned as long as the authenticated
        user has permission to view that media. Liked media lists are only available for the currently authenticated
        user.
      operationId: users_self_media_liked_get
      parameters:
      - description: Count of media to return.
        in: query
        name: count
        schema:
          type: integer
      - description: Return media liked before this id.
        in: query
        name: max_like_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaListResponse'
          description: Users media entries.
      security:
      - api_key: []
      - instagram_auth:
        - basic
      summary: See the list of media liked by the authenticated user.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/self/requested-by:
    get:
      description: List the users who have requested this user's permission to follow.
      operationId: users_self_requested_by_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersInfoResponse'
          description: List of users who have requested this user's permission to
            follow.
      security:
      - api_key: []
      - instagram_auth:
        - follower_list
      summary: List the users who have requested this user's permission to follow.
      tags:
      - relationships
      x-openapi-router-controller: openapi_server.controllers.relationships_controller
  /users/{user-id}:
    get:
      description: |
        Get basic information about a user. To get information about the owner of the access token, you can use
        **self** instead of the `user-id`.

        Security scope `public_content` is required to read information about other users.
      operationId: users_user_id_get
      parameters:
      - description: "The ID of a user to get information about, or **self** to retrieve\
          \ information about authenticated user."
        in: path
        name: user-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: User basic information.
        "404":
          content: {}
          description: "Not Found, user with such ID does not exist."
      security:
      - api_key: []
      - instagram_auth:
        - basic
        - public_content
      summary: Get basic information about a user.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user-id}/followed-by:
    get:
      description: |
        Get the list of users this user is followed by. To get users followed by the owner of the access token, you
        can use **self** instead of the `user-id`.
      operationId: users_user_id_followed_by_get
      parameters:
      - description: "The ID of a user, or **self** to retrieve information about\
          \ authenticated user."
        in: path
        name: user-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPagingResponse'
          description: List of users this user is followed by.
      security:
      - api_key: []
      - instagram_auth:
        - follower_list
      summary: Get the list of users this user is followed by.
      tags:
      - relationships
      x-openapi-router-controller: openapi_server.controllers.relationships_controller
  /users/{user-id}/follows:
    get:
      description: |
        Get the list of users this user follows. To get follows of the owner of the access token, you can use **self**
        instead of the `user-id`.
      operationId: users_user_id_follows_get
      parameters:
      - description: "The ID of a user, or **self** to retrieve information about\
          \ authenticated user."
        in: path
        name: user-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsersPagingResponse'
          description: List of users this user follows.
      security:
      - api_key: []
      - instagram_auth:
        - follower_list
      summary: Get the list of users this user follows.
      tags:
      - relationships
      x-openapi-router-controller: openapi_server.controllers.relationships_controller
  /users/{user-id}/media/recent:
    get:
      description: |
        Get the most recent media published by a user. To get the most recent media published by the owner of the
        access token, you can use **self** instead of the `user-id`.

        Security scope `public_content` is required to read information about other users.
      operationId: users_user_id_media_recent_get
      parameters:
      - description: "The ID of a user to get recent media of, or **self** to retrieve\
          \ media of authenticated user."
        in: path
        name: user-id
        required: true
        schema:
          type: string
      - description: Count of media to return.
        in: query
        name: count
        schema:
          type: integer
      - description: Return media before this UNIX timestamp.
        in: query
        name: max_timestamp
        schema:
          format: int64
          type: integer
      - description: Return media after this UNIX timestamp.
        in: query
        name: min_timestamp
        schema:
          format: int64
          type: integer
      - description: Return media later than this `min_id`.
        in: query
        name: min_id
        schema:
          type: string
      - description: Return media earlier than this `max_id`.
        in: query
        name: max_id
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaListResponse'
          description: Users media entries.
      security:
      - api_key: []
      - instagram_auth:
        - basic
        - public_content
      summary: Get the most recent media published by a user.
      tags:
      - users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /users/{user-id}/relationship:
    get:
      description: Get information about a relationship to another user.
      operationId: users_user_id_relationship_get
      parameters:
      - description: The ID of a user to get information about.
        in: path
        name: user-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipResponse'
          description: Relationship information.
      security:
      - api_key: []
      - instagram_auth:
        - follower_list
      summary: Get information about a relationship to another user.
      tags:
      - relationships
      x-openapi-router-controller: openapi_server.controllers.relationships_controller
    post:
      description: Modify the relationship between the current user and the target
        user.
      operationId: users_user_id_relationship_post
      parameters:
      - description: The ID of the target user.
        in: path
        name: user-id
        required: true
        schema:
          type: string
      - description: Type of action to apply for relationship with the user.
        in: query
        name: action
        required: true
        schema:
          enum:
          - follow
          - unfollow
          - block
          - unblock
          - approve
          - ignore
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RelationshipPostResponse'
          description: Relationship information.
      security:
      - api_key: []
      - instagram_auth:
        - relationships
      summary: Modify the relationship between the current user and the target user.
      tags:
      - relationships
      x-openapi-router-controller: openapi_server.controllers.relationships_controller
components:
  schemas:
    CaptionData:
      example:
        created_time: created_time
        from:
          full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        id: id
        text: text
      properties:
        created_time:
          description: Caption creation UNIX timestamp
          title: created_time
          type: string
        from:
          $ref: '#/components/schemas/UserShortInfo'
        id:
          description: ID of this caption
          title: id
          type: string
        text:
          description: Caption text
          title: text
          type: string
      title: CaptionData
      type: object
    CommentEntry:
      example:
        created_time: created_time
        from:
          full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        id: id
        text: text
      properties:
        created_time:
          description: Comment creation UNIX timestamp
          title: created_time
          type: string
        from:
          $ref: '#/components/schemas/UserShortInfo'
        id:
          description: ID of this comment
          title: id
          type: string
        text:
          description: Text of the comment
          title: text
          type: string
      title: CommentEntry
      type: object
    CommentsCollection:
      example:
        data:
        - created_time: created_time
          from:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          id: id
          text: text
        - created_time: created_time
          from:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          id: id
          text: text
        count: 0
      properties:
        count:
          description: "Nember of comments available, data does not necessary contain\
            \ all comments"
          title: count
          type: integer
        data:
          description: "Collection of comment entries; **warning:** deprecated for\
            \ Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/)"
          items:
            $ref: '#/components/schemas/CommentEntry'
          title: data
          type: array
      title: CommentsCollection
      type: object
    CommentsResponse:
      example:
        data:
        - created_time: created_time
          from:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          id: id
          text: text
        - created_time: created_time
          from:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          id: id
          text: text
        meta:
          code: 3
      properties:
        data:
          description: Collection of comments
          items:
            $ref: '#/components/schemas/CommentEntry'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
      title: CommentsResponse
      type: object
    CursorPaginationInfo:
      example:
        next_cursor: next_cursor
        next_url: next_url
      properties:
        next_cursor:
          description: The cursor ID of the next page
          title: next_cursor
          type: string
        next_url:
          description: URL to retrieve next page of entries
          title: next_url
          type: string
      title: CursorPaginationInfo
      type: object
    IdPaginationInfo:
      example:
        next_url: next_url
        next_max_id: next_max_id
      properties:
        next_max_id:
          description: The max ID of the next page
          title: next_max_id
          type: string
        next_url:
          description: URL to retrieve next page of entries
          title: next_url
          type: string
      title: IdPaginationInfo
      type: object
    ImageInfo:
      example:
        width: 1
        url: url
        height: 6
      properties:
        height:
          description: Image/video height in pixels
          title: height
          type: integer
        url:
          description: URL of the image/video resource
          title: url
          type: string
        width:
          description: Image/video width in pixels
          title: width
          type: integer
      title: ImageInfo
      type: object
    ImagesData:
      example:
        thumbnail:
          width: 1
          url: url
          height: 6
        low_resolution:
          width: 1
          url: url
          height: 6
        standard_resolution:
          width: 1
          url: url
          height: 6
      properties:
        low_resolution:
          $ref: '#/components/schemas/ImageInfo'
        standard_resolution:
          $ref: '#/components/schemas/ImageInfo'
        thumbnail:
          $ref: '#/components/schemas/ImageInfo'
      title: ImagesData
      type: object
    LikesCollection:
      example:
        data:
        - full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        - full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        count: 5
      properties:
        count:
          description: "Nember of likes available, data does not necessary contain\
            \ all comments"
          title: count
          type: integer
        data:
          description: "Collection of users who liked; **warning:** deprecated for\
            \ Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/)"
          items:
            $ref: '#/components/schemas/UserShortInfo'
          title: data
          type: array
      title: LikesCollection
      type: object
    LocationInfo:
      example:
        latitude: 5.637376656633329
        name: name
        id: id
        longitude: 2.3021358869347655
      properties:
        id:
          description: ID of this location (in some responses it has a type of 'integer')
          title: id
          type: string
        latitude:
          description: Location latitude
          format: double
          title: latitude
          type: number
        longitude:
          description: Location longitude
          format: double
          title: longitude
          type: number
        name:
          description: Location name
          title: name
          type: string
      title: LocationInfo
      type: object
    LocationInfoResponse:
      example:
        data:
          latitude: 5.637376656633329
          name: name
          id: id
          longitude: 2.3021358869347655
        meta:
          code: 3
      properties:
        data:
          $ref: '#/components/schemas/LocationInfo'
        meta:
          $ref: '#/components/schemas/MetaData'
      title: LocationInfoResponse
      type: object
    LocationSearchResponse:
      example:
        data:
        - latitude: 5.637376656633329
          name: name
          id: id
          longitude: 2.3021358869347655
        - latitude: 5.637376656633329
          name: name
          id: id
          longitude: 2.3021358869347655
        meta:
          code: 3
      properties:
        data:
          description: List of found locations
          items:
            $ref: '#/components/schemas/LocationInfo'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
      title: LocationSearchResponse
      type: object
    MediaEntry:
      example:
        created_time: created_time
        images:
          thumbnail:
            width: 1
            url: url
            height: 6
          low_resolution:
            width: 1
            url: url
            height: 6
          standard_resolution:
            width: 1
            url: url
            height: 6
        comments:
          data:
          - created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          - created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          count: 0
        users_in_photo:
        - position:
            x: 7.0614014
            "y": 9.301444
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
        - position:
            x: 7.0614014
            "y": 9.301444
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
        user_has_liked: true
        link: link
        caption:
          created_time: created_time
          from:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          id: id
          text: text
        videos:
          low_resolution:
            width: 1
            url: url
            height: 6
          standard_resolution:
            width: 1
            url: url
            height: 6
        type: image
        tags:
        - tags
        - tags
        filter: filter
        attribution: attribution
        location:
          latitude: 5.637376656633329
          name: name
          id: id
          longitude: 2.3021358869347655
        id: id
        user:
          full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        likes:
          data:
          - full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          - full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          count: 5
      properties:
        attribution:
          description: ??? Unknown ???
          title: attribution
          type: string
        caption:
          $ref: '#/components/schemas/CaptionData'
        comments:
          $ref: '#/components/schemas/CommentsCollection'
        created_time:
          description: Media creation UNIX timestamp
          title: created_time
          type: string
        filter:
          description: Filter of this media entry
          title: filter
          type: string
        id:
          description: ID of a media entry
          title: id
          type: string
        images:
          $ref: '#/components/schemas/ImagesData'
        likes:
          $ref: '#/components/schemas/LikesCollection'
        link:
          description: Fixed URL of this media entry
          title: link
          type: string
        location:
          $ref: '#/components/schemas/LocationInfo'
        tags:
          description: List of tags assigned to this media
          items:
            type: string
          title: tags
          type: array
        type:
          description: Type of this media entry
          enum:
          - image
          - video
          title: type
          type: string
        user:
          $ref: '#/components/schemas/UserShortInfo'
        user_has_liked:
          description: Indicates whether authenticated user has liked this media or
            not
          title: user_has_liked
          type: boolean
        users_in_photo:
          description: Users located on this media entry
          items:
            $ref: '#/components/schemas/UserInPhoto'
          title: users_in_photo
          type: array
        videos:
          $ref: '#/components/schemas/VideosData'
      title: MediaEntry
      type: object
    MediaEntryResponse:
      example:
        data:
          created_time: created_time
          images:
            thumbnail:
              width: 1
              url: url
              height: 6
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          comments:
            data:
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            count: 0
          users_in_photo:
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          user_has_liked: true
          link: link
          caption:
            created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          videos:
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          type: image
          tags:
          - tags
          - tags
          filter: filter
          attribution: attribution
          location:
            latitude: 5.637376656633329
            name: name
            id: id
            longitude: 2.3021358869347655
          id: id
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          likes:
            data:
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            count: 5
        meta:
          code: 3
      properties:
        data:
          $ref: '#/components/schemas/MediaEntry'
        meta:
          $ref: '#/components/schemas/MetaData'
      title: MediaEntryResponse
      type: object
    MediaListResponse:
      example:
        pagination:
          next_url: next_url
          next_max_id: next_max_id
        data:
        - created_time: created_time
          images:
            thumbnail:
              width: 1
              url: url
              height: 6
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          comments:
            data:
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            count: 0
          users_in_photo:
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          user_has_liked: true
          link: link
          caption:
            created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          videos:
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          type: image
          tags:
          - tags
          - tags
          filter: filter
          attribution: attribution
          location:
            latitude: 5.637376656633329
            name: name
            id: id
            longitude: 2.3021358869347655
          id: id
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          likes:
            data:
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            count: 5
        - created_time: created_time
          images:
            thumbnail:
              width: 1
              url: url
              height: 6
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          comments:
            data:
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            count: 0
          users_in_photo:
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          user_has_liked: true
          link: link
          caption:
            created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          videos:
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          type: image
          tags:
          - tags
          - tags
          filter: filter
          attribution: attribution
          location:
            latitude: 5.637376656633329
            name: name
            id: id
            longitude: 2.3021358869347655
          id: id
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          likes:
            data:
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            count: 5
        meta:
          code: 3
      properties:
        data:
          description: List of media entries
          items:
            $ref: '#/components/schemas/MediaEntry'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
        pagination:
          $ref: '#/components/schemas/IdPaginationInfo'
      title: MediaListResponse
      type: object
    MediaSearchResponse:
      example:
        data:
        - created_time: created_time
          images:
            thumbnail:
              width: 1
              url: url
              height: 6
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          comments:
            data:
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            count: 0
          users_in_photo:
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          user_has_liked: true
          link: link
          caption:
            created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          videos:
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          type: image
          tags:
          - tags
          - tags
          filter: filter
          attribution: attribution
          location:
            latitude: 5.637376656633329
            name: name
            id: id
            longitude: 2.3021358869347655
          id: id
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          likes:
            data:
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            count: 5
        - created_time: created_time
          images:
            thumbnail:
              width: 1
              url: url
              height: 6
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          comments:
            data:
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            count: 0
          users_in_photo:
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          user_has_liked: true
          link: link
          caption:
            created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          videos:
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          type: image
          tags:
          - tags
          - tags
          filter: filter
          attribution: attribution
          location:
            latitude: 5.637376656633329
            name: name
            id: id
            longitude: 2.3021358869347655
          id: id
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          likes:
            data:
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            count: 5
        meta:
          code: 3
      properties:
        data:
          description: Found media entries; some end-points do not return likes informtaion
          items:
            $ref: '#/components/schemas/MediaEntry'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
      title: MediaSearchResponse
      type: object
    MetaData:
      example:
        code: 3
      properties:
        code:
          description: HTTP result code
          format: int32
          title: code
          type: integer
      title: MetaData
      type: object
    Position:
      example:
        x: 7.0614014
        "y": 9.301444
      properties:
        x:
          description: X position (horizontal)
          format: float
          title: x
          type: number
        "y":
          description: Y position (vertical)
          format: float
          title: "y"
          type: number
      title: Position
      type: object
    RelationshipInfo:
      example:
        incoming_status: none
        target_user_is_private: true
        outgoing_status: none
      properties:
        incoming_status:
          description: Status of incoming relationship
          enum:
          - none
          - followed_by
          - requested_by
          title: incoming_status
          type: string
        outgoing_status:
          description: Status of outgoing relationship
          enum:
          - none
          - follows
          - requested
          title: outgoing_status
          type: string
        target_user_is_private:
          description: Indicates whether target user is private or not
          title: target_user_is_private
          type: boolean
      title: RelationshipInfo
      type: object
    RelationshipPostResponse:
      example:
        data:
          outgoing_status: none
        meta:
          code: 3
      properties:
        data:
          $ref: '#/components/schemas/RelationshipStatus'
        meta:
          $ref: '#/components/schemas/MetaData'
      title: RelationshipPostResponse
      type: object
    RelationshipResponse:
      example:
        data:
          incoming_status: none
          target_user_is_private: true
          outgoing_status: none
        meta:
          code: 3
      properties:
        data:
          $ref: '#/components/schemas/RelationshipInfo'
        meta:
          $ref: '#/components/schemas/MetaData'
      title: RelationshipResponse
      type: object
    RelationshipStatus:
      example:
        outgoing_status: none
      properties:
        outgoing_status:
          description: Status of outgoing relationship
          enum:
          - none
          - follows
          - requested
          title: outgoing_status
          type: string
      title: RelationshipStatus
      type: object
    StatusResponse:
      example:
        data: data
        meta:
          code: 3
      properties:
        data:
          description: No data - 'null'
          title: data
          type: string
        meta:
          $ref: '#/components/schemas/MetaData'
      title: StatusResponse
      type: object
    TagInfo:
      example:
        media_count: 0
        name: name
      properties:
        media_count:
          description: Overall number of media entries taged with this name
          format: int64
          title: media_count
          type: integer
        name:
          description: Tag name
          title: name
          type: string
      title: TagInfo
      type: object
    TagInfoResponse:
      example:
        data:
          media_count: 0
          name: name
        meta:
          code: 3
      properties:
        data:
          $ref: '#/components/schemas/TagInfo'
        meta:
          $ref: '#/components/schemas/MetaData'
      title: TagInfoResponse
      type: object
    TagMediaListResponse:
      example:
        pagination:
          next_min_id: next_min_id
          next_url: next_url
          next_max_id: next_max_id
          min_tag_id: min_tag_id
          next_max_tag_id: next_max_tag_id
          deprecation_warning: deprecation_warning
        data:
        - created_time: created_time
          images:
            thumbnail:
              width: 1
              url: url
              height: 6
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          comments:
            data:
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            count: 0
          users_in_photo:
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          user_has_liked: true
          link: link
          caption:
            created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          videos:
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          type: image
          tags:
          - tags
          - tags
          filter: filter
          attribution: attribution
          location:
            latitude: 5.637376656633329
            name: name
            id: id
            longitude: 2.3021358869347655
          id: id
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          likes:
            data:
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            count: 5
        - created_time: created_time
          images:
            thumbnail:
              width: 1
              url: url
              height: 6
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          comments:
            data:
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            - created_time: created_time
              from:
                full_name: full_name
                profile_picture: profile_picture
                id: id
                username: username
              id: id
              text: text
            count: 0
          users_in_photo:
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          - position:
              x: 7.0614014
              "y": 9.301444
            user:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
          user_has_liked: true
          link: link
          caption:
            created_time: created_time
            from:
              full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            id: id
            text: text
          videos:
            low_resolution:
              width: 1
              url: url
              height: 6
            standard_resolution:
              width: 1
              url: url
              height: 6
          type: image
          tags:
          - tags
          - tags
          filter: filter
          attribution: attribution
          location:
            latitude: 5.637376656633329
            name: name
            id: id
            longitude: 2.3021358869347655
          id: id
          user:
            full_name: full_name
            profile_picture: profile_picture
            id: id
            username: username
          likes:
            data:
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            - full_name: full_name
              profile_picture: profile_picture
              id: id
              username: username
            count: 5
        meta:
          code: 3
      properties:
        data:
          description: List of media entries with this tag
          items:
            $ref: '#/components/schemas/MediaEntry'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
        pagination:
          $ref: '#/components/schemas/TagPaginationInfo'
      title: TagMediaListResponse
      type: object
    TagPaginationInfo:
      example:
        next_min_id: next_min_id
        next_url: next_url
        next_max_id: next_max_id
        min_tag_id: min_tag_id
        next_max_tag_id: next_max_tag_id
        deprecation_warning: deprecation_warning
      properties:
        deprecation_warning:
          description: "The deprication warning, if information is available"
          title: deprecation_warning
          type: string
        min_tag_id:
          description: The min ID of a tag for the next page
          title: min_tag_id
          type: string
        next_max_id:
          description: Depricated. Use min_tag_id instead
          title: next_max_id
          type: string
        next_max_tag_id:
          description: The max ID of a tag for the next page
          title: next_max_tag_id
          type: string
        next_min_id:
          description: Depricated. Use max_tag_id instead
          title: next_min_id
          type: string
        next_url:
          description: URL to retrieve next page of entries
          title: next_url
          type: string
      title: TagPaginationInfo
      type: object
    TagSearchResponse:
      example:
        data:
        - media_count: 0
          name: name
        - media_count: 0
          name: name
        meta:
          code: 3
      properties:
        data:
          description: List of found tags with brief statistics
          items:
            $ref: '#/components/schemas/TagInfo'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
      title: TagSearchResponse
      type: object
    UserCounts:
      example:
        followed_by: 0
        follows: 6
        media: 1
      properties:
        followed_by:
          description: Number of followers of this user
          format: int32
          title: followed_by
          type: integer
        follows:
          description: Number of users followed by this user
          format: int32
          title: follows
          type: integer
        media:
          description: Number of user media
          format: int32
          title: media
          type: integer
      title: UserCounts
      type: object
    UserInPhoto:
      example:
        position:
          x: 7.0614014
          "y": 9.301444
        user:
          full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
      properties:
        position:
          $ref: '#/components/schemas/Position'
        user:
          $ref: '#/components/schemas/UserShortInfo'
      title: UserInPhoto
      type: object
    UserInfo:
      example:
        website: website
        full_name: full_name
        counts:
          followed_by: 0
          follows: 6
          media: 1
        bio: bio
        profile_picture: profile_picture
        id: id
        username: username
      properties:
        bio:
          description: User biography
          title: bio
          type: string
        counts:
          $ref: '#/components/schemas/UserCounts'
        full_name:
          description: User full name
          title: full_name
          type: string
        id:
          description: User ID
          title: id
          type: string
        profile_picture:
          description: URL to user profile picture
          title: profile_picture
          type: string
        username:
          description: "User name, nickname"
          title: username
          type: string
        website:
          description: URL to user web-site
          title: website
          type: string
      title: UserInfo
      type: object
    UserResponse:
      example:
        data:
          website: website
          full_name: full_name
          counts:
            followed_by: 0
            follows: 6
            media: 1
          bio: bio
          profile_picture: profile_picture
          id: id
          username: username
        meta:
          code: 3
      properties:
        data:
          $ref: '#/components/schemas/UserInfo'
        meta:
          $ref: '#/components/schemas/MetaData'
      title: UserResponse
      type: object
    UserShortInfo:
      example:
        full_name: full_name
        profile_picture: profile_picture
        id: id
        username: username
      properties:
        full_name:
          description: User full name
          title: full_name
          type: string
        id:
          description: User ID
          title: id
          type: string
        profile_picture:
          description: URL to user profile picture
          title: profile_picture
          type: string
        username:
          description: "User name, nickname"
          title: username
          type: string
      title: UserShortInfo
      type: object
    UsersInfoResponse:
      example:
        data:
        - full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        - full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        meta:
          code: 3
      properties:
        data:
          description: User short information entries
          items:
            $ref: '#/components/schemas/UserShortInfo'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
      title: UsersInfoResponse
      type: object
    UsersPagingResponse:
      example:
        pagination:
          next_cursor: next_cursor
          next_url: next_url
        data:
        - full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        - full_name: full_name
          profile_picture: profile_picture
          id: id
          username: username
        meta:
          code: 3
      properties:
        data:
          description: List of user short information entries
          items:
            $ref: '#/components/schemas/UserShortInfo'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/MetaData'
        pagination:
          $ref: '#/components/schemas/CursorPaginationInfo'
      title: UsersPagingResponse
      type: object
    VideosData:
      example:
        low_resolution:
          width: 1
          url: url
          height: 6
        standard_resolution:
          width: 1
          url: url
          height: 6
      properties:
        low_resolution:
          $ref: '#/components/schemas/ImageInfo'
        standard_resolution:
          $ref: '#/components/schemas/ImageInfo'
      title: VideosData
      type: object
  securitySchemes:
    api_key:
      in: query
      name: access_token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_api_key
    instagram_auth:
      flows:
        implicit:
          authorizationUrl: https://instagram.com/oauth/authorize/
          scopes:
            basic: to read a user's profile info and media (granted by default)
            comments: to post and delete comments on a user's behalf
            follower_list: to read the list of followers and followed-by users
            likes: to like and unlike media on a user's behalf
            public_content: to read any public profile info and media on a user’s
              behalf
            relationships: to follow and unfollow accounts on a user's behalf
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_instagram_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_instagram_auth
x-original-swagger-version: "2.0"
