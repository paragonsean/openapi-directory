# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImageInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, height: int=None, url: str=None, width: int=None):
        """ImageInfo - a model defined in OpenAPI

        :param height: The height of this ImageInfo.
        :param url: The url of this ImageInfo.
        :param width: The width of this ImageInfo.
        """
        self.openapi_types = {
            'height': int,
            'url': str,
            'width': int
        }

        self.attribute_map = {
            'height': 'height',
            'url': 'url',
            'width': 'width'
        }

        self._height = height
        self._url = url
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImageInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ImageInfo of this ImageInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def height(self):
        """Gets the height of this ImageInfo.

        Image/video height in pixels

        :return: The height of this ImageInfo.
        :rtype: int
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this ImageInfo.

        Image/video height in pixels

        :param height: The height of this ImageInfo.
        :type height: int
        """

        self._height = height

    @property
    def url(self):
        """Gets the url of this ImageInfo.

        URL of the image/video resource

        :return: The url of this ImageInfo.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this ImageInfo.

        URL of the image/video resource

        :param url: The url of this ImageInfo.
        :type url: str
        """

        self._url = url

    @property
    def width(self):
        """Gets the width of this ImageInfo.

        Image/video width in pixels

        :return: The width of this ImageInfo.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this ImageInfo.

        Image/video width in pixels

        :param width: The width of this ImageInfo.
        :type width: int
        """

        self._width = width
