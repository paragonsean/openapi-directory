# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TagInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, media_count: int=None, name: str=None):
        """TagInfo - a model defined in OpenAPI

        :param media_count: The media_count of this TagInfo.
        :param name: The name of this TagInfo.
        """
        self.openapi_types = {
            'media_count': int,
            'name': str
        }

        self.attribute_map = {
            'media_count': 'media_count',
            'name': 'name'
        }

        self._media_count = media_count
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagInfo of this TagInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def media_count(self):
        """Gets the media_count of this TagInfo.

        Overall number of media entries taged with this name

        :return: The media_count of this TagInfo.
        :rtype: int
        """
        return self._media_count

    @media_count.setter
    def media_count(self, media_count):
        """Sets the media_count of this TagInfo.

        Overall number of media entries taged with this name

        :param media_count: The media_count of this TagInfo.
        :type media_count: int
        """

        self._media_count = media_count

    @property
    def name(self):
        """Gets the name of this TagInfo.

        Tag name

        :return: The name of this TagInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TagInfo.

        Tag name

        :param name: The name of this TagInfo.
        :type name: str
        """

        self._name = name
