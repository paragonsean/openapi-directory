# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.user_counts import UserCounts
from openapi_server import util


class UserInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bio: str=None, counts: UserCounts=None, full_name: str=None, id: str=None, profile_picture: str=None, username: str=None, website: str=None):
        """UserInfo - a model defined in OpenAPI

        :param bio: The bio of this UserInfo.
        :param counts: The counts of this UserInfo.
        :param full_name: The full_name of this UserInfo.
        :param id: The id of this UserInfo.
        :param profile_picture: The profile_picture of this UserInfo.
        :param username: The username of this UserInfo.
        :param website: The website of this UserInfo.
        """
        self.openapi_types = {
            'bio': str,
            'counts': UserCounts,
            'full_name': str,
            'id': str,
            'profile_picture': str,
            'username': str,
            'website': str
        }

        self.attribute_map = {
            'bio': 'bio',
            'counts': 'counts',
            'full_name': 'full_name',
            'id': 'id',
            'profile_picture': 'profile_picture',
            'username': 'username',
            'website': 'website'
        }

        self._bio = bio
        self._counts = counts
        self._full_name = full_name
        self._id = id
        self._profile_picture = profile_picture
        self._username = username
        self._website = website

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserInfo of this UserInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bio(self):
        """Gets the bio of this UserInfo.

        User biography

        :return: The bio of this UserInfo.
        :rtype: str
        """
        return self._bio

    @bio.setter
    def bio(self, bio):
        """Sets the bio of this UserInfo.

        User biography

        :param bio: The bio of this UserInfo.
        :type bio: str
        """

        self._bio = bio

    @property
    def counts(self):
        """Gets the counts of this UserInfo.


        :return: The counts of this UserInfo.
        :rtype: UserCounts
        """
        return self._counts

    @counts.setter
    def counts(self, counts):
        """Sets the counts of this UserInfo.


        :param counts: The counts of this UserInfo.
        :type counts: UserCounts
        """

        self._counts = counts

    @property
    def full_name(self):
        """Gets the full_name of this UserInfo.

        User full name

        :return: The full_name of this UserInfo.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this UserInfo.

        User full name

        :param full_name: The full_name of this UserInfo.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def id(self):
        """Gets the id of this UserInfo.

        User ID

        :return: The id of this UserInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UserInfo.

        User ID

        :param id: The id of this UserInfo.
        :type id: str
        """

        self._id = id

    @property
    def profile_picture(self):
        """Gets the profile_picture of this UserInfo.

        URL to user profile picture

        :return: The profile_picture of this UserInfo.
        :rtype: str
        """
        return self._profile_picture

    @profile_picture.setter
    def profile_picture(self, profile_picture):
        """Sets the profile_picture of this UserInfo.

        URL to user profile picture

        :param profile_picture: The profile_picture of this UserInfo.
        :type profile_picture: str
        """

        self._profile_picture = profile_picture

    @property
    def username(self):
        """Gets the username of this UserInfo.

        User name, nickname

        :return: The username of this UserInfo.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserInfo.

        User name, nickname

        :param username: The username of this UserInfo.
        :type username: str
        """

        self._username = username

    @property
    def website(self):
        """Gets the website of this UserInfo.

        URL to user web-site

        :return: The website of this UserInfo.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this UserInfo.

        URL to user web-site

        :param website: The website of this UserInfo.
        :type website: str
        """

        self._website = website
