/**
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMediaEntry.h
 *
 * 
 */

#ifndef OAIMediaEntry_H
#define OAIMediaEntry_H

#include <QJsonObject>

#include "OAICaptionData.h"
#include "OAICommentsCollection.h"
#include "OAIImagesData.h"
#include "OAILikesCollection.h"
#include "OAILocationInfo.h"
#include "OAIUserInPhoto.h"
#include "OAIUserShortInfo.h"
#include "OAIVideosData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICaptionData;
class OAICommentsCollection;
class OAIImagesData;
class OAILikesCollection;
class OAILocationInfo;
class OAIUserShortInfo;
class OAIUserInPhoto;
class OAIVideosData;

class OAIMediaEntry : public OAIObject {
public:
    OAIMediaEntry();
    OAIMediaEntry(QString json);
    ~OAIMediaEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttribution() const;
    void setAttribution(const QString &attribution);
    bool is_attribution_Set() const;
    bool is_attribution_Valid() const;

    OAICaptionData getCaption() const;
    void setCaption(const OAICaptionData &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    OAICommentsCollection getComments() const;
    void setComments(const OAICommentsCollection &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getCreatedTime() const;
    void setCreatedTime(const QString &created_time);
    bool is_created_time_Set() const;
    bool is_created_time_Valid() const;

    QString getFilter() const;
    void setFilter(const QString &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIImagesData getImages() const;
    void setImages(const OAIImagesData &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    OAILikesCollection getLikes() const;
    void setLikes(const OAILikesCollection &likes);
    bool is_likes_Set() const;
    bool is_likes_Valid() const;

    QString getLink() const;
    void setLink(const QString &link);
    bool is_link_Set() const;
    bool is_link_Valid() const;

    OAILocationInfo getLocation() const;
    void setLocation(const OAILocationInfo &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIUserShortInfo getUser() const;
    void setUser(const OAIUserShortInfo &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    bool isUserHasLiked() const;
    void setUserHasLiked(const bool &user_has_liked);
    bool is_user_has_liked_Set() const;
    bool is_user_has_liked_Valid() const;

    QList<OAIUserInPhoto> getUsersInPhoto() const;
    void setUsersInPhoto(const QList<OAIUserInPhoto> &users_in_photo);
    bool is_users_in_photo_Set() const;
    bool is_users_in_photo_Valid() const;

    OAIVideosData getVideos() const;
    void setVideos(const OAIVideosData &videos);
    bool is_videos_Set() const;
    bool is_videos_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attribution;
    bool m_attribution_isSet;
    bool m_attribution_isValid;

    OAICaptionData m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    OAICommentsCollection m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_created_time;
    bool m_created_time_isSet;
    bool m_created_time_isValid;

    QString m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIImagesData m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    OAILikesCollection m_likes;
    bool m_likes_isSet;
    bool m_likes_isValid;

    QString m_link;
    bool m_link_isSet;
    bool m_link_isValid;

    OAILocationInfo m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIUserShortInfo m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    bool m_user_has_liked;
    bool m_user_has_liked_isSet;
    bool m_user_has_liked_isValid;

    QList<OAIUserInPhoto> m_users_in_photo;
    bool m_users_in_photo_isSet;
    bool m_users_in_photo_isValid;

    OAIVideosData m_videos;
    bool m_videos_isSet;
    bool m_videos_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMediaEntry)

#endif // OAIMediaEntry_H
