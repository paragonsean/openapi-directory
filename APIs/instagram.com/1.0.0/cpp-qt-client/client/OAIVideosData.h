/**
 * Instagram API
 * Description of Instagram RESTful API.  Current limitations:   * Instagram service does not support [cross origin headers](https://developer.mozilla.org/en-US/docs/Web/HTTP/Access_control_CORS)   for security reasons, therefore it is not possible to use Swagger UI and make API calls directly from browser.   * Modification API requests (`POST`, `DELETE`) require additional security [scopes](https://instagram.com/developer/authorization/)   that are available for Apps [created on or after Nov 17, 2015](http://instagram.com/developer/review/) and   started in [Sandbox Mode](http://instagram.com/developer/sandbox/).   * Consider the [Instagram limitations](https://instagram.com/developer/limits/) for API calls that depends on App Mode.  **Warning:** For Apps [created on or after Nov 17, 2015](http://instagram.com/developer/changelog/) API responses containing media objects no longer return the `data` field in `comments` and `likes` nodes.  Last update: 2015-11-28 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVideosData.h
 *
 * 
 */

#ifndef OAIVideosData_H
#define OAIVideosData_H

#include <QJsonObject>

#include "OAIImageInfo.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImageInfo;

class OAIVideosData : public OAIObject {
public:
    OAIVideosData();
    OAIVideosData(QString json);
    ~OAIVideosData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIImageInfo getLowResolution() const;
    void setLowResolution(const OAIImageInfo &low_resolution);
    bool is_low_resolution_Set() const;
    bool is_low_resolution_Valid() const;

    OAIImageInfo getStandardResolution() const;
    void setStandardResolution(const OAIImageInfo &standard_resolution);
    bool is_standard_resolution_Set() const;
    bool is_standard_resolution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIImageInfo m_low_resolution;
    bool m_low_resolution_isSet;
    bool m_low_resolution_isValid;

    OAIImageInfo m_standard_resolution;
    bool m_standard_resolution_isSet;
    bool m_standard_resolution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVideosData)

#endif // OAIVideosData_H
