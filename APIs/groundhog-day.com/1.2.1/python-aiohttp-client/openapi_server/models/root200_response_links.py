# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.root200_response_links_groundhog import Root200ResponseLinksGroundhog
from openapi_server import util


class Root200ResponseLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, groundhog: Root200ResponseLinksGroundhog=None, groundhogs: Root200ResponseLinksGroundhog=None, predictions: Root200ResponseLinksGroundhog=None, _self: Root200ResponseLinksGroundhog=None, spec: Root200ResponseLinksGroundhog=None):
        """Root200ResponseLinks - a model defined in OpenAPI

        :param groundhog: The groundhog of this Root200ResponseLinks.
        :param groundhogs: The groundhogs of this Root200ResponseLinks.
        :param predictions: The predictions of this Root200ResponseLinks.
        :param _self: The _self of this Root200ResponseLinks.
        :param spec: The spec of this Root200ResponseLinks.
        """
        self.openapi_types = {
            'groundhog': Root200ResponseLinksGroundhog,
            'groundhogs': Root200ResponseLinksGroundhog,
            'predictions': Root200ResponseLinksGroundhog,
            '_self': Root200ResponseLinksGroundhog,
            'spec': Root200ResponseLinksGroundhog
        }

        self.attribute_map = {
            'groundhog': 'groundhog',
            'groundhogs': 'groundhogs',
            'predictions': 'predictions',
            '_self': 'self',
            'spec': 'spec'
        }

        self._groundhog = groundhog
        self._groundhogs = groundhogs
        self._predictions = predictions
        self.__self = _self
        self._spec = spec

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Root200ResponseLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The root_200_response__links of this Root200ResponseLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def groundhog(self):
        """Gets the groundhog of this Root200ResponseLinks.


        :return: The groundhog of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksGroundhog
        """
        return self._groundhog

    @groundhog.setter
    def groundhog(self, groundhog):
        """Sets the groundhog of this Root200ResponseLinks.


        :param groundhog: The groundhog of this Root200ResponseLinks.
        :type groundhog: Root200ResponseLinksGroundhog
        """

        self._groundhog = groundhog

    @property
    def groundhogs(self):
        """Gets the groundhogs of this Root200ResponseLinks.


        :return: The groundhogs of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksGroundhog
        """
        return self._groundhogs

    @groundhogs.setter
    def groundhogs(self, groundhogs):
        """Sets the groundhogs of this Root200ResponseLinks.


        :param groundhogs: The groundhogs of this Root200ResponseLinks.
        :type groundhogs: Root200ResponseLinksGroundhog
        """

        self._groundhogs = groundhogs

    @property
    def predictions(self):
        """Gets the predictions of this Root200ResponseLinks.


        :return: The predictions of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksGroundhog
        """
        return self._predictions

    @predictions.setter
    def predictions(self, predictions):
        """Sets the predictions of this Root200ResponseLinks.


        :param predictions: The predictions of this Root200ResponseLinks.
        :type predictions: Root200ResponseLinksGroundhog
        """

        self._predictions = predictions

    @property
    def _self(self):
        """Gets the _self of this Root200ResponseLinks.


        :return: The _self of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksGroundhog
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this Root200ResponseLinks.


        :param _self: The _self of this Root200ResponseLinks.
        :type _self: Root200ResponseLinksGroundhog
        """

        self.__self = _self

    @property
    def spec(self):
        """Gets the spec of this Root200ResponseLinks.


        :return: The spec of this Root200ResponseLinks.
        :rtype: Root200ResponseLinksGroundhog
        """
        return self._spec

    @spec.setter
    def spec(self, spec):
        """Sets the spec of this Root200ResponseLinks.


        :param spec: The spec of this Root200ResponseLinks.
        :type spec: Root200ResponseLinksGroundhog
        """

        self._spec = spec
