/**
 * Groundhog Day API
 * This API returns all of North Americaâ€™s prognosticating animals and their yearly weather predictions.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: hello@groundhog-day.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Root200Response from '../model/Root200Response';

/**
* Info service.
* @module api/InfoApi
* @version 1.2.1
*/
export default class InfoApi {

    /**
    * Constructs a new InfoApi. 
    * @alias module:api/InfoApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the root operation.
     * @callback module:api/InfoApi~rootCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Root200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Root
     * Returns a welcome message.
     * @param {module:api/InfoApi~rootCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Root200Response}
     */
    root(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Root200Response;
      return this.apiClient.callApi(
        '/api/v1', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the spec operation.
     * @callback module:api/InfoApi~specCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get JSON schema
     * Gets the schema for the JSON API as a yaml file.
     * @param {module:api/InfoApi~specCallback} callback The callback function, accepting three arguments: error, data, response
     */
    spec(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v1/spec', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
