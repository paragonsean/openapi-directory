/**
 * Groundhog Day API
 * This API returns all of North Americaâ€™s prognosticating animals and their yearly weather predictions.
 *
 * The version of the OpenAPI document: 1.2.1
 * Contact: hello@groundhog-day.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Groundhog200Response from '../model/Groundhog200Response';
import Groundhog400Response from '../model/Groundhog400Response';
import Groundhogs200Response from '../model/Groundhogs200Response';

/**
* Groundhogs service.
* @module api/GroundhogsApi
* @version 1.2.1
*/
export default class GroundhogsApi {

    /**
    * Constructs a new GroundhogsApi. 
    * @alias module:api/GroundhogsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the groundhog operation.
     * @callback module:api/GroundhogsApi~groundhogCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Groundhog200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a groundhog by slug
     * Returns a prognosticating animal and its known predictions.
     * @param {String} slug Groundhog name in kebab-case: (eg, lucy-the-lobster)
     * @param {module:api/GroundhogsApi~groundhogCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Groundhog200Response}
     */
    groundhog(slug, callback) {
      let postBody = null;
      // verify the required parameter 'slug' is set
      if (slug === undefined || slug === null) {
        throw new Error("Missing the required parameter 'slug' when calling groundhog");
      }

      let pathParams = {
        'slug': slug
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Groundhog200Response;
      return this.apiClient.callApi(
        '/api/v1/groundhogs/{slug}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the groundhogs operation.
     * @callback module:api/GroundhogsApi~groundhogsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Groundhogs200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all groundhogs
     * Returns all prognosticating animals with their known predictions.
     * @param {Object} opts Optional parameters
     * @param {String} [country] Filter groundhogs by country of origin (USA or Canada).
     * @param {module:model/String} [isGroundhog] Filter groundhogs by type (actual, alive groundhogs, or other prognosticators)
     * @param {module:api/GroundhogsApi~groundhogsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Groundhogs200Response}
     */
    groundhogs(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'country': opts['country'],
        'isGroundhog': opts['isGroundhog']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Groundhogs200Response;
      return this.apiClient.callApi(
        '/api/v1/groundhogs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
