/**
 * Spotify Web API
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SpotifyWebApi);
  }
}(this, function(expect, SpotifyWebApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SpotifyWebApi.DeviceObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DeviceObject', function() {
    it('should create an instance of DeviceObject', function() {
      // uncomment below and update the code to test DeviceObject
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be.a(SpotifyWebApi.DeviceObject);
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be();
    });

    it('should have the property isActive (base name: "is_active")', function() {
      // uncomment below and update the code to test the property isActive
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be();
    });

    it('should have the property isPrivateSession (base name: "is_private_session")', function() {
      // uncomment below and update the code to test the property isPrivateSession
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be();
    });

    it('should have the property isRestricted (base name: "is_restricted")', function() {
      // uncomment below and update the code to test the property isRestricted
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be();
    });

    it('should have the property volumePercent (base name: "volume_percent")', function() {
      // uncomment below and update the code to test the property volumePercent
      //var instance = new SpotifyWebApi.DeviceObject();
      //expect(instance).to.be();
    });

  });

}));
