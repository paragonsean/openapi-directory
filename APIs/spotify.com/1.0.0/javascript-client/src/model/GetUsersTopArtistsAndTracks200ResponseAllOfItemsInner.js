/**
 * Spotify Web API
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ArtistObject from './ArtistObject';
import ExternalIdObject from './ExternalIdObject';
import ExternalUrlObject from './ExternalUrlObject';
import FollowersObject from './FollowersObject';
import ImageObject from './ImageObject';
import SimplifiedAlbumObject from './SimplifiedAlbumObject';
import TrackObject from './TrackObject';
import TrackRestrictionObject from './TrackRestrictionObject';

/**
 * The GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner model module.
 * @module model/GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner
 * @version 1.0.0
 */
class GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner {
    /**
     * Constructs a new <code>GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner</code>.
     * @alias module:model/GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner
     * @param {(module:model/ArtistObject|module:model/TrackObject)} instance The actual instance to initialize GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ArtistObject") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ArtistObject.validateJSON(instance); // throw an exception if no match
                // create ArtistObject from JS object
                this.actualInstance = ArtistObject.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ArtistObject
            errorMessages.push("Failed to construct ArtistObject: " + err)
        }

        try {
            if (typeof instance === "TrackObject") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                TrackObject.validateJSON(instance); // throw an exception if no match
                // create TrackObject from JS object
                this.actualInstance = TrackObject.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into TrackObject
            errorMessages.push("Failed to construct TrackObject: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner` with oneOf schemas ArtistObject, TrackObject. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner` with oneOf schemas ArtistObject, TrackObject. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner} obj Optional instance to populate.
     * @return {module:model/GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner} The populated <code>GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner(data);
    }

    /**
     * Gets the actual instance, which can be <code>ArtistObject</code>, <code>TrackObject</code>.
     * @return {(module:model/ArtistObject|module:model/TrackObject)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>ArtistObject</code>, <code>TrackObject</code>.
     * @param {(module:model/ArtistObject|module:model/TrackObject)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner} An instance of GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.
     */
    static fromJSON = function(json_string){
        return GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * Known external URLs for this track. 
 * @member {module:model/ExternalUrlObject} external_urls
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['external_urls'] = undefined;

/**
 * Information about the followers of the artist. 
 * @member {module:model/FollowersObject} followers
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['followers'] = undefined;

/**
 * A list of the genres the artist is associated with. If not yet classified, the array is empty. 
 * @member {Array.<String>} genres
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['genres'] = undefined;

/**
 * A link to the Web API endpoint providing full details of the track. 
 * @member {String} href
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['href'] = undefined;

/**
 * The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track. 
 * @member {String} id
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['id'] = undefined;

/**
 * Images of the artist in various sizes, widest first. 
 * @member {Array.<module:model/ImageObject>} images
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['images'] = undefined;

/**
 * The name of the track. 
 * @member {String} name
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['name'] = undefined;

/**
 * The popularity of the track. The value will be between 0 and 100, with 100 being the most popular.<br/>The popularity of a track is a value between 0 and 100, with 100 being the most popular. The popularity is calculated by algorithm and is based, in the most part, on the total number of plays the track has had and how recent those plays are.<br/>Generally speaking, songs that are being played a lot now will have a higher popularity than songs that were played a lot in the past. Duplicate tracks (e.g. the same track from a single and an album) are rated independently. Artist and album popularity is derived mathematically from track popularity. _**Note**: the popularity value may lag actual popularity by a few days: the value is not updated in real time._ 
 * @member {Number} popularity
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['popularity'] = undefined;

/**
 * The object type. 
 * @member {module:model/GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.TypeEnum} type
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['type'] = undefined;

/**
 * The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track. 
 * @member {String} uri
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['uri'] = undefined;

/**
 * The album on which the track appears. The album object includes a link in `href` to full information about the album. 
 * @member {module:model/SimplifiedAlbumObject} album
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['album'] = undefined;

/**
 * The artists who performed the track. Each artist object includes a link in `href` to more detailed information about the artist. 
 * @member {Array.<module:model/ArtistObject>} artists
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['artists'] = undefined;

/**
 * A list of the countries in which the track can be played, identified by their [ISO 3166-1 alpha-2](http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) code. 
 * @member {Array.<String>} available_markets
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['available_markets'] = undefined;

/**
 * The disc number (usually `1` unless the album consists of more than one disc). 
 * @member {Number} disc_number
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['disc_number'] = undefined;

/**
 * The track length in milliseconds. 
 * @member {Number} duration_ms
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['duration_ms'] = undefined;

/**
 * Whether or not the track has explicit lyrics ( `true` = yes it does; `false` = no it does not OR unknown). 
 * @member {Boolean} explicit
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['explicit'] = undefined;

/**
 * Known external IDs for the track. 
 * @member {module:model/ExternalIdObject} external_ids
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['external_ids'] = undefined;

/**
 * Whether or not the track is from a local file. 
 * @member {Boolean} is_local
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['is_local'] = undefined;

/**
 * Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied. If `true`, the track is playable in the given market. Otherwise `false`. 
 * @member {Boolean} is_playable
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['is_playable'] = undefined;

/**
 * Part of the response when [Track Relinking](/documentation/web-api/concepts/track-relinking) is applied, and the requested track has been replaced with different track. The track in the `linked_from` object contains information about the originally requested track. 
 * @member {Object} linked_from
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['linked_from'] = undefined;

/**
 * A link to a 30 second preview (MP3 format) of the track. Can be `null` 
 * @member {String} preview_url
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['preview_url'] = undefined;

/**
 * Included in the response when a content restriction is applied. 
 * @member {module:model/TrackRestrictionObject} restrictions
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['restrictions'] = undefined;

/**
 * The number of the track. If an album has several discs, the track number is the number on the specified disc. 
 * @member {Number} track_number
 */
GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.prototype['track_number'] = undefined;


GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner.OneOf = ["ArtistObject", "TrackObject"];

export default GetUsersTopArtistsAndTracks200ResponseAllOfItemsInner;

