/**
 * Spotify Web API
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ChapterObject from '../model/ChapterObject';
import GetMultipleAlbums401Response from '../model/GetMultipleAlbums401Response';
import GetSeveralChapters200Response from '../model/GetSeveralChapters200Response';
import PagingSimplifiedChapterObject from '../model/PagingSimplifiedChapterObject';

/**
* Chapters service.
* @module api/ChaptersApi
* @version 1.0.0
*/
export default class ChaptersApi {

    /**
    * Constructs a new ChaptersApi. 
    * @alias module:api/ChaptersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAChapter operation.
     * @callback module:api/ChaptersApi~getAChapterCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ChapterObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Chapter 
     * Get Spotify catalog information for a single chapter.<br /> **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.** 
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {String} [market] 
     * @param {module:api/ChaptersApi~getAChapterCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ChapterObject}
     */
    getAChapter(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAChapter");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'market': opts['market']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ChapterObject;
      return this.apiClient.callApi(
        '/chapters/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAudiobookChapters_0 operation.
     * @callback module:api/ChaptersApi~getAudiobookChapters_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/PagingSimplifiedChapterObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Audiobook Chapters 
     * Get Spotify catalog information about an audiobook's chapters.<br /> **Note: Audiobooks are only available for the US, UK, Ireland, New Zealand and Australia markets.** 
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {String} [market] 
     * @param {Number} [limit = 20)] 
     * @param {Number} [offset = 0)] 
     * @param {module:api/ChaptersApi~getAudiobookChapters_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagingSimplifiedChapterObject}
     */
    getAudiobookChapters_0(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAudiobookChapters_0");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'market': opts['market'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagingSimplifiedChapterObject;
      return this.apiClient.callApi(
        '/audiobooks/{id}/chapters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSeveralChapters operation.
     * @callback module:api/ChaptersApi~getSeveralChaptersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetSeveralChapters200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Several Chapters 
     * Get Spotify catalog information for several chapters identified by their Spotify IDs.<br /> **Note: Chapters are only available for the US, UK, Ireland, New Zealand and Australia markets.** 
     * @param {String} ids 
     * @param {Object} opts Optional parameters
     * @param {String} [market] 
     * @param {module:api/ChaptersApi~getSeveralChaptersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetSeveralChapters200Response}
     */
    getSeveralChapters(ids, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getSeveralChapters");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': ids,
        'market': opts['market']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetSeveralChapters200Response;
      return this.apiClient.callApi(
        '/chapters', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
