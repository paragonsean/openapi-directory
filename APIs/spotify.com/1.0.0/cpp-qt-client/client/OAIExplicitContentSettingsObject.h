/**
 * Spotify Web API
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExplicitContentSettingsObject.h
 *
 * 
 */

#ifndef OAIExplicitContentSettingsObject_H
#define OAIExplicitContentSettingsObject_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExplicitContentSettingsObject : public OAIObject {
public:
    OAIExplicitContentSettingsObject();
    OAIExplicitContentSettingsObject(QString json);
    ~OAIExplicitContentSettingsObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isFilterEnabled() const;
    void setFilterEnabled(const bool &filter_enabled);
    bool is_filter_enabled_Set() const;
    bool is_filter_enabled_Valid() const;

    bool isFilterLocked() const;
    void setFilterLocked(const bool &filter_locked);
    bool is_filter_locked_Set() const;
    bool is_filter_locked_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_filter_enabled;
    bool m_filter_enabled_isSet;
    bool m_filter_enabled_isValid;

    bool m_filter_locked;
    bool m_filter_locked_isSet;
    bool m_filter_locked_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExplicitContentSettingsObject)

#endif // OAIExplicitContentSettingsObject_H
