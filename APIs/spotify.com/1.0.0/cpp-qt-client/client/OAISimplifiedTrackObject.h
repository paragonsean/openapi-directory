/**
 * Spotify Web API
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimplifiedTrackObject.h
 *
 * 
 */

#ifndef OAISimplifiedTrackObject_H
#define OAISimplifiedTrackObject_H

#include <QJsonObject>

#include "OAIExternalUrlObject.h"
#include "OAILinkedTrackObject.h"
#include "OAISimplifiedArtistObject.h"
#include "OAITrackRestrictionObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISimplifiedArtistObject;
class OAIExternalUrlObject;
class OAILinkedTrackObject;
class OAITrackRestrictionObject;

class OAISimplifiedTrackObject : public OAIObject {
public:
    OAISimplifiedTrackObject();
    OAISimplifiedTrackObject(QString json);
    ~OAISimplifiedTrackObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAISimplifiedArtistObject> getArtists() const;
    void setArtists(const QList<OAISimplifiedArtistObject> &artists);
    bool is_artists_Set() const;
    bool is_artists_Valid() const;

    QList<QString> getAvailableMarkets() const;
    void setAvailableMarkets(const QList<QString> &available_markets);
    bool is_available_markets_Set() const;
    bool is_available_markets_Valid() const;

    qint32 getDiscNumber() const;
    void setDiscNumber(const qint32 &disc_number);
    bool is_disc_number_Set() const;
    bool is_disc_number_Valid() const;

    qint32 getDurationMs() const;
    void setDurationMs(const qint32 &duration_ms);
    bool is_duration_ms_Set() const;
    bool is_duration_ms_Valid() const;

    bool isRExplicit() const;
    void setRExplicit(const bool &r_explicit);
    bool is_r_explicit_Set() const;
    bool is_r_explicit_Valid() const;

    OAIExternalUrlObject getExternalUrls() const;
    void setExternalUrls(const OAIExternalUrlObject &external_urls);
    bool is_external_urls_Set() const;
    bool is_external_urls_Valid() const;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsLocal() const;
    void setIsLocal(const bool &is_local);
    bool is_is_local_Set() const;
    bool is_is_local_Valid() const;

    bool isIsPlayable() const;
    void setIsPlayable(const bool &is_playable);
    bool is_is_playable_Set() const;
    bool is_is_playable_Valid() const;

    OAILinkedTrackObject getLinkedFrom() const;
    void setLinkedFrom(const OAILinkedTrackObject &linked_from);
    bool is_linked_from_Set() const;
    bool is_linked_from_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPreviewUrl() const;
    void setPreviewUrl(const QString &preview_url);
    bool is_preview_url_Set() const;
    bool is_preview_url_Valid() const;

    OAITrackRestrictionObject getRestrictions() const;
    void setRestrictions(const OAITrackRestrictionObject &restrictions);
    bool is_restrictions_Set() const;
    bool is_restrictions_Valid() const;

    qint32 getTrackNumber() const;
    void setTrackNumber(const qint32 &track_number);
    bool is_track_number_Set() const;
    bool is_track_number_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAISimplifiedArtistObject> m_artists;
    bool m_artists_isSet;
    bool m_artists_isValid;

    QList<QString> m_available_markets;
    bool m_available_markets_isSet;
    bool m_available_markets_isValid;

    qint32 m_disc_number;
    bool m_disc_number_isSet;
    bool m_disc_number_isValid;

    qint32 m_duration_ms;
    bool m_duration_ms_isSet;
    bool m_duration_ms_isValid;

    bool m_r_explicit;
    bool m_r_explicit_isSet;
    bool m_r_explicit_isValid;

    OAIExternalUrlObject m_external_urls;
    bool m_external_urls_isSet;
    bool m_external_urls_isValid;

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_local;
    bool m_is_local_isSet;
    bool m_is_local_isValid;

    bool m_is_playable;
    bool m_is_playable_isSet;
    bool m_is_playable_isValid;

    OAILinkedTrackObject m_linked_from;
    bool m_linked_from_isSet;
    bool m_linked_from_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_preview_url;
    bool m_preview_url_isSet;
    bool m_preview_url_isValid;

    OAITrackRestrictionObject m_restrictions;
    bool m_restrictions_isSet;
    bool m_restrictions_isValid;

    qint32 m_track_number;
    bool m_track_number_isSet;
    bool m_track_number_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimplifiedTrackObject)

#endif // OAISimplifiedTrackObject_H
