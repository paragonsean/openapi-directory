# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddTracksToPlaylistRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, position: int=None, uris: List[str]=None):
        """AddTracksToPlaylistRequest - a model defined in OpenAPI

        :param position: The position of this AddTracksToPlaylistRequest.
        :param uris: The uris of this AddTracksToPlaylistRequest.
        """
        self.openapi_types = {
            'position': int,
            'uris': List[str]
        }

        self.attribute_map = {
            'position': 'position',
            'uris': 'uris'
        }

        self._position = position
        self._uris = uris

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddTracksToPlaylistRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The add_tracks_to_playlist_request of this AddTracksToPlaylistRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self):
        """Gets the position of this AddTracksToPlaylistRequest.

        The position to insert the items, a zero-based index. For example, to insert the items in the first position: `position=0` ; to insert the items in the third position: `position=2`. If omitted, the items will be appended to the playlist. Items are added in the order they appear in the uris array. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\"], \"position\": 3}` 

        :return: The position of this AddTracksToPlaylistRequest.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this AddTracksToPlaylistRequest.

        The position to insert the items, a zero-based index. For example, to insert the items in the first position: `position=0` ; to insert the items in the third position: `position=2`. If omitted, the items will be appended to the playlist. Items are added in the order they appear in the uris array. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\"], \"position\": 3}` 

        :param position: The position of this AddTracksToPlaylistRequest.
        :type position: int
        """

        self._position = position

    @property
    def uris(self):
        """Gets the uris of this AddTracksToPlaylistRequest.

        A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\", \"spotify:episode:512ojhOuo1ktJprKbVcKyQ\"]}`<br/>A maximum of 100 items can be added in one request. _**Note**: if the `uris` parameter is present in the query string, any URIs listed here in the body will be ignored._ 

        :return: The uris of this AddTracksToPlaylistRequest.
        :rtype: List[str]
        """
        return self._uris

    @uris.setter
    def uris(self, uris):
        """Sets the uris of this AddTracksToPlaylistRequest.

        A JSON array of the [Spotify URIs](/documentation/web-api/concepts/spotify-uris-ids) to add. For example: `{\"uris\": [\"spotify:track:4iV5W9uYEdYUVa79Axb7Rh\",\"spotify:track:1301WleyT98MSxVHPZCA6M\", \"spotify:episode:512ojhOuo1ktJprKbVcKyQ\"]}`<br/>A maximum of 100 items can be added in one request. _**Note**: if the `uris` parameter is present in the query string, any URIs listed here in the body will be ignored._ 

        :param uris: The uris of this AddTracksToPlaylistRequest.
        :type uris: List[str]
        """

        self._uris = uris
