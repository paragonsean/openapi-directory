# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cursor_paging_simplified_artist_object import CursorPagingSimplifiedArtistObject
from openapi_server import util


class GetFollowed200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artists: CursorPagingSimplifiedArtistObject=None):
        """GetFollowed200Response - a model defined in OpenAPI

        :param artists: The artists of this GetFollowed200Response.
        """
        self.openapi_types = {
            'artists': CursorPagingSimplifiedArtistObject
        }

        self.attribute_map = {
            'artists': 'artists'
        }

        self._artists = artists

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetFollowed200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_followed_200_response of this GetFollowed200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artists(self):
        """Gets the artists of this GetFollowed200Response.


        :return: The artists of this GetFollowed200Response.
        :rtype: CursorPagingSimplifiedArtistObject
        """
        return self._artists

    @artists.setter
    def artists(self, artists):
        """Sets the artists of this GetFollowed200Response.


        :param artists: The artists of this GetFollowed200Response.
        :type artists: CursorPagingSimplifiedArtistObject
        """
        if artists is None:
            raise ValueError("Invalid value for `artists`, must not be `None`")

        self._artists = artists
