# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RecommendationSeedObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, after_filtering_size: int=None, after_relinking_size: int=None, href: str=None, id: str=None, initial_pool_size: int=None, type: str=None):
        """RecommendationSeedObject - a model defined in OpenAPI

        :param after_filtering_size: The after_filtering_size of this RecommendationSeedObject.
        :param after_relinking_size: The after_relinking_size of this RecommendationSeedObject.
        :param href: The href of this RecommendationSeedObject.
        :param id: The id of this RecommendationSeedObject.
        :param initial_pool_size: The initial_pool_size of this RecommendationSeedObject.
        :param type: The type of this RecommendationSeedObject.
        """
        self.openapi_types = {
            'after_filtering_size': int,
            'after_relinking_size': int,
            'href': str,
            'id': str,
            'initial_pool_size': int,
            'type': str
        }

        self.attribute_map = {
            'after_filtering_size': 'afterFilteringSize',
            'after_relinking_size': 'afterRelinkingSize',
            'href': 'href',
            'id': 'id',
            'initial_pool_size': 'initialPoolSize',
            'type': 'type'
        }

        self._after_filtering_size = after_filtering_size
        self._after_relinking_size = after_relinking_size
        self._href = href
        self._id = id
        self._initial_pool_size = initial_pool_size
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RecommendationSeedObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RecommendationSeedObject of this RecommendationSeedObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def after_filtering_size(self):
        """Gets the after_filtering_size of this RecommendationSeedObject.

        The number of tracks available after min\\_\\* and max\\_\\* filters have been applied. 

        :return: The after_filtering_size of this RecommendationSeedObject.
        :rtype: int
        """
        return self._after_filtering_size

    @after_filtering_size.setter
    def after_filtering_size(self, after_filtering_size):
        """Sets the after_filtering_size of this RecommendationSeedObject.

        The number of tracks available after min\\_\\* and max\\_\\* filters have been applied. 

        :param after_filtering_size: The after_filtering_size of this RecommendationSeedObject.
        :type after_filtering_size: int
        """

        self._after_filtering_size = after_filtering_size

    @property
    def after_relinking_size(self):
        """Gets the after_relinking_size of this RecommendationSeedObject.

        The number of tracks available after relinking for regional availability. 

        :return: The after_relinking_size of this RecommendationSeedObject.
        :rtype: int
        """
        return self._after_relinking_size

    @after_relinking_size.setter
    def after_relinking_size(self, after_relinking_size):
        """Sets the after_relinking_size of this RecommendationSeedObject.

        The number of tracks available after relinking for regional availability. 

        :param after_relinking_size: The after_relinking_size of this RecommendationSeedObject.
        :type after_relinking_size: int
        """

        self._after_relinking_size = after_relinking_size

    @property
    def href(self):
        """Gets the href of this RecommendationSeedObject.

        A link to the full track or artist data for this seed. For tracks this will be a link to a Track Object. For artists a link to an Artist Object. For genre seeds, this value will be `null`. 

        :return: The href of this RecommendationSeedObject.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this RecommendationSeedObject.

        A link to the full track or artist data for this seed. For tracks this will be a link to a Track Object. For artists a link to an Artist Object. For genre seeds, this value will be `null`. 

        :param href: The href of this RecommendationSeedObject.
        :type href: str
        """

        self._href = href

    @property
    def id(self):
        """Gets the id of this RecommendationSeedObject.

        The id used to select this seed. This will be the same as the string used in the `seed_artists`, `seed_tracks` or `seed_genres` parameter. 

        :return: The id of this RecommendationSeedObject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this RecommendationSeedObject.

        The id used to select this seed. This will be the same as the string used in the `seed_artists`, `seed_tracks` or `seed_genres` parameter. 

        :param id: The id of this RecommendationSeedObject.
        :type id: str
        """

        self._id = id

    @property
    def initial_pool_size(self):
        """Gets the initial_pool_size of this RecommendationSeedObject.

        The number of recommended tracks available for this seed. 

        :return: The initial_pool_size of this RecommendationSeedObject.
        :rtype: int
        """
        return self._initial_pool_size

    @initial_pool_size.setter
    def initial_pool_size(self, initial_pool_size):
        """Sets the initial_pool_size of this RecommendationSeedObject.

        The number of recommended tracks available for this seed. 

        :param initial_pool_size: The initial_pool_size of this RecommendationSeedObject.
        :type initial_pool_size: int
        """

        self._initial_pool_size = initial_pool_size

    @property
    def type(self):
        """Gets the type of this RecommendationSeedObject.

        The entity type of this seed. One of `artist`, `track` or `genre`. 

        :return: The type of this RecommendationSeedObject.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this RecommendationSeedObject.

        The entity type of this seed. One of `artist`, `track` or `genre`. 

        :param type: The type of this RecommendationSeedObject.
        :type type: str
        """

        self._type = type
