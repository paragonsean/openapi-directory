# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayerErrorReasons(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NO_PREV_TRACK = 'NO_PREV_TRACK'
    NO_NEXT_TRACK = 'NO_NEXT_TRACK'
    NO_SPECIFIC_TRACK = 'NO_SPECIFIC_TRACK'
    ALREADY_PAUSED = 'ALREADY_PAUSED'
    NOT_PAUSED = 'NOT_PAUSED'
    NOT_PLAYING_LOCALLY = 'NOT_PLAYING_LOCALLY'
    NOT_PLAYING_TRACK = 'NOT_PLAYING_TRACK'
    NOT_PLAYING_CONTEXT = 'NOT_PLAYING_CONTEXT'
    ENDLESS_CONTEXT = 'ENDLESS_CONTEXT'
    CONTEXT_DISALLOW = 'CONTEXT_DISALLOW'
    ALREADY_PLAYING = 'ALREADY_PLAYING'
    RATE_LIMITED = 'RATE_LIMITED'
    REMOTE_CONTROL_DISALLOW = 'REMOTE_CONTROL_DISALLOW'
    DEVICE_NOT_CONTROLLABLE = 'DEVICE_NOT_CONTROLLABLE'
    VOLUME_CONTROL_DISALLOW = 'VOLUME_CONTROL_DISALLOW'
    NO_ACTIVE_DEVICE = 'NO_ACTIVE_DEVICE'
    PREMIUM_REQUIRED = 'PREMIUM_REQUIRED'
    UNKNOWN = 'UNKNOWN'

    def __init__(self):
        """PlayerErrorReasons - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerErrorReasons':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayerErrorReasons of this PlayerErrorReasons.
        """
        return util.deserialize_model(dikt, cls)
