# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audiobook_object import AudiobookObject
from openapi_server import util


class GetMultipleAudiobooks200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audiobooks: List[AudiobookObject]=None):
        """GetMultipleAudiobooks200Response - a model defined in OpenAPI

        :param audiobooks: The audiobooks of this GetMultipleAudiobooks200Response.
        """
        self.openapi_types = {
            'audiobooks': List[AudiobookObject]
        }

        self.attribute_map = {
            'audiobooks': 'audiobooks'
        }

        self._audiobooks = audiobooks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMultipleAudiobooks200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_multiple_audiobooks_200_response of this GetMultipleAudiobooks200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audiobooks(self):
        """Gets the audiobooks of this GetMultipleAudiobooks200Response.


        :return: The audiobooks of this GetMultipleAudiobooks200Response.
        :rtype: List[AudiobookObject]
        """
        return self._audiobooks

    @audiobooks.setter
    def audiobooks(self, audiobooks):
        """Sets the audiobooks of this GetMultipleAudiobooks200Response.


        :param audiobooks: The audiobooks of this GetMultipleAudiobooks200Response.
        :type audiobooks: List[AudiobookObject]
        """
        if audiobooks is None:
            raise ValueError("Invalid value for `audiobooks`, must not be `None`")

        self._audiobooks = audiobooks
