# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChangePlaylistDetailsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collaborative: bool=None, description: str=None, name: str=None, public: bool=None):
        """ChangePlaylistDetailsRequest - a model defined in OpenAPI

        :param collaborative: The collaborative of this ChangePlaylistDetailsRequest.
        :param description: The description of this ChangePlaylistDetailsRequest.
        :param name: The name of this ChangePlaylistDetailsRequest.
        :param public: The public of this ChangePlaylistDetailsRequest.
        """
        self.openapi_types = {
            'collaborative': bool,
            'description': str,
            'name': str,
            'public': bool
        }

        self.attribute_map = {
            'collaborative': 'collaborative',
            'description': 'description',
            'name': 'name',
            'public': 'public'
        }

        self._collaborative = collaborative
        self._description = description
        self._name = name
        self._public = public

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangePlaylistDetailsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The change_playlist_details_request of this ChangePlaylistDetailsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collaborative(self):
        """Gets the collaborative of this ChangePlaylistDetailsRequest.

        If `true`, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. <br/> _**Note**: You can only set `collaborative` to `true` on non-public playlists._ 

        :return: The collaborative of this ChangePlaylistDetailsRequest.
        :rtype: bool
        """
        return self._collaborative

    @collaborative.setter
    def collaborative(self, collaborative):
        """Sets the collaborative of this ChangePlaylistDetailsRequest.

        If `true`, the playlist will become collaborative and other users will be able to modify the playlist in their Spotify client. <br/> _**Note**: You can only set `collaborative` to `true` on non-public playlists._ 

        :param collaborative: The collaborative of this ChangePlaylistDetailsRequest.
        :type collaborative: bool
        """

        self._collaborative = collaborative

    @property
    def description(self):
        """Gets the description of this ChangePlaylistDetailsRequest.

        Value for playlist description as displayed in Spotify Clients and in the Web API. 

        :return: The description of this ChangePlaylistDetailsRequest.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ChangePlaylistDetailsRequest.

        Value for playlist description as displayed in Spotify Clients and in the Web API. 

        :param description: The description of this ChangePlaylistDetailsRequest.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this ChangePlaylistDetailsRequest.

        The new name for the playlist, for example `\"My New Playlist Title\"` 

        :return: The name of this ChangePlaylistDetailsRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ChangePlaylistDetailsRequest.

        The new name for the playlist, for example `\"My New Playlist Title\"` 

        :param name: The name of this ChangePlaylistDetailsRequest.
        :type name: str
        """

        self._name = name

    @property
    def public(self):
        """Gets the public of this ChangePlaylistDetailsRequest.

        If `true` the playlist will be public, if `false` it will be private. 

        :return: The public of this ChangePlaylistDetailsRequest.
        :rtype: bool
        """
        return self._public

    @public.setter
    def public(self, public):
        """Sets the public of this ChangePlaylistDetailsRequest.

        If `true` the playlist will be public, if `false` it will be private. 

        :param public: The public of this ChangePlaylistDetailsRequest.
        :type public: bool
        """

        self._public = public
