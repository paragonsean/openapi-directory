# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.paging_object import PagingObject
from openapi_server import util


class GetCategories200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: PagingObject=None):
        """GetCategories200Response - a model defined in OpenAPI

        :param categories: The categories of this GetCategories200Response.
        """
        self.openapi_types = {
            'categories': PagingObject
        }

        self.attribute_map = {
            'categories': 'categories'
        }

        self._categories = categories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetCategories200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_categories_200_response of this GetCategories200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this GetCategories200Response.


        :return: The categories of this GetCategories200Response.
        :rtype: PagingObject
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this GetCategories200Response.


        :param categories: The categories of this GetCategories200Response.
        :type categories: PagingObject
        """
        if categories is None:
            raise ValueError("Invalid value for `categories`, must not be `None`")

        self._categories = categories
