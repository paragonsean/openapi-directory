# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.paging_artist_object import PagingArtistObject
from openapi_server.models.paging_playlist_object import PagingPlaylistObject
from openapi_server.models.paging_simplified_album_object import PagingSimplifiedAlbumObject
from openapi_server.models.paging_simplified_audiobook_object import PagingSimplifiedAudiobookObject
from openapi_server.models.paging_simplified_episode_object import PagingSimplifiedEpisodeObject
from openapi_server.models.paging_simplified_show_object import PagingSimplifiedShowObject
from openapi_server.models.paging_track_object import PagingTrackObject
from openapi_server import util


class Search200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, albums: PagingSimplifiedAlbumObject=None, artists: PagingArtistObject=None, audiobooks: PagingSimplifiedAudiobookObject=None, episodes: PagingSimplifiedEpisodeObject=None, playlists: PagingPlaylistObject=None, shows: PagingSimplifiedShowObject=None, tracks: PagingTrackObject=None):
        """Search200Response - a model defined in OpenAPI

        :param albums: The albums of this Search200Response.
        :param artists: The artists of this Search200Response.
        :param audiobooks: The audiobooks of this Search200Response.
        :param episodes: The episodes of this Search200Response.
        :param playlists: The playlists of this Search200Response.
        :param shows: The shows of this Search200Response.
        :param tracks: The tracks of this Search200Response.
        """
        self.openapi_types = {
            'albums': PagingSimplifiedAlbumObject,
            'artists': PagingArtistObject,
            'audiobooks': PagingSimplifiedAudiobookObject,
            'episodes': PagingSimplifiedEpisodeObject,
            'playlists': PagingPlaylistObject,
            'shows': PagingSimplifiedShowObject,
            'tracks': PagingTrackObject
        }

        self.attribute_map = {
            'albums': 'albums',
            'artists': 'artists',
            'audiobooks': 'audiobooks',
            'episodes': 'episodes',
            'playlists': 'playlists',
            'shows': 'shows',
            'tracks': 'tracks'
        }

        self._albums = albums
        self._artists = artists
        self._audiobooks = audiobooks
        self._episodes = episodes
        self._playlists = playlists
        self._shows = shows
        self._tracks = tracks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Search200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The search_200_response of this Search200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def albums(self):
        """Gets the albums of this Search200Response.


        :return: The albums of this Search200Response.
        :rtype: PagingSimplifiedAlbumObject
        """
        return self._albums

    @albums.setter
    def albums(self, albums):
        """Sets the albums of this Search200Response.


        :param albums: The albums of this Search200Response.
        :type albums: PagingSimplifiedAlbumObject
        """

        self._albums = albums

    @property
    def artists(self):
        """Gets the artists of this Search200Response.


        :return: The artists of this Search200Response.
        :rtype: PagingArtistObject
        """
        return self._artists

    @artists.setter
    def artists(self, artists):
        """Sets the artists of this Search200Response.


        :param artists: The artists of this Search200Response.
        :type artists: PagingArtistObject
        """

        self._artists = artists

    @property
    def audiobooks(self):
        """Gets the audiobooks of this Search200Response.


        :return: The audiobooks of this Search200Response.
        :rtype: PagingSimplifiedAudiobookObject
        """
        return self._audiobooks

    @audiobooks.setter
    def audiobooks(self, audiobooks):
        """Sets the audiobooks of this Search200Response.


        :param audiobooks: The audiobooks of this Search200Response.
        :type audiobooks: PagingSimplifiedAudiobookObject
        """

        self._audiobooks = audiobooks

    @property
    def episodes(self):
        """Gets the episodes of this Search200Response.


        :return: The episodes of this Search200Response.
        :rtype: PagingSimplifiedEpisodeObject
        """
        return self._episodes

    @episodes.setter
    def episodes(self, episodes):
        """Sets the episodes of this Search200Response.


        :param episodes: The episodes of this Search200Response.
        :type episodes: PagingSimplifiedEpisodeObject
        """

        self._episodes = episodes

    @property
    def playlists(self):
        """Gets the playlists of this Search200Response.


        :return: The playlists of this Search200Response.
        :rtype: PagingPlaylistObject
        """
        return self._playlists

    @playlists.setter
    def playlists(self, playlists):
        """Sets the playlists of this Search200Response.


        :param playlists: The playlists of this Search200Response.
        :type playlists: PagingPlaylistObject
        """

        self._playlists = playlists

    @property
    def shows(self):
        """Gets the shows of this Search200Response.


        :return: The shows of this Search200Response.
        :rtype: PagingSimplifiedShowObject
        """
        return self._shows

    @shows.setter
    def shows(self, shows):
        """Sets the shows of this Search200Response.


        :param shows: The shows of this Search200Response.
        :type shows: PagingSimplifiedShowObject
        """

        self._shows = shows

    @property
    def tracks(self):
        """Gets the tracks of this Search200Response.


        :return: The tracks of this Search200Response.
        :rtype: PagingTrackObject
        """
        return self._tracks

    @tracks.setter
    def tracks(self, tracks):
        """Sets the tracks of this Search200Response.


        :param tracks: The tracks of this Search200Response.
        :type tracks: PagingTrackObject
        """

        self._tracks = tracks
