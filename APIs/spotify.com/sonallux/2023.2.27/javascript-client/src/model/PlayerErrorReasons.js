/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class PlayerErrorReasons.
* @enum {}
* @readonly
*/
export default class PlayerErrorReasons {
    
        /**
         * value: "NO_PREV_TRACK"
         * @const
         */
        "NO_PREV_TRACK" = "NO_PREV_TRACK";

    
        /**
         * value: "NO_NEXT_TRACK"
         * @const
         */
        "NO_NEXT_TRACK" = "NO_NEXT_TRACK";

    
        /**
         * value: "NO_SPECIFIC_TRACK"
         * @const
         */
        "NO_SPECIFIC_TRACK" = "NO_SPECIFIC_TRACK";

    
        /**
         * value: "ALREADY_PAUSED"
         * @const
         */
        "ALREADY_PAUSED" = "ALREADY_PAUSED";

    
        /**
         * value: "NOT_PAUSED"
         * @const
         */
        "NOT_PAUSED" = "NOT_PAUSED";

    
        /**
         * value: "NOT_PLAYING_LOCALLY"
         * @const
         */
        "NOT_PLAYING_LOCALLY" = "NOT_PLAYING_LOCALLY";

    
        /**
         * value: "NOT_PLAYING_TRACK"
         * @const
         */
        "NOT_PLAYING_TRACK" = "NOT_PLAYING_TRACK";

    
        /**
         * value: "NOT_PLAYING_CONTEXT"
         * @const
         */
        "NOT_PLAYING_CONTEXT" = "NOT_PLAYING_CONTEXT";

    
        /**
         * value: "ENDLESS_CONTEXT"
         * @const
         */
        "ENDLESS_CONTEXT" = "ENDLESS_CONTEXT";

    
        /**
         * value: "CONTEXT_DISALLOW"
         * @const
         */
        "CONTEXT_DISALLOW" = "CONTEXT_DISALLOW";

    
        /**
         * value: "ALREADY_PLAYING"
         * @const
         */
        "ALREADY_PLAYING" = "ALREADY_PLAYING";

    
        /**
         * value: "RATE_LIMITED"
         * @const
         */
        "RATE_LIMITED" = "RATE_LIMITED";

    
        /**
         * value: "REMOTE_CONTROL_DISALLOW"
         * @const
         */
        "REMOTE_CONTROL_DISALLOW" = "REMOTE_CONTROL_DISALLOW";

    
        /**
         * value: "DEVICE_NOT_CONTROLLABLE"
         * @const
         */
        "DEVICE_NOT_CONTROLLABLE" = "DEVICE_NOT_CONTROLLABLE";

    
        /**
         * value: "VOLUME_CONTROL_DISALLOW"
         * @const
         */
        "VOLUME_CONTROL_DISALLOW" = "VOLUME_CONTROL_DISALLOW";

    
        /**
         * value: "NO_ACTIVE_DEVICE"
         * @const
         */
        "NO_ACTIVE_DEVICE" = "NO_ACTIVE_DEVICE";

    
        /**
         * value: "PREMIUM_REQUIRED"
         * @const
         */
        "PREMIUM_REQUIRED" = "PREMIUM_REQUIRED";

    
        /**
         * value: "UNKNOWN"
         * @const
         */
        "UNKNOWN" = "UNKNOWN";

    

    /**
    * Returns a <code>PlayerErrorReasons</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/PlayerErrorReasons} The enum <code>PlayerErrorReasons</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

