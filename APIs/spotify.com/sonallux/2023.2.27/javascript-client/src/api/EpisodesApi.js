/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EpisodeObject from '../model/EpisodeObject';
import GetMultipleAlbums401Response from '../model/GetMultipleAlbums401Response';
import GetMultipleEpisodes200Response from '../model/GetMultipleEpisodes200Response';
import PagingSavedEpisodeObject from '../model/PagingSavedEpisodeObject';
import PagingSimplifiedEpisodeObject from '../model/PagingSimplifiedEpisodeObject';
import RemoveEpisodesUserRequest from '../model/RemoveEpisodesUserRequest';
import SaveEpisodesUserRequest from '../model/SaveEpisodesUserRequest';

/**
* Episodes service.
* @module api/EpisodesApi
* @version 2023.2.27
*/
export default class EpisodesApi {

    /**
    * Constructs a new EpisodesApi. 
    * @alias module:api/EpisodesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the checkUsersSavedEpisodes operation.
     * @callback module:api/EpisodesApi~checkUsersSavedEpisodesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<Boolean>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check User's Saved Episodes 
     * Check if one or more episodes is already saved in the current Spotify user's 'Your Episodes' library.<br/> This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer).. 
     * @param {String} ids 
     * @param {module:api/EpisodesApi~checkUsersSavedEpisodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<Boolean>}
     */
    checkUsersSavedEpisodes(ids, callback) {
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling checkUsersSavedEpisodes");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': ids
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ['Boolean'];
      return this.apiClient.callApi(
        '/me/episodes/contains', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAShowsEpisodes_0 operation.
     * @callback module:api/EpisodesApi~getAShowsEpisodes_0Callback
     * @param {String} error Error message, if any.
     * @param {module:model/PagingSimplifiedEpisodeObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Show Episodes 
     * Get Spotify catalog information about an showâ€™s episodes. Optional parameters can be used to limit the number of episodes returned. 
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {String} [market] 
     * @param {Number} [limit = 20)] 
     * @param {Number} [offset = 0)] 
     * @param {module:api/EpisodesApi~getAShowsEpisodes_0Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagingSimplifiedEpisodeObject}
     */
    getAShowsEpisodes_0(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAShowsEpisodes_0");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'market': opts['market'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagingSimplifiedEpisodeObject;
      return this.apiClient.callApi(
        '/shows/{id}/episodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAnEpisode operation.
     * @callback module:api/EpisodesApi~getAnEpisodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EpisodeObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Episode 
     * Get Spotify catalog information for a single episode identified by its unique Spotify ID. 
     * @param {String} id 
     * @param {Object} opts Optional parameters
     * @param {String} [market] 
     * @param {module:api/EpisodesApi~getAnEpisodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EpisodeObject}
     */
    getAnEpisode(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getAnEpisode");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'market': opts['market']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EpisodeObject;
      return this.apiClient.callApi(
        '/episodes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getMultipleEpisodes operation.
     * @callback module:api/EpisodesApi~getMultipleEpisodesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetMultipleEpisodes200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Several Episodes 
     * Get Spotify catalog information for several episodes based on their Spotify IDs. 
     * @param {String} ids 
     * @param {Object} opts Optional parameters
     * @param {String} [market] 
     * @param {module:api/EpisodesApi~getMultipleEpisodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetMultipleEpisodes200Response}
     */
    getMultipleEpisodes(ids, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getMultipleEpisodes");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': ids,
        'market': opts['market']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetMultipleEpisodes200Response;
      return this.apiClient.callApi(
        '/episodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsersSavedEpisodes operation.
     * @callback module:api/EpisodesApi~getUsersSavedEpisodesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PagingSavedEpisodeObject} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get User's Saved Episodes 
     * Get a list of the episodes saved in the current Spotify user's library.<br/> This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer). 
     * @param {Object} opts Optional parameters
     * @param {String} [market] 
     * @param {Number} [limit = 20)] 
     * @param {Number} [offset = 0)] 
     * @param {module:api/EpisodesApi~getUsersSavedEpisodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PagingSavedEpisodeObject}
     */
    getUsersSavedEpisodes(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'market': opts['market'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PagingSavedEpisodeObject;
      return this.apiClient.callApi(
        '/me/episodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the removeEpisodesUser operation.
     * @callback module:api/EpisodesApi~removeEpisodesUserCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove User's Saved Episodes 
     * Remove one or more episodes from the current user's library.<br/> This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer). 
     * @param {String} ids 
     * @param {Object} opts Optional parameters
     * @param {module:model/RemoveEpisodesUserRequest} [removeEpisodesUserRequest] 
     * @param {module:api/EpisodesApi~removeEpisodesUserCallback} callback The callback function, accepting three arguments: error, data, response
     */
    removeEpisodesUser(ids, opts, callback) {
      opts = opts || {};
      let postBody = opts['removeEpisodesUserRequest'];
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling removeEpisodesUser");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': ids
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/me/episodes', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the saveEpisodesUser operation.
     * @callback module:api/EpisodesApi~saveEpisodesUserCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Save Episodes for Current User 
     * Save one or more episodes to the current user's library.<br/> This API endpoint is in __beta__ and could change without warning. Please share any feedback that you have, or issues that you discover, in our [developer community forum](https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer). 
     * @param {String} ids 
     * @param {Object} opts Optional parameters
     * @param {module:model/SaveEpisodesUserRequest} [saveEpisodesUserRequest] 
     * @param {module:api/EpisodesApi~saveEpisodesUserCallback} callback The callback function, accepting three arguments: error, data, response
     */
    saveEpisodesUser(ids, opts, callback) {
      opts = opts || {};
      let postBody = opts['saveEpisodesUserRequest'];
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling saveEpisodesUser");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': ids
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth_2_0'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/me/episodes', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
