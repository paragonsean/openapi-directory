/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SpotifyWebApiWithFixesAndImprovementsFromSonallux);
  }
}(this, function(expect, SpotifyWebApiWithFixesAndImprovementsFromSonallux) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SimplifiedShowObject', function() {
    it('should create an instance of SimplifiedShowObject', function() {
      // uncomment below and update the code to test SimplifiedShowObject
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be.a(SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject);
    });

    it('should have the property availableMarkets (base name: "available_markets")', function() {
      // uncomment below and update the code to test the property availableMarkets
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property copyrights (base name: "copyrights")', function() {
      // uncomment below and update the code to test the property copyrights
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property explicit (base name: "explicit")', function() {
      // uncomment below and update the code to test the property explicit
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property externalUrls (base name: "external_urls")', function() {
      // uncomment below and update the code to test the property externalUrls
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property href (base name: "href")', function() {
      // uncomment below and update the code to test the property href
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property htmlDescription (base name: "html_description")', function() {
      // uncomment below and update the code to test the property htmlDescription
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property isExternallyHosted (base name: "is_externally_hosted")', function() {
      // uncomment below and update the code to test the property isExternallyHosted
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property languages (base name: "languages")', function() {
      // uncomment below and update the code to test the property languages
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property mediaType (base name: "media_type")', function() {
      // uncomment below and update the code to test the property mediaType
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property publisher (base name: "publisher")', function() {
      // uncomment below and update the code to test the property publisher
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property totalEpisodes (base name: "total_episodes")', function() {
      // uncomment below and update the code to test the property totalEpisodes
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

    it('should have the property uri (base name: "uri")', function() {
      // uncomment below and update the code to test the property uri
      //var instance = new SpotifyWebApiWithFixesAndImprovementsFromSonallux.SimplifiedShowObject();
      //expect(instance).to.be();
    });

  });

}));
