/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAudioAnalysisObject.h
 *
 * 
 */

#ifndef OAIAudioAnalysisObject_H
#define OAIAudioAnalysisObject_H

#include <QJsonObject>

#include "OAIAudioAnalysisObject_meta.h"
#include "OAIAudioAnalysisObject_track.h"
#include "OAISectionObject.h"
#include "OAISegmentObject.h"
#include "OAITimeIntervalObject.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeIntervalObject;
class OAIAudioAnalysisObject_meta;
class OAISectionObject;
class OAISegmentObject;
class OAIAudioAnalysisObject_track;

class OAIAudioAnalysisObject : public OAIObject {
public:
    OAIAudioAnalysisObject();
    OAIAudioAnalysisObject(QString json);
    ~OAIAudioAnalysisObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITimeIntervalObject> getBars() const;
    void setBars(const QList<OAITimeIntervalObject> &bars);
    bool is_bars_Set() const;
    bool is_bars_Valid() const;

    QList<OAITimeIntervalObject> getBeats() const;
    void setBeats(const QList<OAITimeIntervalObject> &beats);
    bool is_beats_Set() const;
    bool is_beats_Valid() const;

    OAIAudioAnalysisObject_meta getMeta() const;
    void setMeta(const OAIAudioAnalysisObject_meta &meta);
    bool is_meta_Set() const;
    bool is_meta_Valid() const;

    QList<OAISectionObject> getSections() const;
    void setSections(const QList<OAISectionObject> &sections);
    bool is_sections_Set() const;
    bool is_sections_Valid() const;

    QList<OAISegmentObject> getSegments() const;
    void setSegments(const QList<OAISegmentObject> &segments);
    bool is_segments_Set() const;
    bool is_segments_Valid() const;

    QList<OAITimeIntervalObject> getTatums() const;
    void setTatums(const QList<OAITimeIntervalObject> &tatums);
    bool is_tatums_Set() const;
    bool is_tatums_Valid() const;

    OAIAudioAnalysisObject_track getTrack() const;
    void setTrack(const OAIAudioAnalysisObject_track &track);
    bool is_track_Set() const;
    bool is_track_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITimeIntervalObject> m_bars;
    bool m_bars_isSet;
    bool m_bars_isValid;

    QList<OAITimeIntervalObject> m_beats;
    bool m_beats_isSet;
    bool m_beats_isValid;

    OAIAudioAnalysisObject_meta m_meta;
    bool m_meta_isSet;
    bool m_meta_isValid;

    QList<OAISectionObject> m_sections;
    bool m_sections_isSet;
    bool m_sections_isValid;

    QList<OAISegmentObject> m_segments;
    bool m_segments_isSet;
    bool m_segments_isValid;

    QList<OAITimeIntervalObject> m_tatums;
    bool m_tatums_isSet;
    bool m_tatums_isValid;

    OAIAudioAnalysisObject_track m_track;
    bool m_track_isSet;
    bool m_track_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAudioAnalysisObject)

#endif // OAIAudioAnalysisObject_H
