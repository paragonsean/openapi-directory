/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChapterObject.h
 *
 * 
 */

#ifndef OAIChapterObject_H
#define OAIChapterObject_H

#include <QJsonObject>

#include "OAIChapterRestrictionObject.h"
#include "OAIExternalUrlObject.h"
#include "OAIImageObject.h"
#include "OAIResumePointObject.h"
#include "OAISimplifiedAudiobookObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExternalUrlObject;
class OAIImageObject;
class OAIChapterRestrictionObject;
class OAIResumePointObject;
class OAISimplifiedAudiobookObject;

class OAIChapterObject : public OAIObject {
public:
    OAIChapterObject();
    OAIChapterObject(QString json);
    ~OAIChapterObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAudioPreviewUrl() const;
    void setAudioPreviewUrl(const QString &audio_preview_url);
    bool is_audio_preview_url_Set() const;
    bool is_audio_preview_url_Valid() const;

    QList<QString> getAvailableMarkets() const;
    void setAvailableMarkets(const QList<QString> &available_markets);
    bool is_available_markets_Set() const;
    bool is_available_markets_Valid() const;

    qint32 getChapterNumber() const;
    void setChapterNumber(const qint32 &chapter_number);
    bool is_chapter_number_Set() const;
    bool is_chapter_number_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDurationMs() const;
    void setDurationMs(const qint32 &duration_ms);
    bool is_duration_ms_Set() const;
    bool is_duration_ms_Valid() const;

    bool isRExplicit() const;
    void setRExplicit(const bool &r_explicit);
    bool is_r_explicit_Set() const;
    bool is_r_explicit_Valid() const;

    OAIExternalUrlObject getExternalUrls() const;
    void setExternalUrls(const OAIExternalUrlObject &external_urls);
    bool is_external_urls_Set() const;
    bool is_external_urls_Valid() const;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getHtmlDescription() const;
    void setHtmlDescription(const QString &html_description);
    bool is_html_description_Set() const;
    bool is_html_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIImageObject> getImages() const;
    void setImages(const QList<OAIImageObject> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    bool isIsPlayable() const;
    void setIsPlayable(const bool &is_playable);
    bool is_is_playable_Set() const;
    bool is_is_playable_Valid() const;

    QList<QString> getLanguages() const;
    void setLanguages(const QList<QString> &languages);
    bool is_languages_Set() const;
    bool is_languages_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getReleaseDate() const;
    void setReleaseDate(const QString &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    QString getReleaseDatePrecision() const;
    void setReleaseDatePrecision(const QString &release_date_precision);
    bool is_release_date_precision_Set() const;
    bool is_release_date_precision_Valid() const;

    OAIChapterRestrictionObject getRestrictions() const;
    void setRestrictions(const OAIChapterRestrictionObject &restrictions);
    bool is_restrictions_Set() const;
    bool is_restrictions_Valid() const;

    OAIResumePointObject getResumePoint() const;
    void setResumePoint(const OAIResumePointObject &resume_point);
    bool is_resume_point_Set() const;
    bool is_resume_point_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    OAISimplifiedAudiobookObject getAudiobook() const;
    void setAudiobook(const OAISimplifiedAudiobookObject &audiobook);
    bool is_audiobook_Set() const;
    bool is_audiobook_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_audio_preview_url;
    bool m_audio_preview_url_isSet;
    bool m_audio_preview_url_isValid;

    QList<QString> m_available_markets;
    bool m_available_markets_isSet;
    bool m_available_markets_isValid;

    qint32 m_chapter_number;
    bool m_chapter_number_isSet;
    bool m_chapter_number_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_duration_ms;
    bool m_duration_ms_isSet;
    bool m_duration_ms_isValid;

    bool m_r_explicit;
    bool m_r_explicit_isSet;
    bool m_r_explicit_isValid;

    OAIExternalUrlObject m_external_urls;
    bool m_external_urls_isSet;
    bool m_external_urls_isValid;

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_html_description;
    bool m_html_description_isSet;
    bool m_html_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIImageObject> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    bool m_is_playable;
    bool m_is_playable_isSet;
    bool m_is_playable_isValid;

    QList<QString> m_languages;
    bool m_languages_isSet;
    bool m_languages_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    QString m_release_date_precision;
    bool m_release_date_precision_isSet;
    bool m_release_date_precision_isValid;

    OAIChapterRestrictionObject m_restrictions;
    bool m_restrictions_isSet;
    bool m_restrictions_isValid;

    OAIResumePointObject m_resume_point;
    bool m_resume_point_isSet;
    bool m_resume_point_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;

    OAISimplifiedAudiobookObject m_audiobook;
    bool m_audiobook_isSet;
    bool m_audiobook_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChapterObject)

#endif // OAIChapterObject_H
