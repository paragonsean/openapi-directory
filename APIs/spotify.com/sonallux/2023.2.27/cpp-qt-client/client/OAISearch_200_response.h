/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearch_200_response.h
 *
 * 
 */

#ifndef OAISearch_200_response_H
#define OAISearch_200_response_H

#include <QJsonObject>

#include "OAIPagingArtistObject.h"
#include "OAIPagingPlaylistObject.h"
#include "OAIPagingSimplifiedAlbumObject.h"
#include "OAIPagingSimplifiedAudiobookObject.h"
#include "OAIPagingSimplifiedEpisodeObject.h"
#include "OAIPagingSimplifiedShowObject.h"
#include "OAIPagingTrackObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPagingSimplifiedAlbumObject;
class OAIPagingArtistObject;
class OAIPagingSimplifiedAudiobookObject;
class OAIPagingSimplifiedEpisodeObject;
class OAIPagingPlaylistObject;
class OAIPagingSimplifiedShowObject;
class OAIPagingTrackObject;

class OAISearch_200_response : public OAIObject {
public:
    OAISearch_200_response();
    OAISearch_200_response(QString json);
    ~OAISearch_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPagingSimplifiedAlbumObject getAlbums() const;
    void setAlbums(const OAIPagingSimplifiedAlbumObject &albums);
    bool is_albums_Set() const;
    bool is_albums_Valid() const;

    OAIPagingArtistObject getArtists() const;
    void setArtists(const OAIPagingArtistObject &artists);
    bool is_artists_Set() const;
    bool is_artists_Valid() const;

    OAIPagingSimplifiedAudiobookObject getAudiobooks() const;
    void setAudiobooks(const OAIPagingSimplifiedAudiobookObject &audiobooks);
    bool is_audiobooks_Set() const;
    bool is_audiobooks_Valid() const;

    OAIPagingSimplifiedEpisodeObject getEpisodes() const;
    void setEpisodes(const OAIPagingSimplifiedEpisodeObject &episodes);
    bool is_episodes_Set() const;
    bool is_episodes_Valid() const;

    OAIPagingPlaylistObject getPlaylists() const;
    void setPlaylists(const OAIPagingPlaylistObject &playlists);
    bool is_playlists_Set() const;
    bool is_playlists_Valid() const;

    OAIPagingSimplifiedShowObject getShows() const;
    void setShows(const OAIPagingSimplifiedShowObject &shows);
    bool is_shows_Set() const;
    bool is_shows_Valid() const;

    OAIPagingTrackObject getTracks() const;
    void setTracks(const OAIPagingTrackObject &tracks);
    bool is_tracks_Set() const;
    bool is_tracks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPagingSimplifiedAlbumObject m_albums;
    bool m_albums_isSet;
    bool m_albums_isValid;

    OAIPagingArtistObject m_artists;
    bool m_artists_isSet;
    bool m_artists_isValid;

    OAIPagingSimplifiedAudiobookObject m_audiobooks;
    bool m_audiobooks_isSet;
    bool m_audiobooks_isValid;

    OAIPagingSimplifiedEpisodeObject m_episodes;
    bool m_episodes_isSet;
    bool m_episodes_isValid;

    OAIPagingPlaylistObject m_playlists;
    bool m_playlists_isSet;
    bool m_playlists_isValid;

    OAIPagingSimplifiedShowObject m_shows;
    bool m_shows_isSet;
    bool m_shows_isValid;

    OAIPagingTrackObject m_tracks;
    bool m_tracks_isSet;
    bool m_tracks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearch_200_response)

#endif // OAISearch_200_response_H
