/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlayHistoryObject.h
 *
 * 
 */

#ifndef OAIPlayHistoryObject_H
#define OAIPlayHistoryObject_H

#include <QJsonObject>

#include "OAIContextObject.h"
#include "OAITrackObject.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContextObject;
class OAITrackObject;

class OAIPlayHistoryObject : public OAIObject {
public:
    OAIPlayHistoryObject();
    OAIPlayHistoryObject(QString json);
    ~OAIPlayHistoryObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIContextObject getContext() const;
    void setContext(const OAIContextObject &context);
    bool is_context_Set() const;
    bool is_context_Valid() const;

    QDateTime getPlayedAt() const;
    void setPlayedAt(const QDateTime &played_at);
    bool is_played_at_Set() const;
    bool is_played_at_Valid() const;

    OAITrackObject getTrack() const;
    void setTrack(const OAITrackObject &track);
    bool is_track_Set() const;
    bool is_track_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIContextObject m_context;
    bool m_context_isSet;
    bool m_context_isValid;

    QDateTime m_played_at;
    bool m_played_at_isSet;
    bool m_played_at_isValid;

    OAITrackObject m_track;
    bool m_track_isSet;
    bool m_track_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlayHistoryObject)

#endif // OAIPlayHistoryObject_H
