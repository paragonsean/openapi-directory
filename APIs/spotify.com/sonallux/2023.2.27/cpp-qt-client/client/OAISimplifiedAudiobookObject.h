/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISimplifiedAudiobookObject.h
 *
 * 
 */

#ifndef OAISimplifiedAudiobookObject_H
#define OAISimplifiedAudiobookObject_H

#include <QJsonObject>

#include "OAIAuthorObject.h"
#include "OAICopyrightObject.h"
#include "OAIExternalUrlObject.h"
#include "OAIImageObject.h"
#include "OAINarratorObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAuthorObject;
class OAICopyrightObject;
class OAIExternalUrlObject;
class OAIImageObject;
class OAINarratorObject;

class OAISimplifiedAudiobookObject : public OAIObject {
public:
    OAISimplifiedAudiobookObject();
    OAISimplifiedAudiobookObject(QString json);
    ~OAISimplifiedAudiobookObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAuthorObject> getAuthors() const;
    void setAuthors(const QList<OAIAuthorObject> &authors);
    bool is_authors_Set() const;
    bool is_authors_Valid() const;

    QList<QString> getAvailableMarkets() const;
    void setAvailableMarkets(const QList<QString> &available_markets);
    bool is_available_markets_Set() const;
    bool is_available_markets_Valid() const;

    QList<OAICopyrightObject> getCopyrights() const;
    void setCopyrights(const QList<OAICopyrightObject> &copyrights);
    bool is_copyrights_Set() const;
    bool is_copyrights_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEdition() const;
    void setEdition(const QString &edition);
    bool is_edition_Set() const;
    bool is_edition_Valid() const;

    bool isRExplicit() const;
    void setRExplicit(const bool &r_explicit);
    bool is_r_explicit_Set() const;
    bool is_r_explicit_Valid() const;

    OAIExternalUrlObject getExternalUrls() const;
    void setExternalUrls(const OAIExternalUrlObject &external_urls);
    bool is_external_urls_Set() const;
    bool is_external_urls_Valid() const;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getHtmlDescription() const;
    void setHtmlDescription(const QString &html_description);
    bool is_html_description_Set() const;
    bool is_html_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIImageObject> getImages() const;
    void setImages(const QList<OAIImageObject> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QList<QString> getLanguages() const;
    void setLanguages(const QList<QString> &languages);
    bool is_languages_Set() const;
    bool is_languages_Valid() const;

    QString getMediaType() const;
    void setMediaType(const QString &media_type);
    bool is_media_type_Set() const;
    bool is_media_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAINarratorObject> getNarrators() const;
    void setNarrators(const QList<OAINarratorObject> &narrators);
    bool is_narrators_Set() const;
    bool is_narrators_Valid() const;

    QString getPublisher() const;
    void setPublisher(const QString &publisher);
    bool is_publisher_Set() const;
    bool is_publisher_Valid() const;

    qint32 getTotalChapters() const;
    void setTotalChapters(const qint32 &total_chapters);
    bool is_total_chapters_Set() const;
    bool is_total_chapters_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAuthorObject> m_authors;
    bool m_authors_isSet;
    bool m_authors_isValid;

    QList<QString> m_available_markets;
    bool m_available_markets_isSet;
    bool m_available_markets_isValid;

    QList<OAICopyrightObject> m_copyrights;
    bool m_copyrights_isSet;
    bool m_copyrights_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_edition;
    bool m_edition_isSet;
    bool m_edition_isValid;

    bool m_r_explicit;
    bool m_r_explicit_isSet;
    bool m_r_explicit_isValid;

    OAIExternalUrlObject m_external_urls;
    bool m_external_urls_isSet;
    bool m_external_urls_isValid;

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_html_description;
    bool m_html_description_isSet;
    bool m_html_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIImageObject> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QList<QString> m_languages;
    bool m_languages_isSet;
    bool m_languages_isValid;

    QString m_media_type;
    bool m_media_type_isSet;
    bool m_media_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAINarratorObject> m_narrators;
    bool m_narrators_isSet;
    bool m_narrators_isValid;

    QString m_publisher;
    bool m_publisher_isSet;
    bool m_publisher_isValid;

    qint32 m_total_chapters;
    bool m_total_chapters_isSet;
    bool m_total_chapters_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISimplifiedAudiobookObject)

#endif // OAISimplifiedAudiobookObject_H
