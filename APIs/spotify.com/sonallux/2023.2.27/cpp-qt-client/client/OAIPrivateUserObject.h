/**
 * Spotify Web API with fixes and improvements from sonallux
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 2023.2.27
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPrivateUserObject.h
 *
 * 
 */

#ifndef OAIPrivateUserObject_H
#define OAIPrivateUserObject_H

#include <QJsonObject>

#include "OAIExplicitContentSettingsObject.h"
#include "OAIExternalUrlObject.h"
#include "OAIFollowersObject.h"
#include "OAIImageObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExplicitContentSettingsObject;
class OAIExternalUrlObject;
class OAIFollowersObject;
class OAIImageObject;

class OAIPrivateUserObject : public OAIObject {
public:
    OAIPrivateUserObject();
    OAIPrivateUserObject(QString json);
    ~OAIPrivateUserObject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    OAIExplicitContentSettingsObject getExplicitContent() const;
    void setExplicitContent(const OAIExplicitContentSettingsObject &explicit_content);
    bool is_explicit_content_Set() const;
    bool is_explicit_content_Valid() const;

    OAIExternalUrlObject getExternalUrls() const;
    void setExternalUrls(const OAIExternalUrlObject &external_urls);
    bool is_external_urls_Set() const;
    bool is_external_urls_Valid() const;

    OAIFollowersObject getFollowers() const;
    void setFollowers(const OAIFollowersObject &followers);
    bool is_followers_Set() const;
    bool is_followers_Valid() const;

    QString getHref() const;
    void setHref(const QString &href);
    bool is_href_Set() const;
    bool is_href_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIImageObject> getImages() const;
    void setImages(const QList<OAIImageObject> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QString getProduct() const;
    void setProduct(const QString &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUri() const;
    void setUri(const QString &uri);
    bool is_uri_Set() const;
    bool is_uri_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    OAIExplicitContentSettingsObject m_explicit_content;
    bool m_explicit_content_isSet;
    bool m_explicit_content_isValid;

    OAIExternalUrlObject m_external_urls;
    bool m_external_urls_isSet;
    bool m_external_urls_isValid;

    OAIFollowersObject m_followers;
    bool m_followers_isSet;
    bool m_followers_isValid;

    QString m_href;
    bool m_href_isSet;
    bool m_href_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIImageObject> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QString m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_uri;
    bool m_uri_isSet;
    bool m_uri_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPrivateUserObject)

#endif // OAIPrivateUserObject_H
