# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_url_object import ExternalUrlObject
from openapi_server import util


class LinkedTrackObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, external_urls: ExternalUrlObject=None, href: str=None, id: str=None, type: str=None, uri: str=None):
        """LinkedTrackObject - a model defined in OpenAPI

        :param external_urls: The external_urls of this LinkedTrackObject.
        :param href: The href of this LinkedTrackObject.
        :param id: The id of this LinkedTrackObject.
        :param type: The type of this LinkedTrackObject.
        :param uri: The uri of this LinkedTrackObject.
        """
        self.openapi_types = {
            'external_urls': ExternalUrlObject,
            'href': str,
            'id': str,
            'type': str,
            'uri': str
        }

        self.attribute_map = {
            'external_urls': 'external_urls',
            'href': 'href',
            'id': 'id',
            'type': 'type',
            'uri': 'uri'
        }

        self._external_urls = external_urls
        self._href = href
        self._id = id
        self._type = type
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedTrackObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedTrackObject of this LinkedTrackObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def external_urls(self):
        """Gets the external_urls of this LinkedTrackObject.

        Known external URLs for this track. 

        :return: The external_urls of this LinkedTrackObject.
        :rtype: ExternalUrlObject
        """
        return self._external_urls

    @external_urls.setter
    def external_urls(self, external_urls):
        """Sets the external_urls of this LinkedTrackObject.

        Known external URLs for this track. 

        :param external_urls: The external_urls of this LinkedTrackObject.
        :type external_urls: ExternalUrlObject
        """

        self._external_urls = external_urls

    @property
    def href(self):
        """Gets the href of this LinkedTrackObject.

        A link to the Web API endpoint providing full details of the track. 

        :return: The href of this LinkedTrackObject.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this LinkedTrackObject.

        A link to the Web API endpoint providing full details of the track. 

        :param href: The href of this LinkedTrackObject.
        :type href: str
        """

        self._href = href

    @property
    def id(self):
        """Gets the id of this LinkedTrackObject.

        The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track. 

        :return: The id of this LinkedTrackObject.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this LinkedTrackObject.

        The [Spotify ID](/documentation/web-api/concepts/spotify-uris-ids) for the track. 

        :param id: The id of this LinkedTrackObject.
        :type id: str
        """

        self._id = id

    @property
    def type(self):
        """Gets the type of this LinkedTrackObject.

        The object type: \"track\". 

        :return: The type of this LinkedTrackObject.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this LinkedTrackObject.

        The object type: \"track\". 

        :param type: The type of this LinkedTrackObject.
        :type type: str
        """

        self._type = type

    @property
    def uri(self):
        """Gets the uri of this LinkedTrackObject.

        The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track. 

        :return: The uri of this LinkedTrackObject.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this LinkedTrackObject.

        The [Spotify URI](/documentation/web-api/concepts/spotify-uris-ids) for the track. 

        :param uri: The uri of this LinkedTrackObject.
        :type uri: str
        """

        self._uri = uri
