# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.album_object import AlbumObject
from openapi_server import util


class SavedAlbumObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, added_at: datetime=None, album: AlbumObject=None):
        """SavedAlbumObject - a model defined in OpenAPI

        :param added_at: The added_at of this SavedAlbumObject.
        :param album: The album of this SavedAlbumObject.
        """
        self.openapi_types = {
            'added_at': datetime,
            'album': AlbumObject
        }

        self.attribute_map = {
            'added_at': 'added_at',
            'album': 'album'
        }

        self._added_at = added_at
        self._album = album

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SavedAlbumObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SavedAlbumObject of this SavedAlbumObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def added_at(self):
        """Gets the added_at of this SavedAlbumObject.

        The date and time the album was saved Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object. 

        :return: The added_at of this SavedAlbumObject.
        :rtype: datetime
        """
        return self._added_at

    @added_at.setter
    def added_at(self, added_at):
        """Sets the added_at of this SavedAlbumObject.

        The date and time the album was saved Timestamps are returned in ISO 8601 format as Coordinated Universal Time (UTC) with a zero offset: YYYY-MM-DDTHH:MM:SSZ. If the time is imprecise (for example, the date/time of an album release), an additional field indicates the precision; see for example, release_date in an album object. 

        :param added_at: The added_at of this SavedAlbumObject.
        :type added_at: datetime
        """

        self._added_at = added_at

    @property
    def album(self):
        """Gets the album of this SavedAlbumObject.

        Information about the album.

        :return: The album of this SavedAlbumObject.
        :rtype: AlbumObject
        """
        return self._album

    @album.setter
    def album(self, album):
        """Sets the album of this SavedAlbumObject.

        Information about the album.

        :param album: The album of this SavedAlbumObject.
        :type album: AlbumObject
        """

        self._album = album
