# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currently_playing_context_object_item import CurrentlyPlayingContextObjectItem
from openapi_server.models.queue_object_queue_inner import QueueObjectQueueInner
from openapi_server import util


class QueueObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currently_playing: CurrentlyPlayingContextObjectItem=None, queue: List[QueueObjectQueueInner]=None):
        """QueueObject - a model defined in OpenAPI

        :param currently_playing: The currently_playing of this QueueObject.
        :param queue: The queue of this QueueObject.
        """
        self.openapi_types = {
            'currently_playing': CurrentlyPlayingContextObjectItem,
            'queue': List[QueueObjectQueueInner]
        }

        self.attribute_map = {
            'currently_playing': 'currently_playing',
            'queue': 'queue'
        }

        self._currently_playing = currently_playing
        self._queue = queue

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QueueObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The QueueObject of this QueueObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currently_playing(self):
        """Gets the currently_playing of this QueueObject.


        :return: The currently_playing of this QueueObject.
        :rtype: CurrentlyPlayingContextObjectItem
        """
        return self._currently_playing

    @currently_playing.setter
    def currently_playing(self, currently_playing):
        """Sets the currently_playing of this QueueObject.


        :param currently_playing: The currently_playing of this QueueObject.
        :type currently_playing: CurrentlyPlayingContextObjectItem
        """

        self._currently_playing = currently_playing

    @property
    def queue(self):
        """Gets the queue of this QueueObject.

        The tracks or episodes in the queue. Can be empty.

        :return: The queue of this QueueObject.
        :rtype: List[QueueObjectQueueInner]
        """
        return self._queue

    @queue.setter
    def queue(self, queue):
        """Sets the queue of this QueueObject.

        The tracks or episodes in the queue. Can be empty.

        :param queue: The queue of this QueueObject.
        :type queue: List[QueueObjectQueueInner]
        """

        self._queue = queue
