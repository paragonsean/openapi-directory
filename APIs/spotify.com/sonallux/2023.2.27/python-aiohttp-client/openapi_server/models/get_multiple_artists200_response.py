# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artist_object import ArtistObject
from openapi_server import util


class GetMultipleArtists200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artists: List[ArtistObject]=None):
        """GetMultipleArtists200Response - a model defined in OpenAPI

        :param artists: The artists of this GetMultipleArtists200Response.
        """
        self.openapi_types = {
            'artists': List[ArtistObject]
        }

        self.attribute_map = {
            'artists': 'artists'
        }

        self._artists = artists

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMultipleArtists200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The get_multiple_artists_200_response of this GetMultipleArtists200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artists(self):
        """Gets the artists of this GetMultipleArtists200Response.


        :return: The artists of this GetMultipleArtists200Response.
        :rtype: List[ArtistObject]
        """
        return self._artists

    @artists.setter
    def artists(self, artists):
        """Sets the artists of this GetMultipleArtists200Response.


        :param artists: The artists of this GetMultipleArtists200Response.
        :type artists: List[ArtistObject]
        """
        if artists is None:
            raise ValueError("Invalid value for `artists`, must not be `None`")

        self._artists = artists
