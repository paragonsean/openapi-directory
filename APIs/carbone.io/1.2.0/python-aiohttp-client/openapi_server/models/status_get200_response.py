# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StatusGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: float=None, message: str=None, success: bool=None, version: str=None):
        """StatusGet200Response - a model defined in OpenAPI

        :param code: The code of this StatusGet200Response.
        :param message: The message of this StatusGet200Response.
        :param success: The success of this StatusGet200Response.
        :param version: The version of this StatusGet200Response.
        """
        self.openapi_types = {
            'code': float,
            'message': str,
            'success': bool,
            'version': str
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'success': 'success',
            'version': 'version'
        }

        self._code = code
        self._message = message
        self._success = success
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StatusGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _status_get_200_response of this StatusGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this StatusGet200Response.


        :return: The code of this StatusGet200Response.
        :rtype: float
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this StatusGet200Response.


        :param code: The code of this StatusGet200Response.
        :type code: float
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this StatusGet200Response.


        :return: The message of this StatusGet200Response.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this StatusGet200Response.


        :param message: The message of this StatusGet200Response.
        :type message: str
        """

        self._message = message

    @property
    def success(self):
        """Gets the success of this StatusGet200Response.


        :return: The success of this StatusGet200Response.
        :rtype: bool
        """
        return self._success

    @success.setter
    def success(self, success):
        """Sets the success of this StatusGet200Response.


        :param success: The success of this StatusGet200Response.
        :type success: bool
        """

        self._success = success

    @property
    def version(self):
        """Gets the version of this StatusGet200Response.


        :return: The version of this StatusGet200Response.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this StatusGet200Response.


        :param version: The version of this StatusGet200Response.
        :type version: str
        """

        self._version = version
