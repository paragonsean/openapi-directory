openapi: 3.0.3
info:
  contact:
    email: support@carbone.io
    name: Carbone Support
    url: https://help.carbone.io
  description: |-
    Carbone Cloud/On-premise Open API reference.

    For requesting:
    - Carbone Cloud API: find your API key on your [Carbone account](https://account.carbone.io). Home page > Copy the `production` or `testing` API key.
    - Carbone On-premise: Update the `Server URL` on the Open API specification.

    Useful links:
    - [API Flow](https://carbone.io/api-reference.html#quickstart-api-flow)
    - [Integration / SDKs](https://carbone.io/api-reference.html#api-integration)
    - [Generated document storage](https://carbone.io/api-reference.html#report-storage)
    - [Request timeout](https://carbone.io/api-reference.html#api-timeout)
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  title: Carbone API
  version: 1.2.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://carbone-resources.s3.eu-west-3.amazonaws.com/20210630+-+logo_V2.png
  x-origin:
  - format: openapi
    url: https://carbone.io/examples/carboneRenderAPI.OpenAPI.yml
    version: "3.0"
  x-providerName: carbone.io
servers:
- description: Production server
  url: https://api.carbone.io
tags:
- description: Manage templates
  name: template
- description: Manage renders
  name: render
- description: API Status
  name: status
paths:
  /render/{renderId}:
    get:
      description: "Documentation: https://carbone.io/api-reference.html#download-rendered-reports"
      operationId: render_render_id_get
      parameters:
      - description: Unique identifier of the report
        explode: false
        in: path
        name: renderId
        required: true
        schema:
          type: string
        style: simple
      - description: Carbone version
        explode: false
        in: header
        name: carbone-version
        required: true
        schema:
          default: 4
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: Stream of the generated document
          headers:
            content-disposition:
              description: "File name, for instance: 'filename=\"report.pdf\"'. The\
                \ default value is 'report'. The file name can be changed dynamically\
                \ thanks to the `reportName` option when generating a document with\
                \ `POST /render/:templateId`."
              explode: false
              schema:
                type: string
              style: simple
            content-type:
              description: File type
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                example:
                  error: Invalid render ID
                  success: false
                type: object
          description: The `render ID` is not valid
        "401":
          content:
            application/json:
              schema:
                example:
                  error: "Unauthorized, please provide a valid API key on the 'Authorization'\
                    \ header"
                  success: false
                type: object
          description: "Unauthorized, please provide a correct API key on the `Authorization\
            \ ` header. The API key is available on your Carbone account: https://account.carbone.io"
        "404":
          content:
            application/json:
              schema:
                example:
                  error: File not found
                  success: false
                type: object
          description: The file does not exist.
      summary: Retreive a generated document from a render ID.
      tags:
      - render
      x-openapi-router-controller: openapi_server.controllers.render_controller
  /render/{templateId}:
    post:
      description: "Documentation: https://carbone.io/api-reference.html#render-reports"
      operationId: render_template_id_post
      parameters:
      - description: Unique identifier of the template
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      - description: Carbone version
        explode: false
        in: header
        name: carbone-version
        required: true
        schema:
          default: 4
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_render__templateId__post_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_render__templateId__post_200_response'
          description: "On success, a `render ID` is returned, a unique identifier\
            \ for the generated document."
        "400":
          content:
            application/json:
              schema:
                example:
                  error: '''Content-Type'' header is not ''application/json'''
                  success: false
                type: object
          description: "The body request type is not correct, it must be a JSON type\
            \ and the `Content-type` header must be `application/json`"
        "401":
          content:
            application/json:
              schema:
                example:
                  error: "Unauthorized, please provide a valid API key on the 'Authorization'\
                    \ header"
                  success: false
                type: object
          description: "Unauthorized, please provide a correct API key on the `Authorization\
            \ ` header. The API key is available on your Carbone account: https://account.carbone.io"
        "404":
          content:
            application/json:
              schema:
                example:
                  error: Template not found
                  success: false
                type: object
          description: The template is not found
        "422":
          content:
            application/json:
              schema:
                example:
                  error: Missing 'data' property in body
                  success: false
                type: object
          description: The 'data' property is missing on the body request.
        "500":
          content:
            application/json:
              schema:
                example:
                  error: Error while rendering template
                  success: false
                type: object
          description: Something went wrong when merging the JSON data-set into the
            template. The design of the template has an issue.
      security:
      - bearerAuth: []
      summary: "Generate a document from a template ID, and a JSON data-set"
      tags:
      - render
      x-openapi-router-controller: openapi_server.controllers.render_controller
      x-codegen-request-body-name: body
  /status:
    get:
      operationId: status_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_status_get_200_response'
          description: Check the API status and version
        "500":
          description: "Something went wrong, contact support on the chat"
      summary: Fetch the API status and version
      tags:
      - status
      x-openapi-router-controller: openapi_server.controllers.status_controller
  /template:
    post:
      description: "Documentation: https://carbone.io/api-reference.html#add-templates"
      operationId: template_post
      parameters:
      - description: Carbone version
        explode: false
        in: header
        name: carbone-version
        required: true
        schema:
          default: 4
          format: int32
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_template_post_request'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/_template_post_request_1'
        description: "Template File to upload, supported formats: DOCX, XLSX, PPTX,\
          \ ODT, ODS, ODP, ODG, XHTML, IDML, HTML or an XML file"
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_template_post_200_response'
          description: "On success, the `template ID` is returned."
        "400":
          content:
            application/json:
              schema:
                example:
                  error: Content-Type header should be multipart/form-data or application/json
                  success: false
                type: object
          description: "The body request type is not correct, it must be a FormData\
            \ or a JSON. The `Content-type` header must be either `application/json`\
            \ or `multipart/form-data`"
        "401":
          content:
            application/json:
              schema:
                example:
                  error: "Unauthorized, please provide a valid API key on the 'Authorization'\
                    \ header"
                  success: false
                type: object
          description: "Unauthorized, please provide a correct API key on the `Authorization\
            \ ` header. The API key is available on your Carbone account: https://account.carbone.io"
        "415":
          content:
            application/json:
              schema:
                example:
                  error: Template format not supported
                  success: false
                type: object
          description: "Template format not supported, it must be an XML-based document:\
            \ DOCX, XLSX, PPTX, ODT, ODS, ODP, ODG, XHTML, IDML, HTML or an XML file"
        "422":
          content:
            application/json:
              schema:
                example:
                  error: '''template'' field is empty'
                  success: false
                type: object
          description: The `template` field is empty on the body request
      security:
      - bearerAuth: []
      summary: Upload a template.
      tags:
      - template
      x-openapi-router-controller: openapi_server.controllers.template_controller
      x-codegen-request-body-name: body
  /template/{templateId}:
    delete:
      description: "Documentation: https://carbone.io/api-reference.html#delete-templates"
      operationId: template_template_id_delete
      parameters:
      - description: Unique identifier of the template
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      - description: Carbone version
        explode: false
        in: header
        name: carbone-version
        required: true
        schema:
          default: 4
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_template__templateId__delete_200_response'
          description: The template is deleted
        "400":
          content:
            application/json:
              schema:
                example:
                  error: Invalid templateId
                  success: false
                type: object
          description: The `template ID` is not valid
        "401":
          content:
            application/json:
              schema:
                example:
                  error: "Unauthorized, please provide a valid API key on the 'Authorization'\
                    \ header"
                  success: false
                type: object
          description: "Unauthorized, please provide a correct API key on the `Authorization\
            \ ` header. The API key is available on your Carbone account: https://account.carbone.io"
        "404":
          content:
            application/json:
              schema:
                example:
                  error: Template not found
                  success: false
                type: object
          description: The template is not found
      security:
      - bearerAuth: []
      summary: Delete a template from a template ID
      tags:
      - template
      x-openapi-router-controller: openapi_server.controllers.template_controller
    get:
      description: "Documentation: https://carbone.io/api-reference.html#get-templates"
      operationId: template_template_id_get
      parameters:
      - description: Unique identifier of the template
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      - description: Carbone version
        explode: false
        in: header
        name: carbone-version
        required: true
        schema:
          default: 4
          format: int32
          type: integer
        style: simple
      responses:
        "200":
          description: stream of the file content
          headers:
            content-disposition:
              description: "Template name, for instance: 'filename=\"{templateid}.docx\"\
                '."
              explode: false
              schema:
                type: string
              style: simple
            content-type:
              description: File type
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content:
            application/json:
              schema:
                example:
                  error: Invalid templateId
                  success: false
                type: object
          description: The `template ID` is not valid
        "401":
          content:
            application/json:
              schema:
                example:
                  error: "Unauthorized, please provide a valid API key on the 'Authorization'\
                    \ header"
                  success: false
                type: object
          description: "Unauthorized, please provide a correct API key on the `Authorization\
            \ ` header. The API key is available on your Carbone account: https://account.carbone.io"
        "404":
          content:
            application/json:
              schema:
                example:
                  error: Template not found
                  success: false
                type: object
          description: The template is not found
      security:
      - bearerAuth: []
      summary: Download a template from a template ID
      tags:
      - template
      x-openapi-router-controller: openapi_server.controllers.template_controller
components:
  parameters:
    carboneVersion:
      description: Carbone version
      explode: false
      in: header
      name: carbone-version
      required: true
      schema:
        default: 4
        format: int32
        type: integer
      style: simple
    renderId:
      description: Unique identifier of the report
      explode: false
      in: path
      name: renderId
      required: true
      schema:
        type: string
      style: simple
    templateId:
      description: Unique identifier of the template
      explode: false
      in: path
      name: templateId
      required: true
      schema:
        type: string
      style: simple
  responses:
    CResponseError:
      content:
        application/json:
          schema:
            properties:
              data:
                type: object
              success:
                default: false
                type: boolean
            type: object
      description: Error response when the request is invalid.
    FileDoesNotExistError:
      content:
        application/json:
          schema:
            example:
              error: File not found
              success: false
            type: object
      description: The file does not exist.
    GenerateReportError:
      content:
        application/json:
          schema:
            example:
              error: Error while rendering template
              success: false
            type: object
      description: Something went wrong when merging the JSON data-set into the template.
        The design of the template has an issue.
    MissingDataFieldError:
      content:
        application/json:
          schema:
            example:
              error: Missing 'data' property in body
              success: false
            type: object
      description: The 'data' property is missing on the body request.
    MissingTemplateFieldError:
      content:
        application/json:
          schema:
            example:
              error: '''template'' field is empty'
              success: false
            type: object
      description: The `template` field is empty on the body request
    NotFileError:
      content:
        application/json:
          schema:
            example:
              error: Content-Type header should be multipart/form-data or application/json
              success: false
            type: object
      description: "The body request type is not correct, it must be a FormData or\
        \ a JSON. The `Content-type` header must be either `application/json` or `multipart/form-data`"
    NotJsonError:
      content:
        application/json:
          schema:
            example:
              error: '''Content-Type'' header is not ''application/json'''
              success: false
            type: object
      description: "The body request type is not correct, it must be a JSON type and\
        \ the `Content-type` header must be `application/json`"
    RenderIdNotValidError:
      content:
        application/json:
          schema:
            example:
              error: Invalid render ID
              success: false
            type: object
      description: The `render ID` is not valid
    TemplateFormatError:
      content:
        application/json:
          schema:
            example:
              error: Template format not supported
              success: false
            type: object
      description: "Template format not supported, it must be an XML-based document:\
        \ DOCX, XLSX, PPTX, ODT, ODS, ODP, ODG, XHTML, IDML, HTML or an XML file"
    TemplateNotFoundError:
      content:
        application/json:
          schema:
            example:
              error: Template not found
              success: false
            type: object
      description: The template is not found
    UnauthorizedError:
      content:
        application/json:
          schema:
            example:
              error: "Unauthorized, please provide a valid API key on the 'Authorization'\
                \ header"
              success: false
            type: object
      description: "Unauthorized, please provide a correct API key on the `Authorization\
        \ ` header. The API key is available on your Carbone account: https://account.carbone.io"
    templateIdNotValidError:
      content:
        application/json:
          schema:
            example:
              error: Invalid templateId
              success: false
            type: object
      description: The `template ID` is not valid
  schemas:
    _status_get_200_response:
      example:
        code: 200
        message: OK
        success: true
        version: 4.13.0
      properties:
        code:
          type: number
        message:
          type: string
        success:
          type: boolean
        version:
          type: string
      title: _status_get_200_response
      type: object
    _template_post_request_1:
      properties:
        template:
          format: binary
          title: template
          type: string
      required:
      - template
      title: _template_post_request_1
      type: object
    _render__templateId__post_request:
      properties:
        complement:
          description: "Optional - Object|Array, extra data accessible in the template\
            \ with {c.} instead of {d.}"
          example: {}
          title: complement
          type: object
        convertTo:
          description: "Optional - Convert the document into another format. Accepted\
            \ values: ods xlsx xls csv pdf txt odp ppt pptx jpg png odt doc docx txt\
            \ jpg png epub html xml idml. List of supported formats: https://carbone.io/documentation.html#supported-files-and-features-list"
          example: pdf
          title: convertTo
          type: string
        currencyRates:
          description: "Optional - Currency exchange rates for conversions from `currencySource`\
            \ to `currencyTarget`. Learn more: https://carbone.io/documentation.html#formatc-precisionorformat-"
          example:
            EUR: 1
            USD: 1.2
          title: currencyRates
          type: object
        currencySource:
          description: "Optional - Currency source coming from your JSON data. The\
            \ option is used by `formatC` to convert the currency based on the `currencyTarget`\
            \ and `currencyRates`. Learn more: https://carbone.io/documentation.html#formatc-precisionorformat-"
          example: EUR
          title: currencySource
          type: string
        currencyTarget:
          description: "Optional - Target currency when the document is generated.\
            \ The option is used by `formatC` to convert the currency based on the\
            \ `currencySource` and `currencyRates`. Learn more: https://carbone.io/documentation.html#formatc-precisionorformat-"
          example: USD
          title: currencyTarget
          type: string
        data:
          description: Required - ️JSON data-set merged into the template to generate
            a document
          example:
            id: "42"
            name: John
            type: invoice
          title: data
          type: object
        enum:
          description: "Optional - List of enumerations, use it in reports with `convEnum`\
            \ formatters, documentation: https://carbone.io/documentation.html#convenum-type-"
          example: {}
          title: enum
          type: object
        hardRefresh:
          description: "Optional - If true, the report content is refreshed at the\
            \ end of the rendering process. To use this option, `convertTo` has to\
            \ be defined. It is mostly used to refresh a table of content."
          example: false
          title: hardRefresh
          type: boolean
        lang:
          description: "Optional - Locale of the generated doocument, it will used\
            \ for translation `{t()}`, formatting numbers with `:formatN`, and currencies\
            \ `:formatC`. List of supported locales: https://github.com/carboneio/carbone/blob/master/formatters/_locale.js"
          example: fr-fr
          title: lang
          type: string
        reportName:
          description: "Optional - Static or dynamic file name returned on the `content-disposition`\
            \ header when the generated report is fetched with `GET /report/:renderI`.\
            \ Multiple Carbone tags are accepted, such as `{d.type}-{d.date}.pdf`"
          example: "{d.date}.odt"
          title: reportName
          type: string
        timezone:
          description: "Optional - Convert document dates to a timezone. The default\
            \ timezone is `Europe/Paris`. The date must be chained with the `:formatD`\
            \ formatter, for instance `{d.date:formatD(YYYY-MM-DD HH:MM)}`. List of\
            \ accepted timezones (Column TZ identifier): https://en.wikipedia.org/wiki/List_of_tz_database_time_zones"
          example: Europe/Paris
          title: timezone
          type: string
        translations:
          description: "Optional - When the report is generated, all text between\
            \ `{t( )}` is replaced with the corresponding translation. The `lang`\
            \ option is required to select the correct translation. Learn more: https://carbone.io/documentation.html#translations"
          example:
            es:
              one: uno
            fr:
              one: un
          title: translations
          type: object
        variableStr:
          description: "Optional - Predefine alias, related documenation: https://carbone.io/documentation.html#alias"
          example: "{#def = d.id}"
          title: variableStr
          type: string
      required:
      - data
      title: _render__templateId__post_request
      type: object
    _template_post_request:
      properties:
        template:
          example: base64-encoded file contents
          title: template
          type: string
      required:
      - template
      title: _template_post_request
      type: object
    _template_post_200_response:
      example:
        data:
          templateId: templateId
        success: true
      properties:
        data:
          $ref: '#/components/schemas/_template_post_200_response_data'
        success:
          title: success
          type: boolean
      title: _template_post_200_response
      type: object
    _template__templateId__delete_200_response:
      example:
        success: true
      properties:
        success:
          default: true
          title: success
          type: boolean
      title: _template__templateId__delete_200_response
      type: object
    _render__templateId__post_200_response:
      example:
        data:
          renderId: renderId
        success: true
      properties:
        data:
          $ref: '#/components/schemas/_render__templateId__post_200_response_data'
        success:
          default: true
          title: success
          type: boolean
      title: _render__templateId__post_200_response
      type: object
    _template_post_200_response_data:
      example:
        templateId: templateId
      properties:
        templateId:
          title: templateId
          type: string
      title: _template_post_200_response_data
      type: object
    _render__templateId__post_200_response_data:
      example:
        renderId: renderId
      properties:
        renderId:
          title: renderId
          type: string
      title: _render__templateId__post_200_response_data
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: eyJhbGci...
      description: Get you test or production API Key on https://account.carbone.io
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_bearerAuth
x-hasEquivalentPaths: true
