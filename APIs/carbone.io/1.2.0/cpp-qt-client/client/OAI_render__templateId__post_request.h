/**
 * Carbone API
 * Carbone Cloud/On-premise Open API reference.  For requesting: - Carbone Cloud API: find your API key on your [Carbone account](https://account.carbone.io). Home page > Copy the `production` or `testing` API key. - Carbone On-premise: Update the `Server URL` on the Open API specification.  Useful links: - [API Flow](https://carbone.io/api-reference.html#quickstart-api-flow) - [Integration / SDKs](https://carbone.io/api-reference.html#api-integration) - [Generated document storage](https://carbone.io/api-reference.html#report-storage) - [Request timeout](https://carbone.io/api-reference.html#api-timeout)
 *
 * The version of the OpenAPI document: 1.2.0
 * Contact: support@carbone.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_render__templateId__post_request.h
 *
 * 
 */

#ifndef OAI_render__templateId__post_request_H
#define OAI_render__templateId__post_request_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_render__templateId__post_request : public OAIObject {
public:
    OAI_render__templateId__post_request();
    OAI_render__templateId__post_request(QString json);
    ~OAI_render__templateId__post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getComplement() const;
    void setComplement(const OAIObject &complement);
    bool is_complement_Set() const;
    bool is_complement_Valid() const;

    QString getConvertTo() const;
    void setConvertTo(const QString &convert_to);
    bool is_convert_to_Set() const;
    bool is_convert_to_Valid() const;

    OAIObject getCurrencyRates() const;
    void setCurrencyRates(const OAIObject &currency_rates);
    bool is_currency_rates_Set() const;
    bool is_currency_rates_Valid() const;

    QString getCurrencySource() const;
    void setCurrencySource(const QString &currency_source);
    bool is_currency_source_Set() const;
    bool is_currency_source_Valid() const;

    QString getCurrencyTarget() const;
    void setCurrencyTarget(const QString &currency_target);
    bool is_currency_target_Set() const;
    bool is_currency_target_Valid() const;

    OAIObject getData() const;
    void setData(const OAIObject &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    OAIObject getREnum() const;
    void setREnum(const OAIObject &r_enum);
    bool is_r_enum_Set() const;
    bool is_r_enum_Valid() const;

    bool isHardRefresh() const;
    void setHardRefresh(const bool &hard_refresh);
    bool is_hard_refresh_Set() const;
    bool is_hard_refresh_Valid() const;

    QString getLang() const;
    void setLang(const QString &lang);
    bool is_lang_Set() const;
    bool is_lang_Valid() const;

    QString getReportName() const;
    void setReportName(const QString &report_name);
    bool is_report_name_Set() const;
    bool is_report_name_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    OAIObject getTranslations() const;
    void setTranslations(const OAIObject &translations);
    bool is_translations_Set() const;
    bool is_translations_Valid() const;

    QString getVariableStr() const;
    void setVariableStr(const QString &variable_str);
    bool is_variable_str_Set() const;
    bool is_variable_str_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_complement;
    bool m_complement_isSet;
    bool m_complement_isValid;

    QString m_convert_to;
    bool m_convert_to_isSet;
    bool m_convert_to_isValid;

    OAIObject m_currency_rates;
    bool m_currency_rates_isSet;
    bool m_currency_rates_isValid;

    QString m_currency_source;
    bool m_currency_source_isSet;
    bool m_currency_source_isValid;

    QString m_currency_target;
    bool m_currency_target_isSet;
    bool m_currency_target_isValid;

    OAIObject m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    OAIObject m_r_enum;
    bool m_r_enum_isSet;
    bool m_r_enum_isValid;

    bool m_hard_refresh;
    bool m_hard_refresh_isSet;
    bool m_hard_refresh_isValid;

    QString m_lang;
    bool m_lang_isSet;
    bool m_lang_isValid;

    QString m_report_name;
    bool m_report_name_isSet;
    bool m_report_name_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    OAIObject m_translations;
    bool m_translations_isSet;
    bool m_translations_isValid;

    QString m_variable_str;
    bool m_variable_str_isSet;
    bool m_variable_str_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_render__templateId__post_request)

#endif // OAI_render__templateId__post_request_H
