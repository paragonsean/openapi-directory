/**
 * Visual Crossing Weather API
 * Weather Forecast and Historical Weather Data via RESTful API.
 *
 * The version of the OpenAPI document: 4.6
 * Contact: info@visualcrossing.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* WeatherForecast service.
* @module api/WeatherForecastApi
* @version 4.6
*/
export default class WeatherForecastApi {

    /**
    * Constructs a new WeatherForecastApi. 
    * @alias module:api/WeatherForecastApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the visualCrossingWebServicesRestServicesWeatherdataForecastGet operation.
     * @callback module:api/WeatherForecastApi~visualCrossingWebServicesRestServicesWeatherdataForecastGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Weather Forecast API
     * Provides access to weather forecast information. The forecast is available for up to 15 days at the hourly, 12 hour and daily summary level.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [sendAsDatasource] 
     * @param {Boolean} [allowAsynch] 
     * @param {Boolean} [shortColumnNames] 
     * @param {String} [locations] 
     * @param {String} [aggregateHours] 
     * @param {String} [contentType] 
     * @param {String} [unitGroup] 
     * @param {String} [key] 
     * @param {module:api/WeatherForecastApi~visualCrossingWebServicesRestServicesWeatherdataForecastGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    visualCrossingWebServicesRestServicesWeatherdataForecastGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'sendAsDatasource': opts['sendAsDatasource'],
        'allowAsynch': opts['allowAsynch'],
        'shortColumnNames': opts['shortColumnNames'],
        'locations': opts['locations'],
        'aggregateHours': opts['aggregateHours'],
        'contentType': opts['contentType'],
        'unitGroup': opts['unitGroup'],
        'key': opts['key']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      let basePaths = ['https://weather.visualcrossing.com'];
      let basePath = basePaths[0]; // by default use the first one in "servers" defined in OpenAPI
      if (typeof opts['_base_path_index'] !== 'undefined') {
        if (opts['_base_path_index']  >= basePaths.length || opts['_base_path_index'] <  0) {
          throw new Error("Invalid index " + opts['_base_path_index'] + " when selecting the host settings. Must be less than " + basePaths.length);
        }
        basePath = basePaths[opts['_base_path_index']];
      }

      return this.apiClient.callApi(
        '/VisualCrossingWebServices/rest/services/weatherdata/forecast', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, basePath, callback
      );
    }


}
