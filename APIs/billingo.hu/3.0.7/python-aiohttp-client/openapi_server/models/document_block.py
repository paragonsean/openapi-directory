# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DocumentBlock(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_field1: str=None, custom_field2: str=None, id: int=None, name: str=None, prefix: str=None):
        """DocumentBlock - a model defined in OpenAPI

        :param custom_field1: The custom_field1 of this DocumentBlock.
        :param custom_field2: The custom_field2 of this DocumentBlock.
        :param id: The id of this DocumentBlock.
        :param name: The name of this DocumentBlock.
        :param prefix: The prefix of this DocumentBlock.
        """
        self.openapi_types = {
            'custom_field1': str,
            'custom_field2': str,
            'id': int,
            'name': str,
            'prefix': str
        }

        self.attribute_map = {
            'custom_field1': 'custom_field1',
            'custom_field2': 'custom_field2',
            'id': 'id',
            'name': 'name',
            'prefix': 'prefix'
        }

        self._custom_field1 = custom_field1
        self._custom_field2 = custom_field2
        self._id = id
        self._name = name
        self._prefix = prefix

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentBlock':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentBlock of this DocumentBlock.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_field1(self):
        """Gets the custom_field1 of this DocumentBlock.


        :return: The custom_field1 of this DocumentBlock.
        :rtype: str
        """
        return self._custom_field1

    @custom_field1.setter
    def custom_field1(self, custom_field1):
        """Sets the custom_field1 of this DocumentBlock.


        :param custom_field1: The custom_field1 of this DocumentBlock.
        :type custom_field1: str
        """

        self._custom_field1 = custom_field1

    @property
    def custom_field2(self):
        """Gets the custom_field2 of this DocumentBlock.


        :return: The custom_field2 of this DocumentBlock.
        :rtype: str
        """
        return self._custom_field2

    @custom_field2.setter
    def custom_field2(self, custom_field2):
        """Sets the custom_field2 of this DocumentBlock.


        :param custom_field2: The custom_field2 of this DocumentBlock.
        :type custom_field2: str
        """

        self._custom_field2 = custom_field2

    @property
    def id(self):
        """Gets the id of this DocumentBlock.


        :return: The id of this DocumentBlock.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DocumentBlock.


        :param id: The id of this DocumentBlock.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this DocumentBlock.


        :return: The name of this DocumentBlock.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DocumentBlock.


        :param name: The name of this DocumentBlock.
        :type name: str
        """

        self._name = name

    @property
    def prefix(self):
        """Gets the prefix of this DocumentBlock.


        :return: The prefix of this DocumentBlock.
        :rtype: str
        """
        return self._prefix

    @prefix.setter
    def prefix(self, prefix):
        """Sets the prefix of this DocumentBlock.


        :param prefix: The prefix of this DocumentBlock.
        :type prefix: str
        """

        self._prefix = prefix
