# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.currency import Currency
from openapi_server.models.document_item import DocumentItem
from openapi_server.models.document_language import DocumentLanguage
from openapi_server.models.document_notification_status import DocumentNotificationStatus
from openapi_server.models.document_organization import DocumentOrganization
from openapi_server.models.document_settings import DocumentSettings
from openapi_server.models.document_summary import DocumentSummary
from openapi_server.models.document_type import DocumentType
from openapi_server.models.partner import Partner
from openapi_server.models.payment_method import PaymentMethod
from openapi_server.models.payment_status import PaymentStatus
from openapi_server import util


class Document(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, block_id: int=None, cancelled: bool=None, comment: str=None, conversion_rate: float=None, currency: Currency=None, due_date: date=None, electronic: bool=None, fulfillment_date: date=None, gross_total: float=None, id: int=None, invoice_date: date=None, invoice_number: str=None, items: List[DocumentItem]=None, language: DocumentLanguage=None, notification_status: DocumentNotificationStatus=None, organization: DocumentOrganization=None, paid_date: date=None, partner: Partner=None, payment_method: PaymentMethod=None, payment_status: PaymentStatus=None, settings: DocumentSettings=None, summary: DocumentSummary=None, tags: List[str]=None, type: DocumentType=None):
        """Document - a model defined in OpenAPI

        :param block_id: The block_id of this Document.
        :param cancelled: The cancelled of this Document.
        :param comment: The comment of this Document.
        :param conversion_rate: The conversion_rate of this Document.
        :param currency: The currency of this Document.
        :param due_date: The due_date of this Document.
        :param electronic: The electronic of this Document.
        :param fulfillment_date: The fulfillment_date of this Document.
        :param gross_total: The gross_total of this Document.
        :param id: The id of this Document.
        :param invoice_date: The invoice_date of this Document.
        :param invoice_number: The invoice_number of this Document.
        :param items: The items of this Document.
        :param language: The language of this Document.
        :param notification_status: The notification_status of this Document.
        :param organization: The organization of this Document.
        :param paid_date: The paid_date of this Document.
        :param partner: The partner of this Document.
        :param payment_method: The payment_method of this Document.
        :param payment_status: The payment_status of this Document.
        :param settings: The settings of this Document.
        :param summary: The summary of this Document.
        :param tags: The tags of this Document.
        :param type: The type of this Document.
        """
        self.openapi_types = {
            'block_id': int,
            'cancelled': bool,
            'comment': str,
            'conversion_rate': float,
            'currency': Currency,
            'due_date': date,
            'electronic': bool,
            'fulfillment_date': date,
            'gross_total': float,
            'id': int,
            'invoice_date': date,
            'invoice_number': str,
            'items': List[DocumentItem],
            'language': DocumentLanguage,
            'notification_status': DocumentNotificationStatus,
            'organization': DocumentOrganization,
            'paid_date': date,
            'partner': Partner,
            'payment_method': PaymentMethod,
            'payment_status': PaymentStatus,
            'settings': DocumentSettings,
            'summary': DocumentSummary,
            'tags': List[str],
            'type': DocumentType
        }

        self.attribute_map = {
            'block_id': 'block_id',
            'cancelled': 'cancelled',
            'comment': 'comment',
            'conversion_rate': 'conversion_rate',
            'currency': 'currency',
            'due_date': 'due_date',
            'electronic': 'electronic',
            'fulfillment_date': 'fulfillment_date',
            'gross_total': 'gross_total',
            'id': 'id',
            'invoice_date': 'invoice_date',
            'invoice_number': 'invoice_number',
            'items': 'items',
            'language': 'language',
            'notification_status': 'notification_status',
            'organization': 'organization',
            'paid_date': 'paid_date',
            'partner': 'partner',
            'payment_method': 'payment_method',
            'payment_status': 'payment_status',
            'settings': 'settings',
            'summary': 'summary',
            'tags': 'tags',
            'type': 'type'
        }

        self._block_id = block_id
        self._cancelled = cancelled
        self._comment = comment
        self._conversion_rate = conversion_rate
        self._currency = currency
        self._due_date = due_date
        self._electronic = electronic
        self._fulfillment_date = fulfillment_date
        self._gross_total = gross_total
        self._id = id
        self._invoice_date = invoice_date
        self._invoice_number = invoice_number
        self._items = items
        self._language = language
        self._notification_status = notification_status
        self._organization = organization
        self._paid_date = paid_date
        self._partner = partner
        self._payment_method = payment_method
        self._payment_status = payment_status
        self._settings = settings
        self._summary = summary
        self._tags = tags
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Document':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Document of this Document.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def block_id(self):
        """Gets the block_id of this Document.

        DocumentBlock's identifier.

        :return: The block_id of this Document.
        :rtype: int
        """
        return self._block_id

    @block_id.setter
    def block_id(self, block_id):
        """Sets the block_id of this Document.

        DocumentBlock's identifier.

        :param block_id: The block_id of this Document.
        :type block_id: int
        """

        self._block_id = block_id

    @property
    def cancelled(self):
        """Gets the cancelled of this Document.


        :return: The cancelled of this Document.
        :rtype: bool
        """
        return self._cancelled

    @cancelled.setter
    def cancelled(self, cancelled):
        """Sets the cancelled of this Document.


        :param cancelled: The cancelled of this Document.
        :type cancelled: bool
        """

        self._cancelled = cancelled

    @property
    def comment(self):
        """Gets the comment of this Document.


        :return: The comment of this Document.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this Document.


        :param comment: The comment of this Document.
        :type comment: str
        """

        self._comment = comment

    @property
    def conversion_rate(self):
        """Gets the conversion_rate of this Document.


        :return: The conversion_rate of this Document.
        :rtype: float
        """
        return self._conversion_rate

    @conversion_rate.setter
    def conversion_rate(self, conversion_rate):
        """Sets the conversion_rate of this Document.


        :param conversion_rate: The conversion_rate of this Document.
        :type conversion_rate: float
        """

        self._conversion_rate = conversion_rate

    @property
    def currency(self):
        """Gets the currency of this Document.


        :return: The currency of this Document.
        :rtype: Currency
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Document.


        :param currency: The currency of this Document.
        :type currency: Currency
        """

        self._currency = currency

    @property
    def due_date(self):
        """Gets the due_date of this Document.


        :return: The due_date of this Document.
        :rtype: date
        """
        return self._due_date

    @due_date.setter
    def due_date(self, due_date):
        """Sets the due_date of this Document.


        :param due_date: The due_date of this Document.
        :type due_date: date
        """

        self._due_date = due_date

    @property
    def electronic(self):
        """Gets the electronic of this Document.


        :return: The electronic of this Document.
        :rtype: bool
        """
        return self._electronic

    @electronic.setter
    def electronic(self, electronic):
        """Sets the electronic of this Document.


        :param electronic: The electronic of this Document.
        :type electronic: bool
        """

        self._electronic = electronic

    @property
    def fulfillment_date(self):
        """Gets the fulfillment_date of this Document.


        :return: The fulfillment_date of this Document.
        :rtype: date
        """
        return self._fulfillment_date

    @fulfillment_date.setter
    def fulfillment_date(self, fulfillment_date):
        """Sets the fulfillment_date of this Document.


        :param fulfillment_date: The fulfillment_date of this Document.
        :type fulfillment_date: date
        """

        self._fulfillment_date = fulfillment_date

    @property
    def gross_total(self):
        """Gets the gross_total of this Document.

        The document's gross total price.

        :return: The gross_total of this Document.
        :rtype: float
        """
        return self._gross_total

    @gross_total.setter
    def gross_total(self, gross_total):
        """Sets the gross_total of this Document.

        The document's gross total price.

        :param gross_total: The gross_total of this Document.
        :type gross_total: float
        """

        self._gross_total = gross_total

    @property
    def id(self):
        """Gets the id of this Document.

        The document's unique identifier.

        :return: The id of this Document.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Document.

        The document's unique identifier.

        :param id: The id of this Document.
        :type id: int
        """

        self._id = id

    @property
    def invoice_date(self):
        """Gets the invoice_date of this Document.


        :return: The invoice_date of this Document.
        :rtype: date
        """
        return self._invoice_date

    @invoice_date.setter
    def invoice_date(self, invoice_date):
        """Sets the invoice_date of this Document.


        :param invoice_date: The invoice_date of this Document.
        :type invoice_date: date
        """

        self._invoice_date = invoice_date

    @property
    def invoice_number(self):
        """Gets the invoice_number of this Document.

        The document's invoice number.

        :return: The invoice_number of this Document.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this Document.

        The document's invoice number.

        :param invoice_number: The invoice_number of this Document.
        :type invoice_number: str
        """

        self._invoice_number = invoice_number

    @property
    def items(self):
        """Gets the items of this Document.


        :return: The items of this Document.
        :rtype: List[DocumentItem]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Document.


        :param items: The items of this Document.
        :type items: List[DocumentItem]
        """

        self._items = items

    @property
    def language(self):
        """Gets the language of this Document.


        :return: The language of this Document.
        :rtype: DocumentLanguage
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Document.


        :param language: The language of this Document.
        :type language: DocumentLanguage
        """

        self._language = language

    @property
    def notification_status(self):
        """Gets the notification_status of this Document.


        :return: The notification_status of this Document.
        :rtype: DocumentNotificationStatus
        """
        return self._notification_status

    @notification_status.setter
    def notification_status(self, notification_status):
        """Sets the notification_status of this Document.


        :param notification_status: The notification_status of this Document.
        :type notification_status: DocumentNotificationStatus
        """

        self._notification_status = notification_status

    @property
    def organization(self):
        """Gets the organization of this Document.


        :return: The organization of this Document.
        :rtype: DocumentOrganization
        """
        return self._organization

    @organization.setter
    def organization(self, organization):
        """Sets the organization of this Document.


        :param organization: The organization of this Document.
        :type organization: DocumentOrganization
        """

        self._organization = organization

    @property
    def paid_date(self):
        """Gets the paid_date of this Document.


        :return: The paid_date of this Document.
        :rtype: date
        """
        return self._paid_date

    @paid_date.setter
    def paid_date(self, paid_date):
        """Sets the paid_date of this Document.


        :param paid_date: The paid_date of this Document.
        :type paid_date: date
        """

        self._paid_date = paid_date

    @property
    def partner(self):
        """Gets the partner of this Document.


        :return: The partner of this Document.
        :rtype: Partner
        """
        return self._partner

    @partner.setter
    def partner(self, partner):
        """Sets the partner of this Document.


        :param partner: The partner of this Document.
        :type partner: Partner
        """

        self._partner = partner

    @property
    def payment_method(self):
        """Gets the payment_method of this Document.


        :return: The payment_method of this Document.
        :rtype: PaymentMethod
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this Document.


        :param payment_method: The payment_method of this Document.
        :type payment_method: PaymentMethod
        """

        self._payment_method = payment_method

    @property
    def payment_status(self):
        """Gets the payment_status of this Document.


        :return: The payment_status of this Document.
        :rtype: PaymentStatus
        """
        return self._payment_status

    @payment_status.setter
    def payment_status(self, payment_status):
        """Sets the payment_status of this Document.


        :param payment_status: The payment_status of this Document.
        :type payment_status: PaymentStatus
        """

        self._payment_status = payment_status

    @property
    def settings(self):
        """Gets the settings of this Document.


        :return: The settings of this Document.
        :rtype: DocumentSettings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this Document.


        :param settings: The settings of this Document.
        :type settings: DocumentSettings
        """

        self._settings = settings

    @property
    def summary(self):
        """Gets the summary of this Document.


        :return: The summary of this Document.
        :rtype: DocumentSummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this Document.


        :param summary: The summary of this Document.
        :type summary: DocumentSummary
        """

        self._summary = summary

    @property
    def tags(self):
        """Gets the tags of this Document.


        :return: The tags of this Document.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Document.


        :param tags: The tags of this Document.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def type(self):
        """Gets the type of this Document.


        :return: The type of this Document.
        :rtype: DocumentType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Document.


        :param type: The type of this Document.
        :type type: DocumentType
        """

        self._type = type
