# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_vat_rate_summary import DocumentVatRateSummary
from openapi_server import util


class DocumentSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gross_amount_local: float=None, net_amount: float=None, net_amount_local: float=None, vat_amount: float=None, vat_amount_local: float=None, vat_rate_summary: List[DocumentVatRateSummary]=None):
        """DocumentSummary - a model defined in OpenAPI

        :param gross_amount_local: The gross_amount_local of this DocumentSummary.
        :param net_amount: The net_amount of this DocumentSummary.
        :param net_amount_local: The net_amount_local of this DocumentSummary.
        :param vat_amount: The vat_amount of this DocumentSummary.
        :param vat_amount_local: The vat_amount_local of this DocumentSummary.
        :param vat_rate_summary: The vat_rate_summary of this DocumentSummary.
        """
        self.openapi_types = {
            'gross_amount_local': float,
            'net_amount': float,
            'net_amount_local': float,
            'vat_amount': float,
            'vat_amount_local': float,
            'vat_rate_summary': List[DocumentVatRateSummary]
        }

        self.attribute_map = {
            'gross_amount_local': 'gross_amount_local',
            'net_amount': 'net_amount',
            'net_amount_local': 'net_amount_local',
            'vat_amount': 'vat_amount',
            'vat_amount_local': 'vat_amount_local',
            'vat_rate_summary': 'vat_rate_summary'
        }

        self._gross_amount_local = gross_amount_local
        self._net_amount = net_amount
        self._net_amount_local = net_amount_local
        self._vat_amount = vat_amount
        self._vat_amount_local = vat_amount_local
        self._vat_rate_summary = vat_rate_summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentSummary of this DocumentSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gross_amount_local(self):
        """Gets the gross_amount_local of this DocumentSummary.


        :return: The gross_amount_local of this DocumentSummary.
        :rtype: float
        """
        return self._gross_amount_local

    @gross_amount_local.setter
    def gross_amount_local(self, gross_amount_local):
        """Sets the gross_amount_local of this DocumentSummary.


        :param gross_amount_local: The gross_amount_local of this DocumentSummary.
        :type gross_amount_local: float
        """

        self._gross_amount_local = gross_amount_local

    @property
    def net_amount(self):
        """Gets the net_amount of this DocumentSummary.


        :return: The net_amount of this DocumentSummary.
        :rtype: float
        """
        return self._net_amount

    @net_amount.setter
    def net_amount(self, net_amount):
        """Sets the net_amount of this DocumentSummary.


        :param net_amount: The net_amount of this DocumentSummary.
        :type net_amount: float
        """

        self._net_amount = net_amount

    @property
    def net_amount_local(self):
        """Gets the net_amount_local of this DocumentSummary.


        :return: The net_amount_local of this DocumentSummary.
        :rtype: float
        """
        return self._net_amount_local

    @net_amount_local.setter
    def net_amount_local(self, net_amount_local):
        """Sets the net_amount_local of this DocumentSummary.


        :param net_amount_local: The net_amount_local of this DocumentSummary.
        :type net_amount_local: float
        """

        self._net_amount_local = net_amount_local

    @property
    def vat_amount(self):
        """Gets the vat_amount of this DocumentSummary.


        :return: The vat_amount of this DocumentSummary.
        :rtype: float
        """
        return self._vat_amount

    @vat_amount.setter
    def vat_amount(self, vat_amount):
        """Sets the vat_amount of this DocumentSummary.


        :param vat_amount: The vat_amount of this DocumentSummary.
        :type vat_amount: float
        """

        self._vat_amount = vat_amount

    @property
    def vat_amount_local(self):
        """Gets the vat_amount_local of this DocumentSummary.


        :return: The vat_amount_local of this DocumentSummary.
        :rtype: float
        """
        return self._vat_amount_local

    @vat_amount_local.setter
    def vat_amount_local(self, vat_amount_local):
        """Sets the vat_amount_local of this DocumentSummary.


        :param vat_amount_local: The vat_amount_local of this DocumentSummary.
        :type vat_amount_local: float
        """

        self._vat_amount_local = vat_amount_local

    @property
    def vat_rate_summary(self):
        """Gets the vat_rate_summary of this DocumentSummary.


        :return: The vat_rate_summary of this DocumentSummary.
        :rtype: List[DocumentVatRateSummary]
        """
        return self._vat_rate_summary

    @vat_rate_summary.setter
    def vat_rate_summary(self, vat_rate_summary):
        """Sets the vat_rate_summary of this DocumentSummary.


        :param vat_rate_summary: The vat_rate_summary of this DocumentSummary.
        :type vat_rate_summary: List[DocumentVatRateSummary]
        """

        self._vat_rate_summary = vat_rate_summary
