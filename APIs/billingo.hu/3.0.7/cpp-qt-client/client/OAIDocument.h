/**
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.7
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocument.h
 *
 * Document object representing your invoice.
 */

#ifndef OAIDocument_H
#define OAIDocument_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIDocumentItem.h"
#include "OAIDocumentLanguage.h"
#include "OAIDocumentNotificationStatus.h"
#include "OAIDocumentOrganization.h"
#include "OAIDocumentSettings.h"
#include "OAIDocumentSummary.h"
#include "OAIDocumentType.h"
#include "OAIPartner.h"
#include "OAIPaymentMethod.h"
#include "OAIPaymentStatus.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentItem;
class OAIDocumentOrganization;
class OAIPartner;
class OAIDocumentSettings;
class OAIDocumentSummary;

class OAIDocument : public OAIObject {
public:
    OAIDocument();
    OAIDocument(QString json);
    ~OAIDocument() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBlockId() const;
    void setBlockId(const qint32 &block_id);
    bool is_block_id_Set() const;
    bool is_block_id_Valid() const;

    bool isCancelled() const;
    void setCancelled(const bool &cancelled);
    bool is_cancelled_Set() const;
    bool is_cancelled_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    float getConversionRate() const;
    void setConversionRate(const float &conversion_rate);
    bool is_conversion_rate_Set() const;
    bool is_conversion_rate_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDate getDueDate() const;
    void setDueDate(const QDate &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    bool isElectronic() const;
    void setElectronic(const bool &electronic);
    bool is_electronic_Set() const;
    bool is_electronic_Valid() const;

    QDate getFulfillmentDate() const;
    void setFulfillmentDate(const QDate &fulfillment_date);
    bool is_fulfillment_date_Set() const;
    bool is_fulfillment_date_Valid() const;

    float getGrossTotal() const;
    void setGrossTotal(const float &gross_total);
    bool is_gross_total_Set() const;
    bool is_gross_total_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDate getInvoiceDate() const;
    void setInvoiceDate(const QDate &invoice_date);
    bool is_invoice_date_Set() const;
    bool is_invoice_date_Valid() const;

    QString getInvoiceNumber() const;
    void setInvoiceNumber(const QString &invoice_number);
    bool is_invoice_number_Set() const;
    bool is_invoice_number_Valid() const;

    QList<OAIDocumentItem> getItems() const;
    void setItems(const QList<OAIDocumentItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAIDocumentLanguage getLanguage() const;
    void setLanguage(const OAIDocumentLanguage &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    OAIDocumentNotificationStatus getNotificationStatus() const;
    void setNotificationStatus(const OAIDocumentNotificationStatus &notification_status);
    bool is_notification_status_Set() const;
    bool is_notification_status_Valid() const;

    OAIDocumentOrganization getOrganization() const;
    void setOrganization(const OAIDocumentOrganization &organization);
    bool is_organization_Set() const;
    bool is_organization_Valid() const;

    QDate getPaidDate() const;
    void setPaidDate(const QDate &paid_date);
    bool is_paid_date_Set() const;
    bool is_paid_date_Valid() const;

    OAIPartner getPartner() const;
    void setPartner(const OAIPartner &partner);
    bool is_partner_Set() const;
    bool is_partner_Valid() const;

    OAIPaymentMethod getPaymentMethod() const;
    void setPaymentMethod(const OAIPaymentMethod &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    OAIPaymentStatus getPaymentStatus() const;
    void setPaymentStatus(const OAIPaymentStatus &payment_status);
    bool is_payment_status_Set() const;
    bool is_payment_status_Valid() const;

    OAIDocumentSettings getSettings() const;
    void setSettings(const OAIDocumentSettings &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    OAIDocumentSummary getSummary() const;
    void setSummary(const OAIDocumentSummary &summary);
    bool is_summary_Set() const;
    bool is_summary_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    OAIDocumentType getType() const;
    void setType(const OAIDocumentType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_block_id;
    bool m_block_id_isSet;
    bool m_block_id_isValid;

    bool m_cancelled;
    bool m_cancelled_isSet;
    bool m_cancelled_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    float m_conversion_rate;
    bool m_conversion_rate_isSet;
    bool m_conversion_rate_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDate m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    bool m_electronic;
    bool m_electronic_isSet;
    bool m_electronic_isValid;

    QDate m_fulfillment_date;
    bool m_fulfillment_date_isSet;
    bool m_fulfillment_date_isValid;

    float m_gross_total;
    bool m_gross_total_isSet;
    bool m_gross_total_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDate m_invoice_date;
    bool m_invoice_date_isSet;
    bool m_invoice_date_isValid;

    QString m_invoice_number;
    bool m_invoice_number_isSet;
    bool m_invoice_number_isValid;

    QList<OAIDocumentItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAIDocumentLanguage m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    OAIDocumentNotificationStatus m_notification_status;
    bool m_notification_status_isSet;
    bool m_notification_status_isValid;

    OAIDocumentOrganization m_organization;
    bool m_organization_isSet;
    bool m_organization_isValid;

    QDate m_paid_date;
    bool m_paid_date_isSet;
    bool m_paid_date_isValid;

    OAIPartner m_partner;
    bool m_partner_isSet;
    bool m_partner_isValid;

    OAIPaymentMethod m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    OAIPaymentStatus m_payment_status;
    bool m_payment_status_isSet;
    bool m_payment_status_isValid;

    OAIDocumentSettings m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;

    OAIDocumentSummary m_summary;
    bool m_summary_isSet;
    bool m_summary_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    OAIDocumentType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocument)

#endif // OAIDocument_H
