/**
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.7
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDocumentPublicUrl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDocumentPublicUrl::OAIDocumentPublicUrl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDocumentPublicUrl::OAIDocumentPublicUrl() {
    this->initializeModel();
}

OAIDocumentPublicUrl::~OAIDocumentPublicUrl() {}

void OAIDocumentPublicUrl::initializeModel() {

    m_public_url_isSet = false;
    m_public_url_isValid = false;
}

void OAIDocumentPublicUrl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDocumentPublicUrl::fromJsonObject(QJsonObject json) {

    m_public_url_isValid = ::OpenAPI::fromJsonValue(m_public_url, json[QString("public_url")]);
    m_public_url_isSet = !json[QString("public_url")].isNull() && m_public_url_isValid;
}

QString OAIDocumentPublicUrl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDocumentPublicUrl::asJsonObject() const {
    QJsonObject obj;
    if (m_public_url_isSet) {
        obj.insert(QString("public_url"), ::OpenAPI::toJsonValue(m_public_url));
    }
    return obj;
}

QString OAIDocumentPublicUrl::getPublicUrl() const {
    return m_public_url;
}
void OAIDocumentPublicUrl::setPublicUrl(const QString &public_url) {
    m_public_url = public_url;
    m_public_url_isSet = true;
}

bool OAIDocumentPublicUrl::is_public_url_Set() const{
    return m_public_url_isSet;
}

bool OAIDocumentPublicUrl::is_public_url_Valid() const{
    return m_public_url_isValid;
}

bool OAIDocumentPublicUrl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_public_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDocumentPublicUrl::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
