/**
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.7
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocumentInsert.h
 *
 * 
 */

#ifndef OAIDocumentInsert_H
#define OAIDocumentInsert_H

#include <QJsonObject>

#include "OAICurrency.h"
#include "OAIDocumentInsertType.h"
#include "OAIDocumentInsert_items_inner.h"
#include "OAIDocumentLanguage.h"
#include "OAIDocumentSettings.h"
#include "OAIPaymentMethod.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentInsert_items_inner;
class OAIDocumentSettings;

class OAIDocumentInsert : public OAIObject {
public:
    OAIDocumentInsert();
    OAIDocumentInsert(QString json);
    ~OAIDocumentInsert() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBankAccountId() const;
    void setBankAccountId(const qint32 &bank_account_id);
    bool is_bank_account_id_Set() const;
    bool is_bank_account_id_Valid() const;

    qint32 getBlockId() const;
    void setBlockId(const qint32 &block_id);
    bool is_block_id_Set() const;
    bool is_block_id_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    float getConversionRate() const;
    void setConversionRate(const float &conversion_rate);
    bool is_conversion_rate_Set() const;
    bool is_conversion_rate_Valid() const;

    OAICurrency getCurrency() const;
    void setCurrency(const OAICurrency &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDate getDueDate() const;
    void setDueDate(const QDate &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    bool isElectronic() const;
    void setElectronic(const bool &electronic);
    bool is_electronic_Set() const;
    bool is_electronic_Valid() const;

    QDate getFulfillmentDate() const;
    void setFulfillmentDate(const QDate &fulfillment_date);
    bool is_fulfillment_date_Set() const;
    bool is_fulfillment_date_Valid() const;

    QList<OAIDocumentInsert_items_inner> getItems() const;
    void setItems(const QList<OAIDocumentInsert_items_inner> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAIDocumentLanguage getLanguage() const;
    void setLanguage(const OAIDocumentLanguage &language);
    bool is_language_Set() const;
    bool is_language_Valid() const;

    bool isPaid() const;
    void setPaid(const bool &paid);
    bool is_paid_Set() const;
    bool is_paid_Valid() const;

    qint32 getPartnerId() const;
    void setPartnerId(const qint32 &partner_id);
    bool is_partner_id_Set() const;
    bool is_partner_id_Valid() const;

    OAIPaymentMethod getPaymentMethod() const;
    void setPaymentMethod(const OAIPaymentMethod &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    OAIDocumentSettings getSettings() const;
    void setSettings(const OAIDocumentSettings &settings);
    bool is_settings_Set() const;
    bool is_settings_Valid() const;

    OAIDocumentInsertType getType() const;
    void setType(const OAIDocumentInsertType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVendorId() const;
    void setVendorId(const QString &vendor_id);
    bool is_vendor_id_Set() const;
    bool is_vendor_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_bank_account_id;
    bool m_bank_account_id_isSet;
    bool m_bank_account_id_isValid;

    qint32 m_block_id;
    bool m_block_id_isSet;
    bool m_block_id_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    float m_conversion_rate;
    bool m_conversion_rate_isSet;
    bool m_conversion_rate_isValid;

    OAICurrency m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDate m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    bool m_electronic;
    bool m_electronic_isSet;
    bool m_electronic_isValid;

    QDate m_fulfillment_date;
    bool m_fulfillment_date_isSet;
    bool m_fulfillment_date_isValid;

    QList<OAIDocumentInsert_items_inner> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAIDocumentLanguage m_language;
    bool m_language_isSet;
    bool m_language_isValid;

    bool m_paid;
    bool m_paid_isSet;
    bool m_paid_isValid;

    qint32 m_partner_id;
    bool m_partner_id_isSet;
    bool m_partner_id_isValid;

    OAIPaymentMethod m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    OAIDocumentSettings m_settings;
    bool m_settings_isSet;
    bool m_settings_isValid;

    OAIDocumentInsertType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_vendor_id;
    bool m_vendor_id_isSet;
    bool m_vendor_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocumentInsert)

#endif // OAIDocumentInsert_H
