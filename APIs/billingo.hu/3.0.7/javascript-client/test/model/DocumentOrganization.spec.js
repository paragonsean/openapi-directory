/**
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.7
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BillingoApiV3);
  }
}(this, function(expect, BillingoApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BillingoApiV3.DocumentOrganization();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DocumentOrganization', function() {
    it('should create an instance of DocumentOrganization', function() {
      // uncomment below and update the code to test DocumentOrganization
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be.a(BillingoApiV3.DocumentOrganization);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

    it('should have the property bankAccount (base name: "bank_account")', function() {
      // uncomment below and update the code to test the property bankAccount
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

    it('should have the property cashSettled (base name: "cash_settled")', function() {
      // uncomment below and update the code to test the property cashSettled
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

    it('should have the property euTaxNumber (base name: "eu_tax_number")', function() {
      // uncomment below and update the code to test the property euTaxNumber
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

    it('should have the property evNumber (base name: "ev_number")', function() {
      // uncomment below and update the code to test the property evNumber
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

    it('should have the property smallTaxpayer (base name: "small_taxpayer")', function() {
      // uncomment below and update the code to test the property smallTaxpayer
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

    it('should have the property taxNumber (base name: "tax_number")', function() {
      // uncomment below and update the code to test the property taxNumber
      //var instance = new BillingoApiV3.DocumentOrganization();
      //expect(instance).to.be();
    });

  });

}));
