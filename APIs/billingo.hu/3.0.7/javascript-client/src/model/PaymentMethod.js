/**
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.7
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
/**
* Enum class PaymentMethod.
* @enum {}
* @readonly
*/
export default class PaymentMethod {
    
        /**
         * value: "aruhitel"
         * @const
         */
        "aruhitel" = "aruhitel";

    
        /**
         * value: "bankcard"
         * @const
         */
        "bankcard" = "bankcard";

    
        /**
         * value: "barion"
         * @const
         */
        "barion" = "barion";

    
        /**
         * value: "barter"
         * @const
         */
        "barter" = "barter";

    
        /**
         * value: "cash"
         * @const
         */
        "cash" = "cash";

    
        /**
         * value: "cash_on_delivery"
         * @const
         */
        "cash_on_delivery" = "cash_on_delivery";

    
        /**
         * value: "coupon"
         * @const
         */
        "coupon" = "coupon";

    
        /**
         * value: "elore_utalas"
         * @const
         */
        "elore_utalas" = "elore_utalas";

    
        /**
         * value: "ep_kartya"
         * @const
         */
        "ep_kartya" = "ep_kartya";

    
        /**
         * value: "kompenzacio"
         * @const
         */
        "kompenzacio" = "kompenzacio";

    
        /**
         * value: "levonas"
         * @const
         */
        "levonas" = "levonas";

    
        /**
         * value: "online_bankcard"
         * @const
         */
        "online_bankcard" = "online_bankcard";

    
        /**
         * value: "payoneer"
         * @const
         */
        "payoneer" = "payoneer";

    
        /**
         * value: "paypal"
         * @const
         */
        "paypal" = "paypal";

    
        /**
         * value: "paypal_utolag"
         * @const
         */
        "paypal_utolag" = "paypal_utolag";

    
        /**
         * value: "payu"
         * @const
         */
        "payu" = "payu";

    
        /**
         * value: "pick_pack_pont"
         * @const
         */
        "pick_pack_pont" = "pick_pack_pont";

    
        /**
         * value: "postai_csekk"
         * @const
         */
        "postai_csekk" = "postai_csekk";

    
        /**
         * value: "postautalvany"
         * @const
         */
        "postautalvany" = "postautalvany";

    
        /**
         * value: "skrill"
         * @const
         */
        "skrill" = "skrill";

    
        /**
         * value: "szep_card"
         * @const
         */
        "szep_card" = "szep_card";

    
        /**
         * value: "transferwise"
         * @const
         */
        "transferwise" = "transferwise";

    
        /**
         * value: "upwork"
         * @const
         */
        "upwork" = "upwork";

    
        /**
         * value: "utalvany"
         * @const
         */
        "utalvany" = "utalvany";

    
        /**
         * value: "valto"
         * @const
         */
        "valto" = "valto";

    
        /**
         * value: "wire_transfer"
         * @const
         */
        "wire_transfer" = "wire_transfer";

    

    /**
    * Returns a <code>PaymentMethod</code> enum value from a Javascript object name.
    * @param {Object} data The plain JavaScript object containing the name of the enum value.
    * @return {module:model/PaymentMethod} The enum <code>PaymentMethod</code> value.
    */
    static constructFromObject(object) {
        return object;
    }
}

