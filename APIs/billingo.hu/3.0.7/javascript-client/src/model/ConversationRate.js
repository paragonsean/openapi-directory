/**
 * Billingo API v3
 * This is a Billingo API v3 documentation. Our API based on REST software architectural style. API has resource-oriented URLs, accepts JSON-encoded request bodies and returns JSON-encoded responses. To use this API you have to generate a new API key on our [site](https://app.billingo.hu/api-key). After that, you can test your API key on this page.
 *
 * The version of the OpenAPI document: 3.0.7
 * Contact: hello@billingo.hu
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Currency from './Currency';

/**
 * The ConversationRate model module.
 * @module model/ConversationRate
 * @version 3.0.7
 */
class ConversationRate {
    /**
     * Constructs a new <code>ConversationRate</code>.
     * @alias module:model/ConversationRate
     */
    constructor() { 
        
        ConversationRate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ConversationRate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ConversationRate} obj Optional instance to populate.
     * @return {module:model/ConversationRate} The populated <code>ConversationRate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ConversationRate();

            if (data.hasOwnProperty('conversation_rate')) {
                obj['conversation_rate'] = ApiClient.convertToType(data['conversation_rate'], 'Number');
            }
            if (data.hasOwnProperty('from_currency')) {
                obj['from_currency'] = Currency.constructFromObject(data['from_currency']);
            }
            if (data.hasOwnProperty('to_currency')) {
                obj['to_currency'] = Currency.constructFromObject(data['to_currency']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ConversationRate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ConversationRate</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} conversation_rate
 */
ConversationRate.prototype['conversation_rate'] = undefined;

/**
 * @member {module:model/Currency} from_currency
 */
ConversationRate.prototype['from_currency'] = undefined;

/**
 * @member {module:model/Currency} to_currency
 */
ConversationRate.prototype['to_currency'] = undefined;






export default ConversationRate;

