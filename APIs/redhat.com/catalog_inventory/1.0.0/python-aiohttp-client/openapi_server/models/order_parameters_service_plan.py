# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderParametersServicePlan(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, provider_control_parameters: object=None, service_parameters: object=None):
        """OrderParametersServicePlan - a model defined in OpenAPI

        :param provider_control_parameters: The provider_control_parameters of this OrderParametersServicePlan.
        :param service_parameters: The service_parameters of this OrderParametersServicePlan.
        """
        self.openapi_types = {
            'provider_control_parameters': object,
            'service_parameters': object
        }

        self.attribute_map = {
            'provider_control_parameters': 'provider_control_parameters',
            'service_parameters': 'service_parameters'
        }

        self._provider_control_parameters = provider_control_parameters
        self._service_parameters = service_parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderParametersServicePlan':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderParametersServicePlan of this OrderParametersServicePlan.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def provider_control_parameters(self):
        """Gets the provider_control_parameters of this OrderParametersServicePlan.

        The provider specific parameters needed to provision this service. This might include namespaces, special keys

        :return: The provider_control_parameters of this OrderParametersServicePlan.
        :rtype: object
        """
        return self._provider_control_parameters

    @provider_control_parameters.setter
    def provider_control_parameters(self, provider_control_parameters):
        """Sets the provider_control_parameters of this OrderParametersServicePlan.

        The provider specific parameters needed to provision this service. This might include namespaces, special keys

        :param provider_control_parameters: The provider_control_parameters of this OrderParametersServicePlan.
        :type provider_control_parameters: object
        """

        self._provider_control_parameters = provider_control_parameters

    @property
    def service_parameters(self):
        """Gets the service_parameters of this OrderParametersServicePlan.

        JSON object with provisioning parameters

        :return: The service_parameters of this OrderParametersServicePlan.
        :rtype: object
        """
        return self._service_parameters

    @service_parameters.setter
    def service_parameters(self, service_parameters):
        """Sets the service_parameters of this OrderParametersServicePlan.

        JSON object with provisioning parameters

        :param service_parameters: The service_parameters of this OrderParametersServicePlan.
        :type service_parameters: object
        """

        self._service_parameters = service_parameters
