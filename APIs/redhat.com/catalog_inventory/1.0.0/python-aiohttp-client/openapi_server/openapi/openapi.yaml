openapi: 3.0.0
info:
  contact:
    email: support@redhat.com
  description: Catalog Inventory
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Catalog Inventory
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/RedHatInsights/catalog_inventory-api/master/public/doc/openapi-3-v1.0.json
    version: "3.0"
  x-providerName: redhat.com
  x-serviceName: catalog_inventory
servers:
- description: Production Server
  url: "https://cloud.redhat.com/{basePath}"
  variables:
    basePath:
      default: /api/catalog-inventory/v1.0
- description: Development Server
  url: "http://localhost:{port}/{basePath}"
  variables:
    basePath:
      default: /api/catalog-inventory/v1.0
    port:
      default: "3000"
security:
- UserSecurity: []
paths:
  /graphql:
    post:
      description: Performs a GraphQL Query
      operationId: post_graph_ql
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GraphQLRequest'
        description: GraphQL Query Request
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphQLResponse'
          description: GraphQL Query Response
      summary: Perform a GraphQL Query
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /openapi.json:
    get:
      operationId: get_documentation
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: The API document for this version of the API
      summary: Return this API document in JSON format
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /service_credential_types:
    get:
      description: Returns an array of ServiceCredentialType objects
      operationId: list_service_credential_types
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCredentialTypesCollection'
          description: ServiceCredentialTypes collection
      summary: List ServiceCredentialTypes
      tags:
      - ServiceCredentialType
      x-openapi-router-controller: openapi_server.controllers.service_credential_type_controller
  /service_credential_types/{id}:
    get:
      description: Returns a ServiceCredentialType object
      operationId: show_service_credential_type
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCredentialType'
          description: ServiceCredentialType info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing ServiceCredentialType
      tags:
      - ServiceCredentialType
      x-openapi-router-controller: openapi_server.controllers.service_credential_type_controller
  /service_credentials:
    get:
      description: Returns an array of ServiceCredential objects
      operationId: list_service_credentials
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCredentialsCollection'
          description: ServiceCredentials collection
      summary: List ServiceCredentials
      tags:
      - ServiceCredential
      x-openapi-router-controller: openapi_server.controllers.service_credential_controller
  /service_credentials/{id}:
    get:
      description: Returns a ServiceCredential object
      operationId: show_service_credential
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceCredential'
          description: ServiceCredential info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing ServiceCredential
      tags:
      - ServiceCredential
      x-openapi-router-controller: openapi_server.controllers.service_credential_controller
  /service_instances:
    get:
      description: Returns an array of ServiceInstance objects
      operationId: list_service_instances
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstancesCollection'
          description: ServiceInstances collection
      summary: List ServiceInstances
      tags:
      - ServiceInstance
      x-openapi-router-controller: openapi_server.controllers.service_instance_controller
  /service_instances/{id}:
    get:
      description: Returns a ServiceInstance object
      operationId: show_service_instance
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstance'
          description: ServiceInstance info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing ServiceInstance
      tags:
      - ServiceInstance
      x-openapi-router-controller: openapi_server.controllers.service_instance_controller
  /service_inventories:
    get:
      description: Returns an array of ServiceInventory objects
      operationId: list_service_inventories
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInventoriesCollection'
          description: ServiceInventories collection
      summary: List ServiceInventories
      tags:
      - ServiceInventory
      x-openapi-router-controller: openapi_server.controllers.service_inventory_controller
  /service_inventories/{id}:
    get:
      description: Returns a ServiceInventory object
      operationId: show_service_inventory
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInventory'
          description: ServiceInventory info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing ServiceInventory
      tags:
      - ServiceInventory
      x-openapi-router-controller: openapi_server.controllers.service_inventory_controller
  /service_inventories/{id}/tag:
    post:
      description: Tags a ServiceInventory object
      operationId: tag_service_inventory
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Tag'
              type: array
        description: Tag attributes to add
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: ServiceInventory tagged successful
        "304":
          description: Not modified
      summary: Tag a ServiceInventory
      tags:
      - ServiceInventory
      x-openapi-router-controller: openapi_server.controllers.service_inventory_controller
      x-codegen-request-body-name: body
  /service_inventories/{id}/tags:
    get:
      description: Returns an array of Tag objects
      operationId: list_service_inventory_tags
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCollection'
          description: Tags collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List Tags for ServiceInventory
      tags:
      - ServiceInventory
      x-openapi-router-controller: openapi_server.controllers.service_inventory_controller
  /service_inventories/{id}/untag:
    post:
      description: Untags a ServiceInventory object
      operationId: untag_service_inventory
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/Tag'
              type: array
        description: Tag attributes to removed
        required: true
        x-body-name: body
      responses:
        "204":
          description: ServiceInventory untagged successfully
      summary: Untag a ServiceInventory
      tags:
      - ServiceInventory
      x-openapi-router-controller: openapi_server.controllers.service_inventory_controller
      x-codegen-request-body-name: body
  /service_offering_nodes:
    get:
      description: Returns an array of ServiceOfferingNode objects
      operationId: list_service_offering_nodes
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferingNodesCollection'
          description: ServiceOfferingNodes collection
      summary: List ServiceOfferingNodes
      tags:
      - ServiceOfferingNode
      x-openapi-router-controller: openapi_server.controllers.service_offering_node_controller
  /service_offering_nodes/{id}:
    get:
      description: Returns a ServiceOfferingNode object
      operationId: show_service_offering_node
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferingNode'
          description: ServiceOfferingNode info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing ServiceOfferingNode
      tags:
      - ServiceOfferingNode
      x-openapi-router-controller: openapi_server.controllers.service_offering_node_controller
  /service_offerings:
    get:
      description: Returns an array of ServiceOffering objects
      operationId: list_service_offerings
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferingsCollection'
          description: ServiceOfferings collection
      summary: List ServiceOfferings
      tags:
      - ServiceOffering
      x-openapi-router-controller: openapi_server.controllers.service_offering_controller
  /service_offerings/{id}:
    get:
      description: Returns a ServiceOffering object
      operationId: show_service_offering
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOffering'
          description: ServiceOffering info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing ServiceOffering
      tags:
      - ServiceOffering
      x-openapi-router-controller: openapi_server.controllers.service_offering_controller
  /service_offerings/{id}/applied_inventories_tags:
    post:
      description: Returns an array of inventories tags
      operationId: applied_inventories_tags_for_service_offering
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppliedInventoriesParametersServicePlan'
        description: Parameters defining input data for computing inventories
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Tag'
                type: array
          description: Returns an array of inventories tags for the computing result
        "400":
          description: BadRequest
      summary: Invokes computing of ServiceInventories tags for given ServiceOffering
      tags:
      - ServiceOffering
      x-openapi-router-controller: openapi_server.controllers.service_offering_controller
      x-codegen-request-body-name: body
  /service_offerings/{id}/order:
    post:
      description: Returns a Task id
      operationId: order_service_offering
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderParametersServiceOffering'
        description: Order parameters defining the service and provider control
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/orderServiceOffering_200_response'
          description: Returns a task ID for the order
        "400":
          description: BadRequest
      summary: Order an existing ServiceOffering
      tags:
      - ServiceOffering
      x-openapi-router-controller: openapi_server.controllers.service_offering_controller
      x-codegen-request-body-name: body
  /service_offerings/{id}/service_instances:
    get:
      description: Returns an array of ServiceInstance objects
      operationId: list_service_offering_service_instances
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstancesCollection'
          description: ServiceInstances collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServiceInstances for ServiceOffering
      tags:
      - ServiceOffering
      x-openapi-router-controller: openapi_server.controllers.service_offering_controller
  /service_offerings/{id}/service_offering_nodes:
    get:
      description: Returns an array of ServiceOfferingNode objects
      operationId: list_service_offering_service_offering_nodes
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferingNodesCollection'
          description: ServiceOfferingNodes collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServiceOfferingNodes for ServiceOffering
      tags:
      - ServiceOffering
      x-openapi-router-controller: openapi_server.controllers.service_offering_controller
  /service_offerings/{id}/service_plans:
    get:
      description: Returns an array of ServicePlan objects
      operationId: list_service_offering_service_plans
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePlansCollection'
          description: ServicePlans collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServicePlans for ServiceOffering
      tags:
      - ServiceOffering
      x-openapi-router-controller: openapi_server.controllers.service_offering_controller
  /service_plans:
    get:
      description: Returns an array of ServicePlan objects
      operationId: list_service_plans
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePlansCollection'
          description: ServicePlans collection
      summary: List ServicePlans
      tags:
      - ServicePlan
      x-openapi-router-controller: openapi_server.controllers.service_plan_controller
  /service_plans/{id}:
    get:
      description: Returns a ServicePlan object
      operationId: show_service_plan
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePlan'
          description: ServicePlan info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing ServicePlan
      tags:
      - ServicePlan
      x-openapi-router-controller: openapi_server.controllers.service_plan_controller
  /sources:
    get:
      description: Returns an array of Source objects
      operationId: list_sources
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SourcesCollection'
          description: Sources collection
      summary: List Sources
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}:
    get:
      description: Returns a Source object
      operationId: show_source
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Source'
          description: Source info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/incremental_refresh:
    patch:
      description: Incremental Refresh a source object
      operationId: incremental_refresh_source
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "204":
          description: "Updated, no content"
        "400":
          description: Bad request
        "404":
          description: Not found
        "429":
          description: Too many requests
      summary: Incremental Refresh an existing Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/refresh:
    patch:
      description: Refresh a source object
      operationId: refresh_source
      parameters:
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "204":
          description: "Updated, no content"
        "400":
          description: Bad request
        "404":
          description: Not found
        "429":
          description: Too many requests
      summary: ' Refresh an existing Source'
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/service_instances:
    get:
      description: Returns an array of ServiceInstance objects
      operationId: list_source_service_instances
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInstancesCollection'
          description: ServiceInstances collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServiceInstances for Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/service_inventories:
    get:
      description: Returns an array of ServiceInventory objects
      operationId: list_source_service_inventories
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInventoriesCollection'
          description: ServiceInventories collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServiceInventories for Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/service_offering_nodes:
    get:
      description: Returns an array of ServiceOfferingNode objects
      operationId: list_source_service_offering_nodes
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferingNodesCollection'
          description: ServiceOfferingNodes collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServiceOfferingNodes for Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/service_offerings:
    get:
      description: Returns an array of ServiceOffering objects
      operationId: list_source_service_offerings
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceOfferingsCollection'
          description: ServiceOfferings collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServiceOfferings for Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/service_plans:
    get:
      description: Returns an array of ServicePlan objects
      operationId: list_source_service_plans
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePlansCollection'
          description: ServicePlans collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List ServicePlans for Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /sources/{id}/tasks:
    get:
      description: Returns an array of Task objects
      operationId: list_source_tasks
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      - description: ID of the resource
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: ^\d+$
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksCollection'
          description: Tasks collection
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: List Tasks for Source
      tags:
      - Source
      x-openapi-router-controller: openapi_server.controllers.source_controller
  /tags:
    get:
      description: Returns an array of Tag objects
      operationId: list_tags
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsCollection'
          description: Tags collection
      summary: List Tags
      tags:
      - Tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /tasks:
    get:
      description: Returns an array of Task objects
      operationId: list_tasks
      parameters:
      - description: The numbers of items to return per page.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 100
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The number of items to skip before starting to collect the result
          set.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          minimum: 0
          type: integer
        style: form
      - description: Filter for querying collections.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: object
        style: deepObject
      - description: The list of attribute and order to sort the result set by.
        explode: true
        in: query
        name: sort_by
        required: false
        schema:
          type: object
        style: deepObject
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TasksCollection'
          description: Tasks collection
      summary: List Tasks
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
  /tasks/{id}:
    get:
      description: Returns a Task object
      operationId: show_task
      parameters:
      - description: UUID of task
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Task info
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Show an existing Task
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
    patch:
      description: Updates a Task object
      operationId: update_task
      parameters:
      - description: UUID of task
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
        description: Task attributes to update
        required: true
        x-body-name: body
      responses:
        "204":
          description: "Updated, no content"
        "400":
          description: Bad request
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorNotFound'
          description: Not found
      summary: Update an existing Task
      tags:
      - Task
      x-openapi-router-controller: openapi_server.controllers.task_controller
      x-codegen-request-body-name: body
components:
  parameters:
    ID:
      description: ID of the resource
      explode: false
      in: path
      name: id
      required: true
      schema:
        pattern: ^\d+$
        type: string
      style: simple
    QueryFilter:
      description: Filter for querying collections.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        type: object
      style: deepObject
    QueryLimit:
      description: The numbers of items to return per page.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 100
        maximum: 1000
        minimum: 1
        type: integer
      style: form
    QueryOffset:
      description: The number of items to skip before starting to collect the result
        set.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        minimum: 0
        type: integer
      style: form
    QuerySortBy:
      description: The list of attribute and order to sort the result set by.
      explode: true
      in: query
      name: sort_by
      required: false
      schema:
        type: object
      style: deepObject
    UUID:
      description: UUID of task
      explode: false
      in: path
      name: id
      required: true
      schema:
        pattern: "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"
        type: string
      style: simple
  schemas:
    AppliedInventoriesParametersServicePlan:
      additionalProperties: false
      example:
        service_parameters: "{}"
      properties:
        service_parameters:
          description: The provider specific parameters needed to compute list of
            used service inventories
          title: service_parameters
          type: object
      title: AppliedInventoriesParametersServicePlan
      type: object
    CheckAvailabilityTask:
      $ref: '#/components/schemas/Task'
    CollectionLinks:
      example:
        next: next
        last: last
        prev: prev
        first: first
      properties:
        first:
          title: first
          type: string
        last:
          title: last
          type: string
        next:
          title: next
          type: string
        prev:
          title: prev
          type: string
      title: CollectionLinks
      type: object
    CollectionMetadata:
      example:
        offset: 1
        count: 0
        limit: 6
      properties:
        count:
          title: count
          type: integer
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
      title: CollectionMetadata
      type: object
    ErrorNotFound:
      example:
        errors:
        - detail: Record not found
          status: "404"
        - detail: Record not found
          status: "404"
      properties:
        errors:
          items:
            $ref: '#/components/schemas/ErrorNotFound_errors_inner'
          title: errors
          type: array
      title: ErrorNotFound
      type: object
    FullRefreshPersisterTask:
      $ref: '#/components/schemas/Task'
    FullRefreshUploadTask:
      $ref: '#/components/schemas/Task'
    GraphQLRequest:
      example:
        variables: "{}"
        query: "{}"
        operationName: ""
      properties:
        operationName:
          default: ""
          description: "If the Query contains several named operations, the operationName\
            \ controls which one should be executed"
          title: operationName
          type: string
        query:
          default: "{}"
          description: The GraphQL query
          title: query
          type: string
        variables:
          description: Optional Query variables
          nullable: true
          title: variables
          type: object
      required:
      - query
      title: GraphQLRequest
      type: object
    GraphQLResponse:
      example:
        data: "{}"
        errors:
        - "{}"
        - "{}"
      properties:
        data:
          description: Results from the GraphQL query
          title: data
          type: object
        errors:
          description: Errors resulting from the GraphQL query
          items:
            type: object
          title: errors
          type: array
      title: GraphQLResponse
      type: object
    ID:
      description: ID of the resource
      pattern: ^\d+$
      readOnly: true
      title: id
      type: string
    IncrementalRefreshUploadTask:
      $ref: '#/components/schemas/Task'
    LaunchJobTask:
      $ref: '#/components/schemas/Task'
    OrderParametersServiceOffering:
      additionalProperties: false
      example:
        service_parameters: "{}"
        service_plan_id: service_plan_id
        provider_control_parameters: "{}"
      properties:
        provider_control_parameters:
          description: "The provider specific parameters needed to provision this\
            \ service. This might include namespaces, special keys"
          title: provider_control_parameters
          type: object
        service_parameters:
          description: JSON object with provisioning parameters
          title: service_parameters
          type: object
        service_plan_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
      title: OrderParametersServiceOffering
      type: object
    OrderParametersServicePlan:
      additionalProperties: false
      properties:
        provider_control_parameters:
          description: "The provider specific parameters needed to provision this\
            \ service. This might include namespaces, special keys"
          type: object
        service_parameters:
          description: JSON object with provisioning parameters
          type: object
      type: object
    ServiceCredential:
      additionalProperties: false
      example:
        type_name: type_name
        archived_at: 2000-01-23T04:56:07.000+00:00
        service_credential_type_id: service_credential_type_id
        source_updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        source_ref: source_ref
        source_created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        refresh_state_part_id: refresh_state_part_id
        name: name
        id: id
        source_id: source_id
        last_seen_at: 2000-01-23T04:56:07.000+00:00
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        description:
          readOnly: true
          title: description
          type: string
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        name:
          readOnly: true
          title: name
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_credential_type_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          readOnly: true
          title: source_created_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          readOnly: true
          title: source_ref
          type: string
        source_updated_at:
          format: date-time
          readOnly: true
          title: source_updated_at
          type: string
        type_name:
          readOnly: true
          title: type_name
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceCredential
      type: object
    ServiceCredentialType:
      additionalProperties: false
      example:
        archived_at: 2000-01-23T04:56:07.000+00:00
        kind: kind
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        source_ref: source_ref
        source_deleted_at: 2000-01-23T04:56:07.000+00:00
        source_created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        refresh_state_part_id: refresh_state_part_id
        name: name
        namespace: namespace
        id: id
        source_id: source_id
        last_seen_at: 2000-01-23T04:56:07.000+00:00
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        description:
          readOnly: true
          title: description
          type: string
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        kind:
          readOnly: true
          title: kind
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        name:
          readOnly: true
          title: name
          type: string
        namespace:
          readOnly: true
          title: namespace
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          readOnly: true
          title: source_created_at
          type: string
        source_deleted_at:
          format: date-time
          readOnly: true
          title: source_deleted_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          readOnly: true
          title: source_ref
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceCredentialType
      type: object
    ServiceCredentialTypesCollection:
      example:
        data:
        - archived_at: 2000-01-23T04:56:07.000+00:00
          kind: kind
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          source_ref: source_ref
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          refresh_state_part_id: refresh_state_part_id
          name: name
          namespace: namespace
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
        - archived_at: 2000-01-23T04:56:07.000+00:00
          kind: kind
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          source_ref: source_ref
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          refresh_state_part_id: refresh_state_part_id
          name: name
          namespace: namespace
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceCredentialType'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: ServiceCredentialTypesCollection
      type: object
    ServiceCredentialsCollection:
      example:
        data:
        - type_name: type_name
          archived_at: 2000-01-23T04:56:07.000+00:00
          service_credential_type_id: service_credential_type_id
          source_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          source_ref: source_ref
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          refresh_state_part_id: refresh_state_part_id
          name: name
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
        - type_name: type_name
          archived_at: 2000-01-23T04:56:07.000+00:00
          service_credential_type_id: service_credential_type_id
          source_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          source_ref: source_ref
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          refresh_state_part_id: refresh_state_part_id
          name: name
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceCredential'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: ServiceCredentialsCollection
      type: object
    ServiceInstance:
      additionalProperties: false
      example:
        root_service_instance_id: root_service_instance_id
        archived_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        source_ref: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source_deleted_at: 2000-01-23T04:56:07.000+00:00
        external_url: external_url
        source_created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        extra: "{}"
        refresh_state_part_id: refresh_state_part_id
        name: Sample ServiceInstance
        service_plan_id: service_plan_id
        service_offering_id: service_offering_id
        id: id
        source_id: source_id
        last_seen_at: 2000-01-23T04:56:07.000+00:00
        service_inventory_id: service_inventory_id
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        external_url:
          readOnly: true
          title: external_url
          type: string
        extra:
          description: Extra information about this object in JSON format
          readOnly: true
          title: extra
          type: object
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        name:
          example: Sample ServiceInstance
          readOnly: true
          title: Name
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        root_service_instance_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_inventory_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_offering_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_plan_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          readOnly: true
          title: source_created_at
          type: string
        source_deleted_at:
          format: date-time
          readOnly: true
          title: source_deleted_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          format: uuid
          readOnly: true
          title: source_ref
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceInstance
      type: object
    ServiceInstanceNode:
      additionalProperties: false
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        extra:
          title: extra
          type: object
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        name:
          title: name
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        root_service_instance_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_instance_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_inventory_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          title: source_created_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          title: source_ref
          type: string
        source_updated_at:
          format: date-time
          title: source_updated_at
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceInstanceNode
      type: object
    ServiceInstanceNodesCollection:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceInstanceNode'
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      type: object
    ServiceInstancesCollection:
      example:
        data:
        - root_service_instance_id: root_service_instance_id
          archived_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          source_ref: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          external_url: external_url
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: Sample ServiceInstance
          service_plan_id: service_plan_id
          service_offering_id: service_offering_id
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          service_inventory_id: service_inventory_id
        - root_service_instance_id: root_service_instance_id
          archived_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          source_ref: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          external_url: external_url
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: Sample ServiceInstance
          service_plan_id: service_plan_id
          service_offering_id: service_offering_id
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          service_inventory_id: service_inventory_id
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceInstance'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: ServiceInstancesCollection
      type: object
    ServiceInventoriesCollection:
      example:
        data:
        - archived_at: 2000-01-23T04:56:07.000+00:00
          source_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          source_ref: source_ref
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: name
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
        - archived_at: 2000-01-23T04:56:07.000+00:00
          source_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: description
          source_ref: source_ref
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: name
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceInventory'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: ServiceInventoriesCollection
      type: object
    ServiceInventory:
      additionalProperties: false
      example:
        archived_at: 2000-01-23T04:56:07.000+00:00
        source_updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        description: description
        source_ref: source_ref
        source_created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        extra: "{}"
        refresh_state_part_id: refresh_state_part_id
        name: name
        id: id
        source_id: source_id
        last_seen_at: 2000-01-23T04:56:07.000+00:00
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        description:
          readOnly: true
          title: description
          type: string
        extra:
          readOnly: true
          title: extra
          type: object
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        name:
          readOnly: true
          title: name
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          readOnly: true
          title: source_created_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          readOnly: true
          title: source_ref
          type: string
        source_updated_at:
          format: date-time
          readOnly: true
          title: source_updated_at
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceInventory
      type: object
    ServiceOffering:
      additionalProperties: false
      example:
        archived_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        description: This is a short description
        source_ref: object-12345_67890
        long_description: This template provides a standalone MariaDB server with
          a database created...
        display_name: MariaDB (Ephemeral)
        documentation_url: https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md
        distributor: "Red Hat, Inc."
        source_deleted_at: 2000-01-23T04:56:07.000+00:00
        source_created_at: 2000-01-23T04:56:07.000+00:00
        support_url: https://access.redhat.com
        updated_at: 2000-01-23T04:56:07.000+00:00
        extra: "{}"
        refresh_state_part_id: refresh_state_part_id
        name: Sample Service Offering
        id: id
        source_id: source_id
        last_seen_at: 2000-01-23T04:56:07.000+00:00
        service_inventory_id: service_inventory_id
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        description:
          example: This is a short description
          readOnly: true
          title: Description
          type: string
        display_name:
          example: MariaDB (Ephemeral)
          readOnly: true
          title: Display Name
          type: string
        distributor:
          example: "Red Hat, Inc."
          readOnly: true
          title: Distributor
          type: string
        documentation_url:
          example: https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md
          readOnly: true
          title: Documentation URL
          type: string
        extra:
          description: Extra information about this object in JSON format
          readOnly: true
          title: extra
          type: object
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        long_description:
          example: This template provides a standalone MariaDB server with a database
            created...
          readOnly: true
          title: Long Description
          type: string
        name:
          example: Sample Service Offering
          readOnly: true
          title: Name
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_inventory_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          readOnly: true
          title: source_created_at
          type: string
        source_deleted_at:
          format: date-time
          readOnly: true
          title: source_deleted_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          description: The native reference used by the Source to refer to this object
          example: object-12345_67890
          readOnly: true
          title: Source reference
          type: string
        support_url:
          example: https://access.redhat.com
          readOnly: true
          title: Support URL
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceOffering
      type: object
    ServiceOfferingIcon:
      additionalProperties: false
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        data:
          description: Raw icon data
          readOnly: true
          title: Icon Data
          type: string
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          example: icon-mariadb
          readOnly: true
          title: source_ref
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceOfferingIcon
      type: object
    ServiceOfferingIconsCollection:
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceOfferingIcon'
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      type: object
    ServiceOfferingNode:
      additionalProperties: false
      example:
        archived_at: 2000-01-23T04:56:07.000+00:00
        source_updated_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        source_ref: source_ref
        root_service_offering_id: root_service_offering_id
        source_created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        extra: "{}"
        refresh_state_part_id: refresh_state_part_id
        name: name
        service_offering_id: service_offering_id
        id: id
        source_id: source_id
        last_seen_at: 2000-01-23T04:56:07.000+00:00
        service_inventory_id: service_inventory_id
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        extra:
          title: extra
          type: object
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        name:
          title: name
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        root_service_offering_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_inventory_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        service_offering_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          title: source_created_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          title: source_ref
          type: string
        source_updated_at:
          format: date-time
          title: source_updated_at
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServiceOfferingNode
      type: object
    ServiceOfferingNodesCollection:
      example:
        data:
        - archived_at: 2000-01-23T04:56:07.000+00:00
          source_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          source_ref: source_ref
          root_service_offering_id: root_service_offering_id
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: name
          service_offering_id: service_offering_id
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          service_inventory_id: service_inventory_id
        - archived_at: 2000-01-23T04:56:07.000+00:00
          source_updated_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          source_ref: source_ref
          root_service_offering_id: root_service_offering_id
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: name
          service_offering_id: service_offering_id
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          service_inventory_id: service_inventory_id
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceOfferingNode'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: ServiceOfferingNodesCollection
      type: object
    ServiceOfferingsCollection:
      example:
        data:
        - archived_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: This is a short description
          source_ref: object-12345_67890
          long_description: This template provides a standalone MariaDB server with
            a database created...
          display_name: MariaDB (Ephemeral)
          documentation_url: https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md
          distributor: "Red Hat, Inc."
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          source_created_at: 2000-01-23T04:56:07.000+00:00
          support_url: https://access.redhat.com
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: Sample Service Offering
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          service_inventory_id: service_inventory_id
        - archived_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          description: This is a short description
          source_ref: object-12345_67890
          long_description: This template provides a standalone MariaDB server with
            a database created...
          display_name: MariaDB (Ephemeral)
          documentation_url: https://github.com/sclorg/mariadb-container/blob/master/10.2/root/usr/share/container-scripts/mysql/README.md
          distributor: "Red Hat, Inc."
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          source_created_at: 2000-01-23T04:56:07.000+00:00
          support_url: https://access.redhat.com
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: Sample Service Offering
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          service_inventory_id: service_inventory_id
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServiceOffering'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: ServiceOfferingsCollection
      type: object
    ServicePlan:
      additionalProperties: false
      example:
        archived_at: 2000-01-23T04:56:07.000+00:00
        update_json_schema: update_json_schema
        created_at: 2000-01-23T04:56:07.000+00:00
        description: This is a sample description for a provider
        source_ref: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        resource_version: resource_version
        source_deleted_at: 2000-01-23T04:56:07.000+00:00
        source_created_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        extra: "{}"
        refresh_state_part_id: refresh_state_part_id
        name: Sample Provider
        service_offering_id: service_offering_id
        id: id
        source_id: source_id
        last_seen_at: 2000-01-23T04:56:07.000+00:00
        create_json_schema: "{}"
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        create_json_schema:
          readOnly: true
          title: create_json_schema
          type: object
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        description:
          example: This is a sample description for a provider
          readOnly: true
          title: Description
          type: string
        extra:
          description: Extra information about this object in JSON format
          readOnly: true
          title: extra
          type: object
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        last_seen_at:
          format: date-time
          readOnly: true
          title: last_seen_at
          type: string
        name:
          example: Sample Provider
          readOnly: true
          title: Name
          type: string
        refresh_state_part_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        resource_version:
          readOnly: true
          title: resource_version
          type: string
        service_offering_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_created_at:
          format: date-time
          readOnly: true
          title: source_created_at
          type: string
        source_deleted_at:
          format: date-time
          readOnly: true
          title: source_deleted_at
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        source_ref:
          format: uuid
          readOnly: true
          title: source_ref
          type: string
        update_json_schema:
          readOnly: true
          title: update_json_schema
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: ServicePlan
      type: object
    ServicePlansCollection:
      example:
        data:
        - archived_at: 2000-01-23T04:56:07.000+00:00
          update_json_schema: update_json_schema
          created_at: 2000-01-23T04:56:07.000+00:00
          description: This is a sample description for a provider
          source_ref: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resource_version: resource_version
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: Sample Provider
          service_offering_id: service_offering_id
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          create_json_schema: "{}"
        - archived_at: 2000-01-23T04:56:07.000+00:00
          update_json_schema: update_json_schema
          created_at: 2000-01-23T04:56:07.000+00:00
          description: This is a sample description for a provider
          source_ref: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          resource_version: resource_version
          source_deleted_at: 2000-01-23T04:56:07.000+00:00
          source_created_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          extra: "{}"
          refresh_state_part_id: refresh_state_part_id
          name: Sample Provider
          service_offering_id: service_offering_id
          id: id
          source_id: source_id
          last_seen_at: 2000-01-23T04:56:07.000+00:00
          create_json_schema: "{}"
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServicePlan'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: ServicePlansCollection
      type: object
    Source:
      additionalProperties: false
      example:
        cloud_connector_id: The GUID of the RedHat connect client being used
        last_refresh_message: last_refresh_message
        archived_at: 2000-01-23T04:56:07.000+00:00
        last_available_at: 2000-01-23T04:56:07.000+00:00
        previous_sha: previous_sha
        refresh_started_at: 2000-01-23T04:56:07.000+00:00
        created_at: 2000-01-23T04:56:07.000+00:00
        refresh_task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        enabled: false
        last_checked_at: 2000-01-23T04:56:07.000+00:00
        availability_status: The availability status of source
        last_successful_refresh_at: 2000-01-23T04:56:07.000+00:00
        uid: uid
        refresh_finished_at: 2000-01-23T04:56:07.000+00:00
        updated_at: 2000-01-23T04:56:07.000+00:00
        refresh_state: refresh_state
        previous_size: 0
        name: The Source Name
        availability_message: availability_message
        id: id
        info: The version of Tower being used
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: Archived
          type: string
        availability_message:
          readOnly: true
          title: Availability Message
          type: string
        availability_status:
          example: The availability status of source
          title: Availability Status
          type: string
        cloud_connector_id:
          example: The GUID of the RedHat connect client being used
          readOnly: true
          title: RedHat Connect Client Id
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: Created
          type: string
        enabled:
          default: false
          readOnly: true
          title: Enabled
          type: boolean
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        info:
          example: The version of Tower being used
          readOnly: true
          title: Info
          type: object
        last_available_at:
          format: date-time
          readOnly: true
          title: Last available
          type: string
        last_checked_at:
          format: date-time
          readOnly: true
          title: Last checked
          type: string
        last_refresh_message:
          readOnly: true
          title: Last refresh message
          type: string
        last_successful_refresh_at:
          format: date-time
          readOnly: true
          title: Last successful refresh
          type: string
        name:
          example: The Source Name
          readOnly: true
          title: Name
          type: string
        previous_sha:
          readOnly: true
          title: SHA of previous uploaded files
          type: string
        previous_size:
          readOnly: true
          title: Size of previous uploaded files
          type: integer
        refresh_finished_at:
          format: date-time
          readOnly: true
          title: Refresh finished
          type: string
        refresh_started_at:
          format: date-time
          readOnly: true
          title: Refresh started
          type: string
        refresh_state:
          title: Refresh state
          type: string
        refresh_task_id:
          format: uuid
          readOnly: true
          title: Refresh task
          type: string
        uid:
          readOnly: true
          title: Unique ID of the inventory source installation
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: Updated
          type: string
      title: Source
      type: object
    SourcesCollection:
      example:
        data:
        - cloud_connector_id: The GUID of the RedHat connect client being used
          last_refresh_message: last_refresh_message
          archived_at: 2000-01-23T04:56:07.000+00:00
          last_available_at: 2000-01-23T04:56:07.000+00:00
          previous_sha: previous_sha
          refresh_started_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          refresh_task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: false
          last_checked_at: 2000-01-23T04:56:07.000+00:00
          availability_status: The availability status of source
          last_successful_refresh_at: 2000-01-23T04:56:07.000+00:00
          uid: uid
          refresh_finished_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          refresh_state: refresh_state
          previous_size: 0
          name: The Source Name
          availability_message: availability_message
          id: id
          info: The version of Tower being used
        - cloud_connector_id: The GUID of the RedHat connect client being used
          last_refresh_message: last_refresh_message
          archived_at: 2000-01-23T04:56:07.000+00:00
          last_available_at: 2000-01-23T04:56:07.000+00:00
          previous_sha: previous_sha
          refresh_started_at: 2000-01-23T04:56:07.000+00:00
          created_at: 2000-01-23T04:56:07.000+00:00
          refresh_task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          enabled: false
          last_checked_at: 2000-01-23T04:56:07.000+00:00
          availability_status: The availability status of source
          last_successful_refresh_at: 2000-01-23T04:56:07.000+00:00
          uid: uid
          refresh_finished_at: 2000-01-23T04:56:07.000+00:00
          updated_at: 2000-01-23T04:56:07.000+00:00
          refresh_state: refresh_state
          previous_size: 0
          name: The Source Name
          availability_message: availability_message
          id: id
          info: The version of Tower being used
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/Source'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: SourcesCollection
      type: object
    Tag:
      additionalProperties: false
      example:
        tag: /namespace/architecture=x86_64
      properties:
        tag:
          example: /namespace/architecture=x86_64
          title: tag
          type: string
      title: Tag
      type: object
    TagsCollection:
      example:
        data:
        - tag: /namespace/architecture=x86_64
        - tag: /namespace/architecture=x86_64
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/Tag'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: TagsCollection
      type: object
    Task:
      additionalProperties: false
      example:
        owner: jdoe
        archived_at: 2000-01-23T04:56:07.000+00:00
        target_type: target_type
        created_at: 2000-01-23T04:56:07.000+00:00
        message: received message starting inventory collection
        type: CloudConnectorTask
        output: Result of Task Execution
        completed_at: 2000-01-23T04:56:07.000+00:00
        input: Task payload input content
        updated_at: 2000-01-23T04:56:07.000+00:00
        child_task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        controller_message_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        name: Order Service Plan
        id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        source_id: source_id
        state: running
        target_source_ref: target_source_ref
        status: error
      properties:
        archived_at:
          format: date-time
          readOnly: true
          title: archived_at
          type: string
        child_task_id:
          format: uuid
          readOnly: true
          title: child_task_id
          type: string
        completed_at:
          format: date-time
          title: completed_at
          type: string
        controller_message_id:
          format: uuid
          readOnly: true
          title: controller_message_id
          type: string
        created_at:
          format: date-time
          readOnly: true
          title: created_at
          type: string
        id:
          description: UUID of task
          format: uuid
          readOnly: true
          title: id
          type: string
        input:
          example: Task payload input content
          readOnly: true
          title: Content
          type: object
        message:
          example: received message starting inventory collection
          title: Message
          type: string
        name:
          example: Order Service Plan
          title: Name
          type: string
        output:
          example: Result of Task Execution
          title: Result
          type: object
        owner:
          example: jdoe
          readOnly: true
          title: Owner
          type: string
        source_id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        state:
          enum:
          - pending
          - queued
          - running
          - timedout
          - completed
          example: running
          title: State
          type: string
        status:
          enum:
          - ok
          - warn
          - unchanged
          - error
          example: error
          title: Status
          type: string
        target_source_ref:
          title: target_source_ref
          type: string
        target_type:
          title: target_type
          type: string
        type:
          example: CloudConnectorTask
          title: Type
          type: string
        updated_at:
          format: date-time
          readOnly: true
          title: updated_at
          type: string
      title: Task
      type: object
    TasksCollection:
      example:
        data:
        - owner: jdoe
          archived_at: 2000-01-23T04:56:07.000+00:00
          target_type: target_type
          created_at: 2000-01-23T04:56:07.000+00:00
          message: received message starting inventory collection
          type: CloudConnectorTask
          output: Result of Task Execution
          completed_at: 2000-01-23T04:56:07.000+00:00
          input: Task payload input content
          updated_at: 2000-01-23T04:56:07.000+00:00
          child_task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          controller_message_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: Order Service Plan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source_id: source_id
          state: running
          target_source_ref: target_source_ref
          status: error
        - owner: jdoe
          archived_at: 2000-01-23T04:56:07.000+00:00
          target_type: target_type
          created_at: 2000-01-23T04:56:07.000+00:00
          message: received message starting inventory collection
          type: CloudConnectorTask
          output: Result of Task Execution
          completed_at: 2000-01-23T04:56:07.000+00:00
          input: Task payload input content
          updated_at: 2000-01-23T04:56:07.000+00:00
          child_task_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          controller_message_id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          name: Order Service Plan
          id: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
          source_id: source_id
          state: running
          target_source_ref: target_source_ref
          status: error
        meta:
          offset: 1
          count: 0
          limit: 6
        links:
          next: next
          last: last
          prev: prev
          first: first
      properties:
        data:
          items:
            $ref: '#/components/schemas/Task'
          title: data
          type: array
        links:
          $ref: '#/components/schemas/CollectionLinks'
        meta:
          $ref: '#/components/schemas/CollectionMetadata'
      title: TasksCollection
      type: object
    Tenant:
      properties:
        description:
          example: Description of the Tenant
          readOnly: true
          type: string
        external_tenant:
          example: External tenant identifier
          readOnly: true
          type: string
        id:
          description: ID of the resource
          pattern: ^\d+$
          readOnly: true
          title: id
          type: string
        name:
          example: Sample Tenant
          readOnly: true
          type: string
      type: object
    TowingTask:
      $ref: '#/components/schemas/Task'
    UUID:
      description: UUID of task
      format: uuid
      readOnly: true
      title: id
      type: string
    orderServiceOffering_200_response:
      example:
        task_id: task_id
      properties:
        task_id:
          title: task_id
          type: string
      title: orderServiceOffering_200_response
      type: object
    ErrorNotFound_errors_inner:
      example:
        detail: Record not found
        status: "404"
      properties:
        detail:
          example: Record not found
          title: detail
          type: string
        status:
          example: "404"
          title: status
          type: string
      title: ErrorNotFound_errors_inner
      type: object
  securitySchemes:
    UserSecurity:
      scheme: basic
      type: http
      x-basicInfoFunc: openapi_server.controllers.security_controller.info_from_UserSecurity
