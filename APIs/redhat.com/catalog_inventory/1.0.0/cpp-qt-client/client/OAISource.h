/**
 * Catalog Inventory
 * Catalog Inventory
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISource.h
 *
 * 
 */

#ifndef OAISource_H
#define OAISource_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISource : public OAIObject {
public:
    OAISource();
    OAISource(QString json);
    ~OAISource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getArchivedAt() const;
    void setArchivedAt(const QDateTime &archived_at);
    bool is_archived_at_Set() const;
    bool is_archived_at_Valid() const;

    QString getAvailabilityMessage() const;
    void setAvailabilityMessage(const QString &availability_message);
    bool is_availability_message_Set() const;
    bool is_availability_message_Valid() const;

    QString getAvailabilityStatus() const;
    void setAvailabilityStatus(const QString &availability_status);
    bool is_availability_status_Set() const;
    bool is_availability_status_Valid() const;

    QString getCloudConnectorId() const;
    void setCloudConnectorId(const QString &cloud_connector_id);
    bool is_cloud_connector_id_Set() const;
    bool is_cloud_connector_id_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIObject getInfo() const;
    void setInfo(const OAIObject &info);
    bool is_info_Set() const;
    bool is_info_Valid() const;

    QDateTime getLastAvailableAt() const;
    void setLastAvailableAt(const QDateTime &last_available_at);
    bool is_last_available_at_Set() const;
    bool is_last_available_at_Valid() const;

    QDateTime getLastCheckedAt() const;
    void setLastCheckedAt(const QDateTime &last_checked_at);
    bool is_last_checked_at_Set() const;
    bool is_last_checked_at_Valid() const;

    QString getLastRefreshMessage() const;
    void setLastRefreshMessage(const QString &last_refresh_message);
    bool is_last_refresh_message_Set() const;
    bool is_last_refresh_message_Valid() const;

    QDateTime getLastSuccessfulRefreshAt() const;
    void setLastSuccessfulRefreshAt(const QDateTime &last_successful_refresh_at);
    bool is_last_successful_refresh_at_Set() const;
    bool is_last_successful_refresh_at_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPreviousSha() const;
    void setPreviousSha(const QString &previous_sha);
    bool is_previous_sha_Set() const;
    bool is_previous_sha_Valid() const;

    qint32 getPreviousSize() const;
    void setPreviousSize(const qint32 &previous_size);
    bool is_previous_size_Set() const;
    bool is_previous_size_Valid() const;

    QDateTime getRefreshFinishedAt() const;
    void setRefreshFinishedAt(const QDateTime &refresh_finished_at);
    bool is_refresh_finished_at_Set() const;
    bool is_refresh_finished_at_Valid() const;

    QDateTime getRefreshStartedAt() const;
    void setRefreshStartedAt(const QDateTime &refresh_started_at);
    bool is_refresh_started_at_Set() const;
    bool is_refresh_started_at_Valid() const;

    QString getRefreshState() const;
    void setRefreshState(const QString &refresh_state);
    bool is_refresh_state_Set() const;
    bool is_refresh_state_Valid() const;

    QString getRefreshTaskId() const;
    void setRefreshTaskId(const QString &refresh_task_id);
    bool is_refresh_task_id_Set() const;
    bool is_refresh_task_id_Valid() const;

    QString getUid() const;
    void setUid(const QString &uid);
    bool is_uid_Set() const;
    bool is_uid_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_archived_at;
    bool m_archived_at_isSet;
    bool m_archived_at_isValid;

    QString m_availability_message;
    bool m_availability_message_isSet;
    bool m_availability_message_isValid;

    QString m_availability_status;
    bool m_availability_status_isSet;
    bool m_availability_status_isValid;

    QString m_cloud_connector_id;
    bool m_cloud_connector_id_isSet;
    bool m_cloud_connector_id_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIObject m_info;
    bool m_info_isSet;
    bool m_info_isValid;

    QDateTime m_last_available_at;
    bool m_last_available_at_isSet;
    bool m_last_available_at_isValid;

    QDateTime m_last_checked_at;
    bool m_last_checked_at_isSet;
    bool m_last_checked_at_isValid;

    QString m_last_refresh_message;
    bool m_last_refresh_message_isSet;
    bool m_last_refresh_message_isValid;

    QDateTime m_last_successful_refresh_at;
    bool m_last_successful_refresh_at_isSet;
    bool m_last_successful_refresh_at_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_previous_sha;
    bool m_previous_sha_isSet;
    bool m_previous_sha_isValid;

    qint32 m_previous_size;
    bool m_previous_size_isSet;
    bool m_previous_size_isValid;

    QDateTime m_refresh_finished_at;
    bool m_refresh_finished_at_isSet;
    bool m_refresh_finished_at_isValid;

    QDateTime m_refresh_started_at;
    bool m_refresh_started_at_isSet;
    bool m_refresh_started_at_isValid;

    QString m_refresh_state;
    bool m_refresh_state_isSet;
    bool m_refresh_state_isValid;

    QString m_refresh_task_id;
    bool m_refresh_task_id_isSet;
    bool m_refresh_task_id_isValid;

    QString m_uid;
    bool m_uid_isSet;
    bool m_uid_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISource)

#endif // OAISource_H
