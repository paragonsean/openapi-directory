/**
 * Catalog Inventory
 * Catalog Inventory
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIServicePlan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIServicePlan::OAIServicePlan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIServicePlan::OAIServicePlan() {
    this->initializeModel();
}

OAIServicePlan::~OAIServicePlan() {}

void OAIServicePlan::initializeModel() {

    m_archived_at_isSet = false;
    m_archived_at_isValid = false;

    m_create_json_schema_isSet = false;
    m_create_json_schema_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_extra_isSet = false;
    m_extra_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_seen_at_isSet = false;
    m_last_seen_at_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_refresh_state_part_id_isSet = false;
    m_refresh_state_part_id_isValid = false;

    m_resource_version_isSet = false;
    m_resource_version_isValid = false;

    m_service_offering_id_isSet = false;
    m_service_offering_id_isValid = false;

    m_source_created_at_isSet = false;
    m_source_created_at_isValid = false;

    m_source_deleted_at_isSet = false;
    m_source_deleted_at_isValid = false;

    m_source_id_isSet = false;
    m_source_id_isValid = false;

    m_source_ref_isSet = false;
    m_source_ref_isValid = false;

    m_update_json_schema_isSet = false;
    m_update_json_schema_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIServicePlan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIServicePlan::fromJsonObject(QJsonObject json) {

    m_archived_at_isValid = ::OpenAPI::fromJsonValue(m_archived_at, json[QString("archived_at")]);
    m_archived_at_isSet = !json[QString("archived_at")].isNull() && m_archived_at_isValid;

    m_create_json_schema_isValid = ::OpenAPI::fromJsonValue(m_create_json_schema, json[QString("create_json_schema")]);
    m_create_json_schema_isSet = !json[QString("create_json_schema")].isNull() && m_create_json_schema_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_extra_isValid = ::OpenAPI::fromJsonValue(m_extra, json[QString("extra")]);
    m_extra_isSet = !json[QString("extra")].isNull() && m_extra_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_seen_at_isValid = ::OpenAPI::fromJsonValue(m_last_seen_at, json[QString("last_seen_at")]);
    m_last_seen_at_isSet = !json[QString("last_seen_at")].isNull() && m_last_seen_at_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_refresh_state_part_id_isValid = ::OpenAPI::fromJsonValue(m_refresh_state_part_id, json[QString("refresh_state_part_id")]);
    m_refresh_state_part_id_isSet = !json[QString("refresh_state_part_id")].isNull() && m_refresh_state_part_id_isValid;

    m_resource_version_isValid = ::OpenAPI::fromJsonValue(m_resource_version, json[QString("resource_version")]);
    m_resource_version_isSet = !json[QString("resource_version")].isNull() && m_resource_version_isValid;

    m_service_offering_id_isValid = ::OpenAPI::fromJsonValue(m_service_offering_id, json[QString("service_offering_id")]);
    m_service_offering_id_isSet = !json[QString("service_offering_id")].isNull() && m_service_offering_id_isValid;

    m_source_created_at_isValid = ::OpenAPI::fromJsonValue(m_source_created_at, json[QString("source_created_at")]);
    m_source_created_at_isSet = !json[QString("source_created_at")].isNull() && m_source_created_at_isValid;

    m_source_deleted_at_isValid = ::OpenAPI::fromJsonValue(m_source_deleted_at, json[QString("source_deleted_at")]);
    m_source_deleted_at_isSet = !json[QString("source_deleted_at")].isNull() && m_source_deleted_at_isValid;

    m_source_id_isValid = ::OpenAPI::fromJsonValue(m_source_id, json[QString("source_id")]);
    m_source_id_isSet = !json[QString("source_id")].isNull() && m_source_id_isValid;

    m_source_ref_isValid = ::OpenAPI::fromJsonValue(m_source_ref, json[QString("source_ref")]);
    m_source_ref_isSet = !json[QString("source_ref")].isNull() && m_source_ref_isValid;

    m_update_json_schema_isValid = ::OpenAPI::fromJsonValue(m_update_json_schema, json[QString("update_json_schema")]);
    m_update_json_schema_isSet = !json[QString("update_json_schema")].isNull() && m_update_json_schema_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIServicePlan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIServicePlan::asJsonObject() const {
    QJsonObject obj;
    if (m_archived_at_isSet) {
        obj.insert(QString("archived_at"), ::OpenAPI::toJsonValue(m_archived_at));
    }
    if (m_create_json_schema_isSet) {
        obj.insert(QString("create_json_schema"), ::OpenAPI::toJsonValue(m_create_json_schema));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_extra_isSet) {
        obj.insert(QString("extra"), ::OpenAPI::toJsonValue(m_extra));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_seen_at_isSet) {
        obj.insert(QString("last_seen_at"), ::OpenAPI::toJsonValue(m_last_seen_at));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_refresh_state_part_id_isSet) {
        obj.insert(QString("refresh_state_part_id"), ::OpenAPI::toJsonValue(m_refresh_state_part_id));
    }
    if (m_resource_version_isSet) {
        obj.insert(QString("resource_version"), ::OpenAPI::toJsonValue(m_resource_version));
    }
    if (m_service_offering_id_isSet) {
        obj.insert(QString("service_offering_id"), ::OpenAPI::toJsonValue(m_service_offering_id));
    }
    if (m_source_created_at_isSet) {
        obj.insert(QString("source_created_at"), ::OpenAPI::toJsonValue(m_source_created_at));
    }
    if (m_source_deleted_at_isSet) {
        obj.insert(QString("source_deleted_at"), ::OpenAPI::toJsonValue(m_source_deleted_at));
    }
    if (m_source_id_isSet) {
        obj.insert(QString("source_id"), ::OpenAPI::toJsonValue(m_source_id));
    }
    if (m_source_ref_isSet) {
        obj.insert(QString("source_ref"), ::OpenAPI::toJsonValue(m_source_ref));
    }
    if (m_update_json_schema_isSet) {
        obj.insert(QString("update_json_schema"), ::OpenAPI::toJsonValue(m_update_json_schema));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QDateTime OAIServicePlan::getArchivedAt() const {
    return m_archived_at;
}
void OAIServicePlan::setArchivedAt(const QDateTime &archived_at) {
    m_archived_at = archived_at;
    m_archived_at_isSet = true;
}

bool OAIServicePlan::is_archived_at_Set() const{
    return m_archived_at_isSet;
}

bool OAIServicePlan::is_archived_at_Valid() const{
    return m_archived_at_isValid;
}

OAIObject OAIServicePlan::getCreateJsonSchema() const {
    return m_create_json_schema;
}
void OAIServicePlan::setCreateJsonSchema(const OAIObject &create_json_schema) {
    m_create_json_schema = create_json_schema;
    m_create_json_schema_isSet = true;
}

bool OAIServicePlan::is_create_json_schema_Set() const{
    return m_create_json_schema_isSet;
}

bool OAIServicePlan::is_create_json_schema_Valid() const{
    return m_create_json_schema_isValid;
}

QDateTime OAIServicePlan::getCreatedAt() const {
    return m_created_at;
}
void OAIServicePlan::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIServicePlan::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIServicePlan::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIServicePlan::getDescription() const {
    return m_description;
}
void OAIServicePlan::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIServicePlan::is_description_Set() const{
    return m_description_isSet;
}

bool OAIServicePlan::is_description_Valid() const{
    return m_description_isValid;
}

OAIObject OAIServicePlan::getExtra() const {
    return m_extra;
}
void OAIServicePlan::setExtra(const OAIObject &extra) {
    m_extra = extra;
    m_extra_isSet = true;
}

bool OAIServicePlan::is_extra_Set() const{
    return m_extra_isSet;
}

bool OAIServicePlan::is_extra_Valid() const{
    return m_extra_isValid;
}

QString OAIServicePlan::getId() const {
    return m_id;
}
void OAIServicePlan::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIServicePlan::is_id_Set() const{
    return m_id_isSet;
}

bool OAIServicePlan::is_id_Valid() const{
    return m_id_isValid;
}

QDateTime OAIServicePlan::getLastSeenAt() const {
    return m_last_seen_at;
}
void OAIServicePlan::setLastSeenAt(const QDateTime &last_seen_at) {
    m_last_seen_at = last_seen_at;
    m_last_seen_at_isSet = true;
}

bool OAIServicePlan::is_last_seen_at_Set() const{
    return m_last_seen_at_isSet;
}

bool OAIServicePlan::is_last_seen_at_Valid() const{
    return m_last_seen_at_isValid;
}

QString OAIServicePlan::getName() const {
    return m_name;
}
void OAIServicePlan::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIServicePlan::is_name_Set() const{
    return m_name_isSet;
}

bool OAIServicePlan::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIServicePlan::getRefreshStatePartId() const {
    return m_refresh_state_part_id;
}
void OAIServicePlan::setRefreshStatePartId(const QString &refresh_state_part_id) {
    m_refresh_state_part_id = refresh_state_part_id;
    m_refresh_state_part_id_isSet = true;
}

bool OAIServicePlan::is_refresh_state_part_id_Set() const{
    return m_refresh_state_part_id_isSet;
}

bool OAIServicePlan::is_refresh_state_part_id_Valid() const{
    return m_refresh_state_part_id_isValid;
}

QString OAIServicePlan::getResourceVersion() const {
    return m_resource_version;
}
void OAIServicePlan::setResourceVersion(const QString &resource_version) {
    m_resource_version = resource_version;
    m_resource_version_isSet = true;
}

bool OAIServicePlan::is_resource_version_Set() const{
    return m_resource_version_isSet;
}

bool OAIServicePlan::is_resource_version_Valid() const{
    return m_resource_version_isValid;
}

QString OAIServicePlan::getServiceOfferingId() const {
    return m_service_offering_id;
}
void OAIServicePlan::setServiceOfferingId(const QString &service_offering_id) {
    m_service_offering_id = service_offering_id;
    m_service_offering_id_isSet = true;
}

bool OAIServicePlan::is_service_offering_id_Set() const{
    return m_service_offering_id_isSet;
}

bool OAIServicePlan::is_service_offering_id_Valid() const{
    return m_service_offering_id_isValid;
}

QDateTime OAIServicePlan::getSourceCreatedAt() const {
    return m_source_created_at;
}
void OAIServicePlan::setSourceCreatedAt(const QDateTime &source_created_at) {
    m_source_created_at = source_created_at;
    m_source_created_at_isSet = true;
}

bool OAIServicePlan::is_source_created_at_Set() const{
    return m_source_created_at_isSet;
}

bool OAIServicePlan::is_source_created_at_Valid() const{
    return m_source_created_at_isValid;
}

QDateTime OAIServicePlan::getSourceDeletedAt() const {
    return m_source_deleted_at;
}
void OAIServicePlan::setSourceDeletedAt(const QDateTime &source_deleted_at) {
    m_source_deleted_at = source_deleted_at;
    m_source_deleted_at_isSet = true;
}

bool OAIServicePlan::is_source_deleted_at_Set() const{
    return m_source_deleted_at_isSet;
}

bool OAIServicePlan::is_source_deleted_at_Valid() const{
    return m_source_deleted_at_isValid;
}

QString OAIServicePlan::getSourceId() const {
    return m_source_id;
}
void OAIServicePlan::setSourceId(const QString &source_id) {
    m_source_id = source_id;
    m_source_id_isSet = true;
}

bool OAIServicePlan::is_source_id_Set() const{
    return m_source_id_isSet;
}

bool OAIServicePlan::is_source_id_Valid() const{
    return m_source_id_isValid;
}

QString OAIServicePlan::getSourceRef() const {
    return m_source_ref;
}
void OAIServicePlan::setSourceRef(const QString &source_ref) {
    m_source_ref = source_ref;
    m_source_ref_isSet = true;
}

bool OAIServicePlan::is_source_ref_Set() const{
    return m_source_ref_isSet;
}

bool OAIServicePlan::is_source_ref_Valid() const{
    return m_source_ref_isValid;
}

QString OAIServicePlan::getUpdateJsonSchema() const {
    return m_update_json_schema;
}
void OAIServicePlan::setUpdateJsonSchema(const QString &update_json_schema) {
    m_update_json_schema = update_json_schema;
    m_update_json_schema_isSet = true;
}

bool OAIServicePlan::is_update_json_schema_Set() const{
    return m_update_json_schema_isSet;
}

bool OAIServicePlan::is_update_json_schema_Valid() const{
    return m_update_json_schema_isValid;
}

QDateTime OAIServicePlan::getUpdatedAt() const {
    return m_updated_at;
}
void OAIServicePlan::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIServicePlan::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIServicePlan::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIServicePlan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_archived_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_create_json_schema_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_seen_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refresh_state_part_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_service_offering_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_deleted_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_ref_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_json_schema_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIServicePlan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
