/**
 * Catalog Inventory
 * Catalog Inventory
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAppliedInventoriesParametersServicePlan.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAppliedInventoriesParametersServicePlan::OAIAppliedInventoriesParametersServicePlan(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAppliedInventoriesParametersServicePlan::OAIAppliedInventoriesParametersServicePlan() {
    this->initializeModel();
}

OAIAppliedInventoriesParametersServicePlan::~OAIAppliedInventoriesParametersServicePlan() {}

void OAIAppliedInventoriesParametersServicePlan::initializeModel() {

    m_service_parameters_isSet = false;
    m_service_parameters_isValid = false;
}

void OAIAppliedInventoriesParametersServicePlan::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAppliedInventoriesParametersServicePlan::fromJsonObject(QJsonObject json) {

    m_service_parameters_isValid = ::OpenAPI::fromJsonValue(m_service_parameters, json[QString("service_parameters")]);
    m_service_parameters_isSet = !json[QString("service_parameters")].isNull() && m_service_parameters_isValid;
}

QString OAIAppliedInventoriesParametersServicePlan::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAppliedInventoriesParametersServicePlan::asJsonObject() const {
    QJsonObject obj;
    if (m_service_parameters_isSet) {
        obj.insert(QString("service_parameters"), ::OpenAPI::toJsonValue(m_service_parameters));
    }
    return obj;
}

OAIObject OAIAppliedInventoriesParametersServicePlan::getServiceParameters() const {
    return m_service_parameters;
}
void OAIAppliedInventoriesParametersServicePlan::setServiceParameters(const OAIObject &service_parameters) {
    m_service_parameters = service_parameters;
    m_service_parameters_isSet = true;
}

bool OAIAppliedInventoriesParametersServicePlan::is_service_parameters_Set() const{
    return m_service_parameters_isSet;
}

bool OAIAppliedInventoriesParametersServicePlan::is_service_parameters_Valid() const{
    return m_service_parameters_isValid;
}

bool OAIAppliedInventoriesParametersServicePlan::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_service_parameters_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAppliedInventoriesParametersServicePlan::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
