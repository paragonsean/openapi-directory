/**
 * Catalog Inventory
 * Catalog Inventory
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Source model module.
 * @module model/Source
 * @version 1.0.0
 */
class Source {
    /**
     * Constructs a new <code>Source</code>.
     * @alias module:model/Source
     */
    constructor() { 
        
        Source.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['enabled'] = false;
    }

    /**
     * Constructs a <code>Source</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Source} obj Optional instance to populate.
     * @return {module:model/Source} The populated <code>Source</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Source();

            if (data.hasOwnProperty('archived_at')) {
                obj['archived_at'] = ApiClient.convertToType(data['archived_at'], 'Date');
            }
            if (data.hasOwnProperty('availability_message')) {
                obj['availability_message'] = ApiClient.convertToType(data['availability_message'], 'String');
            }
            if (data.hasOwnProperty('availability_status')) {
                obj['availability_status'] = ApiClient.convertToType(data['availability_status'], 'String');
            }
            if (data.hasOwnProperty('cloud_connector_id')) {
                obj['cloud_connector_id'] = ApiClient.convertToType(data['cloud_connector_id'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = ApiClient.convertToType(data['info'], Object);
            }
            if (data.hasOwnProperty('last_available_at')) {
                obj['last_available_at'] = ApiClient.convertToType(data['last_available_at'], 'Date');
            }
            if (data.hasOwnProperty('last_checked_at')) {
                obj['last_checked_at'] = ApiClient.convertToType(data['last_checked_at'], 'Date');
            }
            if (data.hasOwnProperty('last_refresh_message')) {
                obj['last_refresh_message'] = ApiClient.convertToType(data['last_refresh_message'], 'String');
            }
            if (data.hasOwnProperty('last_successful_refresh_at')) {
                obj['last_successful_refresh_at'] = ApiClient.convertToType(data['last_successful_refresh_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('previous_sha')) {
                obj['previous_sha'] = ApiClient.convertToType(data['previous_sha'], 'String');
            }
            if (data.hasOwnProperty('previous_size')) {
                obj['previous_size'] = ApiClient.convertToType(data['previous_size'], 'Number');
            }
            if (data.hasOwnProperty('refresh_finished_at')) {
                obj['refresh_finished_at'] = ApiClient.convertToType(data['refresh_finished_at'], 'Date');
            }
            if (data.hasOwnProperty('refresh_started_at')) {
                obj['refresh_started_at'] = ApiClient.convertToType(data['refresh_started_at'], 'Date');
            }
            if (data.hasOwnProperty('refresh_state')) {
                obj['refresh_state'] = ApiClient.convertToType(data['refresh_state'], 'String');
            }
            if (data.hasOwnProperty('refresh_task_id')) {
                obj['refresh_task_id'] = ApiClient.convertToType(data['refresh_task_id'], 'String');
            }
            if (data.hasOwnProperty('uid')) {
                obj['uid'] = ApiClient.convertToType(data['uid'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Source</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Source</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['availability_message'] && !(typeof data['availability_message'] === 'string' || data['availability_message'] instanceof String)) {
            throw new Error("Expected the field `availability_message` to be a primitive type in the JSON string but got " + data['availability_message']);
        }
        // ensure the json data is a string
        if (data['availability_status'] && !(typeof data['availability_status'] === 'string' || data['availability_status'] instanceof String)) {
            throw new Error("Expected the field `availability_status` to be a primitive type in the JSON string but got " + data['availability_status']);
        }
        // ensure the json data is a string
        if (data['cloud_connector_id'] && !(typeof data['cloud_connector_id'] === 'string' || data['cloud_connector_id'] instanceof String)) {
            throw new Error("Expected the field `cloud_connector_id` to be a primitive type in the JSON string but got " + data['cloud_connector_id']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['last_refresh_message'] && !(typeof data['last_refresh_message'] === 'string' || data['last_refresh_message'] instanceof String)) {
            throw new Error("Expected the field `last_refresh_message` to be a primitive type in the JSON string but got " + data['last_refresh_message']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['previous_sha'] && !(typeof data['previous_sha'] === 'string' || data['previous_sha'] instanceof String)) {
            throw new Error("Expected the field `previous_sha` to be a primitive type in the JSON string but got " + data['previous_sha']);
        }
        // ensure the json data is a string
        if (data['refresh_state'] && !(typeof data['refresh_state'] === 'string' || data['refresh_state'] instanceof String)) {
            throw new Error("Expected the field `refresh_state` to be a primitive type in the JSON string but got " + data['refresh_state']);
        }
        // ensure the json data is a string
        if (data['refresh_task_id'] && !(typeof data['refresh_task_id'] === 'string' || data['refresh_task_id'] instanceof String)) {
            throw new Error("Expected the field `refresh_task_id` to be a primitive type in the JSON string but got " + data['refresh_task_id']);
        }
        // ensure the json data is a string
        if (data['uid'] && !(typeof data['uid'] === 'string' || data['uid'] instanceof String)) {
            throw new Error("Expected the field `uid` to be a primitive type in the JSON string but got " + data['uid']);
        }

        return true;
    }


}



/**
 * @member {Date} archived_at
 */
Source.prototype['archived_at'] = undefined;

/**
 * @member {String} availability_message
 */
Source.prototype['availability_message'] = undefined;

/**
 * @member {String} availability_status
 */
Source.prototype['availability_status'] = undefined;

/**
 * @member {String} cloud_connector_id
 */
Source.prototype['cloud_connector_id'] = undefined;

/**
 * @member {Date} created_at
 */
Source.prototype['created_at'] = undefined;

/**
 * @member {Boolean} enabled
 * @default false
 */
Source.prototype['enabled'] = false;

/**
 * ID of the resource
 * @member {String} id
 */
Source.prototype['id'] = undefined;

/**
 * @member {Object} info
 */
Source.prototype['info'] = undefined;

/**
 * @member {Date} last_available_at
 */
Source.prototype['last_available_at'] = undefined;

/**
 * @member {Date} last_checked_at
 */
Source.prototype['last_checked_at'] = undefined;

/**
 * @member {String} last_refresh_message
 */
Source.prototype['last_refresh_message'] = undefined;

/**
 * @member {Date} last_successful_refresh_at
 */
Source.prototype['last_successful_refresh_at'] = undefined;

/**
 * @member {String} name
 */
Source.prototype['name'] = undefined;

/**
 * @member {String} previous_sha
 */
Source.prototype['previous_sha'] = undefined;

/**
 * @member {Number} previous_size
 */
Source.prototype['previous_size'] = undefined;

/**
 * @member {Date} refresh_finished_at
 */
Source.prototype['refresh_finished_at'] = undefined;

/**
 * @member {Date} refresh_started_at
 */
Source.prototype['refresh_started_at'] = undefined;

/**
 * @member {String} refresh_state
 */
Source.prototype['refresh_state'] = undefined;

/**
 * @member {String} refresh_task_id
 */
Source.prototype['refresh_task_id'] = undefined;

/**
 * @member {String} uid
 */
Source.prototype['uid'] = undefined;

/**
 * @member {Date} updated_at
 */
Source.prototype['updated_at'] = undefined;






export default Source;

