/**
 * Catalog Inventory
 * Catalog Inventory
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServicePlan model module.
 * @module model/ServicePlan
 * @version 1.0.0
 */
class ServicePlan {
    /**
     * Constructs a new <code>ServicePlan</code>.
     * @alias module:model/ServicePlan
     */
    constructor() { 
        
        ServicePlan.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServicePlan</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServicePlan} obj Optional instance to populate.
     * @return {module:model/ServicePlan} The populated <code>ServicePlan</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServicePlan();

            if (data.hasOwnProperty('archived_at')) {
                obj['archived_at'] = ApiClient.convertToType(data['archived_at'], 'Date');
            }
            if (data.hasOwnProperty('create_json_schema')) {
                obj['create_json_schema'] = ApiClient.convertToType(data['create_json_schema'], Object);
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('extra')) {
                obj['extra'] = ApiClient.convertToType(data['extra'], Object);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last_seen_at')) {
                obj['last_seen_at'] = ApiClient.convertToType(data['last_seen_at'], 'Date');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('refresh_state_part_id')) {
                obj['refresh_state_part_id'] = ApiClient.convertToType(data['refresh_state_part_id'], 'String');
            }
            if (data.hasOwnProperty('resource_version')) {
                obj['resource_version'] = ApiClient.convertToType(data['resource_version'], 'String');
            }
            if (data.hasOwnProperty('service_offering_id')) {
                obj['service_offering_id'] = ApiClient.convertToType(data['service_offering_id'], 'String');
            }
            if (data.hasOwnProperty('source_created_at')) {
                obj['source_created_at'] = ApiClient.convertToType(data['source_created_at'], 'Date');
            }
            if (data.hasOwnProperty('source_deleted_at')) {
                obj['source_deleted_at'] = ApiClient.convertToType(data['source_deleted_at'], 'Date');
            }
            if (data.hasOwnProperty('source_id')) {
                obj['source_id'] = ApiClient.convertToType(data['source_id'], 'String');
            }
            if (data.hasOwnProperty('source_ref')) {
                obj['source_ref'] = ApiClient.convertToType(data['source_ref'], 'String');
            }
            if (data.hasOwnProperty('update_json_schema')) {
                obj['update_json_schema'] = ApiClient.convertToType(data['update_json_schema'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServicePlan</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServicePlan</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['refresh_state_part_id'] && !(typeof data['refresh_state_part_id'] === 'string' || data['refresh_state_part_id'] instanceof String)) {
            throw new Error("Expected the field `refresh_state_part_id` to be a primitive type in the JSON string but got " + data['refresh_state_part_id']);
        }
        // ensure the json data is a string
        if (data['resource_version'] && !(typeof data['resource_version'] === 'string' || data['resource_version'] instanceof String)) {
            throw new Error("Expected the field `resource_version` to be a primitive type in the JSON string but got " + data['resource_version']);
        }
        // ensure the json data is a string
        if (data['service_offering_id'] && !(typeof data['service_offering_id'] === 'string' || data['service_offering_id'] instanceof String)) {
            throw new Error("Expected the field `service_offering_id` to be a primitive type in the JSON string but got " + data['service_offering_id']);
        }
        // ensure the json data is a string
        if (data['source_id'] && !(typeof data['source_id'] === 'string' || data['source_id'] instanceof String)) {
            throw new Error("Expected the field `source_id` to be a primitive type in the JSON string but got " + data['source_id']);
        }
        // ensure the json data is a string
        if (data['source_ref'] && !(typeof data['source_ref'] === 'string' || data['source_ref'] instanceof String)) {
            throw new Error("Expected the field `source_ref` to be a primitive type in the JSON string but got " + data['source_ref']);
        }
        // ensure the json data is a string
        if (data['update_json_schema'] && !(typeof data['update_json_schema'] === 'string' || data['update_json_schema'] instanceof String)) {
            throw new Error("Expected the field `update_json_schema` to be a primitive type in the JSON string but got " + data['update_json_schema']);
        }

        return true;
    }


}



/**
 * @member {Date} archived_at
 */
ServicePlan.prototype['archived_at'] = undefined;

/**
 * @member {Object} create_json_schema
 */
ServicePlan.prototype['create_json_schema'] = undefined;

/**
 * @member {Date} created_at
 */
ServicePlan.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
ServicePlan.prototype['description'] = undefined;

/**
 * Extra information about this object in JSON format
 * @member {Object} extra
 */
ServicePlan.prototype['extra'] = undefined;

/**
 * ID of the resource
 * @member {String} id
 */
ServicePlan.prototype['id'] = undefined;

/**
 * @member {Date} last_seen_at
 */
ServicePlan.prototype['last_seen_at'] = undefined;

/**
 * @member {String} name
 */
ServicePlan.prototype['name'] = undefined;

/**
 * ID of the resource
 * @member {String} refresh_state_part_id
 */
ServicePlan.prototype['refresh_state_part_id'] = undefined;

/**
 * @member {String} resource_version
 */
ServicePlan.prototype['resource_version'] = undefined;

/**
 * ID of the resource
 * @member {String} service_offering_id
 */
ServicePlan.prototype['service_offering_id'] = undefined;

/**
 * @member {Date} source_created_at
 */
ServicePlan.prototype['source_created_at'] = undefined;

/**
 * @member {Date} source_deleted_at
 */
ServicePlan.prototype['source_deleted_at'] = undefined;

/**
 * ID of the resource
 * @member {String} source_id
 */
ServicePlan.prototype['source_id'] = undefined;

/**
 * @member {String} source_ref
 */
ServicePlan.prototype['source_ref'] = undefined;

/**
 * @member {String} update_json_schema
 */
ServicePlan.prototype['update_json_schema'] = undefined;

/**
 * @member {Date} updated_at
 */
ServicePlan.prototype['updated_at'] = undefined;






export default ServicePlan;

