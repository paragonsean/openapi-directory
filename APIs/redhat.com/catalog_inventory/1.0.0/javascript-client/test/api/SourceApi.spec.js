/**
 * Catalog Inventory
 * Catalog Inventory
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@redhat.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CatalogInventory);
  }
}(this, function(expect, CatalogInventory) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CatalogInventory.SourceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SourceApi', function() {
    describe('incrementalRefreshSource', function() {
      it('should call incrementalRefreshSource successfully', function(done) {
        //uncomment below and update the code to test incrementalRefreshSource
        //instance.incrementalRefreshSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSourceServiceInstances', function() {
      it('should call listSourceServiceInstances successfully', function(done) {
        //uncomment below and update the code to test listSourceServiceInstances
        //instance.listSourceServiceInstances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSourceServiceInventories', function() {
      it('should call listSourceServiceInventories successfully', function(done) {
        //uncomment below and update the code to test listSourceServiceInventories
        //instance.listSourceServiceInventories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSourceServiceOfferingNodes', function() {
      it('should call listSourceServiceOfferingNodes successfully', function(done) {
        //uncomment below and update the code to test listSourceServiceOfferingNodes
        //instance.listSourceServiceOfferingNodes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSourceServiceOfferings', function() {
      it('should call listSourceServiceOfferings successfully', function(done) {
        //uncomment below and update the code to test listSourceServiceOfferings
        //instance.listSourceServiceOfferings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSourceServicePlans', function() {
      it('should call listSourceServicePlans successfully', function(done) {
        //uncomment below and update the code to test listSourceServicePlans
        //instance.listSourceServicePlans(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSourceTasks', function() {
      it('should call listSourceTasks successfully', function(done) {
        //uncomment below and update the code to test listSourceTasks
        //instance.listSourceTasks(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSources', function() {
      it('should call listSources successfully', function(done) {
        //uncomment below and update the code to test listSources
        //instance.listSources(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('refreshSource', function() {
      it('should call refreshSource successfully', function(done) {
        //uncomment below and update the code to test refreshSource
        //instance.refreshSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('showSource', function() {
      it('should call showSource successfully', function(done) {
        //uncomment below and update the code to test showSource
        //instance.showSource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
