/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Ecwid);
  }
}(this, function(expect, Ecwid) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Ecwid.Swaggerresponses();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Swaggerresponses', function() {
    it('should create an instance of Swaggerresponses', function() {
      // uncomment below and update the code to test Swaggerresponses
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be.a(Ecwid.Swaggerresponses);
    });

    it('should have the property _200 (base name: "200")', function() {
      // uncomment below and update the code to test the property _200
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _400 (base name: "400")', function() {
      // uncomment below and update the code to test the property _400
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _401 (base name: "401")', function() {
      // uncomment below and update the code to test the property _401
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _403 (base name: "403")', function() {
      // uncomment below and update the code to test the property _403
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _404 (base name: "404")', function() {
      // uncomment below and update the code to test the property _404
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _405 (base name: "405")', function() {
      // uncomment below and update the code to test the property _405
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _406 (base name: "406")', function() {
      // uncomment below and update the code to test the property _406
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _409 (base name: "409")', function() {
      // uncomment below and update the code to test the property _409
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _415 (base name: "415")', function() {
      // uncomment below and update the code to test the property _415
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _500 (base name: "500")', function() {
      // uncomment below and update the code to test the property _500
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

    it('should have the property _502 (base name: "502")', function() {
      // uncomment below and update the code to test the property _502
      //var instance = new Ecwid.Swaggerresponses();
      //expect(instance).to.be();
    });

  });

}));
