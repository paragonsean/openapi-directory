/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Ecwid);
  }
}(this, function(expect, Ecwid) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Ecwid.BulkDownloadRequest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BulkDownloadRequest', function() {
    it('should create an instance of BulkDownloadRequest', function() {
      // uncomment below and update the code to test BulkDownloadRequest
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be.a(Ecwid.BulkDownloadRequest);
    });

    it('should have the property apiLimit (base name: "apiLimit")', function() {
      // uncomment below and update the code to test the property apiLimit
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property continueFromJobId (base name: "continueFromJobId")', function() {
      // uncomment below and update the code to test the property continueFromJobId
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property docsHubDetails (base name: "docsHubDetails")', function() {
      // uncomment below and update the code to test the property docsHubDetails
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property filterDateField (base name: "filterDateField")', function() {
      // uncomment below and update the code to test the property filterDateField
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property filterNulls (base name: "filterNulls")', function() {
      // uncomment below and update the code to test the property filterNulls
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property format (base name: "format")', function() {
      // uncomment below and update the code to test the property format
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property from (base name: "from")', function() {
      // uncomment below and update the code to test the property from
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property limit (base name: "limit")', function() {
      // uncomment below and update the code to test the property limit
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property notificationUrl (base name: "notificationUrl")', function() {
      // uncomment below and update the code to test the property notificationUrl
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property objectName (base name: "objectName")', function() {
      // uncomment below and update the code to test the property objectName
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property pageSize (base name: "pageSize")', function() {
      // uncomment below and update the code to test the property pageSize
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property query (base name: "query")', function() {
      // uncomment below and update the code to test the property query
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property selectFields (base name: "selectFields")', function() {
      // uncomment below and update the code to test the property selectFields
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property to (base name: "to")', function() {
      // uncomment below and update the code to test the property to
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

    it('should have the property where (base name: "where")', function() {
      // uncomment below and update the code to test the property where
      //var instance = new Ecwid.BulkDownloadRequest();
      //expect(instance).to.be();
    });

  });

}));
