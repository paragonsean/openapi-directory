/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Ecwid);
  }
}(this, function(expect, Ecwid) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Ecwid.BulkJobList();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('BulkJobList', function() {
    it('should create an instance of BulkJobList', function() {
      // uncomment below and update the code to test BulkJobList
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be.a(Ecwid.BulkJobList);
    });

    it('should have the property completionTime (base name: "completion_time")', function() {
      // uncomment below and update the code to test the property completionTime
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property createdDate (base name: "createdDate")', function() {
      // uncomment below and update the code to test the property createdDate
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property errorCount (base name: "error_count")', function() {
      // uncomment below and update the code to test the property errorCount
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property fileFormat (base name: "fileFormat")', function() {
      // uncomment below and update the code to test the property fileFormat
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property instanceId (base name: "instanceId")', function() {
      // uncomment below and update the code to test the property instanceId
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property jobDirection (base name: "job_direction")', function() {
      // uncomment below and update the code to test the property jobDirection
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property jobQuery (base name: "job_query")', function() {
      // uncomment below and update the code to test the property jobQuery
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property jobResetAttempt (base name: "job_reset_attempt")', function() {
      // uncomment below and update the code to test the property jobResetAttempt
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property jobState (base name: "job_state")', function() {
      // uncomment below and update the code to test the property jobState
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property notificationUrl (base name: "notification_url")', function() {
      // uncomment below and update the code to test the property notificationUrl
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property objectName (base name: "object_name")', function() {
      // uncomment below and update the code to test the property objectName
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property recordCount (base name: "record_count")', function() {
      // uncomment below and update the code to test the property recordCount
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new Ecwid.BulkJobList();
      //expect(instance).to.be();
    });

  });

}));
