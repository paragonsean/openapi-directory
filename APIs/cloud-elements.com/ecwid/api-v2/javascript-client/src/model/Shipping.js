/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Shipping model module.
 * @module model/Shipping
 * @version api-v2
 */
class Shipping {
    /**
     * Constructs a new <code>Shipping</code>.
     * @alias module:model/Shipping
     */
    constructor() { 
        
        Shipping.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Shipping</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Shipping} obj Optional instance to populate.
     * @return {module:model/Shipping} The populated <code>Shipping</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Shipping();

            if (data.hasOwnProperty('disabledMethods')) {
                obj['disabledMethods'] = ApiClient.convertToType(data['disabledMethods'], ['String']);
            }
            if (data.hasOwnProperty('enabledMethods')) {
                obj['enabledMethods'] = ApiClient.convertToType(data['enabledMethods'], ['String']);
            }
            if (data.hasOwnProperty('flatRate')) {
                obj['flatRate'] = ApiClient.convertToType(data['flatRate'], 'Number');
            }
            if (data.hasOwnProperty('methodMarkup')) {
                obj['methodMarkup'] = ApiClient.convertToType(data['methodMarkup'], 'Number');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Shipping</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Shipping</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['disabledMethods'])) {
            throw new Error("Expected the field `disabledMethods` to be an array in the JSON data but got " + data['disabledMethods']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['enabledMethods'])) {
            throw new Error("Expected the field `enabledMethods` to be an array in the JSON data but got " + data['enabledMethods']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} disabledMethods
 */
Shipping.prototype['disabledMethods'] = undefined;

/**
 * @member {Array.<String>} enabledMethods
 */
Shipping.prototype['enabledMethods'] = undefined;

/**
 * @member {Number} flatRate
 */
Shipping.prototype['flatRate'] = undefined;

/**
 * @member {Number} methodMarkup
 */
Shipping.prototype['methodMarkup'] = undefined;

/**
 * @member {String} type
 */
Shipping.prototype['type'] = undefined;






export default Shipping;

