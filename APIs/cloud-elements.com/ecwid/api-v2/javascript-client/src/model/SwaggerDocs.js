/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Swaggerdefinitions from './Swaggerdefinitions';
import Swaggerinfo from './Swaggerinfo';
import Swaggerpaths from './Swaggerpaths';
import Swaggertags from './Swaggertags';

/**
 * The SwaggerDocs model module.
 * @module model/SwaggerDocs
 * @version api-v2
 */
class SwaggerDocs {
    /**
     * Constructs a new <code>SwaggerDocs</code>.
     * @alias module:model/SwaggerDocs
     */
    constructor() { 
        
        SwaggerDocs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SwaggerDocs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SwaggerDocs} obj Optional instance to populate.
     * @return {module:model/SwaggerDocs} The populated <code>SwaggerDocs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SwaggerDocs();

            if (data.hasOwnProperty('basePath')) {
                obj['basePath'] = ApiClient.convertToType(data['basePath'], 'String');
            }
            if (data.hasOwnProperty('definitions')) {
                obj['definitions'] = Swaggerdefinitions.constructFromObject(data['definitions']);
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('info')) {
                obj['info'] = Swaggerinfo.constructFromObject(data['info']);
            }
            if (data.hasOwnProperty('paths')) {
                obj['paths'] = Swaggerpaths.constructFromObject(data['paths']);
            }
            if (data.hasOwnProperty('schemes')) {
                obj['schemes'] = ApiClient.convertToType(data['schemes'], ['String']);
            }
            if (data.hasOwnProperty('swagger')) {
                obj['swagger'] = ApiClient.convertToType(data['swagger'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], [Swaggertags]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SwaggerDocs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SwaggerDocs</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['basePath'] && !(typeof data['basePath'] === 'string' || data['basePath'] instanceof String)) {
            throw new Error("Expected the field `basePath` to be a primitive type in the JSON string but got " + data['basePath']);
        }
        // validate the optional field `definitions`
        if (data['definitions']) { // data not null
          Swaggerdefinitions.validateJSON(data['definitions']);
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // validate the optional field `info`
        if (data['info']) { // data not null
          Swaggerinfo.validateJSON(data['info']);
        }
        // validate the optional field `paths`
        if (data['paths']) { // data not null
          Swaggerpaths.validateJSON(data['paths']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['schemes'])) {
            throw new Error("Expected the field `schemes` to be an array in the JSON data but got " + data['schemes']);
        }
        // ensure the json data is a string
        if (data['swagger'] && !(typeof data['swagger'] === 'string' || data['swagger'] instanceof String)) {
            throw new Error("Expected the field `swagger` to be a primitive type in the JSON string but got " + data['swagger']);
        }
        if (data['tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['tags'])) {
                throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
            }
            // validate the optional field `tags` (array)
            for (const item of data['tags']) {
                Swaggertags.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} basePath
 */
SwaggerDocs.prototype['basePath'] = undefined;

/**
 * @member {module:model/Swaggerdefinitions} definitions
 */
SwaggerDocs.prototype['definitions'] = undefined;

/**
 * @member {String} host
 */
SwaggerDocs.prototype['host'] = undefined;

/**
 * @member {module:model/Swaggerinfo} info
 */
SwaggerDocs.prototype['info'] = undefined;

/**
 * @member {module:model/Swaggerpaths} paths
 */
SwaggerDocs.prototype['paths'] = undefined;

/**
 * @member {Array.<String>} schemes
 */
SwaggerDocs.prototype['schemes'] = undefined;

/**
 * @member {String} swagger
 */
SwaggerDocs.prototype['swagger'] = undefined;

/**
 * @member {Array.<module:model/Swaggertags>} tags
 */
SwaggerDocs.prototype['tags'] = undefined;






export default SwaggerDocs;

