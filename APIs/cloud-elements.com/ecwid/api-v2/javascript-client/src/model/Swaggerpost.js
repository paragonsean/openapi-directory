/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Swaggerparameters from './Swaggerparameters';
import Swaggerresponses from './Swaggerresponses';

/**
 * The Swaggerpost model module.
 * @module model/Swaggerpost
 * @version api-v2
 */
class Swaggerpost {
    /**
     * Constructs a new <code>Swaggerpost</code>.
     * @alias module:model/Swaggerpost
     */
    constructor() { 
        
        Swaggerpost.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Swaggerpost</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Swaggerpost} obj Optional instance to populate.
     * @return {module:model/Swaggerpost} The populated <code>Swaggerpost</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Swaggerpost();

            if (data.hasOwnProperty('operationId')) {
                obj['operationId'] = ApiClient.convertToType(data['operationId'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [Swaggerparameters]);
            }
            if (data.hasOwnProperty('responses')) {
                obj['responses'] = Swaggerresponses.constructFromObject(data['responses']);
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Swaggerpost</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Swaggerpost</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['operationId'] && !(typeof data['operationId'] === 'string' || data['operationId'] instanceof String)) {
            throw new Error("Expected the field `operationId` to be a primitive type in the JSON string but got " + data['operationId']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                Swaggerparameters.validateJSON(item);
            };
        }
        // validate the optional field `responses`
        if (data['responses']) { // data not null
          Swaggerresponses.validateJSON(data['responses']);
        }
        // ensure the json data is a string
        if (data['summary'] && !(typeof data['summary'] === 'string' || data['summary'] instanceof String)) {
            throw new Error("Expected the field `summary` to be a primitive type in the JSON string but got " + data['summary']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * @member {String} operationId
 */
Swaggerpost.prototype['operationId'] = undefined;

/**
 * @member {Array.<module:model/Swaggerparameters>} parameters
 */
Swaggerpost.prototype['parameters'] = undefined;

/**
 * @member {module:model/Swaggerresponses} responses
 */
Swaggerpost.prototype['responses'] = undefined;

/**
 * @member {String} summary
 */
Swaggerpost.prototype['summary'] = undefined;

/**
 * @member {Array.<String>} tags
 */
Swaggerpost.prototype['tags'] = undefined;






export default Swaggerpost;

