/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BulkJobList model module.
 * @module model/BulkJobList
 * @version api-v2
 */
class BulkJobList {
    /**
     * Constructs a new <code>BulkJobList</code>.
     * @alias module:model/BulkJobList
     */
    constructor() { 
        
        BulkJobList.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BulkJobList</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkJobList} obj Optional instance to populate.
     * @return {module:model/BulkJobList} The populated <code>BulkJobList</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkJobList();

            if (data.hasOwnProperty('completion_time')) {
                obj['completion_time'] = ApiClient.convertToType(data['completion_time'], 'Number');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Number');
            }
            if (data.hasOwnProperty('error_count')) {
                obj['error_count'] = ApiClient.convertToType(data['error_count'], 'Number');
            }
            if (data.hasOwnProperty('fileFormat')) {
                obj['fileFormat'] = ApiClient.convertToType(data['fileFormat'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('instanceId')) {
                obj['instanceId'] = ApiClient.convertToType(data['instanceId'], 'Number');
            }
            if (data.hasOwnProperty('job_direction')) {
                obj['job_direction'] = ApiClient.convertToType(data['job_direction'], 'String');
            }
            if (data.hasOwnProperty('job_query')) {
                obj['job_query'] = ApiClient.convertToType(data['job_query'], 'String');
            }
            if (data.hasOwnProperty('job_reset_attempt')) {
                obj['job_reset_attempt'] = ApiClient.convertToType(data['job_reset_attempt'], 'Number');
            }
            if (data.hasOwnProperty('job_state')) {
                obj['job_state'] = ApiClient.convertToType(data['job_state'], 'String');
            }
            if (data.hasOwnProperty('notification_url')) {
                obj['notification_url'] = ApiClient.convertToType(data['notification_url'], 'String');
            }
            if (data.hasOwnProperty('object_name')) {
                obj['object_name'] = ApiClient.convertToType(data['object_name'], 'String');
            }
            if (data.hasOwnProperty('record_count')) {
                obj['record_count'] = ApiClient.convertToType(data['record_count'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkJobList</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkJobList</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fileFormat'] && !(typeof data['fileFormat'] === 'string' || data['fileFormat'] instanceof String)) {
            throw new Error("Expected the field `fileFormat` to be a primitive type in the JSON string but got " + data['fileFormat']);
        }
        // ensure the json data is a string
        if (data['job_direction'] && !(typeof data['job_direction'] === 'string' || data['job_direction'] instanceof String)) {
            throw new Error("Expected the field `job_direction` to be a primitive type in the JSON string but got " + data['job_direction']);
        }
        // ensure the json data is a string
        if (data['job_query'] && !(typeof data['job_query'] === 'string' || data['job_query'] instanceof String)) {
            throw new Error("Expected the field `job_query` to be a primitive type in the JSON string but got " + data['job_query']);
        }
        // ensure the json data is a string
        if (data['job_state'] && !(typeof data['job_state'] === 'string' || data['job_state'] instanceof String)) {
            throw new Error("Expected the field `job_state` to be a primitive type in the JSON string but got " + data['job_state']);
        }
        // ensure the json data is a string
        if (data['notification_url'] && !(typeof data['notification_url'] === 'string' || data['notification_url'] instanceof String)) {
            throw new Error("Expected the field `notification_url` to be a primitive type in the JSON string but got " + data['notification_url']);
        }
        // ensure the json data is a string
        if (data['object_name'] && !(typeof data['object_name'] === 'string' || data['object_name'] instanceof String)) {
            throw new Error("Expected the field `object_name` to be a primitive type in the JSON string but got " + data['object_name']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Number} completion_time
 */
BulkJobList.prototype['completion_time'] = undefined;

/**
 * @member {Number} createdDate
 */
BulkJobList.prototype['createdDate'] = undefined;

/**
 * @member {Number} error_count
 */
BulkJobList.prototype['error_count'] = undefined;

/**
 * @member {String} fileFormat
 */
BulkJobList.prototype['fileFormat'] = undefined;

/**
 * @member {Number} id
 */
BulkJobList.prototype['id'] = undefined;

/**
 * @member {Number} instanceId
 */
BulkJobList.prototype['instanceId'] = undefined;

/**
 * @member {String} job_direction
 */
BulkJobList.prototype['job_direction'] = undefined;

/**
 * @member {String} job_query
 */
BulkJobList.prototype['job_query'] = undefined;

/**
 * @member {Number} job_reset_attempt
 */
BulkJobList.prototype['job_reset_attempt'] = undefined;

/**
 * @member {String} job_state
 */
BulkJobList.prototype['job_state'] = undefined;

/**
 * @member {String} notification_url
 */
BulkJobList.prototype['notification_url'] = undefined;

/**
 * @member {String} object_name
 */
BulkJobList.prototype['object_name'] = undefined;

/**
 * @member {Number} record_count
 */
BulkJobList.prototype['record_count'] = undefined;

/**
 * @member {String} status
 */
BulkJobList.prototype['status'] = undefined;






export default BulkJobList;

