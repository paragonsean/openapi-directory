/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BulkDownloadRequestDocsHubDetails from './BulkDownloadRequestDocsHubDetails';
import BulkDownloadRequestQuery from './BulkDownloadRequestQuery';

/**
 * The BulkDownloadRequest model module.
 * @module model/BulkDownloadRequest
 * @version api-v2
 */
class BulkDownloadRequest {
    /**
     * Constructs a new <code>BulkDownloadRequest</code>.
     * @alias module:model/BulkDownloadRequest
     * @param format {module:model/BulkDownloadRequest.FormatEnum} 
     * @param objectName {String} 
     */
    constructor(format, objectName) { 
        
        BulkDownloadRequest.initialize(this, format, objectName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, format, objectName) { 
        obj['format'] = format;
        obj['objectName'] = objectName;
    }

    /**
     * Constructs a <code>BulkDownloadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BulkDownloadRequest} obj Optional instance to populate.
     * @return {module:model/BulkDownloadRequest} The populated <code>BulkDownloadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BulkDownloadRequest();

            if (data.hasOwnProperty('apiLimit')) {
                obj['apiLimit'] = ApiClient.convertToType(data['apiLimit'], 'Number');
            }
            if (data.hasOwnProperty('continueFromJobId')) {
                obj['continueFromJobId'] = ApiClient.convertToType(data['continueFromJobId'], 'Number');
            }
            if (data.hasOwnProperty('docsHubDetails')) {
                obj['docsHubDetails'] = BulkDownloadRequestDocsHubDetails.constructFromObject(data['docsHubDetails']);
            }
            if (data.hasOwnProperty('filterDateField')) {
                obj['filterDateField'] = ApiClient.convertToType(data['filterDateField'], 'String');
            }
            if (data.hasOwnProperty('filterNulls')) {
                obj['filterNulls'] = ApiClient.convertToType(data['filterNulls'], 'Boolean');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('from')) {
                obj['from'] = ApiClient.convertToType(data['from'], 'Date');
            }
            if (data.hasOwnProperty('limit')) {
                obj['limit'] = ApiClient.convertToType(data['limit'], 'Number');
            }
            if (data.hasOwnProperty('notificationUrl')) {
                obj['notificationUrl'] = ApiClient.convertToType(data['notificationUrl'], 'String');
            }
            if (data.hasOwnProperty('objectName')) {
                obj['objectName'] = ApiClient.convertToType(data['objectName'], 'String');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
            if (data.hasOwnProperty('query')) {
                obj['query'] = BulkDownloadRequestQuery.constructFromObject(data['query']);
            }
            if (data.hasOwnProperty('selectFields')) {
                obj['selectFields'] = ApiClient.convertToType(data['selectFields'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], 'Date');
            }
            if (data.hasOwnProperty('where')) {
                obj['where'] = ApiClient.convertToType(data['where'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BulkDownloadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BulkDownloadRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BulkDownloadRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `docsHubDetails`
        if (data['docsHubDetails']) { // data not null
          BulkDownloadRequestDocsHubDetails.validateJSON(data['docsHubDetails']);
        }
        // ensure the json data is a string
        if (data['filterDateField'] && !(typeof data['filterDateField'] === 'string' || data['filterDateField'] instanceof String)) {
            throw new Error("Expected the field `filterDateField` to be a primitive type in the JSON string but got " + data['filterDateField']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['notificationUrl'] && !(typeof data['notificationUrl'] === 'string' || data['notificationUrl'] instanceof String)) {
            throw new Error("Expected the field `notificationUrl` to be a primitive type in the JSON string but got " + data['notificationUrl']);
        }
        // ensure the json data is a string
        if (data['objectName'] && !(typeof data['objectName'] === 'string' || data['objectName'] instanceof String)) {
            throw new Error("Expected the field `objectName` to be a primitive type in the JSON string but got " + data['objectName']);
        }
        // validate the optional field `query`
        if (data['query']) { // data not null
          BulkDownloadRequestQuery.validateJSON(data['query']);
        }
        // ensure the json data is a string
        if (data['selectFields'] && !(typeof data['selectFields'] === 'string' || data['selectFields'] instanceof String)) {
            throw new Error("Expected the field `selectFields` to be a primitive type in the JSON string but got " + data['selectFields']);
        }
        // ensure the json data is a string
        if (data['where'] && !(typeof data['where'] === 'string' || data['where'] instanceof String)) {
            throw new Error("Expected the field `where` to be a primitive type in the JSON string but got " + data['where']);
        }

        return true;
    }


}

BulkDownloadRequest.RequiredProperties = ["format", "objectName"];

/**
 * @member {Number} apiLimit
 */
BulkDownloadRequest.prototype['apiLimit'] = undefined;

/**
 * @member {Number} continueFromJobId
 */
BulkDownloadRequest.prototype['continueFromJobId'] = undefined;

/**
 * @member {module:model/BulkDownloadRequestDocsHubDetails} docsHubDetails
 */
BulkDownloadRequest.prototype['docsHubDetails'] = undefined;

/**
 * @member {String} filterDateField
 */
BulkDownloadRequest.prototype['filterDateField'] = undefined;

/**
 * @member {Boolean} filterNulls
 */
BulkDownloadRequest.prototype['filterNulls'] = undefined;

/**
 * @member {module:model/BulkDownloadRequest.FormatEnum} format
 */
BulkDownloadRequest.prototype['format'] = undefined;

/**
 * @member {Date} from
 */
BulkDownloadRequest.prototype['from'] = undefined;

/**
 * @member {Number} limit
 */
BulkDownloadRequest.prototype['limit'] = undefined;

/**
 * @member {String} notificationUrl
 */
BulkDownloadRequest.prototype['notificationUrl'] = undefined;

/**
 * @member {String} objectName
 */
BulkDownloadRequest.prototype['objectName'] = undefined;

/**
 * @member {Number} pageSize
 */
BulkDownloadRequest.prototype['pageSize'] = undefined;

/**
 * @member {module:model/BulkDownloadRequestQuery} query
 */
BulkDownloadRequest.prototype['query'] = undefined;

/**
 * @member {String} selectFields
 */
BulkDownloadRequest.prototype['selectFields'] = undefined;

/**
 * @member {Date} to
 */
BulkDownloadRequest.prototype['to'] = undefined;

/**
 * @member {String} where
 */
BulkDownloadRequest.prototype['where'] = undefined;





/**
 * Allowed values for the <code>format</code> property.
 * @enum {String}
 * @readonly
 */
BulkDownloadRequest['FormatEnum'] = {

    /**
     * value: "application/json"
     * @const
     */
    "application/json": "application/json",

    /**
     * value: "txt/csv"
     * @const
     */
    "txt/csv": "txt/csv",

    /**
     * value: "application/jsonl"
     * @const
     */
    "application/jsonl": "application/jsonl"
};



export default BulkDownloadRequest;

