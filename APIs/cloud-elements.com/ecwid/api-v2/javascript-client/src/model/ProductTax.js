/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductTax model module.
 * @module model/ProductTax
 * @version api-v2
 */
class ProductTax {
    /**
     * Constructs a new <code>ProductTax</code>.
     * @alias module:model/ProductTax
     */
    constructor() { 
        
        ProductTax.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProductTax</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductTax} obj Optional instance to populate.
     * @return {module:model/ProductTax} The populated <code>ProductTax</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductTax();

            if (data.hasOwnProperty('defaultLocationIncludedTaxRate')) {
                obj['defaultLocationIncludedTaxRate'] = ApiClient.convertToType(data['defaultLocationIncludedTaxRate'], 'Number');
            }
            if (data.hasOwnProperty('enabledManualTaxes')) {
                obj['enabledManualTaxes'] = ApiClient.convertToType(data['enabledManualTaxes'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductTax</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductTax</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['enabledManualTaxes'])) {
            throw new Error("Expected the field `enabledManualTaxes` to be an array in the JSON data but got " + data['enabledManualTaxes']);
        }

        return true;
    }


}



/**
 * @member {Number} defaultLocationIncludedTaxRate
 */
ProductTax.prototype['defaultLocationIncludedTaxRate'] = undefined;

/**
 * @member {Array.<Number>} enabledManualTaxes
 */
ProductTax.prototype['enabledManualTaxes'] = undefined;






export default ProductTax;

