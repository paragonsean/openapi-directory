/*
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BulkDownloadRequest;
import org.openapitools.client.model.BulkJobList;
import org.openapitools.client.model.BulkQuery;
import org.openapitools.client.model.BulkStatus;
import org.openapitools.client.model.BulkUploadResponse;
import java.io.File;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BulkApi
 */
@Disabled
public class BulkApiTest {

    private final BulkApi api = new BulkApi();

    /**
     * Upload a file of objects to be bulk uploaded to the provider.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBulkByObjectNameTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String elementsAsyncCallbackUrl = null;
        String metaData = null;
        File _file = null;
        BulkUploadResponse response = api.createBulkByObjectName(authorization, objectName, elementsAsyncCallbackUrl, metaData, _file);
        // TODO: test validations
    }

    /**
     * Create a new bulk download job (asynchronous)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBulkDownloadTest() throws ApiException {
        String authorization = null;
        BulkDownloadRequest body = null;
        BulkQuery response = api.createBulkDownload(authorization, body);
        // TODO: test validations
    }

    /**
     * Create an asynchronous bulk query job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createBulkQueryTest() throws ApiException {
        String authorization = null;
        String elementsAsyncCallbackUrl = null;
        String q = null;
        String lastRunDate = null;
        String from = null;
        String to = null;
        String metaData = null;
        BulkQuery response = api.createBulkQuery(authorization, elementsAsyncCallbackUrl, q, lastRunDate, from, to, metaData);
        // TODO: test validations
    }

    /**
     * Retrieve the results of an asynchronous bulk query.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBulkByObjectNameTest() throws ApiException {
        String authorization = null;
        String id = null;
        String objectName = null;
        File response = api.getBulkByObjectName(authorization, id, objectName);
        // TODO: test validations
    }

    /**
     * Retrieve the errors of a bulk job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBulkErrorsTest() throws ApiException {
        String authorization = null;
        String id = null;
        Long pageSize = null;
        String nextPage = null;
        String fields = null;
        List<String> response = api.getBulkErrors(authorization, id, pageSize, nextPage, fields);
        // TODO: test validations
    }

    /**
     * Fetch all the bulk jobs for an instance
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBulkJobsTest() throws ApiException {
        String authorization = null;
        String where = null;
        String nextPage = null;
        Long pageSize = null;
        String fields = null;
        BulkJobList response = api.getBulkJobs(authorization, where, nextPage, pageSize, fields);
        // TODO: test validations
    }

    /**
     * Retrieve the status of a bulk job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBulkStatusTest() throws ApiException {
        String authorization = null;
        String id = null;
        BulkStatus response = api.getBulkStatus(authorization, id);
        // TODO: test validations
    }

    /**
     * Cancel an asynchronous bulk query job.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceBulkCancelTest() throws ApiException {
        String authorization = null;
        String id = null;
        BulkStatus response = api.replaceBulkCancel(authorization, id);
        // TODO: test validations
    }

}
