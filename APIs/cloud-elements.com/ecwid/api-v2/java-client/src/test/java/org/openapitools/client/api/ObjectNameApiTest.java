/*
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ModelObject;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ObjectNameApi
 */
@Disabled
public class ObjectNameApiTest {

    private final ObjectNameApi api = new ObjectNameApi();

    /**
     * Create an {objectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createByObjectNameTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        ModelObject body = null;
        api.createByObjectName(authorization, objectName, body);
        // TODO: test validations
    }

    /**
     * Create an {objectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createObjectNameByChildObjectNameTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String objectId = null;
        String childObjectName = null;
        ModelObject body = null;
        api.createObjectNameByChildObjectName(authorization, objectName, objectId, childObjectName, body);
        // TODO: test validations
    }

    /**
     * Delete an {childObjectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteObjectNameByChildObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String childObjectName = null;
        String objectId = null;
        String childObjectId = null;
        api.deleteObjectNameByChildObjectId(authorization, objectName, childObjectName, objectId, childObjectId);
        // TODO: test validations
    }

    /**
     * Delete an {objectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteObjectNameByObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String objectId = null;
        api.deleteObjectNameByObjectId(authorization, objectName, objectId);
        // TODO: test validations
    }

    /**
     * Search for {objectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByObjectNameTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String where = null;
        Long pageSize = null;
        String nextPage = null;
        String fields = null;
        List<ModelObject> response = api.getByObjectName(authorization, objectName, where, pageSize, nextPage, fields);
        // TODO: test validations
    }

    /**
     * Retrieve an {childObjectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getObjectNameByChildObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String childObjectName = null;
        String objectId = null;
        String childObjectId = null;
        ModelObject response = api.getObjectNameByChildObjectId(authorization, objectName, childObjectName, objectId, childObjectId);
        // TODO: test validations
    }

    /**
     * Search for {childObjectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getObjectNameByChildObjectNameTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String objectId = null;
        String childObjectName = null;
        String where = null;
        Long pageSize = null;
        String nextPage = null;
        String fields = null;
        List<ModelObject> response = api.getObjectNameByChildObjectName(authorization, objectName, objectId, childObjectName, where, pageSize, nextPage, fields);
        // TODO: test validations
    }

    /**
     * Retrieve an {objectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getObjectNameByObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String objectId = null;
        ModelObject response = api.getObjectNameByObjectId(authorization, objectName, objectId);
        // TODO: test validations
    }

    /**
     * Update an {childObjectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceObjectNameByChildObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String childObjectName = null;
        String objectId = null;
        String childObjectId = null;
        ModelObject body = null;
        ModelObject response = api.replaceObjectNameByChildObjectId(authorization, objectName, childObjectName, objectId, childObjectId, body);
        // TODO: test validations
    }

    /**
     * Update an {objectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void replaceObjectNameByObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String objectId = null;
        ModelObject body = null;
        ModelObject response = api.replaceObjectNameByObjectId(authorization, objectName, objectId, body);
        // TODO: test validations
    }

    /**
     * Update an {childObjectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateObjectNameByChildObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String childObjectName = null;
        String objectId = null;
        String childObjectId = null;
        ModelObject body = null;
        ModelObject response = api.updateObjectNameByChildObjectId(authorization, objectName, childObjectName, objectId, childObjectId, body);
        // TODO: test validations
    }

    /**
     * Update an {objectName}
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateObjectNameByObjectIdTest() throws ApiException {
        String authorization = null;
        String objectName = null;
        String objectId = null;
        ModelObject body = null;
        ModelObject response = api.updateObjectNameByObjectId(authorization, objectName, objectId, body);
        // TODO: test validations
    }

}
