/*
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.Swagger200;
import org.openapitools.client.model.Swagger400;
import org.openapitools.client.model.Swagger401;
import org.openapitools.client.model.Swagger403;
import org.openapitools.client.model.Swagger404;
import org.openapitools.client.model.Swagger405;
import org.openapitools.client.model.Swagger406;
import org.openapitools.client.model.Swagger409;
import org.openapitools.client.model.Swagger415;
import org.openapitools.client.model.Swagger500;
import org.openapitools.client.model.Swagger502;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Swaggerresponses
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:09.313051-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Swaggerresponses {
  public static final String SERIALIZED_NAME_200 = "200";
  @SerializedName(SERIALIZED_NAME_200)
  private Swagger200 _200;

  public static final String SERIALIZED_NAME_400 = "400";
  @SerializedName(SERIALIZED_NAME_400)
  private Swagger400 _400;

  public static final String SERIALIZED_NAME_401 = "401";
  @SerializedName(SERIALIZED_NAME_401)
  private Swagger401 _401;

  public static final String SERIALIZED_NAME_403 = "403";
  @SerializedName(SERIALIZED_NAME_403)
  private Swagger403 _403;

  public static final String SERIALIZED_NAME_404 = "404";
  @SerializedName(SERIALIZED_NAME_404)
  private Swagger404 _404;

  public static final String SERIALIZED_NAME_405 = "405";
  @SerializedName(SERIALIZED_NAME_405)
  private Swagger405 _405;

  public static final String SERIALIZED_NAME_406 = "406";
  @SerializedName(SERIALIZED_NAME_406)
  private Swagger406 _406;

  public static final String SERIALIZED_NAME_409 = "409";
  @SerializedName(SERIALIZED_NAME_409)
  private Swagger409 _409;

  public static final String SERIALIZED_NAME_415 = "415";
  @SerializedName(SERIALIZED_NAME_415)
  private Swagger415 _415;

  public static final String SERIALIZED_NAME_500 = "500";
  @SerializedName(SERIALIZED_NAME_500)
  private Swagger500 _500;

  public static final String SERIALIZED_NAME_502 = "502";
  @SerializedName(SERIALIZED_NAME_502)
  private Swagger502 _502;

  public Swaggerresponses() {
  }

  public Swaggerresponses _200(Swagger200 _200) {
    this._200 = _200;
    return this;
  }

  /**
   * Get _200
   * @return _200
   */
  @javax.annotation.Nullable
  public Swagger200 get200() {
    return _200;
  }

  public void set200(Swagger200 _200) {
    this._200 = _200;
  }


  public Swaggerresponses _400(Swagger400 _400) {
    this._400 = _400;
    return this;
  }

  /**
   * Get _400
   * @return _400
   */
  @javax.annotation.Nullable
  public Swagger400 get400() {
    return _400;
  }

  public void set400(Swagger400 _400) {
    this._400 = _400;
  }


  public Swaggerresponses _401(Swagger401 _401) {
    this._401 = _401;
    return this;
  }

  /**
   * Get _401
   * @return _401
   */
  @javax.annotation.Nullable
  public Swagger401 get401() {
    return _401;
  }

  public void set401(Swagger401 _401) {
    this._401 = _401;
  }


  public Swaggerresponses _403(Swagger403 _403) {
    this._403 = _403;
    return this;
  }

  /**
   * Get _403
   * @return _403
   */
  @javax.annotation.Nullable
  public Swagger403 get403() {
    return _403;
  }

  public void set403(Swagger403 _403) {
    this._403 = _403;
  }


  public Swaggerresponses _404(Swagger404 _404) {
    this._404 = _404;
    return this;
  }

  /**
   * Get _404
   * @return _404
   */
  @javax.annotation.Nullable
  public Swagger404 get404() {
    return _404;
  }

  public void set404(Swagger404 _404) {
    this._404 = _404;
  }


  public Swaggerresponses _405(Swagger405 _405) {
    this._405 = _405;
    return this;
  }

  /**
   * Get _405
   * @return _405
   */
  @javax.annotation.Nullable
  public Swagger405 get405() {
    return _405;
  }

  public void set405(Swagger405 _405) {
    this._405 = _405;
  }


  public Swaggerresponses _406(Swagger406 _406) {
    this._406 = _406;
    return this;
  }

  /**
   * Get _406
   * @return _406
   */
  @javax.annotation.Nullable
  public Swagger406 get406() {
    return _406;
  }

  public void set406(Swagger406 _406) {
    this._406 = _406;
  }


  public Swaggerresponses _409(Swagger409 _409) {
    this._409 = _409;
    return this;
  }

  /**
   * Get _409
   * @return _409
   */
  @javax.annotation.Nullable
  public Swagger409 get409() {
    return _409;
  }

  public void set409(Swagger409 _409) {
    this._409 = _409;
  }


  public Swaggerresponses _415(Swagger415 _415) {
    this._415 = _415;
    return this;
  }

  /**
   * Get _415
   * @return _415
   */
  @javax.annotation.Nullable
  public Swagger415 get415() {
    return _415;
  }

  public void set415(Swagger415 _415) {
    this._415 = _415;
  }


  public Swaggerresponses _500(Swagger500 _500) {
    this._500 = _500;
    return this;
  }

  /**
   * Get _500
   * @return _500
   */
  @javax.annotation.Nullable
  public Swagger500 get500() {
    return _500;
  }

  public void set500(Swagger500 _500) {
    this._500 = _500;
  }


  public Swaggerresponses _502(Swagger502 _502) {
    this._502 = _502;
    return this;
  }

  /**
   * Get _502
   * @return _502
   */
  @javax.annotation.Nullable
  public Swagger502 get502() {
    return _502;
  }

  public void set502(Swagger502 _502) {
    this._502 = _502;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Swaggerresponses swaggerresponses = (Swaggerresponses) o;
    return Objects.equals(this._200, swaggerresponses._200) &&
        Objects.equals(this._400, swaggerresponses._400) &&
        Objects.equals(this._401, swaggerresponses._401) &&
        Objects.equals(this._403, swaggerresponses._403) &&
        Objects.equals(this._404, swaggerresponses._404) &&
        Objects.equals(this._405, swaggerresponses._405) &&
        Objects.equals(this._406, swaggerresponses._406) &&
        Objects.equals(this._409, swaggerresponses._409) &&
        Objects.equals(this._415, swaggerresponses._415) &&
        Objects.equals(this._500, swaggerresponses._500) &&
        Objects.equals(this._502, swaggerresponses._502);
  }

  @Override
  public int hashCode() {
    return Objects.hash(_200, _400, _401, _403, _404, _405, _406, _409, _415, _500, _502);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Swaggerresponses {\n");
    sb.append("    _200: ").append(toIndentedString(_200)).append("\n");
    sb.append("    _400: ").append(toIndentedString(_400)).append("\n");
    sb.append("    _401: ").append(toIndentedString(_401)).append("\n");
    sb.append("    _403: ").append(toIndentedString(_403)).append("\n");
    sb.append("    _404: ").append(toIndentedString(_404)).append("\n");
    sb.append("    _405: ").append(toIndentedString(_405)).append("\n");
    sb.append("    _406: ").append(toIndentedString(_406)).append("\n");
    sb.append("    _409: ").append(toIndentedString(_409)).append("\n");
    sb.append("    _415: ").append(toIndentedString(_415)).append("\n");
    sb.append("    _500: ").append(toIndentedString(_500)).append("\n");
    sb.append("    _502: ").append(toIndentedString(_502)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("200");
    openapiFields.add("400");
    openapiFields.add("401");
    openapiFields.add("403");
    openapiFields.add("404");
    openapiFields.add("405");
    openapiFields.add("406");
    openapiFields.add("409");
    openapiFields.add("415");
    openapiFields.add("500");
    openapiFields.add("502");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Swaggerresponses
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Swaggerresponses.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Swaggerresponses is not found in the empty JSON string", Swaggerresponses.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Swaggerresponses.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Swaggerresponses` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `200`
      if (jsonObj.get("200") != null && !jsonObj.get("200").isJsonNull()) {
        Swagger200.validateJsonElement(jsonObj.get("200"));
      }
      // validate the optional field `400`
      if (jsonObj.get("400") != null && !jsonObj.get("400").isJsonNull()) {
        Swagger400.validateJsonElement(jsonObj.get("400"));
      }
      // validate the optional field `401`
      if (jsonObj.get("401") != null && !jsonObj.get("401").isJsonNull()) {
        Swagger401.validateJsonElement(jsonObj.get("401"));
      }
      // validate the optional field `403`
      if (jsonObj.get("403") != null && !jsonObj.get("403").isJsonNull()) {
        Swagger403.validateJsonElement(jsonObj.get("403"));
      }
      // validate the optional field `404`
      if (jsonObj.get("404") != null && !jsonObj.get("404").isJsonNull()) {
        Swagger404.validateJsonElement(jsonObj.get("404"));
      }
      // validate the optional field `405`
      if (jsonObj.get("405") != null && !jsonObj.get("405").isJsonNull()) {
        Swagger405.validateJsonElement(jsonObj.get("405"));
      }
      // validate the optional field `406`
      if (jsonObj.get("406") != null && !jsonObj.get("406").isJsonNull()) {
        Swagger406.validateJsonElement(jsonObj.get("406"));
      }
      // validate the optional field `409`
      if (jsonObj.get("409") != null && !jsonObj.get("409").isJsonNull()) {
        Swagger409.validateJsonElement(jsonObj.get("409"));
      }
      // validate the optional field `415`
      if (jsonObj.get("415") != null && !jsonObj.get("415").isJsonNull()) {
        Swagger415.validateJsonElement(jsonObj.get("415"));
      }
      // validate the optional field `500`
      if (jsonObj.get("500") != null && !jsonObj.get("500").isJsonNull()) {
        Swagger500.validateJsonElement(jsonObj.get("500"));
      }
      // validate the optional field `502`
      if (jsonObj.get("502") != null && !jsonObj.get("502").isJsonNull()) {
        Swagger502.validateJsonElement(jsonObj.get("502"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Swaggerresponses.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Swaggerresponses' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Swaggerresponses> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Swaggerresponses.class));

       return (TypeAdapter<T>) new TypeAdapter<Swaggerresponses>() {
           @Override
           public void write(JsonWriter out, Swaggerresponses value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Swaggerresponses read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Swaggerresponses given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Swaggerresponses
   * @throws IOException if the JSON string is invalid with respect to Swaggerresponses
   */
  public static Swaggerresponses fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Swaggerresponses.class);
  }

  /**
   * Convert an instance of Swaggerresponses to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

