/*
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Attribute;
import org.openapitools.client.model.BorderInfo;
import org.openapitools.client.model.Category;
import org.openapitools.client.model.Combination;
import org.openapitools.client.model.Favorite;
import org.openapitools.client.model.GalleryImage;
import org.openapitools.client.model.Media;
import org.openapitools.client.model.ModelFile;
import org.openapitools.client.model.Option;
import org.openapitools.client.model.ProductDimensions;
import org.openapitools.client.model.ProductTax;
import org.openapitools.client.model.RelatedProducts;
import org.openapitools.client.model.Shipping;
import org.openapitools.client.model.Tax;
import org.openapitools.client.model.WholesalePrices;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Product
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:09.313051-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Product {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<Attribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_BORDER_INFO = "borderInfo";
  @SerializedName(SERIALIZED_NAME_BORDER_INFO)
  private BorderInfo borderInfo;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<Category> categories = new ArrayList<>();

  public static final String SERIALIZED_NAME_CATEGORY_IDS = "categoryIds";
  @SerializedName(SERIALIZED_NAME_CATEGORY_IDS)
  private List<Long> categoryIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMBINATIONS = "combinations";
  @SerializedName(SERIALIZED_NAME_COMBINATIONS)
  private List<Combination> combinations = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPARE_AT_PRICE = "compareAtPrice";
  @SerializedName(SERIALIZED_NAME_COMPARE_AT_PRICE)
  private Double compareAtPrice;

  public static final String SERIALIZED_NAME_COMPARE_TO_PRICE = "compareToPrice";
  @SerializedName(SERIALIZED_NAME_COMPARE_TO_PRICE)
  private Double compareToPrice;

  public static final String SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT = "compareToPriceDiscount";
  @SerializedName(SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT)
  private Double compareToPriceDiscount;

  public static final String SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT_FORMATTED = "compareToPriceDiscountFormatted";
  @SerializedName(SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT_FORMATTED)
  private String compareToPriceDiscountFormatted;

  public static final String SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT_PERCENT = "compareToPriceDiscountPercent";
  @SerializedName(SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT_PERCENT)
  private Double compareToPriceDiscountPercent;

  public static final String SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT_PERCENT_FORMATTED = "compareToPriceDiscountPercentFormatted";
  @SerializedName(SERIALIZED_NAME_COMPARE_TO_PRICE_DISCOUNT_PERCENT_FORMATTED)
  private String compareToPriceDiscountPercentFormatted;

  public static final String SERIALIZED_NAME_COMPARE_TO_PRICE_FORMATTED = "compareToPriceFormatted";
  @SerializedName(SERIALIZED_NAME_COMPARE_TO_PRICE_FORMATTED)
  private String compareToPriceFormatted;

  public static final String SERIALIZED_NAME_CREATE_TIMESTAMP = "createTimestamp";
  @SerializedName(SERIALIZED_NAME_CREATE_TIMESTAMP)
  private Long createTimestamp;

  public static final String SERIALIZED_NAME_CREATED = "created";
  @SerializedName(SERIALIZED_NAME_CREATED)
  private String created;

  public static final String SERIALIZED_NAME_DEFAULT_CATEGORY_ID = "defaultCategoryId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_CATEGORY_ID)
  private Long defaultCategoryId;

  public static final String SERIALIZED_NAME_DEFAULT_COMBINATION_ID = "defaultCombinationId";
  @SerializedName(SERIALIZED_NAME_DEFAULT_COMBINATION_ID)
  private Double defaultCombinationId;

  public static final String SERIALIZED_NAME_DEFAULT_DISPLAYED_PRICE = "defaultDisplayedPrice";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DISPLAYED_PRICE)
  private Double defaultDisplayedPrice;

  public static final String SERIALIZED_NAME_DEFAULT_DISPLAYED_PRICE_FORMATTED = "defaultDisplayedPriceFormatted";
  @SerializedName(SERIALIZED_NAME_DEFAULT_DISPLAYED_PRICE_FORMATTED)
  private String defaultDisplayedPriceFormatted;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DESCRIPTION_TRUNCATED = "descriptionTruncated";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_TRUNCATED)
  private Boolean descriptionTruncated;

  public static final String SERIALIZED_NAME_DIMENSIONS = "dimensions";
  @SerializedName(SERIALIZED_NAME_DIMENSIONS)
  private ProductDimensions dimensions;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_FAVORITES = "favorites";
  @SerializedName(SERIALIZED_NAME_FAVORITES)
  private Favorite favorites;

  public static final String SERIALIZED_NAME_FILES = "files";
  @SerializedName(SERIALIZED_NAME_FILES)
  private List<ModelFile> files = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIXED_SHIPPING_RATE = "fixedShippingRate";
  @SerializedName(SERIALIZED_NAME_FIXED_SHIPPING_RATE)
  private Double fixedShippingRate;

  public static final String SERIALIZED_NAME_FIXED_SHIPPING_RATE_ONLY = "fixedShippingRateOnly";
  @SerializedName(SERIALIZED_NAME_FIXED_SHIPPING_RATE_ONLY)
  private Boolean fixedShippingRateOnly;

  public static final String SERIALIZED_NAME_GALLERY_IMAGES = "galleryImages";
  @SerializedName(SERIALIZED_NAME_GALLERY_IMAGES)
  private List<GalleryImage> galleryImages = new ArrayList<>();

  public static final String SERIALIZED_NAME_GOOGLE_ITEM_CONDITION = "googleItemCondition";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ITEM_CONDITION)
  private String googleItemCondition;

  public static final String SERIALIZED_NAME_HD_THUMBNAIL_URL = "hdThumbnailUrl";
  @SerializedName(SERIALIZED_NAME_HD_THUMBNAIL_URL)
  private String hdThumbnailUrl;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_IMAGE_URL = "imageUrl";
  @SerializedName(SERIALIZED_NAME_IMAGE_URL)
  private String imageUrl;

  public static final String SERIALIZED_NAME_IN_STOCK = "inStock";
  @SerializedName(SERIALIZED_NAME_IN_STOCK)
  private Boolean inStock;

  public static final String SERIALIZED_NAME_IS_SAMPLE_PRODUCT = "isSampleProduct";
  @SerializedName(SERIALIZED_NAME_IS_SAMPLE_PRODUCT)
  private Boolean isSampleProduct;

  public static final String SERIALIZED_NAME_IS_SHIPPING_REQUIRED = "isShippingRequired";
  @SerializedName(SERIALIZED_NAME_IS_SHIPPING_REQUIRED)
  private Boolean isShippingRequired;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private Media media;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private List<Option> options = new ArrayList<>();

  public static final String SERIALIZED_NAME_ORIGINAL_IMAGE = "originalImage";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_IMAGE)
  private GalleryImage originalImage;

  public static final String SERIALIZED_NAME_ORIGINAL_IMAGE_URL = "originalImageUrl";
  @SerializedName(SERIALIZED_NAME_ORIGINAL_IMAGE_URL)
  private String originalImageUrl;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Double price;

  public static final String SERIALIZED_NAME_PRICE_IN_PRODUCT_LIST = "priceInProductList";
  @SerializedName(SERIALIZED_NAME_PRICE_IN_PRODUCT_LIST)
  private Double priceInProductList;

  public static final String SERIALIZED_NAME_PRODUCT_CLASS_ID = "productClassId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_CLASS_ID)
  private Long productClassId;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Long quantity;

  public static final String SERIALIZED_NAME_QUANTITY_DELTA = "quantityDelta";
  @SerializedName(SERIALIZED_NAME_QUANTITY_DELTA)
  private Long quantityDelta;

  public static final String SERIALIZED_NAME_RELATED_PRODUCTS = "relatedProducts";
  @SerializedName(SERIALIZED_NAME_RELATED_PRODUCTS)
  private RelatedProducts relatedProducts;

  public static final String SERIALIZED_NAME_SEO_DESCRIPTION = "seoDescription";
  @SerializedName(SERIALIZED_NAME_SEO_DESCRIPTION)
  private String seoDescription;

  public static final String SERIALIZED_NAME_SEO_TITLE = "seoTitle";
  @SerializedName(SERIALIZED_NAME_SEO_TITLE)
  private String seoTitle;

  public static final String SERIALIZED_NAME_SHIPPING = "shipping";
  @SerializedName(SERIALIZED_NAME_SHIPPING)
  private Shipping shipping;

  public static final String SERIALIZED_NAME_SHOW_ON_FRONTPAGE = "showOnFrontpage";
  @SerializedName(SERIALIZED_NAME_SHOW_ON_FRONTPAGE)
  private Double showOnFrontpage;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private String sku;

  public static final String SERIALIZED_NAME_SMALL_THUMBNAIL_URL = "smallThumbnailUrl";
  @SerializedName(SERIALIZED_NAME_SMALL_THUMBNAIL_URL)
  private String smallThumbnailUrl;

  public static final String SERIALIZED_NAME_TANGIBLE = "tangible";
  @SerializedName(SERIALIZED_NAME_TANGIBLE)
  private String tangible;

  public static final String SERIALIZED_NAME_TAX = "tax";
  @SerializedName(SERIALIZED_NAME_TAX)
  private ProductTax tax;

  public static final String SERIALIZED_NAME_TAXES = "taxes";
  @SerializedName(SERIALIZED_NAME_TAXES)
  private List<Tax> taxes = new ArrayList<>();

  public static final String SERIALIZED_NAME_THUMBNAIL_URL = "thumbnailUrl";
  @SerializedName(SERIALIZED_NAME_THUMBNAIL_URL)
  private String thumbnailUrl;

  public static final String SERIALIZED_NAME_TRACK_QUANTITY = "trackQuantity";
  @SerializedName(SERIALIZED_NAME_TRACK_QUANTITY)
  private String trackQuantity;

  public static final String SERIALIZED_NAME_UNLIMITED = "unlimited";
  @SerializedName(SERIALIZED_NAME_UNLIMITED)
  private Boolean unlimited;

  public static final String SERIALIZED_NAME_UPDATE_TIMESTAMP = "updateTimestamp";
  @SerializedName(SERIALIZED_NAME_UPDATE_TIMESTAMP)
  private Long updateTimestamp;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_WARNING_LIMIT = "warningLimit";
  @SerializedName(SERIALIZED_NAME_WARNING_LIMIT)
  private Long warningLimit;

  public static final String SERIALIZED_NAME_WEIGHT = "weight";
  @SerializedName(SERIALIZED_NAME_WEIGHT)
  private Double weight;

  public static final String SERIALIZED_NAME_WHOLESALE_PRICES = "wholesalePrices";
  @SerializedName(SERIALIZED_NAME_WHOLESALE_PRICES)
  private WholesalePrices wholesalePrices;

  public Product() {
  }

  public Product attributes(List<Attribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public Product addAttributesItem(Attribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Get attributes
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<Attribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<Attribute> attributes) {
    this.attributes = attributes;
  }


  public Product borderInfo(BorderInfo borderInfo) {
    this.borderInfo = borderInfo;
    return this;
  }

  /**
   * Get borderInfo
   * @return borderInfo
   */
  @javax.annotation.Nullable
  public BorderInfo getBorderInfo() {
    return borderInfo;
  }

  public void setBorderInfo(BorderInfo borderInfo) {
    this.borderInfo = borderInfo;
  }


  public Product categories(List<Category> categories) {
    this.categories = categories;
    return this;
  }

  public Product addCategoriesItem(Category categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @javax.annotation.Nullable
  public List<Category> getCategories() {
    return categories;
  }

  public void setCategories(List<Category> categories) {
    this.categories = categories;
  }


  public Product categoryIds(List<Long> categoryIds) {
    this.categoryIds = categoryIds;
    return this;
  }

  public Product addCategoryIdsItem(Long categoryIdsItem) {
    if (this.categoryIds == null) {
      this.categoryIds = new ArrayList<>();
    }
    this.categoryIds.add(categoryIdsItem);
    return this;
  }

  /**
   * Get categoryIds
   * @return categoryIds
   */
  @javax.annotation.Nullable
  public List<Long> getCategoryIds() {
    return categoryIds;
  }

  public void setCategoryIds(List<Long> categoryIds) {
    this.categoryIds = categoryIds;
  }


  public Product combinations(List<Combination> combinations) {
    this.combinations = combinations;
    return this;
  }

  public Product addCombinationsItem(Combination combinationsItem) {
    if (this.combinations == null) {
      this.combinations = new ArrayList<>();
    }
    this.combinations.add(combinationsItem);
    return this;
  }

  /**
   * Get combinations
   * @return combinations
   */
  @javax.annotation.Nullable
  public List<Combination> getCombinations() {
    return combinations;
  }

  public void setCombinations(List<Combination> combinations) {
    this.combinations = combinations;
  }


  public Product compareAtPrice(Double compareAtPrice) {
    this.compareAtPrice = compareAtPrice;
    return this;
  }

  /**
   * Product’s sale price displayed strike-out in the customer
   * @return compareAtPrice
   */
  @javax.annotation.Nullable
  public Double getCompareAtPrice() {
    return compareAtPrice;
  }

  public void setCompareAtPrice(Double compareAtPrice) {
    this.compareAtPrice = compareAtPrice;
  }


  public Product compareToPrice(Double compareToPrice) {
    this.compareToPrice = compareToPrice;
    return this;
  }

  /**
   * Get compareToPrice
   * @return compareToPrice
   */
  @javax.annotation.Nullable
  public Double getCompareToPrice() {
    return compareToPrice;
  }

  public void setCompareToPrice(Double compareToPrice) {
    this.compareToPrice = compareToPrice;
  }


  public Product compareToPriceDiscount(Double compareToPriceDiscount) {
    this.compareToPriceDiscount = compareToPriceDiscount;
    return this;
  }

  /**
   * Get compareToPriceDiscount
   * @return compareToPriceDiscount
   */
  @javax.annotation.Nullable
  public Double getCompareToPriceDiscount() {
    return compareToPriceDiscount;
  }

  public void setCompareToPriceDiscount(Double compareToPriceDiscount) {
    this.compareToPriceDiscount = compareToPriceDiscount;
  }


  public Product compareToPriceDiscountFormatted(String compareToPriceDiscountFormatted) {
    this.compareToPriceDiscountFormatted = compareToPriceDiscountFormatted;
    return this;
  }

  /**
   * Get compareToPriceDiscountFormatted
   * @return compareToPriceDiscountFormatted
   */
  @javax.annotation.Nullable
  public String getCompareToPriceDiscountFormatted() {
    return compareToPriceDiscountFormatted;
  }

  public void setCompareToPriceDiscountFormatted(String compareToPriceDiscountFormatted) {
    this.compareToPriceDiscountFormatted = compareToPriceDiscountFormatted;
  }


  public Product compareToPriceDiscountPercent(Double compareToPriceDiscountPercent) {
    this.compareToPriceDiscountPercent = compareToPriceDiscountPercent;
    return this;
  }

  /**
   * Get compareToPriceDiscountPercent
   * @return compareToPriceDiscountPercent
   */
  @javax.annotation.Nullable
  public Double getCompareToPriceDiscountPercent() {
    return compareToPriceDiscountPercent;
  }

  public void setCompareToPriceDiscountPercent(Double compareToPriceDiscountPercent) {
    this.compareToPriceDiscountPercent = compareToPriceDiscountPercent;
  }


  public Product compareToPriceDiscountPercentFormatted(String compareToPriceDiscountPercentFormatted) {
    this.compareToPriceDiscountPercentFormatted = compareToPriceDiscountPercentFormatted;
    return this;
  }

  /**
   * Get compareToPriceDiscountPercentFormatted
   * @return compareToPriceDiscountPercentFormatted
   */
  @javax.annotation.Nullable
  public String getCompareToPriceDiscountPercentFormatted() {
    return compareToPriceDiscountPercentFormatted;
  }

  public void setCompareToPriceDiscountPercentFormatted(String compareToPriceDiscountPercentFormatted) {
    this.compareToPriceDiscountPercentFormatted = compareToPriceDiscountPercentFormatted;
  }


  public Product compareToPriceFormatted(String compareToPriceFormatted) {
    this.compareToPriceFormatted = compareToPriceFormatted;
    return this;
  }

  /**
   * Get compareToPriceFormatted
   * @return compareToPriceFormatted
   */
  @javax.annotation.Nullable
  public String getCompareToPriceFormatted() {
    return compareToPriceFormatted;
  }

  public void setCompareToPriceFormatted(String compareToPriceFormatted) {
    this.compareToPriceFormatted = compareToPriceFormatted;
  }


  public Product createTimestamp(Long createTimestamp) {
    this.createTimestamp = createTimestamp;
    return this;
  }

  /**
   * Get createTimestamp
   * @return createTimestamp
   */
  @javax.annotation.Nullable
  public Long getCreateTimestamp() {
    return createTimestamp;
  }

  public void setCreateTimestamp(Long createTimestamp) {
    this.createTimestamp = createTimestamp;
  }


  public Product created(String created) {
    this.created = created;
    return this;
  }

  /**
   * Ex: 2014-09-24 06:43:06
   * @return created
   */
  @javax.annotation.Nullable
  public String getCreated() {
    return created;
  }

  public void setCreated(String created) {
    this.created = created;
  }


  public Product defaultCategoryId(Long defaultCategoryId) {
    this.defaultCategoryId = defaultCategoryId;
    return this;
  }

  /**
   * Get defaultCategoryId
   * @return defaultCategoryId
   */
  @javax.annotation.Nullable
  public Long getDefaultCategoryId() {
    return defaultCategoryId;
  }

  public void setDefaultCategoryId(Long defaultCategoryId) {
    this.defaultCategoryId = defaultCategoryId;
  }


  public Product defaultCombinationId(Double defaultCombinationId) {
    this.defaultCombinationId = defaultCombinationId;
    return this;
  }

  /**
   * Get defaultCombinationId
   * @return defaultCombinationId
   */
  @javax.annotation.Nullable
  public Double getDefaultCombinationId() {
    return defaultCombinationId;
  }

  public void setDefaultCombinationId(Double defaultCombinationId) {
    this.defaultCombinationId = defaultCombinationId;
  }


  public Product defaultDisplayedPrice(Double defaultDisplayedPrice) {
    this.defaultDisplayedPrice = defaultDisplayedPrice;
    return this;
  }

  /**
   * Get defaultDisplayedPrice
   * @return defaultDisplayedPrice
   */
  @javax.annotation.Nullable
  public Double getDefaultDisplayedPrice() {
    return defaultDisplayedPrice;
  }

  public void setDefaultDisplayedPrice(Double defaultDisplayedPrice) {
    this.defaultDisplayedPrice = defaultDisplayedPrice;
  }


  public Product defaultDisplayedPriceFormatted(String defaultDisplayedPriceFormatted) {
    this.defaultDisplayedPriceFormatted = defaultDisplayedPriceFormatted;
    return this;
  }

  /**
   * Get defaultDisplayedPriceFormatted
   * @return defaultDisplayedPriceFormatted
   */
  @javax.annotation.Nullable
  public String getDefaultDisplayedPriceFormatted() {
    return defaultDisplayedPriceFormatted;
  }

  public void setDefaultDisplayedPriceFormatted(String defaultDisplayedPriceFormatted) {
    this.defaultDisplayedPriceFormatted = defaultDisplayedPriceFormatted;
  }


  public Product description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Product description in HTML
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Product descriptionTruncated(Boolean descriptionTruncated) {
    this.descriptionTruncated = descriptionTruncated;
    return this;
  }

  /**
   * Get descriptionTruncated
   * @return descriptionTruncated
   */
  @javax.annotation.Nullable
  public Boolean getDescriptionTruncated() {
    return descriptionTruncated;
  }

  public void setDescriptionTruncated(Boolean descriptionTruncated) {
    this.descriptionTruncated = descriptionTruncated;
  }


  public Product dimensions(ProductDimensions dimensions) {
    this.dimensions = dimensions;
    return this;
  }

  /**
   * Get dimensions
   * @return dimensions
   */
  @javax.annotation.Nullable
  public ProductDimensions getDimensions() {
    return dimensions;
  }

  public void setDimensions(ProductDimensions dimensions) {
    this.dimensions = dimensions;
  }


  public Product enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * true/false
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public Product favorites(Favorite favorites) {
    this.favorites = favorites;
    return this;
  }

  /**
   * Get favorites
   * @return favorites
   */
  @javax.annotation.Nullable
  public Favorite getFavorites() {
    return favorites;
  }

  public void setFavorites(Favorite favorites) {
    this.favorites = favorites;
  }


  public Product files(List<ModelFile> files) {
    this.files = files;
    return this;
  }

  public Product addFilesItem(ModelFile filesItem) {
    if (this.files == null) {
      this.files = new ArrayList<>();
    }
    this.files.add(filesItem);
    return this;
  }

  /**
   * Get files
   * @return files
   */
  @javax.annotation.Nullable
  public List<ModelFile> getFiles() {
    return files;
  }

  public void setFiles(List<ModelFile> files) {
    this.files = files;
  }


  public Product fixedShippingRate(Double fixedShippingRate) {
    this.fixedShippingRate = fixedShippingRate;
    return this;
  }

  /**
   * Get fixedShippingRate
   * @return fixedShippingRate
   */
  @javax.annotation.Nullable
  public Double getFixedShippingRate() {
    return fixedShippingRate;
  }

  public void setFixedShippingRate(Double fixedShippingRate) {
    this.fixedShippingRate = fixedShippingRate;
  }


  public Product fixedShippingRateOnly(Boolean fixedShippingRateOnly) {
    this.fixedShippingRateOnly = fixedShippingRateOnly;
    return this;
  }

  /**
   * true/false
   * @return fixedShippingRateOnly
   */
  @javax.annotation.Nullable
  public Boolean getFixedShippingRateOnly() {
    return fixedShippingRateOnly;
  }

  public void setFixedShippingRateOnly(Boolean fixedShippingRateOnly) {
    this.fixedShippingRateOnly = fixedShippingRateOnly;
  }


  public Product galleryImages(List<GalleryImage> galleryImages) {
    this.galleryImages = galleryImages;
    return this;
  }

  public Product addGalleryImagesItem(GalleryImage galleryImagesItem) {
    if (this.galleryImages == null) {
      this.galleryImages = new ArrayList<>();
    }
    this.galleryImages.add(galleryImagesItem);
    return this;
  }

  /**
   * Get galleryImages
   * @return galleryImages
   */
  @javax.annotation.Nullable
  public List<GalleryImage> getGalleryImages() {
    return galleryImages;
  }

  public void setGalleryImages(List<GalleryImage> galleryImages) {
    this.galleryImages = galleryImages;
  }


  public Product googleItemCondition(String googleItemCondition) {
    this.googleItemCondition = googleItemCondition;
    return this;
  }

  /**
   * Google Item Condition Status
   * @return googleItemCondition
   */
  @javax.annotation.Nullable
  public String getGoogleItemCondition() {
    return googleItemCondition;
  }

  public void setGoogleItemCondition(String googleItemCondition) {
    this.googleItemCondition = googleItemCondition;
  }


  public Product hdThumbnailUrl(String hdThumbnailUrl) {
    this.hdThumbnailUrl = hdThumbnailUrl;
    return this;
  }

  /**
   * Get hdThumbnailUrl
   * @return hdThumbnailUrl
   */
  @javax.annotation.Nullable
  public String getHdThumbnailUrl() {
    return hdThumbnailUrl;
  }

  public void setHdThumbnailUrl(String hdThumbnailUrl) {
    this.hdThumbnailUrl = hdThumbnailUrl;
  }


  public Product id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public Product imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

  /**
   * Get imageUrl
   * @return imageUrl
   */
  @javax.annotation.Nullable
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }


  public Product inStock(Boolean inStock) {
    this.inStock = inStock;
    return this;
  }

  /**
   * true/false
   * @return inStock
   */
  @javax.annotation.Nullable
  public Boolean getInStock() {
    return inStock;
  }

  public void setInStock(Boolean inStock) {
    this.inStock = inStock;
  }


  public Product isSampleProduct(Boolean isSampleProduct) {
    this.isSampleProduct = isSampleProduct;
    return this;
  }

  /**
   * Get isSampleProduct
   * @return isSampleProduct
   */
  @javax.annotation.Nullable
  public Boolean getIsSampleProduct() {
    return isSampleProduct;
  }

  public void setIsSampleProduct(Boolean isSampleProduct) {
    this.isSampleProduct = isSampleProduct;
  }


  public Product isShippingRequired(Boolean isShippingRequired) {
    this.isShippingRequired = isShippingRequired;
    return this;
  }

  /**
   * Get isShippingRequired
   * @return isShippingRequired
   */
  @javax.annotation.Nullable
  public Boolean getIsShippingRequired() {
    return isShippingRequired;
  }

  public void setIsShippingRequired(Boolean isShippingRequired) {
    this.isShippingRequired = isShippingRequired;
  }


  public Product media(Media media) {
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nullable
  public Media getMedia() {
    return media;
  }

  public void setMedia(Media media) {
    this.media = media;
  }


  public Product name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Product title
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Product options(List<Option> options) {
    this.options = options;
    return this;
  }

  public Product addOptionsItem(Option optionsItem) {
    if (this.options == null) {
      this.options = new ArrayList<>();
    }
    this.options.add(optionsItem);
    return this;
  }

  /**
   * Get options
   * @return options
   */
  @javax.annotation.Nullable
  public List<Option> getOptions() {
    return options;
  }

  public void setOptions(List<Option> options) {
    this.options = options;
  }


  public Product originalImage(GalleryImage originalImage) {
    this.originalImage = originalImage;
    return this;
  }

  /**
   * Get originalImage
   * @return originalImage
   */
  @javax.annotation.Nullable
  public GalleryImage getOriginalImage() {
    return originalImage;
  }

  public void setOriginalImage(GalleryImage originalImage) {
    this.originalImage = originalImage;
  }


  public Product originalImageUrl(String originalImageUrl) {
    this.originalImageUrl = originalImageUrl;
    return this;
  }

  /**
   * Get originalImageUrl
   * @return originalImageUrl
   */
  @javax.annotation.Nullable
  public String getOriginalImageUrl() {
    return originalImageUrl;
  }

  public void setOriginalImageUrl(String originalImageUrl) {
    this.originalImageUrl = originalImageUrl;
  }


  public Product price(Double price) {
    this.price = price;
    return this;
  }

  /**
   * Base Product price
   * @return price
   */
  @javax.annotation.Nullable
  public Double getPrice() {
    return price;
  }

  public void setPrice(Double price) {
    this.price = price;
  }


  public Product priceInProductList(Double priceInProductList) {
    this.priceInProductList = priceInProductList;
    return this;
  }

  /**
   * Get priceInProductList
   * @return priceInProductList
   */
  @javax.annotation.Nullable
  public Double getPriceInProductList() {
    return priceInProductList;
  }

  public void setPriceInProductList(Double priceInProductList) {
    this.priceInProductList = priceInProductList;
  }


  public Product productClassId(Long productClassId) {
    this.productClassId = productClassId;
    return this;
  }

  /**
   * Id of the product type that this product belongs to.
   * @return productClassId
   */
  @javax.annotation.Nullable
  public Long getProductClassId() {
    return productClassId;
  }

  public void setProductClassId(Long productClassId) {
    this.productClassId = productClassId;
  }


  public Product quantity(Long quantity) {
    this.quantity = quantity;
    return this;
  }

  /**
   * Amount of product items in stock.
   * @return quantity
   */
  @javax.annotation.Nullable
  public Long getQuantity() {
    return quantity;
  }

  public void setQuantity(Long quantity) {
    this.quantity = quantity;
  }


  public Product quantityDelta(Long quantityDelta) {
    this.quantityDelta = quantityDelta;
    return this;
  }

  /**
   * Get quantityDelta
   * @return quantityDelta
   */
  @javax.annotation.Nullable
  public Long getQuantityDelta() {
    return quantityDelta;
  }

  public void setQuantityDelta(Long quantityDelta) {
    this.quantityDelta = quantityDelta;
  }


  public Product relatedProducts(RelatedProducts relatedProducts) {
    this.relatedProducts = relatedProducts;
    return this;
  }

  /**
   * Get relatedProducts
   * @return relatedProducts
   */
  @javax.annotation.Nullable
  public RelatedProducts getRelatedProducts() {
    return relatedProducts;
  }

  public void setRelatedProducts(RelatedProducts relatedProducts) {
    this.relatedProducts = relatedProducts;
  }


  public Product seoDescription(String seoDescription) {
    this.seoDescription = seoDescription;
    return this;
  }

  /**
   * Get seoDescription
   * @return seoDescription
   */
  @javax.annotation.Nullable
  public String getSeoDescription() {
    return seoDescription;
  }

  public void setSeoDescription(String seoDescription) {
    this.seoDescription = seoDescription;
  }


  public Product seoTitle(String seoTitle) {
    this.seoTitle = seoTitle;
    return this;
  }

  /**
   * Get seoTitle
   * @return seoTitle
   */
  @javax.annotation.Nullable
  public String getSeoTitle() {
    return seoTitle;
  }

  public void setSeoTitle(String seoTitle) {
    this.seoTitle = seoTitle;
  }


  public Product shipping(Shipping shipping) {
    this.shipping = shipping;
    return this;
  }

  /**
   * Get shipping
   * @return shipping
   */
  @javax.annotation.Nullable
  public Shipping getShipping() {
    return shipping;
  }

  public void setShipping(Shipping shipping) {
    this.shipping = shipping;
  }


  public Product showOnFrontpage(Double showOnFrontpage) {
    this.showOnFrontpage = showOnFrontpage;
    return this;
  }

  /**
   * Get showOnFrontpage
   * @return showOnFrontpage
   */
  @javax.annotation.Nullable
  public Double getShowOnFrontpage() {
    return showOnFrontpage;
  }

  public void setShowOnFrontpage(Double showOnFrontpage) {
    this.showOnFrontpage = showOnFrontpage;
  }


  public Product sku(String sku) {
    this.sku = sku;
    return this;
  }

  /**
   * Product SKU
   * @return sku
   */
  @javax.annotation.Nullable
  public String getSku() {
    return sku;
  }

  public void setSku(String sku) {
    this.sku = sku;
  }


  public Product smallThumbnailUrl(String smallThumbnailUrl) {
    this.smallThumbnailUrl = smallThumbnailUrl;
    return this;
  }

  /**
   * Get smallThumbnailUrl
   * @return smallThumbnailUrl
   */
  @javax.annotation.Nullable
  public String getSmallThumbnailUrl() {
    return smallThumbnailUrl;
  }

  public void setSmallThumbnailUrl(String smallThumbnailUrl) {
    this.smallThumbnailUrl = smallThumbnailUrl;
  }


  public Product tangible(String tangible) {
    this.tangible = tangible;
    return this;
  }

  /**
   * true/false
   * @return tangible
   */
  @javax.annotation.Nullable
  public String getTangible() {
    return tangible;
  }

  public void setTangible(String tangible) {
    this.tangible = tangible;
  }


  public Product tax(ProductTax tax) {
    this.tax = tax;
    return this;
  }

  /**
   * Get tax
   * @return tax
   */
  @javax.annotation.Nullable
  public ProductTax getTax() {
    return tax;
  }

  public void setTax(ProductTax tax) {
    this.tax = tax;
  }


  public Product taxes(List<Tax> taxes) {
    this.taxes = taxes;
    return this;
  }

  public Product addTaxesItem(Tax taxesItem) {
    if (this.taxes == null) {
      this.taxes = new ArrayList<>();
    }
    this.taxes.add(taxesItem);
    return this;
  }

  /**
   * Get taxes
   * @return taxes
   */
  @javax.annotation.Nullable
  public List<Tax> getTaxes() {
    return taxes;
  }

  public void setTaxes(List<Tax> taxes) {
    this.taxes = taxes;
  }


  public Product thumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
    return this;
  }

  /**
   * Get thumbnailUrl
   * @return thumbnailUrl
   */
  @javax.annotation.Nullable
  public String getThumbnailUrl() {
    return thumbnailUrl;
  }

  public void setThumbnailUrl(String thumbnailUrl) {
    this.thumbnailUrl = thumbnailUrl;
  }


  public Product trackQuantity(String trackQuantity) {
    this.trackQuantity = trackQuantity;
    return this;
  }

  /**
   * true/false
   * @return trackQuantity
   */
  @javax.annotation.Nullable
  public String getTrackQuantity() {
    return trackQuantity;
  }

  public void setTrackQuantity(String trackQuantity) {
    this.trackQuantity = trackQuantity;
  }


  public Product unlimited(Boolean unlimited) {
    this.unlimited = unlimited;
    return this;
  }

  /**
   * Get unlimited
   * @return unlimited
   */
  @javax.annotation.Nullable
  public Boolean getUnlimited() {
    return unlimited;
  }

  public void setUnlimited(Boolean unlimited) {
    this.unlimited = unlimited;
  }


  public Product updateTimestamp(Long updateTimestamp) {
    this.updateTimestamp = updateTimestamp;
    return this;
  }

  /**
   * Get updateTimestamp
   * @return updateTimestamp
   */
  @javax.annotation.Nullable
  public Long getUpdateTimestamp() {
    return updateTimestamp;
  }

  public void setUpdateTimestamp(Long updateTimestamp) {
    this.updateTimestamp = updateTimestamp;
  }


  public Product updated(String updated) {
    this.updated = updated;
    return this;
  }

  /**
   * Ex: 2015-02-03 15:30:46
   * @return updated
   */
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }


  public Product url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public Product warningLimit(Long warningLimit) {
    this.warningLimit = warningLimit;
    return this;
  }

  /**
   * Get warningLimit
   * @return warningLimit
   */
  @javax.annotation.Nullable
  public Long getWarningLimit() {
    return warningLimit;
  }

  public void setWarningLimit(Long warningLimit) {
    this.warningLimit = warningLimit;
  }


  public Product weight(Double weight) {
    this.weight = weight;
    return this;
  }

  /**
   * Product weight in the units defined in store settings
   * @return weight
   */
  @javax.annotation.Nullable
  public Double getWeight() {
    return weight;
  }

  public void setWeight(Double weight) {
    this.weight = weight;
  }


  public Product wholesalePrices(WholesalePrices wholesalePrices) {
    this.wholesalePrices = wholesalePrices;
    return this;
  }

  /**
   * Get wholesalePrices
   * @return wholesalePrices
   */
  @javax.annotation.Nullable
  public WholesalePrices getWholesalePrices() {
    return wholesalePrices;
  }

  public void setWholesalePrices(WholesalePrices wholesalePrices) {
    this.wholesalePrices = wholesalePrices;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.attributes, product.attributes) &&
        Objects.equals(this.borderInfo, product.borderInfo) &&
        Objects.equals(this.categories, product.categories) &&
        Objects.equals(this.categoryIds, product.categoryIds) &&
        Objects.equals(this.combinations, product.combinations) &&
        Objects.equals(this.compareAtPrice, product.compareAtPrice) &&
        Objects.equals(this.compareToPrice, product.compareToPrice) &&
        Objects.equals(this.compareToPriceDiscount, product.compareToPriceDiscount) &&
        Objects.equals(this.compareToPriceDiscountFormatted, product.compareToPriceDiscountFormatted) &&
        Objects.equals(this.compareToPriceDiscountPercent, product.compareToPriceDiscountPercent) &&
        Objects.equals(this.compareToPriceDiscountPercentFormatted, product.compareToPriceDiscountPercentFormatted) &&
        Objects.equals(this.compareToPriceFormatted, product.compareToPriceFormatted) &&
        Objects.equals(this.createTimestamp, product.createTimestamp) &&
        Objects.equals(this.created, product.created) &&
        Objects.equals(this.defaultCategoryId, product.defaultCategoryId) &&
        Objects.equals(this.defaultCombinationId, product.defaultCombinationId) &&
        Objects.equals(this.defaultDisplayedPrice, product.defaultDisplayedPrice) &&
        Objects.equals(this.defaultDisplayedPriceFormatted, product.defaultDisplayedPriceFormatted) &&
        Objects.equals(this.description, product.description) &&
        Objects.equals(this.descriptionTruncated, product.descriptionTruncated) &&
        Objects.equals(this.dimensions, product.dimensions) &&
        Objects.equals(this.enabled, product.enabled) &&
        Objects.equals(this.favorites, product.favorites) &&
        Objects.equals(this.files, product.files) &&
        Objects.equals(this.fixedShippingRate, product.fixedShippingRate) &&
        Objects.equals(this.fixedShippingRateOnly, product.fixedShippingRateOnly) &&
        Objects.equals(this.galleryImages, product.galleryImages) &&
        Objects.equals(this.googleItemCondition, product.googleItemCondition) &&
        Objects.equals(this.hdThumbnailUrl, product.hdThumbnailUrl) &&
        Objects.equals(this.id, product.id) &&
        Objects.equals(this.imageUrl, product.imageUrl) &&
        Objects.equals(this.inStock, product.inStock) &&
        Objects.equals(this.isSampleProduct, product.isSampleProduct) &&
        Objects.equals(this.isShippingRequired, product.isShippingRequired) &&
        Objects.equals(this.media, product.media) &&
        Objects.equals(this.name, product.name) &&
        Objects.equals(this.options, product.options) &&
        Objects.equals(this.originalImage, product.originalImage) &&
        Objects.equals(this.originalImageUrl, product.originalImageUrl) &&
        Objects.equals(this.price, product.price) &&
        Objects.equals(this.priceInProductList, product.priceInProductList) &&
        Objects.equals(this.productClassId, product.productClassId) &&
        Objects.equals(this.quantity, product.quantity) &&
        Objects.equals(this.quantityDelta, product.quantityDelta) &&
        Objects.equals(this.relatedProducts, product.relatedProducts) &&
        Objects.equals(this.seoDescription, product.seoDescription) &&
        Objects.equals(this.seoTitle, product.seoTitle) &&
        Objects.equals(this.shipping, product.shipping) &&
        Objects.equals(this.showOnFrontpage, product.showOnFrontpage) &&
        Objects.equals(this.sku, product.sku) &&
        Objects.equals(this.smallThumbnailUrl, product.smallThumbnailUrl) &&
        Objects.equals(this.tangible, product.tangible) &&
        Objects.equals(this.tax, product.tax) &&
        Objects.equals(this.taxes, product.taxes) &&
        Objects.equals(this.thumbnailUrl, product.thumbnailUrl) &&
        Objects.equals(this.trackQuantity, product.trackQuantity) &&
        Objects.equals(this.unlimited, product.unlimited) &&
        Objects.equals(this.updateTimestamp, product.updateTimestamp) &&
        Objects.equals(this.updated, product.updated) &&
        Objects.equals(this.url, product.url) &&
        Objects.equals(this.warningLimit, product.warningLimit) &&
        Objects.equals(this.weight, product.weight) &&
        Objects.equals(this.wholesalePrices, product.wholesalePrices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, borderInfo, categories, categoryIds, combinations, compareAtPrice, compareToPrice, compareToPriceDiscount, compareToPriceDiscountFormatted, compareToPriceDiscountPercent, compareToPriceDiscountPercentFormatted, compareToPriceFormatted, createTimestamp, created, defaultCategoryId, defaultCombinationId, defaultDisplayedPrice, defaultDisplayedPriceFormatted, description, descriptionTruncated, dimensions, enabled, favorites, files, fixedShippingRate, fixedShippingRateOnly, galleryImages, googleItemCondition, hdThumbnailUrl, id, imageUrl, inStock, isSampleProduct, isShippingRequired, media, name, options, originalImage, originalImageUrl, price, priceInProductList, productClassId, quantity, quantityDelta, relatedProducts, seoDescription, seoTitle, shipping, showOnFrontpage, sku, smallThumbnailUrl, tangible, tax, taxes, thumbnailUrl, trackQuantity, unlimited, updateTimestamp, updated, url, warningLimit, weight, wholesalePrices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    borderInfo: ").append(toIndentedString(borderInfo)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    categoryIds: ").append(toIndentedString(categoryIds)).append("\n");
    sb.append("    combinations: ").append(toIndentedString(combinations)).append("\n");
    sb.append("    compareAtPrice: ").append(toIndentedString(compareAtPrice)).append("\n");
    sb.append("    compareToPrice: ").append(toIndentedString(compareToPrice)).append("\n");
    sb.append("    compareToPriceDiscount: ").append(toIndentedString(compareToPriceDiscount)).append("\n");
    sb.append("    compareToPriceDiscountFormatted: ").append(toIndentedString(compareToPriceDiscountFormatted)).append("\n");
    sb.append("    compareToPriceDiscountPercent: ").append(toIndentedString(compareToPriceDiscountPercent)).append("\n");
    sb.append("    compareToPriceDiscountPercentFormatted: ").append(toIndentedString(compareToPriceDiscountPercentFormatted)).append("\n");
    sb.append("    compareToPriceFormatted: ").append(toIndentedString(compareToPriceFormatted)).append("\n");
    sb.append("    createTimestamp: ").append(toIndentedString(createTimestamp)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    defaultCategoryId: ").append(toIndentedString(defaultCategoryId)).append("\n");
    sb.append("    defaultCombinationId: ").append(toIndentedString(defaultCombinationId)).append("\n");
    sb.append("    defaultDisplayedPrice: ").append(toIndentedString(defaultDisplayedPrice)).append("\n");
    sb.append("    defaultDisplayedPriceFormatted: ").append(toIndentedString(defaultDisplayedPriceFormatted)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    descriptionTruncated: ").append(toIndentedString(descriptionTruncated)).append("\n");
    sb.append("    dimensions: ").append(toIndentedString(dimensions)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    favorites: ").append(toIndentedString(favorites)).append("\n");
    sb.append("    files: ").append(toIndentedString(files)).append("\n");
    sb.append("    fixedShippingRate: ").append(toIndentedString(fixedShippingRate)).append("\n");
    sb.append("    fixedShippingRateOnly: ").append(toIndentedString(fixedShippingRateOnly)).append("\n");
    sb.append("    galleryImages: ").append(toIndentedString(galleryImages)).append("\n");
    sb.append("    googleItemCondition: ").append(toIndentedString(googleItemCondition)).append("\n");
    sb.append("    hdThumbnailUrl: ").append(toIndentedString(hdThumbnailUrl)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    inStock: ").append(toIndentedString(inStock)).append("\n");
    sb.append("    isSampleProduct: ").append(toIndentedString(isSampleProduct)).append("\n");
    sb.append("    isShippingRequired: ").append(toIndentedString(isShippingRequired)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    originalImage: ").append(toIndentedString(originalImage)).append("\n");
    sb.append("    originalImageUrl: ").append(toIndentedString(originalImageUrl)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceInProductList: ").append(toIndentedString(priceInProductList)).append("\n");
    sb.append("    productClassId: ").append(toIndentedString(productClassId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    quantityDelta: ").append(toIndentedString(quantityDelta)).append("\n");
    sb.append("    relatedProducts: ").append(toIndentedString(relatedProducts)).append("\n");
    sb.append("    seoDescription: ").append(toIndentedString(seoDescription)).append("\n");
    sb.append("    seoTitle: ").append(toIndentedString(seoTitle)).append("\n");
    sb.append("    shipping: ").append(toIndentedString(shipping)).append("\n");
    sb.append("    showOnFrontpage: ").append(toIndentedString(showOnFrontpage)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    smallThumbnailUrl: ").append(toIndentedString(smallThumbnailUrl)).append("\n");
    sb.append("    tangible: ").append(toIndentedString(tangible)).append("\n");
    sb.append("    tax: ").append(toIndentedString(tax)).append("\n");
    sb.append("    taxes: ").append(toIndentedString(taxes)).append("\n");
    sb.append("    thumbnailUrl: ").append(toIndentedString(thumbnailUrl)).append("\n");
    sb.append("    trackQuantity: ").append(toIndentedString(trackQuantity)).append("\n");
    sb.append("    unlimited: ").append(toIndentedString(unlimited)).append("\n");
    sb.append("    updateTimestamp: ").append(toIndentedString(updateTimestamp)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    warningLimit: ").append(toIndentedString(warningLimit)).append("\n");
    sb.append("    weight: ").append(toIndentedString(weight)).append("\n");
    sb.append("    wholesalePrices: ").append(toIndentedString(wholesalePrices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attributes");
    openapiFields.add("borderInfo");
    openapiFields.add("categories");
    openapiFields.add("categoryIds");
    openapiFields.add("combinations");
    openapiFields.add("compareAtPrice");
    openapiFields.add("compareToPrice");
    openapiFields.add("compareToPriceDiscount");
    openapiFields.add("compareToPriceDiscountFormatted");
    openapiFields.add("compareToPriceDiscountPercent");
    openapiFields.add("compareToPriceDiscountPercentFormatted");
    openapiFields.add("compareToPriceFormatted");
    openapiFields.add("createTimestamp");
    openapiFields.add("created");
    openapiFields.add("defaultCategoryId");
    openapiFields.add("defaultCombinationId");
    openapiFields.add("defaultDisplayedPrice");
    openapiFields.add("defaultDisplayedPriceFormatted");
    openapiFields.add("description");
    openapiFields.add("descriptionTruncated");
    openapiFields.add("dimensions");
    openapiFields.add("enabled");
    openapiFields.add("favorites");
    openapiFields.add("files");
    openapiFields.add("fixedShippingRate");
    openapiFields.add("fixedShippingRateOnly");
    openapiFields.add("galleryImages");
    openapiFields.add("googleItemCondition");
    openapiFields.add("hdThumbnailUrl");
    openapiFields.add("id");
    openapiFields.add("imageUrl");
    openapiFields.add("inStock");
    openapiFields.add("isSampleProduct");
    openapiFields.add("isShippingRequired");
    openapiFields.add("media");
    openapiFields.add("name");
    openapiFields.add("options");
    openapiFields.add("originalImage");
    openapiFields.add("originalImageUrl");
    openapiFields.add("price");
    openapiFields.add("priceInProductList");
    openapiFields.add("productClassId");
    openapiFields.add("quantity");
    openapiFields.add("quantityDelta");
    openapiFields.add("relatedProducts");
    openapiFields.add("seoDescription");
    openapiFields.add("seoTitle");
    openapiFields.add("shipping");
    openapiFields.add("showOnFrontpage");
    openapiFields.add("sku");
    openapiFields.add("smallThumbnailUrl");
    openapiFields.add("tangible");
    openapiFields.add("tax");
    openapiFields.add("taxes");
    openapiFields.add("thumbnailUrl");
    openapiFields.add("trackQuantity");
    openapiFields.add("unlimited");
    openapiFields.add("updateTimestamp");
    openapiFields.add("updated");
    openapiFields.add("url");
    openapiFields.add("warningLimit");
    openapiFields.add("weight");
    openapiFields.add("wholesalePrices");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Product
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Product is not found in the empty JSON string", Product.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Product` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("attributes") != null && !jsonObj.get("attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attributes` to be an array in the JSON string but got `%s`", jsonObj.get("attributes").toString()));
          }

          // validate the optional field `attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            Attribute.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      // validate the optional field `borderInfo`
      if (jsonObj.get("borderInfo") != null && !jsonObj.get("borderInfo").isJsonNull()) {
        BorderInfo.validateJsonElement(jsonObj.get("borderInfo"));
      }
      if (jsonObj.get("categories") != null && !jsonObj.get("categories").isJsonNull()) {
        JsonArray jsonArraycategories = jsonObj.getAsJsonArray("categories");
        if (jsonArraycategories != null) {
          // ensure the json data is an array
          if (!jsonObj.get("categories").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `categories` to be an array in the JSON string but got `%s`", jsonObj.get("categories").toString()));
          }

          // validate the optional field `categories` (array)
          for (int i = 0; i < jsonArraycategories.size(); i++) {
            Category.validateJsonElement(jsonArraycategories.get(i));
          };
        }
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("categoryIds") != null && !jsonObj.get("categoryIds").isJsonNull() && !jsonObj.get("categoryIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `categoryIds` to be an array in the JSON string but got `%s`", jsonObj.get("categoryIds").toString()));
      }
      if (jsonObj.get("combinations") != null && !jsonObj.get("combinations").isJsonNull()) {
        JsonArray jsonArraycombinations = jsonObj.getAsJsonArray("combinations");
        if (jsonArraycombinations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("combinations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `combinations` to be an array in the JSON string but got `%s`", jsonObj.get("combinations").toString()));
          }

          // validate the optional field `combinations` (array)
          for (int i = 0; i < jsonArraycombinations.size(); i++) {
            Combination.validateJsonElement(jsonArraycombinations.get(i));
          };
        }
      }
      if ((jsonObj.get("compareToPriceDiscountFormatted") != null && !jsonObj.get("compareToPriceDiscountFormatted").isJsonNull()) && !jsonObj.get("compareToPriceDiscountFormatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compareToPriceDiscountFormatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compareToPriceDiscountFormatted").toString()));
      }
      if ((jsonObj.get("compareToPriceDiscountPercentFormatted") != null && !jsonObj.get("compareToPriceDiscountPercentFormatted").isJsonNull()) && !jsonObj.get("compareToPriceDiscountPercentFormatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compareToPriceDiscountPercentFormatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compareToPriceDiscountPercentFormatted").toString()));
      }
      if ((jsonObj.get("compareToPriceFormatted") != null && !jsonObj.get("compareToPriceFormatted").isJsonNull()) && !jsonObj.get("compareToPriceFormatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `compareToPriceFormatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("compareToPriceFormatted").toString()));
      }
      if ((jsonObj.get("created") != null && !jsonObj.get("created").isJsonNull()) && !jsonObj.get("created").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created").toString()));
      }
      if ((jsonObj.get("defaultDisplayedPriceFormatted") != null && !jsonObj.get("defaultDisplayedPriceFormatted").isJsonNull()) && !jsonObj.get("defaultDisplayedPriceFormatted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `defaultDisplayedPriceFormatted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("defaultDisplayedPriceFormatted").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the optional field `dimensions`
      if (jsonObj.get("dimensions") != null && !jsonObj.get("dimensions").isJsonNull()) {
        ProductDimensions.validateJsonElement(jsonObj.get("dimensions"));
      }
      // validate the optional field `favorites`
      if (jsonObj.get("favorites") != null && !jsonObj.get("favorites").isJsonNull()) {
        Favorite.validateJsonElement(jsonObj.get("favorites"));
      }
      if (jsonObj.get("files") != null && !jsonObj.get("files").isJsonNull()) {
        JsonArray jsonArrayfiles = jsonObj.getAsJsonArray("files");
        if (jsonArrayfiles != null) {
          // ensure the json data is an array
          if (!jsonObj.get("files").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `files` to be an array in the JSON string but got `%s`", jsonObj.get("files").toString()));
          }

          // validate the optional field `files` (array)
          for (int i = 0; i < jsonArrayfiles.size(); i++) {
            ModelFile.validateJsonElement(jsonArrayfiles.get(i));
          };
        }
      }
      if (jsonObj.get("galleryImages") != null && !jsonObj.get("galleryImages").isJsonNull()) {
        JsonArray jsonArraygalleryImages = jsonObj.getAsJsonArray("galleryImages");
        if (jsonArraygalleryImages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("galleryImages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `galleryImages` to be an array in the JSON string but got `%s`", jsonObj.get("galleryImages").toString()));
          }

          // validate the optional field `galleryImages` (array)
          for (int i = 0; i < jsonArraygalleryImages.size(); i++) {
            GalleryImage.validateJsonElement(jsonArraygalleryImages.get(i));
          };
        }
      }
      if ((jsonObj.get("googleItemCondition") != null && !jsonObj.get("googleItemCondition").isJsonNull()) && !jsonObj.get("googleItemCondition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `googleItemCondition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("googleItemCondition").toString()));
      }
      if ((jsonObj.get("hdThumbnailUrl") != null && !jsonObj.get("hdThumbnailUrl").isJsonNull()) && !jsonObj.get("hdThumbnailUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hdThumbnailUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hdThumbnailUrl").toString()));
      }
      if ((jsonObj.get("imageUrl") != null && !jsonObj.get("imageUrl").isJsonNull()) && !jsonObj.get("imageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imageUrl").toString()));
      }
      // validate the optional field `media`
      if (jsonObj.get("media") != null && !jsonObj.get("media").isJsonNull()) {
        Media.validateJsonElement(jsonObj.get("media"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if (jsonObj.get("options") != null && !jsonObj.get("options").isJsonNull()) {
        JsonArray jsonArrayoptions = jsonObj.getAsJsonArray("options");
        if (jsonArrayoptions != null) {
          // ensure the json data is an array
          if (!jsonObj.get("options").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `options` to be an array in the JSON string but got `%s`", jsonObj.get("options").toString()));
          }

          // validate the optional field `options` (array)
          for (int i = 0; i < jsonArrayoptions.size(); i++) {
            Option.validateJsonElement(jsonArrayoptions.get(i));
          };
        }
      }
      // validate the optional field `originalImage`
      if (jsonObj.get("originalImage") != null && !jsonObj.get("originalImage").isJsonNull()) {
        GalleryImage.validateJsonElement(jsonObj.get("originalImage"));
      }
      if ((jsonObj.get("originalImageUrl") != null && !jsonObj.get("originalImageUrl").isJsonNull()) && !jsonObj.get("originalImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `originalImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("originalImageUrl").toString()));
      }
      // validate the optional field `relatedProducts`
      if (jsonObj.get("relatedProducts") != null && !jsonObj.get("relatedProducts").isJsonNull()) {
        RelatedProducts.validateJsonElement(jsonObj.get("relatedProducts"));
      }
      if ((jsonObj.get("seoDescription") != null && !jsonObj.get("seoDescription").isJsonNull()) && !jsonObj.get("seoDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seoDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seoDescription").toString()));
      }
      if ((jsonObj.get("seoTitle") != null && !jsonObj.get("seoTitle").isJsonNull()) && !jsonObj.get("seoTitle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seoTitle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seoTitle").toString()));
      }
      // validate the optional field `shipping`
      if (jsonObj.get("shipping") != null && !jsonObj.get("shipping").isJsonNull()) {
        Shipping.validateJsonElement(jsonObj.get("shipping"));
      }
      if ((jsonObj.get("sku") != null && !jsonObj.get("sku").isJsonNull()) && !jsonObj.get("sku").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sku` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sku").toString()));
      }
      if ((jsonObj.get("smallThumbnailUrl") != null && !jsonObj.get("smallThumbnailUrl").isJsonNull()) && !jsonObj.get("smallThumbnailUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smallThumbnailUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smallThumbnailUrl").toString()));
      }
      if ((jsonObj.get("tangible") != null && !jsonObj.get("tangible").isJsonNull()) && !jsonObj.get("tangible").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tangible` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tangible").toString()));
      }
      // validate the optional field `tax`
      if (jsonObj.get("tax") != null && !jsonObj.get("tax").isJsonNull()) {
        ProductTax.validateJsonElement(jsonObj.get("tax"));
      }
      if (jsonObj.get("taxes") != null && !jsonObj.get("taxes").isJsonNull()) {
        JsonArray jsonArraytaxes = jsonObj.getAsJsonArray("taxes");
        if (jsonArraytaxes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("taxes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `taxes` to be an array in the JSON string but got `%s`", jsonObj.get("taxes").toString()));
          }

          // validate the optional field `taxes` (array)
          for (int i = 0; i < jsonArraytaxes.size(); i++) {
            Tax.validateJsonElement(jsonArraytaxes.get(i));
          };
        }
      }
      if ((jsonObj.get("thumbnailUrl") != null && !jsonObj.get("thumbnailUrl").isJsonNull()) && !jsonObj.get("thumbnailUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `thumbnailUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("thumbnailUrl").toString()));
      }
      if ((jsonObj.get("trackQuantity") != null && !jsonObj.get("trackQuantity").isJsonNull()) && !jsonObj.get("trackQuantity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `trackQuantity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("trackQuantity").toString()));
      }
      if ((jsonObj.get("updated") != null && !jsonObj.get("updated").isJsonNull()) && !jsonObj.get("updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated").toString()));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      // validate the optional field `wholesalePrices`
      if (jsonObj.get("wholesalePrices") != null && !jsonObj.get("wholesalePrices").isJsonNull()) {
        WholesalePrices.validateJsonElement(jsonObj.get("wholesalePrices"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Product.class));

       return (TypeAdapter<T>) new TypeAdapter<Product>() {
           @Override
           public void write(JsonWriter out, Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Product read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Product given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Product
   * @throws IOException if the JSON string is invalid with respect to Product
   */
  public static Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Product.class);
  }

  /**
   * Convert an instance of Product to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

