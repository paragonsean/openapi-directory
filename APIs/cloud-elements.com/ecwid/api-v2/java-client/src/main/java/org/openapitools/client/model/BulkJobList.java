/*
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BulkJobList
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:10:09.313051-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BulkJobList {
  public static final String SERIALIZED_NAME_COMPLETION_TIME = "completion_time";
  @SerializedName(SERIALIZED_NAME_COMPLETION_TIME)
  private Long completionTime;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private Long createdDate;

  public static final String SERIALIZED_NAME_ERROR_COUNT = "error_count";
  @SerializedName(SERIALIZED_NAME_ERROR_COUNT)
  private Integer errorCount;

  public static final String SERIALIZED_NAME_FILE_FORMAT = "fileFormat";
  @SerializedName(SERIALIZED_NAME_FILE_FORMAT)
  private String fileFormat;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_INSTANCE_ID = "instanceId";
  @SerializedName(SERIALIZED_NAME_INSTANCE_ID)
  private Integer instanceId;

  public static final String SERIALIZED_NAME_JOB_DIRECTION = "job_direction";
  @SerializedName(SERIALIZED_NAME_JOB_DIRECTION)
  private String jobDirection;

  public static final String SERIALIZED_NAME_JOB_QUERY = "job_query";
  @SerializedName(SERIALIZED_NAME_JOB_QUERY)
  private String jobQuery;

  public static final String SERIALIZED_NAME_JOB_RESET_ATTEMPT = "job_reset_attempt";
  @SerializedName(SERIALIZED_NAME_JOB_RESET_ATTEMPT)
  private Integer jobResetAttempt;

  public static final String SERIALIZED_NAME_JOB_STATE = "job_state";
  @SerializedName(SERIALIZED_NAME_JOB_STATE)
  private String jobState;

  public static final String SERIALIZED_NAME_NOTIFICATION_URL = "notification_url";
  @SerializedName(SERIALIZED_NAME_NOTIFICATION_URL)
  private String notificationUrl;

  public static final String SERIALIZED_NAME_OBJECT_NAME = "object_name";
  @SerializedName(SERIALIZED_NAME_OBJECT_NAME)
  private String objectName;

  public static final String SERIALIZED_NAME_RECORD_COUNT = "record_count";
  @SerializedName(SERIALIZED_NAME_RECORD_COUNT)
  private Integer recordCount;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public BulkJobList() {
  }

  public BulkJobList completionTime(Long completionTime) {
    this.completionTime = completionTime;
    return this;
  }

  /**
   * Get completionTime
   * @return completionTime
   */
  @javax.annotation.Nullable
  public Long getCompletionTime() {
    return completionTime;
  }

  public void setCompletionTime(Long completionTime) {
    this.completionTime = completionTime;
  }


  public BulkJobList createdDate(Long createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public Long getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(Long createdDate) {
    this.createdDate = createdDate;
  }


  public BulkJobList errorCount(Integer errorCount) {
    this.errorCount = errorCount;
    return this;
  }

  /**
   * Get errorCount
   * @return errorCount
   */
  @javax.annotation.Nullable
  public Integer getErrorCount() {
    return errorCount;
  }

  public void setErrorCount(Integer errorCount) {
    this.errorCount = errorCount;
  }


  public BulkJobList fileFormat(String fileFormat) {
    this.fileFormat = fileFormat;
    return this;
  }

  /**
   * Get fileFormat
   * @return fileFormat
   */
  @javax.annotation.Nullable
  public String getFileFormat() {
    return fileFormat;
  }

  public void setFileFormat(String fileFormat) {
    this.fileFormat = fileFormat;
  }


  public BulkJobList id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public BulkJobList instanceId(Integer instanceId) {
    this.instanceId = instanceId;
    return this;
  }

  /**
   * Get instanceId
   * @return instanceId
   */
  @javax.annotation.Nullable
  public Integer getInstanceId() {
    return instanceId;
  }

  public void setInstanceId(Integer instanceId) {
    this.instanceId = instanceId;
  }


  public BulkJobList jobDirection(String jobDirection) {
    this.jobDirection = jobDirection;
    return this;
  }

  /**
   * Get jobDirection
   * @return jobDirection
   */
  @javax.annotation.Nullable
  public String getJobDirection() {
    return jobDirection;
  }

  public void setJobDirection(String jobDirection) {
    this.jobDirection = jobDirection;
  }


  public BulkJobList jobQuery(String jobQuery) {
    this.jobQuery = jobQuery;
    return this;
  }

  /**
   * Get jobQuery
   * @return jobQuery
   */
  @javax.annotation.Nullable
  public String getJobQuery() {
    return jobQuery;
  }

  public void setJobQuery(String jobQuery) {
    this.jobQuery = jobQuery;
  }


  public BulkJobList jobResetAttempt(Integer jobResetAttempt) {
    this.jobResetAttempt = jobResetAttempt;
    return this;
  }

  /**
   * Get jobResetAttempt
   * @return jobResetAttempt
   */
  @javax.annotation.Nullable
  public Integer getJobResetAttempt() {
    return jobResetAttempt;
  }

  public void setJobResetAttempt(Integer jobResetAttempt) {
    this.jobResetAttempt = jobResetAttempt;
  }


  public BulkJobList jobState(String jobState) {
    this.jobState = jobState;
    return this;
  }

  /**
   * Get jobState
   * @return jobState
   */
  @javax.annotation.Nullable
  public String getJobState() {
    return jobState;
  }

  public void setJobState(String jobState) {
    this.jobState = jobState;
  }


  public BulkJobList notificationUrl(String notificationUrl) {
    this.notificationUrl = notificationUrl;
    return this;
  }

  /**
   * Get notificationUrl
   * @return notificationUrl
   */
  @javax.annotation.Nullable
  public String getNotificationUrl() {
    return notificationUrl;
  }

  public void setNotificationUrl(String notificationUrl) {
    this.notificationUrl = notificationUrl;
  }


  public BulkJobList objectName(String objectName) {
    this.objectName = objectName;
    return this;
  }

  /**
   * Get objectName
   * @return objectName
   */
  @javax.annotation.Nullable
  public String getObjectName() {
    return objectName;
  }

  public void setObjectName(String objectName) {
    this.objectName = objectName;
  }


  public BulkJobList recordCount(Integer recordCount) {
    this.recordCount = recordCount;
    return this;
  }

  /**
   * Get recordCount
   * @return recordCount
   */
  @javax.annotation.Nullable
  public Integer getRecordCount() {
    return recordCount;
  }

  public void setRecordCount(Integer recordCount) {
    this.recordCount = recordCount;
  }


  public BulkJobList status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BulkJobList bulkJobList = (BulkJobList) o;
    return Objects.equals(this.completionTime, bulkJobList.completionTime) &&
        Objects.equals(this.createdDate, bulkJobList.createdDate) &&
        Objects.equals(this.errorCount, bulkJobList.errorCount) &&
        Objects.equals(this.fileFormat, bulkJobList.fileFormat) &&
        Objects.equals(this.id, bulkJobList.id) &&
        Objects.equals(this.instanceId, bulkJobList.instanceId) &&
        Objects.equals(this.jobDirection, bulkJobList.jobDirection) &&
        Objects.equals(this.jobQuery, bulkJobList.jobQuery) &&
        Objects.equals(this.jobResetAttempt, bulkJobList.jobResetAttempt) &&
        Objects.equals(this.jobState, bulkJobList.jobState) &&
        Objects.equals(this.notificationUrl, bulkJobList.notificationUrl) &&
        Objects.equals(this.objectName, bulkJobList.objectName) &&
        Objects.equals(this.recordCount, bulkJobList.recordCount) &&
        Objects.equals(this.status, bulkJobList.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionTime, createdDate, errorCount, fileFormat, id, instanceId, jobDirection, jobQuery, jobResetAttempt, jobState, notificationUrl, objectName, recordCount, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BulkJobList {\n");
    sb.append("    completionTime: ").append(toIndentedString(completionTime)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    errorCount: ").append(toIndentedString(errorCount)).append("\n");
    sb.append("    fileFormat: ").append(toIndentedString(fileFormat)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    instanceId: ").append(toIndentedString(instanceId)).append("\n");
    sb.append("    jobDirection: ").append(toIndentedString(jobDirection)).append("\n");
    sb.append("    jobQuery: ").append(toIndentedString(jobQuery)).append("\n");
    sb.append("    jobResetAttempt: ").append(toIndentedString(jobResetAttempt)).append("\n");
    sb.append("    jobState: ").append(toIndentedString(jobState)).append("\n");
    sb.append("    notificationUrl: ").append(toIndentedString(notificationUrl)).append("\n");
    sb.append("    objectName: ").append(toIndentedString(objectName)).append("\n");
    sb.append("    recordCount: ").append(toIndentedString(recordCount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("completion_time");
    openapiFields.add("createdDate");
    openapiFields.add("error_count");
    openapiFields.add("fileFormat");
    openapiFields.add("id");
    openapiFields.add("instanceId");
    openapiFields.add("job_direction");
    openapiFields.add("job_query");
    openapiFields.add("job_reset_attempt");
    openapiFields.add("job_state");
    openapiFields.add("notification_url");
    openapiFields.add("object_name");
    openapiFields.add("record_count");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BulkJobList
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BulkJobList.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BulkJobList is not found in the empty JSON string", BulkJobList.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BulkJobList.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BulkJobList` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("fileFormat") != null && !jsonObj.get("fileFormat").isJsonNull()) && !jsonObj.get("fileFormat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fileFormat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fileFormat").toString()));
      }
      if ((jsonObj.get("job_direction") != null && !jsonObj.get("job_direction").isJsonNull()) && !jsonObj.get("job_direction").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_direction` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_direction").toString()));
      }
      if ((jsonObj.get("job_query") != null && !jsonObj.get("job_query").isJsonNull()) && !jsonObj.get("job_query").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_query` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_query").toString()));
      }
      if ((jsonObj.get("job_state") != null && !jsonObj.get("job_state").isJsonNull()) && !jsonObj.get("job_state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `job_state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("job_state").toString()));
      }
      if ((jsonObj.get("notification_url") != null && !jsonObj.get("notification_url").isJsonNull()) && !jsonObj.get("notification_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notification_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notification_url").toString()));
      }
      if ((jsonObj.get("object_name") != null && !jsonObj.get("object_name").isJsonNull()) && !jsonObj.get("object_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `object_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("object_name").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BulkJobList.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BulkJobList' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BulkJobList> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BulkJobList.class));

       return (TypeAdapter<T>) new TypeAdapter<BulkJobList>() {
           @Override
           public void write(JsonWriter out, BulkJobList value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BulkJobList read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BulkJobList given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BulkJobList
   * @throws IOException if the JSON string is invalid with respect to BulkJobList
   */
  public static BulkJobList fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BulkJobList.class);
  }

  /**
   * Convert an instance of BulkJobList to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

