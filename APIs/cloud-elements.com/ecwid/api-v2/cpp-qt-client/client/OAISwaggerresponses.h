/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISwaggerresponses.h
 *
 * 
 */

#ifndef OAISwaggerresponses_H
#define OAISwaggerresponses_H

#include <QJsonObject>

#include "OAISwagger200.h"
#include "OAISwagger400.h"
#include "OAISwagger401.h"
#include "OAISwagger403.h"
#include "OAISwagger404.h"
#include "OAISwagger405.h"
#include "OAISwagger406.h"
#include "OAISwagger409.h"
#include "OAISwagger415.h"
#include "OAISwagger500.h"
#include "OAISwagger502.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISwagger200;
class OAISwagger400;
class OAISwagger401;
class OAISwagger403;
class OAISwagger404;
class OAISwagger405;
class OAISwagger406;
class OAISwagger409;
class OAISwagger415;
class OAISwagger500;
class OAISwagger502;

class OAISwaggerresponses : public OAIObject {
public:
    OAISwaggerresponses();
    OAISwaggerresponses(QString json);
    ~OAISwaggerresponses() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAISwagger200 getR200() const;
    void setR200(const OAISwagger200 &r_200);
    bool is_r_200_Set() const;
    bool is_r_200_Valid() const;

    OAISwagger400 getR400() const;
    void setR400(const OAISwagger400 &r_400);
    bool is_r_400_Set() const;
    bool is_r_400_Valid() const;

    OAISwagger401 getR401() const;
    void setR401(const OAISwagger401 &r_401);
    bool is_r_401_Set() const;
    bool is_r_401_Valid() const;

    OAISwagger403 getR403() const;
    void setR403(const OAISwagger403 &r_403);
    bool is_r_403_Set() const;
    bool is_r_403_Valid() const;

    OAISwagger404 getR404() const;
    void setR404(const OAISwagger404 &r_404);
    bool is_r_404_Set() const;
    bool is_r_404_Valid() const;

    OAISwagger405 getR405() const;
    void setR405(const OAISwagger405 &r_405);
    bool is_r_405_Set() const;
    bool is_r_405_Valid() const;

    OAISwagger406 getR406() const;
    void setR406(const OAISwagger406 &r_406);
    bool is_r_406_Set() const;
    bool is_r_406_Valid() const;

    OAISwagger409 getR409() const;
    void setR409(const OAISwagger409 &r_409);
    bool is_r_409_Set() const;
    bool is_r_409_Valid() const;

    OAISwagger415 getR415() const;
    void setR415(const OAISwagger415 &r_415);
    bool is_r_415_Set() const;
    bool is_r_415_Valid() const;

    OAISwagger500 getR500() const;
    void setR500(const OAISwagger500 &r_500);
    bool is_r_500_Set() const;
    bool is_r_500_Valid() const;

    OAISwagger502 getR502() const;
    void setR502(const OAISwagger502 &r_502);
    bool is_r_502_Set() const;
    bool is_r_502_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAISwagger200 m_r_200;
    bool m_r_200_isSet;
    bool m_r_200_isValid;

    OAISwagger400 m_r_400;
    bool m_r_400_isSet;
    bool m_r_400_isValid;

    OAISwagger401 m_r_401;
    bool m_r_401_isSet;
    bool m_r_401_isValid;

    OAISwagger403 m_r_403;
    bool m_r_403_isSet;
    bool m_r_403_isValid;

    OAISwagger404 m_r_404;
    bool m_r_404_isSet;
    bool m_r_404_isValid;

    OAISwagger405 m_r_405;
    bool m_r_405_isSet;
    bool m_r_405_isValid;

    OAISwagger406 m_r_406;
    bool m_r_406_isSet;
    bool m_r_406_isValid;

    OAISwagger409 m_r_409;
    bool m_r_409_isSet;
    bool m_r_409_isValid;

    OAISwagger415 m_r_415;
    bool m_r_415_isSet;
    bool m_r_415_isValid;

    OAISwagger500 m_r_500;
    bool m_r_500_isSet;
    bool m_r_500_isValid;

    OAISwagger502 m_r_502;
    bool m_r_502_isSet;
    bool m_r_502_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISwaggerresponses)

#endif // OAISwaggerresponses_H
