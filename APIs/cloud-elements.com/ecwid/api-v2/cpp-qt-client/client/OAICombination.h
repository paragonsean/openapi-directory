/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICombination.h
 *
 * 
 */

#ifndef OAICombination_H
#define OAICombination_H

#include <QJsonObject>

#include "OAIAttribute.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttribute;

class OAICombination : public OAIObject {
public:
    OAICombination();
    OAICombination(QString json);
    ~OAICombination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttribute> getAttributes() const;
    void setAttributes(const QList<OAIAttribute> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    double getCombinationNumber() const;
    void setCombinationNumber(const double &combination_number);
    bool is_combination_number_Set() const;
    bool is_combination_number_Valid() const;

    double getCompareToPrice() const;
    void setCompareToPrice(const double &compare_to_price);
    bool is_compare_to_price_Set() const;
    bool is_compare_to_price_Valid() const;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    bool isUnlimited() const;
    void setUnlimited(const bool &unlimited);
    bool is_unlimited_Set() const;
    bool is_unlimited_Valid() const;

    double getWarningLimit() const;
    void setWarningLimit(const double &warning_limit);
    bool is_warning_limit_Set() const;
    bool is_warning_limit_Valid() const;

    double getWeight() const;
    void setWeight(const double &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttribute> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    double m_combination_number;
    bool m_combination_number_isSet;
    bool m_combination_number_isValid;

    double m_compare_to_price;
    bool m_compare_to_price_isSet;
    bool m_compare_to_price_isValid;

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    bool m_unlimited;
    bool m_unlimited_isSet;
    bool m_unlimited_isValid;

    double m_warning_limit;
    bool m_warning_limit_isSet;
    bool m_warning_limit_isValid;

    double m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICombination)

#endif // OAICombination_H
