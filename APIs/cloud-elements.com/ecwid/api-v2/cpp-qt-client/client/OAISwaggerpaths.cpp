/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISwaggerpaths.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISwaggerpaths::OAISwaggerpaths(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISwaggerpaths::OAISwaggerpaths() {
    this->initializeModel();
}

OAISwaggerpaths::~OAISwaggerpaths() {}

void OAISwaggerpaths::initializeModel() {

    m__contacts_isSet = false;
    m__contacts_isValid = false;
}

void OAISwaggerpaths::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISwaggerpaths::fromJsonObject(QJsonObject json) {

    m__contacts_isValid = ::OpenAPI::fromJsonValue(m__contacts, json[QString("/contacts")]);
    m__contacts_isSet = !json[QString("/contacts")].isNull() && m__contacts_isValid;
}

QString OAISwaggerpaths::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISwaggerpaths::asJsonObject() const {
    QJsonObject obj;
    if (m__contacts.isSet()) {
        obj.insert(QString("/contacts"), ::OpenAPI::toJsonValue(m__contacts));
    }
    return obj;
}

OAISwagger_contacts_path OAISwaggerpaths::getContacts() const {
    return m__contacts;
}
void OAISwaggerpaths::setContacts(const OAISwagger_contacts_path &_contacts) {
    m__contacts = _contacts;
    m__contacts_isSet = true;
}

bool OAISwaggerpaths::is__contacts_Set() const{
    return m__contacts_isSet;
}

bool OAISwaggerpaths::is__contacts_Valid() const{
    return m__contacts_isValid;
}

bool OAISwaggerpaths::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__contacts.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISwaggerpaths::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
