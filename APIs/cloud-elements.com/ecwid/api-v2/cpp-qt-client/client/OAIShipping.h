/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIShipping.h
 *
 * 
 */

#ifndef OAIShipping_H
#define OAIShipping_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIShipping : public OAIObject {
public:
    OAIShipping();
    OAIShipping(QString json);
    ~OAIShipping() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDisabledMethods() const;
    void setDisabledMethods(const QList<QString> &disabled_methods);
    bool is_disabled_methods_Set() const;
    bool is_disabled_methods_Valid() const;

    QList<QString> getEnabledMethods() const;
    void setEnabledMethods(const QList<QString> &enabled_methods);
    bool is_enabled_methods_Set() const;
    bool is_enabled_methods_Valid() const;

    double getFlatRate() const;
    void setFlatRate(const double &flat_rate);
    bool is_flat_rate_Set() const;
    bool is_flat_rate_Valid() const;

    double getMethodMarkup() const;
    void setMethodMarkup(const double &method_markup);
    bool is_method_markup_Set() const;
    bool is_method_markup_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_disabled_methods;
    bool m_disabled_methods_isSet;
    bool m_disabled_methods_isValid;

    QList<QString> m_enabled_methods;
    bool m_enabled_methods_isSet;
    bool m_enabled_methods_isValid;

    double m_flat_rate;
    bool m_flat_rate_isSet;
    bool m_flat_rate_isValid;

    double m_method_markup;
    bool m_method_markup_isSet;
    bool m_method_markup_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIShipping)

#endif // OAIShipping_H
