/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISwagger_contacts_path.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISwagger_contacts_path::OAISwagger_contacts_path(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISwagger_contacts_path::OAISwagger_contacts_path() {
    this->initializeModel();
}

OAISwagger_contacts_path::~OAISwagger_contacts_path() {}

void OAISwagger_contacts_path::initializeModel() {

    m_post_isSet = false;
    m_post_isValid = false;
}

void OAISwagger_contacts_path::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISwagger_contacts_path::fromJsonObject(QJsonObject json) {

    m_post_isValid = ::OpenAPI::fromJsonValue(m_post, json[QString("post")]);
    m_post_isSet = !json[QString("post")].isNull() && m_post_isValid;
}

QString OAISwagger_contacts_path::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISwagger_contacts_path::asJsonObject() const {
    QJsonObject obj;
    if (m_post.isSet()) {
        obj.insert(QString("post"), ::OpenAPI::toJsonValue(m_post));
    }
    return obj;
}

OAISwaggerpost OAISwagger_contacts_path::getPost() const {
    return m_post;
}
void OAISwagger_contacts_path::setPost(const OAISwaggerpost &post) {
    m_post = post;
    m_post_isSet = true;
}

bool OAISwagger_contacts_path::is_post_Set() const{
    return m_post_isSet;
}

bool OAISwagger_contacts_path::is_post_Valid() const{
    return m_post_isValid;
}

bool OAISwagger_contacts_path::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_post.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISwagger_contacts_path::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
