/**
 * ecwid
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v2
 * Contact: support@cloud-elements.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISwaggerschema.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISwaggerschema::OAISwaggerschema(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISwaggerschema::OAISwaggerschema() {
    this->initializeModel();
}

OAISwaggerschema::~OAISwaggerschema() {}

void OAISwaggerschema::initializeModel() {

    m_ref_isSet = false;
    m_ref_isValid = false;
}

void OAISwaggerschema::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISwaggerschema::fromJsonObject(QJsonObject json) {

    m_ref_isValid = ::OpenAPI::fromJsonValue(m_ref, json[QString("$ref")]);
    m_ref_isSet = !json[QString("$ref")].isNull() && m_ref_isValid;
}

QString OAISwaggerschema::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISwaggerschema::asJsonObject() const {
    QJsonObject obj;
    if (m_ref_isSet) {
        obj.insert(QString("$ref"), ::OpenAPI::toJsonValue(m_ref));
    }
    return obj;
}

QString OAISwaggerschema::getRef() const {
    return m_ref;
}
void OAISwaggerschema::setRef(const QString &ref) {
    m_ref = ref;
    m_ref_isSet = true;
}

bool OAISwaggerschema::is_ref_Set() const{
    return m_ref_isSet;
}

bool OAISwaggerschema::is_ref_Valid() const{
    return m_ref_isValid;
}

bool OAISwaggerschema::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ref_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISwaggerschema::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
