openapi: 3.0.1
info:
  contact:
    email: support@cloud-elements.com
  title: ecwid
  version: api-v2
  x-apisguru-categories:
  - ecommerce
  x-element-hub: ecommerce
  x-element-id: 52
  x-element-key: ecwid
  x-element-name: Ecwid
  x-logo:
    url: https://cloud-elements.com/wp-content/uploads/2019/05/ces_favicon_32x32.png
  x-origin:
  - format: swagger
    url: https://api.cloud-elements.com/elements/api-v2/elements/52/docs?version=-1
    version: "2.0"
  x-providerName: cloud-elements.com
  x-serviceName: ecwid
servers:
- url: https://api.cloud-elements.com/elements/api-v2
tags:
- name: ping
- name: objects
- name: objectName
- name: orders
- name: customers
- name: bulk
- name: products
paths:
  /bulk/download:
    post:
      operationId: create_bulk_download
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/bulkDownloadRequest'
        description: The object body
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkQuery'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Create a new bulk download job (asynchronous)
      tags:
      - bulk
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
  /bulk/jobs:
    get:
      operationId: get_bulk_jobs
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: "The CEQL search expression, or the where clause, without the\
          \ WHERE keyword, in a typical SQL query. For example to get all upload jobs\
          \ the expression would be where=job_direction='UPLOAD'. The following fields\
          \ are valid search fields 'object_name', 'job_status', 'job_direction',\
          \ 'record_count'"
        in: query
        name: where
        schema:
          type: string
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: "The page size for pagination, which defaults to 200 if not supplied"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkJobList'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Fetch all the bulk jobs for an instance
      tags:
      - bulk
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
  /bulk/query:
    post:
      operationId: create_bulk_query
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The Url to send the notification to when the Job is completed
        in: header
        name: Elements-Async-Callback-Url
        schema:
          type: string
      - description: "The CEQL query. When this parameter is omitted, all objects\
          \ of the given type are returned via the bulk job. Endpoint limiters may\
          \ still apply."
        in: query
        name: q
        schema:
          type: string
      - description: The last time this query was run. This is optional. You can also
          have this parameter in the query and leave this blank - optional eg. '2014-10-06T13:22:17-08:00'
        in: query
        name: lastRunDate
        schema:
          type: string
      - description: The created/updated date of the object to filter on - optional
          eg. '2014-10-06T13:22:17-08:00'
        in: query
        name: from
        schema:
          type: string
      - description: The created/updated date of the object to filter on - optional
          eg. '2014-10-06T13:22:17-08:00'
        in: query
        name: to
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createBulkQuery_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkQuery'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Create an asynchronous bulk query job.
      tags:
      - bulk
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
      x-codegen-request-body-name: body
  /bulk/{id}/cancel:
    put:
      operationId: replace_bulk_cancel
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the bulk job to cancel.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkStatus'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Cancel an asynchronous bulk query job.
      tags:
      - bulk
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
  /bulk/{id}/errors:
    get:
      operationId: get_bulk_errors
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the bulk job to retrieve its errors.
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The page size for pagination, which defaults to 200 if not supplied"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve the errors of a bulk job.
      tags:
      - bulk
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
  /bulk/{id}/status:
    get:
      operationId: get_bulk_status
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the bulk job to retrieve its status.
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkStatus'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve the status of a bulk job.
      tags:
      - bulk
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
  /bulk/{id}/{objectName}:
    get:
      operationId: get_bulk_by_object_name
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the bulk job
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/csv:
              schema:
                format: binary
                type: string
            application/json:
              schema:
                format: binary
                type: string
            application/jsonl:
              schema:
                format: binary
                type: string
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve the results of an asynchronous bulk query.
      tags:
      - bulk
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
  /bulk/{objectName}:
    post:
      operationId: create_bulk_by_object_name
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The Url to send the notification to when the Job is completed
        in: header
        name: Elements-Async-Callback-Url
        schema:
          type: string
      - description: The name of the object for which data needs to be uploaded.
        in: path
        name: objectName
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/createBulkByObjectName_request'
        x-body-name: body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BulkUploadResponse'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Upload a file of objects to be bulk uploaded to the provider.
      tags:
      - bulk
      x-openapi-router-controller: openapi_server.controllers.bulk_controller
      x-codegen-request-body-name: body
  /customers:
    get:
      operationId: get_customers
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: "The CEQL search expression, or the where clause, without the\
          \ WHERE keyword, in a typical SQL query (i.e. field='value'). <p>Supported\
          \ search terms: customer_id and customer_email. All other search criteria\
          \ are ignored. NOTE: When searching by customer_id, do not quote the value\
          \ (ex: customer_id=15693430), as the ID is a number rather than a string.\
          \  When searching by email, quote the value (ex: customer_email='a@b.c'),\
          \ as the email parameter is a string"
        in: query
        name: where
        schema:
          type: string
      - description: "The number of results to fetch in a given page. When this parameter\
          \ is omitted, a maximum of 200 results are returned"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Customer'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Find customers in the eCommerce system, using the provided CEQL search\
        \ expression. If no search expression is provided, all records will be retrieved"
      tags:
      - customers
      x-openapi-router-controller: openapi_server.controllers.customers_controller
    post:
      operationId: create_customer
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CustomerPost'
        description: The customer object to be created
        required: true
        x-body-name: customer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Create a new customer in eCommerce system.With the exception of the\
        \ 'id' field, the required fields indicated in the 'Customer' model are those\
        \ required to create a new customer"
      tags:
      - customers
      x-codegen-request-body-name: customer
      x-openapi-router-controller: openapi_server.controllers.customers_controller
  /customers/{id}:
    delete:
      operationId: delete_customer_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the customer to delete from the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Delete a customer associated with a given ID from your eCommerce system.
        Specifying a customer associated with a given ID that does not exist will
        result in an error message
      tags:
      - customers
      x-openapi-router-controller: openapi_server.controllers.customers_controller
    get:
      operationId: get_customer_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the customer to retrieve from the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve a customer associated with a given ID from the eCommerce system.
        Specifying a customer with an ID that does not exist will result in an error
        response
      tags:
      - customers
      x-openapi-router-controller: openapi_server.controllers.customers_controller
    patch:
      operationId: update_customer_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the customer to update in the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CustomerPatch'
        description: The customer object to be created
        required: true
        x-body-name: customer
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Customer'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Update an customer associated with a given ID in the eCommerce system.The\
        \ update API uses the PATCH HTTP verb, so only those fields provided in the\
        \ customer object will be updated, and those fields not provided will be left\
        \ alone. Updating a customer with a specified ID that does not exist will\
        \ result in an error response"
      tags:
      - customers
      x-codegen-request-body-name: customer
      x-openapi-router-controller: openapi_server.controllers.customers_controller
  /customers/{id}/orders:
    get:
      operationId: get_customers_orders
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the customer to get orders form in the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "The number of results to fetch in a given page. When this parameter\
          \ is omitted, a maximum of 200 results are returned"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Find orders in the customer associated with a given ID. If the customer\
        \ does not exist, an error response will be returned. If no orders are found\
        \ in the given customer then an empty array will be returned"
      tags:
      - customers
      x-openapi-router-controller: openapi_server.controllers.customers_controller
  /objects:
    get:
      operationId: get_objects
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: "Elements Version to be used for getting metadata, possible options\
          \ are Hydrogen, Helium. Default value is Hydrogen"
        in: header
        name: Elements-Version
        schema:
          enum:
          - Hydrogen
          - Helium
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  type: string
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Get a list of all the available objects.
      tags:
      - objects
      x-openapi-router-controller: openapi_server.controllers.objects_controller
  /objects/{objectName}/docs:
    get:
      operationId: get_objects_object_name_docs
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: Include discovery metadata in definitions
        in: query
        name: discovery
        schema:
          type: boolean
      - description: Optionally resolve swagger references for an inline object definition
        in: query
        name: resolveReferences
        schema:
          type: boolean
      - description: Include only OpenAPI / Swagger properties in definitions
        in: query
        name: basic
        schema:
          type: boolean
      - description: "The element swagger version to get the corresponding element\
          \ swagger, Passing in \"-1\" gives latest element swagger"
        in: query
        name: version
        schema:
          default: "-1"
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/swaggerDocs'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Get swagger docs for an object.
      tags:
      - objects
      x-openapi-router-controller: openapi_server.controllers.objects_controller
  /objects/{objectName}/metadata:
    get:
      operationId: get_objects_object_name_metadata
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: "Elements Version to be used for getting metadata, possible options\
          \ are Hydrogen, Helium. Default value is Hydrogen"
        in: header
        name: Elements-Version
        schema:
          enum:
          - Hydrogen
          - Helium
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/objectsMetadata'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Get a list of all the field for an object.
      tags:
      - objects
      x-openapi-router-controller: openapi_server.controllers.objects_controller
  /orders:
    get:
      operationId: get_orders
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: "The CEQL search expression, or the where clause, without the\
          \ WHERE keyword, in a typical SQL query (i.e. field='value'). <p>Supported\
          \ search terms: date, from_date, to_date, from_update_date, to_update_date,\
          \ order, from_order, to_order, customer_id, customer_email and statuses.\
          \ All other search criteria are ignored"
        in: query
        name: where
        schema:
          type: string
      - description: "The number of results to fetch in a given page. When this parameter\
          \ is omitted, a maximum of 200 results are returned"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Order'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Find orders in the eCommerce system, using the provided CEQL search\
        \ expression. If no search expression is provided, all records will be retrieved"
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    post:
      operationId: create_order
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderPost'
        description: The order object to be created
        required: true
        x-body-name: order
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Create an order in the eCommerce system.With the exception of the\
        \ 'id' field, the required fields indicated in the 'Order' model are those\
        \ required to create a new order.The paymentStatus can only be AWAITING_PAYMENT\
        \ or INCOMPLETE.The fulfillmentStatus can only be AWAITING_PROCESSING"
      tags:
      - orders
      x-codegen-request-body-name: order
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /orders/{id}:
    delete:
      operationId: delete_order_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the order to delete from the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Delete an order associated with a given ID from your eCommerce system.
        Specifying an order associated with a given ID that does not exist will result
        in an error message
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    get:
      operationId: get_order_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the order to retrieve from the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve an order associated with a given ID from the eCommerce system.
        Specifying an order with an ID that does not exist will result in an error
        response
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
    patch:
      operationId: update_order_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the order to update in the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "An action to perform on the order: cancel, reopen or close.\
          \ If left blank then the order is updated but no action is taken"
        in: query
        name: action
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/OrderPatch'
        description: "The order object, with those fields that are to be updated"
        required: true
        x-body-name: order
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Order'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Update an order associated with a given ID in the eCommerce system.\
        \ The update API uses the PATCH HTTP verb, so only those fields provided in\
        \ the order object will be updated, and those fields not provided will be\
        \ left alone. Updating an order with a specified ID that does not exist will\
        \ result in an error response</strong>"
      tags:
      - orders
      x-codegen-request-body-name: order
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /orders/{orderId}/payments:
    get:
      operationId: get_orders_payments
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the order to retrieve payments from in the eCommerce
          system
        in: path
        name: orderId
        required: true
        schema:
          type: string
      - description: "The number of results to fetch in a given page. When this parameter\
          \ is omitted, a maximum of 200 results are returned"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Payment'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve the payments in the eCommerce system for the specified order
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /orders/{orderId}/refunds:
    get:
      operationId: get_orders_refunds
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the order to retrieve refunds from in the eCommerce
          system
        in: path
        name: orderId
        required: true
        schema:
          type: string
      - description: "The number of results to fetch in a given page. When this parameter\
          \ is omitted, a maximum of 200 results are returned"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Payment'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve the refunds in the eCommerce system for the specified order
      tags:
      - orders
      x-openapi-router-controller: openapi_server.controllers.orders_controller
  /ping:
    get:
      operationId: get_ping
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Pong'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Ping the Element to confirm that the Hub Element has a heartbeat.\
        \  If the Element does not have a heartbeat, an error message will be returned."
      tags:
      - ping
      x-openapi-router-controller: openapi_server.controllers.ping_controller
  /products:
    get:
      operationId: get_products
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: "The CEQL search expression, or the where clause, without the\
          \ WHERE keyword, in a typical SQL query (i.e. field='value'). <p>Supported\
          \ search terms: category, hidden_products. All other search criteria are\
          \ ignored"
        in: query
        name: where
        schema:
          type: string
      - description: "The number of results to fetch in a given page. When this parameter\
          \ is omitted, a maximum of 200 results are returned"
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Product'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Find products in the eCommerce system, using the provided CEQL search\
        \ expression. The search expression in CEQL is the WHERE clause in a typical\
        \ SQL query, but without the WHERE keyword.  If no search expression is provided,\
        \ all records will be retrieved"
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    post:
      operationId: create_product
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProductPost'
        description: The product object to be created
        required: true
        x-body-name: product
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Create a new product in eCommerce system.With the exception of the\
        \ 'id' field, the required fields indicated in the 'Product' model are those\
        \ required to create a new product"
      tags:
      - products
      x-codegen-request-body-name: product
      x-openapi-router-controller: openapi_server.controllers.products_controller
  /products/{id}:
    delete:
      operationId: delete_product_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the product to delete from the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Delete a product associated with a given ID from your eCommerce system.
        Specifying a product associated with a given ID that does not exist will result
        in an error message
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    get:
      operationId: get_product_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the product to retrieve from the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: Retrieve a product associated with a given ID from the eCommerce system.
        Specifying a product with an ID that does not exist will result in an error
        response
      tags:
      - products
      x-openapi-router-controller: openapi_server.controllers.products_controller
    patch:
      operationId: update_product_by_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The ID of the product to update in the eCommerce system
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/ProductPatch'
        description: "The product object, with those fields that are to be updated"
        required: true
        x-body-name: product
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Product'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Update a product associated with a given ID in the eCommerce system.\
        \ The update API uses the PATCH HTTP verb, so only those fields provided in\
        \ the product object will be updated, and those fields not provided will be\
        \ left alone. Updating a product with a specified ID that does not exist will\
        \ result in an error response. <p><strong>Update supports the following fields:\
        \ sku, quantity, trackQuantity, quantityDelta, warningLimit, name, price,\
        \ weight, tangible, enabled, fixedShippingRateOnly, fixedShippingRate, description,\
        \ wholesalePrices, compareAtPrice, productClassId</strong>"
      tags:
      - products
      x-codegen-request-body-name: product
      x-openapi-router-controller: openapi_server.controllers.products_controller
  /{objectName}:
    get:
      operationId: get_by_object_name
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: The CEQL search expression.
        in: query
        name: where
        schema:
          type: string
      - description: The page size. Defaults to 200 if not provided. Maximum of 5000.
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Object'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Search for {objectName}"
      tags:
      - objectName
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    post:
      operationId: create_by_object_name
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Object'
        description: "The {objectName}"
        required: true
        x-body-name: Body
      responses:
        "200":
          content: {}
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Create an {objectName}"
      tags:
      - objectName
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
  /{objectName}/{objectId}:
    delete:
      operationId: delete_object_name_by_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Delete an {objectName}"
      tags:
      - objectName
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    get:
      operationId: get_object_name_by_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Object'
            application/pdf:
              schema:
                $ref: '#/components/schemas/Object'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Retrieve an {objectName}"
      tags:
      - objectName
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    patch:
      operationId: update_object_name_by_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Object'
        description: "The {objectName}"
        required: true
        x-body-name: Body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Object'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Update an {objectName}"
      tags:
      - objectName
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    put:
      operationId: replace_object_name_by_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Object'
        description: "The {objectName}"
        required: true
        x-body-name: Body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Object'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            'Accept' header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Update an {objectName}"
      tags:
      - objectName
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
  /{objectName}/{objectId}/{childObjectName}:
    get:
      operationId: get_object_name_by_child_object_name
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        schema:
          type: string
      - description: The CEQL search expression.
        in: query
        name: where
        schema:
          type: string
      - description: The page size. Defaults to 200 if not provided. Maximum of 5000.
        in: query
        name: pageSize
        schema:
          format: int64
          type: integer
      - description: "The next page cursor, taken from the response header: `elements-next-page-token`"
        in: query
        name: nextPage
        schema:
          type: string
      - description: The fields to return on the response. Can be a single field or
          a comma-separated list of fields
        in: query
        name: fields
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                items:
                  $ref: '#/components/schemas/Object'
                type: array
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            &quot;Accept&quot; header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Search for {childObjectName}"
      tags:
      - objectName
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    post:
      operationId: create_object_name_by_child_object_name
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: childObjectName
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Object'
        description: "The {childObjectName}"
        required: true
        x-body-name: Body
      responses:
        "200":
          content: {}
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            &quot;Accept&quot; header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Create an {objectName}"
      tags:
      - objectName
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
  /{objectName}/{objectId}/{childObjectName}/{childObjectId}:
    delete:
      operationId: delete_object_name_by_child_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      - description: "The {childObjectName} ID"
        in: path
        name: childObjectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            &quot;Accept&quot; header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Delete an {childObjectName}"
      tags:
      - objectName
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    get:
      operationId: get_object_name_by_child_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      - description: "The {childObjectName} ID"
        in: path
        name: childObjectId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Object'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            &quot;Accept&quot; header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Retrieve an {childObjectName}"
      tags:
      - objectName
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    patch:
      operationId: update_object_name_by_child_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      - description: "The {childObjectName} ID"
        in: path
        name: childObjectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Object'
        description: "The {objectName}"
        required: true
        x-body-name: Body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Object'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            &quot;Accept&quot; header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Update an {childObjectName}"
      tags:
      - objectName
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
    put:
      operationId: replace_object_name_by_child_object_id
      parameters:
      - description: "The authorization tokens. The format for the header value is\
          \ 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The name of the object
        in: path
        name: objectName
        required: true
        schema:
          type: string
      - description: The name of the childObjectName
        in: path
        name: childObjectName
        required: true
        schema:
          type: string
      - description: "The {objectName} ID"
        in: path
        name: objectId
        required: true
        schema:
          type: string
      - description: "The {childObjectName} ID"
        in: path
        name: childObjectId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Object'
        description: "The {objectName}"
        required: true
        x-body-name: Body
      responses:
        "200":
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Object'
          description: OK - Everything worked as expected
        "400":
          content: {}
          description: Bad Request - Often due to a missing request parameter
        "401":
          content: {}
          description: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
        "403":
          content: {}
          description: Forbidden - Access to the resource by the provider is forbidden
        "404":
          content: {}
          description: Not found - The requested resource is not found
        "405":
          content: {}
          description: "Method not allowed - Incorrect HTTP verb used, e.g., GET used\
            \ when POST expected"
        "406":
          content: {}
          description: Not acceptable - The response content type does not match the
            &quot;Accept&quot; header value
        "409":
          content: {}
          description: Conflict - If a resource being created already exists
        "415":
          content: {}
          description: Unsupported media type - The server cannot handle the requested
            Content-Type
        "500":
          content: {}
          description: Server error - Something went wrong on the Cloud Elements server
        "502":
          content: {}
          description: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      summary: "Update an {childObjectName}"
      tags:
      - objectName
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.object_name_controller
components:
  schemas:
    AdditionalInfo:
      example:
        google_customer_id: google_customer_id
      properties:
        google_customer_id:
          title: google_customer_id
          type: string
      title: AdditionalInfo
      type: object
    Attribute:
      example:
        internalName: internalName
        name: name
        id: 0
        value: value
      properties:
        id:
          format: int64
          title: id
          type: integer
        internalName:
          title: internalName
          type: string
        name:
          title: name
          type: string
        value:
          title: value
          type: string
      title: Attribute
      type: object
    BorderInfo:
      example:
        dominatingColor:
          red: 5.637376656633329
          green: 5.962133916683182
          blue: 1.4658129805029452
          alpha: 6.027456183070403
        homogeneity: true
      properties:
        dominatingColor:
          $ref: '#/components/schemas/DominatingColor'
        homogeneity:
          title: homogeneity
          type: boolean
      title: BorderInfo
      type: object
    BulkJobList:
      example:
        job_query: job_query
        record_count: 7
        job_reset_attempt: 2
        completion_time: 0
        notification_url: notification_url
        job_direction: job_direction
        error_count: 1
        job_state: job_state
        createdDate: 6
        instanceId: 5
        object_name: object_name
        id: 5
        fileFormat: fileFormat
        status: status
      properties:
        completion_time:
          format: int64
          title: completion_time
          type: integer
          x-samplevalue: 1542829827804
        createdDate:
          format: int64
          title: createdDate
          type: integer
          x-samplevalue: 1542829826619
        error_count:
          format: int32
          title: error_count
          type: integer
          x-samplevalue: 0
        fileFormat:
          title: fileFormat
          type: string
          x-samplevalue: csv
        id:
          format: int32
          title: id
          type: integer
          x-samplevalue: 1722
        instanceId:
          format: int32
          title: instanceId
          type: integer
          x-samplevalue: 123453
        job_direction:
          title: job_direction
          type: string
          x-samplevalue: DOWNLOAD
        job_query:
          title: job_query
          type: string
          x-samplevalue: "SELECT attributes.organizationid, attributes.systemuserid,\
            \ organizationid FROM users WHERE organizationid = '3b80f68d-b945-4208-9442-f55bd0e1c5b2'"
        job_reset_attempt:
          format: int32
          title: job_reset_attempt
          type: integer
          x-samplevalue: 0
        job_state:
          title: job_state
          type: string
        notification_url:
          title: notification_url
          type: string
        object_name:
          title: object_name
          type: string
          x-samplevalue: systemuser
        record_count:
          format: int32
          title: record_count
          type: integer
          x-samplevalue: 41
        status:
          title: status
          type: string
          x-samplevalue: COMPLETED
      title: BulkJobList
      type: object
    BulkQuery:
      example:
        instance_id: 0.8008281904610115
        id: id
        status: status
      properties:
        id:
          title: id
          type: string
        instance_id:
          title: instance_id
          type: number
        status:
          title: status
          type: string
      title: BulkQuery
      type: object
    BulkStatus:
      description: Status of the bulk upload.
      example:
        numOfRowsFailed: 1.4658129805029452
        numOfLeadsProcessed: 6.027456183070403
        numOfRowsWithWarning: 5.962133916683182
        batchId: 0.8008281904610115
        message: message
        status: status
      properties:
        batchId:
          description: Contact/Leads loaded
          title: batchId
          type: number
        message:
          title: message
          type: string
        numOfLeadsProcessed:
          description: Contact/Leads loaded
          title: numOfLeadsProcessed
          type: number
        numOfRowsFailed:
          description: Failed count
          title: numOfRowsFailed
          type: number
        numOfRowsWithWarning:
          description: Contact/Leads that had warnings
          title: numOfRowsWithWarning
          type: number
        status:
          description: Status of the bulk job
          title: status
          type: string
      title: BulkStatus
      type: object
    BulkUploadResponse:
      description: BulkLoad response of bulk download.
      example:
        instanceId: 0
        id: id
        status: status
      properties:
        id:
          description: Id of the bulk job
          title: id
          type: string
        instanceId:
          description: Instance Id of the bulk job
          format: int64
          title: instanceId
          type: integer
        status:
          description: Status of the bulk job
          title: status
          type: string
      title: BulkUploadResponse
      type: object
    Category:
      example:
        originalImageUrl: originalImageUrl
        defaultCategory: true
        name: name
        description: description
        id: 2
        productCount: 7
        enabled: true
        url: url
        thumbnailUrl: thumbnailUrl
      properties:
        defaultCategory:
          description: true/false
          title: defaultCategory
          type: boolean
        description:
          title: description
          type: string
        enabled:
          description: "true if the category is enabled, false otherwise"
          title: enabled
          type: boolean
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        originalImageUrl:
          title: originalImageUrl
          type: string
        productCount:
          format: int64
          title: productCount
          type: integer
        thumbnailUrl:
          title: thumbnailUrl
          type: string
        url:
          title: url
          type: string
      title: Category
      type: object
    Choice:
      example:
        priceModifierType: priceModifierType
        text: text
        priceModifier: 3.353193347011243
      properties:
        priceModifier:
          format: double
          title: priceModifier
          type: number
        priceModifierType:
          description: "PERCENT, ABSOLUTE"
          title: priceModifierType
          type: string
        text:
          title: text
          type: string
      title: Choice
      type: object
    Combination:
      example:
        quantity: 1.2315135367772556
        compareToPrice: 2.027123023002322
        price: 7.386281948385884
        unlimited: true
        weight: 1.4894159098541704
        attributes:
        - internalName: internalName
          name: name
          id: 0
          value: value
        - internalName: internalName
          name: name
          id: 0
          value: value
        id: 4.145608029883936
        warningLimit: 1.0246457001441578
        combinationNumber: 3.616076749251911
        sku: sku
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Attribute'
          title: attributes
          type: array
        combinationNumber:
          format: double
          title: combinationNumber
          type: number
        compareToPrice:
          format: double
          title: compareToPrice
          type: number
        id:
          format: double
          title: id
          type: number
        price:
          format: double
          title: price
          type: number
        quantity:
          format: double
          title: quantity
          type: number
        sku:
          title: sku
          type: string
        unlimited:
          title: unlimited
          type: boolean
        warningLimit:
          format: double
          title: warningLimit
          type: number
        weight:
          format: double
          title: weight
          type: number
      title: Combination
      type: object
    Customer:
      example:
        customerGroupId: 0
        taxIdValid: true
        taxExempt: true
        billingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        registered: registered
        customerGroupName: customerGroupName
        taxId: 1.4658129805029452
        name: name
        id: 6
        updated: updated
        email: email
        totalOrderCount: 5.962133916683182
        shippingAddresses:
        - city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        - city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
      properties:
        billingPerson:
          $ref: '#/components/schemas/Person'
        customerGroupId:
          format: int64
          title: customerGroupId
          type: integer
        customerGroupName:
          title: customerGroupName
          type: string
        email:
          description: customer email
          title: email
          type: string
        id:
          description: Unique internal customer ID
          format: int64
          title: id
          type: integer
        name:
          description: Customer Name
          title: name
          type: string
          x-name: true
        registered:
          description: "Ex: 2015-02-03 15:30:08"
          title: registered
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss
        shippingAddresses:
          items:
            $ref: '#/components/schemas/Person'
          title: shippingAddresses
          type: array
        taxExempt:
          title: taxExempt
          type: boolean
        taxId:
          format: double
          title: taxId
          type: number
        taxIdValid:
          title: taxIdValid
          type: boolean
        totalOrderCount:
          format: double
          title: totalOrderCount
          type: number
        updated:
          description: "Ex: 2015-02-03 15:30:08"
          title: updated
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss
      title: Customer
      type: object
      x-has-customfields: false
      x-primary-key:
      - id
    CustomerPatch:
      example:
        customerGroupId: 0
        taxIdValid: true
        password: password
        taxExempt: true
        taxId: 6.027456183070403
        billingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        email: email
        shippingAddresses:
        - city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        - city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
      properties:
        billingPerson:
          $ref: '#/components/schemas/Person'
        customerGroupId:
          format: int64
          title: customerGroupId
          type: integer
        email:
          description: customer email
          title: email
          type: string
        password:
          description: customer password
          title: password
          type: string
        shippingAddresses:
          items:
            $ref: '#/components/schemas/Person'
          title: shippingAddresses
          type: array
        taxExempt:
          title: taxExempt
          type: boolean
        taxId:
          format: double
          title: taxId
          type: number
        taxIdValid:
          title: taxIdValid
          type: boolean
      title: CustomerPatch
      type: object
      x-has-customfields: false
    CustomerPost:
      example:
        customerGroupId: 0
        taxIdValid: true
        password: password
        taxExempt: true
        taxId: 6.027456183070403
        billingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        email: email
        shippingAddresses:
        - city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        - city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
      properties:
        billingPerson:
          $ref: '#/components/schemas/Person'
        customerGroupId:
          format: int64
          title: customerGroupId
          type: integer
        email:
          description: customer email
          title: email
          type: string
        password:
          description: customer password
          title: password
          type: string
        shippingAddresses:
          items:
            $ref: '#/components/schemas/Person'
          title: shippingAddresses
          type: array
        taxExempt:
          title: taxExempt
          type: boolean
        taxId:
          format: double
          title: taxId
          type: number
        taxIdValid:
          title: taxIdValid
          type: boolean
      required:
      - email
      title: CustomerPost
      type: object
      x-has-customfields: false
    DominatingColor:
      example:
        red: 5.637376656633329
        green: 5.962133916683182
        blue: 1.4658129805029452
        alpha: 6.027456183070403
      properties:
        alpha:
          format: double
          title: alpha
          type: number
        blue:
          format: double
          title: blue
          type: number
        green:
          format: double
          title: green
          type: number
        red:
          format: double
          title: red
          type: number
      title: DominatingColor
      type: object
    Favorite:
      example:
        count: 3
        displayedCount: displayedCount
      properties:
        count:
          format: int64
          title: count
          type: integer
        displayedCount:
          title: displayedCount
          type: string
      title: Favorite
      type: object
    File:
      example:
        size: 1.284659006116532
        name: name
        description: description
        id: 6.965117697638846
        adminUrl: adminUrl
      properties:
        adminUrl:
          title: adminUrl
          type: string
        description:
          title: description
          type: string
        id:
          format: double
          title: id
          type: number
        name:
          title: name
          type: string
        size:
          format: double
          title: size
          type: number
      title: File
      type: object
    GalleryImage:
      example:
        thumbnail: thumbnail
        alt: alt
        width: 6
        url: url
        height: 6
      properties:
        alt:
          title: alt
          type: string
        height:
          format: int64
          title: height
          type: integer
        thumbnail:
          title: thumbnail
          type: string
        url:
          title: url
          type: string
        width:
          format: int64
          title: width
          type: integer
      title: GalleryImage
      type: object
    HandlingFee:
      example:
        name: name
        description: description
        value: 2.3021358869347655
      properties:
        description:
          title: description
          type: string
        name:
          title: name
          type: string
        value:
          format: double
          title: value
          type: number
      title: HandlingFee
      type: object
    Image:
      example:
        image1500pxUrl: image1500pxUrl
        imageOriginalUrl: imageOriginalUrl
        image400pxUrl: image400pxUrl
        image800pxUrl: image800pxUrl
        isMain: true
        orderBy: 6.704019297950036
        id: id
        image160pxUrl: image160pxUrl
      properties:
        id:
          title: id
          type: string
        image1500pxUrl:
          title: image1500pxUrl
          type: string
        image160pxUrl:
          title: image160pxUrl
          type: string
        image400pxUrl:
          title: image400pxUrl
          type: string
        image800pxUrl:
          title: image800pxUrl
          type: string
        imageOriginalUrl:
          title: imageOriginalUrl
          type: string
        isMain:
          title: isMain
          type: boolean
        orderBy:
          format: double
          title: orderBy
          type: number
      title: Image
      type: object
    Item:
      example:
        couponApplied: true
        digital: true
        quantityInStock: 1.0246457001441578
        productAvailable: true
        quantity: 1
        productId: 4
        smallThumbnailUrl: smallThumbnailUrl
        taxes:
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        weight: 4.965218492984954
        tax: 6.84685269835264
        hdThumbnailUrl: hdThumbnailUrl
        trackQuantity: true
        isShippingRequired: true
        shipping: 1.4894159098541704
        price: 2.027123023002322
        fixedShippingRate: 9.301444243932576
        imageUrl: imageUrl
        name: name
        id: 3
        fixedShippingRateOnly: true
        sku: sku
        categoryId: 7
        productPrice: 7.386281948385884
      properties:
        categoryId:
          format: int64
          title: categoryId
          type: integer
        couponApplied:
          description: true/false. shows whether a discount coupon is applied for
            this item
          title: couponApplied
          type: boolean
        digital:
          description: true/false. shows whether the item has downloadable files attached
          title: digital
          type: boolean
        fixedShippingRate:
          format: double
          title: fixedShippingRate
          type: number
        fixedShippingRateOnly:
          description: true/false. shows whether the fixed shipping rate is set for
            the product
          title: fixedShippingRateOnly
          type: boolean
        hdThumbnailUrl:
          title: hdThumbnailUrl
          type: string
        id:
          format: int64
          title: id
          type: integer
        imageUrl:
          title: imageUrl
          type: string
        isShippingRequired:
          description: true/false. shows whether the item requires shipping
          title: isShippingRequired
          type: boolean
        name:
          title: name
          type: string
        price:
          format: double
          title: price
          type: number
        productAvailable:
          description: true/false. shows whether product is available or not
          title: productAvailable
          type: boolean
        productId:
          format: int64
          title: productId
          type: integer
        productPrice:
          format: double
          title: productPrice
          type: number
        quantity:
          format: int64
          title: quantity
          type: integer
        quantityInStock:
          format: double
          title: quantityInStock
          type: number
        shipping:
          format: double
          title: shipping
          type: number
        sku:
          title: sku
          type: string
        smallThumbnailUrl:
          title: smallThumbnailUrl
          type: string
        tax:
          format: double
          title: tax
          type: number
        taxes:
          items:
            $ref: '#/components/schemas/Tax'
          title: taxes
          type: array
        trackQuantity:
          description: true/false. shows whether the store admin set to track the
            quantity of this product and get low stock notifications
          title: trackQuantity
          type: boolean
        weight:
          format: double
          title: weight
          type: number
      title: Item
      type: object
    Media:
      example:
        images:
        - image1500pxUrl: image1500pxUrl
          imageOriginalUrl: imageOriginalUrl
          image400pxUrl: image400pxUrl
          image800pxUrl: image800pxUrl
          isMain: true
          orderBy: 6.704019297950036
          id: id
          image160pxUrl: image160pxUrl
        - image1500pxUrl: image1500pxUrl
          imageOriginalUrl: imageOriginalUrl
          image400pxUrl: image400pxUrl
          image800pxUrl: image800pxUrl
          isMain: true
          orderBy: 6.704019297950036
          id: id
          image160pxUrl: image160pxUrl
      properties:
        images:
          items:
            $ref: '#/components/schemas/Image'
          title: images
          type: array
      title: Media
      type: object
    Object:
      description: "Fields for the object. There will be fields associated with an\
        \ Object, which are not all described here."
      example:
        objectField: objectField
      properties:
        objectField:
          title: objectField
          type: string
      title: Object
      type: object
    Option:
      example:
        defaultChoice: 3
        name: name
        choices:
        - priceModifierType: priceModifierType
          text: text
          priceModifier: 3.353193347011243
        - priceModifierType: priceModifierType
          text: text
          priceModifier: 3.353193347011243
        type: type
        required: true
      properties:
        choices:
          items:
            $ref: '#/components/schemas/Choice'
          title: choices
          type: array
        defaultChoice:
          format: int64
          title: defaultChoice
          type: integer
        name:
          title: name
          type: string
        required:
          description: true/false
          title: required
          type: boolean
        type:
          title: type
          type: string
      required:
      - name
      - required
      - type
      title: Option
      type: object
    Order:
      example:
        updateDate: updateDate
        orderNumber: 9
        vendorOrderNumber: vendorOrderNumber
        handlingFee:
          name: name
          description: description
          value: 2.3021358869347655
        hidden: true
        orderComments: orderComments
        shippingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        globalReferer: globalReferer
        billingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        discount: 5.637376656633329
        refererUrl: refererUrl
        fulfillmentStatus: fulfillmentStatus
        createTimestamp: 6.027456183070403
        refunds:
        - date: 2000-01-23T04:56:07.000+00:00
          reason: reason
          amount: 6.683562403749608
          source: source
        - date: 2000-01-23T04:56:07.000+00:00
          reason: reason
          amount: 6.683562403749608
          source: source
        shippingOption:
          shippingRate: 8.762042012749001
          estimatedTransitTime: estimatedTransitTime
          isPickup: true
          shippingMethodName: shippingMethodName
          shippingCarrierName: shippingCarrierName
        usdTotal: 2.8841621266687802
        volumeDiscount: 6.878052220127876
        total: 3.5571952270680973
        paymentModule: paymentModule
        privateAdminNotes: privateAdminNotes
        additionalInfo:
          google_customer_id: google_customer_id
        customerId: 1.4658129805029452
        totalAndMembershipBasedDiscount: 6.965117697638846
        trackingNumber: trackingNumber
        email: email
        paymentStatus: paymentStatus
        createDate: createDate
        customerTaxIdValid: true
        customerTaxExempt: true
        shippingMethod: shippingMethod
        ipAddress: ipAddress
        lastChangeDate: 2000-01-23T04:56:07.000+00:00
        tax: 6.438423552598547
        reversedTaxApplied: true
        sample: true
        updateTimestamp: 1.284659006116532
        couponDiscount: 0.8008281904610115
        subtotal: 9.018348186070783
        membershipBasedDiscount: 5.025004791520295
        paymentMethod: paymentMethod
        vendorNumber: 6.778324963048013
        items:
        - couponApplied: true
          digital: true
          quantityInStock: 1.0246457001441578
          productAvailable: true
          quantity: 1
          productId: 4
          smallThumbnailUrl: smallThumbnailUrl
          taxes:
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          weight: 4.965218492984954
          tax: 6.84685269835264
          hdThumbnailUrl: hdThumbnailUrl
          trackQuantity: true
          isShippingRequired: true
          shipping: 1.4894159098541704
          price: 2.027123023002322
          fixedShippingRate: 9.301444243932576
          imageUrl: imageUrl
          name: name
          id: 3
          fixedShippingRateOnly: true
          sku: sku
          categoryId: 7
          productPrice: 7.386281948385884
        - couponApplied: true
          digital: true
          quantityInStock: 1.0246457001441578
          productAvailable: true
          quantity: 1
          productId: 4
          smallThumbnailUrl: smallThumbnailUrl
          taxes:
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          weight: 4.965218492984954
          tax: 6.84685269835264
          hdThumbnailUrl: hdThumbnailUrl
          trackQuantity: true
          isShippingRequired: true
          shipping: 1.4894159098541704
          price: 2.027123023002322
          fixedShippingRate: 9.301444243932576
          imageUrl: imageUrl
          name: name
          id: 3
          fixedShippingRateOnly: true
          sku: sku
          categoryId: 7
          productPrice: 7.386281948385884
        refundedAmount: 9.369310271410669
        customerTaxId: 5
        taxesOnShipping:
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
      properties:
        additionalInfo:
          $ref: '#/components/schemas/AdditionalInfo'
        billingPerson:
          $ref: '#/components/schemas/Person'
        couponDiscount:
          format: double
          title: couponDiscount
          type: number
        createDate:
          description: "Ex: 2015-02-02 16:11:52 +0000"
          title: createDate
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss ZZZ
        createTimestamp:
          format: double
          title: createTimestamp
          type: number
        customerId:
          format: double
          title: customerId
          type: number
        customerTaxExempt:
          title: customerTaxExempt
          type: boolean
        customerTaxId:
          format: int64
          title: customerTaxId
          type: integer
        customerTaxIdValid:
          title: customerTaxIdValid
          type: boolean
        discount:
          format: double
          title: discount
          type: number
        email:
          title: email
          type: string
        fulfillmentStatus:
          description: "AWAITING_PROCESSING, PROCESSING, SHIPPED, DELIVERED, WILL_NOT_DELIVER,\
            \ RETURNED, READY_FOR_PICKUP"
          title: fulfillmentStatus
          type: string
        globalReferer:
          title: globalReferer
          type: string
        handlingFee:
          $ref: '#/components/schemas/HandlingFee'
        hidden:
          title: hidden
          type: boolean
        ipAddress:
          title: ipAddress
          type: string
        items:
          items:
            $ref: '#/components/schemas/Item'
          title: items
          type: array
        lastChangeDate:
          description: "Ex: 2015-02-03 15:30:08"
          format: date-time
          title: lastChangeDate
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss
        membershipBasedDiscount:
          format: double
          title: membershipBasedDiscount
          type: number
        orderComments:
          title: orderComments
          type: string
        orderNumber:
          description: Unique order number without prefixes/suffixes
          format: int64
          title: orderNumber
          type: integer
          x-name: true
        paymentMethod:
          title: paymentMethod
          type: string
        paymentModule:
          title: paymentModule
          type: string
        paymentStatus:
          description: "AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED,\
            \ INCOMPLETE"
          title: paymentStatus
          type: string
        privateAdminNotes:
          title: privateAdminNotes
          type: string
        refererUrl:
          title: refererUrl
          type: string
        refundedAmount:
          format: double
          title: refundedAmount
          type: number
        refunds:
          items:
            $ref: '#/components/schemas/Refunds'
          title: refunds
          type: array
        reversedTaxApplied:
          title: reversedTaxApplied
          type: boolean
        sample:
          title: sample
          type: boolean
        shippingMethod:
          title: shippingMethod
          type: string
        shippingOption:
          $ref: '#/components/schemas/ShippingOption'
        shippingPerson:
          $ref: '#/components/schemas/Person'
        subtotal:
          format: double
          title: subtotal
          type: number
        tax:
          format: double
          title: tax
          type: number
        taxesOnShipping:
          items:
            $ref: '#/components/schemas/Tax'
          title: taxesOnShipping
          type: array
        total:
          format: double
          title: total
          type: number
        totalAndMembershipBasedDiscount:
          format: double
          title: totalAndMembershipBasedDiscount
          type: number
        trackingNumber:
          title: trackingNumber
          type: string
        updateDate:
          description: "Ex: 2015-02-03 15:30:08 +0000"
          title: updateDate
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss ZZZ
        updateTimestamp:
          format: double
          title: updateTimestamp
          type: number
        usdTotal:
          format: double
          title: usdTotal
          type: number
        vendorNumber:
          format: double
          title: vendorNumber
          type: number
        vendorOrderNumber:
          title: vendorOrderNumber
          type: string
        volumeDiscount:
          format: double
          title: volumeDiscount
          type: number
      title: Order
      type: object
      x-has-customfields: false
      x-primary-key:
      - orderNumber
    OrderPatch:
      example:
        hidden: true
        orderComments: orderComments
        shippingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        globalReferer: globalReferer
        billingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        discount: 5.962133916683182
        refererUrl: refererUrl
        fulfillmentStatus: fulfillmentStatus
        shippingOption:
          shippingRate: 8.762042012749001
          estimatedTransitTime: estimatedTransitTime
          isPickup: true
          shippingMethodName: shippingMethodName
          shippingCarrierName: shippingCarrierName
        volumeDiscount: 2.027123023002322
        total: 9.301444243932576
        paymentModule: paymentModule
        privateAdminNotes: privateAdminNotes
        customerId: 6.027456183070403
        totalAndMembershipBasedDiscount: 3.616076749251911
        email: email
        paymentStatus: paymentStatus
        customerTaxIdValid: true
        customerTaxExempt: true
        shippingMethod: shippingMethod
        tax: 7.061401241503109
        reversedTaxApplied: true
        sample: true
        couponDiscount: 0.8008281904610115
        subtotal: 2.3021358869347655
        membershipBasedDiscount: 5.637376656633329
        items:
        - couponApplied: true
          digital: true
          quantityInStock: 1.0246457001441578
          productAvailable: true
          quantity: 1
          productId: 4
          smallThumbnailUrl: smallThumbnailUrl
          taxes:
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          weight: 4.965218492984954
          tax: 6.84685269835264
          hdThumbnailUrl: hdThumbnailUrl
          trackQuantity: true
          isShippingRequired: true
          shipping: 1.4894159098541704
          price: 2.027123023002322
          fixedShippingRate: 9.301444243932576
          imageUrl: imageUrl
          name: name
          id: 3
          fixedShippingRateOnly: true
          sku: sku
          categoryId: 7
          productPrice: 7.386281948385884
        - couponApplied: true
          digital: true
          quantityInStock: 1.0246457001441578
          productAvailable: true
          quantity: 1
          productId: 4
          smallThumbnailUrl: smallThumbnailUrl
          taxes:
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          weight: 4.965218492984954
          tax: 6.84685269835264
          hdThumbnailUrl: hdThumbnailUrl
          trackQuantity: true
          isShippingRequired: true
          shipping: 1.4894159098541704
          price: 2.027123023002322
          fixedShippingRate: 9.301444243932576
          imageUrl: imageUrl
          name: name
          id: 3
          fixedShippingRateOnly: true
          sku: sku
          categoryId: 7
          productPrice: 7.386281948385884
        customerTaxId: 1
        taxesOnShipping:
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
      properties:
        billingPerson:
          $ref: '#/components/schemas/Person'
        couponDiscount:
          format: double
          title: couponDiscount
          type: number
        customerId:
          format: double
          title: customerId
          type: number
        customerTaxExempt:
          title: customerTaxExempt
          type: boolean
        customerTaxId:
          format: int64
          title: customerTaxId
          type: integer
        customerTaxIdValid:
          title: customerTaxIdValid
          type: boolean
        discount:
          format: double
          title: discount
          type: number
        email:
          title: email
          type: string
        fulfillmentStatus:
          description: "AWAITING_PROCESSING, PROCESSING, SHIPPED, DELIVERED, WILL_NOT_DELIVER,\
            \ RETURNED, READY_FOR_PICKUP"
          title: fulfillmentStatus
          type: string
        globalReferer:
          title: globalReferer
          type: string
        hidden:
          title: hidden
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Item'
          title: items
          type: array
        membershipBasedDiscount:
          format: double
          title: membershipBasedDiscount
          type: number
        orderComments:
          title: orderComments
          type: string
        paymentModule:
          title: paymentModule
          type: string
        paymentStatus:
          description: "AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED,\
            \ INCOMPLETE"
          title: paymentStatus
          type: string
        privateAdminNotes:
          title: privateAdminNotes
          type: string
        refererUrl:
          title: refererUrl
          type: string
        reversedTaxApplied:
          title: reversedTaxApplied
          type: boolean
        sample:
          title: sample
          type: boolean
        shippingMethod:
          title: shippingMethod
          type: string
        shippingOption:
          $ref: '#/components/schemas/ShippingOption'
        shippingPerson:
          $ref: '#/components/schemas/Person'
        subtotal:
          format: double
          title: subtotal
          type: number
        tax:
          format: double
          title: tax
          type: number
        taxesOnShipping:
          items:
            $ref: '#/components/schemas/Tax'
          title: taxesOnShipping
          type: array
        total:
          format: double
          title: total
          type: number
        totalAndMembershipBasedDiscount:
          format: double
          title: totalAndMembershipBasedDiscount
          type: number
        volumeDiscount:
          format: double
          title: volumeDiscount
          type: number
      title: OrderPatch
      type: object
      x-has-customfields: false
    OrderPost:
      example:
        hidden: true
        orderComments: orderComments
        shippingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        globalReferer: globalReferer
        billingPerson:
          city: city
          phone: phone
          stateName: stateName
          countryCode: countryCode
          street: street
          companyName: companyName
          postalCode: postalCode
          name: name
          stateOrProvinceCode: stateOrProvinceCode
          countryName: countryName
          stateOrProvinceName: stateOrProvinceName
        discount: 5.962133916683182
        refererUrl: refererUrl
        fulfillmentStatus: fulfillmentStatus
        shippingOption:
          shippingRate: 8.762042012749001
          estimatedTransitTime: estimatedTransitTime
          isPickup: true
          shippingMethodName: shippingMethodName
          shippingCarrierName: shippingCarrierName
        volumeDiscount: 2.027123023002322
        total: 9.301444243932576
        paymentModule: paymentModule
        privateAdminNotes: privateAdminNotes
        customerId: 6.027456183070403
        totalAndMembershipBasedDiscount: 3.616076749251911
        email: email
        paymentStatus: paymentStatus
        customerTaxIdValid: true
        customerTaxExempt: true
        shippingMethod: shippingMethod
        tax: 7.061401241503109
        reversedTaxApplied: true
        sample: true
        couponDiscount: 0.8008281904610115
        subtotal: 2.3021358869347655
        membershipBasedDiscount: 5.637376656633329
        paymentMethod: paymentMethod
        items:
        - couponApplied: true
          digital: true
          quantityInStock: 1.0246457001441578
          productAvailable: true
          quantity: 1
          productId: 4
          smallThumbnailUrl: smallThumbnailUrl
          taxes:
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          weight: 4.965218492984954
          tax: 6.84685269835264
          hdThumbnailUrl: hdThumbnailUrl
          trackQuantity: true
          isShippingRequired: true
          shipping: 1.4894159098541704
          price: 2.027123023002322
          fixedShippingRate: 9.301444243932576
          imageUrl: imageUrl
          name: name
          id: 3
          fixedShippingRateOnly: true
          sku: sku
          categoryId: 7
          productPrice: 7.386281948385884
        - couponApplied: true
          digital: true
          quantityInStock: 1.0246457001441578
          productAvailable: true
          quantity: 1
          productId: 4
          smallThumbnailUrl: smallThumbnailUrl
          taxes:
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          - total: 7.457744773683766
            name: name
            value: 1.1730742509559433
          weight: 4.965218492984954
          tax: 6.84685269835264
          hdThumbnailUrl: hdThumbnailUrl
          trackQuantity: true
          isShippingRequired: true
          shipping: 1.4894159098541704
          price: 2.027123023002322
          fixedShippingRate: 9.301444243932576
          imageUrl: imageUrl
          name: name
          id: 3
          fixedShippingRateOnly: true
          sku: sku
          categoryId: 7
          productPrice: 7.386281948385884
        customerTaxId: 1
      properties:
        billingPerson:
          $ref: '#/components/schemas/Person'
        couponDiscount:
          format: double
          title: couponDiscount
          type: number
        customerId:
          format: double
          title: customerId
          type: number
        customerTaxExempt:
          title: customerTaxExempt
          type: boolean
        customerTaxId:
          format: int64
          title: customerTaxId
          type: integer
        customerTaxIdValid:
          title: customerTaxIdValid
          type: boolean
        discount:
          format: double
          title: discount
          type: number
        email:
          title: email
          type: string
        fulfillmentStatus:
          description: "AWAITING_PROCESSING, PROCESSING, SHIPPED, DELIVERED, WILL_NOT_DELIVER,\
            \ RETURNED, READY_FOR_PICKUP"
          title: fulfillmentStatus
          type: string
        globalReferer:
          title: globalReferer
          type: string
        hidden:
          title: hidden
          type: boolean
        items:
          items:
            $ref: '#/components/schemas/Item'
          title: items
          type: array
        membershipBasedDiscount:
          format: double
          title: membershipBasedDiscount
          type: number
        orderComments:
          title: orderComments
          type: string
        paymentMethod:
          title: paymentMethod
          type: string
        paymentModule:
          title: paymentModule
          type: string
        paymentStatus:
          description: "AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED,\
            \ INCOMPLETE"
          title: paymentStatus
          type: string
        privateAdminNotes:
          title: privateAdminNotes
          type: string
        refererUrl:
          title: refererUrl
          type: string
        reversedTaxApplied:
          title: reversedTaxApplied
          type: boolean
        sample:
          title: sample
          type: boolean
        shippingMethod:
          title: shippingMethod
          type: string
        shippingOption:
          $ref: '#/components/schemas/ShippingOption'
        shippingPerson:
          $ref: '#/components/schemas/Person'
        subtotal:
          format: double
          title: subtotal
          type: number
        tax:
          format: double
          title: tax
          type: number
        total:
          format: double
          title: total
          type: number
        totalAndMembershipBasedDiscount:
          format: double
          title: totalAndMembershipBasedDiscount
          type: number
        volumeDiscount:
          format: double
          title: volumeDiscount
          type: number
      required:
      - fulfillmentStatus
      - paymentStatus
      title: OrderPost
      type: object
      x-has-customfields: false
    Payment:
      example:
        paymentMethod: paymentMethod
        paymentStatus: paymentStatus
      properties:
        paymentMethod:
          title: paymentMethod
          type: string
        paymentStatus:
          description: "AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED,\
            \ INCOMPLETE"
          title: paymentStatus
          type: string
      title: Payment
      type: object
      x-has-customfields: false
    Person:
      example:
        city: city
        phone: phone
        stateName: stateName
        countryCode: countryCode
        street: street
        companyName: companyName
        postalCode: postalCode
        name: name
        stateOrProvinceCode: stateOrProvinceCode
        countryName: countryName
        stateOrProvinceName: stateOrProvinceName
      properties:
        city:
          title: city
          type: string
        companyName:
          title: companyName
          type: string
        countryCode:
          title: countryCode
          type: string
        countryName:
          title: countryName
          type: string
        name:
          title: name
          type: string
        phone:
          title: phone
          type: string
        postalCode:
          title: postalCode
          type: string
        stateName:
          title: stateName
          type: string
        stateOrProvinceCode:
          title: stateOrProvinceCode
          type: string
        stateOrProvinceName:
          title: stateOrProvinceName
          type: string
        street:
          title: street
          type: string
      title: Person
      type: object
    Pong:
      example:
        dateTime: 2000-01-23T04:56:07.000+00:00
        valid: true
        endpoint: endpoint
      properties:
        dateTime:
          format: date-time
          title: dateTime
          type: string
        endpoint:
          title: endpoint
          type: string
        valid:
          title: valid
          type: boolean
      title: Pong
      type: object
    Product:
      example:
        relatedProducts:
          productIds:
          - 4.652396432933246
          - 4.652396432933246
          relatedCategory:
            productCount: 7.740351818741173
            categoryId: 8.969578798196912
            enabled: true
        taxes:
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        createTimestamp: 5
        originalImageUrl: originalImageUrl
        showOnFrontpage: 7.04836565559697
        trackQuantity: trackQuantity
        shipping:
          flatRate: 3.0205796992916243
          disabledMethods:
          - disabledMethods
          - disabledMethods
          enabledMethods:
          - enabledMethods
          - enabledMethods
          methodMarkup: 3.0576100241049344
          type: type
        compareToPrice: 7.457744773683766
        price: 7.143538047012306
        options:
        - defaultChoice: 3
          name: name
          choices:
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          type: type
          required: true
        - defaultChoice: 3
          name: name
          choices:
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          type: type
          required: true
        inStock: true
        id: 5
        sku: sku
        googleItemCondition: googleItemCondition
        productClassId: 7
        created: created
        seoDescription: seoDescription
        wholesalePrices:
          '{quantity}': 4.258773108174356
        weight: 6.628464275087742
        priceInProductList: 0.8851374739011653
        tax:
          enabledManualTaxes:
          - 3
          - 3
          defaultLocationIncludedTaxRate: 5.533258397034986
        compareToPriceFormatted: compareToPriceFormatted
        hdThumbnailUrl: hdThumbnailUrl
        defaultCategoryId: 9
        combinations:
        - quantity: 1.2315135367772556
          compareToPrice: 2.027123023002322
          price: 7.386281948385884
          unlimited: true
          weight: 1.4894159098541704
          attributes:
          - internalName: internalName
            name: name
            id: 0
            value: value
          - internalName: internalName
            name: name
            id: 0
            value: value
          id: 4.145608029883936
          warningLimit: 1.0246457001441578
          combinationNumber: 3.616076749251911
          sku: sku
        - quantity: 1.2315135367772556
          compareToPrice: 2.027123023002322
          price: 7.386281948385884
          unlimited: true
          weight: 1.4894159098541704
          attributes:
          - internalName: internalName
            name: name
            id: 0
            value: value
          - internalName: internalName
            name: name
            id: 0
            value: value
          id: 4.145608029883936
          warningLimit: 1.0246457001441578
          combinationNumber: 3.616076749251911
          sku: sku
        isSampleProduct: true
        compareToPriceDiscountPercent: 4.965218492984954
        name: name
        quantityDelta: 0
        files:
        - size: 1.284659006116532
          name: name
          description: description
          id: 6.965117697638846
          adminUrl: adminUrl
        - size: 1.284659006116532
          name: name
          description: description
          id: 6.965117697638846
          adminUrl: adminUrl
        borderInfo:
          dominatingColor:
            red: 5.637376656633329
            green: 5.962133916683182
            blue: 1.4658129805029452
            alpha: 6.027456183070403
          homogeneity: true
        warningLimit: 0
        updated: updated
        galleryImages:
        - thumbnail: thumbnail
          alt: alt
          width: 6
          url: url
          height: 6
        - thumbnail: thumbnail
          alt: alt
          width: 6
          url: url
          height: 6
        descriptionTruncated: true
        favorites:
          count: 3
          displayedCount: displayedCount
        defaultDisplayedPrice: 6.683562403749608
        compareToPriceDiscount: 1.1730742509559433
        defaultDisplayedPriceFormatted: defaultDisplayedPriceFormatted
        description: description
        media:
          images:
          - image1500pxUrl: image1500pxUrl
            imageOriginalUrl: imageOriginalUrl
            image400pxUrl: image400pxUrl
            image800pxUrl: image800pxUrl
            isMain: true
            orderBy: 6.704019297950036
            id: id
            image160pxUrl: image160pxUrl
          - image1500pxUrl: image1500pxUrl
            imageOriginalUrl: imageOriginalUrl
            image400pxUrl: image400pxUrl
            image800pxUrl: image800pxUrl
            isMain: true
            orderBy: 6.704019297950036
            id: id
            image160pxUrl: image160pxUrl
        seoTitle: seoTitle
        enabled: true
        isShippingRequired: true
        fixedShippingRate: 2.8841621266687802
        imageUrl: imageUrl
        categories:
        - originalImageUrl: originalImageUrl
          defaultCategory: true
          name: name
          description: description
          id: 2
          productCount: 7
          enabled: true
          url: url
          thumbnailUrl: thumbnailUrl
        - originalImageUrl: originalImageUrl
          defaultCategory: true
          name: name
          description: description
          id: 2
          productCount: 7
          enabled: true
          url: url
          thumbnailUrl: thumbnailUrl
        originalImage:
          thumbnail: thumbnail
          alt: alt
          width: 6
          url: url
          height: 6
        compareAtPrice: 6.84685269835264
        thumbnailUrl: thumbnailUrl
        quantity: 6
        smallThumbnailUrl: smallThumbnailUrl
        unlimited: true
        tangible: tangible
        updateTimestamp: 4
        url: url
        categoryIds:
        - 9
        - 9
        compareToPriceDiscountPercentFormatted: compareToPriceDiscountPercentFormatted
        attributes:
        - internalName: internalName
          name: name
          id: 0
          value: value
        - internalName: internalName
          name: name
          id: 0
          value: value
        compareToPriceDiscountFormatted: compareToPriceDiscountFormatted
        fixedShippingRateOnly: true
        defaultCombinationId: 9.369310271410669
        dimensions:
          length: 9.018348186070783
          width: 6.438423552598547
          height: 8.762042012749001
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Attribute'
          title: attributes
          type: array
        borderInfo:
          $ref: '#/components/schemas/BorderInfo'
        categories:
          items:
            $ref: '#/components/schemas/Category'
          title: categories
          type: array
        categoryIds:
          items:
            format: int64
            type: integer
          title: categoryIds
          type: array
        combinations:
          items:
            $ref: '#/components/schemas/Combination'
          title: combinations
          type: array
        compareAtPrice:
          description: Product’s sale price displayed strike-out in the customer
          format: double
          title: compareAtPrice
          type: number
        compareToPrice:
          format: double
          title: compareToPrice
          type: number
        compareToPriceDiscount:
          format: double
          title: compareToPriceDiscount
          type: number
        compareToPriceDiscountFormatted:
          title: compareToPriceDiscountFormatted
          type: string
        compareToPriceDiscountPercent:
          format: double
          title: compareToPriceDiscountPercent
          type: number
        compareToPriceDiscountPercentFormatted:
          title: compareToPriceDiscountPercentFormatted
          type: string
        compareToPriceFormatted:
          title: compareToPriceFormatted
          type: string
        createTimestamp:
          format: int64
          title: createTimestamp
          type: integer
        created:
          description: "Ex: 2014-09-24 06:43:06"
          title: created
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss
        defaultCategoryId:
          format: int64
          title: defaultCategoryId
          type: integer
        defaultCombinationId:
          format: double
          title: defaultCombinationId
          type: number
        defaultDisplayedPrice:
          format: double
          title: defaultDisplayedPrice
          type: number
        defaultDisplayedPriceFormatted:
          title: defaultDisplayedPriceFormatted
          type: string
        description:
          description: Product description in HTML
          title: description
          type: string
        descriptionTruncated:
          title: descriptionTruncated
          type: boolean
        dimensions:
          $ref: '#/components/schemas/ProductDimensions'
        enabled:
          description: true/false
          title: enabled
          type: boolean
        favorites:
          $ref: '#/components/schemas/Favorite'
        files:
          items:
            $ref: '#/components/schemas/File'
          title: files
          type: array
        fixedShippingRate:
          format: double
          title: fixedShippingRate
          type: number
        fixedShippingRateOnly:
          description: true/false
          title: fixedShippingRateOnly
          type: boolean
        galleryImages:
          items:
            $ref: '#/components/schemas/GalleryImage'
          title: galleryImages
          type: array
        googleItemCondition:
          description: Google Item Condition Status
          title: googleItemCondition
          type: string
        hdThumbnailUrl:
          title: hdThumbnailUrl
          type: string
        id:
          format: int64
          title: id
          type: integer
        imageUrl:
          title: imageUrl
          type: string
        inStock:
          description: true/false
          title: inStock
          type: boolean
        isSampleProduct:
          title: isSampleProduct
          type: boolean
        isShippingRequired:
          title: isShippingRequired
          type: boolean
        media:
          $ref: '#/components/schemas/Media'
        name:
          description: Product title
          title: name
          type: string
          x-name: true
        options:
          items:
            $ref: '#/components/schemas/Option'
          title: options
          type: array
        originalImage:
          $ref: '#/components/schemas/GalleryImage'
        originalImageUrl:
          title: originalImageUrl
          type: string
        price:
          description: Base Product price
          format: double
          title: price
          type: number
        priceInProductList:
          format: double
          title: priceInProductList
          type: number
        productClassId:
          description: Id of the product type that this product belongs to.
          format: int64
          title: productClassId
          type: integer
        quantity:
          description: Amount of product items in stock.
          format: int64
          title: quantity
          type: integer
        quantityDelta:
          format: int64
          title: quantityDelta
          type: integer
        relatedProducts:
          $ref: '#/components/schemas/RelatedProducts'
        seoDescription:
          title: seoDescription
          type: string
        seoTitle:
          title: seoTitle
          type: string
        shipping:
          $ref: '#/components/schemas/Shipping'
        showOnFrontpage:
          format: double
          title: showOnFrontpage
          type: number
        sku:
          description: Product SKU
          title: sku
          type: string
        smallThumbnailUrl:
          title: smallThumbnailUrl
          type: string
        tangible:
          description: true/false
          title: tangible
          type: string
        tax:
          $ref: '#/components/schemas/ProductTax'
        taxes:
          items:
            $ref: '#/components/schemas/Tax'
          title: taxes
          type: array
        thumbnailUrl:
          title: thumbnailUrl
          type: string
        trackQuantity:
          description: true/false
          title: trackQuantity
          type: string
        unlimited:
          title: unlimited
          type: boolean
        updateTimestamp:
          format: int64
          title: updateTimestamp
          type: integer
        updated:
          description: "Ex: 2015-02-03 15:30:46"
          title: updated
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss
        url:
          title: url
          type: string
        warningLimit:
          format: int64
          title: warningLimit
          type: integer
        weight:
          description: Product weight in the units defined in store settings
          format: double
          title: weight
          type: number
        wholesalePrices:
          $ref: '#/components/schemas/WholesalePrices'
      title: Product
      type: object
      x-has-customfields: false
      x-primary-key:
      - id
    ProductDimensions:
      example:
        length: 9.018348186070783
        width: 6.438423552598547
        height: 8.762042012749001
      properties:
        height:
          format: double
          title: height
          type: number
        length:
          format: double
          title: length
          type: number
        width:
          format: double
          title: width
          type: number
      title: ProductDimensions
      type: object
    ProductPatch:
      example:
        relatedProducts:
          productIds:
          - 4.652396432933246
          - 4.652396432933246
          relatedCategory:
            productCount: 7.740351818741173
            categoryId: 8.969578798196912
            enabled: true
        description: description
        taxes:
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        seoTitle: seoTitle
        enabled: true
        showOnFrontpage: 3.616076749251911
        isShippingRequired: true
        shipping:
          flatRate: 3.0205796992916243
          disabledMethods:
          - disabledMethods
          - disabledMethods
          enabledMethods:
          - enabledMethods
          - enabledMethods
          methodMarkup: 3.0576100241049344
          type: type
        compareToPrice: 1.4658129805029452
        price: 2.3021358869347655
        fixedShippingRate: 5.637376656633329
        options:
        - defaultChoice: 3
          name: name
          choices:
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          type: type
          required: true
        - defaultChoice: 3
          name: name
          choices:
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          type: type
          required: true
        sku: sku
        compareAtPrice: 6.027456183070403
        googleItemCondition: googleItemCondition
        productClassId: 7
        quantity: 9
        seoDescription: seoDescription
        wholesalePrices:
          '{quantity}': 4.258773108174356
        weight: 4.145608029883936
        tax:
          enabledManualTaxes:
          - 3
          - 3
          defaultLocationIncludedTaxRate: 5.533258397034986
        defaultCategoryId: 5
        categoryIds:
        - 0
        - 0
        name: name
        attributes:
        - internalName: internalName
          name: name
          id: 0
          value: value
        - internalName: internalName
          name: name
          id: 0
          value: value
        warningLimit: 2
        fixedShippingRateOnly: true
        dimensions:
          length: 9.018348186070783
          width: 6.438423552598547
          height: 8.762042012749001
        galleryImages:
        - thumbnail: thumbnail
          alt: alt
          width: 6
          url: url
          height: 6
        - thumbnail: thumbnail
          alt: alt
          width: 6
          url: url
          height: 6
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Attribute'
          title: attributes
          type: array
        categoryIds:
          items:
            format: int64
            type: integer
          title: categoryIds
          type: array
        compareAtPrice:
          description: Product’s sale price displayed strike-out in the customer
          format: double
          title: compareAtPrice
          type: number
        compareToPrice:
          format: double
          title: compareToPrice
          type: number
        defaultCategoryId:
          format: int64
          title: defaultCategoryId
          type: integer
        description:
          description: Product description in HTML
          title: description
          type: string
        dimensions:
          $ref: '#/components/schemas/ProductDimensions'
        enabled:
          description: true/false
          title: enabled
          type: boolean
        fixedShippingRate:
          format: double
          title: fixedShippingRate
          type: number
        fixedShippingRateOnly:
          description: true/false
          title: fixedShippingRateOnly
          type: boolean
        galleryImages:
          items:
            $ref: '#/components/schemas/GalleryImage'
          title: galleryImages
          type: array
        googleItemCondition:
          description: Google Item Condition Status
          title: googleItemCondition
          type: string
        isShippingRequired:
          title: isShippingRequired
          type: boolean
        name:
          description: Product title
          title: name
          type: string
          x-name: true
        options:
          items:
            $ref: '#/components/schemas/Option'
          title: options
          type: array
        price:
          description: Base Product price
          format: double
          title: price
          type: number
        productClassId:
          description: Id of the product type that this product belongs to.
          format: int64
          title: productClassId
          type: integer
        quantity:
          description: Amount of product items in stock.
          format: int64
          title: quantity
          type: integer
        relatedProducts:
          $ref: '#/components/schemas/RelatedProducts'
        seoDescription:
          title: seoDescription
          type: string
        seoTitle:
          title: seoTitle
          type: string
        shipping:
          $ref: '#/components/schemas/Shipping'
        showOnFrontpage:
          format: double
          title: showOnFrontpage
          type: number
        sku:
          description: Product SKU
          title: sku
          type: string
        tax:
          $ref: '#/components/schemas/ProductTax'
        taxes:
          items:
            $ref: '#/components/schemas/Tax'
          title: taxes
          type: array
        warningLimit:
          format: int64
          title: warningLimit
          type: integer
        weight:
          description: Product weight in the units defined in store settings
          format: double
          title: weight
          type: number
        wholesalePrices:
          $ref: '#/components/schemas/WholesalePrices'
      title: ProductPatch
      type: object
      x-has-customfields: false
    ProductPost:
      example:
        favorites:
          count: 3
          displayedCount: displayedCount
        relatedProducts:
          productIds:
          - 4.652396432933246
          - 4.652396432933246
          relatedCategory:
            productCount: 7.740351818741173
            categoryId: 8.969578798196912
            enabled: true
        description: description
        taxes:
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        - total: 7.457744773683766
          name: name
          value: 1.1730742509559433
        seoTitle: seoTitle
        enabled: true
        showOnFrontpage: 3.616076749251911
        isShippingRequired: true
        shipping:
          flatRate: 3.0205796992916243
          disabledMethods:
          - disabledMethods
          - disabledMethods
          enabledMethods:
          - enabledMethods
          - enabledMethods
          methodMarkup: 3.0576100241049344
          type: type
        compareToPrice: 1.4658129805029452
        price: 2.3021358869347655
        fixedShippingRate: 5.637376656633329
        options:
        - defaultChoice: 3
          name: name
          choices:
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          type: type
          required: true
        - defaultChoice: 3
          name: name
          choices:
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          - priceModifierType: priceModifierType
            text: text
            priceModifier: 3.353193347011243
          type: type
          required: true
        sku: sku
        compareAtPrice: 6.027456183070403
        googleItemCondition: googleItemCondition
        productClassId: 7
        quantity: 9
        created: 2000-01-23T04:56:07.000+00:00
        seoDescription: seoDescription
        wholesalePrices:
          '{quantity}': 4.258773108174356
        weight: 4.145608029883936
        tax:
          enabledManualTaxes:
          - 3
          - 3
          defaultLocationIncludedTaxRate: 5.533258397034986
        defaultCategoryId: 5
        categoryIds:
        - 0
        - 0
        name: name
        attributes:
        - internalName: internalName
          name: name
          id: 0
          value: value
        - internalName: internalName
          name: name
          id: 0
          value: value
        warningLimit: 2
        fixedShippingRateOnly: true
        dimensions:
          length: 9.018348186070783
          width: 6.438423552598547
          height: 8.762042012749001
        galleryImages:
        - thumbnail: thumbnail
          alt: alt
          width: 6
          url: url
          height: 6
        - thumbnail: thumbnail
          alt: alt
          width: 6
          url: url
          height: 6
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/Attribute'
          title: attributes
          type: array
        categoryIds:
          items:
            format: int64
            type: integer
          title: categoryIds
          type: array
        compareAtPrice:
          description: Product’s sale price displayed strike-out in the customer
          format: double
          title: compareAtPrice
          type: number
        compareToPrice:
          format: double
          title: compareToPrice
          type: number
        created:
          format: date-time
          title: created
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss
        defaultCategoryId:
          format: int64
          title: defaultCategoryId
          type: integer
        description:
          description: Product description in HTML
          title: description
          type: string
        dimensions:
          $ref: '#/components/schemas/ProductDimensions'
        enabled:
          description: true/false
          title: enabled
          type: boolean
        favorites:
          $ref: '#/components/schemas/Favorite'
        fixedShippingRate:
          format: double
          title: fixedShippingRate
          type: number
        fixedShippingRateOnly:
          description: true/false
          title: fixedShippingRateOnly
          type: boolean
        galleryImages:
          items:
            $ref: '#/components/schemas/GalleryImage'
          title: galleryImages
          type: array
        googleItemCondition:
          description: Google Item Condition Status
          title: googleItemCondition
          type: string
        isShippingRequired:
          title: isShippingRequired
          type: boolean
        name:
          description: Product title
          title: name
          type: string
          x-name: true
        options:
          items:
            $ref: '#/components/schemas/Option'
          title: options
          type: array
        price:
          description: Base Product price
          format: double
          title: price
          type: number
        productClassId:
          description: Id of the product type that this product belongs to.
          format: int64
          title: productClassId
          type: integer
        quantity:
          description: Amount of product items in stock.
          format: int64
          title: quantity
          type: integer
        relatedProducts:
          $ref: '#/components/schemas/RelatedProducts'
        seoDescription:
          title: seoDescription
          type: string
        seoTitle:
          title: seoTitle
          type: string
        shipping:
          $ref: '#/components/schemas/Shipping'
        showOnFrontpage:
          format: double
          title: showOnFrontpage
          type: number
        sku:
          description: Product SKU
          title: sku
          type: string
        tax:
          $ref: '#/components/schemas/ProductTax'
        taxes:
          items:
            $ref: '#/components/schemas/Tax'
          title: taxes
          type: array
        warningLimit:
          format: int64
          title: warningLimit
          type: integer
        weight:
          description: Product weight in the units defined in store settings
          format: double
          title: weight
          type: number
        wholesalePrices:
          $ref: '#/components/schemas/WholesalePrices'
      title: ProductPost
      type: object
      x-has-customfields: false
    ProductTax:
      example:
        enabledManualTaxes:
        - 3
        - 3
        defaultLocationIncludedTaxRate: 5.533258397034986
      properties:
        defaultLocationIncludedTaxRate:
          format: double
          title: defaultLocationIncludedTaxRate
          type: number
        enabledManualTaxes:
          items:
            format: int64
            type: integer
          title: enabledManualTaxes
          type: array
      title: ProductTax
      type: object
    Refunds:
      example:
        date: 2000-01-23T04:56:07.000+00:00
        reason: reason
        amount: 6.683562403749608
        source: source
      properties:
        amount:
          format: double
          title: amount
          type: number
        date:
          format: date-time
          title: date
          type: string
          x-mask: yyyy-mm-dd hh:mm:ss
        reason:
          title: reason
          type: string
        source:
          title: source
          type: string
      title: Refunds
      type: object
    RelatedCategory:
      example:
        productCount: 7.740351818741173
        categoryId: 8.969578798196912
        enabled: true
      properties:
        categoryId:
          format: double
          title: categoryId
          type: number
        enabled:
          title: enabled
          type: boolean
        productCount:
          format: double
          title: productCount
          type: number
      title: RelatedCategory
      type: object
    RelatedProducts:
      example:
        productIds:
        - 4.652396432933246
        - 4.652396432933246
        relatedCategory:
          productCount: 7.740351818741173
          categoryId: 8.969578798196912
          enabled: true
      properties:
        productIds:
          items:
            format: double
            type: number
          title: productIds
          type: array
        relatedCategory:
          $ref: '#/components/schemas/RelatedCategory'
      title: RelatedProducts
      type: object
    Shipping:
      example:
        flatRate: 3.0205796992916243
        disabledMethods:
        - disabledMethods
        - disabledMethods
        enabledMethods:
        - enabledMethods
        - enabledMethods
        methodMarkup: 3.0576100241049344
        type: type
      properties:
        disabledMethods:
          items:
            type: string
          title: disabledMethods
          type: array
        enabledMethods:
          items:
            type: string
          title: enabledMethods
          type: array
        flatRate:
          format: double
          title: flatRate
          type: number
        methodMarkup:
          format: double
          title: methodMarkup
          type: number
        type:
          title: type
          type: string
      title: Shipping
      type: object
    ShippingOption:
      example:
        shippingRate: 8.762042012749001
        estimatedTransitTime: estimatedTransitTime
        isPickup: true
        shippingMethodName: shippingMethodName
        shippingCarrierName: shippingCarrierName
      properties:
        estimatedTransitTime:
          title: estimatedTransitTime
          type: string
        isPickup:
          title: isPickup
          type: boolean
        shippingCarrierName:
          title: shippingCarrierName
          type: string
        shippingMethodName:
          title: shippingMethodName
          type: string
        shippingRate:
          format: double
          title: shippingRate
          type: number
      title: ShippingOption
      type: object
    Tax:
      example:
        total: 7.457744773683766
        name: name
        value: 1.1730742509559433
      properties:
        name:
          title: name
          type: string
        total:
          format: double
          title: total
          type: number
        value:
          format: double
          title: value
          type: number
      title: Tax
      type: object
    WholesalePrices:
      example:
        '{quantity}': 4.258773108174356
      properties:
        '{quantity}':
          format: double
          title: "{quantity}"
          type: number
      title: WholesalePrices
      type: object
    bulkDownloadRequest:
      properties:
        apiLimit:
          format: int32
          title: apiLimit
          type: integer
          x-samplevalue: 100
        continueFromJobId:
          format: int32
          title: continueFromJobId
          type: integer
          x-samplevalue: 1
        docsHubDetails:
          $ref: '#/components/schemas/bulkDownloadRequestDocsHubDetails'
        filterDateField:
          title: filterDateField
          type: string
          x-samplevalue: lastModifiedDate
        filterNulls:
          title: filterNulls
          type: boolean
          x-samplevalue: true
        format:
          enum:
          - application/json
          - txt/csv
          - application/jsonl
          title: format
          type: string
          x-samplevalue: application/json
        from:
          format: date-time
          title: from
          type: string
          x-samplevalue: 2014-10-06T13:22:17-08:00
          x-mask: yyyy-MM-dd'T'HH:mm:ssZ
        limit:
          format: int32
          title: limit
          type: integer
          x-samplevalue: 107
        notificationUrl:
          title: notificationUrl
          type: string
          x-samplevalue: https://myreceiver.com/whatever
        objectName:
          title: objectName
          type: string
          x-samplevalue: accounts
        pageSize:
          format: int32
          title: pageSize
          type: integer
          x-samplevalue: 200
        query:
          $ref: '#/components/schemas/bulkDownloadRequestQuery'
        selectFields:
          title: selectFields
          type: string
          x-samplevalue: "a,b,c"
        to:
          format: date-time
          title: to
          type: string
          x-samplevalue: 2014-10-10T13:22:17-08:00
          x-mask: yyyy-MM-dd'T'HH:mm:ssZ
        where:
          title: where
          type: string
          x-samplevalue: name='Alex' and gender='male'
      required:
      - format
      - objectName
      title: bulkDownloadRequest
      type: object
    bulkDownloadRequestDocsHubDetails:
      properties:
        instanceId:
          title: instanceId
          type: string
          x-samplevalue: "1234"
        path:
          title: path
          type: string
          x-samplevalue: /myfolder/in/googledrive/myfilename.extention
      title: docsHubDetails
      type: object
    bulkDownloadRequestQuery:
      properties:
        anyKey:
          title: anyKey
          type: string
          x-samplevalue: anyValue
      title: query
      type: object
    objectsMetadata:
      example:
        fields:
        - vendorDisplayName: vendorDisplayName
          vendorReadOnly: true
          vendorRequired: true
          type: type
          vendorPath: vendorPath
          mask: mask
        - vendorDisplayName: vendorDisplayName
          vendorReadOnly: true
          vendorRequired: true
          type: type
          vendorPath: vendorPath
          mask: mask
      properties:
        fields:
          items:
            $ref: '#/components/schemas/objectsMetadataFields'
          title: fields
          type: array
      title: objectsMetadata
      type: object
    objectsMetadataFields:
      example:
        vendorDisplayName: vendorDisplayName
        vendorReadOnly: true
        vendorRequired: true
        type: type
        vendorPath: vendorPath
        mask: mask
      properties:
        mask:
          title: mask
          type: string
        type:
          title: type
          type: string
        vendorDisplayName:
          title: vendorDisplayName
          type: string
        vendorPath:
          title: vendorPath
          type: string
        vendorReadOnly:
          title: vendorReadOnly
          type: boolean
        vendorRequired:
          title: vendorRequired
          type: boolean
      title: objectsMetadataFields
      type: object
    swagger-contacts-path:
      example:
        post:
          summary: summary
          operationId: operationId
          responses:
            "200":
              schema:
                $ref: $ref
              description: description
            "400":
              description: description
            "401":
              description: description
            "500":
              description: description
            "403":
              description: description
            "502":
              description: description
            "404":
              description: description
            "415":
              description: description
            "405":
              description: description
            "406":
              description: description
            "409":
              description: description
          parameters:
          - schema:
              $ref: $ref
            in: in
            name: name
            description: description
            type: type
            required: true
          - schema:
              $ref: $ref
            in: in
            name: name
            description: description
            type: type
            required: true
          tags:
          - tags
          - tags
      properties:
        post:
          $ref: '#/components/schemas/swaggerpost'
      title: /contacts
      type: object
      x-has-customfields: false
    swagger200:
      example:
        schema:
          $ref: $ref
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: OK - Everything worked as expected
        schema:
          $ref: '#/components/schemas/swaggerschema'
      title: "200"
      type: object
      x-has-customfields: false
    swagger400:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Bad Request - Often due to a missing request parameter
      title: "400"
      type: object
      x-has-customfields: false
    swagger401:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: "Unauthorized - An invalid element token, user secret and/or\
            \ org secret provided"
      title: "401"
      type: object
      x-has-customfields: false
    swagger403:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Forbidden - Access to the resource by the provider is forbidden
      title: "403"
      type: object
      x-has-customfields: false
    swagger404:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Not found - The requested resource is not found
      title: "404"
      type: object
      x-has-customfields: false
    swagger405:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: "Method not allowed - Incorrect HTTP verb used, e.g., GET\
            \ used when POST expected"
      title: "405"
      type: object
      x-has-customfields: false
    swagger406:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Not acceptable - The response content type does not match
            the 'Accept' header value
      title: "406"
      type: object
      x-has-customfields: false
    swagger409:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Conflict - If a resource being created already exists
      title: "409"
      type: object
      x-has-customfields: false
    swagger415:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Unsupported media type - The server cannot handle the requested
            Content-Type
      title: "415"
      type: object
      x-has-customfields: false
    swagger500:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Server error - Something went wrong on the Cloud Elements
            server
      title: "500"
      type: object
      x-has-customfields: false
    swagger502:
      example:
        description: description
      properties:
        description:
          title: description
          type: string
          x-samplevalue: Provider server error - Something went wrong on the Provider
            or Endpoint's server
      title: "502"
      type: object
      x-has-customfields: false
    swaggerDocs:
      example:
        basePath: basePath
        paths:
          /contacts:
            post:
              summary: summary
              operationId: operationId
              responses:
                "200":
                  schema:
                    $ref: $ref
                  description: description
                "400":
                  description: description
                "401":
                  description: description
                "500":
                  description: description
                "403":
                  description: description
                "502":
                  description: description
                "404":
                  description: description
                "415":
                  description: description
                "405":
                  description: description
                "406":
                  description: description
                "409":
                  description: description
              parameters:
              - schema:
                  $ref: $ref
                in: in
                name: name
                description: description
                type: type
                required: true
              - schema:
                  $ref: $ref
                in: in
                name: name
                description: description
                type: type
                required: true
              tags:
              - tags
              - tags
        host: host
        schemes:
        - schemes
        - schemes
        definitions:
          definition-name:
            properties:
              definition-property:
                type: type
        swagger: swagger
        info:
          contact:
            email: email
          title: title
          version: version
        tags:
        - name: name
        - name: name
      properties:
        basePath:
          title: basePath
          type: string
          x-samplevalue: /elements/api-v2/hubs/crm
        definitions:
          $ref: '#/components/schemas/swaggerdefinitions'
        host:
          title: host
          type: string
          x-samplevalue: localhost:5050
        info:
          $ref: '#/components/schemas/swaggerinfo'
        paths:
          $ref: '#/components/schemas/swaggerpaths'
        schemes:
          items:
            type: string
          title: schemes
          type: array
          x-samplevalue:
          - http
        swagger:
          title: swagger
          type: string
          x-samplevalue: "2.0"
        tags:
          items:
            $ref: '#/components/schemas/swaggertags'
          title: tags
          type: array
      title: swaggerDocs
      type: object
      x-has-customfields: false
    swaggercontact:
      example:
        email: email
      properties:
        email:
          title: email
          type: string
          x-samplevalue: support@cloud-elements.com
      title: contact
      type: object
      x-has-customfields: false
    swaggerdefinition-name:
      example:
        properties:
          definition-property:
            type: type
      properties:
        properties:
          $ref: '#/components/schemas/swaggerproperties'
      title: definition-name
      type: object
      x-has-customfields: false
    swaggerdefinition-property:
      example:
        type: type
      properties:
        type:
          title: type
          type: string
          x-samplevalue: string
      title: '#/definitions/definition-property'
      type: object
      x-has-customfields: false
    swaggerdefinitions:
      example:
        definition-name:
          properties:
            definition-property:
              type: type
      properties:
        definition-name:
          $ref: '#/components/schemas/swaggerdefinition-name'
      title: definitions
      type: object
      x-has-customfields: false
    swaggerinfo:
      example:
        contact:
          email: email
        title: title
        version: version
      properties:
        contact:
          $ref: '#/components/schemas/swaggercontact'
        title:
          title: title
          type: string
          x-samplevalue: hubspotcrm
        version:
          title: version
          type: string
          x-samplevalue: api-v2
      title: info
      type: object
      x-has-customfields: false
    swaggerparameters:
      example:
        schema:
          $ref: $ref
        in: in
        name: name
        description: description
        type: type
        required: true
      properties:
        description:
          title: description
          type: string
          x-samplevalue: "The authorization tokens. The format for the header value\
            \ is 'Element &lt;token&gt;, User &lt;user secret&gt;'"
        in:
          title: in
          type: string
          x-samplevalue: header
        name:
          title: name
          type: string
          x-samplevalue: Authorization
        required:
          title: required
          type: boolean
          x-samplevalue: true
        schema:
          $ref: '#/components/schemas/swaggerparametersschema'
        type:
          title: type
          type: string
          x-samplevalue: string
      title: parameters
      type: object
      x-has-customfields: false
    swaggerparametersschema:
      example:
        $ref: $ref
      properties:
        $ref:
          title: $ref
          type: string
          x-samplevalue: '#/definitions/Contact'
      title: schema
      type: object
      x-has-customfields: false
    swaggerpaths:
      example:
        /contacts:
          post:
            summary: summary
            operationId: operationId
            responses:
              "200":
                schema:
                  $ref: $ref
                description: description
              "400":
                description: description
              "401":
                description: description
              "500":
                description: description
              "403":
                description: description
              "502":
                description: description
              "404":
                description: description
              "415":
                description: description
              "405":
                description: description
              "406":
                description: description
              "409":
                description: description
            parameters:
            - schema:
                $ref: $ref
              in: in
              name: name
              description: description
              type: type
              required: true
            - schema:
                $ref: $ref
              in: in
              name: name
              description: description
              type: type
              required: true
            tags:
            - tags
            - tags
      properties:
        /contacts:
          $ref: '#/components/schemas/swagger-contacts-path'
      title: paths
      type: object
      x-has-customfields: false
    swaggerpost:
      example:
        summary: summary
        operationId: operationId
        responses:
          "200":
            schema:
              $ref: $ref
            description: description
          "400":
            description: description
          "401":
            description: description
          "500":
            description: description
          "403":
            description: description
          "502":
            description: description
          "404":
            description: description
          "415":
            description: description
          "405":
            description: description
          "406":
            description: description
          "409":
            description: description
        parameters:
        - schema:
            $ref: $ref
          in: in
          name: name
          description: description
          type: type
          required: true
        - schema:
            $ref: $ref
          in: in
          name: name
          description: description
          type: type
          required: true
        tags:
        - tags
        - tags
      properties:
        operationId:
          title: operationId
          type: string
          x-samplevalue: createContact
        parameters:
          items:
            $ref: '#/components/schemas/swaggerparameters'
          title: parameters
          type: array
        responses:
          $ref: '#/components/schemas/swaggerresponses'
        summary:
          title: summary
          type: string
          x-samplevalue: "Create a new contact in the CRM service. Contact creation\
            \ will flow through Cloud Elements to your CRM service. With the exception\
            \ of the 'id' field, the required fields indicated in the 'Contact' model\
            \ are those required to create a new contact."
        tags:
          items:
            type: string
          title: tags
          type: array
          x-samplevalue:
          - contacts
      title: post
      type: object
      x-has-customfields: false
    swaggerproperties:
      example:
        definition-property:
          type: type
      properties:
        definition-property:
          $ref: '#/components/schemas/swaggerdefinition-property'
      title: properties
      type: object
      x-has-customfields: false
    swaggerresponses:
      example:
        "200":
          schema:
            $ref: $ref
          description: description
        "400":
          description: description
        "401":
          description: description
        "500":
          description: description
        "403":
          description: description
        "502":
          description: description
        "404":
          description: description
        "415":
          description: description
        "405":
          description: description
        "406":
          description: description
        "409":
          description: description
      properties:
        "200":
          $ref: '#/components/schemas/swagger200'
        "400":
          $ref: '#/components/schemas/swagger400'
        "401":
          $ref: '#/components/schemas/swagger401'
        "403":
          $ref: '#/components/schemas/swagger403'
        "404":
          $ref: '#/components/schemas/swagger404'
        "405":
          $ref: '#/components/schemas/swagger405'
        "406":
          $ref: '#/components/schemas/swagger406'
        "409":
          $ref: '#/components/schemas/swagger409'
        "415":
          $ref: '#/components/schemas/swagger415'
        "500":
          $ref: '#/components/schemas/swagger500'
        "502":
          $ref: '#/components/schemas/swagger502'
      title: responses
      type: object
      x-has-customfields: false
    swaggerschema:
      example:
        $ref: $ref
      properties:
        $ref:
          title: $ref
          type: string
          x-samplevalue: '#/definitions/Contact-POST-Response'
      title: schema
      type: object
      x-has-customfields: false
    swaggertags:
      example:
        name: name
      properties:
        name:
          title: name
          type: string
          x-samplevalue: contacts
      title: tags
      type: object
      x-has-customfields: false
    createBulkQuery_request:
      properties:
        metaData:
          description: "Optional JSON MetaData that contains callback-payload and\
            \ fileName, ex: {\"callback-payload\" : <Json> , \"fileName\" : \"{Date\
            \ format}_Name of the file\"}. If the fileName is MyFile then pass metadata\
            \ as {\"fileName\" : \"{yyyy-MM-dd HH:mm:ss}_MyFile\"}. The valid date\
            \ formats are \"yyyy-MM-dd'T'HH:mm:ssXXX\", \"yyyy-MM-dd'T'HH:mm:ss'Z'\"\
            , \"yyyy-MM-dd'T'HH:mm:ss.SXXX\", \"yyyy-MM-dd'T'HH:mm:ss.SSSXXX\", \"\
            yyyy-MM-dd'T'HH:mm:ss.SSSZ\", \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd\
            \ HH:mm:ss\", \"yyyy.MM.dd G 'at' HH:mm:ss z\", \"h:mm a\", \"yyyyy.MMMMM.dd\
            \ GGG hh:mm aaa\" and \"yyMMddHHmmssZ\". callback-payload - is passed\
            \ back in bulk job notification "
          type: string
      type: object
    createBulkByObjectName_request:
      properties:
        metaData:
          description: "Optional JSON MetaData that contains callback-payload, path\
            \ or format, ex: {\"path\" :&lt;path for the sub resource&gt;, \"format\"\
            : &lt;json/csv&gt;, \"callback-payload\":&lt;json&gt;}. path - is passed\
            \ to the endpoint for bulk loading the data into a nested object. Optional\
            \ JSON Metadata that contains identifierFieldName, action, listId or campaignId.\
            \ The identifierField name is used for upserts and the optional fields\
            \ like listId or campaignId. Example: {\"listId\":\"1014\",\"action\"\
            :\"upsert\"}. If the Upload format is JSON pass metadata as {\"format\"\
            :\"json\"}. callback-payload - is passed back in bulk job notification "
          type: string
        file:
          description: "The file of objects to bulk load. If the JSON file upload,\
            \ each JSON record should be in a single line"
          format: binary
          type: string
      type: object
x-original-swagger-version: "2.0"
