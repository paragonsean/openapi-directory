# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dominating_color import DominatingColor
from openapi_server import util


class BorderInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dominating_color: DominatingColor=None, homogeneity: bool=None):
        """BorderInfo - a model defined in OpenAPI

        :param dominating_color: The dominating_color of this BorderInfo.
        :param homogeneity: The homogeneity of this BorderInfo.
        """
        self.openapi_types = {
            'dominating_color': DominatingColor,
            'homogeneity': bool
        }

        self.attribute_map = {
            'dominating_color': 'dominatingColor',
            'homogeneity': 'homogeneity'
        }

        self._dominating_color = dominating_color
        self._homogeneity = homogeneity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BorderInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BorderInfo of this BorderInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dominating_color(self):
        """Gets the dominating_color of this BorderInfo.


        :return: The dominating_color of this BorderInfo.
        :rtype: DominatingColor
        """
        return self._dominating_color

    @dominating_color.setter
    def dominating_color(self, dominating_color):
        """Sets the dominating_color of this BorderInfo.


        :param dominating_color: The dominating_color of this BorderInfo.
        :type dominating_color: DominatingColor
        """

        self._dominating_color = dominating_color

    @property
    def homogeneity(self):
        """Gets the homogeneity of this BorderInfo.


        :return: The homogeneity of this BorderInfo.
        :rtype: bool
        """
        return self._homogeneity

    @homogeneity.setter
    def homogeneity(self, homogeneity):
        """Sets the homogeneity of this BorderInfo.


        :param homogeneity: The homogeneity of this BorderInfo.
        :type homogeneity: bool
        """

        self._homogeneity = homogeneity
