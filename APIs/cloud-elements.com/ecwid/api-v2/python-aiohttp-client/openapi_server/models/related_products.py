# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.related_category import RelatedCategory
from openapi_server import util


class RelatedProducts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_ids: List[float]=None, related_category: RelatedCategory=None):
        """RelatedProducts - a model defined in OpenAPI

        :param product_ids: The product_ids of this RelatedProducts.
        :param related_category: The related_category of this RelatedProducts.
        """
        self.openapi_types = {
            'product_ids': List[float],
            'related_category': RelatedCategory
        }

        self.attribute_map = {
            'product_ids': 'productIds',
            'related_category': 'relatedCategory'
        }

        self._product_ids = product_ids
        self._related_category = related_category

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RelatedProducts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RelatedProducts of this RelatedProducts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_ids(self):
        """Gets the product_ids of this RelatedProducts.


        :return: The product_ids of this RelatedProducts.
        :rtype: List[float]
        """
        return self._product_ids

    @product_ids.setter
    def product_ids(self, product_ids):
        """Sets the product_ids of this RelatedProducts.


        :param product_ids: The product_ids of this RelatedProducts.
        :type product_ids: List[float]
        """

        self._product_ids = product_ids

    @property
    def related_category(self):
        """Gets the related_category of this RelatedProducts.


        :return: The related_category of this RelatedProducts.
        :rtype: RelatedCategory
        """
        return self._related_category

    @related_category.setter
    def related_category(self, related_category):
        """Sets the related_category of this RelatedProducts.


        :param related_category: The related_category of this RelatedProducts.
        :type related_category: RelatedCategory
        """

        self._related_category = related_category
