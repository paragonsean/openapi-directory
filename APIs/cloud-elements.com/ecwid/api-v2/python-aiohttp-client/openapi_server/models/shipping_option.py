# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ShippingOption(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, estimated_transit_time: str=None, is_pickup: bool=None, shipping_carrier_name: str=None, shipping_method_name: str=None, shipping_rate: float=None):
        """ShippingOption - a model defined in OpenAPI

        :param estimated_transit_time: The estimated_transit_time of this ShippingOption.
        :param is_pickup: The is_pickup of this ShippingOption.
        :param shipping_carrier_name: The shipping_carrier_name of this ShippingOption.
        :param shipping_method_name: The shipping_method_name of this ShippingOption.
        :param shipping_rate: The shipping_rate of this ShippingOption.
        """
        self.openapi_types = {
            'estimated_transit_time': str,
            'is_pickup': bool,
            'shipping_carrier_name': str,
            'shipping_method_name': str,
            'shipping_rate': float
        }

        self.attribute_map = {
            'estimated_transit_time': 'estimatedTransitTime',
            'is_pickup': 'isPickup',
            'shipping_carrier_name': 'shippingCarrierName',
            'shipping_method_name': 'shippingMethodName',
            'shipping_rate': 'shippingRate'
        }

        self._estimated_transit_time = estimated_transit_time
        self._is_pickup = is_pickup
        self._shipping_carrier_name = shipping_carrier_name
        self._shipping_method_name = shipping_method_name
        self._shipping_rate = shipping_rate

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShippingOption':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ShippingOption of this ShippingOption.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def estimated_transit_time(self):
        """Gets the estimated_transit_time of this ShippingOption.


        :return: The estimated_transit_time of this ShippingOption.
        :rtype: str
        """
        return self._estimated_transit_time

    @estimated_transit_time.setter
    def estimated_transit_time(self, estimated_transit_time):
        """Sets the estimated_transit_time of this ShippingOption.


        :param estimated_transit_time: The estimated_transit_time of this ShippingOption.
        :type estimated_transit_time: str
        """

        self._estimated_transit_time = estimated_transit_time

    @property
    def is_pickup(self):
        """Gets the is_pickup of this ShippingOption.


        :return: The is_pickup of this ShippingOption.
        :rtype: bool
        """
        return self._is_pickup

    @is_pickup.setter
    def is_pickup(self, is_pickup):
        """Sets the is_pickup of this ShippingOption.


        :param is_pickup: The is_pickup of this ShippingOption.
        :type is_pickup: bool
        """

        self._is_pickup = is_pickup

    @property
    def shipping_carrier_name(self):
        """Gets the shipping_carrier_name of this ShippingOption.


        :return: The shipping_carrier_name of this ShippingOption.
        :rtype: str
        """
        return self._shipping_carrier_name

    @shipping_carrier_name.setter
    def shipping_carrier_name(self, shipping_carrier_name):
        """Sets the shipping_carrier_name of this ShippingOption.


        :param shipping_carrier_name: The shipping_carrier_name of this ShippingOption.
        :type shipping_carrier_name: str
        """

        self._shipping_carrier_name = shipping_carrier_name

    @property
    def shipping_method_name(self):
        """Gets the shipping_method_name of this ShippingOption.


        :return: The shipping_method_name of this ShippingOption.
        :rtype: str
        """
        return self._shipping_method_name

    @shipping_method_name.setter
    def shipping_method_name(self, shipping_method_name):
        """Sets the shipping_method_name of this ShippingOption.


        :param shipping_method_name: The shipping_method_name of this ShippingOption.
        :type shipping_method_name: str
        """

        self._shipping_method_name = shipping_method_name

    @property
    def shipping_rate(self):
        """Gets the shipping_rate of this ShippingOption.


        :return: The shipping_rate of this ShippingOption.
        :rtype: float
        """
        return self._shipping_rate

    @shipping_rate.setter
    def shipping_rate(self, shipping_rate):
        """Sets the shipping_rate of this ShippingOption.


        :param shipping_rate: The shipping_rate of this ShippingOption.
        :type shipping_rate: float
        """

        self._shipping_rate = shipping_rate
