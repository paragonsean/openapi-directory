# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Payment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payment_method: str=None, payment_status: str=None):
        """Payment - a model defined in OpenAPI

        :param payment_method: The payment_method of this Payment.
        :param payment_status: The payment_status of this Payment.
        """
        self.openapi_types = {
            'payment_method': str,
            'payment_status': str
        }

        self.attribute_map = {
            'payment_method': 'paymentMethod',
            'payment_status': 'paymentStatus'
        }

        self._payment_method = payment_method
        self._payment_status = payment_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Payment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Payment of this Payment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payment_method(self):
        """Gets the payment_method of this Payment.


        :return: The payment_method of this Payment.
        :rtype: str
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this Payment.


        :param payment_method: The payment_method of this Payment.
        :type payment_method: str
        """

        self._payment_method = payment_method

    @property
    def payment_status(self):
        """Gets the payment_status of this Payment.

        AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED, INCOMPLETE

        :return: The payment_status of this Payment.
        :rtype: str
        """
        return self._payment_status

    @payment_status.setter
    def payment_status(self, payment_status):
        """Sets the payment_status of this Payment.

        AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED, INCOMPLETE

        :param payment_status: The payment_status of this Payment.
        :type payment_status: str
        """

        self._payment_status = payment_status
