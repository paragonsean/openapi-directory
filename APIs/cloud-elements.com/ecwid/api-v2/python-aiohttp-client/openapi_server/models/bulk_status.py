# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BulkStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, batch_id: float=None, message: str=None, num_of_leads_processed: float=None, num_of_rows_failed: float=None, num_of_rows_with_warning: float=None, status: str=None):
        """BulkStatus - a model defined in OpenAPI

        :param batch_id: The batch_id of this BulkStatus.
        :param message: The message of this BulkStatus.
        :param num_of_leads_processed: The num_of_leads_processed of this BulkStatus.
        :param num_of_rows_failed: The num_of_rows_failed of this BulkStatus.
        :param num_of_rows_with_warning: The num_of_rows_with_warning of this BulkStatus.
        :param status: The status of this BulkStatus.
        """
        self.openapi_types = {
            'batch_id': float,
            'message': str,
            'num_of_leads_processed': float,
            'num_of_rows_failed': float,
            'num_of_rows_with_warning': float,
            'status': str
        }

        self.attribute_map = {
            'batch_id': 'batchId',
            'message': 'message',
            'num_of_leads_processed': 'numOfLeadsProcessed',
            'num_of_rows_failed': 'numOfRowsFailed',
            'num_of_rows_with_warning': 'numOfRowsWithWarning',
            'status': 'status'
        }

        self._batch_id = batch_id
        self._message = message
        self._num_of_leads_processed = num_of_leads_processed
        self._num_of_rows_failed = num_of_rows_failed
        self._num_of_rows_with_warning = num_of_rows_with_warning
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BulkStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BulkStatus of this BulkStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def batch_id(self):
        """Gets the batch_id of this BulkStatus.

        Contact/Leads loaded

        :return: The batch_id of this BulkStatus.
        :rtype: float
        """
        return self._batch_id

    @batch_id.setter
    def batch_id(self, batch_id):
        """Sets the batch_id of this BulkStatus.

        Contact/Leads loaded

        :param batch_id: The batch_id of this BulkStatus.
        :type batch_id: float
        """

        self._batch_id = batch_id

    @property
    def message(self):
        """Gets the message of this BulkStatus.


        :return: The message of this BulkStatus.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this BulkStatus.


        :param message: The message of this BulkStatus.
        :type message: str
        """

        self._message = message

    @property
    def num_of_leads_processed(self):
        """Gets the num_of_leads_processed of this BulkStatus.

        Contact/Leads loaded

        :return: The num_of_leads_processed of this BulkStatus.
        :rtype: float
        """
        return self._num_of_leads_processed

    @num_of_leads_processed.setter
    def num_of_leads_processed(self, num_of_leads_processed):
        """Sets the num_of_leads_processed of this BulkStatus.

        Contact/Leads loaded

        :param num_of_leads_processed: The num_of_leads_processed of this BulkStatus.
        :type num_of_leads_processed: float
        """

        self._num_of_leads_processed = num_of_leads_processed

    @property
    def num_of_rows_failed(self):
        """Gets the num_of_rows_failed of this BulkStatus.

        Failed count

        :return: The num_of_rows_failed of this BulkStatus.
        :rtype: float
        """
        return self._num_of_rows_failed

    @num_of_rows_failed.setter
    def num_of_rows_failed(self, num_of_rows_failed):
        """Sets the num_of_rows_failed of this BulkStatus.

        Failed count

        :param num_of_rows_failed: The num_of_rows_failed of this BulkStatus.
        :type num_of_rows_failed: float
        """

        self._num_of_rows_failed = num_of_rows_failed

    @property
    def num_of_rows_with_warning(self):
        """Gets the num_of_rows_with_warning of this BulkStatus.

        Contact/Leads that had warnings

        :return: The num_of_rows_with_warning of this BulkStatus.
        :rtype: float
        """
        return self._num_of_rows_with_warning

    @num_of_rows_with_warning.setter
    def num_of_rows_with_warning(self, num_of_rows_with_warning):
        """Sets the num_of_rows_with_warning of this BulkStatus.

        Contact/Leads that had warnings

        :param num_of_rows_with_warning: The num_of_rows_with_warning of this BulkStatus.
        :type num_of_rows_with_warning: float
        """

        self._num_of_rows_with_warning = num_of_rows_with_warning

    @property
    def status(self):
        """Gets the status of this BulkStatus.

        Status of the bulk job

        :return: The status of this BulkStatus.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BulkStatus.

        Status of the bulk job

        :param status: The status of this BulkStatus.
        :type status: str
        """

        self._status = status
