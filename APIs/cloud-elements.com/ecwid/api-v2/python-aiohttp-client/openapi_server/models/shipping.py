# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Shipping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disabled_methods: List[str]=None, enabled_methods: List[str]=None, flat_rate: float=None, method_markup: float=None, type: str=None):
        """Shipping - a model defined in OpenAPI

        :param disabled_methods: The disabled_methods of this Shipping.
        :param enabled_methods: The enabled_methods of this Shipping.
        :param flat_rate: The flat_rate of this Shipping.
        :param method_markup: The method_markup of this Shipping.
        :param type: The type of this Shipping.
        """
        self.openapi_types = {
            'disabled_methods': List[str],
            'enabled_methods': List[str],
            'flat_rate': float,
            'method_markup': float,
            'type': str
        }

        self.attribute_map = {
            'disabled_methods': 'disabledMethods',
            'enabled_methods': 'enabledMethods',
            'flat_rate': 'flatRate',
            'method_markup': 'methodMarkup',
            'type': 'type'
        }

        self._disabled_methods = disabled_methods
        self._enabled_methods = enabled_methods
        self._flat_rate = flat_rate
        self._method_markup = method_markup
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Shipping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Shipping of this Shipping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disabled_methods(self):
        """Gets the disabled_methods of this Shipping.


        :return: The disabled_methods of this Shipping.
        :rtype: List[str]
        """
        return self._disabled_methods

    @disabled_methods.setter
    def disabled_methods(self, disabled_methods):
        """Sets the disabled_methods of this Shipping.


        :param disabled_methods: The disabled_methods of this Shipping.
        :type disabled_methods: List[str]
        """

        self._disabled_methods = disabled_methods

    @property
    def enabled_methods(self):
        """Gets the enabled_methods of this Shipping.


        :return: The enabled_methods of this Shipping.
        :rtype: List[str]
        """
        return self._enabled_methods

    @enabled_methods.setter
    def enabled_methods(self, enabled_methods):
        """Sets the enabled_methods of this Shipping.


        :param enabled_methods: The enabled_methods of this Shipping.
        :type enabled_methods: List[str]
        """

        self._enabled_methods = enabled_methods

    @property
    def flat_rate(self):
        """Gets the flat_rate of this Shipping.


        :return: The flat_rate of this Shipping.
        :rtype: float
        """
        return self._flat_rate

    @flat_rate.setter
    def flat_rate(self, flat_rate):
        """Sets the flat_rate of this Shipping.


        :param flat_rate: The flat_rate of this Shipping.
        :type flat_rate: float
        """

        self._flat_rate = flat_rate

    @property
    def method_markup(self):
        """Gets the method_markup of this Shipping.


        :return: The method_markup of this Shipping.
        :rtype: float
        """
        return self._method_markup

    @method_markup.setter
    def method_markup(self, method_markup):
        """Sets the method_markup of this Shipping.


        :param method_markup: The method_markup of this Shipping.
        :type method_markup: float
        """

        self._method_markup = method_markup

    @property
    def type(self):
        """Gets the type of this Shipping.


        :return: The type of this Shipping.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Shipping.


        :param type: The type of this Shipping.
        :type type: str
        """

        self._type = type
