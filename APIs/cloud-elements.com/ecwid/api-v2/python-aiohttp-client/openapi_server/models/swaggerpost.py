# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.swaggerparameters import Swaggerparameters
from openapi_server.models.swaggerresponses import Swaggerresponses
from openapi_server import util


class Swaggerpost(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, operation_id: str=None, parameters: List[Swaggerparameters]=None, responses: Swaggerresponses=None, summary: str=None, tags: List[str]=None):
        """Swaggerpost - a model defined in OpenAPI

        :param operation_id: The operation_id of this Swaggerpost.
        :param parameters: The parameters of this Swaggerpost.
        :param responses: The responses of this Swaggerpost.
        :param summary: The summary of this Swaggerpost.
        :param tags: The tags of this Swaggerpost.
        """
        self.openapi_types = {
            'operation_id': str,
            'parameters': List[Swaggerparameters],
            'responses': Swaggerresponses,
            'summary': str,
            'tags': List[str]
        }

        self.attribute_map = {
            'operation_id': 'operationId',
            'parameters': 'parameters',
            'responses': 'responses',
            'summary': 'summary',
            'tags': 'tags'
        }

        self._operation_id = operation_id
        self._parameters = parameters
        self._responses = responses
        self._summary = summary
        self._tags = tags

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Swaggerpost':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The swaggerpost of this Swaggerpost.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def operation_id(self):
        """Gets the operation_id of this Swaggerpost.


        :return: The operation_id of this Swaggerpost.
        :rtype: str
        """
        return self._operation_id

    @operation_id.setter
    def operation_id(self, operation_id):
        """Sets the operation_id of this Swaggerpost.


        :param operation_id: The operation_id of this Swaggerpost.
        :type operation_id: str
        """

        self._operation_id = operation_id

    @property
    def parameters(self):
        """Gets the parameters of this Swaggerpost.


        :return: The parameters of this Swaggerpost.
        :rtype: List[Swaggerparameters]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this Swaggerpost.


        :param parameters: The parameters of this Swaggerpost.
        :type parameters: List[Swaggerparameters]
        """

        self._parameters = parameters

    @property
    def responses(self):
        """Gets the responses of this Swaggerpost.


        :return: The responses of this Swaggerpost.
        :rtype: Swaggerresponses
        """
        return self._responses

    @responses.setter
    def responses(self, responses):
        """Sets the responses of this Swaggerpost.


        :param responses: The responses of this Swaggerpost.
        :type responses: Swaggerresponses
        """

        self._responses = responses

    @property
    def summary(self):
        """Gets the summary of this Swaggerpost.


        :return: The summary of this Swaggerpost.
        :rtype: str
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this Swaggerpost.


        :param summary: The summary of this Swaggerpost.
        :type summary: str
        """

        self._summary = summary

    @property
    def tags(self):
        """Gets the tags of this Swaggerpost.


        :return: The tags of this Swaggerpost.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this Swaggerpost.


        :param tags: The tags of this Swaggerpost.
        :type tags: List[str]
        """

        self._tags = tags
