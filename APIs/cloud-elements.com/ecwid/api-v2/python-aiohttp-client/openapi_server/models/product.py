# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.attribute import Attribute
from openapi_server.models.border_info import BorderInfo
from openapi_server.models.category import Category
from openapi_server.models.combination import Combination
from openapi_server.models.favorite import Favorite
from openapi_server.models.file import File
from openapi_server.models.gallery_image import GalleryImage
from openapi_server.models.media import Media
from openapi_server.models.option import Option
from openapi_server.models.product_dimensions import ProductDimensions
from openapi_server.models.product_tax import ProductTax
from openapi_server.models.related_products import RelatedProducts
from openapi_server.models.shipping import Shipping
from openapi_server.models.tax import Tax
from openapi_server.models.wholesale_prices import WholesalePrices
from openapi_server import util


class Product(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: List[Attribute]=None, border_info: BorderInfo=None, categories: List[Category]=None, category_ids: List[int]=None, combinations: List[Combination]=None, compare_at_price: float=None, compare_to_price: float=None, compare_to_price_discount: float=None, compare_to_price_discount_formatted: str=None, compare_to_price_discount_percent: float=None, compare_to_price_discount_percent_formatted: str=None, compare_to_price_formatted: str=None, create_timestamp: int=None, created: str=None, default_category_id: int=None, default_combination_id: float=None, default_displayed_price: float=None, default_displayed_price_formatted: str=None, description: str=None, description_truncated: bool=None, dimensions: ProductDimensions=None, enabled: bool=None, favorites: Favorite=None, files: List[File]=None, fixed_shipping_rate: float=None, fixed_shipping_rate_only: bool=None, gallery_images: List[GalleryImage]=None, google_item_condition: str=None, hd_thumbnail_url: str=None, id: int=None, image_url: str=None, in_stock: bool=None, is_sample_product: bool=None, is_shipping_required: bool=None, media: Media=None, name: str=None, options: List[Option]=None, original_image: GalleryImage=None, original_image_url: str=None, price: float=None, price_in_product_list: float=None, product_class_id: int=None, quantity: int=None, quantity_delta: int=None, related_products: RelatedProducts=None, seo_description: str=None, seo_title: str=None, shipping: Shipping=None, show_on_frontpage: float=None, sku: str=None, small_thumbnail_url: str=None, tangible: str=None, tax: ProductTax=None, taxes: List[Tax]=None, thumbnail_url: str=None, track_quantity: str=None, unlimited: bool=None, update_timestamp: int=None, updated: str=None, url: str=None, warning_limit: int=None, weight: float=None, wholesale_prices: WholesalePrices=None):
        """Product - a model defined in OpenAPI

        :param attributes: The attributes of this Product.
        :param border_info: The border_info of this Product.
        :param categories: The categories of this Product.
        :param category_ids: The category_ids of this Product.
        :param combinations: The combinations of this Product.
        :param compare_at_price: The compare_at_price of this Product.
        :param compare_to_price: The compare_to_price of this Product.
        :param compare_to_price_discount: The compare_to_price_discount of this Product.
        :param compare_to_price_discount_formatted: The compare_to_price_discount_formatted of this Product.
        :param compare_to_price_discount_percent: The compare_to_price_discount_percent of this Product.
        :param compare_to_price_discount_percent_formatted: The compare_to_price_discount_percent_formatted of this Product.
        :param compare_to_price_formatted: The compare_to_price_formatted of this Product.
        :param create_timestamp: The create_timestamp of this Product.
        :param created: The created of this Product.
        :param default_category_id: The default_category_id of this Product.
        :param default_combination_id: The default_combination_id of this Product.
        :param default_displayed_price: The default_displayed_price of this Product.
        :param default_displayed_price_formatted: The default_displayed_price_formatted of this Product.
        :param description: The description of this Product.
        :param description_truncated: The description_truncated of this Product.
        :param dimensions: The dimensions of this Product.
        :param enabled: The enabled of this Product.
        :param favorites: The favorites of this Product.
        :param files: The files of this Product.
        :param fixed_shipping_rate: The fixed_shipping_rate of this Product.
        :param fixed_shipping_rate_only: The fixed_shipping_rate_only of this Product.
        :param gallery_images: The gallery_images of this Product.
        :param google_item_condition: The google_item_condition of this Product.
        :param hd_thumbnail_url: The hd_thumbnail_url of this Product.
        :param id: The id of this Product.
        :param image_url: The image_url of this Product.
        :param in_stock: The in_stock of this Product.
        :param is_sample_product: The is_sample_product of this Product.
        :param is_shipping_required: The is_shipping_required of this Product.
        :param media: The media of this Product.
        :param name: The name of this Product.
        :param options: The options of this Product.
        :param original_image: The original_image of this Product.
        :param original_image_url: The original_image_url of this Product.
        :param price: The price of this Product.
        :param price_in_product_list: The price_in_product_list of this Product.
        :param product_class_id: The product_class_id of this Product.
        :param quantity: The quantity of this Product.
        :param quantity_delta: The quantity_delta of this Product.
        :param related_products: The related_products of this Product.
        :param seo_description: The seo_description of this Product.
        :param seo_title: The seo_title of this Product.
        :param shipping: The shipping of this Product.
        :param show_on_frontpage: The show_on_frontpage of this Product.
        :param sku: The sku of this Product.
        :param small_thumbnail_url: The small_thumbnail_url of this Product.
        :param tangible: The tangible of this Product.
        :param tax: The tax of this Product.
        :param taxes: The taxes of this Product.
        :param thumbnail_url: The thumbnail_url of this Product.
        :param track_quantity: The track_quantity of this Product.
        :param unlimited: The unlimited of this Product.
        :param update_timestamp: The update_timestamp of this Product.
        :param updated: The updated of this Product.
        :param url: The url of this Product.
        :param warning_limit: The warning_limit of this Product.
        :param weight: The weight of this Product.
        :param wholesale_prices: The wholesale_prices of this Product.
        """
        self.openapi_types = {
            'attributes': List[Attribute],
            'border_info': BorderInfo,
            'categories': List[Category],
            'category_ids': List[int],
            'combinations': List[Combination],
            'compare_at_price': float,
            'compare_to_price': float,
            'compare_to_price_discount': float,
            'compare_to_price_discount_formatted': str,
            'compare_to_price_discount_percent': float,
            'compare_to_price_discount_percent_formatted': str,
            'compare_to_price_formatted': str,
            'create_timestamp': int,
            'created': str,
            'default_category_id': int,
            'default_combination_id': float,
            'default_displayed_price': float,
            'default_displayed_price_formatted': str,
            'description': str,
            'description_truncated': bool,
            'dimensions': ProductDimensions,
            'enabled': bool,
            'favorites': Favorite,
            'files': List[File],
            'fixed_shipping_rate': float,
            'fixed_shipping_rate_only': bool,
            'gallery_images': List[GalleryImage],
            'google_item_condition': str,
            'hd_thumbnail_url': str,
            'id': int,
            'image_url': str,
            'in_stock': bool,
            'is_sample_product': bool,
            'is_shipping_required': bool,
            'media': Media,
            'name': str,
            'options': List[Option],
            'original_image': GalleryImage,
            'original_image_url': str,
            'price': float,
            'price_in_product_list': float,
            'product_class_id': int,
            'quantity': int,
            'quantity_delta': int,
            'related_products': RelatedProducts,
            'seo_description': str,
            'seo_title': str,
            'shipping': Shipping,
            'show_on_frontpage': float,
            'sku': str,
            'small_thumbnail_url': str,
            'tangible': str,
            'tax': ProductTax,
            'taxes': List[Tax],
            'thumbnail_url': str,
            'track_quantity': str,
            'unlimited': bool,
            'update_timestamp': int,
            'updated': str,
            'url': str,
            'warning_limit': int,
            'weight': float,
            'wholesale_prices': WholesalePrices
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'border_info': 'borderInfo',
            'categories': 'categories',
            'category_ids': 'categoryIds',
            'combinations': 'combinations',
            'compare_at_price': 'compareAtPrice',
            'compare_to_price': 'compareToPrice',
            'compare_to_price_discount': 'compareToPriceDiscount',
            'compare_to_price_discount_formatted': 'compareToPriceDiscountFormatted',
            'compare_to_price_discount_percent': 'compareToPriceDiscountPercent',
            'compare_to_price_discount_percent_formatted': 'compareToPriceDiscountPercentFormatted',
            'compare_to_price_formatted': 'compareToPriceFormatted',
            'create_timestamp': 'createTimestamp',
            'created': 'created',
            'default_category_id': 'defaultCategoryId',
            'default_combination_id': 'defaultCombinationId',
            'default_displayed_price': 'defaultDisplayedPrice',
            'default_displayed_price_formatted': 'defaultDisplayedPriceFormatted',
            'description': 'description',
            'description_truncated': 'descriptionTruncated',
            'dimensions': 'dimensions',
            'enabled': 'enabled',
            'favorites': 'favorites',
            'files': 'files',
            'fixed_shipping_rate': 'fixedShippingRate',
            'fixed_shipping_rate_only': 'fixedShippingRateOnly',
            'gallery_images': 'galleryImages',
            'google_item_condition': 'googleItemCondition',
            'hd_thumbnail_url': 'hdThumbnailUrl',
            'id': 'id',
            'image_url': 'imageUrl',
            'in_stock': 'inStock',
            'is_sample_product': 'isSampleProduct',
            'is_shipping_required': 'isShippingRequired',
            'media': 'media',
            'name': 'name',
            'options': 'options',
            'original_image': 'originalImage',
            'original_image_url': 'originalImageUrl',
            'price': 'price',
            'price_in_product_list': 'priceInProductList',
            'product_class_id': 'productClassId',
            'quantity': 'quantity',
            'quantity_delta': 'quantityDelta',
            'related_products': 'relatedProducts',
            'seo_description': 'seoDescription',
            'seo_title': 'seoTitle',
            'shipping': 'shipping',
            'show_on_frontpage': 'showOnFrontpage',
            'sku': 'sku',
            'small_thumbnail_url': 'smallThumbnailUrl',
            'tangible': 'tangible',
            'tax': 'tax',
            'taxes': 'taxes',
            'thumbnail_url': 'thumbnailUrl',
            'track_quantity': 'trackQuantity',
            'unlimited': 'unlimited',
            'update_timestamp': 'updateTimestamp',
            'updated': 'updated',
            'url': 'url',
            'warning_limit': 'warningLimit',
            'weight': 'weight',
            'wholesale_prices': 'wholesalePrices'
        }

        self._attributes = attributes
        self._border_info = border_info
        self._categories = categories
        self._category_ids = category_ids
        self._combinations = combinations
        self._compare_at_price = compare_at_price
        self._compare_to_price = compare_to_price
        self._compare_to_price_discount = compare_to_price_discount
        self._compare_to_price_discount_formatted = compare_to_price_discount_formatted
        self._compare_to_price_discount_percent = compare_to_price_discount_percent
        self._compare_to_price_discount_percent_formatted = compare_to_price_discount_percent_formatted
        self._compare_to_price_formatted = compare_to_price_formatted
        self._create_timestamp = create_timestamp
        self._created = created
        self._default_category_id = default_category_id
        self._default_combination_id = default_combination_id
        self._default_displayed_price = default_displayed_price
        self._default_displayed_price_formatted = default_displayed_price_formatted
        self._description = description
        self._description_truncated = description_truncated
        self._dimensions = dimensions
        self._enabled = enabled
        self._favorites = favorites
        self._files = files
        self._fixed_shipping_rate = fixed_shipping_rate
        self._fixed_shipping_rate_only = fixed_shipping_rate_only
        self._gallery_images = gallery_images
        self._google_item_condition = google_item_condition
        self._hd_thumbnail_url = hd_thumbnail_url
        self._id = id
        self._image_url = image_url
        self._in_stock = in_stock
        self._is_sample_product = is_sample_product
        self._is_shipping_required = is_shipping_required
        self._media = media
        self._name = name
        self._options = options
        self._original_image = original_image
        self._original_image_url = original_image_url
        self._price = price
        self._price_in_product_list = price_in_product_list
        self._product_class_id = product_class_id
        self._quantity = quantity
        self._quantity_delta = quantity_delta
        self._related_products = related_products
        self._seo_description = seo_description
        self._seo_title = seo_title
        self._shipping = shipping
        self._show_on_frontpage = show_on_frontpage
        self._sku = sku
        self._small_thumbnail_url = small_thumbnail_url
        self._tangible = tangible
        self._tax = tax
        self._taxes = taxes
        self._thumbnail_url = thumbnail_url
        self._track_quantity = track_quantity
        self._unlimited = unlimited
        self._update_timestamp = update_timestamp
        self._updated = updated
        self._url = url
        self._warning_limit = warning_limit
        self._weight = weight
        self._wholesale_prices = wholesale_prices

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Product':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Product of this Product.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this Product.


        :return: The attributes of this Product.
        :rtype: List[Attribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this Product.


        :param attributes: The attributes of this Product.
        :type attributes: List[Attribute]
        """

        self._attributes = attributes

    @property
    def border_info(self):
        """Gets the border_info of this Product.


        :return: The border_info of this Product.
        :rtype: BorderInfo
        """
        return self._border_info

    @border_info.setter
    def border_info(self, border_info):
        """Sets the border_info of this Product.


        :param border_info: The border_info of this Product.
        :type border_info: BorderInfo
        """

        self._border_info = border_info

    @property
    def categories(self):
        """Gets the categories of this Product.


        :return: The categories of this Product.
        :rtype: List[Category]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this Product.


        :param categories: The categories of this Product.
        :type categories: List[Category]
        """

        self._categories = categories

    @property
    def category_ids(self):
        """Gets the category_ids of this Product.


        :return: The category_ids of this Product.
        :rtype: List[int]
        """
        return self._category_ids

    @category_ids.setter
    def category_ids(self, category_ids):
        """Sets the category_ids of this Product.


        :param category_ids: The category_ids of this Product.
        :type category_ids: List[int]
        """

        self._category_ids = category_ids

    @property
    def combinations(self):
        """Gets the combinations of this Product.


        :return: The combinations of this Product.
        :rtype: List[Combination]
        """
        return self._combinations

    @combinations.setter
    def combinations(self, combinations):
        """Sets the combinations of this Product.


        :param combinations: The combinations of this Product.
        :type combinations: List[Combination]
        """

        self._combinations = combinations

    @property
    def compare_at_price(self):
        """Gets the compare_at_price of this Product.

        Product’s sale price displayed strike-out in the customer

        :return: The compare_at_price of this Product.
        :rtype: float
        """
        return self._compare_at_price

    @compare_at_price.setter
    def compare_at_price(self, compare_at_price):
        """Sets the compare_at_price of this Product.

        Product’s sale price displayed strike-out in the customer

        :param compare_at_price: The compare_at_price of this Product.
        :type compare_at_price: float
        """

        self._compare_at_price = compare_at_price

    @property
    def compare_to_price(self):
        """Gets the compare_to_price of this Product.


        :return: The compare_to_price of this Product.
        :rtype: float
        """
        return self._compare_to_price

    @compare_to_price.setter
    def compare_to_price(self, compare_to_price):
        """Sets the compare_to_price of this Product.


        :param compare_to_price: The compare_to_price of this Product.
        :type compare_to_price: float
        """

        self._compare_to_price = compare_to_price

    @property
    def compare_to_price_discount(self):
        """Gets the compare_to_price_discount of this Product.


        :return: The compare_to_price_discount of this Product.
        :rtype: float
        """
        return self._compare_to_price_discount

    @compare_to_price_discount.setter
    def compare_to_price_discount(self, compare_to_price_discount):
        """Sets the compare_to_price_discount of this Product.


        :param compare_to_price_discount: The compare_to_price_discount of this Product.
        :type compare_to_price_discount: float
        """

        self._compare_to_price_discount = compare_to_price_discount

    @property
    def compare_to_price_discount_formatted(self):
        """Gets the compare_to_price_discount_formatted of this Product.


        :return: The compare_to_price_discount_formatted of this Product.
        :rtype: str
        """
        return self._compare_to_price_discount_formatted

    @compare_to_price_discount_formatted.setter
    def compare_to_price_discount_formatted(self, compare_to_price_discount_formatted):
        """Sets the compare_to_price_discount_formatted of this Product.


        :param compare_to_price_discount_formatted: The compare_to_price_discount_formatted of this Product.
        :type compare_to_price_discount_formatted: str
        """

        self._compare_to_price_discount_formatted = compare_to_price_discount_formatted

    @property
    def compare_to_price_discount_percent(self):
        """Gets the compare_to_price_discount_percent of this Product.


        :return: The compare_to_price_discount_percent of this Product.
        :rtype: float
        """
        return self._compare_to_price_discount_percent

    @compare_to_price_discount_percent.setter
    def compare_to_price_discount_percent(self, compare_to_price_discount_percent):
        """Sets the compare_to_price_discount_percent of this Product.


        :param compare_to_price_discount_percent: The compare_to_price_discount_percent of this Product.
        :type compare_to_price_discount_percent: float
        """

        self._compare_to_price_discount_percent = compare_to_price_discount_percent

    @property
    def compare_to_price_discount_percent_formatted(self):
        """Gets the compare_to_price_discount_percent_formatted of this Product.


        :return: The compare_to_price_discount_percent_formatted of this Product.
        :rtype: str
        """
        return self._compare_to_price_discount_percent_formatted

    @compare_to_price_discount_percent_formatted.setter
    def compare_to_price_discount_percent_formatted(self, compare_to_price_discount_percent_formatted):
        """Sets the compare_to_price_discount_percent_formatted of this Product.


        :param compare_to_price_discount_percent_formatted: The compare_to_price_discount_percent_formatted of this Product.
        :type compare_to_price_discount_percent_formatted: str
        """

        self._compare_to_price_discount_percent_formatted = compare_to_price_discount_percent_formatted

    @property
    def compare_to_price_formatted(self):
        """Gets the compare_to_price_formatted of this Product.


        :return: The compare_to_price_formatted of this Product.
        :rtype: str
        """
        return self._compare_to_price_formatted

    @compare_to_price_formatted.setter
    def compare_to_price_formatted(self, compare_to_price_formatted):
        """Sets the compare_to_price_formatted of this Product.


        :param compare_to_price_formatted: The compare_to_price_formatted of this Product.
        :type compare_to_price_formatted: str
        """

        self._compare_to_price_formatted = compare_to_price_formatted

    @property
    def create_timestamp(self):
        """Gets the create_timestamp of this Product.


        :return: The create_timestamp of this Product.
        :rtype: int
        """
        return self._create_timestamp

    @create_timestamp.setter
    def create_timestamp(self, create_timestamp):
        """Sets the create_timestamp of this Product.


        :param create_timestamp: The create_timestamp of this Product.
        :type create_timestamp: int
        """

        self._create_timestamp = create_timestamp

    @property
    def created(self):
        """Gets the created of this Product.

        Ex: 2014-09-24 06:43:06

        :return: The created of this Product.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Product.

        Ex: 2014-09-24 06:43:06

        :param created: The created of this Product.
        :type created: str
        """

        self._created = created

    @property
    def default_category_id(self):
        """Gets the default_category_id of this Product.


        :return: The default_category_id of this Product.
        :rtype: int
        """
        return self._default_category_id

    @default_category_id.setter
    def default_category_id(self, default_category_id):
        """Sets the default_category_id of this Product.


        :param default_category_id: The default_category_id of this Product.
        :type default_category_id: int
        """

        self._default_category_id = default_category_id

    @property
    def default_combination_id(self):
        """Gets the default_combination_id of this Product.


        :return: The default_combination_id of this Product.
        :rtype: float
        """
        return self._default_combination_id

    @default_combination_id.setter
    def default_combination_id(self, default_combination_id):
        """Sets the default_combination_id of this Product.


        :param default_combination_id: The default_combination_id of this Product.
        :type default_combination_id: float
        """

        self._default_combination_id = default_combination_id

    @property
    def default_displayed_price(self):
        """Gets the default_displayed_price of this Product.


        :return: The default_displayed_price of this Product.
        :rtype: float
        """
        return self._default_displayed_price

    @default_displayed_price.setter
    def default_displayed_price(self, default_displayed_price):
        """Sets the default_displayed_price of this Product.


        :param default_displayed_price: The default_displayed_price of this Product.
        :type default_displayed_price: float
        """

        self._default_displayed_price = default_displayed_price

    @property
    def default_displayed_price_formatted(self):
        """Gets the default_displayed_price_formatted of this Product.


        :return: The default_displayed_price_formatted of this Product.
        :rtype: str
        """
        return self._default_displayed_price_formatted

    @default_displayed_price_formatted.setter
    def default_displayed_price_formatted(self, default_displayed_price_formatted):
        """Sets the default_displayed_price_formatted of this Product.


        :param default_displayed_price_formatted: The default_displayed_price_formatted of this Product.
        :type default_displayed_price_formatted: str
        """

        self._default_displayed_price_formatted = default_displayed_price_formatted

    @property
    def description(self):
        """Gets the description of this Product.

        Product description in HTML

        :return: The description of this Product.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Product.

        Product description in HTML

        :param description: The description of this Product.
        :type description: str
        """

        self._description = description

    @property
    def description_truncated(self):
        """Gets the description_truncated of this Product.


        :return: The description_truncated of this Product.
        :rtype: bool
        """
        return self._description_truncated

    @description_truncated.setter
    def description_truncated(self, description_truncated):
        """Sets the description_truncated of this Product.


        :param description_truncated: The description_truncated of this Product.
        :type description_truncated: bool
        """

        self._description_truncated = description_truncated

    @property
    def dimensions(self):
        """Gets the dimensions of this Product.


        :return: The dimensions of this Product.
        :rtype: ProductDimensions
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this Product.


        :param dimensions: The dimensions of this Product.
        :type dimensions: ProductDimensions
        """

        self._dimensions = dimensions

    @property
    def enabled(self):
        """Gets the enabled of this Product.

        true/false

        :return: The enabled of this Product.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this Product.

        true/false

        :param enabled: The enabled of this Product.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def favorites(self):
        """Gets the favorites of this Product.


        :return: The favorites of this Product.
        :rtype: Favorite
        """
        return self._favorites

    @favorites.setter
    def favorites(self, favorites):
        """Sets the favorites of this Product.


        :param favorites: The favorites of this Product.
        :type favorites: Favorite
        """

        self._favorites = favorites

    @property
    def files(self):
        """Gets the files of this Product.


        :return: The files of this Product.
        :rtype: List[File]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this Product.


        :param files: The files of this Product.
        :type files: List[File]
        """

        self._files = files

    @property
    def fixed_shipping_rate(self):
        """Gets the fixed_shipping_rate of this Product.


        :return: The fixed_shipping_rate of this Product.
        :rtype: float
        """
        return self._fixed_shipping_rate

    @fixed_shipping_rate.setter
    def fixed_shipping_rate(self, fixed_shipping_rate):
        """Sets the fixed_shipping_rate of this Product.


        :param fixed_shipping_rate: The fixed_shipping_rate of this Product.
        :type fixed_shipping_rate: float
        """

        self._fixed_shipping_rate = fixed_shipping_rate

    @property
    def fixed_shipping_rate_only(self):
        """Gets the fixed_shipping_rate_only of this Product.

        true/false

        :return: The fixed_shipping_rate_only of this Product.
        :rtype: bool
        """
        return self._fixed_shipping_rate_only

    @fixed_shipping_rate_only.setter
    def fixed_shipping_rate_only(self, fixed_shipping_rate_only):
        """Sets the fixed_shipping_rate_only of this Product.

        true/false

        :param fixed_shipping_rate_only: The fixed_shipping_rate_only of this Product.
        :type fixed_shipping_rate_only: bool
        """

        self._fixed_shipping_rate_only = fixed_shipping_rate_only

    @property
    def gallery_images(self):
        """Gets the gallery_images of this Product.


        :return: The gallery_images of this Product.
        :rtype: List[GalleryImage]
        """
        return self._gallery_images

    @gallery_images.setter
    def gallery_images(self, gallery_images):
        """Sets the gallery_images of this Product.


        :param gallery_images: The gallery_images of this Product.
        :type gallery_images: List[GalleryImage]
        """

        self._gallery_images = gallery_images

    @property
    def google_item_condition(self):
        """Gets the google_item_condition of this Product.

        Google Item Condition Status

        :return: The google_item_condition of this Product.
        :rtype: str
        """
        return self._google_item_condition

    @google_item_condition.setter
    def google_item_condition(self, google_item_condition):
        """Sets the google_item_condition of this Product.

        Google Item Condition Status

        :param google_item_condition: The google_item_condition of this Product.
        :type google_item_condition: str
        """

        self._google_item_condition = google_item_condition

    @property
    def hd_thumbnail_url(self):
        """Gets the hd_thumbnail_url of this Product.


        :return: The hd_thumbnail_url of this Product.
        :rtype: str
        """
        return self._hd_thumbnail_url

    @hd_thumbnail_url.setter
    def hd_thumbnail_url(self, hd_thumbnail_url):
        """Sets the hd_thumbnail_url of this Product.


        :param hd_thumbnail_url: The hd_thumbnail_url of this Product.
        :type hd_thumbnail_url: str
        """

        self._hd_thumbnail_url = hd_thumbnail_url

    @property
    def id(self):
        """Gets the id of this Product.


        :return: The id of this Product.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Product.


        :param id: The id of this Product.
        :type id: int
        """

        self._id = id

    @property
    def image_url(self):
        """Gets the image_url of this Product.


        :return: The image_url of this Product.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this Product.


        :param image_url: The image_url of this Product.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def in_stock(self):
        """Gets the in_stock of this Product.

        true/false

        :return: The in_stock of this Product.
        :rtype: bool
        """
        return self._in_stock

    @in_stock.setter
    def in_stock(self, in_stock):
        """Sets the in_stock of this Product.

        true/false

        :param in_stock: The in_stock of this Product.
        :type in_stock: bool
        """

        self._in_stock = in_stock

    @property
    def is_sample_product(self):
        """Gets the is_sample_product of this Product.


        :return: The is_sample_product of this Product.
        :rtype: bool
        """
        return self._is_sample_product

    @is_sample_product.setter
    def is_sample_product(self, is_sample_product):
        """Sets the is_sample_product of this Product.


        :param is_sample_product: The is_sample_product of this Product.
        :type is_sample_product: bool
        """

        self._is_sample_product = is_sample_product

    @property
    def is_shipping_required(self):
        """Gets the is_shipping_required of this Product.


        :return: The is_shipping_required of this Product.
        :rtype: bool
        """
        return self._is_shipping_required

    @is_shipping_required.setter
    def is_shipping_required(self, is_shipping_required):
        """Sets the is_shipping_required of this Product.


        :param is_shipping_required: The is_shipping_required of this Product.
        :type is_shipping_required: bool
        """

        self._is_shipping_required = is_shipping_required

    @property
    def media(self):
        """Gets the media of this Product.


        :return: The media of this Product.
        :rtype: Media
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this Product.


        :param media: The media of this Product.
        :type media: Media
        """

        self._media = media

    @property
    def name(self):
        """Gets the name of this Product.

        Product title

        :return: The name of this Product.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Product.

        Product title

        :param name: The name of this Product.
        :type name: str
        """

        self._name = name

    @property
    def options(self):
        """Gets the options of this Product.


        :return: The options of this Product.
        :rtype: List[Option]
        """
        return self._options

    @options.setter
    def options(self, options):
        """Sets the options of this Product.


        :param options: The options of this Product.
        :type options: List[Option]
        """

        self._options = options

    @property
    def original_image(self):
        """Gets the original_image of this Product.


        :return: The original_image of this Product.
        :rtype: GalleryImage
        """
        return self._original_image

    @original_image.setter
    def original_image(self, original_image):
        """Sets the original_image of this Product.


        :param original_image: The original_image of this Product.
        :type original_image: GalleryImage
        """

        self._original_image = original_image

    @property
    def original_image_url(self):
        """Gets the original_image_url of this Product.


        :return: The original_image_url of this Product.
        :rtype: str
        """
        return self._original_image_url

    @original_image_url.setter
    def original_image_url(self, original_image_url):
        """Sets the original_image_url of this Product.


        :param original_image_url: The original_image_url of this Product.
        :type original_image_url: str
        """

        self._original_image_url = original_image_url

    @property
    def price(self):
        """Gets the price of this Product.

        Base Product price

        :return: The price of this Product.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this Product.

        Base Product price

        :param price: The price of this Product.
        :type price: float
        """

        self._price = price

    @property
    def price_in_product_list(self):
        """Gets the price_in_product_list of this Product.


        :return: The price_in_product_list of this Product.
        :rtype: float
        """
        return self._price_in_product_list

    @price_in_product_list.setter
    def price_in_product_list(self, price_in_product_list):
        """Sets the price_in_product_list of this Product.


        :param price_in_product_list: The price_in_product_list of this Product.
        :type price_in_product_list: float
        """

        self._price_in_product_list = price_in_product_list

    @property
    def product_class_id(self):
        """Gets the product_class_id of this Product.

        Id of the product type that this product belongs to.

        :return: The product_class_id of this Product.
        :rtype: int
        """
        return self._product_class_id

    @product_class_id.setter
    def product_class_id(self, product_class_id):
        """Sets the product_class_id of this Product.

        Id of the product type that this product belongs to.

        :param product_class_id: The product_class_id of this Product.
        :type product_class_id: int
        """

        self._product_class_id = product_class_id

    @property
    def quantity(self):
        """Gets the quantity of this Product.

        Amount of product items in stock.

        :return: The quantity of this Product.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this Product.

        Amount of product items in stock.

        :param quantity: The quantity of this Product.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def quantity_delta(self):
        """Gets the quantity_delta of this Product.


        :return: The quantity_delta of this Product.
        :rtype: int
        """
        return self._quantity_delta

    @quantity_delta.setter
    def quantity_delta(self, quantity_delta):
        """Sets the quantity_delta of this Product.


        :param quantity_delta: The quantity_delta of this Product.
        :type quantity_delta: int
        """

        self._quantity_delta = quantity_delta

    @property
    def related_products(self):
        """Gets the related_products of this Product.


        :return: The related_products of this Product.
        :rtype: RelatedProducts
        """
        return self._related_products

    @related_products.setter
    def related_products(self, related_products):
        """Sets the related_products of this Product.


        :param related_products: The related_products of this Product.
        :type related_products: RelatedProducts
        """

        self._related_products = related_products

    @property
    def seo_description(self):
        """Gets the seo_description of this Product.


        :return: The seo_description of this Product.
        :rtype: str
        """
        return self._seo_description

    @seo_description.setter
    def seo_description(self, seo_description):
        """Sets the seo_description of this Product.


        :param seo_description: The seo_description of this Product.
        :type seo_description: str
        """

        self._seo_description = seo_description

    @property
    def seo_title(self):
        """Gets the seo_title of this Product.


        :return: The seo_title of this Product.
        :rtype: str
        """
        return self._seo_title

    @seo_title.setter
    def seo_title(self, seo_title):
        """Sets the seo_title of this Product.


        :param seo_title: The seo_title of this Product.
        :type seo_title: str
        """

        self._seo_title = seo_title

    @property
    def shipping(self):
        """Gets the shipping of this Product.


        :return: The shipping of this Product.
        :rtype: Shipping
        """
        return self._shipping

    @shipping.setter
    def shipping(self, shipping):
        """Sets the shipping of this Product.


        :param shipping: The shipping of this Product.
        :type shipping: Shipping
        """

        self._shipping = shipping

    @property
    def show_on_frontpage(self):
        """Gets the show_on_frontpage of this Product.


        :return: The show_on_frontpage of this Product.
        :rtype: float
        """
        return self._show_on_frontpage

    @show_on_frontpage.setter
    def show_on_frontpage(self, show_on_frontpage):
        """Sets the show_on_frontpage of this Product.


        :param show_on_frontpage: The show_on_frontpage of this Product.
        :type show_on_frontpage: float
        """

        self._show_on_frontpage = show_on_frontpage

    @property
    def sku(self):
        """Gets the sku of this Product.

        Product SKU

        :return: The sku of this Product.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this Product.

        Product SKU

        :param sku: The sku of this Product.
        :type sku: str
        """

        self._sku = sku

    @property
    def small_thumbnail_url(self):
        """Gets the small_thumbnail_url of this Product.


        :return: The small_thumbnail_url of this Product.
        :rtype: str
        """
        return self._small_thumbnail_url

    @small_thumbnail_url.setter
    def small_thumbnail_url(self, small_thumbnail_url):
        """Sets the small_thumbnail_url of this Product.


        :param small_thumbnail_url: The small_thumbnail_url of this Product.
        :type small_thumbnail_url: str
        """

        self._small_thumbnail_url = small_thumbnail_url

    @property
    def tangible(self):
        """Gets the tangible of this Product.

        true/false

        :return: The tangible of this Product.
        :rtype: str
        """
        return self._tangible

    @tangible.setter
    def tangible(self, tangible):
        """Sets the tangible of this Product.

        true/false

        :param tangible: The tangible of this Product.
        :type tangible: str
        """

        self._tangible = tangible

    @property
    def tax(self):
        """Gets the tax of this Product.


        :return: The tax of this Product.
        :rtype: ProductTax
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this Product.


        :param tax: The tax of this Product.
        :type tax: ProductTax
        """

        self._tax = tax

    @property
    def taxes(self):
        """Gets the taxes of this Product.


        :return: The taxes of this Product.
        :rtype: List[Tax]
        """
        return self._taxes

    @taxes.setter
    def taxes(self, taxes):
        """Sets the taxes of this Product.


        :param taxes: The taxes of this Product.
        :type taxes: List[Tax]
        """

        self._taxes = taxes

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this Product.


        :return: The thumbnail_url of this Product.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this Product.


        :param thumbnail_url: The thumbnail_url of this Product.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url

    @property
    def track_quantity(self):
        """Gets the track_quantity of this Product.

        true/false

        :return: The track_quantity of this Product.
        :rtype: str
        """
        return self._track_quantity

    @track_quantity.setter
    def track_quantity(self, track_quantity):
        """Sets the track_quantity of this Product.

        true/false

        :param track_quantity: The track_quantity of this Product.
        :type track_quantity: str
        """

        self._track_quantity = track_quantity

    @property
    def unlimited(self):
        """Gets the unlimited of this Product.


        :return: The unlimited of this Product.
        :rtype: bool
        """
        return self._unlimited

    @unlimited.setter
    def unlimited(self, unlimited):
        """Sets the unlimited of this Product.


        :param unlimited: The unlimited of this Product.
        :type unlimited: bool
        """

        self._unlimited = unlimited

    @property
    def update_timestamp(self):
        """Gets the update_timestamp of this Product.


        :return: The update_timestamp of this Product.
        :rtype: int
        """
        return self._update_timestamp

    @update_timestamp.setter
    def update_timestamp(self, update_timestamp):
        """Sets the update_timestamp of this Product.


        :param update_timestamp: The update_timestamp of this Product.
        :type update_timestamp: int
        """

        self._update_timestamp = update_timestamp

    @property
    def updated(self):
        """Gets the updated of this Product.

        Ex: 2015-02-03 15:30:46

        :return: The updated of this Product.
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this Product.

        Ex: 2015-02-03 15:30:46

        :param updated: The updated of this Product.
        :type updated: str
        """

        self._updated = updated

    @property
    def url(self):
        """Gets the url of this Product.


        :return: The url of this Product.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Product.


        :param url: The url of this Product.
        :type url: str
        """

        self._url = url

    @property
    def warning_limit(self):
        """Gets the warning_limit of this Product.


        :return: The warning_limit of this Product.
        :rtype: int
        """
        return self._warning_limit

    @warning_limit.setter
    def warning_limit(self, warning_limit):
        """Sets the warning_limit of this Product.


        :param warning_limit: The warning_limit of this Product.
        :type warning_limit: int
        """

        self._warning_limit = warning_limit

    @property
    def weight(self):
        """Gets the weight of this Product.

        Product weight in the units defined in store settings

        :return: The weight of this Product.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this Product.

        Product weight in the units defined in store settings

        :param weight: The weight of this Product.
        :type weight: float
        """

        self._weight = weight

    @property
    def wholesale_prices(self):
        """Gets the wholesale_prices of this Product.


        :return: The wholesale_prices of this Product.
        :rtype: WholesalePrices
        """
        return self._wholesale_prices

    @wholesale_prices.setter
    def wholesale_prices(self, wholesale_prices):
        """Sets the wholesale_prices of this Product.


        :param wholesale_prices: The wholesale_prices of this Product.
        :type wholesale_prices: WholesalePrices
        """

        self._wholesale_prices = wholesale_prices
