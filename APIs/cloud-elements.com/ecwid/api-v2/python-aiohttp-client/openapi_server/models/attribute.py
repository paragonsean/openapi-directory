# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Attribute(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: int=None, internal_name: str=None, name: str=None, value: str=None):
        """Attribute - a model defined in OpenAPI

        :param id: The id of this Attribute.
        :param internal_name: The internal_name of this Attribute.
        :param name: The name of this Attribute.
        :param value: The value of this Attribute.
        """
        self.openapi_types = {
            'id': int,
            'internal_name': str,
            'name': str,
            'value': str
        }

        self.attribute_map = {
            'id': 'id',
            'internal_name': 'internalName',
            'name': 'name',
            'value': 'value'
        }

        self._id = id
        self._internal_name = internal_name
        self._name = name
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Attribute':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Attribute of this Attribute.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Attribute.


        :return: The id of this Attribute.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Attribute.


        :param id: The id of this Attribute.
        :type id: int
        """

        self._id = id

    @property
    def internal_name(self):
        """Gets the internal_name of this Attribute.


        :return: The internal_name of this Attribute.
        :rtype: str
        """
        return self._internal_name

    @internal_name.setter
    def internal_name(self, internal_name):
        """Sets the internal_name of this Attribute.


        :param internal_name: The internal_name of this Attribute.
        :type internal_name: str
        """

        self._internal_name = internal_name

    @property
    def name(self):
        """Gets the name of this Attribute.


        :return: The name of this Attribute.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Attribute.


        :param name: The name of this Attribute.
        :type name: str
        """

        self._name = name

    @property
    def value(self):
        """Gets the value of this Attribute.


        :return: The value of this Attribute.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Attribute.


        :param value: The value of this Attribute.
        :type value: str
        """

        self._value = value
