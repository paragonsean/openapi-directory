# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.swaggerparametersschema import Swaggerparametersschema
from openapi_server import util


class Swaggerparameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, _in: str=None, name: str=None, required: bool=None, _schema: Swaggerparametersschema=None, type: str=None):
        """Swaggerparameters - a model defined in OpenAPI

        :param description: The description of this Swaggerparameters.
        :param _in: The _in of this Swaggerparameters.
        :param name: The name of this Swaggerparameters.
        :param required: The required of this Swaggerparameters.
        :param _schema: The _schema of this Swaggerparameters.
        :param type: The type of this Swaggerparameters.
        """
        self.openapi_types = {
            'description': str,
            '_in': str,
            'name': str,
            'required': bool,
            '_schema': Swaggerparametersschema,
            'type': str
        }

        self.attribute_map = {
            'description': 'description',
            '_in': 'in',
            'name': 'name',
            'required': 'required',
            '_schema': 'schema',
            'type': 'type'
        }

        self._description = description
        self.__in = _in
        self._name = name
        self._required = required
        self.__schema = _schema
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Swaggerparameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The swaggerparameters of this Swaggerparameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this Swaggerparameters.


        :return: The description of this Swaggerparameters.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Swaggerparameters.


        :param description: The description of this Swaggerparameters.
        :type description: str
        """

        self._description = description

    @property
    def _in(self):
        """Gets the _in of this Swaggerparameters.


        :return: The _in of this Swaggerparameters.
        :rtype: str
        """
        return self.__in

    @_in.setter
    def _in(self, _in):
        """Sets the _in of this Swaggerparameters.


        :param _in: The _in of this Swaggerparameters.
        :type _in: str
        """

        self.__in = _in

    @property
    def name(self):
        """Gets the name of this Swaggerparameters.


        :return: The name of this Swaggerparameters.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Swaggerparameters.


        :param name: The name of this Swaggerparameters.
        :type name: str
        """

        self._name = name

    @property
    def required(self):
        """Gets the required of this Swaggerparameters.


        :return: The required of this Swaggerparameters.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this Swaggerparameters.


        :param required: The required of this Swaggerparameters.
        :type required: bool
        """

        self._required = required

    @property
    def _schema(self):
        """Gets the _schema of this Swaggerparameters.


        :return: The _schema of this Swaggerparameters.
        :rtype: Swaggerparametersschema
        """
        return self.__schema

    @_schema.setter
    def _schema(self, _schema):
        """Sets the _schema of this Swaggerparameters.


        :param _schema: The _schema of this Swaggerparameters.
        :type _schema: Swaggerparametersschema
        """

        self.__schema = _schema

    @property
    def type(self):
        """Gets the type of this Swaggerparameters.


        :return: The type of this Swaggerparameters.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this Swaggerparameters.


        :param type: The type of this Swaggerparameters.
        :type type: str
        """

        self._type = type
