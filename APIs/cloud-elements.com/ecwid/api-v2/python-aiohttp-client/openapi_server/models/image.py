# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Image(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, image1500px_url: str=None, image160px_url: str=None, image400px_url: str=None, image800px_url: str=None, image_original_url: str=None, is_main: bool=None, order_by: float=None):
        """Image - a model defined in OpenAPI

        :param id: The id of this Image.
        :param image1500px_url: The image1500px_url of this Image.
        :param image160px_url: The image160px_url of this Image.
        :param image400px_url: The image400px_url of this Image.
        :param image800px_url: The image800px_url of this Image.
        :param image_original_url: The image_original_url of this Image.
        :param is_main: The is_main of this Image.
        :param order_by: The order_by of this Image.
        """
        self.openapi_types = {
            'id': str,
            'image1500px_url': str,
            'image160px_url': str,
            'image400px_url': str,
            'image800px_url': str,
            'image_original_url': str,
            'is_main': bool,
            'order_by': float
        }

        self.attribute_map = {
            'id': 'id',
            'image1500px_url': 'image1500pxUrl',
            'image160px_url': 'image160pxUrl',
            'image400px_url': 'image400pxUrl',
            'image800px_url': 'image800pxUrl',
            'image_original_url': 'imageOriginalUrl',
            'is_main': 'isMain',
            'order_by': 'orderBy'
        }

        self._id = id
        self._image1500px_url = image1500px_url
        self._image160px_url = image160px_url
        self._image400px_url = image400px_url
        self._image800px_url = image800px_url
        self._image_original_url = image_original_url
        self._is_main = is_main
        self._order_by = order_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Image':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Image of this Image.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Image.


        :return: The id of this Image.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Image.


        :param id: The id of this Image.
        :type id: str
        """

        self._id = id

    @property
    def image1500px_url(self):
        """Gets the image1500px_url of this Image.


        :return: The image1500px_url of this Image.
        :rtype: str
        """
        return self._image1500px_url

    @image1500px_url.setter
    def image1500px_url(self, image1500px_url):
        """Sets the image1500px_url of this Image.


        :param image1500px_url: The image1500px_url of this Image.
        :type image1500px_url: str
        """

        self._image1500px_url = image1500px_url

    @property
    def image160px_url(self):
        """Gets the image160px_url of this Image.


        :return: The image160px_url of this Image.
        :rtype: str
        """
        return self._image160px_url

    @image160px_url.setter
    def image160px_url(self, image160px_url):
        """Sets the image160px_url of this Image.


        :param image160px_url: The image160px_url of this Image.
        :type image160px_url: str
        """

        self._image160px_url = image160px_url

    @property
    def image400px_url(self):
        """Gets the image400px_url of this Image.


        :return: The image400px_url of this Image.
        :rtype: str
        """
        return self._image400px_url

    @image400px_url.setter
    def image400px_url(self, image400px_url):
        """Sets the image400px_url of this Image.


        :param image400px_url: The image400px_url of this Image.
        :type image400px_url: str
        """

        self._image400px_url = image400px_url

    @property
    def image800px_url(self):
        """Gets the image800px_url of this Image.


        :return: The image800px_url of this Image.
        :rtype: str
        """
        return self._image800px_url

    @image800px_url.setter
    def image800px_url(self, image800px_url):
        """Sets the image800px_url of this Image.


        :param image800px_url: The image800px_url of this Image.
        :type image800px_url: str
        """

        self._image800px_url = image800px_url

    @property
    def image_original_url(self):
        """Gets the image_original_url of this Image.


        :return: The image_original_url of this Image.
        :rtype: str
        """
        return self._image_original_url

    @image_original_url.setter
    def image_original_url(self, image_original_url):
        """Sets the image_original_url of this Image.


        :param image_original_url: The image_original_url of this Image.
        :type image_original_url: str
        """

        self._image_original_url = image_original_url

    @property
    def is_main(self):
        """Gets the is_main of this Image.


        :return: The is_main of this Image.
        :rtype: bool
        """
        return self._is_main

    @is_main.setter
    def is_main(self, is_main):
        """Sets the is_main of this Image.


        :param is_main: The is_main of this Image.
        :type is_main: bool
        """

        self._is_main = is_main

    @property
    def order_by(self):
        """Gets the order_by of this Image.


        :return: The order_by of this Image.
        :rtype: float
        """
        return self._order_by

    @order_by.setter
    def order_by(self, order_by):
        """Sets the order_by of this Image.


        :param order_by: The order_by of this Image.
        :type order_by: float
        """

        self._order_by = order_by
