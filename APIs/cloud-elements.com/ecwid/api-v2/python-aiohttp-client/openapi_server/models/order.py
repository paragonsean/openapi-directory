# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.additional_info import AdditionalInfo
from openapi_server.models.handling_fee import HandlingFee
from openapi_server.models.item import Item
from openapi_server.models.person import Person
from openapi_server.models.refunds import Refunds
from openapi_server.models.shipping_option import ShippingOption
from openapi_server.models.tax import Tax
from openapi_server import util


class Order(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_info: AdditionalInfo=None, billing_person: Person=None, coupon_discount: float=None, create_date: str=None, create_timestamp: float=None, customer_id: float=None, customer_tax_exempt: bool=None, customer_tax_id: int=None, customer_tax_id_valid: bool=None, discount: float=None, email: str=None, fulfillment_status: str=None, global_referer: str=None, handling_fee: HandlingFee=None, hidden: bool=None, ip_address: str=None, items: List[Item]=None, last_change_date: datetime=None, membership_based_discount: float=None, order_comments: str=None, order_number: int=None, payment_method: str=None, payment_module: str=None, payment_status: str=None, private_admin_notes: str=None, referer_url: str=None, refunded_amount: float=None, refunds: List[Refunds]=None, reversed_tax_applied: bool=None, sample: bool=None, shipping_method: str=None, shipping_option: ShippingOption=None, shipping_person: Person=None, subtotal: float=None, tax: float=None, taxes_on_shipping: List[Tax]=None, total: float=None, total_and_membership_based_discount: float=None, tracking_number: str=None, update_date: str=None, update_timestamp: float=None, usd_total: float=None, vendor_number: float=None, vendor_order_number: str=None, volume_discount: float=None):
        """Order - a model defined in OpenAPI

        :param additional_info: The additional_info of this Order.
        :param billing_person: The billing_person of this Order.
        :param coupon_discount: The coupon_discount of this Order.
        :param create_date: The create_date of this Order.
        :param create_timestamp: The create_timestamp of this Order.
        :param customer_id: The customer_id of this Order.
        :param customer_tax_exempt: The customer_tax_exempt of this Order.
        :param customer_tax_id: The customer_tax_id of this Order.
        :param customer_tax_id_valid: The customer_tax_id_valid of this Order.
        :param discount: The discount of this Order.
        :param email: The email of this Order.
        :param fulfillment_status: The fulfillment_status of this Order.
        :param global_referer: The global_referer of this Order.
        :param handling_fee: The handling_fee of this Order.
        :param hidden: The hidden of this Order.
        :param ip_address: The ip_address of this Order.
        :param items: The items of this Order.
        :param last_change_date: The last_change_date of this Order.
        :param membership_based_discount: The membership_based_discount of this Order.
        :param order_comments: The order_comments of this Order.
        :param order_number: The order_number of this Order.
        :param payment_method: The payment_method of this Order.
        :param payment_module: The payment_module of this Order.
        :param payment_status: The payment_status of this Order.
        :param private_admin_notes: The private_admin_notes of this Order.
        :param referer_url: The referer_url of this Order.
        :param refunded_amount: The refunded_amount of this Order.
        :param refunds: The refunds of this Order.
        :param reversed_tax_applied: The reversed_tax_applied of this Order.
        :param sample: The sample of this Order.
        :param shipping_method: The shipping_method of this Order.
        :param shipping_option: The shipping_option of this Order.
        :param shipping_person: The shipping_person of this Order.
        :param subtotal: The subtotal of this Order.
        :param tax: The tax of this Order.
        :param taxes_on_shipping: The taxes_on_shipping of this Order.
        :param total: The total of this Order.
        :param total_and_membership_based_discount: The total_and_membership_based_discount of this Order.
        :param tracking_number: The tracking_number of this Order.
        :param update_date: The update_date of this Order.
        :param update_timestamp: The update_timestamp of this Order.
        :param usd_total: The usd_total of this Order.
        :param vendor_number: The vendor_number of this Order.
        :param vendor_order_number: The vendor_order_number of this Order.
        :param volume_discount: The volume_discount of this Order.
        """
        self.openapi_types = {
            'additional_info': AdditionalInfo,
            'billing_person': Person,
            'coupon_discount': float,
            'create_date': str,
            'create_timestamp': float,
            'customer_id': float,
            'customer_tax_exempt': bool,
            'customer_tax_id': int,
            'customer_tax_id_valid': bool,
            'discount': float,
            'email': str,
            'fulfillment_status': str,
            'global_referer': str,
            'handling_fee': HandlingFee,
            'hidden': bool,
            'ip_address': str,
            'items': List[Item],
            'last_change_date': datetime,
            'membership_based_discount': float,
            'order_comments': str,
            'order_number': int,
            'payment_method': str,
            'payment_module': str,
            'payment_status': str,
            'private_admin_notes': str,
            'referer_url': str,
            'refunded_amount': float,
            'refunds': List[Refunds],
            'reversed_tax_applied': bool,
            'sample': bool,
            'shipping_method': str,
            'shipping_option': ShippingOption,
            'shipping_person': Person,
            'subtotal': float,
            'tax': float,
            'taxes_on_shipping': List[Tax],
            'total': float,
            'total_and_membership_based_discount': float,
            'tracking_number': str,
            'update_date': str,
            'update_timestamp': float,
            'usd_total': float,
            'vendor_number': float,
            'vendor_order_number': str,
            'volume_discount': float
        }

        self.attribute_map = {
            'additional_info': 'additionalInfo',
            'billing_person': 'billingPerson',
            'coupon_discount': 'couponDiscount',
            'create_date': 'createDate',
            'create_timestamp': 'createTimestamp',
            'customer_id': 'customerId',
            'customer_tax_exempt': 'customerTaxExempt',
            'customer_tax_id': 'customerTaxId',
            'customer_tax_id_valid': 'customerTaxIdValid',
            'discount': 'discount',
            'email': 'email',
            'fulfillment_status': 'fulfillmentStatus',
            'global_referer': 'globalReferer',
            'handling_fee': 'handlingFee',
            'hidden': 'hidden',
            'ip_address': 'ipAddress',
            'items': 'items',
            'last_change_date': 'lastChangeDate',
            'membership_based_discount': 'membershipBasedDiscount',
            'order_comments': 'orderComments',
            'order_number': 'orderNumber',
            'payment_method': 'paymentMethod',
            'payment_module': 'paymentModule',
            'payment_status': 'paymentStatus',
            'private_admin_notes': 'privateAdminNotes',
            'referer_url': 'refererUrl',
            'refunded_amount': 'refundedAmount',
            'refunds': 'refunds',
            'reversed_tax_applied': 'reversedTaxApplied',
            'sample': 'sample',
            'shipping_method': 'shippingMethod',
            'shipping_option': 'shippingOption',
            'shipping_person': 'shippingPerson',
            'subtotal': 'subtotal',
            'tax': 'tax',
            'taxes_on_shipping': 'taxesOnShipping',
            'total': 'total',
            'total_and_membership_based_discount': 'totalAndMembershipBasedDiscount',
            'tracking_number': 'trackingNumber',
            'update_date': 'updateDate',
            'update_timestamp': 'updateTimestamp',
            'usd_total': 'usdTotal',
            'vendor_number': 'vendorNumber',
            'vendor_order_number': 'vendorOrderNumber',
            'volume_discount': 'volumeDiscount'
        }

        self._additional_info = additional_info
        self._billing_person = billing_person
        self._coupon_discount = coupon_discount
        self._create_date = create_date
        self._create_timestamp = create_timestamp
        self._customer_id = customer_id
        self._customer_tax_exempt = customer_tax_exempt
        self._customer_tax_id = customer_tax_id
        self._customer_tax_id_valid = customer_tax_id_valid
        self._discount = discount
        self._email = email
        self._fulfillment_status = fulfillment_status
        self._global_referer = global_referer
        self._handling_fee = handling_fee
        self._hidden = hidden
        self._ip_address = ip_address
        self._items = items
        self._last_change_date = last_change_date
        self._membership_based_discount = membership_based_discount
        self._order_comments = order_comments
        self._order_number = order_number
        self._payment_method = payment_method
        self._payment_module = payment_module
        self._payment_status = payment_status
        self._private_admin_notes = private_admin_notes
        self._referer_url = referer_url
        self._refunded_amount = refunded_amount
        self._refunds = refunds
        self._reversed_tax_applied = reversed_tax_applied
        self._sample = sample
        self._shipping_method = shipping_method
        self._shipping_option = shipping_option
        self._shipping_person = shipping_person
        self._subtotal = subtotal
        self._tax = tax
        self._taxes_on_shipping = taxes_on_shipping
        self._total = total
        self._total_and_membership_based_discount = total_and_membership_based_discount
        self._tracking_number = tracking_number
        self._update_date = update_date
        self._update_timestamp = update_timestamp
        self._usd_total = usd_total
        self._vendor_number = vendor_number
        self._vendor_order_number = vendor_order_number
        self._volume_discount = volume_discount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Order':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Order of this Order.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_info(self):
        """Gets the additional_info of this Order.


        :return: The additional_info of this Order.
        :rtype: AdditionalInfo
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this Order.


        :param additional_info: The additional_info of this Order.
        :type additional_info: AdditionalInfo
        """

        self._additional_info = additional_info

    @property
    def billing_person(self):
        """Gets the billing_person of this Order.


        :return: The billing_person of this Order.
        :rtype: Person
        """
        return self._billing_person

    @billing_person.setter
    def billing_person(self, billing_person):
        """Sets the billing_person of this Order.


        :param billing_person: The billing_person of this Order.
        :type billing_person: Person
        """

        self._billing_person = billing_person

    @property
    def coupon_discount(self):
        """Gets the coupon_discount of this Order.


        :return: The coupon_discount of this Order.
        :rtype: float
        """
        return self._coupon_discount

    @coupon_discount.setter
    def coupon_discount(self, coupon_discount):
        """Sets the coupon_discount of this Order.


        :param coupon_discount: The coupon_discount of this Order.
        :type coupon_discount: float
        """

        self._coupon_discount = coupon_discount

    @property
    def create_date(self):
        """Gets the create_date of this Order.

        Ex: 2015-02-02 16:11:52 +0000

        :return: The create_date of this Order.
        :rtype: str
        """
        return self._create_date

    @create_date.setter
    def create_date(self, create_date):
        """Sets the create_date of this Order.

        Ex: 2015-02-02 16:11:52 +0000

        :param create_date: The create_date of this Order.
        :type create_date: str
        """

        self._create_date = create_date

    @property
    def create_timestamp(self):
        """Gets the create_timestamp of this Order.


        :return: The create_timestamp of this Order.
        :rtype: float
        """
        return self._create_timestamp

    @create_timestamp.setter
    def create_timestamp(self, create_timestamp):
        """Sets the create_timestamp of this Order.


        :param create_timestamp: The create_timestamp of this Order.
        :type create_timestamp: float
        """

        self._create_timestamp = create_timestamp

    @property
    def customer_id(self):
        """Gets the customer_id of this Order.


        :return: The customer_id of this Order.
        :rtype: float
        """
        return self._customer_id

    @customer_id.setter
    def customer_id(self, customer_id):
        """Sets the customer_id of this Order.


        :param customer_id: The customer_id of this Order.
        :type customer_id: float
        """

        self._customer_id = customer_id

    @property
    def customer_tax_exempt(self):
        """Gets the customer_tax_exempt of this Order.


        :return: The customer_tax_exempt of this Order.
        :rtype: bool
        """
        return self._customer_tax_exempt

    @customer_tax_exempt.setter
    def customer_tax_exempt(self, customer_tax_exempt):
        """Sets the customer_tax_exempt of this Order.


        :param customer_tax_exempt: The customer_tax_exempt of this Order.
        :type customer_tax_exempt: bool
        """

        self._customer_tax_exempt = customer_tax_exempt

    @property
    def customer_tax_id(self):
        """Gets the customer_tax_id of this Order.


        :return: The customer_tax_id of this Order.
        :rtype: int
        """
        return self._customer_tax_id

    @customer_tax_id.setter
    def customer_tax_id(self, customer_tax_id):
        """Sets the customer_tax_id of this Order.


        :param customer_tax_id: The customer_tax_id of this Order.
        :type customer_tax_id: int
        """

        self._customer_tax_id = customer_tax_id

    @property
    def customer_tax_id_valid(self):
        """Gets the customer_tax_id_valid of this Order.


        :return: The customer_tax_id_valid of this Order.
        :rtype: bool
        """
        return self._customer_tax_id_valid

    @customer_tax_id_valid.setter
    def customer_tax_id_valid(self, customer_tax_id_valid):
        """Sets the customer_tax_id_valid of this Order.


        :param customer_tax_id_valid: The customer_tax_id_valid of this Order.
        :type customer_tax_id_valid: bool
        """

        self._customer_tax_id_valid = customer_tax_id_valid

    @property
    def discount(self):
        """Gets the discount of this Order.


        :return: The discount of this Order.
        :rtype: float
        """
        return self._discount

    @discount.setter
    def discount(self, discount):
        """Sets the discount of this Order.


        :param discount: The discount of this Order.
        :type discount: float
        """

        self._discount = discount

    @property
    def email(self):
        """Gets the email of this Order.


        :return: The email of this Order.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Order.


        :param email: The email of this Order.
        :type email: str
        """

        self._email = email

    @property
    def fulfillment_status(self):
        """Gets the fulfillment_status of this Order.

        AWAITING_PROCESSING, PROCESSING, SHIPPED, DELIVERED, WILL_NOT_DELIVER, RETURNED, READY_FOR_PICKUP

        :return: The fulfillment_status of this Order.
        :rtype: str
        """
        return self._fulfillment_status

    @fulfillment_status.setter
    def fulfillment_status(self, fulfillment_status):
        """Sets the fulfillment_status of this Order.

        AWAITING_PROCESSING, PROCESSING, SHIPPED, DELIVERED, WILL_NOT_DELIVER, RETURNED, READY_FOR_PICKUP

        :param fulfillment_status: The fulfillment_status of this Order.
        :type fulfillment_status: str
        """

        self._fulfillment_status = fulfillment_status

    @property
    def global_referer(self):
        """Gets the global_referer of this Order.


        :return: The global_referer of this Order.
        :rtype: str
        """
        return self._global_referer

    @global_referer.setter
    def global_referer(self, global_referer):
        """Sets the global_referer of this Order.


        :param global_referer: The global_referer of this Order.
        :type global_referer: str
        """

        self._global_referer = global_referer

    @property
    def handling_fee(self):
        """Gets the handling_fee of this Order.


        :return: The handling_fee of this Order.
        :rtype: HandlingFee
        """
        return self._handling_fee

    @handling_fee.setter
    def handling_fee(self, handling_fee):
        """Sets the handling_fee of this Order.


        :param handling_fee: The handling_fee of this Order.
        :type handling_fee: HandlingFee
        """

        self._handling_fee = handling_fee

    @property
    def hidden(self):
        """Gets the hidden of this Order.


        :return: The hidden of this Order.
        :rtype: bool
        """
        return self._hidden

    @hidden.setter
    def hidden(self, hidden):
        """Sets the hidden of this Order.


        :param hidden: The hidden of this Order.
        :type hidden: bool
        """

        self._hidden = hidden

    @property
    def ip_address(self):
        """Gets the ip_address of this Order.


        :return: The ip_address of this Order.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this Order.


        :param ip_address: The ip_address of this Order.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def items(self):
        """Gets the items of this Order.


        :return: The items of this Order.
        :rtype: List[Item]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this Order.


        :param items: The items of this Order.
        :type items: List[Item]
        """

        self._items = items

    @property
    def last_change_date(self):
        """Gets the last_change_date of this Order.

        Ex: 2015-02-03 15:30:08

        :return: The last_change_date of this Order.
        :rtype: datetime
        """
        return self._last_change_date

    @last_change_date.setter
    def last_change_date(self, last_change_date):
        """Sets the last_change_date of this Order.

        Ex: 2015-02-03 15:30:08

        :param last_change_date: The last_change_date of this Order.
        :type last_change_date: datetime
        """

        self._last_change_date = last_change_date

    @property
    def membership_based_discount(self):
        """Gets the membership_based_discount of this Order.


        :return: The membership_based_discount of this Order.
        :rtype: float
        """
        return self._membership_based_discount

    @membership_based_discount.setter
    def membership_based_discount(self, membership_based_discount):
        """Sets the membership_based_discount of this Order.


        :param membership_based_discount: The membership_based_discount of this Order.
        :type membership_based_discount: float
        """

        self._membership_based_discount = membership_based_discount

    @property
    def order_comments(self):
        """Gets the order_comments of this Order.


        :return: The order_comments of this Order.
        :rtype: str
        """
        return self._order_comments

    @order_comments.setter
    def order_comments(self, order_comments):
        """Sets the order_comments of this Order.


        :param order_comments: The order_comments of this Order.
        :type order_comments: str
        """

        self._order_comments = order_comments

    @property
    def order_number(self):
        """Gets the order_number of this Order.

        Unique order number without prefixes/suffixes

        :return: The order_number of this Order.
        :rtype: int
        """
        return self._order_number

    @order_number.setter
    def order_number(self, order_number):
        """Sets the order_number of this Order.

        Unique order number without prefixes/suffixes

        :param order_number: The order_number of this Order.
        :type order_number: int
        """

        self._order_number = order_number

    @property
    def payment_method(self):
        """Gets the payment_method of this Order.


        :return: The payment_method of this Order.
        :rtype: str
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this Order.


        :param payment_method: The payment_method of this Order.
        :type payment_method: str
        """

        self._payment_method = payment_method

    @property
    def payment_module(self):
        """Gets the payment_module of this Order.


        :return: The payment_module of this Order.
        :rtype: str
        """
        return self._payment_module

    @payment_module.setter
    def payment_module(self, payment_module):
        """Sets the payment_module of this Order.


        :param payment_module: The payment_module of this Order.
        :type payment_module: str
        """

        self._payment_module = payment_module

    @property
    def payment_status(self):
        """Gets the payment_status of this Order.

        AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED, INCOMPLETE

        :return: The payment_status of this Order.
        :rtype: str
        """
        return self._payment_status

    @payment_status.setter
    def payment_status(self, payment_status):
        """Sets the payment_status of this Order.

        AWAITING_PAYMENT, PAID, CANCELLED, REFUNDED, PARTIALLY_REFUNDED, INCOMPLETE

        :param payment_status: The payment_status of this Order.
        :type payment_status: str
        """

        self._payment_status = payment_status

    @property
    def private_admin_notes(self):
        """Gets the private_admin_notes of this Order.


        :return: The private_admin_notes of this Order.
        :rtype: str
        """
        return self._private_admin_notes

    @private_admin_notes.setter
    def private_admin_notes(self, private_admin_notes):
        """Sets the private_admin_notes of this Order.


        :param private_admin_notes: The private_admin_notes of this Order.
        :type private_admin_notes: str
        """

        self._private_admin_notes = private_admin_notes

    @property
    def referer_url(self):
        """Gets the referer_url of this Order.


        :return: The referer_url of this Order.
        :rtype: str
        """
        return self._referer_url

    @referer_url.setter
    def referer_url(self, referer_url):
        """Sets the referer_url of this Order.


        :param referer_url: The referer_url of this Order.
        :type referer_url: str
        """

        self._referer_url = referer_url

    @property
    def refunded_amount(self):
        """Gets the refunded_amount of this Order.


        :return: The refunded_amount of this Order.
        :rtype: float
        """
        return self._refunded_amount

    @refunded_amount.setter
    def refunded_amount(self, refunded_amount):
        """Sets the refunded_amount of this Order.


        :param refunded_amount: The refunded_amount of this Order.
        :type refunded_amount: float
        """

        self._refunded_amount = refunded_amount

    @property
    def refunds(self):
        """Gets the refunds of this Order.


        :return: The refunds of this Order.
        :rtype: List[Refunds]
        """
        return self._refunds

    @refunds.setter
    def refunds(self, refunds):
        """Sets the refunds of this Order.


        :param refunds: The refunds of this Order.
        :type refunds: List[Refunds]
        """

        self._refunds = refunds

    @property
    def reversed_tax_applied(self):
        """Gets the reversed_tax_applied of this Order.


        :return: The reversed_tax_applied of this Order.
        :rtype: bool
        """
        return self._reversed_tax_applied

    @reversed_tax_applied.setter
    def reversed_tax_applied(self, reversed_tax_applied):
        """Sets the reversed_tax_applied of this Order.


        :param reversed_tax_applied: The reversed_tax_applied of this Order.
        :type reversed_tax_applied: bool
        """

        self._reversed_tax_applied = reversed_tax_applied

    @property
    def sample(self):
        """Gets the sample of this Order.


        :return: The sample of this Order.
        :rtype: bool
        """
        return self._sample

    @sample.setter
    def sample(self, sample):
        """Sets the sample of this Order.


        :param sample: The sample of this Order.
        :type sample: bool
        """

        self._sample = sample

    @property
    def shipping_method(self):
        """Gets the shipping_method of this Order.


        :return: The shipping_method of this Order.
        :rtype: str
        """
        return self._shipping_method

    @shipping_method.setter
    def shipping_method(self, shipping_method):
        """Sets the shipping_method of this Order.


        :param shipping_method: The shipping_method of this Order.
        :type shipping_method: str
        """

        self._shipping_method = shipping_method

    @property
    def shipping_option(self):
        """Gets the shipping_option of this Order.


        :return: The shipping_option of this Order.
        :rtype: ShippingOption
        """
        return self._shipping_option

    @shipping_option.setter
    def shipping_option(self, shipping_option):
        """Sets the shipping_option of this Order.


        :param shipping_option: The shipping_option of this Order.
        :type shipping_option: ShippingOption
        """

        self._shipping_option = shipping_option

    @property
    def shipping_person(self):
        """Gets the shipping_person of this Order.


        :return: The shipping_person of this Order.
        :rtype: Person
        """
        return self._shipping_person

    @shipping_person.setter
    def shipping_person(self, shipping_person):
        """Sets the shipping_person of this Order.


        :param shipping_person: The shipping_person of this Order.
        :type shipping_person: Person
        """

        self._shipping_person = shipping_person

    @property
    def subtotal(self):
        """Gets the subtotal of this Order.


        :return: The subtotal of this Order.
        :rtype: float
        """
        return self._subtotal

    @subtotal.setter
    def subtotal(self, subtotal):
        """Sets the subtotal of this Order.


        :param subtotal: The subtotal of this Order.
        :type subtotal: float
        """

        self._subtotal = subtotal

    @property
    def tax(self):
        """Gets the tax of this Order.


        :return: The tax of this Order.
        :rtype: float
        """
        return self._tax

    @tax.setter
    def tax(self, tax):
        """Sets the tax of this Order.


        :param tax: The tax of this Order.
        :type tax: float
        """

        self._tax = tax

    @property
    def taxes_on_shipping(self):
        """Gets the taxes_on_shipping of this Order.


        :return: The taxes_on_shipping of this Order.
        :rtype: List[Tax]
        """
        return self._taxes_on_shipping

    @taxes_on_shipping.setter
    def taxes_on_shipping(self, taxes_on_shipping):
        """Sets the taxes_on_shipping of this Order.


        :param taxes_on_shipping: The taxes_on_shipping of this Order.
        :type taxes_on_shipping: List[Tax]
        """

        self._taxes_on_shipping = taxes_on_shipping

    @property
    def total(self):
        """Gets the total of this Order.


        :return: The total of this Order.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this Order.


        :param total: The total of this Order.
        :type total: float
        """

        self._total = total

    @property
    def total_and_membership_based_discount(self):
        """Gets the total_and_membership_based_discount of this Order.


        :return: The total_and_membership_based_discount of this Order.
        :rtype: float
        """
        return self._total_and_membership_based_discount

    @total_and_membership_based_discount.setter
    def total_and_membership_based_discount(self, total_and_membership_based_discount):
        """Sets the total_and_membership_based_discount of this Order.


        :param total_and_membership_based_discount: The total_and_membership_based_discount of this Order.
        :type total_and_membership_based_discount: float
        """

        self._total_and_membership_based_discount = total_and_membership_based_discount

    @property
    def tracking_number(self):
        """Gets the tracking_number of this Order.


        :return: The tracking_number of this Order.
        :rtype: str
        """
        return self._tracking_number

    @tracking_number.setter
    def tracking_number(self, tracking_number):
        """Sets the tracking_number of this Order.


        :param tracking_number: The tracking_number of this Order.
        :type tracking_number: str
        """

        self._tracking_number = tracking_number

    @property
    def update_date(self):
        """Gets the update_date of this Order.

        Ex: 2015-02-03 15:30:08 +0000

        :return: The update_date of this Order.
        :rtype: str
        """
        return self._update_date

    @update_date.setter
    def update_date(self, update_date):
        """Sets the update_date of this Order.

        Ex: 2015-02-03 15:30:08 +0000

        :param update_date: The update_date of this Order.
        :type update_date: str
        """

        self._update_date = update_date

    @property
    def update_timestamp(self):
        """Gets the update_timestamp of this Order.


        :return: The update_timestamp of this Order.
        :rtype: float
        """
        return self._update_timestamp

    @update_timestamp.setter
    def update_timestamp(self, update_timestamp):
        """Sets the update_timestamp of this Order.


        :param update_timestamp: The update_timestamp of this Order.
        :type update_timestamp: float
        """

        self._update_timestamp = update_timestamp

    @property
    def usd_total(self):
        """Gets the usd_total of this Order.


        :return: The usd_total of this Order.
        :rtype: float
        """
        return self._usd_total

    @usd_total.setter
    def usd_total(self, usd_total):
        """Sets the usd_total of this Order.


        :param usd_total: The usd_total of this Order.
        :type usd_total: float
        """

        self._usd_total = usd_total

    @property
    def vendor_number(self):
        """Gets the vendor_number of this Order.


        :return: The vendor_number of this Order.
        :rtype: float
        """
        return self._vendor_number

    @vendor_number.setter
    def vendor_number(self, vendor_number):
        """Sets the vendor_number of this Order.


        :param vendor_number: The vendor_number of this Order.
        :type vendor_number: float
        """

        self._vendor_number = vendor_number

    @property
    def vendor_order_number(self):
        """Gets the vendor_order_number of this Order.


        :return: The vendor_order_number of this Order.
        :rtype: str
        """
        return self._vendor_order_number

    @vendor_order_number.setter
    def vendor_order_number(self, vendor_order_number):
        """Sets the vendor_order_number of this Order.


        :param vendor_order_number: The vendor_order_number of this Order.
        :type vendor_order_number: str
        """

        self._vendor_order_number = vendor_order_number

    @property
    def volume_discount(self):
        """Gets the volume_discount of this Order.


        :return: The volume_discount of this Order.
        :rtype: float
        """
        return self._volume_discount

    @volume_discount.setter
    def volume_discount(self, volume_discount):
        """Sets the volume_discount of this Order.


        :param volume_discount: The volume_discount of this Order.
        :type volume_discount: float
        """

        self._volume_discount = volume_discount
