# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Choice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, price_modifier: float=None, price_modifier_type: str=None, text: str=None):
        """Choice - a model defined in OpenAPI

        :param price_modifier: The price_modifier of this Choice.
        :param price_modifier_type: The price_modifier_type of this Choice.
        :param text: The text of this Choice.
        """
        self.openapi_types = {
            'price_modifier': float,
            'price_modifier_type': str,
            'text': str
        }

        self.attribute_map = {
            'price_modifier': 'priceModifier',
            'price_modifier_type': 'priceModifierType',
            'text': 'text'
        }

        self._price_modifier = price_modifier
        self._price_modifier_type = price_modifier_type
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Choice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Choice of this Choice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def price_modifier(self):
        """Gets the price_modifier of this Choice.


        :return: The price_modifier of this Choice.
        :rtype: float
        """
        return self._price_modifier

    @price_modifier.setter
    def price_modifier(self, price_modifier):
        """Sets the price_modifier of this Choice.


        :param price_modifier: The price_modifier of this Choice.
        :type price_modifier: float
        """

        self._price_modifier = price_modifier

    @property
    def price_modifier_type(self):
        """Gets the price_modifier_type of this Choice.

        PERCENT, ABSOLUTE

        :return: The price_modifier_type of this Choice.
        :rtype: str
        """
        return self._price_modifier_type

    @price_modifier_type.setter
    def price_modifier_type(self, price_modifier_type):
        """Sets the price_modifier_type of this Choice.

        PERCENT, ABSOLUTE

        :param price_modifier_type: The price_modifier_type of this Choice.
        :type price_modifier_type: str
        """

        self._price_modifier_type = price_modifier_type

    @property
    def text(self):
        """Gets the text of this Choice.


        :return: The text of this Choice.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Choice.


        :param text: The text of this Choice.
        :type text: str
        """

        self._text = text
