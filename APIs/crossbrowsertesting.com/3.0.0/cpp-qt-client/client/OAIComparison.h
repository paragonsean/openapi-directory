/**
 * Crossbrowsertesting.com Screenshot Comparisons API
 * What's in this version:   1. Compare two screenshots for layout differences   2. Compare a full screenshot test of browsers to a single baseline browser for layout differences.   3. Compare a screenshot test version to another test version - good for regression tests.   4. Get links to the Comparison UI for visual representation of layout differences
 *
 * The version of the OpenAPI document: 3.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIComparison.h
 *
 * 
 */

#ifndef OAIComparison_H
#define OAIComparison_H

#include <QJsonObject>

#include "OAIElement.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIElement;

class OAIComparison : public OAIObject {
public:
    OAIComparison();
    OAIComparison(QString json);
    ~OAIComparison() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDifferences() const;
    void setDifferences(const qint32 &differences);
    bool is_differences_Set() const;
    bool is_differences_Valid() const;

    QList<OAIElement> getElements() const;
    void setElements(const QList<OAIElement> &elements);
    bool is_elements_Set() const;
    bool is_elements_Valid() const;

    bool isError() const;
    void setError(const bool &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getShowComparisonsPublicUrl() const;
    void setShowComparisonsPublicUrl(const QString &show_comparisons_public_url);
    bool is_show_comparisons_public_url_Set() const;
    bool is_show_comparisons_public_url_Valid() const;

    QString getShowComparisonsWebUrl() const;
    void setShowComparisonsWebUrl(const QString &show_comparisons_web_url);
    bool is_show_comparisons_web_url_Set() const;
    bool is_show_comparisons_web_url_Valid() const;

    qint32 getTolerance() const;
    void setTolerance(const qint32 &tolerance);
    bool is_tolerance_Set() const;
    bool is_tolerance_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_differences;
    bool m_differences_isSet;
    bool m_differences_isValid;

    QList<OAIElement> m_elements;
    bool m_elements_isSet;
    bool m_elements_isValid;

    bool m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_show_comparisons_public_url;
    bool m_show_comparisons_public_url_isSet;
    bool m_show_comparisons_public_url_isValid;

    QString m_show_comparisons_web_url;
    bool m_show_comparisons_web_url_isSet;
    bool m_show_comparisons_web_url_isValid;

    qint32 m_tolerance;
    bool m_tolerance_isSet;
    bool m_tolerance_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIComparison)

#endif // OAIComparison_H
