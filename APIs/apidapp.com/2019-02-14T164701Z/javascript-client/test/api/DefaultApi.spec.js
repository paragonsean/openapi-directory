/**
 * ApiDapp
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2019-02-14T16:47:01Z
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApiDapp);
  }
}(this, function(expect, ApiDapp) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApiDapp.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('accountIdGet', function() {
      it('should call accountIdGet successfully', function(done) {
        //uncomment below and update the code to test accountIdGet
        //instance.accountIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountIdOptions', function() {
      it('should call accountIdOptions successfully', function(done) {
        //uncomment below and update the code to test accountIdOptions
        //instance.accountIdOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountOptions', function() {
      it('should call accountOptions successfully', function(done) {
        //uncomment below and update the code to test accountOptions
        //instance.accountOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('accountPost', function() {
      it('should call accountPost successfully', function(done) {
        //uncomment below and update the code to test accountPost
        //instance.accountPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockGet', function() {
      it('should call blockGet successfully', function(done) {
        //uncomment below and update the code to test blockGet
        //instance.blockGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockIdGet', function() {
      it('should call blockIdGet successfully', function(done) {
        //uncomment below and update the code to test blockIdGet
        //instance.blockIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockIdOptions', function() {
      it('should call blockIdOptions successfully', function(done) {
        //uncomment below and update the code to test blockIdOptions
        //instance.blockIdOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockIdTransactionGet', function() {
      it('should call blockIdTransactionGet successfully', function(done) {
        //uncomment below and update the code to test blockIdTransactionGet
        //instance.blockIdTransactionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockIdTransactionIndexGet', function() {
      it('should call blockIdTransactionIndexGet successfully', function(done) {
        //uncomment below and update the code to test blockIdTransactionIndexGet
        //instance.blockIdTransactionIndexGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockIdTransactionIndexOptions', function() {
      it('should call blockIdTransactionIndexOptions successfully', function(done) {
        //uncomment below and update the code to test blockIdTransactionIndexOptions
        //instance.blockIdTransactionIndexOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockIdTransactionOptions', function() {
      it('should call blockIdTransactionOptions successfully', function(done) {
        //uncomment below and update the code to test blockIdTransactionOptions
        //instance.blockIdTransactionOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockOptions', function() {
      it('should call blockOptions successfully', function(done) {
        //uncomment below and update the code to test blockOptions
        //instance.blockOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockchainGet', function() {
      it('should call blockchainGet successfully', function(done) {
        //uncomment below and update the code to test blockchainGet
        //instance.blockchainGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockchainIdGet', function() {
      it('should call blockchainIdGet successfully', function(done) {
        //uncomment below and update the code to test blockchainIdGet
        //instance.blockchainIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockchainIdOptions', function() {
      it('should call blockchainIdOptions successfully', function(done) {
        //uncomment below and update the code to test blockchainIdOptions
        //instance.blockchainIdOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('blockchainOptions', function() {
      it('should call blockchainOptions successfully', function(done) {
        //uncomment below and update the code to test blockchainOptions
        //instance.blockchainOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contractIdGet', function() {
      it('should call contractIdGet successfully', function(done) {
        //uncomment below and update the code to test contractIdGet
        //instance.contractIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contractIdOptions', function() {
      it('should call contractIdOptions successfully', function(done) {
        //uncomment below and update the code to test contractIdOptions
        //instance.contractIdOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contractIdPost', function() {
      it('should call contractIdPost successfully', function(done) {
        //uncomment below and update the code to test contractIdPost
        //instance.contractIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contractOptions', function() {
      it('should call contractOptions successfully', function(done) {
        //uncomment below and update the code to test contractOptions
        //instance.contractOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('contractPost', function() {
      it('should call contractPost successfully', function(done) {
        //uncomment below and update the code to test contractPost
        //instance.contractPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('echoOptions', function() {
      it('should call echoOptions successfully', function(done) {
        //uncomment below and update the code to test echoOptions
        //instance.echoOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('erc20AddressGet', function() {
      it('should call erc20AddressGet successfully', function(done) {
        //uncomment below and update the code to test erc20AddressGet
        //instance.erc20AddressGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('erc20AddressOptions', function() {
      it('should call erc20AddressOptions successfully', function(done) {
        //uncomment below and update the code to test erc20AddressOptions
        //instance.erc20AddressOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('erc20AddressPost', function() {
      it('should call erc20AddressPost successfully', function(done) {
        //uncomment below and update the code to test erc20AddressPost
        //instance.erc20AddressPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('erc20Get', function() {
      it('should call erc20Get successfully', function(done) {
        //uncomment below and update the code to test erc20Get
        //instance.erc20Get(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('erc20Options', function() {
      it('should call erc20Options successfully', function(done) {
        //uncomment below and update the code to test erc20Options
        //instance.erc20Options(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('erc20Post', function() {
      it('should call erc20Post successfully', function(done) {
        //uncomment below and update the code to test erc20Post
        //instance.erc20Post(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keyGet', function() {
      it('should call keyGet successfully', function(done) {
        //uncomment below and update the code to test keyGet
        //instance.keyGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keyKeyDelete', function() {
      it('should call keyKeyDelete successfully', function(done) {
        //uncomment below and update the code to test keyKeyDelete
        //instance.keyKeyDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keyKeyOptions', function() {
      it('should call keyKeyOptions successfully', function(done) {
        //uncomment below and update the code to test keyKeyOptions
        //instance.keyKeyOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keyOptions', function() {
      it('should call keyOptions successfully', function(done) {
        //uncomment below and update the code to test keyOptions
        //instance.keyOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('keyPost', function() {
      it('should call keyPost successfully', function(done) {
        //uncomment below and update the code to test keyPost
        //instance.keyPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rootOptions', function() {
      it('should call rootOptions successfully', function(done) {
        //uncomment below and update the code to test rootOptions
        //instance.rootOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionHashGet', function() {
      it('should call transactionHashGet successfully', function(done) {
        //uncomment below and update the code to test transactionHashGet
        //instance.transactionHashGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionHashOptions', function() {
      it('should call transactionHashOptions successfully', function(done) {
        //uncomment below and update the code to test transactionHashOptions
        //instance.transactionHashOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionHashReceiptGet', function() {
      it('should call transactionHashReceiptGet successfully', function(done) {
        //uncomment below and update the code to test transactionHashReceiptGet
        //instance.transactionHashReceiptGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionHashReceiptOptions', function() {
      it('should call transactionHashReceiptOptions successfully', function(done) {
        //uncomment below and update the code to test transactionHashReceiptOptions
        //instance.transactionHashReceiptOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionOptions', function() {
      it('should call transactionOptions successfully', function(done) {
        //uncomment below and update the code to test transactionOptions
        //instance.transactionOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('transactionPost', function() {
      it('should call transactionPost successfully', function(done) {
        //uncomment below and update the code to test transactionPost
        //instance.transactionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionGet', function() {
      it('should call versionGet successfully', function(done) {
        //uncomment below and update the code to test versionGet
        //instance.versionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('versionOptions', function() {
      it('should call versionOptions successfully', function(done) {
        //uncomment below and update the code to test versionOptions
        //instance.versionOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountGet', function() {
      it('should call walletAccountGet successfully', function(done) {
        //uncomment below and update the code to test walletAccountGet
        //instance.walletAccountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountIdContractPost', function() {
      it('should call walletAccountIdContractPost successfully', function(done) {
        //uncomment below and update the code to test walletAccountIdContractPost
        //instance.walletAccountIdContractPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountIdErc20Post', function() {
      it('should call walletAccountIdErc20Post successfully', function(done) {
        //uncomment below and update the code to test walletAccountIdErc20Post
        //instance.walletAccountIdErc20Post(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountIdGet', function() {
      it('should call walletAccountIdGet successfully', function(done) {
        //uncomment below and update the code to test walletAccountIdGet
        //instance.walletAccountIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountIdOptions', function() {
      it('should call walletAccountIdOptions successfully', function(done) {
        //uncomment below and update the code to test walletAccountIdOptions
        //instance.walletAccountIdOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountIdPayOptions', function() {
      it('should call walletAccountIdPayOptions successfully', function(done) {
        //uncomment below and update the code to test walletAccountIdPayOptions
        //instance.walletAccountIdPayOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountIdPayPost', function() {
      it('should call walletAccountIdPayPost successfully', function(done) {
        //uncomment below and update the code to test walletAccountIdPayPost
        //instance.walletAccountIdPayPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountOptions', function() {
      it('should call walletAccountOptions successfully', function(done) {
        //uncomment below and update the code to test walletAccountOptions
        //instance.walletAccountOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletAccountPost', function() {
      it('should call walletAccountPost successfully', function(done) {
        //uncomment below and update the code to test walletAccountPost
        //instance.walletAccountPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletGet', function() {
      it('should call walletGet successfully', function(done) {
        //uncomment below and update the code to test walletGet
        //instance.walletGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletOptions', function() {
      it('should call walletOptions successfully', function(done) {
        //uncomment below and update the code to test walletOptions
        //instance.walletOptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('walletPost', function() {
      it('should call walletPost successfully', function(done) {
        //uncomment below and update the code to test walletPost
        //instance.walletPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
