# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlayableItem(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, image_url: str=None, pid: str=None, title: str=None, type: str=None, version_pid: str=None):
        """PlayableItem - a model defined in OpenAPI

        :param description: The description of this PlayableItem.
        :param image_url: The image_url of this PlayableItem.
        :param pid: The pid of this PlayableItem.
        :param title: The title of this PlayableItem.
        :param type: The type of this PlayableItem.
        :param version_pid: The version_pid of this PlayableItem.
        """
        self.openapi_types = {
            'description': str,
            'image_url': str,
            'pid': str,
            'title': str,
            'type': str,
            'version_pid': str
        }

        self.attribute_map = {
            'description': 'description',
            'image_url': 'image_url',
            'pid': 'pid',
            'title': 'title',
            'type': 'type',
            'version_pid': 'version_pid'
        }

        self._description = description
        self._image_url = image_url
        self._pid = pid
        self._title = title
        self._type = type
        self._version_pid = version_pid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayableItem':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlayableItem of this PlayableItem.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PlayableItem.


        :return: The description of this PlayableItem.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PlayableItem.


        :param description: The description of this PlayableItem.
        :type description: str
        """

        self._description = description

    @property
    def image_url(self):
        """Gets the image_url of this PlayableItem.


        :return: The image_url of this PlayableItem.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this PlayableItem.


        :param image_url: The image_url of this PlayableItem.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def pid(self):
        """Gets the pid of this PlayableItem.


        :return: The pid of this PlayableItem.
        :rtype: str
        """
        return self._pid

    @pid.setter
    def pid(self, pid):
        """Sets the pid of this PlayableItem.


        :param pid: The pid of this PlayableItem.
        :type pid: str
        """

        self._pid = pid

    @property
    def title(self):
        """Gets the title of this PlayableItem.


        :return: The title of this PlayableItem.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PlayableItem.


        :param title: The title of this PlayableItem.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this PlayableItem.


        :return: The type of this PlayableItem.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PlayableItem.


        :param type: The type of this PlayableItem.
        :type type: str
        """

        self._type = type

    @property
    def version_pid(self):
        """Gets the version_pid of this PlayableItem.


        :return: The version_pid of this PlayableItem.
        :rtype: str
        """
        return self._version_pid

    @version_pid.setter
    def version_pid(self, version_pid):
        """Sets the version_pid of this PlayableItem.


        :param version_pid: The version_pid of this PlayableItem.
        :type version_pid: str
        """

        self._version_pid = version_pid
