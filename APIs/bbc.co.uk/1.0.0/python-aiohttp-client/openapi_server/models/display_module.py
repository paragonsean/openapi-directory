# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DisplayModule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, title: str=None, type: str=None, uri: str=None):
        """DisplayModule - a model defined in OpenAPI

        :param description: The description of this DisplayModule.
        :param title: The title of this DisplayModule.
        :param type: The type of this DisplayModule.
        :param uri: The uri of this DisplayModule.
        """
        self.openapi_types = {
            'description': str,
            'title': str,
            'type': str,
            'uri': str
        }

        self.attribute_map = {
            'description': 'description',
            'title': 'title',
            'type': 'type',
            'uri': 'uri'
        }

        self._description = description
        self._title = title
        self._type = type
        self._uri = uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DisplayModule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DisplayModule of this DisplayModule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this DisplayModule.


        :return: The description of this DisplayModule.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this DisplayModule.


        :param description: The description of this DisplayModule.
        :type description: str
        """

        self._description = description

    @property
    def title(self):
        """Gets the title of this DisplayModule.


        :return: The title of this DisplayModule.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this DisplayModule.


        :param title: The title of this DisplayModule.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this DisplayModule.


        :return: The type of this DisplayModule.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this DisplayModule.


        :param type: The type of this DisplayModule.
        :type type: str
        """

        self._type = type

    @property
    def uri(self):
        """Gets the uri of this DisplayModule.


        :return: The uri of this DisplayModule.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this DisplayModule.


        :param uri: The uri of this DisplayModule.
        :type uri: str
        """

        self._uri = uri
