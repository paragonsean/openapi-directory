# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.personalised_music_clip_parent_programme import PersonalisedMusicClipParentProgramme
from openapi_server.models.personalised_music_version import PersonalisedMusicVersion
from openapi_server import util


class PersonalisedMusicClip(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contributors: List[str]=None, end_date: str=None, entity_type: str=None, image_url: str=None, masterbrand_mid: str=None, media_type: str=None, parent_programme: PersonalisedMusicClipParentProgramme=None, pid: str=None, start_date: str=None, synopsis: str=None, title: str=None, version: PersonalisedMusicVersion=None):
        """PersonalisedMusicClip - a model defined in OpenAPI

        :param contributors: The contributors of this PersonalisedMusicClip.
        :param end_date: The end_date of this PersonalisedMusicClip.
        :param entity_type: The entity_type of this PersonalisedMusicClip.
        :param image_url: The image_url of this PersonalisedMusicClip.
        :param masterbrand_mid: The masterbrand_mid of this PersonalisedMusicClip.
        :param media_type: The media_type of this PersonalisedMusicClip.
        :param parent_programme: The parent_programme of this PersonalisedMusicClip.
        :param pid: The pid of this PersonalisedMusicClip.
        :param start_date: The start_date of this PersonalisedMusicClip.
        :param synopsis: The synopsis of this PersonalisedMusicClip.
        :param title: The title of this PersonalisedMusicClip.
        :param version: The version of this PersonalisedMusicClip.
        """
        self.openapi_types = {
            'contributors': List[str],
            'end_date': str,
            'entity_type': str,
            'image_url': str,
            'masterbrand_mid': str,
            'media_type': str,
            'parent_programme': PersonalisedMusicClipParentProgramme,
            'pid': str,
            'start_date': str,
            'synopsis': str,
            'title': str,
            'version': PersonalisedMusicVersion
        }

        self.attribute_map = {
            'contributors': 'contributors',
            'end_date': 'endDate',
            'entity_type': 'entityType',
            'image_url': 'imageUrl',
            'masterbrand_mid': 'masterbrandMid',
            'media_type': 'mediaType',
            'parent_programme': 'parentProgramme',
            'pid': 'pid',
            'start_date': 'startDate',
            'synopsis': 'synopsis',
            'title': 'title',
            'version': 'version'
        }

        self._contributors = contributors
        self._end_date = end_date
        self._entity_type = entity_type
        self._image_url = image_url
        self._masterbrand_mid = masterbrand_mid
        self._media_type = media_type
        self._parent_programme = parent_programme
        self._pid = pid
        self._start_date = start_date
        self._synopsis = synopsis
        self._title = title
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonalisedMusicClip':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PersonalisedMusicClip of this PersonalisedMusicClip.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contributors(self):
        """Gets the contributors of this PersonalisedMusicClip.


        :return: The contributors of this PersonalisedMusicClip.
        :rtype: List[str]
        """
        return self._contributors

    @contributors.setter
    def contributors(self, contributors):
        """Sets the contributors of this PersonalisedMusicClip.


        :param contributors: The contributors of this PersonalisedMusicClip.
        :type contributors: List[str]
        """

        self._contributors = contributors

    @property
    def end_date(self):
        """Gets the end_date of this PersonalisedMusicClip.


        :return: The end_date of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this PersonalisedMusicClip.


        :param end_date: The end_date of this PersonalisedMusicClip.
        :type end_date: str
        """

        self._end_date = end_date

    @property
    def entity_type(self):
        """Gets the entity_type of this PersonalisedMusicClip.


        :return: The entity_type of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this PersonalisedMusicClip.


        :param entity_type: The entity_type of this PersonalisedMusicClip.
        :type entity_type: str
        """

        self._entity_type = entity_type

    @property
    def image_url(self):
        """Gets the image_url of this PersonalisedMusicClip.


        :return: The image_url of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this PersonalisedMusicClip.


        :param image_url: The image_url of this PersonalisedMusicClip.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def masterbrand_mid(self):
        """Gets the masterbrand_mid of this PersonalisedMusicClip.


        :return: The masterbrand_mid of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._masterbrand_mid

    @masterbrand_mid.setter
    def masterbrand_mid(self, masterbrand_mid):
        """Sets the masterbrand_mid of this PersonalisedMusicClip.


        :param masterbrand_mid: The masterbrand_mid of this PersonalisedMusicClip.
        :type masterbrand_mid: str
        """

        self._masterbrand_mid = masterbrand_mid

    @property
    def media_type(self):
        """Gets the media_type of this PersonalisedMusicClip.


        :return: The media_type of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this PersonalisedMusicClip.


        :param media_type: The media_type of this PersonalisedMusicClip.
        :type media_type: str
        """

        self._media_type = media_type

    @property
    def parent_programme(self):
        """Gets the parent_programme of this PersonalisedMusicClip.


        :return: The parent_programme of this PersonalisedMusicClip.
        :rtype: PersonalisedMusicClipParentProgramme
        """
        return self._parent_programme

    @parent_programme.setter
    def parent_programme(self, parent_programme):
        """Sets the parent_programme of this PersonalisedMusicClip.


        :param parent_programme: The parent_programme of this PersonalisedMusicClip.
        :type parent_programme: PersonalisedMusicClipParentProgramme
        """

        self._parent_programme = parent_programme

    @property
    def pid(self):
        """Gets the pid of this PersonalisedMusicClip.


        :return: The pid of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._pid

    @pid.setter
    def pid(self, pid):
        """Sets the pid of this PersonalisedMusicClip.


        :param pid: The pid of this PersonalisedMusicClip.
        :type pid: str
        """

        self._pid = pid

    @property
    def start_date(self):
        """Gets the start_date of this PersonalisedMusicClip.


        :return: The start_date of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this PersonalisedMusicClip.


        :param start_date: The start_date of this PersonalisedMusicClip.
        :type start_date: str
        """

        self._start_date = start_date

    @property
    def synopsis(self):
        """Gets the synopsis of this PersonalisedMusicClip.


        :return: The synopsis of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._synopsis

    @synopsis.setter
    def synopsis(self, synopsis):
        """Sets the synopsis of this PersonalisedMusicClip.


        :param synopsis: The synopsis of this PersonalisedMusicClip.
        :type synopsis: str
        """

        self._synopsis = synopsis

    @property
    def title(self):
        """Gets the title of this PersonalisedMusicClip.


        :return: The title of this PersonalisedMusicClip.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PersonalisedMusicClip.


        :param title: The title of this PersonalisedMusicClip.
        :type title: str
        """

        self._title = title

    @property
    def version(self):
        """Gets the version of this PersonalisedMusicClip.


        :return: The version of this PersonalisedMusicClip.
        :rtype: PersonalisedMusicVersion
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this PersonalisedMusicClip.


        :param version: The version of this PersonalisedMusicClip.
        :type version: PersonalisedMusicVersion
        """

        self._version = version
