# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.podcast import Podcast
from openapi_server import util


class PodcastsFeatured(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, featured_podcasts: List[Podcast]=None, title: str=None, type: str=None):
        """PodcastsFeatured - a model defined in OpenAPI

        :param featured_podcasts: The featured_podcasts of this PodcastsFeatured.
        :param title: The title of this PodcastsFeatured.
        :param type: The type of this PodcastsFeatured.
        """
        self.openapi_types = {
            'featured_podcasts': List[Podcast],
            'title': str,
            'type': str
        }

        self.attribute_map = {
            'featured_podcasts': 'featured_podcasts',
            'title': 'title',
            'type': 'type'
        }

        self._featured_podcasts = featured_podcasts
        self._title = title
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PodcastsFeatured':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PodcastsFeatured of this PodcastsFeatured.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def featured_podcasts(self):
        """Gets the featured_podcasts of this PodcastsFeatured.


        :return: The featured_podcasts of this PodcastsFeatured.
        :rtype: List[Podcast]
        """
        return self._featured_podcasts

    @featured_podcasts.setter
    def featured_podcasts(self, featured_podcasts):
        """Sets the featured_podcasts of this PodcastsFeatured.


        :param featured_podcasts: The featured_podcasts of this PodcastsFeatured.
        :type featured_podcasts: List[Podcast]
        """

        self._featured_podcasts = featured_podcasts

    @property
    def title(self):
        """Gets the title of this PodcastsFeatured.


        :return: The title of this PodcastsFeatured.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this PodcastsFeatured.


        :param title: The title of this PodcastsFeatured.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this PodcastsFeatured.


        :return: The type of this PodcastsFeatured.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this PodcastsFeatured.


        :param type: The type of this PodcastsFeatured.
        :type type: str
        """

        self._type = type
