# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PersonalisedMusicPlaylistVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, duration: str=None, expires_at: str=None, id: str=None, starts_at: str=None, warnings: List[str]=None):
        """PersonalisedMusicPlaylistVersion - a model defined in OpenAPI

        :param duration: The duration of this PersonalisedMusicPlaylistVersion.
        :param expires_at: The expires_at of this PersonalisedMusicPlaylistVersion.
        :param id: The id of this PersonalisedMusicPlaylistVersion.
        :param starts_at: The starts_at of this PersonalisedMusicPlaylistVersion.
        :param warnings: The warnings of this PersonalisedMusicPlaylistVersion.
        """
        self.openapi_types = {
            'duration': str,
            'expires_at': str,
            'id': str,
            'starts_at': str,
            'warnings': List[str]
        }

        self.attribute_map = {
            'duration': 'duration',
            'expires_at': 'expires_at',
            'id': 'id',
            'starts_at': 'starts_at',
            'warnings': 'warnings'
        }

        self._duration = duration
        self._expires_at = expires_at
        self._id = id
        self._starts_at = starts_at
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PersonalisedMusicPlaylistVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PersonalisedMusicPlaylistVersion of this PersonalisedMusicPlaylistVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def duration(self):
        """Gets the duration of this PersonalisedMusicPlaylistVersion.


        :return: The duration of this PersonalisedMusicPlaylistVersion.
        :rtype: str
        """
        return self._duration

    @duration.setter
    def duration(self, duration):
        """Sets the duration of this PersonalisedMusicPlaylistVersion.


        :param duration: The duration of this PersonalisedMusicPlaylistVersion.
        :type duration: str
        """

        self._duration = duration

    @property
    def expires_at(self):
        """Gets the expires_at of this PersonalisedMusicPlaylistVersion.


        :return: The expires_at of this PersonalisedMusicPlaylistVersion.
        :rtype: str
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this PersonalisedMusicPlaylistVersion.


        :param expires_at: The expires_at of this PersonalisedMusicPlaylistVersion.
        :type expires_at: str
        """

        self._expires_at = expires_at

    @property
    def id(self):
        """Gets the id of this PersonalisedMusicPlaylistVersion.


        :return: The id of this PersonalisedMusicPlaylistVersion.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PersonalisedMusicPlaylistVersion.


        :param id: The id of this PersonalisedMusicPlaylistVersion.
        :type id: str
        """

        self._id = id

    @property
    def starts_at(self):
        """Gets the starts_at of this PersonalisedMusicPlaylistVersion.


        :return: The starts_at of this PersonalisedMusicPlaylistVersion.
        :rtype: str
        """
        return self._starts_at

    @starts_at.setter
    def starts_at(self, starts_at):
        """Sets the starts_at of this PersonalisedMusicPlaylistVersion.


        :param starts_at: The starts_at of this PersonalisedMusicPlaylistVersion.
        :type starts_at: str
        """

        self._starts_at = starts_at

    @property
    def warnings(self):
        """Gets the warnings of this PersonalisedMusicPlaylistVersion.


        :return: The warnings of this PersonalisedMusicPlaylistVersion.
        :rtype: List[str]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this PersonalisedMusicPlaylistVersion.


        :param warnings: The warnings of this PersonalisedMusicPlaylistVersion.
        :type warnings: List[str]
        """
        if warnings is None:
            raise ValueError("Invalid value for `warnings`, must not be `None`")

        self._warnings = warnings
