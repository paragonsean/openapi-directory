openapi: 3.0.1
info:
  description: We encapsulate Radio & Music business logic for iPlayer Radio and BBC
    Music products on all platforms. We add value by reliably providing the right
    blend of metadata needed by clients.
  title: Radio & Music Services
  version: 1.0.0
  x-apisguru-categories:
  - media
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://upload.wikimedia.org/wikipedia/commons/thumb/6/63/BBC_Radio_logo.svg/140px-BBC_Radio_logo.svg.png
  x-origin:
  - format: swagger
    url: https://rms.api.bbc.co.uk/docs/swagger.json
    version: "2.0"
  x-providerName: bbc.co.uk
servers:
- url: https://rms.api.bbc.co.uk/
tags:
- name: Experience
- description: <a href="https://confluence.dev.bbc.co.uk/display/RMServices/Playspace+API+Client+Documetation">Client
    Documentation</a>
  name: Playspace
- name: Categories
- name: Networks
- name: Broadcasts
- name: Collections
- name: Podcasts
- name: Programmes
- name: Personalised Categories
- name: Personalised Networks
- name: Personalised Plays
- name: Radio
- name: Music
- name: Music Export
paths:
  /broadcasts:
    get:
      description: |
        All broadcasts
      operationId: broadcasts_get
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Filter by Service ID. E.g. bbc_radio_fourfm
        in: query
        name: service_id
        schema:
          type: string
      - description: Filter by date. E.g. 2016-06-17
        in: query
        name: date
        schema:
          type: string
      - description: "Sort by provided query. E.g. 'start_at' sorts in ascending order,\
          \ and '-start_at' sorts in descending order"
        in: query
        name: sort
        schema:
          enum:
          - start_at
          - -start_at
          - end_at
          - -end_at
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Broadcasts
      tags:
      - Broadcasts
      x-openapi-router-controller: openapi_server.controllers.broadcasts_controller
  /broadcasts/latest:
    get:
      description: |
        Broadcasts for the current day
      operationId: broadcasts_latest_get
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Filter by Service ID. E.g. bbc_radio_fourfm
        in: query
        name: service_id
        schema:
          type: string
      - description: Filter what is on air. E.g. 'now' returns current programme being
          broadcasted.
        in: query
        name: on_air
        schema:
          enum:
          - now
          - previous
          - next
          type: string
      - description: Filter what will be on air next in minutes. E.g. '240' returns
          programmes broadcasted in the next four hurs
        in: query
        name: next
        schema:
          type: string
      - description: Filter what was on air previously in minutes. E.g. '240' returns
          programmes broadcasted in the previous four hurs
        in: query
        name: previous
        schema:
          type: string
      - description: "Sort by provided query. E.g. 'start_at' sorts in ascending order,\
          \ and '-start_at' sorts in descending order"
        in: query
        name: sort
        schema:
          enum:
          - start_at
          - -start_at
          - end_at
          - -end_at
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Latest Broadcasts
      tags:
      - Broadcasts
      x-openapi-router-controller: openapi_server.controllers.broadcasts_controller
  /broadcasts/{pid}:
    get:
      description: |
        Find broadcast by PID
      operationId: get_broadcast_by_pid
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastsResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Broadcasts by PID
      tags:
      - Broadcasts
      x-openapi-router-controller: openapi_server.controllers.broadcasts_controller
  /categories:
    get:
      description: |
        Retrieve Categories
      operationId: categories_get
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Filter by provided query. E.g. 'promoted' returns promoted categories
        in: query
        name: kind
        schema:
          enum:
          - promoted
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryErrorResponse'
          description: Unexpected error
      summary: List of categories
      tags:
      - Categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /categories/{id}:
    get:
      description: |
        Retrieve Categories by ID
      operationId: categories_id_get
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Retrieve information about the category. E.g. 'sport-football-europeanchampionship'
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoriesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryErrorResponse'
          description: Unexpected error
      summary: Category by ID
      tags:
      - Categories
      x-openapi-router-controller: openapi_server.controllers.categories_controller
  /collections/{pid}/members:
    get:
      description: |
        Episodes and Clips from Collection
      operationId: get_collection_members
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgrammesResponse'
          description: OK
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Collection not found
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Collection Members
      tags:
      - Collections
      x-openapi-router-controller: openapi_server.controllers.collections_controller
  /experience/homepage:
    get:
      description: |
        Homepage Experience
      operationId: get_experience_homepage
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExperienceResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Homepage Experience
      tags:
      - Experience
      x-openapi-router-controller: openapi_server.controllers.experience_controller
  /music/popular/artists:
    get:
      description: |
        List of Most Popular artists from BBC Music.
      operationId: get_music_popular_artists
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period
          and now
        in: query
        name: since
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since'
          and 'until' date params
        in: query
        name: until
        schema:
          type: string
      - description: "In addition to the overall score, return a list of scores broken\
          \ down by day N.B Must be used in conjunction with since and/or until and\
          \ since is >= 31 days"
        in: query
        name: decomposed
        schema:
          type: boolean
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityArtists'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityError'
          description: Unexpected error
      summary: Popular Artists
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /music/popular/artists/{id}:
    get:
      description: |
        Popularity Artist By Id
      operationId: get_music_popular_artist_by_id
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period
          and now
        in: query
        name: since
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since'
          and 'until' date params
        in: query
        name: until
        schema:
          type: string
      - description: "In addition to the overall score, return a list of scores broken\
          \ down by day N.B Must be used in conjunction with since and/or until and\
          \ since is >= 31 days"
        in: query
        name: decomposed
        schema:
          type: boolean
      - description: MusicBrainz Id - Used to get single resource score
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityArtists'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityError'
          description: Unexpected error
      summary: Single Artist Popularity
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /music/popular/playlists:
    get:
      description: |
        List of Most Popular playlists from BBC Music.
      operationId: get_music_popular_playlists
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period
          and now
        in: query
        name: since
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since'
          and 'until' date params
        in: query
        name: until
        schema:
          type: string
      - description: "In addition to the overall score, return a list of scores broken\
          \ down by day N.B Must be used in conjunction with since and/or until and\
          \ since is >= 31 days"
        in: query
        name: decomposed
        schema:
          type: boolean
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityPlaylists'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityError'
          description: Unexpected error
      summary: Popular Playlists
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /music/popular/playlists/{id}:
    get:
      description: |
        Popular playlist by Id
      operationId: get_music_popular_playlist_by_id
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period
          and now
        in: query
        name: since
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since'
          and 'until' date params
        in: query
        name: until
        schema:
          type: string
      - description: "In addition to the overall score, return a list of scores broken\
          \ down by day N.B Must be used in conjunction with since and/or until and\
          \ since is >= 31 days"
        in: query
        name: decomposed
        schema:
          type: boolean
      - description: BBC Music Playlist Id - Used to get single resource score
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityPlaylists'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityError'
          description: Unexpected error
      summary: Single Playlist Popularity
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /music/popular/tracks:
    get:
      description: |
        List of popular tracks for BBC Music. Filter by time, network, artist, playlist or programme.
      operationId: get_music_popular_tracks
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period
          and now
        in: query
        name: since
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since'
          and 'until' date params
        in: query
        name: until
        schema:
          type: string
      - description: Return items with given Network ID
        in: query
        name: network
        schema:
          type: string
      - description: Items with given Programme Pid
        in: query
        name: programme
        schema:
          type: string
      - description: MusicBrainz artist ID
        in: query
        name: artist
        schema:
          type: string
      - description: "In addition to the overall score, return a list of scores broken\
          \ down by day N.B Must be used in conjunction with since and/or until and\
          \ since is >= 31 days"
        in: query
        name: decomposed
        schema:
          type: boolean
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityTracks'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityError'
          description: Unexpected error
      summary: Popular Tracks
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /music/popular/tracks/{id}:
    get:
      description: |
        Popular Track for BBC Music
      operationId: get_music_popular_track_by_id
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period
          and now
        in: query
        name: since
        schema:
          type: string
      - description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since'
          and 'until' date params
        in: query
        name: until
        schema:
          type: string
      - description: Return items with given Network ID
        in: query
        name: network
        schema:
          type: string
      - description: Items with given Programme Pid
        in: query
        name: programme
        schema:
          type: string
      - description: MusicBrainz artist ID
        in: query
        name: artist
        schema:
          type: string
      - description: "In addition to the overall score, return a list of scores broken\
          \ down by day N.B Must be used in conjunction with since and/or until and\
          \ since is >= 31 days"
        in: query
        name: decomposed
        schema:
          type: boolean
      - description: BBC Music Track Id - Used to get single resource score
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityTracks'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicPopularityError'
          description: Unexpected error
      summary: Single Track Popularity
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /my/categories/follows:
    delete:
      operationId: my_categories_follows_delete
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_1'
        required: true
        x-body-name: Body
      responses:
        "202":
          content: {}
          description: Request successfully sent to UAS.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request was malformed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
      summary: Unfollow category
      tags:
      - Personalised Categories
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.personalised_categories_controller
    get:
      description: |
        List of followed categories for a given user.
      operationId: my_categories_follows_get
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedCategoriesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: List of followed categories
      tags:
      - Personalised Categories
      x-openapi-router-controller: openapi_server.controllers.personalised_categories_controller
    post:
      operationId: my_categories_follows_post
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body'
        required: true
        x-body-name: Body
      responses:
        "202":
          content: {}
          description: Request successfully sent to UAS.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request was malformed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
      summary: Follow category
      tags:
      - Personalised Categories
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.personalised_categories_controller
  /my/music/export:
    get:
      description: |
        Returns status of all previous third party export actions for a given BBC Music user.
      operationId: get_music_export
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportJob'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Exports
      tags:
      - Music Export
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
  /my/music/exports/jobs:
    get:
      description: |
        All items associated to a users export request
      operationId: get_music_export_jobs
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Boolean age check
        in: query
        name: over16
        required: true
        schema:
          type: boolean
      - description: Specify Vendor Jobs
        in: query
        name: vendor
        schema:
          enum:
          - spotify
          - deezer
          - youtube
          - itunes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportJob'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Jobs
      tags:
      - Music Export
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
    post:
      description: |
        Create Export Job for a user
      operationId: post_music_export_job
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Boolean age check
        in: query
        name: over16
        required: true
        schema:
          type: boolean
      - description: Specify Vendor Jobs
        in: query
        name: vendor
        schema:
          enum:
          - spotify
          - deezer
          - youtube
          - itunes
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/MusicExportJob'
              type: array
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Jobs
      tags:
      - Music Export
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
  /my/music/exports/tracks:
    get:
      description: |
        Retrieves vendor and status specific tracks
      operationId: get_music_export_tracks
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Boolean age check
        in: query
        name: over16
        required: true
        schema:
          type: boolean
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Specify Vendor Tracks
        in: query
        name: vendor
        schema:
          enum:
          - spotify
          - deezer
          - youtube
          - itunes
          type: string
      - description: Specify Track status
        in: query
        name: status
        schema:
          enum:
          - failed
          - done
          - pending
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportJob'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Tracks
      tags:
      - Music Export
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
  /my/music/favourites:
    get:
      description: |
        List of favourited tracks and clips for a given user for BBC Music.
      operationId: get_personalised_music_favourites
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Filters activities based on the type of action
        in: query
        name: action
        schema:
          enum:
          - favourited
          - unfavourited
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Tracks or Clips
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
    post:
      description: |
        Add multiple tracks and/or clips to a BBC Music user's favourites.

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_music_favourites_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedMusicBatchRequest'
              type: array
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Tracks or Clips
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
    put:
      description: |
        Update tracks or clips from a BBC Music user favourites.

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_music_favourites_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedMusicBatchRequest'
              type: array
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Tracks or Clips
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /my/music/favourites/{type}:
    get:
      description: |
        List of favourited tracks or clips for a given user for BBC Music.
      operationId: get_personalised_music_favourites_by_type
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music favourite types: Clips or Tracks"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - tracks
          type: string
      - description: Filters activities based on the type of action
        in: query
        name: action
        schema:
          enum:
          - favourited
          - unfavourited
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Tracks or Clips by Type
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /my/music/favourites/{type}/{id}:
    delete:
      description: |
        Delete track or clip from a BBC Music user favourites.
      operationId: delete_personalised_music_favourites_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music favourite types: Clips or Tracks"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - tracks
          type: string
      - description: Clip PID or Track ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Track or Clip
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
    get:
      description: |
        Check to see if a single track or clip entity is in a users favourites - determines UX of add button.
      operationId: get_personalised_music_favourites_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music favourite types: Clips or Tracks"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - tracks
          type: string
      - description: Clip PID or Track ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Track or Clip
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
    post:
      description: |
        Add track or clip to a BBC Music user favourites.

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_music_favourites_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music favourite types: Clips or Tracks"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - tracks
          type: string
      - description: Clip PID or Track ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedMusicRequest'
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Track or Clip
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
    put:
      description: |
        Update tracks or clips from a BBC Music user favourites.

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_music_favourites_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music favourite types: Clips or Tracks"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - tracks
          type: string
      - description: Clip PID or Track ID
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedMusicRequest'
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: Favourite Track or Clip
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /my/music/follows:
    get:
      description: |
        List of followed networks, categories, artists, playlists and genres for a given user for BBC Music.
      operationId: get_personalised_music_follows
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Filters activities based on the type of action
        in: query
        name: action
        schema:
          enum:
          - followed
          - unfollowed
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Networks, Categories, Artists, Playlists and Genres"
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
    post:
      description: |
        Add networks, categories, artists, playlists, networks, genres or services in a users follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_music_follows_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Filters activities based on the type of action
        in: query
        name: action
        schema:
          enum:
          - followed
          - unfollowed
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedMusicBatchRequest'
              type: array
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Networks, Categories, Artists, Playlists and Genres"
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
    put:
      description: |
        Update networks, categories, artists, playlists, networks, genres or services in a users follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_music_follows_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Filters activities based on the type of action
        in: query
        name: action
        schema:
          enum:
          - followed
          - unfollowed
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedMusicBatchRequest'
              type: array
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Networks, Categories, Artists, Playlists and Genres"
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /my/music/follows/{type}:
    get:
      description: |
        List of followed networks, categories, artists, playlists, networks, genres, categories or services for a given BBC Music user.
      operationId: get_personalised_music_follows_by_type
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music follows types: Playlists, Services, Genres &\
          \ Artists"
        in: path
        name: type
        required: true
        schema:
          enum:
          - playlists
          - services
          - networks
          - genres
          - categories
          - artists
          type: string
      - description: Filters activities based on the type of action
        in: query
        name: action
        schema:
          enum:
          - followed
          - unfollowed
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Networks, Categories, Artists, Playlists and Genres by Type"
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /my/music/follows/{type}/{id}:
    delete:
      description: |
        Remove a single network, category, artist, playlist, network, genre or service entity is in a users follows
      operationId: delete_personalised_music_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music follows types: Playlists, Services, Genres &\
          \ Artists"
        in: path
        name: type
        required: true
        schema:
          enum:
          - playlists
          - services
          - networks
          - genres
          - categories
          - artists
          type: string
      - description: "Playlists, Services, Networks, Genres, Categories or Artists\
          \ ID"
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Network, Category, Artist, Playlist and Genre"
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
    get:
      description: |
        Check to see if a single network, category, artist, playlist, network, genre or service entity is in a users follows - determines UX of add button.
      operationId: get_personalised_music_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music follows types: Playlists, Services, Genres &\
          \ Artists"
        in: path
        name: type
        required: true
        schema:
          enum:
          - playlists
          - services
          - networks
          - genres
          - categories
          - artists
          type: string
      - description: "Playlists, Services, Networks, Genres, Categories or Artists\
          \ ID"
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Network, Category, Artist, Playlist and Genre"
      tags:
      - Music
      x-openapi-router-controller: openapi_server.controllers.music_controller
    post:
      description: |
        Add a single network, category, artist, playlist, network, genre or service entity is in a users follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_music_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music follows types: Playlists, Services, Genres &\
          \ Artists"
        in: path
        name: type
        required: true
        schema:
          enum:
          - playlists
          - services
          - networks
          - genres
          - categories
          - artists
          type: string
      - description: "Playlists, Services, Networks, Genres, Categories or Artists\
          \ ID"
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedMusicRequest'
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Network, Category, Artist, Playlist and Genre"
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
    put:
      description: |
        Update a single network, category, artist, playlist, network, genre or service entity is in a users follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_music_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Music follows types: Playlists, Services, Genres &\
          \ Artists"
        in: path
        name: type
        required: true
        schema:
          enum:
          - playlists
          - services
          - networks
          - genres
          - categories
          - artists
          type: string
      - description: "Playlists, Services, Networks, Genres, Categories or Artists\
          \ ID"
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: "Omits music data from the response, defaults to true"
        in: query
        name: music-data
        schema:
          type: boolean
      - description: Specify context to be passed to Music API
        in: query
        name: music_context
        schema:
          enum:
          - events
          - ivote
          - music
          - musicplaylist
          - programmes
          - radio
          - unknown
          type: string
      - description: Specify location to be passed to Music API
        in: query
        name: music_within_uk
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedMusicRequest'
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedMusicErrorResponse'
          description: Unexpected error
      summary: "Followed Network, Category, Artist, Playlist and Genre"
      tags:
      - Music
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_controller
  /my/music/preferences/export:
    delete:
      description: |
        Remove export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.
      operationId: delete_music_preferences_export
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Preferences
      tags:
      - Music Export
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
    get:
      description: |
        Returns export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.
      operationId: get_music_preferences_export
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportPreferencesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Preferences
      tags:
      - Music Export
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
    post:
      description: |
        Create export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.
      operationId: post_music_preferences_export
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MusicExportPreferences'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportSuccess'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Preferences
      tags:
      - Music Export
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
  /my/music/preferences/export/{vendor}:
    delete:
      description: |
        Remove Vendor specific export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.
      operationId: delete_music_preferences_export_vendor
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Supported 3rd Party Vendor
        in: path
        name: vendor
        required: true
        schema:
          enum:
          - spotify
          - deezer
          - youtube
          - itunes
          type: string
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Vendor Preferences
      tags:
      - Music Export
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
    get:
      description: |
        Returns vendor specific export preferences for a given BBC Music user.
      operationId: get_music_preferences_export_vendor
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Supported 3rd Party Vendor
        in: path
        name: vendor
        required: true
        schema:
          enum:
          - spotify
          - deezer
          - youtube
          - itunes
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportPreferencesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Vendor Preferences
      tags:
      - Music Export
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
    post:
      description: |
        Create Vendor specific export preferences (e.g. 3rd party vendors, partner id's) for a given BBC Music user.
      operationId: post_music_preferences_export_vendor
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Supported 3rd Party Vendor
        in: path
        name: vendor
        required: true
        schema:
          enum:
          - spotify
          - deezer
          - youtube
          - itunes
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MusicExportPreferences'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Vendor Preferences
      tags:
      - Music Export
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
    put:
      description: |
        Update vendor specific export preferences for a given BBC Music user.
      operationId: put_music_preferences_export_vendor
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Supported 3rd Party Vendor
        in: path
        name: vendor
        required: true
        schema:
          enum:
          - spotify
          - deezer
          - youtube
          - itunes
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MusicExportPreferences'
        required: true
        x-body-name: body
      responses:
        "200":
          content: {}
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MusicExportErrorResponse'
          description: Unexpected error
      summary: Music Export Vendor Preferences
      tags:
      - Music Export
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.music_export_controller
  /my/networks/follows:
    delete:
      operationId: my_networks_follows_delete
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_3'
        required: true
        x-body-name: Body
      responses:
        "202":
          content: {}
          description: Request successfully sent to UAS.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request was malformed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
      summary: Unfollow network
      tags:
      - Personalised Networks
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.personalised_networks_controller
    get:
      description: |
        List of followed networks for a given user.
      operationId: my_networks_follows_get
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedNetworksResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: List of followed networks
      tags:
      - Personalised Networks
      x-openapi-router-controller: openapi_server.controllers.personalised_networks_controller
    post:
      operationId: my_networks_follows_post
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_2'
        required: true
        x-body-name: Body
      responses:
        "202":
          content: {}
          description: Request successfully sent to UAS.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request was malformed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
      summary: Follow network
      tags:
      - Personalised Networks
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.personalised_networks_controller
  /my/plays:
    post:
      operationId: my_plays_post
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Body_4'
        required: true
        x-body-name: Body
      responses:
        "202":
          content: {}
          description: Request successfully sent to UAS.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: The request was malformed.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
      summary: Write Play Event
      tags:
      - Personalised Plays
      x-codegen-request-body-name: Body
      x-openapi-router-controller: openapi_server.controllers.personalised_plays_controller
  /my/playspace/containers/suggested:
    get:
      description: |
        Suggested Playspace Container
      operationId: suggest_container
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Clip or Episode PID of the previous or first content item in
          the Playspace stream.
        in: query
        name: previous_pid
        required: true
        schema:
          type: string
      - description: Container ID of the previous container in the Playspace stream.
        in: query
        name: previous_container
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayspaceContainer'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
      summary: Suggested Playspace Container
      tags:
      - Playspace
      x-openapi-router-controller: openapi_server.controllers.playspace_controller
  /my/playspace/containers/{id}:
    get:
      description: |
        Playspace Container by ID
      operationId: get_container
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Playspace Container ID
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayspaceContainer'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: No Playspace container with given ID could be found.
      summary: Playspace Container by ID
      tags:
      - Playspace
      x-openapi-router-controller: openapi_server.controllers.playspace_controller
  /my/programmes/recommendations:
    get:
      description: |
        Recommended Programmes from the Audience Platforms' Recomendations Service
      operationId: get_recommendations
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Only return available results for the web/mobile.
        in: query
        name: rights
        required: true
        schema:
          enum:
          - web
          - mobile
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgrammesResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: There was an error with the supplied `Authorization` header.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unexpected error
      summary: Recommended Programmes
      tags:
      - Programmes
      x-openapi-router-controller: openapi_server.controllers.programmes_controller
  /my/radio/favourites:
    get:
      description: |
        List of favourited episodes and clips for a given user for iPlayer Radio.

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_personalised_radio_favourites
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Sort order for Personalised Radio results
        in: query
        name: sort
        schema:
          enum:
          - programme_titles
          - available_from_date
          - available_to_date
          type: string
      - description: Include items which have been 'soft' unfavourited in response.
          I.e items with UAS type of 'unfavourited'
        in: query
        name: show_all_activity
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episodes and Clips
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    post:
      description: |
        Add User favourites

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_radio_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedRadioBatchRequest'
              type: array
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episodes and Clips
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    put:
      description: |
        Update user favourites

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_radio_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedRadioBatchRequest'
              type: array
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episodes and Clips
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
  /my/radio/favourites/{type}:
    get:
      description: |
        List of followed 'clips' or 'episode' items for a given iPlayer Radio user

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_personalised_radio_favourites_by_type
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio favourite types: Clips or Episodes"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - episodes
          type: string
      - description: Sort order for Personalised Radio results
        in: query
        name: sort
        schema:
          enum:
          - programme_titles
          - available_from_date
          - available_to_date
          type: string
      - description: Include items which have been 'soft' unfavourited in response.
          I.e items with UAS type of 'unfavourited'
        in: query
        name: show_all_activity
        schema:
          type: boolean
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episodes and Clips by Type
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
  /my/radio/favourites/{type}/{pid}:
    delete:
      description: |
        Remove User favourite
      operationId: delete_personalised_radio_by_activity_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio favourite types: Clips or Episodes"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - episodes
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episode or Clip
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    get:
      description: |
        Check to see if a single clip or episode entity is in a users favourites - determines UX of add button.

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_personalised_radio_by_activity_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio favourite types: Clips or Episodes"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - episodes
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      - description: Include items which have been 'soft' unfavourited in response.
          I.e items with UAS type of 'unfavourited'
        in: query
        name: show_all_activity
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episode or Clip
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    post:
      description: |
        Add User favourite

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_radio_by_activity_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio favourite types: Clips or Episodes"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - episodes
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedRadioRequest'
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episode or Clip
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    put:
      description: |
        Update user favourite

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_radio_by_activity_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio favourite types: Clips or Episodes"
        in: path
        name: type
        required: true
        schema:
          enum:
          - clips
          - episodes
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedRadioRequest'
        description: Action favourited or unfavourited
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Favourite Episode or Clip
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
  /my/radio/follows:
    get:
      description: |
        List of favourited brands and series for a given user for iPlayer Radio.

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_personalised_radio_follows
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Sort order for Personalised Radio results
        in: query
        name: sort
        schema:
          enum:
          - programme_titles
          - available_from_date
          - available_to_date
          type: string
      - description: Include items which have been 'soft' unfollowed in response.
          I.e items with UAS type of 'unfollowed'
        in: query
        name: show_all_activity
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brands and Series
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    post:
      description: |
        Add 'brand' or 'series' items to a users iPlayer Radio follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_radio_follows_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedRadioBatchRequest'
              type: array
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brands and Series
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    put:
      description: |
        Update 'brands' or 'series' items from a users iPlayer Radio follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_radio_follows_batch
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PersonalisedRadioBatchRequest'
              type: array
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brands and Series
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
  /my/radio/follows/{type}:
    get:
      description: |
        List of followed 'brand' or 'series' items for a given iPlayer Radio user

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_personalised_radio_follows_by_type
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio follows types: Brands or Series"
        in: path
        name: type
        required: true
        schema:
          enum:
          - brands
          - series
          type: string
      - description: Sort order for Personalised Radio results
        in: query
        name: sort
        schema:
          enum:
          - programme_titles
          - available_from_date
          - available_to_date
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Include items which have been 'soft' unfollowed in response.
          I.e items with UAS type of 'unfollowed'
        in: query
        name: show_all_activity
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brands or Series by Type
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
  /my/radio/follows/{type}/{pid}:
    delete:
      description: |
        Remove 'brand' or 'series' items from a users iPlayer Radio follows
      operationId: delete_personalised_radio_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio follows types: Brands or Series"
        in: path
        name: type
        required: true
        schema:
          enum:
          - brands
          - series
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brand or Series
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    get:
      description: |
        Check to see if a single brand or series entity is in a users follows - determines UX of add button.
      operationId: get_personalised_radio_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio follows types: Brands or Series"
        in: path
        name: type
        required: true
        schema:
          enum:
          - brands
          - series
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brand or Series
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    post:
      description: |
        Add 'brand' or 'series' items from a users iPlayer Radio follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: post_personalised_radio_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio follows types: Brands or Series"
        in: path
        name: type
        required: true
        schema:
          enum:
          - brands
          - series
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedRadioRequest'
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brand or Series
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
    put:
      description: |
        Update 'brand' or 'series' items from a users iPlayer Radio follows

        N.B. Any HTML tags submitted in metadata will be removed
      operationId: put_personalised_radio_follows_by_type_by_id
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Supported Radio follows types: Brands or Series"
        in: path
        name: type
        required: true
        schema:
          enum:
          - brands
          - series
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PersonalisedRadioRequest'
        description: Action followed or unfollowed
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioSuccessResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Followed Brand or Series
      tags:
      - Radio
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.radio_controller
  /my/radio/plays:
    get:
      description: |
        Returns mixed episode and clip plays for a given BBC iPlayer radio user.

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining data as a Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_personalised_radio_plays
      parameters:
      - description: Bearer OAUTH_TOKEN
        in: header
        name: Authorization
        required: true
        schema:
          default: Bearer OAUTH_TOKEN
          type: string
      - description: Authentication type
        in: header
        name: X-Authentication-Provider
        required: true
        schema:
          default: idv5
          type: string
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Sort order for Personalised Radio results
        in: query
        name: sort
        schema:
          enum:
          - programme_titles
          - available_from_date
          - available_to_date
          type: string
      - description: Include expired/unavailable items
        in: query
        name: show_all_activity
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalisedRadioErrorResponse'
          description: Unexpected error
      summary: Played Episode or Clip
      tags:
      - Radio
      x-openapi-router-controller: openapi_server.controllers.radio_controller
  /podcasts:
    get:
      description: |
        Retrieve all Podcasts
      operationId: get_podcasts
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      - description: Sort order for Podcasts results
        in: query
        name: sort
        schema:
          enum:
          - title
          - -title
          - available_from_date
          - -available_from_date
          type: string
      - description: Network Master Brand ID (mid)
        in: query
        name: network
        schema:
          type: string
      - description: Network URL key
        in: query
        name: network_url_key
        schema:
          type: string
      - description: Category ID
        in: query
        name: category
        schema:
          type: string
      - description: Search query String
        in: query
        name: q
        schema:
          type: string
      - description: "Local, National or Regional Coverage"
        in: query
        name: coverage
        schema:
          enum:
          - local
          - national
          - regional
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastErrorResponse'
          description: Unexpected error
      summary: All Podcasts
      tags:
      - Podcasts
      x-openapi-router-controller: openapi_server.controllers.podcasts_controller
  /podcasts/featured:
    get:
      description: |
        Retrieve featured podcasts
      operationId: get_podcasts_featured
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastsFeaturedResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastErrorResponse'
          description: Unexpected error
      summary: Featured Podcasts
      tags:
      - Podcasts
      x-openapi-router-controller: openapi_server.controllers.podcasts_controller
  /podcasts/{pid}:
    get:
      description: |
        Retrieve data about the podcast with the supplied PID
      operationId: get_podcast_by_pid
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastsResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastErrorResponse'
          description: Unexpected error
      summary: Podcast
      tags:
      - Podcasts
      x-openapi-router-controller: openapi_server.controllers.podcasts_controller
  /podcasts/{pid}/episodes:
    get:
      description: |
        Retrieve all episodes for a specific podcast
      operationId: get_podcast_episodes
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      - description: Paginated results offset
        in: query
        name: offset
        schema:
          type: integer
      - description: Paginated results limit
        in: query
        name: limit
        schema:
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastEpisodesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PodcastErrorResponse'
          description: Unexpected error
      summary: Podcast Episodes
      tags:
      - Podcasts
      x-openapi-router-controller: openapi_server.controllers.podcasts_controller
  /radio/networks.json:
    get:
      description: |
        All iPlayer Radio networks - contains business logic for masterbrand and service relationships
      operationId: get_radio_networks
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Returns all networks needed for iPlayer Radio responsive web
          navigation
        in: query
        name: preset
        schema:
          type: boolean
      - description: Returns all networks available internationally
        in: query
        name: international
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworksResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadioErrorResponse'
          description: Unexpected error
      summary: Networks
      tags:
      - Networks
      x-openapi-router-controller: openapi_server.controllers.networks_controller
  /radio/popular:
    get:
      description: |
        Retrieve Popular Episodes & Clips
      operationId: get_popular_episodes_clips
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: Programme type required. Accepts comma separated values
        in: query
        name: type
        schema:
          enum:
          - episode
          - clip
          - "episode,clip"
          type: string
      - description: Filter by deduplication rule. E.g. 'tleo' returns programmes
          with distinct top level episode objects
        in: query
        name: distinct
        schema:
          enum:
          - tleo
          type: string
      - description: Filter by network master brand ID (mid). Accepts comma separated
          values
        in: query
        name: network
        schema:
          type: string
      - description: Filter by network URL key. Accepts comma separated values
        in: query
        name: network_url_key
        schema:
          type: string
      - description: Filter by category. Accepts comma separated values
        in: query
        name: category
        schema:
          type: string
      - description: Filter by format. Accepts comma separated values
        in: query
        name: format
        schema:
          type: string
      - description: Filter by group. Accepts comma separated values
        in: query
        name: group
        schema:
          enum:
          - tv
          - radio
          - "tv,radio"
          type: string
      - description: Filter by programme media type. Accepts comma separated values
        in: query
        name: media_type
        schema:
          enum:
          - audio
          - video
          - "audio,video"
          type: string
      - description: "Filter by container. Accepts any pid e.g. brand,series,episode"
        in: query
        name: container
        schema:
          type: string
      - description: "Filter by media set name. Accepts comma separated combinations\
          \ of the following: pc,mobile-download,android-download-high,apple-ios-download-high,mobile-cellular-main,mobile-phone-main,iptv-all"
        explode: false
        in: query
        name: media_set
        schema:
          enum:
          - pc
          - mobile-download
          - android-download-high
          - apple-ios-download-high
          - mobile-cellular-main
          - mobile-phone-main
          - iptv-all
          items:
            type: object
          type: array
        style: form
      - description: Search query String
        in: query
        name: q
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopularResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopularErrorResponse'
          description: Unexpected error
      summary: Popular Episodes & Clips
      tags:
      - Programmes
      x-openapi-router-controller: openapi_server.controllers.programmes_controller
  /radio/programmes:
    get:
      description: |
        Provides a paginated list of programmes by PID (brand, series, episode and clip). Accepts various filters and sorting methods.

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_radio_programmes
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: "Filter by provided query. E.g. 'tleo' returns top level objects,\
          \ ie. brands, orphaned series, and orphaned episodes"
        in: query
        name: kind
        schema:
          enum:
          - tleo
          type: string
      - description: Filter by network master brand ID (mid). Accepts comma separated
          values
        in: query
        name: network
        schema:
          type: string
      - description: Filter by network URL key. Accepts comma separated values
        in: query
        name: network_url_key
        schema:
          type: string
      - description: Filter by category id. Accepts comma separated values. See /category
          endpoint below for the type of response provided
        in: query
        name: category
        schema:
          type: string
      - description: "Sort by provided query. E.g. 'title' sorts in ascending order,\
          \ and -title sorts in descending order"
        in: query
        name: sort
        schema:
          enum:
          - available_from_date
          - -available_from_date
          - title
          - -title
          type: string
      - description: Filter by container. Accepts any brand or series pid
        in: query
        name: container
        schema:
          type: string
      - description: Filter by programme type. Accepts comma separated values
        in: query
        name: type
        schema:
          enum:
          - brand
          - series
          - episode
          - clip
          - "episode,clip"
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgrammesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadioErrorResponse'
          description: Unexpected error
      summary: Radio programmes
      tags:
      - Programmes
      x-openapi-router-controller: openapi_server.controllers.programmes_controller
  /radio/programmes/{pid}:
    get:
      description: |
        Find programmes by PID (brand, series, episode and clip)

        N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode
        and Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for
         anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification
      operationId: get_radio_programmes_by_pid
      parameters:
      - description: API_KEY
        in: header
        name: X-API-Key
        required: true
        schema:
          type: string
      - description: pid
        in: path
        name: pid
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgrammesResponse'
          description: OK
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RadioErrorResponse'
          description: Unexpected error
      summary: Available radio programme by Pid
      tags:
      - Programmes
      x-openapi-router-controller: openapi_server.controllers.programmes_controller
components:
  parameters:
    Authorization:
      description: Bearer OAUTH_TOKEN
      in: header
      name: Authorization
      required: true
      schema:
        default: Bearer OAUTH_TOKEN
        type: string
    X-API-Key:
      description: API_KEY
      in: header
      name: X-API-Key
      required: true
      schema:
        type: string
    X-Authentication-Provider:
      description: Authentication type
      in: header
      name: X-Authentication-Provider
      required: true
      schema:
        default: idv5
        type: string
    artist:
      description: MusicBrainz artist ID
      in: query
      name: artist
      schema:
        type: string
    category:
      description: Category ID
      in: query
      name: category
      schema:
        type: string
    coverage:
      description: "Local, National or Regional Coverage"
      in: query
      name: coverage
      schema:
        enum:
        - local
        - national
        - regional
        type: string
    decomposed:
      description: "In addition to the overall score, return a list of scores broken\
        \ down by day N.B Must be used in conjunction with since and/or until and\
        \ since is >= 31 days"
      in: query
      name: decomposed
      schema:
        type: boolean
    limit:
      description: Paginated results limit
      in: query
      name: limit
      schema:
        type: integer
    network:
      description: Return items with given Network ID
      in: query
      name: network
      schema:
        type: string
    offset:
      description: Paginated results offset
      in: query
      name: offset
      schema:
        type: integer
    over16:
      description: Boolean age check
      in: query
      name: over16
      required: true
      schema:
        type: boolean
    pid:
      description: pid
      in: path
      name: pid
      required: true
      schema:
        type: string
    programme:
      description: Items with given Programme Pid
      in: query
      name: programme
      schema:
        type: string
    q:
      description: Search query String
      in: query
      name: q
      schema:
        type: string
    rights:
      description: Only return available results for the web/mobile.
      in: query
      name: rights
      required: true
      schema:
        enum:
        - web
        - mobile
        type: string
    since:
      description: ISO 8601 Date yyyy-mm-dd.  Returns items between given time period
        and now
      in: query
      name: since
      schema:
        type: string
    sort:
      description: Sort order for Podcasts results
      in: query
      name: sort
      schema:
        enum:
        - title
        - -title
        - available_from_date
        - -available_from_date
        type: string
    until:
      description: ISO 8601 Date yyyy-mm-dd.  Returns items between given 'since'
        and 'until' date params
      in: query
      name: until
      schema:
        type: string
  schemas:
    AncestorSummary:
      properties:
        ancestor_type:
          title: ancestor_type
          type: string
        id:
          title: id
          type: string
        images:
          items:
            $ref: '#/components/schemas/Image'
          title: images
          type: array
        titles:
          $ref: '#/components/schemas/AncestorTitles'
        type:
          title: type
          type: string
      required:
      - ancestor_type
      - id
      - images
      - titles
      - type
      title: AncestorSummary
      type: object
    AncestorTitles:
      properties:
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      required:
      - title
      - type
      title: AncestorTitles
      type: object
    AvailableVersions:
      example:
        duration: duration
        version_pid: version_pid
        available_to_date: available_to_date
        version_type: version_type
        available: available
        available_from_date: available_from_date
        type: type
        has_guidance: true
        media_set: media_set
      properties:
        available:
          title: available
          type: string
        available_from_date:
          title: available_from_date
          type: string
        available_to_date:
          title: available_to_date
          type: string
        duration:
          title: duration
          type: string
        has_guidance:
          title: has_guidance
          type: boolean
        media_set:
          title: media_set
          type: string
        type:
          title: type
          type: string
        version_pid:
          title: version_pid
          type: string
        version_type:
          title: version_type
          type: string
      required:
      - available
      - available_from_date
      - available_to_date
      - duration
      - has_guidance
      - media_set
      - type
      - version_pid
      - version_type
      title: AvailableVersions
      type: object
    Body:
      example:
        category_id: category_id
        platform: responsiveweb
      properties:
        category_id:
          title: category_id
          type: string
        platform:
          enum:
          - responsiveweb
          - app
          title: platform
          type: string
      required:
      - category_id
      - platform
      title: Body
      type: object
    Body_1:
      properties:
        category_id:
          title: category_id
          type: string
        platform:
          enum:
          - responsiveweb
          - app
          title: platform
          type: string
      required:
      - category_id
      - platform
      title: Body_1
      type: object
    Body_2:
      properties:
        platform:
          enum:
          - responsiveweb
          - app
          title: platform
          type: string
        service_id:
          title: service_id
          type: string
      required:
      - platform
      - service_id
      title: Body_2
      type: object
    Body_3:
      properties:
        platform:
          enum:
          - responsiveweb
          - app
          title: platform
          type: string
        service_id:
          title: service_id
          type: string
      required:
      - platform
      - service_id
      title: Body_3
      type: object
    Body_4:
      properties:
        action:
          enum:
          - started
          - ended
          - paused
          - heartbeat
          title: action
          type: string
        elapsed_time:
          title: elapsed_time
          type: integer
        pid:
          title: pid
          type: string
        resource_type:
          enum:
          - episode
          - clip
          title: resource_type
          type: string
        version_pid:
          title: version_pid
          type: string
      required:
      - action
      - elapsed_time
      - pid
      - resource_type
      - version_pid
      title: Body_4
      type: object
    BrandSummary:
      properties:
        available_versions:
          items:
            $ref: '#/components/schemas/AvailableVersions'
          type: array
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        latest_available_episodes:
          items:
            $ref: '#/components/schemas/EpisodeSummary'
          type: array
        network_summary:
          $ref: '#/components/schemas/NetworkSummary'
        pid:
          type: string
        short_synopsis:
          type: string
        titles:
          $ref: '#/components/schemas/ProgrammeTitles'
        total_available_episodes:
          type: integer
        type:
          enum:
          - brand_summary
          type: string
      required:
      - images
      - latest_available_episodes
      - network_summary
      - pid
      - short_synopsis
      - titles
      - total_available_episodes
      - type
      type: object
    Broadcast:
      example:
        is_webcast: true
        is_repeat: true
        start: start
        pid: pid
        type: type
        duration: 1
        version_pid: version_pid
        service_id: service_id
        is_live: true
        is_audio_described: true
        end: end
        is_blanked: true
        programme:
          pid: pid
          type: brand_summary
        is_critical: true
      properties:
        duration:
          title: duration
          type: integer
        end:
          title: end
          type: string
        is_audio_described:
          title: is_audio_described
          type: boolean
        is_blanked:
          title: is_blanked
          type: boolean
        is_critical:
          title: is_critical
          type: boolean
        is_live:
          title: is_live
          type: boolean
        is_repeat:
          title: is_repeat
          type: boolean
        is_webcast:
          title: is_webcast
          type: boolean
        pid:
          title: pid
          type: string
        programme:
          $ref: '#/components/schemas/ProgrammeSummary'
        service_id:
          title: service_id
          type: string
        start:
          title: start
          type: string
        type:
          title: type
          type: string
        version_pid:
          title: version_pid
          type: string
      required:
      - duration
      - end
      - is_audio_described
      - is_blanked
      - is_critical
      - is_live
      - is_repeat
      - is_webcast
      - pid
      - service_id
      - start
      - type
      - version_pid
      title: Broadcast
      type: object
    BroadcastsResponse:
      example:
        total: 5
        $schema: $schema
        offset: 6
        limit: 0
        results:
        - is_webcast: true
          is_repeat: true
          start: start
          pid: pid
          type: type
          duration: 1
          version_pid: version_pid
          service_id: service_id
          is_live: true
          is_audio_described: true
          end: end
          is_blanked: true
          programme:
            pid: pid
            type: brand_summary
          is_critical: true
        - is_webcast: true
          is_repeat: true
          start: start
          pid: pid
          type: type
          duration: 1
          version_pid: version_pid
          service_id: service_id
          is_live: true
          is_audio_described: true
          end: end
          is_blanked: true
          programme:
            pid: pid
            type: brand_summary
          is_critical: true
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Broadcast'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: BroadcastsResponse
      type: object
    CategoriesResponse:
      example:
        total: 5
        $schema: $schema
        offset: 6
        limit: 0
        results:
        - depth: 5
          category_type: category_type
          pip_id: pip_id
          child_categories:
          - depth: 1
            category_type: category_type
            pip_id: pip_id
            child_categories:
            - null
            - null
            id: id
            title: title
            type: type
            url_key: url_key
          - depth: 1
            category_type: category_type
            pip_id: pip_id
            child_categories:
            - null
            - null
            id: id
            title: title
            type: type
            url_key: url_key
          id: id
          title: title
          type: type
          url_key: url_key
        - depth: 5
          category_type: category_type
          pip_id: pip_id
          child_categories:
          - depth: 1
            category_type: category_type
            pip_id: pip_id
            child_categories:
            - null
            - null
            id: id
            title: title
            type: type
            url_key: url_key
          - depth: 1
            category_type: category_type
            pip_id: pip_id
            child_categories:
            - null
            - null
            id: id
            title: title
            type: type
            url_key: url_key
          id: id
          title: title
          type: type
          url_key: url_key
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Category'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: CategoriesResponse
      type: object
    Category:
      example:
        depth: 5
        category_type: category_type
        pip_id: pip_id
        child_categories:
        - depth: 1
          category_type: category_type
          pip_id: pip_id
          child_categories:
          - null
          - null
          id: id
          title: title
          type: type
          url_key: url_key
        - depth: 1
          category_type: category_type
          pip_id: pip_id
          child_categories:
          - null
          - null
          id: id
          title: title
          type: type
          url_key: url_key
        id: id
        title: title
        type: type
        url_key: url_key
      properties:
        category_type:
          title: category_type
          type: string
        child_categories:
          items:
            $ref: '#/components/schemas/ChildCategory'
          title: child_categories
          type: array
        depth:
          title: depth
          type: integer
        id:
          title: id
          type: string
        pip_id:
          title: pip_id
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
        url_key:
          title: url_key
          type: string
      required:
      - category_type
      - child_categories
      - depth
      - id
      - pip_id
      - title
      - type
      - url_key
      title: Category
      type: object
    CategoryError:
      example:
        replied_at: replied_at
        href: href
        id: id
        message: message
        status: 2
      properties:
        href:
          title: href
          type: string
        id:
          title: id
          type: string
        message:
          title: message
          type: string
        replied_at:
          title: replied_at
          type: string
        status:
          title: status
          type: integer
      required:
      - href
      - id
      - message
      - replied_at
      - status
      title: CategoryError
      type: object
    CategoryErrorResponse:
      example:
        $schema: $schema
        errors:
        - replied_at: replied_at
          href: href
          id: id
          message: message
          status: 2
        - replied_at: replied_at
          href: href
          id: id
          message: message
          status: 2
      properties:
        $schema:
          title: $schema
          type: string
        errors:
          items:
            $ref: '#/components/schemas/CategoryError'
          title: errors
          type: array
      required:
      - $schema
      - errors
      title: CategoryErrorResponse
      type: object
    CategorySummary:
      example:
        category_type: category_type
        id: id
        title: title
        type: type
        key: key
      properties:
        category_type:
          title: category_type
          type: string
        id:
          title: id
          type: string
        key:
          title: key
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      required:
      - category_type
      - id
      - key
      - title
      - type
      title: CategorySummary
      type: object
    ChildCategory:
      example:
        depth: 1
        category_type: category_type
        pip_id: pip_id
        child_categories:
        - null
        - null
        id: id
        title: title
        type: type
        url_key: url_key
      properties:
        category_type:
          title: category_type
          type: string
        child_categories:
          items:
            $ref: '#/components/schemas/ChildCategory'
          title: child_categories
          type: array
        depth:
          title: depth
          type: integer
        id:
          title: id
          type: string
        pip_id:
          title: pip_id
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
        url_key:
          title: url_key
          type: string
      required:
      - category_type
      - child_categories
      - depth
      - id
      - pip_id
      - title
      - type
      - url_key
      title: ChildCategory
      type: object
    ClipSummary:
      properties:
        ancestors:
          items:
            $ref: '#/components/schemas/AncestorSummary'
          type: array
        available_versions:
          items:
            $ref: '#/components/schemas/AvailableVersions'
          type: array
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        media_type:
          type: string
        network_summary:
          $ref: '#/components/schemas/NetworkSummary'
        pid:
          type: string
        release_date:
          type: string
        short_synopsis:
          type: string
        titles:
          $ref: '#/components/schemas/ProgrammeTitles'
        type:
          enum:
          - clip_summary
          type: string
      required:
      - ancestors
      - available_versions
      - images
      - media_type
      - network_summary
      - pid
      - release_date
      - short_synopsis
      - titles
      - type
      type: object
    Contact:
      example:
        service: service
        name: name
        handle: handle
        url: url
      properties:
        handle:
          title: handle
          type: string
        name:
          title: name
          type: string
        service:
          title: service
          type: string
        url:
          title: url
          type: string
      required:
      - handle
      - name
      - service
      - url
      title: Contact
      type: object
    DateRange:
      example:
        start: start
        end: end
      properties:
        end:
          title: end
          type: string
        start:
          title: start
          type: string
      required:
      - end
      - start
      title: DateRange
      type: object
    DisplayModule:
      example:
        description: description
        title: title
        type: type
        uri: uri
      properties:
        description:
          title: description
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
        uri:
          title: uri
          type: string
      title: DisplayModule
      type: object
    Empty:
      nullable: true
      type: object
      x-nullable: true
    EpisodeSummary:
      properties:
        ancestors:
          items:
            $ref: '#/components/schemas/AncestorSummary'
          title: ancestors
          type: array
        available_versions:
          items:
            $ref: '#/components/schemas/AvailableVersions'
          title: available_versions
          type: array
        images:
          items:
            $ref: '#/components/schemas/Image'
          title: images
          type: array
        media_type:
          title: media_type
          type: string
        network_summary:
          $ref: '#/components/schemas/NetworkSummary'
        pid:
          title: pid
          type: string
        release_date:
          title: release_date
          type: string
        short_synopsis:
          title: short_synopsis
          type: string
        titles:
          $ref: '#/components/schemas/ProgrammeTitles'
        type:
          enum:
          - episode_summary
          title: type
          type: string
      required:
      - ancestors
      - available_versions
      - images
      - media_type
      - network_summary
      - pid
      - release_date
      - short_synopsis
      - titles
      - type
      title: EpisodeSummary
      type: object
    Error:
      example:
        replied_at: replied_at
        href: href
        id: id
        message: message
      properties:
        href:
          title: href
          type: string
        id:
          title: id
          type: string
        message:
          title: message
          type: string
        replied_at:
          title: replied_at
          type: string
      required:
      - href
      - id
      - message
      - replied_at
      title: Error
      type: object
    ErrorResponse:
      example:
        $schema: $schema
        errors:
        - replied_at: replied_at
          href: href
          id: id
          message: message
        - replied_at: replied_at
          href: href
          id: id
          message: message
      properties:
        $schema:
          title: $schema
          type: string
        errors:
          items:
            $ref: '#/components/schemas/Error'
          title: errors
          type: array
      required:
      - $schema
      - errors
      title: ErrorResponse
      type: object
    ExperienceResponse:
      example:
        $schema: $schema
        data:
        - description: description
          title: title
          type: type
          uri: uri
        - description: description
          title: title
          type: type
          uri: uri
      properties:
        $schema:
          title: $schema
          type: string
        data:
          items:
            $ref: '#/components/schemas/DisplayModule'
          title: data
          type: array
      required:
      - $schema
      - data
      title: ExperienceResponse
      type: object
    ExternalPartner:
      example:
        type: type
        value: value
      properties:
        type:
          title: type
          type: string
        value:
          title: value
          type: string
      required:
      - type
      - value
      title: ExternalPartner
      type: object
    Image:
      example:
        template_url: template_url
        id: id
        type: type
        image_type: image_type
      properties:
        id:
          title: id
          type: string
        image_type:
          title: image_type
          type: string
        template_url:
          title: template_url
          type: string
        type:
          title: type
          type: string
      required:
      - id
      - image_type
      - template_url
      - type
      title: Image
      type: object
    MetaData:
      example:
        miscellaneous:
          title: title
        origin:
          type: type
        type: type
        programme_type: programme_type
      properties:
        miscellaneous:
          $ref: '#/components/schemas/Miscellaneous'
        origin:
          $ref: '#/components/schemas/Origin'
        programme_type:
          title: programme_type
          type: string
        type:
          title: type
          type: string
      required:
      - miscellaneous
      - origin
      - programme_type
      - type
      title: MetaData
      type: object
    Miscellaneous:
      example:
        title: title
      properties:
        title:
          title: title
          type: string
      required:
      - title
      title: Miscellaneous
      type: object
    MusicExportError:
      example:
        replied_at: 0
        message: message
        status: 6
      properties:
        message:
          title: message
          type: string
        replied_at:
          title: replied_at
          type: integer
        status:
          title: status
          type: integer
      required:
      - message
      - replied_at
      - status
      title: MusicExportError
      type: object
    MusicExportErrorResponse:
      example:
        schema: schema
        errors:
        - replied_at: 0
          message: message
          status: 6
        - replied_at: 0
          message: message
          status: 6
      properties:
        errors:
          items:
            $ref: '#/components/schemas/MusicExportError'
          title: errors
          type: array
        schema:
          title: schema
          type: string
      required:
      - errors
      - schema
      title: MusicExportErrorResponse
      type: object
    MusicExportJob:
      example:
        job_id: job_id
        vendor: vendor
        created_at: created_at
        id: id
        status: status
      properties:
        created_at:
          title: created_at
          type: string
        id:
          title: id
          type: string
        job_id:
          title: job_id
          type: string
        status:
          title: status
          type: string
        vendor:
          title: vendor
          type: string
      required:
      - created_at
      - id
      - job_id
      - status
      - vendor
      title: MusicExportJob
      type: object
    MusicExportPreferences:
      example:
        access_token: access_token
        refresh_token: refresh_token
        last_export: last_export
        partner_id: partner_id
        terms: true
        authorization_code: authorization_code
        vendor: vendor
        add_plus_export: true
        access_expires_at: access_expires_at
        legacy_state: legacy_state
      properties:
        access_expires_at:
          title: access_expires_at
          type: string
        access_token:
          title: access_token
          type: string
        add_plus_export:
          title: add_plus_export
          type: boolean
        authorization_code:
          title: authorization_code
          type: string
        last_export:
          title: last_export
          type: string
        legacy_state:
          title: legacy_state
          type: string
        partner_id:
          title: partner_id
          type: string
        refresh_token:
          title: refresh_token
          type: string
        terms:
          title: terms
          type: boolean
        vendor:
          title: vendor
          type: string
      required:
      - access_expires_at
      - access_token
      - add_plus_export
      - authorization_code
      - last_export
      - legacy_state
      - partner_id
      - refresh_token
      - terms
      - vendor
      title: MusicExportPreferences
      type: object
    MusicExportPreferencesResponse:
      example:
        schema: schema
        total: 0
        method: method
        replied_at: replied_at
        results:
        - access_token: access_token
          refresh_token: refresh_token
          last_export: last_export
          partner_id: partner_id
          terms: true
          authorization_code: authorization_code
          vendor: vendor
          add_plus_export: true
          access_expires_at: access_expires_at
          legacy_state: legacy_state
        - access_token: access_token
          refresh_token: refresh_token
          last_export: last_export
          partner_id: partner_id
          terms: true
          authorization_code: authorization_code
          vendor: vendor
          add_plus_export: true
          access_expires_at: access_expires_at
          legacy_state: legacy_state
      properties:
        method:
          title: method
          type: string
        replied_at:
          title: replied_at
          type: string
        results:
          items:
            $ref: '#/components/schemas/MusicExportPreferences'
          title: results
          type: array
        schema:
          title: schema
          type: string
        total:
          title: total
          type: integer
      required:
      - method
      - replied_at
      - results
      - schema
      - total
      title: MusicExportPreferencesResponse
      type: object
    MusicExportSuccess:
      example:
        schema: schema
        method: method
        replied_at: replied_at
      properties:
        method:
          title: method
          type: string
        replied_at:
          title: replied_at
          type: string
        schema:
          title: schema
          type: string
      required:
      - method
      - replied_at
      - schema
      title: MusicExportSuccess
      type: object
    MusicPopularityArtist:
      example:
        score: 1
        gid: gid
        imagePid: imagePid
        sortName: sortName
        name: name
        id: id
      properties:
        gid:
          title: gid
          type: string
        id:
          title: id
          type: string
        imagePid:
          title: imagePid
          type: string
        name:
          title: name
          type: string
        score:
          title: score
          type: integer
        sortName:
          title: sortName
          type: string
      required:
      - gid
      - id
      - imagePid
      - name
      - score
      - sortName
      title: MusicPopularityArtist
      type: object
    MusicPopularityArtists:
      example:
        repliedAt: repliedAt
        schema: schema
        total: 5
        method: method
        offset: 6
        limit: 0
        results:
        - score: 1
          gid: gid
          imagePid: imagePid
          sortName: sortName
          name: name
          id: id
        - score: 1
          gid: gid
          imagePid: imagePid
          sortName: sortName
          name: name
          id: id
      properties:
        limit:
          title: limit
          type: integer
        method:
          title: method
          type: string
        offset:
          title: offset
          type: integer
        repliedAt:
          title: repliedAt
          type: string
        results:
          items:
            $ref: '#/components/schemas/MusicPopularityArtist'
          title: results
          type: array
        schema:
          title: schema
          type: string
        total:
          title: total
          type: integer
      required:
      - method
      - repliedAt
      - results
      - schema
      - total
      title: MusicPopularityArtists
      type: object
    MusicPopularityError:
      example:
        schema: schema
        errors:
        - errors
        - errors
      properties:
        errors:
          items:
            type: string
          title: errors
          type: array
        schema:
          title: schema
          type: string
      title: MusicPopularityError
      type: object
    MusicPopularityPlaylist:
      example:
        commentsEnabled: true
        mood: mood
        visibility: visibility
        kind: kind
        description: description
        wideImageUrl: wideImageUrl
        title: title
        wideImagePid: wideImagePid
        oneOff: true
        score: 1
        imagePid: imagePid
        externalPartners:
        - type: type
          value: value
        - type: type
          value: value
        imageUrl: imageUrl
        genre: genre
        playlistPlaybackType: playlistPlaybackType
        categories:
        - categories
        - categories
        id: id
        serviceId: serviceId
        updatedAt: updatedAt
      properties:
        categories:
          items:
            type: string
          title: categories
          type: array
        commentsEnabled:
          title: commentsEnabled
          type: boolean
        description:
          title: description
          type: string
        externalPartners:
          items:
            $ref: '#/components/schemas/ExternalPartner'
          title: externalPartners
          type: array
        genre:
          title: genre
          type: string
        id:
          title: id
          type: string
        imagePid:
          title: imagePid
          type: string
        imageUrl:
          title: imageUrl
          type: string
        kind:
          title: kind
          type: string
        mood:
          title: mood
          type: string
        oneOff:
          title: oneOff
          type: boolean
        playlistPlaybackType:
          title: playlistPlaybackType
          type: string
        score:
          title: score
          type: integer
        serviceId:
          title: serviceId
          type: string
        title:
          title: title
          type: string
        updatedAt:
          title: updatedAt
          type: string
        visibility:
          title: visibility
          type: string
        wideImagePid:
          title: wideImagePid
          type: string
        wideImageUrl:
          title: wideImageUrl
          type: string
      required:
      - categories
      - commentsEnabled
      - description
      - externalPartners
      - genre
      - id
      - imagePid
      - imageUrl
      - kind
      - mood
      - oneOff
      - playlistPlaybackType
      - score
      - serviceId
      - title
      - updatedAt
      - visibility
      - wideImagePid
      - wideImageUrl
      title: MusicPopularityPlaylist
      type: object
    MusicPopularityPlaylists:
      example:
        repliedAt: repliedAt
        schema: schema
        total: 5
        method: method
        offset: 6
        limit: 0
        results:
        - commentsEnabled: true
          mood: mood
          visibility: visibility
          kind: kind
          description: description
          wideImageUrl: wideImageUrl
          title: title
          wideImagePid: wideImagePid
          oneOff: true
          score: 1
          imagePid: imagePid
          externalPartners:
          - type: type
            value: value
          - type: type
            value: value
          imageUrl: imageUrl
          genre: genre
          playlistPlaybackType: playlistPlaybackType
          categories:
          - categories
          - categories
          id: id
          serviceId: serviceId
          updatedAt: updatedAt
        - commentsEnabled: true
          mood: mood
          visibility: visibility
          kind: kind
          description: description
          wideImageUrl: wideImageUrl
          title: title
          wideImagePid: wideImagePid
          oneOff: true
          score: 1
          imagePid: imagePid
          externalPartners:
          - type: type
            value: value
          - type: type
            value: value
          imageUrl: imageUrl
          genre: genre
          playlistPlaybackType: playlistPlaybackType
          categories:
          - categories
          - categories
          id: id
          serviceId: serviceId
          updatedAt: updatedAt
      properties:
        limit:
          title: limit
          type: integer
        method:
          title: method
          type: string
        offset:
          title: offset
          type: integer
        repliedAt:
          title: repliedAt
          type: string
        results:
          items:
            $ref: '#/components/schemas/MusicPopularityPlaylist'
          title: results
          type: array
        schema:
          title: schema
          type: string
        total:
          title: total
          type: integer
      required:
      - method
      - repliedAt
      - results
      - schema
      - total
      title: MusicPopularityPlaylists
      type: object
    MusicPopularityTrack:
      example:
        radioEdit: true
        artistGid: artistGid
        recordAudio:
        - duration: 1
          identifier: identifier
          audioType: audioType
          resourceType: resourceType
        - duration: 1
          identifier: identifier
          audioType: audioType
          resourceType: resourceType
        album: album
        classical: true
        preferredRecordAudio:
          duration: 1
          identifier: identifier
          audioType: audioType
          resourceType: resourceType
        title: title
        type: type
        mergedIds:
        - mergedIds
        - mergedIds
        recordImageHref: recordImageHref
        score: 5
        artists:
        - gid: gid
          imagePid: imagePid
          role: role
          sortName: sortName
          name: name
        - gid: gid
          imagePid: imagePid
          role: role
          sortName: sortName
          name: name
        preferredMultiplayRecordAudio:
          duration: 1
          identifier: identifier
          audioType: audioType
          resourceType: resourceType
        artistName: artistName
        id: id
        baseTitle: baseTitle
        recordImagePid: recordImagePid
      properties:
        album:
          title: album
          type: string
        artistGid:
          title: artistGid
          type: string
        artistName:
          title: artistName
          type: string
        artists:
          items:
            $ref: '#/components/schemas/MusicTrackArtist'
          title: artists
          type: array
        baseTitle:
          title: baseTitle
          type: string
        classical:
          title: classical
          type: boolean
        id:
          title: id
          type: string
        mergedIds:
          items:
            type: string
          title: mergedIds
          type: array
        preferredMultiplayRecordAudio:
          $ref: '#/components/schemas/MusicRecordAudio'
        preferredRecordAudio:
          $ref: '#/components/schemas/MusicRecordAudio'
        radioEdit:
          title: radioEdit
          type: boolean
        recordAudio:
          items:
            $ref: '#/components/schemas/MusicRecordAudio'
          title: recordAudio
          type: array
        recordImageHref:
          title: recordImageHref
          type: string
        recordImagePid:
          title: recordImagePid
          type: string
        score:
          title: score
          type: integer
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      required:
      - id
      - score
      title: MusicPopularityTrack
      type: object
    MusicPopularityTracks:
      example:
        repliedAt: repliedAt
        schema: schema
        total: 5
        method: method
        offset: 6
        limit: 0
        results:
        - radioEdit: true
          artistGid: artistGid
          recordAudio:
          - duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          - duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          album: album
          classical: true
          preferredRecordAudio:
            duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          title: title
          type: type
          mergedIds:
          - mergedIds
          - mergedIds
          recordImageHref: recordImageHref
          score: 5
          artists:
          - gid: gid
            imagePid: imagePid
            role: role
            sortName: sortName
            name: name
          - gid: gid
            imagePid: imagePid
            role: role
            sortName: sortName
            name: name
          preferredMultiplayRecordAudio:
            duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          artistName: artistName
          id: id
          baseTitle: baseTitle
          recordImagePid: recordImagePid
        - radioEdit: true
          artistGid: artistGid
          recordAudio:
          - duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          - duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          album: album
          classical: true
          preferredRecordAudio:
            duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          title: title
          type: type
          mergedIds:
          - mergedIds
          - mergedIds
          recordImageHref: recordImageHref
          score: 5
          artists:
          - gid: gid
            imagePid: imagePid
            role: role
            sortName: sortName
            name: name
          - gid: gid
            imagePid: imagePid
            role: role
            sortName: sortName
            name: name
          preferredMultiplayRecordAudio:
            duration: 1
            identifier: identifier
            audioType: audioType
            resourceType: resourceType
          artistName: artistName
          id: id
          baseTitle: baseTitle
          recordImagePid: recordImagePid
      properties:
        limit:
          title: limit
          type: integer
        method:
          title: method
          type: string
        offset:
          title: offset
          type: integer
        repliedAt:
          title: repliedAt
          type: string
        results:
          items:
            $ref: '#/components/schemas/MusicPopularityTrack'
          title: results
          type: array
        schema:
          title: schema
          type: string
        total:
          title: total
          type: integer
      required:
      - method
      - repliedAt
      - results
      - schema
      - total
      title: MusicPopularityTracks
      type: object
    MusicRecordAudio:
      example:
        duration: 1
        identifier: identifier
        audioType: audioType
        resourceType: resourceType
      properties:
        audioType:
          title: audioType
          type: string
        duration:
          title: duration
          type: integer
        identifier:
          title: identifier
          type: string
        resourceType:
          title: resourceType
          type: string
      required:
      - audioType
      - duration
      - identifier
      - resourceType
      title: MusicRecordAudio
      type: object
    MusicTrackArtist:
      example:
        gid: gid
        imagePid: imagePid
        role: role
        sortName: sortName
        name: name
      properties:
        gid:
          title: gid
          type: string
        imagePid:
          title: imagePid
          type: string
        name:
          title: name
          type: string
        role:
          title: role
          type: string
        sortName:
          title: sortName
          type: string
      required:
      - gid
      - imagePid
      - name
      - role
      - sortName
      title: MusicTrackArtist
      type: object
    Network:
      example:
        date_ranges:
        - start: start
          end: end
        - start: start
          end: end
        active: true
        preset: true
        services:
        - coverage: coverage
          date_ranges:
          - start: start
            end: end
          - start: start
            end: end
          default: true
          short_title: short_title
          active: true
          id: id
          default_language: default_language
          region: region
          title: title
          type: type
        - coverage: coverage
          date_ranges:
          - start: start
            end: end
          - start: start
            end: end
          default: true
          short_title: short_title
          active: true
          id: id
          default_language: default_language
          region: region
          title: title
          type: type
        sort: 1
        title: title
        type: type
        short_title: short_title
        promoted_category_summaries:
        - category_type: category_type
          id: id
          title: title
          type: type
          key: key
        - category_type: category_type
          id: id
          title: title
          type: type
          key: key
        id: id
        international: true
        contacts:
        - service: service
          name: name
          handle: handle
          url: url
        - service: service
          name: name
          handle: handle
          url: url
        key: key
        group: group
      properties:
        active:
          title: active
          type: boolean
        contacts:
          items:
            $ref: '#/components/schemas/Contact'
          title: contacts
          type: array
        date_ranges:
          items:
            $ref: '#/components/schemas/DateRange'
          title: date_ranges
          type: array
        group:
          title: group
          type: string
        id:
          title: id
          type: string
        international:
          title: international
          type: boolean
        key:
          title: key
          type: string
        preset:
          title: preset
          type: boolean
        promoted_category_summaries:
          items:
            $ref: '#/components/schemas/CategorySummary'
          title: promoted_category_summaries
          type: array
        services:
          items:
            $ref: '#/components/schemas/Service'
          title: services
          type: array
        short_title:
          title: short_title
          type: string
        sort:
          title: sort
          type: integer
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      required:
      - active
      - contacts
      - date_ranges
      - group
      - id
      - international
      - key
      - preset
      - services
      - short_title
      - sort
      - title
      - type
      title: Network
      type: object
    NetworkSummary:
      example:
        active: true
        id: id
        titles:
          short_title: short_title
          type: type
          long_title: long_title
        type: type
        key: key
        group: group
      properties:
        active:
          title: active
          type: boolean
        group:
          title: group
          type: string
        id:
          title: id
          type: string
        key:
          title: key
          type: string
        titles:
          $ref: '#/components/schemas/NetworkTitles'
        type:
          title: type
          type: string
      required:
      - active
      - group
      - id
      - key
      - titles
      - type
      title: NetworkSummary
      type: object
    NetworkTitles:
      example:
        short_title: short_title
        type: type
        long_title: long_title
      properties:
        long_title:
          title: long_title
          type: string
        short_title:
          title: short_title
          type: string
        type:
          title: type
          type: string
      required:
      - long_title
      - short_title
      - type
      title: NetworkTitles
      type: object
    NetworksResponse:
      example:
        total: 5
        $schema: $schema
        offset: 6
        limit: 0
        results:
        - date_ranges:
          - start: start
            end: end
          - start: start
            end: end
          active: true
          preset: true
          services:
          - coverage: coverage
            date_ranges:
            - start: start
              end: end
            - start: start
              end: end
            default: true
            short_title: short_title
            active: true
            id: id
            default_language: default_language
            region: region
            title: title
            type: type
          - coverage: coverage
            date_ranges:
            - start: start
              end: end
            - start: start
              end: end
            default: true
            short_title: short_title
            active: true
            id: id
            default_language: default_language
            region: region
            title: title
            type: type
          sort: 1
          title: title
          type: type
          short_title: short_title
          promoted_category_summaries:
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          id: id
          international: true
          contacts:
          - service: service
            name: name
            handle: handle
            url: url
          - service: service
            name: name
            handle: handle
            url: url
          key: key
          group: group
        - date_ranges:
          - start: start
            end: end
          - start: start
            end: end
          active: true
          preset: true
          services:
          - coverage: coverage
            date_ranges:
            - start: start
              end: end
            - start: start
              end: end
            default: true
            short_title: short_title
            active: true
            id: id
            default_language: default_language
            region: region
            title: title
            type: type
          - coverage: coverage
            date_ranges:
            - start: start
              end: end
            - start: start
              end: end
            default: true
            short_title: short_title
            active: true
            id: id
            default_language: default_language
            region: region
            title: title
            type: type
          sort: 1
          title: title
          type: type
          short_title: short_title
          promoted_category_summaries:
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          id: id
          international: true
          contacts:
          - service: service
            name: name
            handle: handle
            url: url
          - service: service
            name: name
            handle: handle
            url: url
          key: key
          group: group
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Network'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: NetworksResponse
      type: object
    Origin:
      example:
        type: type
      properties:
        type:
          title: type
          type: string
      required:
      - type
      title: Origin
      type: object
    PersonalisedCategories:
      properties:
        created:
          type: string
        type:
          type: string
      required:
      - created
      - type
      type: object
    PersonalisedCategoriesResponse:
      example:
        total: 1
        $schema: $schema
        offset: 6
        limit: 0
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - total
      title: PersonalisedCategoriesResponse
      type: object
    PersonalisedMusicActivity:
      example:
        urn: urn
        added_at: added_at
        activity: activity
        data:
        - playlist:
            images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            updated_at: updated_at
            playback_type: playback_type
            service_id: service_id
            description: description
            title: title
            type: type
            version:
              duration: duration
              starts_at: starts_at
              expires_at: expires_at
              warnings:
              - warnings
              - warnings
              id: id
            tracks:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              contributions:
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              id: id
              media:
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              title: title
              type: type
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
          artist:
            images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            role: role
            name: name
            id: id
          service:
            id: id
            title: title
            type: type
            key: key
          genre:
            id: id
            title: title
            type: type
            key: key
          track:
            images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            contributions:
            - images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            - images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            id: id
            media:
            - duration: 1
              scope: scope
              format: format
              id: id
              source: source
              type: type
            - duration: 1
              scope: scope
              format: format
              id: id
              source: source
              type: type
            title: title
            type: type
            version:
              duration: duration
              vpid: vpid
              classical: true
              radio: true
          clip:
            masterbrandMid: masterbrandMid
            parentProgramme:
              entityType: entityType
              pid: pid
              title: title
            endDate: endDate
            entityType: entityType
            imageUrl: imageUrl
            mediaType: mediaType
            pid: pid
            contributors:
            - contributors
            - contributors
            synopsis: synopsis
            title: title
            version:
              duration: duration
              vpid: vpid
              classical: true
              radio: true
            startDate: startDate
        - playlist:
            images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            updated_at: updated_at
            playback_type: playback_type
            service_id: service_id
            description: description
            title: title
            type: type
            version:
              duration: duration
              starts_at: starts_at
              expires_at: expires_at
              warnings:
              - warnings
              - warnings
              id: id
            tracks:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              contributions:
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              id: id
              media:
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              title: title
              type: type
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
          artist:
            images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            role: role
            name: name
            id: id
          service:
            id: id
            title: title
            type: type
            key: key
          genre:
            id: id
            title: title
            type: type
            key: key
          track:
            images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            contributions:
            - images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            - images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            id: id
            media:
            - duration: 1
              scope: scope
              format: format
              id: id
              source: source
              type: type
            - duration: 1
              scope: scope
              format: format
              id: id
              source: source
              type: type
            title: title
            type: type
            version:
              duration: duration
              vpid: vpid
              classical: true
              radio: true
          clip:
            masterbrandMid: masterbrandMid
            parentProgramme:
              entityType: entityType
              pid: pid
              title: title
            endDate: endDate
            entityType: entityType
            imageUrl: imageUrl
            mediaType: mediaType
            pid: pid
            contributors:
            - contributors
            - contributors
            synopsis: synopsis
            title: title
            version:
              duration: duration
              vpid: vpid
              classical: true
              radio: true
            startDate: startDate
        domain: domain
        meta_data:
          key: key
        action: action
        id: id
        type: type
      properties:
        action:
          title: action
          type: string
        activity:
          title: activity
          type: string
        added_at:
          title: added_at
          type: string
        data:
          items:
            $ref: '#/components/schemas/PersonalisedMusicData'
          title: data
          type: array
        domain:
          title: domain
          type: string
        id:
          title: id
          type: string
        meta_data:
          $ref: '#/components/schemas/PersonalisedMusicMetaData'
        type:
          title: type
          type: string
        urn:
          title: urn
          type: string
      required:
      - action
      - activity
      - added_at
      - data
      - domain
      - id
      - meta_data
      - type
      - urn
      title: PersonalisedMusicActivity
      type: object
    PersonalisedMusicArtist:
      example:
        images:
        - format: format
          id: id
          type: type
        - format: format
          id: id
          type: type
        role: role
        name: name
        id: id
      properties:
        id:
          title: id
          type: string
        images:
          items:
            $ref: '#/components/schemas/PersonalisedMusicImage'
          title: images
          type: array
        name:
          title: name
          type: string
        role:
          title: role
          type: string
      title: PersonalisedMusicArtist
      type: object
    PersonalisedMusicBatchRequest:
      example:
        added_at: added_at
        domain: domain
        context: context
        meta_data:
          key: key
        action: action
        id: id
        type: type
      properties:
        action:
          title: action
          type: string
        added_at:
          title: added_at
          type: string
        context:
          title: context
          type: string
        domain:
          title: domain
          type: string
        id:
          title: id
          type: string
        meta_data:
          $ref: '#/components/schemas/PersonalisedMusicMetaData'
        type:
          title: type
          type: string
      required:
      - action
      - domain
      - id
      - type
      title: PersonalisedMusicBatchRequest
      type: object
    PersonalisedMusicClip:
      example:
        masterbrandMid: masterbrandMid
        parentProgramme:
          entityType: entityType
          pid: pid
          title: title
        endDate: endDate
        entityType: entityType
        imageUrl: imageUrl
        mediaType: mediaType
        pid: pid
        contributors:
        - contributors
        - contributors
        synopsis: synopsis
        title: title
        version:
          duration: duration
          vpid: vpid
          classical: true
          radio: true
        startDate: startDate
      properties:
        contributors:
          items:
            type: string
          title: contributors
          type: array
        endDate:
          title: endDate
          type: string
        entityType:
          title: entityType
          type: string
        imageUrl:
          title: imageUrl
          type: string
        masterbrandMid:
          title: masterbrandMid
          type: string
        mediaType:
          title: mediaType
          type: string
        parentProgramme:
          $ref: '#/components/schemas/PersonalisedMusicClipParentProgramme'
        pid:
          title: pid
          type: string
        startDate:
          title: startDate
          type: string
        synopsis:
          title: synopsis
          type: string
        title:
          title: title
          type: string
        version:
          $ref: '#/components/schemas/PersonalisedMusicVersion'
      title: PersonalisedMusicClip
      type: object
    PersonalisedMusicClipParentProgramme:
      example:
        entityType: entityType
        pid: pid
        title: title
      properties:
        entityType:
          title: entityType
          type: string
        pid:
          title: pid
          type: string
        title:
          title: title
          type: string
      title: PersonalisedMusicClipParentProgramme
      type: object
    PersonalisedMusicData:
      example:
        playlist:
          images:
          - format: format
            id: id
            type: type
          - format: format
            id: id
            type: type
          updated_at: updated_at
          playback_type: playback_type
          service_id: service_id
          description: description
          title: title
          type: type
          version:
            duration: duration
            starts_at: starts_at
            expires_at: expires_at
            warnings:
            - warnings
            - warnings
            id: id
          tracks:
            images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            contributions:
            - images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            - images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            id: id
            media:
            - duration: 1
              scope: scope
              format: format
              id: id
              source: source
              type: type
            - duration: 1
              scope: scope
              format: format
              id: id
              source: source
              type: type
            title: title
            type: type
            version:
              duration: duration
              vpid: vpid
              classical: true
              radio: true
        artist:
          images:
          - format: format
            id: id
            type: type
          - format: format
            id: id
            type: type
          role: role
          name: name
          id: id
        service:
          id: id
          title: title
          type: type
          key: key
        genre:
          id: id
          title: title
          type: type
          key: key
        track:
          images:
          - format: format
            id: id
            type: type
          - format: format
            id: id
            type: type
          contributions:
          - images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            role: role
            name: name
            id: id
          - images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            role: role
            name: name
            id: id
          id: id
          media:
          - duration: 1
            scope: scope
            format: format
            id: id
            source: source
            type: type
          - duration: 1
            scope: scope
            format: format
            id: id
            source: source
            type: type
          title: title
          type: type
          version:
            duration: duration
            vpid: vpid
            classical: true
            radio: true
        clip:
          masterbrandMid: masterbrandMid
          parentProgramme:
            entityType: entityType
            pid: pid
            title: title
          endDate: endDate
          entityType: entityType
          imageUrl: imageUrl
          mediaType: mediaType
          pid: pid
          contributors:
          - contributors
          - contributors
          synopsis: synopsis
          title: title
          version:
            duration: duration
            vpid: vpid
            classical: true
            radio: true
          startDate: startDate
      properties:
        artist:
          $ref: '#/components/schemas/PersonalisedMusicArtist'
        clip:
          $ref: '#/components/schemas/PersonalisedMusicClip'
        genre:
          $ref: '#/components/schemas/PersonalisedMusicGenre'
        playlist:
          $ref: '#/components/schemas/PersonalisedMusicPlaylist'
        service:
          $ref: '#/components/schemas/PersonalisedMusicService'
        track:
          $ref: '#/components/schemas/PersonalisedMusicTrack'
      title: PersonalisedMusicData
      type: object
    PersonalisedMusicError:
      example:
        replied_at: 5
        message: message
        status: 2
      properties:
        message:
          title: message
          type: string
        replied_at:
          title: replied_at
          type: integer
        status:
          title: status
          type: integer
      required:
      - message
      - replied_at
      - status
      title: PersonalisedMusicError
      type: object
    PersonalisedMusicErrorResponse:
      example:
        schema: schema
        errors:
        - replied_at: 5
          message: message
          status: 2
        - replied_at: 5
          message: message
          status: 2
      properties:
        errors:
          items:
            $ref: '#/components/schemas/PersonalisedMusicError'
          title: errors
          type: array
        schema:
          title: schema
          type: string
      required:
      - errors
      - schema
      title: PersonalisedMusicErrorResponse
      type: object
    PersonalisedMusicGenre:
      example:
        id: id
        title: title
        type: type
        key: key
      properties:
        id:
          title: id
          type: string
        key:
          title: key
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      title: PersonalisedMusicGenre
      type: object
    PersonalisedMusicImage:
      example:
        format: format
        id: id
        type: type
      properties:
        format:
          title: format
          type: string
        id:
          title: id
          type: string
        type:
          title: type
          type: string
      title: PersonalisedMusicImage
      type: object
    PersonalisedMusicMetaData:
      example:
        key: key
      properties:
        key:
          title: key
          type: string
      required:
      - key
      title: PersonalisedMusicMetaData
      type: object
    PersonalisedMusicPlaylist:
      example:
        images:
        - format: format
          id: id
          type: type
        - format: format
          id: id
          type: type
        updated_at: updated_at
        playback_type: playback_type
        service_id: service_id
        description: description
        title: title
        type: type
        version:
          duration: duration
          starts_at: starts_at
          expires_at: expires_at
          warnings:
          - warnings
          - warnings
          id: id
        tracks:
          images:
          - format: format
            id: id
            type: type
          - format: format
            id: id
            type: type
          contributions:
          - images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            role: role
            name: name
            id: id
          - images:
            - format: format
              id: id
              type: type
            - format: format
              id: id
              type: type
            role: role
            name: name
            id: id
          id: id
          media:
          - duration: 1
            scope: scope
            format: format
            id: id
            source: source
            type: type
          - duration: 1
            scope: scope
            format: format
            id: id
            source: source
            type: type
          title: title
          type: type
          version:
            duration: duration
            vpid: vpid
            classical: true
            radio: true
      properties:
        description:
          title: description
          type: string
        images:
          items:
            $ref: '#/components/schemas/PersonalisedMusicImage'
          title: images
          type: array
        playback_type:
          title: playback_type
          type: string
        service_id:
          title: service_id
          type: string
        title:
          title: title
          type: string
        tracks:
          $ref: '#/components/schemas/PersonalisedMusicTrack'
        type:
          title: type
          type: string
        updated_at:
          title: updated_at
          type: string
        version:
          $ref: '#/components/schemas/PersonalisedMusicPlaylistVersion'
      title: PersonalisedMusicPlaylist
      type: object
    PersonalisedMusicPlaylistVersion:
      example:
        duration: duration
        starts_at: starts_at
        expires_at: expires_at
        warnings:
        - warnings
        - warnings
        id: id
      properties:
        duration:
          title: duration
          type: string
        expires_at:
          title: expires_at
          type: string
        id:
          title: id
          type: string
        starts_at:
          title: starts_at
          type: string
        warnings:
          items:
            type: string
          title: warnings
          type: array
      required:
      - warnings
      title: PersonalisedMusicPlaylistVersion
      type: object
    PersonalisedMusicRequest:
      example:
        added_at: added_at
        context: context
        meta_data:
          key: key
        action: action
      properties:
        action:
          title: action
          type: string
        added_at:
          title: added_at
          type: string
        context:
          title: context
          type: string
        meta_data:
          $ref: '#/components/schemas/PersonalisedMusicMetaData'
      required:
      - action
      title: PersonalisedMusicRequest
      type: object
    PersonalisedMusicResponse:
      example:
        schema: schema
        total: 5
        method: method
        offset: 6
        limit: 0
        replied_at: replied_at
        results:
        - urn: urn
          added_at: added_at
          activity: activity
          data:
          - playlist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              updated_at: updated_at
              playback_type: playback_type
              service_id: service_id
              description: description
              title: title
              type: type
              version:
                duration: duration
                starts_at: starts_at
                expires_at: expires_at
                warnings:
                - warnings
                - warnings
                id: id
              tracks:
                images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                contributions:
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                id: id
                media:
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                title: title
                type: type
                version:
                  duration: duration
                  vpid: vpid
                  classical: true
                  radio: true
            artist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            service:
              id: id
              title: title
              type: type
              key: key
            genre:
              id: id
              title: title
              type: type
              key: key
            track:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              contributions:
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              id: id
              media:
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              title: title
              type: type
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
            clip:
              masterbrandMid: masterbrandMid
              parentProgramme:
                entityType: entityType
                pid: pid
                title: title
              endDate: endDate
              entityType: entityType
              imageUrl: imageUrl
              mediaType: mediaType
              pid: pid
              contributors:
              - contributors
              - contributors
              synopsis: synopsis
              title: title
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
              startDate: startDate
          - playlist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              updated_at: updated_at
              playback_type: playback_type
              service_id: service_id
              description: description
              title: title
              type: type
              version:
                duration: duration
                starts_at: starts_at
                expires_at: expires_at
                warnings:
                - warnings
                - warnings
                id: id
              tracks:
                images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                contributions:
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                id: id
                media:
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                title: title
                type: type
                version:
                  duration: duration
                  vpid: vpid
                  classical: true
                  radio: true
            artist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            service:
              id: id
              title: title
              type: type
              key: key
            genre:
              id: id
              title: title
              type: type
              key: key
            track:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              contributions:
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              id: id
              media:
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              title: title
              type: type
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
            clip:
              masterbrandMid: masterbrandMid
              parentProgramme:
                entityType: entityType
                pid: pid
                title: title
              endDate: endDate
              entityType: entityType
              imageUrl: imageUrl
              mediaType: mediaType
              pid: pid
              contributors:
              - contributors
              - contributors
              synopsis: synopsis
              title: title
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
              startDate: startDate
          domain: domain
          meta_data:
            key: key
          action: action
          id: id
          type: type
        - urn: urn
          added_at: added_at
          activity: activity
          data:
          - playlist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              updated_at: updated_at
              playback_type: playback_type
              service_id: service_id
              description: description
              title: title
              type: type
              version:
                duration: duration
                starts_at: starts_at
                expires_at: expires_at
                warnings:
                - warnings
                - warnings
                id: id
              tracks:
                images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                contributions:
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                id: id
                media:
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                title: title
                type: type
                version:
                  duration: duration
                  vpid: vpid
                  classical: true
                  radio: true
            artist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            service:
              id: id
              title: title
              type: type
              key: key
            genre:
              id: id
              title: title
              type: type
              key: key
            track:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              contributions:
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              id: id
              media:
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              title: title
              type: type
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
            clip:
              masterbrandMid: masterbrandMid
              parentProgramme:
                entityType: entityType
                pid: pid
                title: title
              endDate: endDate
              entityType: entityType
              imageUrl: imageUrl
              mediaType: mediaType
              pid: pid
              contributors:
              - contributors
              - contributors
              synopsis: synopsis
              title: title
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
              startDate: startDate
          - playlist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              updated_at: updated_at
              playback_type: playback_type
              service_id: service_id
              description: description
              title: title
              type: type
              version:
                duration: duration
                starts_at: starts_at
                expires_at: expires_at
                warnings:
                - warnings
                - warnings
                id: id
              tracks:
                images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                contributions:
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                - images:
                  - format: format
                    id: id
                    type: type
                  - format: format
                    id: id
                    type: type
                  role: role
                  name: name
                  id: id
                id: id
                media:
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                - duration: 1
                  scope: scope
                  format: format
                  id: id
                  source: source
                  type: type
                title: title
                type: type
                version:
                  duration: duration
                  vpid: vpid
                  classical: true
                  radio: true
            artist:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              role: role
              name: name
              id: id
            service:
              id: id
              title: title
              type: type
              key: key
            genre:
              id: id
              title: title
              type: type
              key: key
            track:
              images:
              - format: format
                id: id
                type: type
              - format: format
                id: id
                type: type
              contributions:
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              - images:
                - format: format
                  id: id
                  type: type
                - format: format
                  id: id
                  type: type
                role: role
                name: name
                id: id
              id: id
              media:
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              - duration: 1
                scope: scope
                format: format
                id: id
                source: source
                type: type
              title: title
              type: type
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
            clip:
              masterbrandMid: masterbrandMid
              parentProgramme:
                entityType: entityType
                pid: pid
                title: title
              endDate: endDate
              entityType: entityType
              imageUrl: imageUrl
              mediaType: mediaType
              pid: pid
              contributors:
              - contributors
              - contributors
              synopsis: synopsis
              title: title
              version:
                duration: duration
                vpid: vpid
                classical: true
                radio: true
              startDate: startDate
          domain: domain
          meta_data:
            key: key
          action: action
          id: id
          type: type
      properties:
        limit:
          title: limit
          type: integer
        method:
          title: method
          type: string
        offset:
          title: offset
          type: integer
        replied_at:
          title: replied_at
          type: string
        results:
          items:
            $ref: '#/components/schemas/PersonalisedMusicActivity'
          title: results
          type: array
        schema:
          title: schema
          type: string
        total:
          title: total
          type: integer
      required:
      - limit
      - method
      - offset
      - replied_at
      - results
      - schema
      - total
      title: PersonalisedMusicResponse
      type: object
    PersonalisedMusicService:
      example:
        id: id
        title: title
        type: type
        key: key
      properties:
        id:
          title: id
          type: string
        key:
          title: key
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      title: PersonalisedMusicService
      type: object
    PersonalisedMusicSuccess:
      example:
        schema: schema
        method: method
        replied_at: replied_at
      properties:
        method:
          title: method
          type: string
        replied_at:
          title: replied_at
          type: string
        schema:
          title: schema
          type: string
      required:
      - method
      - replied_at
      - schema
      title: PersonalisedMusicSuccess
      type: object
    PersonalisedMusicTrack:
      example:
        images:
        - format: format
          id: id
          type: type
        - format: format
          id: id
          type: type
        contributions:
        - images:
          - format: format
            id: id
            type: type
          - format: format
            id: id
            type: type
          role: role
          name: name
          id: id
        - images:
          - format: format
            id: id
            type: type
          - format: format
            id: id
            type: type
          role: role
          name: name
          id: id
        id: id
        media:
        - duration: 1
          scope: scope
          format: format
          id: id
          source: source
          type: type
        - duration: 1
          scope: scope
          format: format
          id: id
          source: source
          type: type
        title: title
        type: type
        version:
          duration: duration
          vpid: vpid
          classical: true
          radio: true
      properties:
        contributions:
          items:
            $ref: '#/components/schemas/PersonalisedMusicTrackContribution'
          title: contributions
          type: array
        id:
          title: id
          type: string
        images:
          items:
            $ref: '#/components/schemas/PersonalisedMusicTrackImage'
          title: images
          type: array
        media:
          items:
            $ref: '#/components/schemas/PersonalisedMusicTrackMedia'
          title: media
          type: array
        title:
          title: title
          type: string
        type:
          title: type
          type: string
        version:
          $ref: '#/components/schemas/PersonalisedMusicVersion'
      required:
      - contributions
      - id
      - images
      - media
      - title
      - type
      - version
      title: PersonalisedMusicTrack
      type: object
    PersonalisedMusicTrackContribution:
      example:
        images:
        - format: format
          id: id
          type: type
        - format: format
          id: id
          type: type
        role: role
        name: name
        id: id
      properties:
        id:
          title: id
          type: string
        images:
          items:
            $ref: '#/components/schemas/PersonalisedMusicTrackImage'
          title: images
          type: array
        name:
          title: name
          type: string
        role:
          title: role
          type: string
      required:
      - id
      - images
      - name
      - role
      title: PersonalisedMusicTrackContribution
      type: object
    PersonalisedMusicTrackImage:
      example:
        format: format
        id: id
        type: type
      properties:
        format:
          title: format
          type: string
        id:
          title: id
          type: string
        type:
          title: type
          type: string
      required:
      - format
      - id
      - type
      title: PersonalisedMusicTrackImage
      type: object
    PersonalisedMusicTrackMedia:
      example:
        duration: 1
        scope: scope
        format: format
        id: id
        source: source
        type: type
      properties:
        duration:
          title: duration
          type: integer
        format:
          title: format
          type: string
        id:
          title: id
          type: string
        scope:
          title: scope
          type: string
        source:
          title: source
          type: string
        type:
          title: type
          type: string
      required:
      - duration
      - format
      - id
      - scope
      - source
      - type
      title: PersonalisedMusicTrackMedia
      type: object
    PersonalisedMusicVersion:
      example:
        duration: duration
        vpid: vpid
        classical: true
        radio: true
      properties:
        classical:
          title: classical
          type: boolean
        duration:
          title: duration
          type: string
        radio:
          title: radio
          type: boolean
        vpid:
          title: vpid
          type: string
      title: PersonalisedMusicVersion
      type: object
    PersonalisedNetworks:
      example:
        created: created
        type: type
      properties:
        created:
          title: created
          type: string
        type:
          title: type
          type: string
      required:
      - created
      - type
      title: PersonalisedNetworks
      type: object
    PersonalisedNetworksResponse:
      example:
        total: 1
        $schema: $schema
        offset: 6
        limit: 0
        results:
        - created: created
          type: type
        - created: created
          type: type
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        results:
          items:
            $ref: '#/components/schemas/PersonalisedNetworks'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: PersonalisedNetworksResponse
      type: object
    PersonalisedRadioActivity:
      example:
        urn: urn
        added_at: added_at
        metadata:
          miscellaneous:
            title: title
          origin:
            type: type
          type: type
          programme_type: programme_type
        activity: activity
        data:
          pid: pid
          type: brand_summary
        uas_type: uas_type
        domain: domain
        action: action
        id: id
        type: type
      properties:
        action:
          title: action
          type: string
        activity:
          title: activity
          type: string
        added_at:
          title: added_at
          type: string
        data:
          $ref: '#/components/schemas/ProgrammeSummary'
        domain:
          title: domain
          type: string
        id:
          title: id
          type: string
        metadata:
          $ref: '#/components/schemas/MetaData'
        type:
          title: type
          type: string
        uas_type:
          title: uas_type
          type: string
        urn:
          title: urn
          type: string
      required:
      - action
      - activity
      - added_at
      - data
      - domain
      - id
      - metadata
      - type
      - uas_type
      - urn
      title: PersonalisedRadioActivity
      type: object
    PersonalisedRadioBatchRequest:
      example:
        added_at: added_at
        metadata:
          key: key
        context: context
        action: action
        id: id
        type: type
      properties:
        action:
          title: action
          type: string
        added_at:
          title: added_at
          type: string
        context:
          title: context
          type: string
        id:
          title: id
          type: string
        metadata:
          $ref: '#/components/schemas/PersonalisedRadioMetaData'
        type:
          title: type
          type: string
      required:
      - action
      title: PersonalisedRadioBatchRequest
      type: object
    PersonalisedRadioErrorResponse:
      example:
        $schema: $schema
        errors:
        - code: code
          detail: detail
          href: href
          id: id
          title: title
          status: 5
          timestamp: 5
        - code: code
          detail: detail
          href: href
          id: id
          title: title
          status: 5
          timestamp: 5
      properties:
        $schema:
          title: $schema
          type: string
        errors:
          items:
            $ref: '#/components/schemas/PersonalisedRadioErrorResponse_errors'
          title: errors
          type: array
      required:
      - $schema
      - errors
      title: PersonalisedRadioErrorResponse
      type: object
    PersonalisedRadioErrorResponse_errors:
      example:
        code: code
        detail: detail
        href: href
        id: id
        title: title
        status: 5
        timestamp: 5
      properties:
        code:
          title: code
          type: string
        detail:
          title: detail
          type: string
        href:
          title: href
          type: string
        id:
          title: id
          type: string
        status:
          title: status
          type: integer
        timestamp:
          title: timestamp
          type: integer
        title:
          title: title
          type: string
      required:
      - code
      - detail
      - href
      - id
      - status
      - timestamp
      - title
      title: PersonalisedRadioErrorResponse_errors
      type: object
    PersonalisedRadioMetaData:
      example:
        key: key
      properties:
        key:
          title: key
          type: string
      required:
      - key
      title: PersonalisedRadioMetaData
      type: object
    PersonalisedRadioRequest:
      example:
        added_at: added_at
        metadata:
          key: key
        context: context
        action: action
      properties:
        action:
          title: action
          type: string
        added_at:
          title: added_at
          type: string
        context:
          title: context
          type: string
        metadata:
          $ref: '#/components/schemas/PersonalisedRadioMetaData'
      required:
      - action
      title: PersonalisedRadioRequest
      type: object
    PersonalisedRadioResponse:
      example:
        total: 1
        $schema: $schema
        method: method
        offset: 6
        limit: 0
        replied_at: replied_at
        results:
        - urn: urn
          added_at: added_at
          metadata:
            miscellaneous:
              title: title
            origin:
              type: type
            type: type
            programme_type: programme_type
          activity: activity
          data:
            pid: pid
            type: brand_summary
          uas_type: uas_type
          domain: domain
          action: action
          id: id
          type: type
        - urn: urn
          added_at: added_at
          metadata:
            miscellaneous:
              title: title
            origin:
              type: type
            type: type
            programme_type: programme_type
          activity: activity
          data:
            pid: pid
            type: brand_summary
          uas_type: uas_type
          domain: domain
          action: action
          id: id
          type: type
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        method:
          title: method
          type: string
        offset:
          title: offset
          type: integer
        replied_at:
          title: replied_at
          type: string
        results:
          items:
            $ref: '#/components/schemas/PersonalisedRadioActivity'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - method
      - offset
      - replied_at
      - results
      - total
      title: PersonalisedRadioResponse
      type: object
    PersonalisedRadioSuccessResponse:
      example:
        $schema: $schema
        method: method
        replied_at: replied_at
      properties:
        $schema:
          title: $schema
          type: string
        method:
          title: method
          type: string
        replied_at:
          title: replied_at
          type: string
      required:
      - $schema
      - method
      - replied_at
      title: PersonalisedRadioSuccessResponse
      type: object
    PlayableItem:
      example:
        version_pid: version_pid
        image_url: image_url
        description: description
        pid: pid
        title: title
        type: type
      properties:
        description:
          title: description
          type: string
        image_url:
          title: image_url
          type: string
        pid:
          title: pid
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
        version_pid:
          title: version_pid
          type: string
      title: PlayableItem
      type: object
    PlayspaceContainer:
      example:
        members:
        - version_pid: version_pid
          image_url: image_url
          description: description
          pid: pid
          title: title
          type: type
        - version_pid: version_pid
          image_url: image_url
          description: description
          pid: pid
          title: title
          type: type
        id: id
        title: title
        type: type
      properties:
        id:
          title: id
          type: string
        members:
          items:
            $ref: '#/components/schemas/PlayableItem'
          title: members
          type: array
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      title: PlayspaceContainer
      type: object
    Podcast:
      example:
        images:
        - template_url: template_url
          id: id
          type: type
          image_type: image_type
        - template_url: template_url
          id: id
          type: type
          image_type: image_type
        first_published_date: first_published_date
        rss_url: rss_url
        synopses:
          short: short
          medium: medium
          type: type
          long: long
        pid: pid
        titles:
          entity_title: entity_title
          secondary_title: secondary_title
          display_title: display_title
          primary_title: primary_title
          type: type
        type: type
        category_summaries:
        - category_type: category_type
          id: id
          title: title
          type: type
          key: key
        - category_type: category_type
          id: id
          title: title
          type: type
          key: key
        latest_available_episodes:
        - short_synopsis: short_synopsis
          images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          media_type: media_type
          release_date: release_date
          available_versions:
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          asset_url: asset_url
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          type: type
        - short_synopsis: short_synopsis
          images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          media_type: media_type
          release_date: release_date
          available_versions:
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          asset_url: asset_url
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          type: type
        frequency: frequency
        entity_type: entity_type
        updated_at: updated_at
        total_available_episodes: 5
        network_summary:
          active: true
          id: id
          titles:
            short_title: short_title
            type: type
            long_title: long_title
          type: type
          key: key
          group: group
        days_available: 1
        territory: territory
      properties:
        category_summaries:
          items:
            $ref: '#/components/schemas/CategorySummary'
          title: category_summaries
          type: array
        days_available:
          title: days_available
          type: integer
        entity_type:
          title: entity_type
          type: string
        first_published_date:
          title: first_published_date
          type: string
        frequency:
          title: frequency
          type: string
        images:
          items:
            $ref: '#/components/schemas/Image'
          title: images
          type: array
        latest_available_episodes:
          items:
            $ref: '#/components/schemas/PodcastEpisodeSummary'
          title: latest_available_episodes
          type: array
        network_summary:
          $ref: '#/components/schemas/NetworkSummary'
        pid:
          title: pid
          type: string
        rss_url:
          title: rss_url
          type: string
        synopses:
          $ref: '#/components/schemas/PodcastSynopses'
        territory:
          title: territory
          type: string
        titles:
          $ref: '#/components/schemas/ProgrammeTitles'
        total_available_episodes:
          title: total_available_episodes
          type: integer
        type:
          title: type
          type: string
        updated_at:
          title: updated_at
          type: string
      required:
      - category_summaries
      - days_available
      - entity_type
      - first_published_date
      - frequency
      - images
      - latest_available_episodes
      - network_summary
      - pid
      - rss_url
      - synopses
      - territory
      - titles
      - total_available_episodes
      - type
      - updated_at
      title: Podcast
      type: object
    PodcastEpisodeSummary:
      example:
        short_synopsis: short_synopsis
        images:
        - template_url: template_url
          id: id
          type: type
          image_type: image_type
        - template_url: template_url
          id: id
          type: type
          image_type: image_type
        media_type: media_type
        release_date: release_date
        available_versions:
        - duration: duration
          version_pid: version_pid
          available_to_date: available_to_date
          version_type: version_type
          available: available
          available_from_date: available_from_date
          type: type
          has_guidance: true
          media_set: media_set
        - duration: duration
          version_pid: version_pid
          available_to_date: available_to_date
          version_type: version_type
          available: available
          available_from_date: available_from_date
          type: type
          has_guidance: true
          media_set: media_set
        asset_url: asset_url
        pid: pid
        titles:
          entity_title: entity_title
          secondary_title: secondary_title
          display_title: display_title
          primary_title: primary_title
          type: type
        network_summary:
          active: true
          id: id
          titles:
            short_title: short_title
            type: type
            long_title: long_title
          type: type
          key: key
          group: group
        type: type
      properties:
        asset_url:
          title: asset_url
          type: string
        available_versions:
          items:
            $ref: '#/components/schemas/AvailableVersions'
          title: available_versions
          type: array
        images:
          items:
            $ref: '#/components/schemas/Image'
          title: images
          type: array
        media_type:
          title: media_type
          type: string
        network_summary:
          $ref: '#/components/schemas/NetworkSummary'
        pid:
          title: pid
          type: string
        release_date:
          title: release_date
          type: string
        short_synopsis:
          title: short_synopsis
          type: string
        titles:
          $ref: '#/components/schemas/ProgrammeTitles'
        type:
          title: type
          type: string
      required:
      - asset_url
      - available_versions
      - images
      - media_type
      - network_summary
      - pid
      - release_date
      - short_synopsis
      - titles
      - type
      title: PodcastEpisodeSummary
      type: object
    PodcastEpisodesResponse:
      example:
        total: 1.4658129805029452
        $schema: $schema
        offset: 6.027456183070403
        limit: 0.8008281904610115
        results:
        - short_synopsis: short_synopsis
          images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          media_type: media_type
          release_date: release_date
          available_versions:
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          asset_url: asset_url
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          type: type
        - short_synopsis: short_synopsis
          images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          media_type: media_type
          release_date: release_date
          available_versions:
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          - duration: duration
            version_pid: version_pid
            available_to_date: available_to_date
            version_type: version_type
            available: available
            available_from_date: available_from_date
            type: type
            has_guidance: true
            media_set: media_set
          asset_url: asset_url
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          type: type
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: number
        offset:
          title: offset
          type: number
        results:
          items:
            $ref: '#/components/schemas/PodcastEpisodeSummary'
          title: results
          type: array
        total:
          title: total
          type: number
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: PodcastEpisodesResponse
      type: object
    PodcastError:
      example:
        replied_at: replied_at
        href: href
        id: id
        message: message
        status: 2.3021358869347655
      properties:
        href:
          title: href
          type: string
        id:
          title: id
          type: string
        message:
          title: message
          type: string
        replied_at:
          title: replied_at
          type: string
        status:
          title: status
          type: number
      title: PodcastError
      type: object
    PodcastErrorResponse:
      example:
        $schema: $schema
        errors:
        - replied_at: replied_at
          href: href
          id: id
          message: message
          status: 2.3021358869347655
        - replied_at: replied_at
          href: href
          id: id
          message: message
          status: 2.3021358869347655
      properties:
        $schema:
          title: $schema
          type: string
        errors:
          items:
            $ref: '#/components/schemas/PodcastError'
          title: errors
          type: array
      title: PodcastErrorResponse
      type: object
    PodcastSynopses:
      example:
        short: short
        medium: medium
        type: type
        long: long
      properties:
        long:
          title: long
          type: string
        medium:
          title: medium
          type: string
        short:
          title: short
          type: string
        type:
          title: type
          type: string
      required:
      - long
      - medium
      - short
      - type
      title: PodcastSynopses
      type: object
    PodcastsFeatured:
      example:
        featured_podcasts:
        - images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          first_published_date: first_published_date
          rss_url: rss_url
          synopses:
            short: short
            medium: medium
            type: type
            long: long
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          type: type
          category_summaries:
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          latest_available_episodes:
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          frequency: frequency
          entity_type: entity_type
          updated_at: updated_at
          total_available_episodes: 5
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          days_available: 1
          territory: territory
        - images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          first_published_date: first_published_date
          rss_url: rss_url
          synopses:
            short: short
            medium: medium
            type: type
            long: long
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          type: type
          category_summaries:
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          latest_available_episodes:
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          frequency: frequency
          entity_type: entity_type
          updated_at: updated_at
          total_available_episodes: 5
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          days_available: 1
          territory: territory
        title: title
        type: type
      properties:
        featured_podcasts:
          items:
            $ref: '#/components/schemas/Podcast'
          title: featured_podcasts
          type: array
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      title: PodcastsFeatured
      type: object
    PodcastsFeaturedResponse:
      example:
        total: 1.4658129805029452
        $schema: $schema
        offset: 6.027456183070403
        limit: 0.8008281904610115
        results:
        - featured_podcasts:
          - images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            first_published_date: first_published_date
            rss_url: rss_url
            synopses:
              short: short
              medium: medium
              type: type
              long: long
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            type: type
            category_summaries:
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            latest_available_episodes:
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            frequency: frequency
            entity_type: entity_type
            updated_at: updated_at
            total_available_episodes: 5
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            days_available: 1
            territory: territory
          - images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            first_published_date: first_published_date
            rss_url: rss_url
            synopses:
              short: short
              medium: medium
              type: type
              long: long
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            type: type
            category_summaries:
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            latest_available_episodes:
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            frequency: frequency
            entity_type: entity_type
            updated_at: updated_at
            total_available_episodes: 5
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            days_available: 1
            territory: territory
          title: title
          type: type
        - featured_podcasts:
          - images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            first_published_date: first_published_date
            rss_url: rss_url
            synopses:
              short: short
              medium: medium
              type: type
              long: long
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            type: type
            category_summaries:
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            latest_available_episodes:
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            frequency: frequency
            entity_type: entity_type
            updated_at: updated_at
            total_available_episodes: 5
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            days_available: 1
            territory: territory
          - images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            first_published_date: first_published_date
            rss_url: rss_url
            synopses:
              short: short
              medium: medium
              type: type
              long: long
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            type: type
            category_summaries:
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            - category_type: category_type
              id: id
              title: title
              type: type
              key: key
            latest_available_episodes:
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            - short_synopsis: short_synopsis
              images:
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              - template_url: template_url
                id: id
                type: type
                image_type: image_type
              media_type: media_type
              release_date: release_date
              available_versions:
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              - duration: duration
                version_pid: version_pid
                available_to_date: available_to_date
                version_type: version_type
                available: available
                available_from_date: available_from_date
                type: type
                has_guidance: true
                media_set: media_set
              asset_url: asset_url
              pid: pid
              titles:
                entity_title: entity_title
                secondary_title: secondary_title
                display_title: display_title
                primary_title: primary_title
                type: type
              network_summary:
                active: true
                id: id
                titles:
                  short_title: short_title
                  type: type
                  long_title: long_title
                type: type
                key: key
                group: group
              type: type
            frequency: frequency
            entity_type: entity_type
            updated_at: updated_at
            total_available_episodes: 5
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            days_available: 1
            territory: territory
          title: title
          type: type
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: number
        offset:
          title: offset
          type: number
        results:
          items:
            $ref: '#/components/schemas/PodcastsFeatured'
          title: results
          type: array
        total:
          title: total
          type: number
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: PodcastsFeaturedResponse
      type: object
    PodcastsResponse:
      example:
        total: 5
        $schema: $schema
        offset: 6
        limit: 0
        results:
        - images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          first_published_date: first_published_date
          rss_url: rss_url
          synopses:
            short: short
            medium: medium
            type: type
            long: long
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          type: type
          category_summaries:
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          latest_available_episodes:
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          frequency: frequency
          entity_type: entity_type
          updated_at: updated_at
          total_available_episodes: 5
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          days_available: 1
          territory: territory
        - images:
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          - template_url: template_url
            id: id
            type: type
            image_type: image_type
          first_published_date: first_published_date
          rss_url: rss_url
          synopses:
            short: short
            medium: medium
            type: type
            long: long
          pid: pid
          titles:
            entity_title: entity_title
            secondary_title: secondary_title
            display_title: display_title
            primary_title: primary_title
            type: type
          type: type
          category_summaries:
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          - category_type: category_type
            id: id
            title: title
            type: type
            key: key
          latest_available_episodes:
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          - short_synopsis: short_synopsis
            images:
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            - template_url: template_url
              id: id
              type: type
              image_type: image_type
            media_type: media_type
            release_date: release_date
            available_versions:
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            - duration: duration
              version_pid: version_pid
              available_to_date: available_to_date
              version_type: version_type
              available: available
              available_from_date: available_from_date
              type: type
              has_guidance: true
              media_set: media_set
            asset_url: asset_url
            pid: pid
            titles:
              entity_title: entity_title
              secondary_title: secondary_title
              display_title: display_title
              primary_title: primary_title
              type: type
            network_summary:
              active: true
              id: id
              titles:
                short_title: short_title
                type: type
                long_title: long_title
              type: type
              key: key
              group: group
            type: type
          frequency: frequency
          entity_type: entity_type
          updated_at: updated_at
          total_available_episodes: 5
          network_summary:
            active: true
            id: id
            titles:
              short_title: short_title
              type: type
              long_title: long_title
            type: type
            key: key
            group: group
          days_available: 1
          territory: territory
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        results:
          items:
            $ref: '#/components/schemas/Podcast'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: PodcastsResponse
      type: object
    PopularError:
      example:
        replied_at: replied_at
        href: href
        id: id
        message: message
        status: 5
      properties:
        href:
          title: href
          type: string
        id:
          title: id
          type: string
        message:
          title: message
          type: string
        replied_at:
          title: replied_at
          type: string
        status:
          title: status
          type: integer
      required:
      - href
      - id
      - message
      - replied_at
      - status
      title: PopularError
      type: object
    PopularErrorResponse:
      example:
        $schema: $schema
        errors:
        - replied_at: replied_at
          href: href
          id: id
          message: message
          status: 5
        - replied_at: replied_at
          href: href
          id: id
          message: message
          status: 5
      properties:
        $schema:
          title: $schema
          type: string
        errors:
          items:
            $ref: '#/components/schemas/PopularError'
          title: errors
          type: array
      required:
      - $schema
      - errors
      title: PopularErrorResponse
      type: object
    PopularItemSummary:
      example:
        score: 1
        data:
          pid: pid
          type: brand_summary
        id: id
        type: type
      properties:
        data:
          $ref: '#/components/schemas/ProgrammeSummary'
        id:
          title: id
          type: string
        score:
          title: score
          type: integer
        type:
          title: type
          type: string
      required:
      - data
      - id
      - score
      - type
      title: PopularItemSummary
      type: object
    PopularResponse:
      example:
        total: 5
        $schema: $schema
        offset: 6
        limit: 0
        results:
        - score: 1
          data:
            pid: pid
            type: brand_summary
          id: id
          type: type
        - score: 1
          data:
            pid: pid
            type: brand_summary
          id: id
          type: type
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        results:
          items:
            $ref: '#/components/schemas/PopularItemSummary'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: PopularResponse
      type: object
    Programme:
      properties:
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        latest_available_episodes:
          items:
            $ref: '#/components/schemas/EpisodeSummary'
          type: array
        network_summary:
          $ref: '#/components/schemas/NetworkSummary'
        pid:
          type: string
        short_synopsis:
          type: string
        titles:
          $ref: '#/components/schemas/ProgrammeTitles'
        total_available_episodes:
          type: integer
        type:
          enum:
          - brand_summary
          - series_summary
          - episode_summary
          - clip_summary
          type: string
      required:
      - images
      - network_summary
      - pid
      - short_synopsis
      - titles
      - type
      type: object
    ProgrammeSummary:
      example:
        pid: pid
        type: brand_summary
      properties:
        pid:
          title: pid
          type: string
        type:
          enum:
          - brand_summary
          - series_summary
          - episode_summary
          - clip_summary
          title: type
          type: string
      required:
      - pid
      - type
      title: ProgrammeSummary
      type: object
    ProgrammeTitles:
      example:
        entity_title: entity_title
        secondary_title: secondary_title
        display_title: display_title
        primary_title: primary_title
        type: type
      properties:
        display_title:
          title: display_title
          type: string
        entity_title:
          title: entity_title
          type: string
        primary_title:
          title: primary_title
          type: string
        secondary_title:
          title: secondary_title
          type: string
        type:
          title: type
          type: string
      required:
      - type
      title: ProgrammeTitles
      type: object
    ProgrammesResponse:
      example:
        total: 1
        $schema: $schema
        offset: 6
        limit: 0
        results:
        - pid: pid
          type: brand_summary
        - pid: pid
          type: brand_summary
      properties:
        $schema:
          title: $schema
          type: string
        limit:
          title: limit
          type: integer
        offset:
          title: offset
          type: integer
        results:
          items:
            $ref: '#/components/schemas/ProgrammeSummary'
          title: results
          type: array
        total:
          title: total
          type: integer
      required:
      - $schema
      - limit
      - offset
      - results
      - total
      title: ProgrammesResponse
      type: object
    RadioError:
      example:
        code: code
        detail: detail
        href: href
        id: id
        title: title
        status: 5
        timestamp: 2
      properties:
        code:
          title: code
          type: string
        detail:
          title: detail
          type: string
        href:
          title: href
          type: string
        id:
          title: id
          type: string
        status:
          title: status
          type: integer
        timestamp:
          title: timestamp
          type: integer
        title:
          title: title
          type: string
      required:
      - code
      - detail
      - href
      - id
      - status
      - timestamp
      - title
      title: RadioError
      type: object
    RadioErrorResponse:
      example:
        $schema: $schema
        errors:
        - code: code
          detail: detail
          href: href
          id: id
          title: title
          status: 5
          timestamp: 2
        - code: code
          detail: detail
          href: href
          id: id
          title: title
          status: 5
          timestamp: 2
      properties:
        $schema:
          title: $schema
          type: string
        errors:
          items:
            $ref: '#/components/schemas/RadioError'
          title: errors
          type: array
      required:
      - $schema
      - errors
      title: RadioErrorResponse
      type: object
    SeriesSummary:
      properties:
        ancestors:
          items:
            $ref: '#/components/schemas/AncestorSummary'
          type: array
        images:
          items:
            $ref: '#/components/schemas/Image'
          type: array
        latest_available_episodes:
          items:
            $ref: '#/components/schemas/EpisodeSummary'
          type: array
        network_summary:
          $ref: '#/components/schemas/NetworkSummary'
        pid:
          type: string
        short_synopsis:
          type: string
        titles:
          $ref: '#/components/schemas/ProgrammeTitles'
        total_available_episodes:
          type: integer
        type:
          enum:
          - series_summary
          type: string
      required:
      - ancestors
      - images
      - latest_available_episodes
      - network_summary
      - pid
      - short_synopsis
      - titles
      - total_available_episodes
      - type
      type: object
    Service:
      example:
        coverage: coverage
        date_ranges:
        - start: start
          end: end
        - start: start
          end: end
        default: true
        short_title: short_title
        active: true
        id: id
        default_language: default_language
        region: region
        title: title
        type: type
      properties:
        active:
          title: active
          type: boolean
        coverage:
          title: coverage
          type: string
        date_ranges:
          items:
            $ref: '#/components/schemas/DateRange'
          title: date_ranges
          type: array
        default:
          title: default
          type: boolean
        default_language:
          title: default_language
          type: string
        id:
          title: id
          type: string
        region:
          title: region
          type: string
        short_title:
          title: short_title
          type: string
        title:
          title: title
          type: string
        type:
          title: type
          type: string
      required:
      - active
      - coverage
      - date_ranges
      - default
      - default_language
      - id
      - region
      - short_title
      - title
      - type
      title: Service
      type: object
x-original-swagger-version: "2.0"
