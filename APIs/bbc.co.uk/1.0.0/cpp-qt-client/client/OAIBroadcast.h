/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBroadcast.h
 *
 * 
 */

#ifndef OAIBroadcast_H
#define OAIBroadcast_H

#include <QJsonObject>

#include "OAIProgrammeSummary.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProgrammeSummary;

class OAIBroadcast : public OAIObject {
public:
    OAIBroadcast();
    OAIBroadcast(QString json);
    ~OAIBroadcast() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    QString getEnd() const;
    void setEnd(const QString &end);
    bool is_end_Set() const;
    bool is_end_Valid() const;

    bool isIsAudioDescribed() const;
    void setIsAudioDescribed(const bool &is_audio_described);
    bool is_is_audio_described_Set() const;
    bool is_is_audio_described_Valid() const;

    bool isIsBlanked() const;
    void setIsBlanked(const bool &is_blanked);
    bool is_is_blanked_Set() const;
    bool is_is_blanked_Valid() const;

    bool isIsCritical() const;
    void setIsCritical(const bool &is_critical);
    bool is_is_critical_Set() const;
    bool is_is_critical_Valid() const;

    bool isIsLive() const;
    void setIsLive(const bool &is_live);
    bool is_is_live_Set() const;
    bool is_is_live_Valid() const;

    bool isIsRepeat() const;
    void setIsRepeat(const bool &is_repeat);
    bool is_is_repeat_Set() const;
    bool is_is_repeat_Valid() const;

    bool isIsWebcast() const;
    void setIsWebcast(const bool &is_webcast);
    bool is_is_webcast_Set() const;
    bool is_is_webcast_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    OAIProgrammeSummary getProgramme() const;
    void setProgramme(const OAIProgrammeSummary &programme);
    bool is_programme_Set() const;
    bool is_programme_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getVersionPid() const;
    void setVersionPid(const QString &version_pid);
    bool is_version_pid_Set() const;
    bool is_version_pid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    QString m_end;
    bool m_end_isSet;
    bool m_end_isValid;

    bool m_is_audio_described;
    bool m_is_audio_described_isSet;
    bool m_is_audio_described_isValid;

    bool m_is_blanked;
    bool m_is_blanked_isSet;
    bool m_is_blanked_isValid;

    bool m_is_critical;
    bool m_is_critical_isSet;
    bool m_is_critical_isValid;

    bool m_is_live;
    bool m_is_live_isSet;
    bool m_is_live_isValid;

    bool m_is_repeat;
    bool m_is_repeat_isSet;
    bool m_is_repeat_isValid;

    bool m_is_webcast;
    bool m_is_webcast_isSet;
    bool m_is_webcast_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    OAIProgrammeSummary m_programme;
    bool m_programme_isSet;
    bool m_programme_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_version_pid;
    bool m_version_pid_isSet;
    bool m_version_pid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBroadcast)

#endif // OAIBroadcast_H
