/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPersonalisedRadioSuccessResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPersonalisedRadioSuccessResponse::OAIPersonalisedRadioSuccessResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPersonalisedRadioSuccessResponse::OAIPersonalisedRadioSuccessResponse() {
    this->initializeModel();
}

OAIPersonalisedRadioSuccessResponse::~OAIPersonalisedRadioSuccessResponse() {}

void OAIPersonalisedRadioSuccessResponse::initializeModel() {

    m_schema_isSet = false;
    m_schema_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_replied_at_isSet = false;
    m_replied_at_isValid = false;
}

void OAIPersonalisedRadioSuccessResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPersonalisedRadioSuccessResponse::fromJsonObject(QJsonObject json) {

    m_schema_isValid = ::OpenAPI::fromJsonValue(m_schema, json[QString("$schema")]);
    m_schema_isSet = !json[QString("$schema")].isNull() && m_schema_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_replied_at_isValid = ::OpenAPI::fromJsonValue(m_replied_at, json[QString("replied_at")]);
    m_replied_at_isSet = !json[QString("replied_at")].isNull() && m_replied_at_isValid;
}

QString OAIPersonalisedRadioSuccessResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPersonalisedRadioSuccessResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_schema_isSet) {
        obj.insert(QString("$schema"), ::OpenAPI::toJsonValue(m_schema));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_replied_at_isSet) {
        obj.insert(QString("replied_at"), ::OpenAPI::toJsonValue(m_replied_at));
    }
    return obj;
}

QString OAIPersonalisedRadioSuccessResponse::getSchema() const {
    return m_schema;
}
void OAIPersonalisedRadioSuccessResponse::setSchema(const QString &schema) {
    m_schema = schema;
    m_schema_isSet = true;
}

bool OAIPersonalisedRadioSuccessResponse::is_schema_Set() const{
    return m_schema_isSet;
}

bool OAIPersonalisedRadioSuccessResponse::is_schema_Valid() const{
    return m_schema_isValid;
}

QString OAIPersonalisedRadioSuccessResponse::getMethod() const {
    return m_method;
}
void OAIPersonalisedRadioSuccessResponse::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIPersonalisedRadioSuccessResponse::is_method_Set() const{
    return m_method_isSet;
}

bool OAIPersonalisedRadioSuccessResponse::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIPersonalisedRadioSuccessResponse::getRepliedAt() const {
    return m_replied_at;
}
void OAIPersonalisedRadioSuccessResponse::setRepliedAt(const QString &replied_at) {
    m_replied_at = replied_at;
    m_replied_at_isSet = true;
}

bool OAIPersonalisedRadioSuccessResponse::is_replied_at_Set() const{
    return m_replied_at_isSet;
}

bool OAIPersonalisedRadioSuccessResponse::is_replied_at_Valid() const{
    return m_replied_at_isValid;
}

bool OAIPersonalisedRadioSuccessResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_schema_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replied_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPersonalisedRadioSuccessResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_schema_isValid && m_method_isValid && m_replied_at_isValid && true;
}

} // namespace OpenAPI
