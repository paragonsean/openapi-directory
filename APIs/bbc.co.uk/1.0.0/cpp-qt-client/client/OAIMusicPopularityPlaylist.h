/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMusicPopularityPlaylist.h
 *
 * 
 */

#ifndef OAIMusicPopularityPlaylist_H
#define OAIMusicPopularityPlaylist_H

#include <QJsonObject>

#include "OAIExternalPartner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExternalPartner;

class OAIMusicPopularityPlaylist : public OAIObject {
public:
    OAIMusicPopularityPlaylist();
    OAIMusicPopularityPlaylist(QString json);
    ~OAIMusicPopularityPlaylist() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getCategories() const;
    void setCategories(const QList<QString> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    bool isCommentsEnabled() const;
    void setCommentsEnabled(const bool &comments_enabled);
    bool is_comments_enabled_Set() const;
    bool is_comments_enabled_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIExternalPartner> getExternalPartners() const;
    void setExternalPartners(const QList<OAIExternalPartner> &external_partners);
    bool is_external_partners_Set() const;
    bool is_external_partners_Valid() const;

    QString getGenre() const;
    void setGenre(const QString &genre);
    bool is_genre_Set() const;
    bool is_genre_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getImagePid() const;
    void setImagePid(const QString &image_pid);
    bool is_image_pid_Set() const;
    bool is_image_pid_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    QString getMood() const;
    void setMood(const QString &mood);
    bool is_mood_Set() const;
    bool is_mood_Valid() const;

    bool isOneOff() const;
    void setOneOff(const bool &one_off);
    bool is_one_off_Set() const;
    bool is_one_off_Valid() const;

    QString getPlaylistPlaybackType() const;
    void setPlaylistPlaybackType(const QString &playlist_playback_type);
    bool is_playlist_playback_type_Set() const;
    bool is_playlist_playback_type_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getVisibility() const;
    void setVisibility(const QString &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    QString getWideImagePid() const;
    void setWideImagePid(const QString &wide_image_pid);
    bool is_wide_image_pid_Set() const;
    bool is_wide_image_pid_Valid() const;

    QString getWideImageUrl() const;
    void setWideImageUrl(const QString &wide_image_url);
    bool is_wide_image_url_Set() const;
    bool is_wide_image_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    bool m_comments_enabled;
    bool m_comments_enabled_isSet;
    bool m_comments_enabled_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIExternalPartner> m_external_partners;
    bool m_external_partners_isSet;
    bool m_external_partners_isValid;

    QString m_genre;
    bool m_genre_isSet;
    bool m_genre_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_image_pid;
    bool m_image_pid_isSet;
    bool m_image_pid_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    QString m_mood;
    bool m_mood_isSet;
    bool m_mood_isValid;

    bool m_one_off;
    bool m_one_off_isSet;
    bool m_one_off_isValid;

    QString m_playlist_playback_type;
    bool m_playlist_playback_type_isSet;
    bool m_playlist_playback_type_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;

    QString m_wide_image_pid;
    bool m_wide_image_pid_isSet;
    bool m_wide_image_pid_isValid;

    QString m_wide_image_url;
    bool m_wide_image_url_isSet;
    bool m_wide_image_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMusicPopularityPlaylist)

#endif // OAIMusicPopularityPlaylist_H
