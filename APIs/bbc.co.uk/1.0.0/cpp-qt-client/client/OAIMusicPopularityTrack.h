/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMusicPopularityTrack.h
 *
 * 
 */

#ifndef OAIMusicPopularityTrack_H
#define OAIMusicPopularityTrack_H

#include <QJsonObject>

#include "OAIMusicRecordAudio.h"
#include "OAIMusicTrackArtist.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMusicTrackArtist;
class OAIMusicRecordAudio;

class OAIMusicPopularityTrack : public OAIObject {
public:
    OAIMusicPopularityTrack();
    OAIMusicPopularityTrack(QString json);
    ~OAIMusicPopularityTrack() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlbum() const;
    void setAlbum(const QString &album);
    bool is_album_Set() const;
    bool is_album_Valid() const;

    QString getArtistGid() const;
    void setArtistGid(const QString &artist_gid);
    bool is_artist_gid_Set() const;
    bool is_artist_gid_Valid() const;

    QString getArtistName() const;
    void setArtistName(const QString &artist_name);
    bool is_artist_name_Set() const;
    bool is_artist_name_Valid() const;

    QList<OAIMusicTrackArtist> getArtists() const;
    void setArtists(const QList<OAIMusicTrackArtist> &artists);
    bool is_artists_Set() const;
    bool is_artists_Valid() const;

    QString getBaseTitle() const;
    void setBaseTitle(const QString &base_title);
    bool is_base_title_Set() const;
    bool is_base_title_Valid() const;

    bool isClassical() const;
    void setClassical(const bool &classical);
    bool is_classical_Set() const;
    bool is_classical_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getMergedIds() const;
    void setMergedIds(const QList<QString> &merged_ids);
    bool is_merged_ids_Set() const;
    bool is_merged_ids_Valid() const;

    OAIMusicRecordAudio getPreferredMultiplayRecordAudio() const;
    void setPreferredMultiplayRecordAudio(const OAIMusicRecordAudio &preferred_multiplay_record_audio);
    bool is_preferred_multiplay_record_audio_Set() const;
    bool is_preferred_multiplay_record_audio_Valid() const;

    OAIMusicRecordAudio getPreferredRecordAudio() const;
    void setPreferredRecordAudio(const OAIMusicRecordAudio &preferred_record_audio);
    bool is_preferred_record_audio_Set() const;
    bool is_preferred_record_audio_Valid() const;

    bool isRadioEdit() const;
    void setRadioEdit(const bool &radio_edit);
    bool is_radio_edit_Set() const;
    bool is_radio_edit_Valid() const;

    QList<OAIMusicRecordAudio> getRecordAudio() const;
    void setRecordAudio(const QList<OAIMusicRecordAudio> &record_audio);
    bool is_record_audio_Set() const;
    bool is_record_audio_Valid() const;

    QString getRecordImageHref() const;
    void setRecordImageHref(const QString &record_image_href);
    bool is_record_image_href_Set() const;
    bool is_record_image_href_Valid() const;

    QString getRecordImagePid() const;
    void setRecordImagePid(const QString &record_image_pid);
    bool is_record_image_pid_Set() const;
    bool is_record_image_pid_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_album;
    bool m_album_isSet;
    bool m_album_isValid;

    QString m_artist_gid;
    bool m_artist_gid_isSet;
    bool m_artist_gid_isValid;

    QString m_artist_name;
    bool m_artist_name_isSet;
    bool m_artist_name_isValid;

    QList<OAIMusicTrackArtist> m_artists;
    bool m_artists_isSet;
    bool m_artists_isValid;

    QString m_base_title;
    bool m_base_title_isSet;
    bool m_base_title_isValid;

    bool m_classical;
    bool m_classical_isSet;
    bool m_classical_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_merged_ids;
    bool m_merged_ids_isSet;
    bool m_merged_ids_isValid;

    OAIMusicRecordAudio m_preferred_multiplay_record_audio;
    bool m_preferred_multiplay_record_audio_isSet;
    bool m_preferred_multiplay_record_audio_isValid;

    OAIMusicRecordAudio m_preferred_record_audio;
    bool m_preferred_record_audio_isSet;
    bool m_preferred_record_audio_isValid;

    bool m_radio_edit;
    bool m_radio_edit_isSet;
    bool m_radio_edit_isValid;

    QList<OAIMusicRecordAudio> m_record_audio;
    bool m_record_audio_isSet;
    bool m_record_audio_isValid;

    QString m_record_image_href;
    bool m_record_image_href_isSet;
    bool m_record_image_href_isValid;

    QString m_record_image_pid;
    bool m_record_image_pid_isSet;
    bool m_record_image_pid_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMusicPopularityTrack)

#endif // OAIMusicPopularityTrack_H
