/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPersonalisedMusicTrackContribution.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPersonalisedMusicTrackContribution::OAIPersonalisedMusicTrackContribution(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPersonalisedMusicTrackContribution::OAIPersonalisedMusicTrackContribution() {
    this->initializeModel();
}

OAIPersonalisedMusicTrackContribution::~OAIPersonalisedMusicTrackContribution() {}

void OAIPersonalisedMusicTrackContribution::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_images_isSet = false;
    m_images_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_role_isSet = false;
    m_role_isValid = false;
}

void OAIPersonalisedMusicTrackContribution::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPersonalisedMusicTrackContribution::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_images_isValid = ::OpenAPI::fromJsonValue(m_images, json[QString("images")]);
    m_images_isSet = !json[QString("images")].isNull() && m_images_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_role_isValid = ::OpenAPI::fromJsonValue(m_role, json[QString("role")]);
    m_role_isSet = !json[QString("role")].isNull() && m_role_isValid;
}

QString OAIPersonalisedMusicTrackContribution::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPersonalisedMusicTrackContribution::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_images.size() > 0) {
        obj.insert(QString("images"), ::OpenAPI::toJsonValue(m_images));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_role_isSet) {
        obj.insert(QString("role"), ::OpenAPI::toJsonValue(m_role));
    }
    return obj;
}

QString OAIPersonalisedMusicTrackContribution::getId() const {
    return m_id;
}
void OAIPersonalisedMusicTrackContribution::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIPersonalisedMusicTrackContribution::is_id_Set() const{
    return m_id_isSet;
}

bool OAIPersonalisedMusicTrackContribution::is_id_Valid() const{
    return m_id_isValid;
}

QList<OAIPersonalisedMusicTrackImage> OAIPersonalisedMusicTrackContribution::getImages() const {
    return m_images;
}
void OAIPersonalisedMusicTrackContribution::setImages(const QList<OAIPersonalisedMusicTrackImage> &images) {
    m_images = images;
    m_images_isSet = true;
}

bool OAIPersonalisedMusicTrackContribution::is_images_Set() const{
    return m_images_isSet;
}

bool OAIPersonalisedMusicTrackContribution::is_images_Valid() const{
    return m_images_isValid;
}

QString OAIPersonalisedMusicTrackContribution::getName() const {
    return m_name;
}
void OAIPersonalisedMusicTrackContribution::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPersonalisedMusicTrackContribution::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPersonalisedMusicTrackContribution::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIPersonalisedMusicTrackContribution::getRole() const {
    return m_role;
}
void OAIPersonalisedMusicTrackContribution::setRole(const QString &role) {
    m_role = role;
    m_role_isSet = true;
}

bool OAIPersonalisedMusicTrackContribution::is_role_Set() const{
    return m_role_isSet;
}

bool OAIPersonalisedMusicTrackContribution::is_role_Valid() const{
    return m_role_isValid;
}

bool OAIPersonalisedMusicTrackContribution::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_images.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_role_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPersonalisedMusicTrackContribution::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_id_isValid && m_images_isValid && m_name_isValid && m_role_isValid && true;
}

} // namespace OpenAPI
