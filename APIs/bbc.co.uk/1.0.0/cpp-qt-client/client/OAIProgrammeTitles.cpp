/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProgrammeTitles.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProgrammeTitles::OAIProgrammeTitles(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProgrammeTitles::OAIProgrammeTitles() {
    this->initializeModel();
}

OAIProgrammeTitles::~OAIProgrammeTitles() {}

void OAIProgrammeTitles::initializeModel() {

    m_display_title_isSet = false;
    m_display_title_isValid = false;

    m_entity_title_isSet = false;
    m_entity_title_isValid = false;

    m_primary_title_isSet = false;
    m_primary_title_isValid = false;

    m_secondary_title_isSet = false;
    m_secondary_title_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIProgrammeTitles::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProgrammeTitles::fromJsonObject(QJsonObject json) {

    m_display_title_isValid = ::OpenAPI::fromJsonValue(m_display_title, json[QString("display_title")]);
    m_display_title_isSet = !json[QString("display_title")].isNull() && m_display_title_isValid;

    m_entity_title_isValid = ::OpenAPI::fromJsonValue(m_entity_title, json[QString("entity_title")]);
    m_entity_title_isSet = !json[QString("entity_title")].isNull() && m_entity_title_isValid;

    m_primary_title_isValid = ::OpenAPI::fromJsonValue(m_primary_title, json[QString("primary_title")]);
    m_primary_title_isSet = !json[QString("primary_title")].isNull() && m_primary_title_isValid;

    m_secondary_title_isValid = ::OpenAPI::fromJsonValue(m_secondary_title, json[QString("secondary_title")]);
    m_secondary_title_isSet = !json[QString("secondary_title")].isNull() && m_secondary_title_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIProgrammeTitles::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProgrammeTitles::asJsonObject() const {
    QJsonObject obj;
    if (m_display_title_isSet) {
        obj.insert(QString("display_title"), ::OpenAPI::toJsonValue(m_display_title));
    }
    if (m_entity_title_isSet) {
        obj.insert(QString("entity_title"), ::OpenAPI::toJsonValue(m_entity_title));
    }
    if (m_primary_title_isSet) {
        obj.insert(QString("primary_title"), ::OpenAPI::toJsonValue(m_primary_title));
    }
    if (m_secondary_title_isSet) {
        obj.insert(QString("secondary_title"), ::OpenAPI::toJsonValue(m_secondary_title));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIProgrammeTitles::getDisplayTitle() const {
    return m_display_title;
}
void OAIProgrammeTitles::setDisplayTitle(const QString &display_title) {
    m_display_title = display_title;
    m_display_title_isSet = true;
}

bool OAIProgrammeTitles::is_display_title_Set() const{
    return m_display_title_isSet;
}

bool OAIProgrammeTitles::is_display_title_Valid() const{
    return m_display_title_isValid;
}

QString OAIProgrammeTitles::getEntityTitle() const {
    return m_entity_title;
}
void OAIProgrammeTitles::setEntityTitle(const QString &entity_title) {
    m_entity_title = entity_title;
    m_entity_title_isSet = true;
}

bool OAIProgrammeTitles::is_entity_title_Set() const{
    return m_entity_title_isSet;
}

bool OAIProgrammeTitles::is_entity_title_Valid() const{
    return m_entity_title_isValid;
}

QString OAIProgrammeTitles::getPrimaryTitle() const {
    return m_primary_title;
}
void OAIProgrammeTitles::setPrimaryTitle(const QString &primary_title) {
    m_primary_title = primary_title;
    m_primary_title_isSet = true;
}

bool OAIProgrammeTitles::is_primary_title_Set() const{
    return m_primary_title_isSet;
}

bool OAIProgrammeTitles::is_primary_title_Valid() const{
    return m_primary_title_isValid;
}

QString OAIProgrammeTitles::getSecondaryTitle() const {
    return m_secondary_title;
}
void OAIProgrammeTitles::setSecondaryTitle(const QString &secondary_title) {
    m_secondary_title = secondary_title;
    m_secondary_title_isSet = true;
}

bool OAIProgrammeTitles::is_secondary_title_Set() const{
    return m_secondary_title_isSet;
}

bool OAIProgrammeTitles::is_secondary_title_Valid() const{
    return m_secondary_title_isValid;
}

QString OAIProgrammeTitles::getType() const {
    return m_type;
}
void OAIProgrammeTitles::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIProgrammeTitles::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProgrammeTitles::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIProgrammeTitles::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_secondary_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProgrammeTitles::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && true;
}

} // namespace OpenAPI
