/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISeriesSummary.h
 *
 * 
 */

#ifndef OAISeriesSummary_H
#define OAISeriesSummary_H

#include <QJsonObject>

#include "OAIAncestorSummary.h"
#include "OAIEpisodeSummary.h"
#include "OAIImage.h"
#include "OAINetworkSummary.h"
#include "OAIProgrammeTitles.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAncestorSummary;
class OAIImage;
class OAIEpisodeSummary;
class OAINetworkSummary;
class OAIProgrammeTitles;

class OAISeriesSummary : public OAIObject {
public:
    OAISeriesSummary();
    OAISeriesSummary(QString json);
    ~OAISeriesSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAncestorSummary> getAncestors() const;
    void setAncestors(const QList<OAIAncestorSummary> &ancestors);
    bool is_ancestors_Set() const;
    bool is_ancestors_Valid() const;

    QList<OAIImage> getImages() const;
    void setImages(const QList<OAIImage> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QList<OAIEpisodeSummary> getLatestAvailableEpisodes() const;
    void setLatestAvailableEpisodes(const QList<OAIEpisodeSummary> &latest_available_episodes);
    bool is_latest_available_episodes_Set() const;
    bool is_latest_available_episodes_Valid() const;

    OAINetworkSummary getNetworkSummary() const;
    void setNetworkSummary(const OAINetworkSummary &network_summary);
    bool is_network_summary_Set() const;
    bool is_network_summary_Valid() const;

    QString getPid() const;
    void setPid(const QString &pid);
    bool is_pid_Set() const;
    bool is_pid_Valid() const;

    QString getShortSynopsis() const;
    void setShortSynopsis(const QString &short_synopsis);
    bool is_short_synopsis_Set() const;
    bool is_short_synopsis_Valid() const;

    OAIProgrammeTitles getTitles() const;
    void setTitles(const OAIProgrammeTitles &titles);
    bool is_titles_Set() const;
    bool is_titles_Valid() const;

    qint32 getTotalAvailableEpisodes() const;
    void setTotalAvailableEpisodes(const qint32 &total_available_episodes);
    bool is_total_available_episodes_Set() const;
    bool is_total_available_episodes_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAncestorSummary> m_ancestors;
    bool m_ancestors_isSet;
    bool m_ancestors_isValid;

    QList<OAIImage> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QList<OAIEpisodeSummary> m_latest_available_episodes;
    bool m_latest_available_episodes_isSet;
    bool m_latest_available_episodes_isValid;

    OAINetworkSummary m_network_summary;
    bool m_network_summary_isSet;
    bool m_network_summary_isValid;

    QString m_pid;
    bool m_pid_isSet;
    bool m_pid_isValid;

    QString m_short_synopsis;
    bool m_short_synopsis_isSet;
    bool m_short_synopsis_isValid;

    OAIProgrammeTitles m_titles;
    bool m_titles_isSet;
    bool m_titles_isValid;

    qint32 m_total_available_episodes;
    bool m_total_available_episodes_isSet;
    bool m_total_available_episodes_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISeriesSummary)

#endif // OAISeriesSummary_H
