/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICategory.h
 *
 * 
 */

#ifndef OAICategory_H
#define OAICategory_H

#include <QJsonObject>

#include "OAIChildCategory.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChildCategory;

class OAICategory : public OAIObject {
public:
    OAICategory();
    OAICategory(QString json);
    ~OAICategory() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCategoryType() const;
    void setCategoryType(const QString &category_type);
    bool is_category_type_Set() const;
    bool is_category_type_Valid() const;

    QList<OAIChildCategory> getChildCategories() const;
    void setChildCategories(const QList<OAIChildCategory> &child_categories);
    bool is_child_categories_Set() const;
    bool is_child_categories_Valid() const;

    qint32 getDepth() const;
    void setDepth(const qint32 &depth);
    bool is_depth_Set() const;
    bool is_depth_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getPipId() const;
    void setPipId(const QString &pip_id);
    bool is_pip_id_Set() const;
    bool is_pip_id_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrlKey() const;
    void setUrlKey(const QString &url_key);
    bool is_url_key_Set() const;
    bool is_url_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_category_type;
    bool m_category_type_isSet;
    bool m_category_type_isValid;

    QList<OAIChildCategory> m_child_categories;
    bool m_child_categories_isSet;
    bool m_child_categories_isValid;

    qint32 m_depth;
    bool m_depth_isSet;
    bool m_depth_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_pip_id;
    bool m_pip_id_isSet;
    bool m_pip_id_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url_key;
    bool m_url_key_isSet;
    bool m_url_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICategory)

#endif // OAICategory_H
