/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetaData.h
 *
 * 
 */

#ifndef OAIMetaData_H
#define OAIMetaData_H

#include <QJsonObject>

#include "OAIMiscellaneous.h"
#include "OAIOrigin.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMiscellaneous;
class OAIOrigin;

class OAIMetaData : public OAIObject {
public:
    OAIMetaData();
    OAIMetaData(QString json);
    ~OAIMetaData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMiscellaneous getMiscellaneous() const;
    void setMiscellaneous(const OAIMiscellaneous &miscellaneous);
    bool is_miscellaneous_Set() const;
    bool is_miscellaneous_Valid() const;

    OAIOrigin getOrigin() const;
    void setOrigin(const OAIOrigin &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QString getProgrammeType() const;
    void setProgrammeType(const QString &programme_type);
    bool is_programme_type_Set() const;
    bool is_programme_type_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMiscellaneous m_miscellaneous;
    bool m_miscellaneous_isSet;
    bool m_miscellaneous_isValid;

    OAIOrigin m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QString m_programme_type;
    bool m_programme_type_isSet;
    bool m_programme_type_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetaData)

#endif // OAIMetaData_H
