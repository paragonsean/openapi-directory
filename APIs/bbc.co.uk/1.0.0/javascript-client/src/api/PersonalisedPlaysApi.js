/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Body4 from '../model/Body4';
import ErrorResponse from '../model/ErrorResponse';

/**
* PersonalisedPlays service.
* @module api/PersonalisedPlaysApi
* @version 1.0.0
*/
export default class PersonalisedPlaysApi {

    /**
    * Constructs a new PersonalisedPlaysApi. 
    * @alias module:api/PersonalisedPlaysApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the myPlaysPost operation.
     * @callback module:api/PersonalisedPlaysApi~myPlaysPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Write Play Event
     * @param {String} authorization Bearer OAUTH_TOKEN
     * @param {String} xAPIKey API_KEY
     * @param {module:model/Body4} body 
     * @param {module:api/PersonalisedPlaysApi~myPlaysPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    myPlaysPost(authorization, xAPIKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling myPlaysPost");
      }
      // verify the required parameter 'xAPIKey' is set
      if (xAPIKey === undefined || xAPIKey === null) {
        throw new Error("Missing the required parameter 'xAPIKey' when calling myPlaysPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling myPlaysPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-API-Key': xAPIKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/my/plays', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
