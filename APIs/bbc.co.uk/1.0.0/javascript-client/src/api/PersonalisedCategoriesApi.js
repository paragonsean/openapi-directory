/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Body from '../model/Body';
import Body1 from '../model/Body1';
import ErrorResponse from '../model/ErrorResponse';
import PersonalisedCategoriesResponse from '../model/PersonalisedCategoriesResponse';

/**
* PersonalisedCategories service.
* @module api/PersonalisedCategoriesApi
* @version 1.0.0
*/
export default class PersonalisedCategoriesApi {

    /**
    * Constructs a new PersonalisedCategoriesApi. 
    * @alias module:api/PersonalisedCategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the myCategoriesFollowsDelete operation.
     * @callback module:api/PersonalisedCategoriesApi~myCategoriesFollowsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Unfollow category
     * @param {String} authorization Bearer OAUTH_TOKEN
     * @param {String} xAPIKey API_KEY
     * @param {module:model/Body1} body 
     * @param {module:api/PersonalisedCategoriesApi~myCategoriesFollowsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    myCategoriesFollowsDelete(authorization, xAPIKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling myCategoriesFollowsDelete");
      }
      // verify the required parameter 'xAPIKey' is set
      if (xAPIKey === undefined || xAPIKey === null) {
        throw new Error("Missing the required parameter 'xAPIKey' when calling myCategoriesFollowsDelete");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling myCategoriesFollowsDelete");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-API-Key': xAPIKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/my/categories/follows', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the myCategoriesFollowsGet operation.
     * @callback module:api/PersonalisedCategoriesApi~myCategoriesFollowsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PersonalisedCategoriesResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of followed categories
     * List of followed categories for a given user. 
     * @param {String} authorization Bearer OAUTH_TOKEN
     * @param {String} xAPIKey API_KEY
     * @param {Object} opts Optional parameters
     * @param {Number} [offset] Paginated results offset
     * @param {Number} [limit] Paginated results limit
     * @param {module:api/PersonalisedCategoriesApi~myCategoriesFollowsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PersonalisedCategoriesResponse}
     */
    myCategoriesFollowsGet(authorization, xAPIKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling myCategoriesFollowsGet");
      }
      // verify the required parameter 'xAPIKey' is set
      if (xAPIKey === undefined || xAPIKey === null) {
        throw new Error("Missing the required parameter 'xAPIKey' when calling myCategoriesFollowsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'offset': opts['offset'],
        'limit': opts['limit']
      };
      let headerParams = {
        'Authorization': authorization,
        'X-API-Key': xAPIKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PersonalisedCategoriesResponse;
      return this.apiClient.callApi(
        '/my/categories/follows', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the myCategoriesFollowsPost operation.
     * @callback module:api/PersonalisedCategoriesApi~myCategoriesFollowsPostCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Follow category
     * @param {String} authorization Bearer OAUTH_TOKEN
     * @param {String} xAPIKey API_KEY
     * @param {module:model/Body} body 
     * @param {module:api/PersonalisedCategoriesApi~myCategoriesFollowsPostCallback} callback The callback function, accepting three arguments: error, data, response
     */
    myCategoriesFollowsPost(authorization, xAPIKey, body, callback) {
      let postBody = body;
      // verify the required parameter 'authorization' is set
      if (authorization === undefined || authorization === null) {
        throw new Error("Missing the required parameter 'authorization' when calling myCategoriesFollowsPost");
      }
      // verify the required parameter 'xAPIKey' is set
      if (xAPIKey === undefined || xAPIKey === null) {
        throw new Error("Missing the required parameter 'xAPIKey' when calling myCategoriesFollowsPost");
      }
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling myCategoriesFollowsPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Authorization': authorization,
        'X-API-Key': xAPIKey
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/my/categories/follows', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
