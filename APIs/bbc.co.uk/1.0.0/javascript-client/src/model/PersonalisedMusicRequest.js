/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PersonalisedMusicMetaData from './PersonalisedMusicMetaData';

/**
 * The PersonalisedMusicRequest model module.
 * @module model/PersonalisedMusicRequest
 * @version 1.0.0
 */
class PersonalisedMusicRequest {
    /**
     * Constructs a new <code>PersonalisedMusicRequest</code>.
     * @alias module:model/PersonalisedMusicRequest
     * @param action {String} 
     */
    constructor(action) { 
        
        PersonalisedMusicRequest.initialize(this, action);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action) { 
        obj['action'] = action;
    }

    /**
     * Constructs a <code>PersonalisedMusicRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonalisedMusicRequest} obj Optional instance to populate.
     * @return {module:model/PersonalisedMusicRequest} The populated <code>PersonalisedMusicRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonalisedMusicRequest();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('added_at')) {
                obj['added_at'] = ApiClient.convertToType(data['added_at'], 'String');
            }
            if (data.hasOwnProperty('context')) {
                obj['context'] = ApiClient.convertToType(data['context'], 'String');
            }
            if (data.hasOwnProperty('meta_data')) {
                obj['meta_data'] = PersonalisedMusicMetaData.constructFromObject(data['meta_data']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonalisedMusicRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonalisedMusicRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PersonalisedMusicRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['added_at'] && !(typeof data['added_at'] === 'string' || data['added_at'] instanceof String)) {
            throw new Error("Expected the field `added_at` to be a primitive type in the JSON string but got " + data['added_at']);
        }
        // ensure the json data is a string
        if (data['context'] && !(typeof data['context'] === 'string' || data['context'] instanceof String)) {
            throw new Error("Expected the field `context` to be a primitive type in the JSON string but got " + data['context']);
        }
        // validate the optional field `meta_data`
        if (data['meta_data']) { // data not null
          PersonalisedMusicMetaData.validateJSON(data['meta_data']);
        }

        return true;
    }


}

PersonalisedMusicRequest.RequiredProperties = ["action"];

/**
 * @member {String} action
 */
PersonalisedMusicRequest.prototype['action'] = undefined;

/**
 * @member {String} added_at
 */
PersonalisedMusicRequest.prototype['added_at'] = undefined;

/**
 * @member {String} context
 */
PersonalisedMusicRequest.prototype['context'] = undefined;

/**
 * @member {module:model/PersonalisedMusicMetaData} meta_data
 */
PersonalisedMusicRequest.prototype['meta_data'] = undefined;






export default PersonalisedMusicRequest;

