/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetworkTitles model module.
 * @module model/NetworkTitles
 * @version 1.0.0
 */
class NetworkTitles {
    /**
     * Constructs a new <code>NetworkTitles</code>.
     * @alias module:model/NetworkTitles
     * @param longTitle {String} 
     * @param shortTitle {String} 
     * @param type {String} 
     */
    constructor(longTitle, shortTitle, type) { 
        
        NetworkTitles.initialize(this, longTitle, shortTitle, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, longTitle, shortTitle, type) { 
        obj['long_title'] = longTitle;
        obj['short_title'] = shortTitle;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>NetworkTitles</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkTitles} obj Optional instance to populate.
     * @return {module:model/NetworkTitles} The populated <code>NetworkTitles</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkTitles();

            if (data.hasOwnProperty('long_title')) {
                obj['long_title'] = ApiClient.convertToType(data['long_title'], 'String');
            }
            if (data.hasOwnProperty('short_title')) {
                obj['short_title'] = ApiClient.convertToType(data['short_title'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkTitles</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkTitles</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NetworkTitles.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['long_title'] && !(typeof data['long_title'] === 'string' || data['long_title'] instanceof String)) {
            throw new Error("Expected the field `long_title` to be a primitive type in the JSON string but got " + data['long_title']);
        }
        // ensure the json data is a string
        if (data['short_title'] && !(typeof data['short_title'] === 'string' || data['short_title'] instanceof String)) {
            throw new Error("Expected the field `short_title` to be a primitive type in the JSON string but got " + data['short_title']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

NetworkTitles.RequiredProperties = ["long_title", "short_title", "type"];

/**
 * @member {String} long_title
 */
NetworkTitles.prototype['long_title'] = undefined;

/**
 * @member {String} short_title
 */
NetworkTitles.prototype['short_title'] = undefined;

/**
 * @member {String} type
 */
NetworkTitles.prototype['type'] = undefined;






export default NetworkTitles;

