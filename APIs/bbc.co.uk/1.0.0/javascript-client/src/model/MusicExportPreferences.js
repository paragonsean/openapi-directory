/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MusicExportPreferences model module.
 * @module model/MusicExportPreferences
 * @version 1.0.0
 */
class MusicExportPreferences {
    /**
     * Constructs a new <code>MusicExportPreferences</code>.
     * @alias module:model/MusicExportPreferences
     * @param accessExpiresAt {String} 
     * @param accessToken {String} 
     * @param addPlusExport {Boolean} 
     * @param authorizationCode {String} 
     * @param lastExport {String} 
     * @param legacyState {String} 
     * @param partnerId {String} 
     * @param refreshToken {String} 
     * @param terms {Boolean} 
     * @param vendor {String} 
     */
    constructor(accessExpiresAt, accessToken, addPlusExport, authorizationCode, lastExport, legacyState, partnerId, refreshToken, terms, vendor) { 
        
        MusicExportPreferences.initialize(this, accessExpiresAt, accessToken, addPlusExport, authorizationCode, lastExport, legacyState, partnerId, refreshToken, terms, vendor);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accessExpiresAt, accessToken, addPlusExport, authorizationCode, lastExport, legacyState, partnerId, refreshToken, terms, vendor) { 
        obj['access_expires_at'] = accessExpiresAt;
        obj['access_token'] = accessToken;
        obj['add_plus_export'] = addPlusExport;
        obj['authorization_code'] = authorizationCode;
        obj['last_export'] = lastExport;
        obj['legacy_state'] = legacyState;
        obj['partner_id'] = partnerId;
        obj['refresh_token'] = refreshToken;
        obj['terms'] = terms;
        obj['vendor'] = vendor;
    }

    /**
     * Constructs a <code>MusicExportPreferences</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MusicExportPreferences} obj Optional instance to populate.
     * @return {module:model/MusicExportPreferences} The populated <code>MusicExportPreferences</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MusicExportPreferences();

            if (data.hasOwnProperty('access_expires_at')) {
                obj['access_expires_at'] = ApiClient.convertToType(data['access_expires_at'], 'String');
            }
            if (data.hasOwnProperty('access_token')) {
                obj['access_token'] = ApiClient.convertToType(data['access_token'], 'String');
            }
            if (data.hasOwnProperty('add_plus_export')) {
                obj['add_plus_export'] = ApiClient.convertToType(data['add_plus_export'], 'Boolean');
            }
            if (data.hasOwnProperty('authorization_code')) {
                obj['authorization_code'] = ApiClient.convertToType(data['authorization_code'], 'String');
            }
            if (data.hasOwnProperty('last_export')) {
                obj['last_export'] = ApiClient.convertToType(data['last_export'], 'String');
            }
            if (data.hasOwnProperty('legacy_state')) {
                obj['legacy_state'] = ApiClient.convertToType(data['legacy_state'], 'String');
            }
            if (data.hasOwnProperty('partner_id')) {
                obj['partner_id'] = ApiClient.convertToType(data['partner_id'], 'String');
            }
            if (data.hasOwnProperty('refresh_token')) {
                obj['refresh_token'] = ApiClient.convertToType(data['refresh_token'], 'String');
            }
            if (data.hasOwnProperty('terms')) {
                obj['terms'] = ApiClient.convertToType(data['terms'], 'Boolean');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MusicExportPreferences</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MusicExportPreferences</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MusicExportPreferences.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access_expires_at'] && !(typeof data['access_expires_at'] === 'string' || data['access_expires_at'] instanceof String)) {
            throw new Error("Expected the field `access_expires_at` to be a primitive type in the JSON string but got " + data['access_expires_at']);
        }
        // ensure the json data is a string
        if (data['access_token'] && !(typeof data['access_token'] === 'string' || data['access_token'] instanceof String)) {
            throw new Error("Expected the field `access_token` to be a primitive type in the JSON string but got " + data['access_token']);
        }
        // ensure the json data is a string
        if (data['authorization_code'] && !(typeof data['authorization_code'] === 'string' || data['authorization_code'] instanceof String)) {
            throw new Error("Expected the field `authorization_code` to be a primitive type in the JSON string but got " + data['authorization_code']);
        }
        // ensure the json data is a string
        if (data['last_export'] && !(typeof data['last_export'] === 'string' || data['last_export'] instanceof String)) {
            throw new Error("Expected the field `last_export` to be a primitive type in the JSON string but got " + data['last_export']);
        }
        // ensure the json data is a string
        if (data['legacy_state'] && !(typeof data['legacy_state'] === 'string' || data['legacy_state'] instanceof String)) {
            throw new Error("Expected the field `legacy_state` to be a primitive type in the JSON string but got " + data['legacy_state']);
        }
        // ensure the json data is a string
        if (data['partner_id'] && !(typeof data['partner_id'] === 'string' || data['partner_id'] instanceof String)) {
            throw new Error("Expected the field `partner_id` to be a primitive type in the JSON string but got " + data['partner_id']);
        }
        // ensure the json data is a string
        if (data['refresh_token'] && !(typeof data['refresh_token'] === 'string' || data['refresh_token'] instanceof String)) {
            throw new Error("Expected the field `refresh_token` to be a primitive type in the JSON string but got " + data['refresh_token']);
        }
        // ensure the json data is a string
        if (data['vendor'] && !(typeof data['vendor'] === 'string' || data['vendor'] instanceof String)) {
            throw new Error("Expected the field `vendor` to be a primitive type in the JSON string but got " + data['vendor']);
        }

        return true;
    }


}

MusicExportPreferences.RequiredProperties = ["access_expires_at", "access_token", "add_plus_export", "authorization_code", "last_export", "legacy_state", "partner_id", "refresh_token", "terms", "vendor"];

/**
 * @member {String} access_expires_at
 */
MusicExportPreferences.prototype['access_expires_at'] = undefined;

/**
 * @member {String} access_token
 */
MusicExportPreferences.prototype['access_token'] = undefined;

/**
 * @member {Boolean} add_plus_export
 */
MusicExportPreferences.prototype['add_plus_export'] = undefined;

/**
 * @member {String} authorization_code
 */
MusicExportPreferences.prototype['authorization_code'] = undefined;

/**
 * @member {String} last_export
 */
MusicExportPreferences.prototype['last_export'] = undefined;

/**
 * @member {String} legacy_state
 */
MusicExportPreferences.prototype['legacy_state'] = undefined;

/**
 * @member {String} partner_id
 */
MusicExportPreferences.prototype['partner_id'] = undefined;

/**
 * @member {String} refresh_token
 */
MusicExportPreferences.prototype['refresh_token'] = undefined;

/**
 * @member {Boolean} terms
 */
MusicExportPreferences.prototype['terms'] = undefined;

/**
 * @member {String} vendor
 */
MusicExportPreferences.prototype['vendor'] = undefined;






export default MusicExportPreferences;

