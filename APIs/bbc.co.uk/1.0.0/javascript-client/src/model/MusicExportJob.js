/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MusicExportJob model module.
 * @module model/MusicExportJob
 * @version 1.0.0
 */
class MusicExportJob {
    /**
     * Constructs a new <code>MusicExportJob</code>.
     * @alias module:model/MusicExportJob
     * @param createdAt {String} 
     * @param id {String} 
     * @param jobId {String} 
     * @param status {String} 
     * @param vendor {String} 
     */
    constructor(createdAt, id, jobId, status, vendor) { 
        
        MusicExportJob.initialize(this, createdAt, id, jobId, status, vendor);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, id, jobId, status, vendor) { 
        obj['created_at'] = createdAt;
        obj['id'] = id;
        obj['job_id'] = jobId;
        obj['status'] = status;
        obj['vendor'] = vendor;
    }

    /**
     * Constructs a <code>MusicExportJob</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MusicExportJob} obj Optional instance to populate.
     * @return {module:model/MusicExportJob} The populated <code>MusicExportJob</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MusicExportJob();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('job_id')) {
                obj['job_id'] = ApiClient.convertToType(data['job_id'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('vendor')) {
                obj['vendor'] = ApiClient.convertToType(data['vendor'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MusicExportJob</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MusicExportJob</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MusicExportJob.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['job_id'] && !(typeof data['job_id'] === 'string' || data['job_id'] instanceof String)) {
            throw new Error("Expected the field `job_id` to be a primitive type in the JSON string but got " + data['job_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['vendor'] && !(typeof data['vendor'] === 'string' || data['vendor'] instanceof String)) {
            throw new Error("Expected the field `vendor` to be a primitive type in the JSON string but got " + data['vendor']);
        }

        return true;
    }


}

MusicExportJob.RequiredProperties = ["created_at", "id", "job_id", "status", "vendor"];

/**
 * @member {String} created_at
 */
MusicExportJob.prototype['created_at'] = undefined;

/**
 * @member {String} id
 */
MusicExportJob.prototype['id'] = undefined;

/**
 * @member {String} job_id
 */
MusicExportJob.prototype['job_id'] = undefined;

/**
 * @member {String} status
 */
MusicExportJob.prototype['status'] = undefined;

/**
 * @member {String} vendor
 */
MusicExportJob.prototype['vendor'] = undefined;






export default MusicExportJob;

