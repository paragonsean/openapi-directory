/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import PersonalisedMusicArtist from './PersonalisedMusicArtist';
import PersonalisedMusicClip from './PersonalisedMusicClip';
import PersonalisedMusicGenre from './PersonalisedMusicGenre';
import PersonalisedMusicPlaylist from './PersonalisedMusicPlaylist';
import PersonalisedMusicService from './PersonalisedMusicService';
import PersonalisedMusicTrack from './PersonalisedMusicTrack';

/**
 * The PersonalisedMusicData model module.
 * @module model/PersonalisedMusicData
 * @version 1.0.0
 */
class PersonalisedMusicData {
    /**
     * Constructs a new <code>PersonalisedMusicData</code>.
     * @alias module:model/PersonalisedMusicData
     */
    constructor() { 
        
        PersonalisedMusicData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PersonalisedMusicData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PersonalisedMusicData} obj Optional instance to populate.
     * @return {module:model/PersonalisedMusicData} The populated <code>PersonalisedMusicData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PersonalisedMusicData();

            if (data.hasOwnProperty('artist')) {
                obj['artist'] = PersonalisedMusicArtist.constructFromObject(data['artist']);
            }
            if (data.hasOwnProperty('clip')) {
                obj['clip'] = PersonalisedMusicClip.constructFromObject(data['clip']);
            }
            if (data.hasOwnProperty('genre')) {
                obj['genre'] = PersonalisedMusicGenre.constructFromObject(data['genre']);
            }
            if (data.hasOwnProperty('playlist')) {
                obj['playlist'] = PersonalisedMusicPlaylist.constructFromObject(data['playlist']);
            }
            if (data.hasOwnProperty('service')) {
                obj['service'] = PersonalisedMusicService.constructFromObject(data['service']);
            }
            if (data.hasOwnProperty('track')) {
                obj['track'] = PersonalisedMusicTrack.constructFromObject(data['track']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PersonalisedMusicData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PersonalisedMusicData</code>.
     */
    static validateJSON(data) {
        // validate the optional field `artist`
        if (data['artist']) { // data not null
          PersonalisedMusicArtist.validateJSON(data['artist']);
        }
        // validate the optional field `clip`
        if (data['clip']) { // data not null
          PersonalisedMusicClip.validateJSON(data['clip']);
        }
        // validate the optional field `genre`
        if (data['genre']) { // data not null
          PersonalisedMusicGenre.validateJSON(data['genre']);
        }
        // validate the optional field `playlist`
        if (data['playlist']) { // data not null
          PersonalisedMusicPlaylist.validateJSON(data['playlist']);
        }
        // validate the optional field `service`
        if (data['service']) { // data not null
          PersonalisedMusicService.validateJSON(data['service']);
        }
        // validate the optional field `track`
        if (data['track']) { // data not null
          PersonalisedMusicTrack.validateJSON(data['track']);
        }

        return true;
    }


}



/**
 * @member {module:model/PersonalisedMusicArtist} artist
 */
PersonalisedMusicData.prototype['artist'] = undefined;

/**
 * @member {module:model/PersonalisedMusicClip} clip
 */
PersonalisedMusicData.prototype['clip'] = undefined;

/**
 * @member {module:model/PersonalisedMusicGenre} genre
 */
PersonalisedMusicData.prototype['genre'] = undefined;

/**
 * @member {module:model/PersonalisedMusicPlaylist} playlist
 */
PersonalisedMusicData.prototype['playlist'] = undefined;

/**
 * @member {module:model/PersonalisedMusicService} service
 */
PersonalisedMusicData.prototype['service'] = undefined;

/**
 * @member {module:model/PersonalisedMusicTrack} track
 */
PersonalisedMusicData.prototype['track'] = undefined;






export default PersonalisedMusicData;

