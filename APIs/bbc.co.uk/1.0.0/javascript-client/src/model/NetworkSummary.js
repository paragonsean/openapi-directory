/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NetworkTitles from './NetworkTitles';

/**
 * The NetworkSummary model module.
 * @module model/NetworkSummary
 * @version 1.0.0
 */
class NetworkSummary {
    /**
     * Constructs a new <code>NetworkSummary</code>.
     * @alias module:model/NetworkSummary
     * @param active {Boolean} 
     * @param group {String} 
     * @param id {String} 
     * @param key {String} 
     * @param titles {module:model/NetworkTitles} 
     * @param type {String} 
     */
    constructor(active, group, id, key, titles, type) { 
        
        NetworkSummary.initialize(this, active, group, id, key, titles, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, active, group, id, key, titles, type) { 
        obj['active'] = active;
        obj['group'] = group;
        obj['id'] = id;
        obj['key'] = key;
        obj['titles'] = titles;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>NetworkSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkSummary} obj Optional instance to populate.
     * @return {module:model/NetworkSummary} The populated <code>NetworkSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkSummary();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('group')) {
                obj['group'] = ApiClient.convertToType(data['group'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('titles')) {
                obj['titles'] = NetworkTitles.constructFromObject(data['titles']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NetworkSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['group'] && !(typeof data['group'] === 'string' || data['group'] instanceof String)) {
            throw new Error("Expected the field `group` to be a primitive type in the JSON string but got " + data['group']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // validate the optional field `titles`
        if (data['titles']) { // data not null
          NetworkTitles.validateJSON(data['titles']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

NetworkSummary.RequiredProperties = ["active", "group", "id", "key", "titles", "type"];

/**
 * @member {Boolean} active
 */
NetworkSummary.prototype['active'] = undefined;

/**
 * @member {String} group
 */
NetworkSummary.prototype['group'] = undefined;

/**
 * @member {String} id
 */
NetworkSummary.prototype['id'] = undefined;

/**
 * @member {String} key
 */
NetworkSummary.prototype['key'] = undefined;

/**
 * @member {module:model/NetworkTitles} titles
 */
NetworkSummary.prototype['titles'] = undefined;

/**
 * @member {String} type
 */
NetworkSummary.prototype['type'] = undefined;






export default NetworkSummary;

