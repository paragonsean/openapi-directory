/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ExternalPartner from './ExternalPartner';

/**
 * The MusicPopularityPlaylist model module.
 * @module model/MusicPopularityPlaylist
 * @version 1.0.0
 */
class MusicPopularityPlaylist {
    /**
     * Constructs a new <code>MusicPopularityPlaylist</code>.
     * @alias module:model/MusicPopularityPlaylist
     * @param categories {Array.<String>} 
     * @param commentsEnabled {Boolean} 
     * @param description {String} 
     * @param externalPartners {Array.<module:model/ExternalPartner>} 
     * @param genre {String} 
     * @param id {String} 
     * @param imagePid {String} 
     * @param imageUrl {String} 
     * @param kind {String} 
     * @param mood {String} 
     * @param oneOff {Boolean} 
     * @param playlistPlaybackType {String} 
     * @param score {Number} 
     * @param serviceId {String} 
     * @param title {String} 
     * @param updatedAt {String} 
     * @param visibility {String} 
     * @param wideImagePid {String} 
     * @param wideImageUrl {String} 
     */
    constructor(categories, commentsEnabled, description, externalPartners, genre, id, imagePid, imageUrl, kind, mood, oneOff, playlistPlaybackType, score, serviceId, title, updatedAt, visibility, wideImagePid, wideImageUrl) { 
        
        MusicPopularityPlaylist.initialize(this, categories, commentsEnabled, description, externalPartners, genre, id, imagePid, imageUrl, kind, mood, oneOff, playlistPlaybackType, score, serviceId, title, updatedAt, visibility, wideImagePid, wideImageUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, categories, commentsEnabled, description, externalPartners, genre, id, imagePid, imageUrl, kind, mood, oneOff, playlistPlaybackType, score, serviceId, title, updatedAt, visibility, wideImagePid, wideImageUrl) { 
        obj['categories'] = categories;
        obj['commentsEnabled'] = commentsEnabled;
        obj['description'] = description;
        obj['externalPartners'] = externalPartners;
        obj['genre'] = genre;
        obj['id'] = id;
        obj['imagePid'] = imagePid;
        obj['imageUrl'] = imageUrl;
        obj['kind'] = kind;
        obj['mood'] = mood;
        obj['oneOff'] = oneOff;
        obj['playlistPlaybackType'] = playlistPlaybackType;
        obj['score'] = score;
        obj['serviceId'] = serviceId;
        obj['title'] = title;
        obj['updatedAt'] = updatedAt;
        obj['visibility'] = visibility;
        obj['wideImagePid'] = wideImagePid;
        obj['wideImageUrl'] = wideImageUrl;
    }

    /**
     * Constructs a <code>MusicPopularityPlaylist</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MusicPopularityPlaylist} obj Optional instance to populate.
     * @return {module:model/MusicPopularityPlaylist} The populated <code>MusicPopularityPlaylist</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MusicPopularityPlaylist();

            if (data.hasOwnProperty('categories')) {
                obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
            }
            if (data.hasOwnProperty('commentsEnabled')) {
                obj['commentsEnabled'] = ApiClient.convertToType(data['commentsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('externalPartners')) {
                obj['externalPartners'] = ApiClient.convertToType(data['externalPartners'], [ExternalPartner]);
            }
            if (data.hasOwnProperty('genre')) {
                obj['genre'] = ApiClient.convertToType(data['genre'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('imagePid')) {
                obj['imagePid'] = ApiClient.convertToType(data['imagePid'], 'String');
            }
            if (data.hasOwnProperty('imageUrl')) {
                obj['imageUrl'] = ApiClient.convertToType(data['imageUrl'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('mood')) {
                obj['mood'] = ApiClient.convertToType(data['mood'], 'String');
            }
            if (data.hasOwnProperty('oneOff')) {
                obj['oneOff'] = ApiClient.convertToType(data['oneOff'], 'Boolean');
            }
            if (data.hasOwnProperty('playlistPlaybackType')) {
                obj['playlistPlaybackType'] = ApiClient.convertToType(data['playlistPlaybackType'], 'String');
            }
            if (data.hasOwnProperty('score')) {
                obj['score'] = ApiClient.convertToType(data['score'], 'Number');
            }
            if (data.hasOwnProperty('serviceId')) {
                obj['serviceId'] = ApiClient.convertToType(data['serviceId'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('updatedAt')) {
                obj['updatedAt'] = ApiClient.convertToType(data['updatedAt'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('wideImagePid')) {
                obj['wideImagePid'] = ApiClient.convertToType(data['wideImagePid'], 'String');
            }
            if (data.hasOwnProperty('wideImageUrl')) {
                obj['wideImageUrl'] = ApiClient.convertToType(data['wideImageUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MusicPopularityPlaylist</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MusicPopularityPlaylist</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MusicPopularityPlaylist.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categories'])) {
            throw new Error("Expected the field `categories` to be an array in the JSON data but got " + data['categories']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        if (data['externalPartners']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['externalPartners'])) {
                throw new Error("Expected the field `externalPartners` to be an array in the JSON data but got " + data['externalPartners']);
            }
            // validate the optional field `externalPartners` (array)
            for (const item of data['externalPartners']) {
                ExternalPartner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['genre'] && !(typeof data['genre'] === 'string' || data['genre'] instanceof String)) {
            throw new Error("Expected the field `genre` to be a primitive type in the JSON string but got " + data['genre']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['imagePid'] && !(typeof data['imagePid'] === 'string' || data['imagePid'] instanceof String)) {
            throw new Error("Expected the field `imagePid` to be a primitive type in the JSON string but got " + data['imagePid']);
        }
        // ensure the json data is a string
        if (data['imageUrl'] && !(typeof data['imageUrl'] === 'string' || data['imageUrl'] instanceof String)) {
            throw new Error("Expected the field `imageUrl` to be a primitive type in the JSON string but got " + data['imageUrl']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['mood'] && !(typeof data['mood'] === 'string' || data['mood'] instanceof String)) {
            throw new Error("Expected the field `mood` to be a primitive type in the JSON string but got " + data['mood']);
        }
        // ensure the json data is a string
        if (data['playlistPlaybackType'] && !(typeof data['playlistPlaybackType'] === 'string' || data['playlistPlaybackType'] instanceof String)) {
            throw new Error("Expected the field `playlistPlaybackType` to be a primitive type in the JSON string but got " + data['playlistPlaybackType']);
        }
        // ensure the json data is a string
        if (data['serviceId'] && !(typeof data['serviceId'] === 'string' || data['serviceId'] instanceof String)) {
            throw new Error("Expected the field `serviceId` to be a primitive type in the JSON string but got " + data['serviceId']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['updatedAt'] && !(typeof data['updatedAt'] === 'string' || data['updatedAt'] instanceof String)) {
            throw new Error("Expected the field `updatedAt` to be a primitive type in the JSON string but got " + data['updatedAt']);
        }
        // ensure the json data is a string
        if (data['visibility'] && !(typeof data['visibility'] === 'string' || data['visibility'] instanceof String)) {
            throw new Error("Expected the field `visibility` to be a primitive type in the JSON string but got " + data['visibility']);
        }
        // ensure the json data is a string
        if (data['wideImagePid'] && !(typeof data['wideImagePid'] === 'string' || data['wideImagePid'] instanceof String)) {
            throw new Error("Expected the field `wideImagePid` to be a primitive type in the JSON string but got " + data['wideImagePid']);
        }
        // ensure the json data is a string
        if (data['wideImageUrl'] && !(typeof data['wideImageUrl'] === 'string' || data['wideImageUrl'] instanceof String)) {
            throw new Error("Expected the field `wideImageUrl` to be a primitive type in the JSON string but got " + data['wideImageUrl']);
        }

        return true;
    }


}

MusicPopularityPlaylist.RequiredProperties = ["categories", "commentsEnabled", "description", "externalPartners", "genre", "id", "imagePid", "imageUrl", "kind", "mood", "oneOff", "playlistPlaybackType", "score", "serviceId", "title", "updatedAt", "visibility", "wideImagePid", "wideImageUrl"];

/**
 * @member {Array.<String>} categories
 */
MusicPopularityPlaylist.prototype['categories'] = undefined;

/**
 * @member {Boolean} commentsEnabled
 */
MusicPopularityPlaylist.prototype['commentsEnabled'] = undefined;

/**
 * @member {String} description
 */
MusicPopularityPlaylist.prototype['description'] = undefined;

/**
 * @member {Array.<module:model/ExternalPartner>} externalPartners
 */
MusicPopularityPlaylist.prototype['externalPartners'] = undefined;

/**
 * @member {String} genre
 */
MusicPopularityPlaylist.prototype['genre'] = undefined;

/**
 * @member {String} id
 */
MusicPopularityPlaylist.prototype['id'] = undefined;

/**
 * @member {String} imagePid
 */
MusicPopularityPlaylist.prototype['imagePid'] = undefined;

/**
 * @member {String} imageUrl
 */
MusicPopularityPlaylist.prototype['imageUrl'] = undefined;

/**
 * @member {String} kind
 */
MusicPopularityPlaylist.prototype['kind'] = undefined;

/**
 * @member {String} mood
 */
MusicPopularityPlaylist.prototype['mood'] = undefined;

/**
 * @member {Boolean} oneOff
 */
MusicPopularityPlaylist.prototype['oneOff'] = undefined;

/**
 * @member {String} playlistPlaybackType
 */
MusicPopularityPlaylist.prototype['playlistPlaybackType'] = undefined;

/**
 * @member {Number} score
 */
MusicPopularityPlaylist.prototype['score'] = undefined;

/**
 * @member {String} serviceId
 */
MusicPopularityPlaylist.prototype['serviceId'] = undefined;

/**
 * @member {String} title
 */
MusicPopularityPlaylist.prototype['title'] = undefined;

/**
 * @member {String} updatedAt
 */
MusicPopularityPlaylist.prototype['updatedAt'] = undefined;

/**
 * @member {String} visibility
 */
MusicPopularityPlaylist.prototype['visibility'] = undefined;

/**
 * @member {String} wideImagePid
 */
MusicPopularityPlaylist.prototype['wideImagePid'] = undefined;

/**
 * @member {String} wideImageUrl
 */
MusicPopularityPlaylist.prototype['wideImageUrl'] = undefined;






export default MusicPopularityPlaylist;

