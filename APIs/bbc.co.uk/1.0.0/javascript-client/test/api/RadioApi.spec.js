/**
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RadioMusicServices);
  }
}(this, function(expect, RadioMusicServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RadioMusicServices.RadioApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RadioApi', function() {
    describe('deletePersonalisedRadioByActivityTypeById', function() {
      it('should call deletePersonalisedRadioByActivityTypeById successfully', function(done) {
        //uncomment below and update the code to test deletePersonalisedRadioByActivityTypeById
        //instance.deletePersonalisedRadioByActivityTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deletePersonalisedRadioFollowsByTypeById', function() {
      it('should call deletePersonalisedRadioFollowsByTypeById successfully', function(done) {
        //uncomment below and update the code to test deletePersonalisedRadioFollowsByTypeById
        //instance.deletePersonalisedRadioFollowsByTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalisedRadioByActivityTypeById', function() {
      it('should call getPersonalisedRadioByActivityTypeById successfully', function(done) {
        //uncomment below and update the code to test getPersonalisedRadioByActivityTypeById
        //instance.getPersonalisedRadioByActivityTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalisedRadioFavourites', function() {
      it('should call getPersonalisedRadioFavourites successfully', function(done) {
        //uncomment below and update the code to test getPersonalisedRadioFavourites
        //instance.getPersonalisedRadioFavourites(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalisedRadioFavouritesByType', function() {
      it('should call getPersonalisedRadioFavouritesByType successfully', function(done) {
        //uncomment below and update the code to test getPersonalisedRadioFavouritesByType
        //instance.getPersonalisedRadioFavouritesByType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalisedRadioFollows', function() {
      it('should call getPersonalisedRadioFollows successfully', function(done) {
        //uncomment below and update the code to test getPersonalisedRadioFollows
        //instance.getPersonalisedRadioFollows(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalisedRadioFollowsByType', function() {
      it('should call getPersonalisedRadioFollowsByType successfully', function(done) {
        //uncomment below and update the code to test getPersonalisedRadioFollowsByType
        //instance.getPersonalisedRadioFollowsByType(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalisedRadioFollowsByTypeById', function() {
      it('should call getPersonalisedRadioFollowsByTypeById successfully', function(done) {
        //uncomment below and update the code to test getPersonalisedRadioFollowsByTypeById
        //instance.getPersonalisedRadioFollowsByTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPersonalisedRadioPlays', function() {
      it('should call getPersonalisedRadioPlays successfully', function(done) {
        //uncomment below and update the code to test getPersonalisedRadioPlays
        //instance.getPersonalisedRadioPlays(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPersonalisedRadioBatch', function() {
      it('should call postPersonalisedRadioBatch successfully', function(done) {
        //uncomment below and update the code to test postPersonalisedRadioBatch
        //instance.postPersonalisedRadioBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPersonalisedRadioByActivityTypeById', function() {
      it('should call postPersonalisedRadioByActivityTypeById successfully', function(done) {
        //uncomment below and update the code to test postPersonalisedRadioByActivityTypeById
        //instance.postPersonalisedRadioByActivityTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPersonalisedRadioFollowsBatch', function() {
      it('should call postPersonalisedRadioFollowsBatch successfully', function(done) {
        //uncomment below and update the code to test postPersonalisedRadioFollowsBatch
        //instance.postPersonalisedRadioFollowsBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('postPersonalisedRadioFollowsByTypeById', function() {
      it('should call postPersonalisedRadioFollowsByTypeById successfully', function(done) {
        //uncomment below and update the code to test postPersonalisedRadioFollowsByTypeById
        //instance.postPersonalisedRadioFollowsByTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPersonalisedRadioBatch', function() {
      it('should call putPersonalisedRadioBatch successfully', function(done) {
        //uncomment below and update the code to test putPersonalisedRadioBatch
        //instance.putPersonalisedRadioBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPersonalisedRadioByActivityTypeById', function() {
      it('should call putPersonalisedRadioByActivityTypeById successfully', function(done) {
        //uncomment below and update the code to test putPersonalisedRadioByActivityTypeById
        //instance.putPersonalisedRadioByActivityTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPersonalisedRadioFollowsBatch', function() {
      it('should call putPersonalisedRadioFollowsBatch successfully', function(done) {
        //uncomment below and update the code to test putPersonalisedRadioFollowsBatch
        //instance.putPersonalisedRadioFollowsBatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putPersonalisedRadioFollowsByTypeById', function() {
      it('should call putPersonalisedRadioFollowsByTypeById successfully', function(done) {
        //uncomment below and update the code to test putPersonalisedRadioFollowsByTypeById
        //instance.putPersonalisedRadioFollowsByTypeById(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
