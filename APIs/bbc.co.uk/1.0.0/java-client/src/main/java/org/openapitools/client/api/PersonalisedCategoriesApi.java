/*
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.Body;
import org.openapitools.client.model.Body1;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PersonalisedCategoriesResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PersonalisedCategoriesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PersonalisedCategoriesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PersonalisedCategoriesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for myCategoriesFollowsDelete
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call myCategoriesFollowsDeleteCall(String authorization, String xAPIKey, Body1 body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/my/categories/follows";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (xAPIKey != null) {
            localVarHeaderParams.put("X-API-Key", localVarApiClient.parameterToString(xAPIKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call myCategoriesFollowsDeleteValidateBeforeCall(String authorization, String xAPIKey, Body1 body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling myCategoriesFollowsDelete(Async)");
        }

        // verify the required parameter 'xAPIKey' is set
        if (xAPIKey == null) {
            throw new ApiException("Missing the required parameter 'xAPIKey' when calling myCategoriesFollowsDelete(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling myCategoriesFollowsDelete(Async)");
        }

        return myCategoriesFollowsDeleteCall(authorization, xAPIKey, body, _callback);

    }

    /**
     * Unfollow category
     * 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public void myCategoriesFollowsDelete(String authorization, String xAPIKey, Body1 body) throws ApiException {
        myCategoriesFollowsDeleteWithHttpInfo(authorization, xAPIKey, body);
    }

    /**
     * Unfollow category
     * 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> myCategoriesFollowsDeleteWithHttpInfo(String authorization, String xAPIKey, Body1 body) throws ApiException {
        okhttp3.Call localVarCall = myCategoriesFollowsDeleteValidateBeforeCall(authorization, xAPIKey, body, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Unfollow category (asynchronously)
     * 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call myCategoriesFollowsDeleteAsync(String authorization, String xAPIKey, Body1 body, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = myCategoriesFollowsDeleteValidateBeforeCall(authorization, xAPIKey, body, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for myCategoriesFollowsGet
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param offset Paginated results offset (optional)
     * @param limit Paginated results limit (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call myCategoriesFollowsGetCall(String authorization, String xAPIKey, Integer offset, Integer limit, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/my/categories/follows";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (xAPIKey != null) {
            localVarHeaderParams.put("X-API-Key", localVarApiClient.parameterToString(xAPIKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call myCategoriesFollowsGetValidateBeforeCall(String authorization, String xAPIKey, Integer offset, Integer limit, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling myCategoriesFollowsGet(Async)");
        }

        // verify the required parameter 'xAPIKey' is set
        if (xAPIKey == null) {
            throw new ApiException("Missing the required parameter 'xAPIKey' when calling myCategoriesFollowsGet(Async)");
        }

        return myCategoriesFollowsGetCall(authorization, xAPIKey, offset, limit, _callback);

    }

    /**
     * List of followed categories
     * List of followed categories for a given user. 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param offset Paginated results offset (optional)
     * @param limit Paginated results limit (optional)
     * @return PersonalisedCategoriesResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public PersonalisedCategoriesResponse myCategoriesFollowsGet(String authorization, String xAPIKey, Integer offset, Integer limit) throws ApiException {
        ApiResponse<PersonalisedCategoriesResponse> localVarResp = myCategoriesFollowsGetWithHttpInfo(authorization, xAPIKey, offset, limit);
        return localVarResp.getData();
    }

    /**
     * List of followed categories
     * List of followed categories for a given user. 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param offset Paginated results offset (optional)
     * @param limit Paginated results limit (optional)
     * @return ApiResponse&lt;PersonalisedCategoriesResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PersonalisedCategoriesResponse> myCategoriesFollowsGetWithHttpInfo(String authorization, String xAPIKey, Integer offset, Integer limit) throws ApiException {
        okhttp3.Call localVarCall = myCategoriesFollowsGetValidateBeforeCall(authorization, xAPIKey, offset, limit, null);
        Type localVarReturnType = new TypeToken<PersonalisedCategoriesResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List of followed categories (asynchronously)
     * List of followed categories for a given user. 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param offset Paginated results offset (optional)
     * @param limit Paginated results limit (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Unexpected error </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call myCategoriesFollowsGetAsync(String authorization, String xAPIKey, Integer offset, Integer limit, final ApiCallback<PersonalisedCategoriesResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = myCategoriesFollowsGetValidateBeforeCall(authorization, xAPIKey, offset, limit, _callback);
        Type localVarReturnType = new TypeToken<PersonalisedCategoriesResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for myCategoriesFollowsPost
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call myCategoriesFollowsPostCall(String authorization, String xAPIKey, Body body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/my/categories/follows";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (authorization != null) {
            localVarHeaderParams.put("Authorization", localVarApiClient.parameterToString(authorization));
        }

        if (xAPIKey != null) {
            localVarHeaderParams.put("X-API-Key", localVarApiClient.parameterToString(xAPIKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call myCategoriesFollowsPostValidateBeforeCall(String authorization, String xAPIKey, Body body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'authorization' is set
        if (authorization == null) {
            throw new ApiException("Missing the required parameter 'authorization' when calling myCategoriesFollowsPost(Async)");
        }

        // verify the required parameter 'xAPIKey' is set
        if (xAPIKey == null) {
            throw new ApiException("Missing the required parameter 'xAPIKey' when calling myCategoriesFollowsPost(Async)");
        }

        // verify the required parameter 'body' is set
        if (body == null) {
            throw new ApiException("Missing the required parameter 'body' when calling myCategoriesFollowsPost(Async)");
        }

        return myCategoriesFollowsPostCall(authorization, xAPIKey, body, _callback);

    }

    /**
     * Follow category
     * 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public void myCategoriesFollowsPost(String authorization, String xAPIKey, Body body) throws ApiException {
        myCategoriesFollowsPostWithHttpInfo(authorization, xAPIKey, body);
    }

    /**
     * Follow category
     * 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> myCategoriesFollowsPostWithHttpInfo(String authorization, String xAPIKey, Body body) throws ApiException {
        okhttp3.Call localVarCall = myCategoriesFollowsPostValidateBeforeCall(authorization, xAPIKey, body, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Follow category (asynchronously)
     * 
     * @param authorization Bearer OAUTH_TOKEN (required)
     * @param xAPIKey API_KEY (required)
     * @param body  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td> Request successfully sent to UAS. </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> The request was malformed. </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> There was an error with the supplied &#x60;Authorization&#x60; header. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call myCategoriesFollowsPostAsync(String authorization, String xAPIKey, Body body, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = myCategoriesFollowsPostValidateBeforeCall(authorization, xAPIKey, body, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
