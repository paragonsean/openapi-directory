/*
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BroadcastsResponse;
import org.openapitools.client.model.ErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BroadcastsApi
 */
@Disabled
public class BroadcastsApiTest {

    private final BroadcastsApi api = new BroadcastsApi();

    /**
     * Broadcasts
     *
     * All broadcasts 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void broadcastsGetTest() throws ApiException {
        String xAPIKey = null;
        Integer offset = null;
        Integer limit = null;
        String serviceId = null;
        String date = null;
        String sort = null;
        BroadcastsResponse response = api.broadcastsGet(xAPIKey, offset, limit, serviceId, date, sort);
        // TODO: test validations
    }

    /**
     * Latest Broadcasts
     *
     * Broadcasts for the current day 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void broadcastsLatestGetTest() throws ApiException {
        String xAPIKey = null;
        Integer offset = null;
        Integer limit = null;
        String serviceId = null;
        String onAir = null;
        String next = null;
        String previous = null;
        String sort = null;
        BroadcastsResponse response = api.broadcastsLatestGet(xAPIKey, offset, limit, serviceId, onAir, next, previous, sort);
        // TODO: test validations
    }

    /**
     * Broadcasts by PID
     *
     * Find broadcast by PID 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBroadcastByPidTest() throws ApiException {
        String xAPIKey = null;
        String pid = null;
        BroadcastsResponse response = api.getBroadcastByPid(xAPIKey, pid);
        // TODO: test validations
    }

}
