/*
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PodcastEpisodesResponse;
import org.openapitools.client.model.PodcastErrorResponse;
import org.openapitools.client.model.PodcastsFeaturedResponse;
import org.openapitools.client.model.PodcastsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PodcastsApi
 */
@Disabled
public class PodcastsApiTest {

    private final PodcastsApi api = new PodcastsApi();

    /**
     * Podcast
     *
     * Retrieve data about the podcast with the supplied PID 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPodcastByPidTest() throws ApiException {
        String xAPIKey = null;
        String pid = null;
        Integer offset = null;
        Integer limit = null;
        PodcastsResponse response = api.getPodcastByPid(xAPIKey, pid, offset, limit);
        // TODO: test validations
    }

    /**
     * Podcast Episodes
     *
     * Retrieve all episodes for a specific podcast 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPodcastEpisodesTest() throws ApiException {
        String xAPIKey = null;
        String pid = null;
        Integer offset = null;
        Integer limit = null;
        PodcastEpisodesResponse response = api.getPodcastEpisodes(xAPIKey, pid, offset, limit);
        // TODO: test validations
    }

    /**
     * All Podcasts
     *
     * Retrieve all Podcasts 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPodcastsTest() throws ApiException {
        String xAPIKey = null;
        Integer offset = null;
        Integer limit = null;
        String sort = null;
        String network = null;
        String networkUrlKey = null;
        String category = null;
        String q = null;
        String coverage = null;
        PodcastsResponse response = api.getPodcasts(xAPIKey, offset, limit, sort, network, networkUrlKey, category, q, coverage);
        // TODO: test validations
    }

    /**
     * Featured Podcasts
     *
     * Retrieve featured podcasts 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPodcastsFeaturedTest() throws ApiException {
        String xAPIKey = null;
        PodcastsFeaturedResponse response = api.getPodcastsFeatured(xAPIKey);
        // TODO: test validations
    }

}
