/*
 * Radio & Music Services
 * We encapsulate Radio & Music business logic for iPlayer Radio and BBC Music products on all platforms. We add value by reliably providing the right blend of metadata needed by clients.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorResponse;
import org.openapitools.client.model.PopularErrorResponse;
import org.openapitools.client.model.PopularResponse;
import org.openapitools.client.model.ProgrammesResponse;
import org.openapitools.client.model.RadioErrorResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProgrammesApi
 */
@Disabled
public class ProgrammesApiTest {

    private final ProgrammesApi api = new ProgrammesApi();

    /**
     * Popular Episodes &amp; Clips
     *
     * Retrieve Popular Episodes &amp; Clips 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPopularEpisodesClipsTest() throws ApiException {
        String xAPIKey = null;
        String type = null;
        String distinct = null;
        String network = null;
        String networkUrlKey = null;
        String category = null;
        String format = null;
        String group = null;
        String mediaType = null;
        String container = null;
        List<Object> mediaSet = null;
        String q = null;
        PopularResponse response = api.getPopularEpisodesClips(xAPIKey, type, distinct, network, networkUrlKey, category, format, group, mediaType, container, mediaSet, q);
        // TODO: test validations
    }

    /**
     * Radio programmes
     *
     * Provides a paginated list of programmes by PID (brand, series, episode and clip). Accepts various filters and sorting methods.  N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode and Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for  anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRadioProgrammesTest() throws ApiException {
        String xAPIKey = null;
        String kind = null;
        String network = null;
        String networkUrlKey = null;
        String category = null;
        String sort = null;
        String container = null;
        String type = null;
        ProgrammesResponse response = api.getRadioProgrammes(xAPIKey, kind, network, networkUrlKey, category, sort, container, type);
        // TODO: test validations
    }

    /**
     * Available radio programme by Pid
     *
     * Find programmes by PID (brand, series, episode and clip)  N.B.  Swagger schemas cannot currently handle multiple combinations of object in an array i.e. a mix of Episode and Clip Summaries so we are defining results as an array of Programme Summary here.  This will be resolved in V3 with full support for  anyOf https://www.openapis.org/blog/2017/01/24/a-new-year-a-new-specification 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRadioProgrammesByPidTest() throws ApiException {
        String xAPIKey = null;
        String pid = null;
        ProgrammesResponse response = api.getRadioProgrammesByPid(xAPIKey, pid);
        // TODO: test validations
    }

    /**
     * Recommended Programmes
     *
     * Recommended Programmes from the Audience Platforms&#39; Recomendations Service 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecommendationsTest() throws ApiException {
        String authorization = null;
        String xAPIKey = null;
        String rights = null;
        Integer offset = null;
        Integer limit = null;
        ProgrammesResponse response = api.getRecommendations(authorization, xAPIKey, rights, offset, limit);
        // TODO: test validations
    }

}
