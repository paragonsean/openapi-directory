/*
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Countries in which toll free PSTN numbers are available.
 */
@JsonAdapter(TollFreeCountries.Adapter.class)
public enum TollFreeCountries {
  
  AE("AE"),
  
  AR("AR"),
  
  AT("AT"),
  
  AU("AU"),
  
  BE("BE"),
  
  BG("BG"),
  
  BH("BH"),
  
  BR("BR"),
  
  BY("BY"),
  
  CA("CA"),
  
  CH("CH"),
  
  CL("CL"),
  
  CN("CN"),
  
  CO("CO"),
  
  CZ("CZ"),
  
  DE("DE"),
  
  DK("DK"),
  
  ES("ES"),
  
  FI("FI"),
  
  FR("FR"),
  
  GB("GB"),
  
  GR("GR"),
  
  HK("HK"),
  
  HU("HU"),
  
  ID("ID"),
  
  IE("IE"),
  
  IL("IL"),
  
  IN("IN"),
  
  IS("IS"),
  
  IT("IT"),
  
  JP("JP"),
  
  KR("KR"),
  
  LU("LU"),
  
  MX("MX"),
  
  MY("MY"),
  
  NL("NL"),
  
  FALSE("false"),
  
  NZ("NZ"),
  
  PA("PA"),
  
  PE("PE"),
  
  PH("PH"),
  
  PL("PL"),
  
  PT("PT"),
  
  RO("RO"),
  
  RU("RU"),
  
  SA("SA"),
  
  SE("SE"),
  
  SG("SG"),
  
  TH("TH"),
  
  TR("TR"),
  
  TW("TW"),
  
  UA("UA"),
  
  US("US"),
  
  UY("UY"),
  
  VN("VN"),
  
  ZA("ZA");

  private String value;

  TollFreeCountries(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static TollFreeCountries fromValue(String value) {
    for (TollFreeCountries b : TollFreeCountries.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<TollFreeCountries> {
    @Override
    public void write(final JsonWriter jsonWriter, final TollFreeCountries enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public TollFreeCountries read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return TollFreeCountries.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    TollFreeCountries.fromValue(value);
  }
}

