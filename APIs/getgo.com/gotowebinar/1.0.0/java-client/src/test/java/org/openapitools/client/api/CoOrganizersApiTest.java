/*
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Coorganizer;
import org.openapitools.client.model.CoorganizerReqCreate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CoOrganizersApi
 */
@Disabled
public class CoOrganizersApiTest {

    private final CoOrganizersApi api = new CoOrganizersApi();

    /**
     * Create co-organizers
     *
     * Creates co-organizers for the specified webinar. For co-organizers that have a GoToWebinar account you have to set the parameter &#39;external&#39; to &#39;false&#39;. In this case you have to pass the parameter &#39;organizerKey&#39; only. For co-organizers that have no GoToWebinar account you have to set the parameter &#39;external&#39; to &#39;true&#39;. In this case you have to pass the parameters &#39;givenName&#39; and &#39;email&#39;. Since there is no parameter for &#39;surname&#39; you should pass first and last name to the parameter &#39;givenName&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCoorganizersTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        List<CoorganizerReqCreate> body = null;
        List<Coorganizer> response = api.createCoorganizers(authorization, organizerKey, webinarKey, body);
        // TODO: test validations
    }

    /**
     * Delete co-organizer
     *
     * Deletes an internal co-organizer specified by the coorganizerKey (memberKey).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCoorganizerTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long coorganizerKey = null;
        Boolean external = null;
        api.deleteCoorganizer(authorization, organizerKey, webinarKey, coorganizerKey, external);
        // TODO: test validations
    }

    /**
     * Get co-organizers
     *
     * Returns the co-organizers for the specified webinar. The original organizer who created the webinar is filtered out of the list. If the webinar has no co-organizers, an empty array is returned. Co-organizers that do not have a GoToWebinar account are returned as external co-organizers. For those organizers no surname is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCoorganizersTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        List<Coorganizer> response = api.getCoorganizers(authorization, organizerKey, webinarKey);
        // TODO: test validations
    }

    /**
     * Resend invitation
     *
     * Resends an invitation email to the specified co-organizer
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resendCoorganizerInvitationTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long coorganizerKey = null;
        Boolean external = null;
        api.resendCoorganizerInvitation(authorization, organizerKey, webinarKey, coorganizerKey, external);
        // TODO: test validations
    }

}
