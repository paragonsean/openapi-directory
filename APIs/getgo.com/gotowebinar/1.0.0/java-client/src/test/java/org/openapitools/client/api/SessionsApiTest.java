/*
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Attendee;
import org.openapitools.client.model.AttendeeQuestion;
import java.time.OffsetDateTime;
import org.openapitools.client.model.Poll;
import org.openapitools.client.model.Session;
import org.openapitools.client.model.SessionPerformance;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SessionsApi
 */
@Disabled
public class SessionsApiTest {

    private final SessionsApi api = new SessionsApi();

    /**
     * Get webinar sessions
     *
     * Retrieves details for all past sessions of a specific webinar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllSessionsTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        List<Session> response = api.getAllSessions(authorization, organizerKey, webinarKey);
        // TODO: test validations
    }

    /**
     * Get organizer sessions
     *
     * Retrieve all completed sessions of all the webinars of a given organizer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganizerSessionsTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        OffsetDateTime fromTime = null;
        OffsetDateTime toTime = null;
        List<Session> response = api.getOrganizerSessions(authorization, organizerKey, fromTime, toTime);
        // TODO: test validations
    }

    /**
     * Get session performance
     *
     * Get performance details for a session. For technical reasons, this call cannot be executed from this documentation. Please use the curl command to execute it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPerformanceTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long sessionKey = null;
        SessionPerformance response = api.getPerformance(authorization, organizerKey, webinarKey, sessionKey);
        // TODO: test validations
    }

    /**
     * Get session polls
     *
     * Retrieve all collated attendee questions and answers for polls from a specific webinar session. For technical reasons, this call cannot be executed from this documentation. Please use the curl command to execute it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPollsTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long sessionKey = null;
        List<Poll> response = api.getPolls(authorization, organizerKey, webinarKey, sessionKey);
        // TODO: test validations
    }

    /**
     * Get session questions
     *
     * Retrieve questions and answers for a past webinar session. For technical reasons, this call cannot be executed from this documentation. Please use the curl command to execute it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuestionsTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long sessionKey = null;
        List<AttendeeQuestion> response = api.getQuestions(authorization, organizerKey, webinarKey, sessionKey);
        // TODO: test validations
    }

    /**
     * Get session surveys
     *
     * Retrieve surveys for a past webinar session. For technical reasons, this call cannot be executed from this documentation. Please use the curl command to execute it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSurveysTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long sessionKey = null;
        List<Poll> response = api.getSurveys(authorization, organizerKey, webinarKey, sessionKey);
        // TODO: test validations
    }

    /**
     * Get webinar session
     *
     * Retrieves attendance details for a specific webinar session that has ended. If attendees attended the session (&#39;registrantsAttended&#39;), specific attendance details, such as attendenceTime for a registrant, will also be retrieved. For technical reasons, this call cannot be executed from this documentation. Please use the curl command to execute it.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebinarSessionTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long sessionKey = null;
        List<Attendee> response = api.getWebinarSession(authorization, organizerKey, webinarKey, sessionKey);
        // TODO: test validations
    }

}
