/*
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Registrant;
import org.openapitools.client.model.RegistrantCreated;
import org.openapitools.client.model.RegistrantDetailed;
import org.openapitools.client.model.RegistrantFields;
import org.openapitools.client.model.RegistrationFields;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistrantsApi
 */
@Disabled
public class RegistrantsApiTest {

    private final RegistrantsApi api = new RegistrantsApi();

    /**
     * Create registrant
     *
     * Register an attendee for a scheduled webinar. The response contains the registrantKey and join URL for the registrant. An email will be sent to the registrant unless the organizer turns off the confirmation email setting from the GoToWebinar website. Please note that you must provide all required fields including custom fields defined during the webinar creation. Use the API call &#39;Get registration fields&#39; to get a list of all fields, if they are required, and their possible values. At this time there are two versions of the &#39;Create Registrant&#39; call. The first version only accepts firstName, lastName, and email and ignores all other fields. If you have custom fields or want to capture additional information this version won&#39;t work for you. The second version allows you to pass all required and optional fields, including custom fields defined when creating the webinar. To use the second version you must pass the header value &#39;Accept: application/vnd.citrix.g2wapi-v1.1+json&#39; instead of &#39;Accept: application/json&#39;. Leaving this header out results in the first version of the API call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createRegistrantTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        RegistrantFields body = null;
        String accept = null;
        Boolean resendConfirmation = null;
        RegistrantCreated response = api.createRegistrant(authorization, organizerKey, webinarKey, body, accept, resendConfirmation);
        // TODO: test validations
    }

    /**
     * Delete registrant
     *
     * Removes a webinar registrant from current registrations for the specified webinar. The webinar must be a scheduled, future webinar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteRegistrantTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long registrantKey = null;
        api.deleteRegistrant(authorization, organizerKey, webinarKey, registrantKey);
        // TODO: test validations
    }

    /**
     * Get registrants
     *
     * Retrieve registration details for all registrants of a specific webinar. Registrant details will not include all fields captured when creating the registrant. To see all data, use the API call &#39;Get Registrant&#39;. Registrants can have one of the following states; &lt;br&gt;WAITING - registrant registered and is awaiting approval (where organizer has required approval), &lt;br&gt;APPROVED - registrant registered and is approved, and &lt;br&gt;DENIED - registrant registered and was denied.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllRegistrantsForWebinarTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        List<Registrant> response = api.getAllRegistrantsForWebinar(authorization, organizerKey, webinarKey);
        // TODO: test validations
    }

    /**
     * Get registrant
     *
     * Retrieve registration details for a specific registrant.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrantTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        Long registrantKey = null;
        RegistrantDetailed response = api.getRegistrant(authorization, organizerKey, webinarKey, registrantKey);
        // TODO: test validations
    }

    /**
     * Get registration fields
     *
     * Retrieve required, optional registration, and custom questions for a specified webinar.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRegistrationFieldsTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long webinarKey = null;
        RegistrationFields response = api.getRegistrationFields(authorization, organizerKey, webinarKey);
        // TODO: test validations
    }

}
