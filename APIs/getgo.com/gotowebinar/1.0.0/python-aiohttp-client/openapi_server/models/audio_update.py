# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_type import AudioType
from openapi_server.models.private_info_update import PrivateInfoUpdate
from openapi_server.models.pstn_info_update import PstnInfoUpdate
from openapi_server import util


class AudioUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, private_info: PrivateInfoUpdate=None, pstn_info: PstnInfoUpdate=None, type: AudioType=None):
        """AudioUpdate - a model defined in OpenAPI

        :param private_info: The private_info of this AudioUpdate.
        :param pstn_info: The pstn_info of this AudioUpdate.
        :param type: The type of this AudioUpdate.
        """
        self.openapi_types = {
            'private_info': PrivateInfoUpdate,
            'pstn_info': PstnInfoUpdate,
            'type': AudioType
        }

        self.attribute_map = {
            'private_info': 'privateInfo',
            'pstn_info': 'pstnInfo',
            'type': 'type'
        }

        self._private_info = private_info
        self._pstn_info = pstn_info
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AudioUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AudioUpdate of this AudioUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def private_info(self):
        """Gets the private_info of this AudioUpdate.


        :return: The private_info of this AudioUpdate.
        :rtype: PrivateInfoUpdate
        """
        return self._private_info

    @private_info.setter
    def private_info(self, private_info):
        """Sets the private_info of this AudioUpdate.


        :param private_info: The private_info of this AudioUpdate.
        :type private_info: PrivateInfoUpdate
        """

        self._private_info = private_info

    @property
    def pstn_info(self):
        """Gets the pstn_info of this AudioUpdate.


        :return: The pstn_info of this AudioUpdate.
        :rtype: PstnInfoUpdate
        """
        return self._pstn_info

    @pstn_info.setter
    def pstn_info(self, pstn_info):
        """Sets the pstn_info of this AudioUpdate.


        :param pstn_info: The pstn_info of this AudioUpdate.
        :type pstn_info: PstnInfoUpdate
        """

        self._pstn_info = pstn_info

    @property
    def type(self):
        """Gets the type of this AudioUpdate.


        :return: The type of this AudioUpdate.
        :rtype: AudioType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AudioUpdate.


        :param type: The type of this AudioUpdate.
        :type type: AudioType
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")

        self._type = type
