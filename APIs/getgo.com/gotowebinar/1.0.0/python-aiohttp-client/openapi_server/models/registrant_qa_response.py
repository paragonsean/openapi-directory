# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegistrantQAResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answer_key: int=None, question_key: int=None, response_text: str=None):
        """RegistrantQAResponse - a model defined in OpenAPI

        :param answer_key: The answer_key of this RegistrantQAResponse.
        :param question_key: The question_key of this RegistrantQAResponse.
        :param response_text: The response_text of this RegistrantQAResponse.
        """
        self.openapi_types = {
            'answer_key': int,
            'question_key': int,
            'response_text': str
        }

        self.attribute_map = {
            'answer_key': 'answerKey',
            'question_key': 'questionKey',
            'response_text': 'responseText'
        }

        self._answer_key = answer_key
        self._question_key = question_key
        self._response_text = response_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegistrantQAResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegistrantQAResponse of this RegistrantQAResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answer_key(self):
        """Gets the answer_key of this RegistrantQAResponse.

        The numeric key of the answer to a multiple-choice question.

        :return: The answer_key of this RegistrantQAResponse.
        :rtype: int
        """
        return self._answer_key

    @answer_key.setter
    def answer_key(self, answer_key):
        """Sets the answer_key of this RegistrantQAResponse.

        The numeric key of the answer to a multiple-choice question.

        :param answer_key: The answer_key of this RegistrantQAResponse.
        :type answer_key: int
        """

        self._answer_key = answer_key

    @property
    def question_key(self):
        """Gets the question_key of this RegistrantQAResponse.

        The unique key of the question

        :return: The question_key of this RegistrantQAResponse.
        :rtype: int
        """
        return self._question_key

    @question_key.setter
    def question_key(self, question_key):
        """Sets the question_key of this RegistrantQAResponse.

        The unique key of the question

        :param question_key: The question_key of this RegistrantQAResponse.
        :type question_key: int
        """
        if question_key is None:
            raise ValueError("Invalid value for `question_key`, must not be `None`")

        self._question_key = question_key

    @property
    def response_text(self):
        """Gets the response_text of this RegistrantQAResponse.

        Answer of the question.

        :return: The response_text of this RegistrantQAResponse.
        :rtype: str
        """
        return self._response_text

    @response_text.setter
    def response_text(self, response_text):
        """Sets the response_text of this RegistrantQAResponse.

        Answer of the question.

        :param response_text: The response_text of this RegistrantQAResponse.
        :type response_text: str
        """

        self._response_text = response_text
