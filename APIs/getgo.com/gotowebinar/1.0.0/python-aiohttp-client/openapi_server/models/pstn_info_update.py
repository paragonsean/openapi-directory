# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.toll_countries import TollCountries
from openapi_server.models.toll_free_countries import TollFreeCountries
from openapi_server import util


class PstnInfoUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, toll_countries: List[TollCountries]=None, toll_free_countries: List[TollFreeCountries]=None):
        """PstnInfoUpdate - a model defined in OpenAPI

        :param toll_countries: The toll_countries of this PstnInfoUpdate.
        :param toll_free_countries: The toll_free_countries of this PstnInfoUpdate.
        """
        self.openapi_types = {
            'toll_countries': List[TollCountries],
            'toll_free_countries': List[TollFreeCountries]
        }

        self.attribute_map = {
            'toll_countries': 'tollCountries',
            'toll_free_countries': 'tollFreeCountries'
        }

        self._toll_countries = toll_countries
        self._toll_free_countries = toll_free_countries

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PstnInfoUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PstnInfoUpdate of this PstnInfoUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def toll_countries(self):
        """Gets the toll_countries of this PstnInfoUpdate.

        Defines in which countries toll PSTN numbers are available. Possible values are AT, AU, BE, CA, CH, DE, DK, ES, FI, FR, GB, IE, IT, NL, NO, NZ, SE, US

        :return: The toll_countries of this PstnInfoUpdate.
        :rtype: List[TollCountries]
        """
        return self._toll_countries

    @toll_countries.setter
    def toll_countries(self, toll_countries):
        """Sets the toll_countries of this PstnInfoUpdate.

        Defines in which countries toll PSTN numbers are available. Possible values are AT, AU, BE, CA, CH, DE, DK, ES, FI, FR, GB, IE, IT, NL, NO, NZ, SE, US

        :param toll_countries: The toll_countries of this PstnInfoUpdate.
        :type toll_countries: List[TollCountries]
        """

        self._toll_countries = toll_countries

    @property
    def toll_free_countries(self):
        """Gets the toll_free_countries of this PstnInfoUpdate.

        Defines in which countries toll free PSTN numbers are available. Possible values are AE, AR, AT, AU, BE, BG, BH, BR, BY, CA, CH, CL, CN, CO, CZ, DE, DK, ES, FI, FR, GB, GR, HK, HU, ID, IE, IL, IN, IS, IT, JP, KR, LU, MX, MY, NL, NO, NZ, PA, PE, PH, PL, PT, RO, RU, SA, SE, SG, TH, TR, TW, UA, US, UY, VN, ZA

        :return: The toll_free_countries of this PstnInfoUpdate.
        :rtype: List[TollFreeCountries]
        """
        return self._toll_free_countries

    @toll_free_countries.setter
    def toll_free_countries(self, toll_free_countries):
        """Sets the toll_free_countries of this PstnInfoUpdate.

        Defines in which countries toll free PSTN numbers are available. Possible values are AE, AR, AT, AU, BE, BG, BH, BR, BY, CA, CH, CL, CN, CO, CZ, DE, DK, ES, FI, FR, GB, GR, HK, HU, ID, IE, IL, IN, IS, IT, JP, KR, LU, MX, MY, NL, NO, NZ, PA, PE, PH, PL, PT, RO, RU, SA, SE, SG, TH, TR, TW, UA, US, UY, VN, ZA

        :param toll_free_countries: The toll_free_countries of this PstnInfoUpdate.
        :type toll_free_countries: List[TollFreeCountries]
        """

        self._toll_free_countries = toll_free_countries
