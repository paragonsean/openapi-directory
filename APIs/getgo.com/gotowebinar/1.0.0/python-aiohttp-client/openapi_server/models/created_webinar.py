# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreatedWebinar(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, webinar_key: str=None):
        """CreatedWebinar - a model defined in OpenAPI

        :param webinar_key: The webinar_key of this CreatedWebinar.
        """
        self.openapi_types = {
            'webinar_key': str
        }

        self.attribute_map = {
            'webinar_key': 'webinarKey'
        }

        self._webinar_key = webinar_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreatedWebinar':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreatedWebinar of this CreatedWebinar.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def webinar_key(self):
        """Gets the webinar_key of this CreatedWebinar.

        The unique key of the webinar.

        :return: The webinar_key of this CreatedWebinar.
        :rtype: str
        """
        return self._webinar_key

    @webinar_key.setter
    def webinar_key(self, webinar_key):
        """Sets the webinar_key of this CreatedWebinar.

        The unique key of the webinar.

        :param webinar_key: The webinar_key of this CreatedWebinar.
        :type webinar_key: str
        """
        if webinar_key is None:
            raise ValueError("Invalid value for `webinar_key`, must not be `None`")

        self._webinar_key = webinar_key
