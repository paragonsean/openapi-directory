openapi: 3.0.1
info:
  contact:
    email: developer-support@logmein.com
    name: Developer Support
    url: https://goto-developer.logmein.com
  description: "The GoToWebinar API provides seamless integration of webinar registrant\
    \ and attendee data into your existing infrastructure or third-party applications.\
    \ The ability to register participants, as well as pull lists of registrants and\
    \ attendees for a webinar, allows organizers to manage the flow of information\
    \ between their primary applications without manual intervention."
  termsOfService: https://goto-developer.logmein.com/terms-use
  title: GoToWebinar
  version: 1.0.0
  x-origin:
  - format: swagger
    url: https://developer.citrixonline.com/sites/default/files/citrix/citrix-apis/gotowebinar.json
    version: "2.0"
  x-providerName: getgo.com
  x-serviceName: gotowebinar
servers:
- url: https://api.getgo.com/G2W/rest
tags:
- description: Operations available for webinars of a given organizer.
  name: Webinars
- description: Operations available for co-organizers of a given webinar.
  name: Co-organizers
- description: Operations available for panelists of a given webinar.
  name: Panelists
- description: Operations available for registrants of a given webinar.
  name: Registrants
- description: Operations available for sessions of a given webinar.
  name: Sessions
- description: Operations available for attendees of a given webinar session.
  name: Attendees
paths:
  /accounts/{accountKey}/webinars:
    get:
      description: "Retrieves the list of webinars for an account within a given date\
        \ range. __*Page*__ and __*size*__ parameters are optional. Default __*page*__\
        \ is 0 and default __*size*__ is 20. For technical reasons, this call cannot\
        \ be executed from this documentation. Please use the curl command to execute\
        \ it."
      operationId: get_all_account_webinars
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The key of the account
        in: path
        name: accountKey
        required: true
        schema:
          format: int64
          type: integer
      - description: "A required start of datetime range in ISO8601 UTC format, e.g.\
          \ 2015-07-13T10:00:00Z"
        in: query
        name: fromTime
        required: true
        schema:
          format: date-time
          type: string
      - description: "A required end of datetime range in ISO8601 UTC format, e.g.\
          \ 2015-07-13T22:00:00Z"
        in: query
        name: toTime
        required: true
        schema:
          format: date-time
          type: string
      - description: The page number to be displayed. The first page is 0.
        in: query
        name: page
        schema:
          format: int64
          type: integer
      - description: The size of the page.
        in: query
        name: size
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountWebinarsResponse'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get all webinars for an account
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/historicalWebinars:
    get:
      description: Returns details for completed webinars for the specified organizer
        and completed webinars of other organizers where the specified organizer is
        a co-organizer.
      operationId: get_historical_webinars
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizerKey
        required: true
        schema:
          format: int64
          type: integer
      - description: "A required start of datetime range in ISO8601 UTC format, e.g.\
          \ 2015-07-13T10:00:00Z"
        in: query
        name: fromTime
        required: true
        schema:
          format: date-time
          type: string
      - description: "A required end of datetime range in ISO8601 UTC format, e.g.\
          \ 2015-07-13T22:00:00Z"
        in: query
        name: toTime
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/HistoricalWebinar'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Get historical webinars
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/sessions:
    get:
      description: Retrieve all completed sessions of all the webinars of a given
        organizer.
      operationId: get_organizer_sessions
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: "A required start of datetime range in ISO8601 UTC format, e.g.\
          \ 2015-07-13T10:00:00Z"
        in: query
        name: fromTime
        required: true
        schema:
          format: date-time
          type: string
      - description: "A required end of datetime range in ISO8601 UTC format, e.g.\
          \ 2015-07-13T22:00:00Z"
        in: query
        name: toTime
        required: true
        schema:
          format: date-time
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Get organizer sessions
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
  /organizers/{organizerKey}/upcomingWebinars:
    get:
      description: Returns webinars scheduled for the future for the specified organizer
        and webinars of other organizers where the specified organizer is a co-organizer.
      operationId: get_upcoming_webinars
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UpcomingWebinar'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Get upcoming webinars
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/webinars:
    get:
      description: Returns webinars scheduled for the future for a specified organizer.
      operationId: get_all_webinars
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Webinar'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Get all webinars
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
    post:
      description: "Creates a single session webinar, a sequence of webinars or a\
        \ series of webinars depending on the type field in the body: \"single_session\"\
        \ creates a single webinar session, \"sequence\" creates a webinar with multiple\
        \ meeting times where attendees are expected to be the same for all sessions,\
        \ and \"series\" creates a webinar with multiple meetings times where attendees\
        \ choose only one to attend. The default, if no type is declared, is single_session.\
        \ A sequence webinar requires a \"recurrenceStart\" object consisting of a\
        \ \"startTime\" and \"endTime\" key for the first webinar of the sequence,\
        \ a \"recurrencePattern\" of \"daily\", \"weekly\", \"monthly\", and a \"\
        recurrenceEnd\" which is the last date of the sequence (for example, 2016-12-01).\
        \ A series webinar requires a \"times\" array with a discrete \"startTime\"\
        \ and \"endTime\" for each webinar in the series. The call requires a webinar\
        \ subject and description. The \"isPasswordProtected\" sets whether the webinar\
        \ requires a password for attendees to join. If set to True, the organizer\
        \ must go to Registration Settings at My Webinars (https://global.gotowebinar.com/webinars.tmpl)\
        \ and add the password to the webinar, and send the password to the registrants.\
        \ The response provides a numeric webinarKey in string format for the new\
        \ webinar. Once a webinar has been created with this method, you can accept\
        \ registrations."
      operationId: create_webinar
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarReqCreate'
        description: The webinar details
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedWebinar'
          description: Created
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Create webinar
      tags:
      - Webinars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/webinars/{webinarKey}:
    delete:
      description: "Cancels a specific webinar. If the webinar is a series or sequence,\
        \ this call deletes all scheduled sessions. To send cancellation emails to\
        \ registrants set sendCancellationEmails=true in the request. When the cancellation\
        \ emails are sent, the default generated message is used in the cancellation\
        \ email body."
      operationId: cancel_webinar
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: Indicates whether cancellation notice emails should be sent.
          The default value is false
        in: query
        name: sendCancellationEmails
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
        "405":
          content: {}
          description: Method Not Allowed (Webinar is in the past)
        "409":
          content: {}
          description: Conflict (Webinar is in session)
      summary: Cancel webinar
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
    get:
      description: "Retrieve information on a specific webinar. If the type of the\
        \ webinar is 'sequence', a sequence of future times will be provided. Webinars\
        \ of type 'series' are treated the same as normal webinars - each session\
        \ in the webinar series has a different webinarKey. If an organizer cancels\
        \ a webinar, then a request to get that webinar would return a '404 Not Found'\
        \ error."
      operationId: get_webinar
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinarKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebinarByKey'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get webinar
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
    put:
      description: "Updates a webinar. The call requires at least one of the parameters\
        \ in the request body. The request completely replaces the existing session,\
        \ series, or sequence and so must include the full definition of each as for\
        \ the Create call. Set notifyParticipants=true to send update emails to registrants."
      operationId: update_webinar
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: Defines whether to send notifications to participants
        in: query
        name: notifyParticipants
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebinarReqUpdate'
        description: The webinar details
        required: true
        x-body-name: body
      responses:
        "202":
          content: {}
          description: Accepted
        "400":
          content: {}
          description: "Bad Request (times not valid, webinar in progress, webinar\
            \ ended, etc.)"
        "403":
          content: {}
          description: Forbidden
      summary: Update webinar
      tags:
      - Webinars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/attendees:
    get:
      description: Returns all attendees for all sessions of the specified webinar.
      operationId: get_attendees_for_all_webinar_sessions
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attendee'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get attendees for all webinar sessions
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/audio:
    get:
      description: Retrieves the audio/conferencing information for a specific webinar.
      operationId: get_audio_information
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audio'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get audio information
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
    post:
      description: Updates the audio/conferencing settings for a specific webinar
      operationId: update_audio_information
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: Defines whether to send notifications to participants
        in: query
        name: notifyParticipants
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioUpdate'
        description: The audio/conferencing settings
        required: true
        x-body-name: body
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Update audio information
      tags:
      - Webinars
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/coorganizers:
    get:
      description: "Returns the co-organizers for the specified webinar. The original\
        \ organizer who created the webinar is filtered out of the list. If the webinar\
        \ has no co-organizers, an empty array is returned. Co-organizers that do\
        \ not have a GoToWebinar account are returned as external co-organizers. For\
        \ those organizers no surname is returned."
      operationId: get_coorganizers
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Coorganizer'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get co-organizers
      tags:
      - Co-organizers
      x-openapi-router-controller: openapi_server.controllers.co_organizers_controller
    post:
      description: Creates co-organizers for the specified webinar. For co-organizers
        that have a GoToWebinar account you have to set the parameter 'external' to
        'false'. In this case you have to pass the parameter 'organizerKey' only.
        For co-organizers that have no GoToWebinar account you have to set the parameter
        'external' to 'true'. In this case you have to pass the parameters 'givenName'
        and 'email'. Since there is no parameter for 'surname' you should pass first
        and last name to the parameter 'givenName'.
      operationId: create_coorganizers
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/CoorganizerReqCreate'
              type: array
        description: The co-organizer details
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Coorganizer'
                type: array
          description: Created
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Create co-organizers
      tags:
      - Co-organizers
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.co_organizers_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/coorganizers/{coorganizerKey}:
    delete:
      description: Deletes an internal co-organizer specified by the coorganizerKey
        (memberKey).
      operationId: delete_coorganizer
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the internal or external co-organizer (memberKey)
        in: path
        name: coorganizerKey
        required: true
        schema:
          format: int64
          type: integer
      - description: By default only internal co-organizers (with a GoToWebinar account)
          can be deleted. If you want to use this call for external co-organizers
          you have to set this parameter to 'true'.
        in: query
        name: external
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content (Co-organizer was deleted)
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Delete co-organizer
      tags:
      - Co-organizers
      x-openapi-router-controller: openapi_server.controllers.co_organizers_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/coorganizers/{coorganizerKey}/resendInvitation:
    post:
      description: Resends an invitation email to the specified co-organizer
      operationId: resend_coorganizer_invitation
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the internal or external co-organizer (memberKey)
        in: path
        name: coorganizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: By default only internal co-organizers (with a GoToWebinar account)
          will retrieve the resent invitation email. If you want to use this call
          for external co-organizers you have to set this parameter to 'true'.
        in: query
        name: external
        schema:
          type: boolean
      responses:
        "204":
          content: {}
          description: No Content (Invitation email was sent)
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Resend invitation
      tags:
      - Co-organizers
      x-openapi-router-controller: openapi_server.controllers.co_organizers_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/meetingtimes:
    get:
      description: Retrieves the meeting times for a webinar.
      operationId: get_webinar_meeting_times
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/DateTimeRange'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get webinar meeting times
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/panelists:
    get:
      description: Retrieves all the panelists for a specific webinar.
      operationId: get_panelists
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Panelist'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get webinar panelists
      tags:
      - Panelists
      x-openapi-router-controller: openapi_server.controllers.panelists_controller
    post:
      description: Create panelists for a specified webinar
      operationId: create_panelists
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/PanelistReqCreate'
              type: array
        description: Array of panelists
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CreatedPanelist'
                type: array
          description: Created
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Create Panelists
      tags:
      - Panelists
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.panelists_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/panelists/{panelistKey}:
    delete:
      description: Removes a webinar panelist.
      operationId: delete_webinar_panelist
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar panelist
        in: path
        name: panelistKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Delete webinar panelist
      tags:
      - Panelists
      x-openapi-router-controller: openapi_server.controllers.panelists_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/panelists/{panelistKey}/resendInvitation:
    post:
      description: Resend the panelist invitation email.
      operationId: resend_panelist_invitation
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar panelist
        in: path
        name: panelist_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: Created
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Resend panelist invitation
      tags:
      - Panelists
      x-openapi-router-controller: openapi_server.controllers.panelists_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/performance:
    get:
      description: Gets performance details for all sessions of a specific webinar.
      operationId: get_performance_for_all_webinar_sessions
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                additionalProperties:
                  $ref: '#/components/schemas/SessionPerformance'
                description: Describes performance details for webinars
                type: object
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get performance for all webinar sessions
      tags:
      - Webinars
      x-openapi-router-controller: openapi_server.controllers.webinars_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/registrants:
    get:
      description: "Retrieve registration details for all registrants of a specific\
        \ webinar. Registrant details will not include all fields captured when creating\
        \ the registrant. To see all data, use the API call 'Get Registrant'. Registrants\
        \ can have one of the following states; <br>WAITING - registrant registered\
        \ and is awaiting approval (where organizer has required approval), <br>APPROVED\
        \ - registrant registered and is approved, and <br>DENIED - registrant registered\
        \ and was denied."
      operationId: get_all_registrants_for_webinar
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Registrant'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get registrants
      tags:
      - Registrants
      x-openapi-router-controller: openapi_server.controllers.registrants_controller
    post:
      description: "Register an attendee for a scheduled webinar. The response contains\
        \ the registrantKey and join URL for the registrant. An email will be sent\
        \ to the registrant unless the organizer turns off the confirmation email\
        \ setting from the GoToWebinar website. Please note that you must provide\
        \ all required fields including custom fields defined during the webinar creation.\
        \ Use the API call 'Get registration fields' to get a list of all fields,\
        \ if they are required, and their possible values. At this time there are\
        \ two versions of the 'Create Registrant' call. The first version only accepts\
        \ firstName, lastName, and email and ignores all other fields. If you have\
        \ custom fields or want to capture additional information this version won't\
        \ work for you. The second version allows you to pass all required and optional\
        \ fields, including custom fields defined when creating the webinar. To use\
        \ the second version you must pass the header value 'Accept: application/vnd.citrix.g2wapi-v1.1+json'\
        \ instead of 'Accept: application/json'. Leaving this header out results in\
        \ the first version of the API call."
      operationId: create_registrant
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: Set to 'application/vnd.citrix.g2wapi-v1.1+json' to make a registration
          using fields (custom or default) additional to the basic ones.
        in: header
        name: Accept
        schema:
          type: string
      - description: Indicates whether the confirmation email should be resent when
          a registrant is re-registered. The default value is false.
        in: query
        name: resendConfirmation
        schema:
          type: boolean
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrantFields'
        description: The registrant details. To get all possible values run the API
          call 'Get registration fields' which is also part of this documentation.
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrantCreated'
          description: Created
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
        "409":
          content: {}
          description: The user is already registered
      summary: Create registrant
      tags:
      - Registrants
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.registrants_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/registrants/fields:
    get:
      description: "Retrieve required, optional registration, and custom questions\
        \ for a specified webinar."
      operationId: get_registration_fields
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationFields'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get registration fields
      tags:
      - Registrants
      x-openapi-router-controller: openapi_server.controllers.registrants_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/registrants/{registrantKey}:
    delete:
      description: "Removes a webinar registrant from current registrations for the\
        \ specified webinar. The webinar must be a scheduled, future webinar."
      operationId: delete_registrant
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrant_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Delete registrant
      tags:
      - Registrants
      x-openapi-router-controller: openapi_server.controllers.registrants_controller
    get:
      description: Retrieve registration details for a specific registrant.
      operationId: get_registrant
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrantKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrantDetailed'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get registrant
      tags:
      - Registrants
      x-openapi-router-controller: openapi_server.controllers.registrants_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions:
    get:
      description: Retrieves details for all past sessions of a specific webinar.
      operationId: get_all_sessions
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get webinar sessions
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}:
    get:
      description: "Retrieves attendance details for a specific webinar session that\
        \ has ended. If attendees attended the session ('registrantsAttended'), specific\
        \ attendance details, such as attendenceTime for a registrant, will also be\
        \ retrieved. For technical reasons, this call cannot be executed from this\
        \ documentation. Please use the curl command to execute it."
      operationId: get_webinar_session
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: sessionKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attendee'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get webinar session
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees:
    get:
      description: "Retrieve details for all attendees of a specific webinar session.\
        \ For technical reasons, this call cannot be executed from this documentation.\
        \ Please use the curl command to execute it."
      operationId: get_attendees
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attendee'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get session attendees
      tags:
      - Attendees
      x-openapi-router-controller: openapi_server.controllers.attendees_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}:
    get:
      description: "Retrieve registration details for a particular attendee of a specific\
        \ webinar session. For technical reasons, this call cannot be executed from\
        \ this documentation. Please use the curl command to execute it."
      operationId: get_attendee
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrant_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registrant'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get attendee
      tags:
      - Attendees
      x-openapi-router-controller: openapi_server.controllers.attendees_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}/polls:
    get:
      description: "Get poll answers from a particular attendee of a specific webinar\
        \ session. For technical reasons, this call cannot be executed from this documentation.\
        \ Please use the curl command to execute it."
      operationId: get_attendee_poll_answers
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrant_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PollAnswer'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get attendee poll answers
      tags:
      - Attendees
      x-openapi-router-controller: openapi_server.controllers.attendees_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}/questions:
    get:
      description: "Get questions asked by an attendee during a webinar session. For\
        \ technical reasons, this call cannot be executed from this documentation.\
        \ Please use the curl command to execute it."
      operationId: get_attendee_questions
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrant_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttendeeQuestion'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get attendee questions
      tags:
      - Attendees
      x-openapi-router-controller: openapi_server.controllers.attendees_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/attendees/{registrantKey}/surveys:
    get:
      description: "Retrieve survey answers from a particular attendee during a webinar\
        \ session. For technical reasons, this call cannot be executed from this documentation.\
        \ Please use the curl command to execute it."
      operationId: get_attendee_survey_answers
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrant_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/PollAnswer'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not found
      summary: Get attendee survey answers
      tags:
      - Attendees
      x-openapi-router-controller: openapi_server.controllers.attendees_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/performance:
    get:
      description: "Get performance details for a session. For technical reasons,\
        \ this call cannot be executed from this documentation. Please use the curl\
        \ command to execute it."
      operationId: get_performance
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionPerformance'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get session performance
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/polls:
    get:
      description: "Retrieve all collated attendee questions and answers for polls\
        \ from a specific webinar session. For technical reasons, this call cannot\
        \ be executed from this documentation. Please use the curl command to execute\
        \ it."
      operationId: get_polls
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Poll'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get session polls
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/questions:
    get:
      description: "Retrieve questions and answers for a past webinar session. For\
        \ technical reasons, this call cannot be executed from this documentation.\
        \ Please use the curl command to execute it."
      operationId: get_questions
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AttendeeQuestion'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get session questions
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
  /organizers/{organizerKey}/webinars/{webinarKey}/sessions/{sessionKey}/surveys:
    get:
      description: "Retrieve surveys for a past webinar session. For technical reasons,\
        \ this call cannot be executed from this documentation. Please use the curl\
        \ command to execute it."
      operationId: get_surveys
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar
        in: path
        name: webinar_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the webinar session
        in: path
        name: session_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Poll'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get session surveys
      tags:
      - Sessions
      x-openapi-router-controller: openapi_server.controllers.sessions_controller
components:
  parameters:
    Authorization:
      description: Access token
      in: header
      name: Authorization
      required: true
      schema:
        type: string
    accountKey:
      description: The key of the account
      in: path
      name: accountKey
      required: true
      schema:
        format: int64
        type: integer
    coorganizerKey:
      description: The key of the internal or external co-organizer (memberKey)
      in: path
      name: coorganizerKey
      required: true
      schema:
        format: int64
        type: integer
    organizerKey:
      description: The key of the organizer
      in: path
      name: organizerKey
      required: true
      schema:
        format: int64
        type: integer
    panelistKey:
      description: The key of the webinar panelist
      in: path
      name: panelistKey
      required: true
      schema:
        format: int64
        type: integer
    registrantKey:
      description: The key of the registrant
      in: path
      name: registrantKey
      required: true
      schema:
        format: int64
        type: integer
    sessionKey:
      description: The key of the webinar session
      in: path
      name: sessionKey
      required: true
      schema:
        format: int64
        type: integer
    webinarKey:
      description: The key of the webinar
      in: path
      name: webinarKey
      required: true
      schema:
        format: int64
        type: integer
  schemas:
    AccessCodes:
      description: "Describes the access codes for organizer, panelists and attendees"
      example:
        panelist: panelist
        attendee: attendee
        organizer: organizer
      properties:
        attendee:
          description: Access code for attendees
          title: attendee
          type: string
        organizer:
          description: Access code for the organizer
          title: organizer
          type: string
        panelist:
          description: Access code for panelists
          title: panelist
          type: string
      required:
      - attendee
      - organizer
      - panelist
      title: AccessCodes
      type: object
    AccountWebinar:
      description: Describes a webinar for an account within a given date range.
      example:
        webinarKey: webinarKey
        times:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        isPasswordProtected: false
        webinarID: webinarID
        subject: subject
        description: description
        timeZone: timeZone
        organizerKey: organizerKey
        type: single_session
        impromptu: true
        registrationUrl: registrationUrl
      properties:
        description:
          description: A short description of the webinar
          title: description
          type: string
        impromptu:
          description: A boolean flag indicating if the webinar type is impromptu
          title: impromptu
          type: boolean
        isPasswordProtected:
          default: false
          description: A boolean flag indicating if the webinar is password protected
          title: isPasswordProtected
          type: boolean
        organizerKey:
          description: The key of the webinar organizer
          title: organizerKey
          type: string
        registrationUrl:
          description: The URL the webinar invitees can use to register
          title: registrationUrl
          type: string
        subject:
          description: The webinar subject
          title: subject
          type: string
        timeZone:
          description: The timezone where the webinar is taking place
          title: timeZone
          type: string
        times:
          description: Array with startTime and endTime for the webinar sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
        type:
          default: single_session
          description: Specifies the webinar type
          title: type
          type: string
        webinarID:
          description: The 9-digit webinar ID
          title: webinarID
          type: string
        webinarKey:
          description: The unique key of the webinar
          title: webinarKey
          type: string
      required:
      - description
      - impromptu
      - isPasswordProtected
      - organizerKey
      - registrationUrl
      - subject
      - timeZone
      - times
      - type
      - webinarID
      - webinarKey
      title: AccountWebinar
      type: object
    AccountWebinars:
      description: ""
      example:
        webinars:
        - webinarKey: webinarKey
          times:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          isPasswordProtected: false
          webinarID: webinarID
          subject: subject
          description: description
          timeZone: timeZone
          organizerKey: organizerKey
          type: single_session
          impromptu: true
          registrationUrl: registrationUrl
        - webinarKey: webinarKey
          times:
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          - startTime: 2000-01-23T04:56:07.000+00:00
            endTime: 2000-01-23T04:56:07.000+00:00
          isPasswordProtected: false
          webinarID: webinarID
          subject: subject
          description: description
          timeZone: timeZone
          organizerKey: organizerKey
          type: single_session
          impromptu: true
          registrationUrl: registrationUrl
      properties:
        webinars:
          items:
            $ref: '#/components/schemas/AccountWebinar'
          title: webinars
          type: array
      required:
      - webinars
      title: AccountWebinars
      type: object
    AccountWebinarsResponse:
      description: Describes a list of webinars for an account within a given date
        range
      example:
        _embedded:
          webinars:
          - webinarKey: webinarKey
            times:
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            isPasswordProtected: false
            webinarID: webinarID
            subject: subject
            description: description
            timeZone: timeZone
            organizerKey: organizerKey
            type: single_session
            impromptu: true
            registrationUrl: registrationUrl
          - webinarKey: webinarKey
            times:
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            - startTime: 2000-01-23T04:56:07.000+00:00
              endTime: 2000-01-23T04:56:07.000+00:00
            isPasswordProtected: false
            webinarID: webinarID
            subject: subject
            description: description
            timeZone: timeZone
            organizerKey: organizerKey
            type: single_session
            impromptu: true
            registrationUrl: registrationUrl
        page:
          number: 0
          size: 6
          totalPages: 5
          totalElements: 1
      properties:
        _embedded:
          $ref: '#/components/schemas/AccountWebinars'
        page:
          $ref: '#/components/schemas/page'
      required:
      - _embedded
      - page
      title: AccountWebinarsResponse
      type: object
    AnswerToAttendeeQuestion:
      description: Describes an answer to a question asked by an attendee during a
        webinar session.
      example:
        answeredBy: answeredBy
        answer: answer
      properties:
        answer:
          description: An answer given to a question asked by an attendee during a
            webinar session
          title: answer
          type: string
        answeredBy:
          description: The key of the organizer that answered the attendee's question
          title: answeredBy
          type: string
      required:
      - answer
      - answeredBy
      title: AnswerToAttendeeQuestion
      type: object
    Attendance:
      description: Describes the times the attendee joined and left a webinar session.
      example:
        leaveTime: 2000-01-23T04:56:07.000+00:00
        joinTime: 2000-01-23T04:56:07.000+00:00
      properties:
        joinTime:
          description: The time the attendee joined a webinar session
          format: date-time
          title: joinTime
          type: string
        leaveTime:
          description: The time the attendee left a webinar session
          format: date-time
          title: leaveTime
          type: string
      required:
      - joinTime
      - leaveTime
      title: Attendance
      type: object
    AttendanceStatistics:
      description: Describes attendance metrics for a webinar session.
      example:
        percentageAttendance: 5.962134
        registrantCount: 5
        averageInterestRating: 1.4658129
        averageAttendanceTimeSeconds: 0.8008282
        averageAttentiveness: 6.0274563
      properties:
        averageAttendanceTimeSeconds:
          description: Average attendance time in seconds
          format: float
          title: averageAttendanceTimeSeconds
          type: number
        averageAttentiveness:
          description: Average based on the focus of the attendees Viewer during the
            webinar session
          format: float
          title: averageAttentiveness
          type: number
        averageInterestRating:
          description: Numerical value 1-100 (100 being most interested) indicating
            the average interest rating of the webinar attendees
          format: float
          title: averageInterestRating
          type: number
        percentageAttendance:
          description: The percentage of registrants that actually attended the webinar
            session
          format: float
          title: percentageAttendance
          type: number
        registrantCount:
          description: The number of registrations for the webinar
          format: int32
          title: registrantCount
          type: integer
      required:
      - averageAttendanceTimeSeconds
      - averageAttentiveness
      - averageInterestRating
      - percentageAttendance
      - registrantCount
      title: AttendanceStatistics
      type: object
    Attendee:
      description: Describes the attendee of a webinar
      example:
        firstName: firstName
        lastName: lastName
        sessionKey: 1
        attendanceTimeInSeconds: 0
        registrantKey: 6
        attendance:
        - leaveTime: 2000-01-23T04:56:07.000+00:00
          joinTime: 2000-01-23T04:56:07.000+00:00
        - leaveTime: 2000-01-23T04:56:07.000+00:00
          joinTime: 2000-01-23T04:56:07.000+00:00
        email: email
      properties:
        attendance:
          description: The list of times the attendee joined and left the webinar
            session
          items:
            $ref: '#/components/schemas/Attendance'
          title: attendance
          type: array
        attendanceTimeInSeconds:
          description: The total attendance time in seconds
          format: int64
          title: attendanceTimeInSeconds
          type: integer
        email:
          description: The attendee's email address
          title: email
          type: string
        firstName:
          description: The attendee's first name
          title: firstName
          type: string
        lastName:
          description: The attendee's last name
          title: lastName
          type: string
        registrantKey:
          description: The key of the webinar attendee
          format: int64
          title: registrantKey
          type: integer
        sessionKey:
          description: The unique key of the webinar session
          format: int64
          title: sessionKey
          type: integer
      required:
      - attendance
      - attendanceTimeInSeconds
      - email
      - firstName
      - lastName
      - registrantKey
      - sessionKey
      title: Attendee
      type: object
    AttendeeQuestion:
      description: Describes the question asked by an attendee during a webinar session;
        includes the answers given to it.
      example:
        askedBy: askedBy
        question: question
        answers:
        - answeredBy: answeredBy
          answer: answer
        - answeredBy: answeredBy
          answer: answer
      properties:
        answers:
          description: Answer to a question of an attendee and key of the organizer
            that answered
          items:
            $ref: '#/components/schemas/AnswerToAttendeeQuestion'
          title: answers
          type: array
        askedBy:
          description: The email address of the attendee that asked the question
          title: askedBy
          type: string
        question:
          description: The question asked by the attendee
          title: question
          type: string
      required:
      - answers
      - askedBy
      - question
      title: AttendeeQuestion
      type: object
    Audio:
      description: Describes the audio/conferencing information for a webinar.
      example:
        confCallNumbers:
          key:
            accessCodes:
              panelist: panelist
              attendee: attendee
              organizer: organizer
            toll: toll
            tollFree: tollFree
        type: PSTN
        privateInfo:
          panelist: panelist
          attendee: attendee
          organizer: organizer
      properties:
        confCallNumbers:
          additionalProperties:
            $ref: '#/components/schemas/CallNumbers'
          description: "The conference call numbers and access codes per country.\
            \ This will be returned only, if 'type' is not set to 'Private'. Example\
            \ for this object: \"confCallNumbers\":{\"CA\":{\"accessCodes\":{\"attendee\"\
            :\"159-309-045\",\"organizer\":\"791-426-085\",\"panelist\":\"690-270-339\"\
            },\"tollFree\":\"1 888 455 4198\"},\"FI\":{\"accessCodes\":{\"attendee\"\
            :\"159-309-045\",\"organizer\":\"791-426-085\",\"panelist\":\"690-270-339\"\
            },\"toll\":\"+358 (0) 338 79 4198\"},\"US\":{\"accessCodes\":{\"attendee\"\
            :\"159-309-045\",\"organizer\":\"791-426-085\",\"panelist\":\"690-270-339\"\
            },\"toll\":\"+1 (805) 879-4198\",\"tollFree\":\"1 888 455 4198\"}}"
          title: confCallNumbers
          type: object
        privateInfo:
          $ref: '#/components/schemas/PrivateInfo'
        type:
          $ref: '#/components/schemas/AudioType'
      required:
      - type
      title: Audio
      type: object
    AudioType:
      description: How to connect to the webinar's audio conference
      enum:
      - PSTN
      - VOIP
      - Hybrid
      - Private
      title: AudioType
      type: string
    AudioUpdate:
      description: Defines the audio/conferencing settings for the specified webinar
      example:
        pstnInfo:
          tollFreeCountries:
          - AE
          - AE
          tollCountries:
          - AT
          - AT
        type: PSTN
        privateInfo:
          panelist: panelist
          attendee: attendee
          organizer: organizer
      properties:
        privateInfo:
          $ref: '#/components/schemas/PrivateInfoUpdate'
        pstnInfo:
          $ref: '#/components/schemas/PstnInfoUpdate'
        type:
          $ref: '#/components/schemas/AudioType'
      required:
      - type
      title: AudioUpdate
      type: object
    CallNumbers:
      description: Conference call numbers per country.
      example:
        accessCodes:
          panelist: panelist
          attendee: attendee
          organizer: organizer
        toll: toll
        tollFree: tollFree
      properties:
        accessCodes:
          $ref: '#/components/schemas/AccessCodes'
        toll:
          description: Conference number for toll calls.
          title: toll
          type: string
        tollFree:
          description: Conference number for toll-free calls.
          title: tollFree
          type: string
      required:
      - accessCodes
      - toll
      title: CallNumbers
      type: object
    Coorganizer:
      description: Describes a webinar co-organizer. A co-organizer without a GoToWebinar
        account is marked as external and is returned without a surname
      example:
        external: true
        memberKey: memberKey
        surname: surname
        givenName: givenName
        joinLink: joinLink
        email: email
      properties:
        email:
          description: The co-organizer's email address
          title: email
          type: string
        external:
          description: "If the co-organizer has no GoToWebinar account, this value\
            \ is set to 'true'"
          title: external
          type: boolean
        givenName:
          description: The co-organizer's given name
          title: givenName
          type: string
        joinLink:
          description: The co-organizer's join link
          title: joinLink
          type: string
        memberKey:
          description: The co-organizer's organizer key. A new member key is created
            for external co-organizers
          title: memberKey
          type: string
        surname:
          description: The co-organizer's surname. For external co-organizers this
            parameter is not returned
          title: surname
          type: string
      required:
      - email
      - external
      - givenName
      - joinLink
      - memberKey
      - surname
      title: Coorganizer
      type: object
    CoorganizerReqCreate:
      description: 'Details used for creating a co-organizer for a webinar. '
      example:
        external: true
        givenName: givenName
        organizerKey: organizerKey
        email: email
      properties:
        email:
          description: "The co-organizer's email address. This parameter has to be\
            \ passed only, if 'external' is set to 'true'"
          title: email
          type: string
        external:
          description: "If the co-organizer has no GoToWebinar account, this value\
            \ has to be set to 'true'"
          title: external
          type: boolean
        givenName:
          description: "The co-organizer's given name. This parameter has to be passed\
            \ only, if 'external' is set to 'true'"
          title: givenName
          type: string
        organizerKey:
          description: "The co-organizer's organizer key. This parameter has to be\
            \ passed only, if 'external' is set to 'false'"
          title: organizerKey
          type: string
      required:
      - external
      title: CoorganizerReqCreate
      type: object
    CreatedPanelist:
      description: Describes a created panelist
      example:
        panelistKey: panelistKey
        name: name
        joinLink: joinLink
        email: email
      properties:
        email:
          description: The panelist's email address
          title: email
          type: string
        joinLink:
          description: The panelist's join link
          title: joinLink
          type: string
        name:
          description: The panelist's name
          title: name
          type: string
        panelistKey:
          description: The panelist's key
          title: panelistKey
          type: string
      required:
      - email
      - joinLink
      - name
      - panelistKey
      title: CreatedPanelist
      type: object
    CreatedWebinar:
      description: Describes a newly created webinar.
      example:
        webinarKey: webinarKey
      properties:
        webinarKey:
          description: The unique key of the webinar.
          title: webinarKey
          type: string
      required:
      - webinarKey
      title: CreatedWebinar
      type: object
    CustomAnswers:
      description: Answers to custom questions of the registrant
      example:
        answer: answer
        question: question
      properties:
        answer:
          description: Answer to a custom question when registering
          title: answer
          type: string
        question:
          description: Custom question for registering
          title: question
          type: string
      required:
      - answer
      - question
      title: CustomAnswers
      type: object
    DateTimeRange:
      description: "A pair of DateTime values, the first of which serves as a start\
        \ time and the second as an end time of an interval."
      example:
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        endTime:
          description: "The ending time of an interval, e.g. 2015-07-13T22:00:00Z"
          format: date-time
          title: endTime
          type: string
        startTime:
          description: "The starting time of an interval, e.g. 2015-07-13T10:00:00Z"
          format: date-time
          title: startTime
          type: string
      required:
      - endTime
      - startTime
      title: DateTimeRange
      type: object
    HistoricalWebinar:
      description: Describes a completed webinar
      example:
        webinarKey: 6
        times:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        webinarID: webinarID
        subject: subject
        description: description
        timeZone: timeZone
        organizerKey: 0
      properties:
        description:
          description: A short description of the webinar
          title: description
          type: string
        organizerKey:
          description: The key of the webinar organizer
          format: int64
          title: organizerKey
          type: integer
        subject:
          description: The webinar subject
          title: subject
          type: string
        timeZone:
          description: The timezone where the webinar is taking place
          title: timeZone
          type: string
        times:
          description: Array with startTime and endTime for the webinar sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
        webinarID:
          description: The 9-digit webinar ID
          title: webinarID
          type: string
        webinarKey:
          description: The unique key of the webinar
          format: int64
          title: webinarKey
          type: integer
      required:
      - description
      - organizerKey
      - subject
      - timeZone
      - times
      - webinarID
      - webinarKey
      title: HistoricalWebinar
      type: object
    Panelist:
      description: Describes a webinar session panelist
      example:
        firstName: firstName
        lastName: lastName
        name: name
        joinLink: joinLink
        email: email
        panelistId: 0
      properties:
        email:
          description: The panelist's email address
          title: email
          type: string
        firstName:
          description: DEPRECATED. The fields 'firstName' and 'lastName' are replaced
            by the field 'name'
          title: firstName
          type: string
        joinLink:
          description: The co-organizer's join link
          title: joinLink
          type: string
        lastName:
          description: DEPRECATED. The fields 'firstName' and 'lastName' are replaced
            by the field 'name'
          title: lastName
          type: string
        name:
          description: The panelist's name
          title: name
          type: string
        panelistId:
          description: The panelist's ID
          format: int64
          title: panelistId
          type: integer
      required:
      - email
      - firstName
      - joinLink
      - lastName
      - name
      - panelistId
      title: Panelist
      type: object
    PanelistReqCreate:
      description: Describes a single panelist
      example:
        name: name
        email: email
      properties:
        email:
          description: The panelist's email address
          title: email
          type: string
        name:
          description: The panelist's name
          title: name
          type: string
      required:
      - email
      - name
      title: PanelistReqCreate
      type: object
    Poll:
      description: A poll or survey launched by an organizer during or after a webinar
        session; includes the responses given to it by the attendees.
      example:
        question: question
        responses:
        - percentage: 60.274563
          text: text
        - percentage: 60.274563
          text: text
        numberOfResponses: 0
      properties:
        numberOfResponses:
          description: The total number of responses received for this poll or survey
          format: int32
          title: numberOfResponses
          type: integer
        question:
          description: The poll or survey question asked by the webinar organizer
          title: question
          type: string
        responses:
          description: The responses given by the attendees to the poll or survey
          items:
            $ref: '#/components/schemas/PollResponse'
          title: responses
          type: array
      required:
      - numberOfResponses
      - question
      - responses
      title: Poll
      type: object
    PollAnswer:
      description: Describes the answer given by a webinar attendee to a poll or survey
        launched by an organizer.
      example:
        answer: answer
        question: question
      properties:
        answer:
          description: The answer given to the poll or survey question
          title: answer
          type: string
        question:
          description: The poll or survey question
          title: question
          type: string
      required:
      - answer
      - question
      title: PollAnswer
      type: object
    PollResponse:
      description: One of the potential responses/options to a poll or survey launched
        by an organizer during a webinar session.
      example:
        percentage: 60.274563
        text: text
      properties:
        percentage:
          description: The percentage of responses that favored this particular option
          format: float
          maximum: 100
          minimum: 0
          title: percentage
          type: number
        text:
          description: The text of the response/option to a poll or survey
          title: text
          type: string
      required:
      - percentage
      - text
      title: PollResponse
      type: object
    PollsAndSurveysStatistics:
      description: Details on the polls and surveys for a webinar session.
      example:
        surveyCount: 2.027123
        questionsAsked: 3
        pollCount: 9
        percentagePollsCompleted: 2.302136
        percentageSurveysCompleted: 7.0614014
      properties:
        percentagePollsCompleted:
          description: The percentage of polls completed by the attendees
          format: float
          title: percentagePollsCompleted
          type: number
        percentageSurveysCompleted:
          description: The percentage of surveys completed by the attendees
          format: float
          title: percentageSurveysCompleted
          type: number
        pollCount:
          description: The number of polls launched at a webinar session
          format: int32
          title: pollCount
          type: integer
        questionsAsked:
          description: The number of questions asked at a webinar session
          format: int32
          title: questionsAsked
          type: integer
        surveyCount:
          description: The percentage of surveys launched at a webinar session
          format: float
          title: surveyCount
          type: number
      required:
      - percentagePollsCompleted
      - percentageSurveysCompleted
      - pollCount
      - questionsAsked
      - surveyCount
      title: PollsAndSurveysStatistics
      type: object
    PrivateInfo:
      description: Phone numbers for an own conference call service.
      example:
        panelist: panelist
        attendee: attendee
        organizer: organizer
      properties:
        attendee:
          description: Text for the panelist when using an own conference call service
          title: attendee
          type: string
        organizer:
          description: Text for the organizer when using an own conference call service
          title: organizer
          type: string
        panelist:
          description: Text for the panelist when using an own conference call service
          title: panelist
          type: string
      required:
      - attendee
      title: PrivateInfo
      type: object
    PrivateInfoUpdate:
      description: Defines the audio data for an own conferencing system
      example:
        panelist: panelist
        attendee: attendee
        organizer: organizer
      properties:
        attendee:
          description: Attendee phone number for own conference call system
          title: attendee
          type: string
        organizer:
          description: Organizer phone number for own conference call system
          title: organizer
          type: string
        panelist:
          description: Panelist phone number for own conference call system
          title: panelist
          type: string
      required:
      - attendee
      title: PrivateInfoUpdate
      type: object
    PstnInfoUpdate:
      description: Defines the audio/conferencing settings for the specified webinar.
        It required to pass 'tollFreeCountries' or 'tollCountries' or both.
      example:
        tollFreeCountries:
        - AE
        - AE
        tollCountries:
        - AT
        - AT
      properties:
        tollCountries:
          description: "Defines in which countries toll PSTN numbers are available.\
            \ Possible values are AT, AU, BE, CA, CH, DE, DK, ES, FI, FR, GB, IE,\
            \ IT, NL, NO, NZ, SE, US"
          items:
            $ref: '#/components/schemas/TollCountries'
          title: tollCountries
          type: array
        tollFreeCountries:
          description: "Defines in which countries toll free PSTN numbers are available.\
            \ Possible values are AE, AR, AT, AU, BE, BG, BH, BR, BY, CA, CH, CL,\
            \ CN, CO, CZ, DE, DK, ES, FI, FR, GB, GR, HK, HU, ID, IE, IL, IN, IS,\
            \ IT, JP, KR, LU, MX, MY, NL, NO, NZ, PA, PE, PH, PL, PT, RO, RU, SA,\
            \ SE, SG, TH, TR, TW, UA, US, UY, VN, ZA"
          items:
            $ref: '#/components/schemas/TollFreeCountries'
          title: tollFreeCountries
          type: array
      title: PstnInfoUpdate
      type: object
    Registrant:
      description: Describes a webinar registrant
      example:
        firstName: firstName
        lastName: lastName
        registrationDate: 2000-01-23T04:56:07.000+00:00
        timeZone: timeZone
        joinUrl: joinUrl
        registrantKey: 0
        email: email
        status: APPROVED
      properties:
        email:
          description: The registrant's email address
          title: email
          type: string
        firstName:
          description: The registrant's first name
          title: firstName
          type: string
        joinUrl:
          description: The URL the registrant will use to join the webinar
          title: joinUrl
          type: string
        lastName:
          description: The registrant's last name
          title: lastName
          type: string
        registrantKey:
          description: The registrant's key
          format: int64
          title: registrantKey
          type: integer
        registrationDate:
          description: The registration date and time
          format: date-time
          title: registrationDate
          type: string
        status:
          description: The registration status
          enum:
          - APPROVED
          - DENIED
          - WAITING
          title: status
          type: string
        timeZone:
          description: The time zone where the webinar will take place
          title: timeZone
          type: string
      required:
      - email
      - firstName
      - joinUrl
      - lastName
      - registrantKey
      - registrationDate
      - status
      - timeZone
      title: Registrant
      type: object
    RegistrantCreated:
      description: Describes a newly created webinar registrant.
      example:
        joinUrl: joinUrl
        registrantKey: 0
      properties:
        joinUrl:
          description: The URL the registrant will use to join the webinar.
          title: joinUrl
          type: string
        registrantKey:
          description: The registrant's key
          format: int64
          title: registrantKey
          type: integer
      required:
      - joinUrl
      - registrantKey
      title: RegistrantCreated
      type: object
    RegistrantDetailed:
      description: Detailed description of a webinar registrant with all registration
        fields.
      example:
        country: country
        lastName: lastName
        zipCode: zipCode
        purchasingRole: purchasingRole
        city: city
        jobTitle: jobTitle
        industry: industry
        questionsAndComments: questionsAndComments
        source: source
        type: REGULAR
        employeeCount: employeeCount
        registrationDate: 2000-01-23T04:56:07.000+00:00
        state: state
        joinUrl: joinUrl
        registrantKey: 0
        email: email
        address: address
        implementationTimeFrame: implementationTimeFrame
        timeZone: timeZone
        numberOfEmployees: numberOfEmployees
        firstName: firstName
        unsubscribed: true
        phone: phone
        organization: organization
        purchasingTimeFrame: purchasingTimeFrame
        responses:
        - answer: answer
          question: question
        - answer: answer
          question: question
        status: APPROVED
      properties:
        address:
          description: The registrant's address
          title: address
          type: string
        city:
          description: The registrant's city
          title: city
          type: string
        country:
          description: The registrant's country
          title: country
          type: string
        email:
          description: The registrant's email address
          title: email
          type: string
        employeeCount:
          description: The size in employees of the registrant's organization
          title: employeeCount
          type: string
        firstName:
          description: The registrant's first name
          title: firstName
          type: string
        implementationTimeFrame:
          description: The time frame within which the product will be purchased
          title: implementationTimeFrame
          type: string
        industry:
          description: The type of industry the registrant's organization belongs
            to
          title: industry
          type: string
        jobTitle:
          description: The registrant's job title
          title: jobTitle
          type: string
        joinUrl:
          description: The URL the registrant will use to join the webinar
          title: joinUrl
          type: string
        lastName:
          description: The registrant's last name
          title: lastName
          type: string
        numberOfEmployees:
          description: The size in employees of the registrant's organization
          title: numberOfEmployees
          type: string
        organization:
          description: The registrant's organization
          title: organization
          type: string
        phone:
          description: The registrant's phone
          title: phone
          type: string
        purchasingRole:
          description: The registrant's role in purchasing the product
          title: purchasingRole
          type: string
        purchasingTimeFrame:
          description: The time frame within which the product will be purchased
          title: purchasingTimeFrame
          type: string
        questionsAndComments:
          description: Any questions or comments the registrant made at the time of
            registration
          title: questionsAndComments
          type: string
        registrantKey:
          description: The registrant's key
          format: int64
          title: registrantKey
          type: integer
        registrationDate:
          description: The registration date and time
          format: date-time
          title: registrationDate
          type: string
        responses:
          description: Responses to custom questions
          items:
            $ref: '#/components/schemas/CustomAnswers'
          title: responses
          type: array
        source:
          description: The source that led to the registration. This can be any string
            like 'Newsletter 123' or 'Marketing campaign ABC'
          title: source
          type: string
        state:
          description: The registrant's state (US only)
          title: state
          type: string
        status:
          description: The registration status
          enum:
          - APPROVED
          - DENIED
          - WAITING
          title: status
          type: string
        timeZone:
          description: The time zone where the webinar will take place
          title: timeZone
          type: string
        type:
          description: The type is REGULAR for 'One session' and 'Sequence' webinars.
            For webinar series this parameter is not passed
          enum:
          - REGULAR
          title: type
          type: string
        unsubscribed:
          description: Indicates whether the registrant opted-out from receiving other
            emails from this webinar's organizer
          title: unsubscribed
          type: boolean
        zipCode:
          description: The registrant's zip (post) code
          title: zipCode
          type: string
      required:
      - email
      - firstName
      - joinUrl
      - lastName
      - registrantKey
      - registrationDate
      - status
      - timeZone
      title: RegistrantDetailed
      type: object
    RegistrantFields:
      description: Detailed description of a all fields to register a registrant for
        a webinar.
      example:
        country: country
        lastName: lastName
        zipCode: zipCode
        address: address
        purchasingRole: purchasingRole
        city: city
        jobTitle: jobTitle
        industry: industry
        questionsAndComments: questionsAndComments
        source: source
        numberOfEmployees: numberOfEmployees
        firstName: firstName
        phone: phone
        organization: organization
        purchasingTimeFrame: purchasingTimeFrame
        responses:
        - questionKey: 6
          answerKey: 0
          responseText: responseText
        - questionKey: 6
          answerKey: 0
          responseText: responseText
        state: state
        email: email
      properties:
        address:
          description: The registrant's address
          title: address
          type: string
        city:
          description: The registrant's city
          title: city
          type: string
        country:
          description: The registrant's country
          title: country
          type: string
        email:
          description: The registrant's email address
          title: email
          type: string
        firstName:
          description: The registrant's first name
          title: firstName
          type: string
        industry:
          description: The type of industry the registrant's organization belongs
            to
          title: industry
          type: string
        jobTitle:
          description: The registrant's job title
          title: jobTitle
          type: string
        lastName:
          description: The registrant's last name
          title: lastName
          type: string
        numberOfEmployees:
          description: The size in employees of the registrant's organization
          title: numberOfEmployees
          type: string
        organization:
          description: The registrant's organization
          title: organization
          type: string
        phone:
          description: The registrant's phone
          title: phone
          type: string
        purchasingRole:
          description: The registrant's role in purchasing the product
          title: purchasingRole
          type: string
        purchasingTimeFrame:
          description: The time frame within which the product will be purchased
          title: purchasingTimeFrame
          type: string
        questionsAndComments:
          description: Any questions or comments the registrant made at the time of
            registration
          title: questionsAndComments
          type: string
        responses:
          description: Set the answers of all questions
          items:
            $ref: '#/components/schemas/RegistrantQAResponse'
          title: responses
          type: array
        source:
          description: The source that led to the registration. This can be any string
            like 'Newsletter 123' or 'Marketing campaign ABC'
          title: source
          type: string
        state:
          description: The registrant's state (US only)
          title: state
          type: string
        zipCode:
          description: The registrant's zip (post) code
          title: zipCode
          type: string
      required:
      - email
      - firstName
      - lastName
      title: RegistrantFields
      type: object
    RegistrantQAResponse:
      description: "Describes a completed registration question for a webinar registrant.\
        \ If you use 'Multiple choice' questions the response contains the numeric\
        \ answerKey, otherwise the answer text. Example:<br>{<br>  \"firstName\":\
        \ \"First\",<br>  \"lastName\": \"Last\",<br>  \"email\": \"First.Last@example.com\"\
        ,<br>  \"responses\": [{<br>      \"questionKey\": 17023549,<br>      \"responseText\"\
        : \"This is a short answer\"},{<br>      \"questionKey\": 17023550,<br>  \
        \    \"answerKey\": 17023553}  ]<br>}"
      example:
        questionKey: 6
        answerKey: 0
        responseText: responseText
      properties:
        answerKey:
          description: The numeric key of the answer to a multiple-choice question.
          format: int64
          title: answerKey
          type: integer
        questionKey:
          description: The unique key of the question
          format: int64
          title: questionKey
          type: integer
        responseText:
          description: Answer of the question.
          title: responseText
          type: string
      required:
      - questionKey
      title: RegistrantQAResponse
      type: object
    RegistrationAnswer:
      description: Describes an answer to a multiple choice custom registration field.
      example:
        answerKey: 6
        answer: answer
      properties:
        answer:
          description: The answer value
          title: answer
          type: string
        answerKey:
          description: The answer key
          format: int64
          title: answerKey
          type: integer
      required:
      - answer
      - answerKey
      title: RegistrationAnswer
      type: object
    RegistrationField:
      description: Describes a field for a webinar registration.
      example:
        field: field
        answers:
        - answers
        - answers
        maxSize: 0
        required: true
      properties:
        answers:
          description: List of choices for a multiple choice registration field
          items:
            type: string
          title: answers
          type: array
        field:
          description: The name of the registration field
          title: field
          type: string
        maxSize:
          description: The character size of the custom registration field (max 128)
          format: int32
          title: maxSize
          type: integer
        required:
          description: Indicates whether the custom registration field is compulsory
          title: required
          type: boolean
      required:
      - field
      - maxSize
      - required
      title: RegistrationField
      type: object
    RegistrationFields:
      description: The fields to be completed on the webinar registration form.
      example:
        questions:
        - questionKey: 5
          question: question
          answers:
          - answerKey: 6
            answer: answer
          - answerKey: 6
            answer: answer
          maxSize: 1
          type: multipleChoice
          required: true
        - questionKey: 5
          question: question
          answers:
          - answerKey: 6
            answer: answer
          - answerKey: 6
            answer: answer
          maxSize: 1
          type: multipleChoice
          required: true
        fields:
        - field: field
          answers:
          - answers
          - answers
          maxSize: 0
          required: true
        - field: field
          answers:
          - answers
          - answers
          maxSize: 0
          required: true
      properties:
        fields:
          description: The default fields the organizer has selected for the webinar
            registration form
          items:
            $ref: '#/components/schemas/RegistrationField'
          title: fields
          type: array
        questions:
          description: Custom fields created by the organizer for the webinar registration
            form
          items:
            $ref: '#/components/schemas/RegistrationQuestion'
          title: questions
          type: array
      required:
      - fields
      - questions
      title: RegistrationFields
      type: object
    RegistrationQuestion:
      description: Describes a custom field for a webinar registration.
      example:
        questionKey: 5
        question: question
        answers:
        - answerKey: 6
          answer: answer
        - answerKey: 6
          answer: answer
        maxSize: 1
        type: multipleChoice
        required: true
      properties:
        answers:
          description: The answers to a multiple choice custom registration field
          items:
            $ref: '#/components/schemas/RegistrationAnswer'
          title: answers
          type: array
        maxSize:
          description: The character size of the custom registration field (max 1000)
          format: int32
          title: maxSize
          type: integer
        question:
          description: The value (text) of the custom registration field
          title: question
          type: string
        questionKey:
          description: The unique key of the custom registration field
          format: int64
          title: questionKey
          type: integer
        required:
          description: Indicates whether the custom registration field is compulsory
          title: required
          type: boolean
        type:
          description: Indicates whether the custom registration field requires a
            single short answer or whether it is a multiple choice question
          enum:
          - multipleChoice
          - shortAnswer
          title: type
          type: string
      required:
      - maxSize
      - question
      - questionKey
      - required
      - type
      title: RegistrationQuestion
      type: object
    Session:
      description: Describes a completed webinar session.
      example:
        webinarKey: 1
        registrantsAttended: 0
        sessionKey: 6
        webinarID: webinarID
        startTime: 2000-01-23T04:56:07.000+00:00
        endTime: 2000-01-23T04:56:07.000+00:00
      properties:
        endTime:
          description: The ending time of the webinar session
          format: date-time
          title: endTime
          type: string
        registrantsAttended:
          description: The number of registrants who attended the webinar session
          format: int32
          title: registrantsAttended
          type: integer
        sessionKey:
          description: The unique key of the webinar session
          format: int64
          title: sessionKey
          type: integer
        startTime:
          description: The starting time of the webinar session
          format: date-time
          title: startTime
          type: string
        webinarID:
          description: The 9-digit webinar ID
          title: webinarID
          type: string
        webinarKey:
          description: The unique key of the webinar
          format: int64
          title: webinarKey
          type: integer
      required:
      - endTime
      - registrantsAttended
      - sessionKey
      - startTime
      - webinarID
      - webinarKey
      title: Session
      type: object
    SessionPerformance:
      description: Describes performance details for webinar sessions
      example:
        pollsAndSurveys:
          surveyCount: 2.027123
          questionsAsked: 3
          pollCount: 9
          percentagePollsCompleted: 2.302136
          percentageSurveysCompleted: 7.0614014
        attendance:
          percentageAttendance: 5.962134
          registrantCount: 5
          averageInterestRating: 1.4658129
          averageAttendanceTimeSeconds: 0.8008282
          averageAttentiveness: 6.0274563
      properties:
        attendance:
          $ref: '#/components/schemas/AttendanceStatistics'
        pollsAndSurveys:
          $ref: '#/components/schemas/PollsAndSurveysStatistics'
      required:
      - attendance
      - pollsAndSurveys
      title: SessionPerformance
      type: object
    TollCountries:
      description: Defines in which countries toll PSTN numbers are available.
      enum:
      - AT
      - AU
      - BE
      - CA
      - CH
      - DE
      - DK
      - ES
      - FI
      - FR
      - GB
      - IE
      - IT
      - NL
      - "false"
      - NZ
      - SE
      - US
      title: TollCountries
      type: string
    TollFreeCountries:
      description: Countries in which toll free PSTN numbers are available.
      enum:
      - AE
      - AR
      - AT
      - AU
      - BE
      - BG
      - BH
      - BR
      - BY
      - CA
      - CH
      - CL
      - CN
      - CO
      - CZ
      - DE
      - DK
      - ES
      - FI
      - FR
      - GB
      - GR
      - HK
      - HU
      - ID
      - IE
      - IL
      - IN
      - IS
      - IT
      - JP
      - KR
      - LU
      - MX
      - MY
      - NL
      - "false"
      - NZ
      - PA
      - PE
      - PH
      - PL
      - PT
      - RO
      - RU
      - SA
      - SE
      - SG
      - TH
      - TR
      - TW
      - UA
      - US
      - UY
      - VN
      - ZA
      title: TollFreeCountries
      type: string
    UpcomingWebinar:
      description: Describes a scheduled webinar
      example:
        webinarKey: 6
        times:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        webinarID: webinarID
        subject: subject
        description: description
        timeZone: timeZone
        inSession: true
        organizerKey: 0
        registrationUrl: registrationUrl
      properties:
        description:
          description: A short description of the webinar
          title: description
          type: string
        inSession:
          description: Indicates whether there is a webinar session currently in progress
          title: inSession
          type: boolean
        organizerKey:
          description: The key of the webinar organizer
          format: int64
          title: organizerKey
          type: integer
        registrationUrl:
          description: The URL the webinar invitees can use to register
          title: registrationUrl
          type: string
        subject:
          description: The webinar subject
          title: subject
          type: string
        timeZone:
          description: The timezone where the webinar is taking place
          title: timeZone
          type: string
        times:
          description: Array with startTime and endTime for the webinar sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
        webinarID:
          description: The 9-digit webinar ID
          title: webinarID
          type: string
        webinarKey:
          description: The unique key of the webinar
          format: int64
          title: webinarKey
          type: integer
      required:
      - description
      - inSession
      - organizerKey
      - registrationUrl
      - subject
      - timeZone
      - times
      - webinarID
      - webinarKey
      title: UpcomingWebinar
      type: object
    Webinar:
      description: Describes a scheduled webinar
      example:
        webinarKey: 1
        numberOfRegistrants: 0
        times:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        webinarID: webinarID
        subject: subject
        description: description
        timeZone: timeZone
        inSession: true
        organizerKey: 6
        registrationUrl: registrationUrl
      properties:
        description:
          description: A short description of the webinar
          title: description
          type: string
        inSession:
          description: Indicates whether there is a webinar session currently in progress
          title: inSession
          type: boolean
        numberOfRegistrants:
          description: The number of registrants at the webinar
          format: int32
          title: numberOfRegistrants
          type: integer
        organizerKey:
          description: The key of the webinar organizer
          format: int64
          title: organizerKey
          type: integer
        registrationUrl:
          description: The URL the webinar invitees can use to register
          title: registrationUrl
          type: string
        subject:
          description: The webinar subject
          title: subject
          type: string
        timeZone:
          description: The timezone where the webinar is taking place
          title: timeZone
          type: string
        times:
          description: Array with startTime and endTime for the webinar sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
        webinarID:
          description: The 9-digit webinar ID
          title: webinarID
          type: string
        webinarKey:
          description: The unique key of the webinar
          format: int64
          title: webinarKey
          type: integer
      required:
      - description
      - inSession
      - numberOfRegistrants
      - organizerKey
      - registrationUrl
      - subject
      - timeZone
      - times
      - webinarID
      - webinarKey
      title: Webinar
      type: object
    WebinarByKey:
      description: Describes a completed webinar
      example:
        numberOfRegistrationLinkClicks: 1
        webinarKey: 5
        numberOfRegistrants: 6
        times:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        webinarID: webinarID
        subject: subject
        description: description
        timeZone: timeZone
        inSession: true
        organizerKey: 5
        numberOfOpenedInvitations: 0
        registrationUrl: registrationUrl
      properties:
        description:
          description: A short description of the webinar
          title: description
          type: string
        inSession:
          description: Indicates whether there is a webinar session currently in progress
          title: inSession
          type: boolean
        numberOfOpenedInvitations:
          description: This field is obsolete. It is always set to 0
          format: int32
          title: numberOfOpenedInvitations
          type: integer
        numberOfRegistrants:
          description: The number of registrants at the webinar
          format: int32
          title: numberOfRegistrants
          type: integer
        numberOfRegistrationLinkClicks:
          description: This field is obsolete. It is always set to 0
          format: int32
          title: numberOfRegistrationLinkClicks
          type: integer
        organizerKey:
          description: The key of the webinar organizer
          format: int64
          title: organizerKey
          type: integer
        registrationUrl:
          description: The URL the webinar invitees can use to register
          title: registrationUrl
          type: string
        subject:
          description: The webinar subject.
          title: subject
          type: string
        timeZone:
          description: The timezone where the webinar is taking place
          title: timeZone
          type: string
        times:
          description: Array with startTime and endTime for the webinar sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
        webinarID:
          description: The 9-digit webinar ID
          title: webinarID
          type: string
        webinarKey:
          description: The unique key of the webinar
          format: int64
          title: webinarKey
          type: integer
      required:
      - description
      - inSession
      - numberOfOpenedInvitations
      - numberOfRegistrants
      - numberOfRegistrationLinkClicks
      - organizerKey
      - registrationUrl
      - subject
      - timeZone
      - times
      - webinarID
      - webinarKey
      title: WebinarByKey
      type: object
    WebinarReqCreate:
      description: Describes the details used to create a new single session webinar.
      example:
        times:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        isPasswordProtected: false
        subject: subject
        description: description
        timeZone: timeZone
        type: single_session
      properties:
        description:
          description: A short description of the webinar (2048 characters maximum)
          title: description
          type: string
        isPasswordProtected:
          default: false
          description: A boolean flag indicating if the webinar is password protected
            or not.
          title: isPasswordProtected
          type: boolean
        subject:
          description: The name/subject of the webinar (128 characters maximum)
          title: subject
          type: string
        timeZone:
          description: "The time zone where the webinar is taking place (must be a\
            \ valid time zone ID, see https://goto-developer.logmein.com/time-zones).\
            \ If this parameter is not passed, the timezone of the organizer's profile\
            \ will be used"
          title: timeZone
          type: string
        times:
          description: "Array with startTime and endTime for webinar. Since this call\
            \ creates single session webinars, the array can only contain a single\
            \ pair of startTime and endTime"
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
        type:
          default: single_session
          description: "Specifies the webinar type. The default type value is \"single_session\"\
            , which is used to create a single webinar session. The possible values\
            \ are \"single_session\", \"series\", \"sequence\". If type is set to\
            \ \"single_session\", a single webinar session is created. If type is\
            \ set to \"series\", a webinar series is created. In this case 2 or more\
            \ timeframes must be specified for each webinar. Example: \"times\": [{\"\
            startTime\": \"...\", \"endTime\": \"...\"},{\"startTime\": \"...\", \"\
            endTime\": \"...\"},{\"startTime\": \"...\", \"endTime\": \"...\"}. If\
            \ type is set to \"sequence\" a sequence of webinars is created. The times\
            \ object in the body must be replaced by the \"recurrenceStart\" object.\
            \ Example: \"recurrenceStart\": {\"startTime\":\"2012-06-12T16:00:00Z\"\
            , \"endTime\": \"2012-06-12T17:00:00Z\" }.  The \"recurrenceEnd\" and\
            \ \"recurrencePattern\" body parameter must be specified. Example: , \"\
            recurrenceEnd\": \"2012-07-10\", \"recurrencePattern\": \"daily\"."
          title: type
          type: string
      required:
      - subject
      - times
      title: WebinarReqCreate
      type: object
    WebinarReqUpdate:
      description: Describes the details of the webinar
      example:
        times:
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        - startTime: 2000-01-23T04:56:07.000+00:00
          endTime: 2000-01-23T04:56:07.000+00:00
        subject: subject
        description: description
        timeZone: timeZone
        locale: en_US
      properties:
        description:
          description: A description of the webinar (2048 characters maximum)
          title: description
          type: string
        locale:
          description: The webinar language
          enum:
          - en_US
          - de_DE
          - es_ES
          - fr_FR
          - it_IT
          - zh_CN
          title: locale
          type: string
        subject:
          description: The name/subject of the webinar (128 characters maximum)
          title: subject
          type: string
        timeZone:
          description: "The time zone where the webinar is taking place (must be a\
            \ valid time zone ID, see https://goto-developer.logmein.com/time-zones).\
            \ If this parameter is not passed, the timezone of the organizer's profile\
            \ will be used"
          title: timeZone
          type: string
        times:
          description: Array with start and end time(s) for webinar
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
      title: WebinarReqUpdate
      type: object
    firstPage:
      properties:
        href:
          description: The first page link
          type: string
      required:
      - href
      type: object
    lastPage:
      properties:
        href:
          description: The last page link
          type: string
      required:
      - href
      type: object
    page:
      example:
        number: 0
        size: 6
        totalPages: 5
        totalElements: 1
      properties:
        number:
          description: The current page number. The first page is 0
          format: int32
          title: number
          type: integer
        size:
          description: The page size
          format: int32
          title: size
          type: integer
        totalElements:
          description: The total elements
          format: int32
          title: totalElements
          type: integer
        totalPages:
          description: The pages count
          format: int32
          title: totalPages
          type: integer
      required:
      - number
      - size
      - totalElements
      - totalPages
      title: page
      type: object
    selfPage:
      properties:
        href:
          description: The current page link
          type: string
      required:
      - href
      type: object
x-original-swagger-version: "2.0"
