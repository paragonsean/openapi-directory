/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPollResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPollResponse::OAIPollResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPollResponse::OAIPollResponse() {
    this->initializeModel();
}

OAIPollResponse::~OAIPollResponse() {}

void OAIPollResponse::initializeModel() {

    m_percentage_isSet = false;
    m_percentage_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIPollResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPollResponse::fromJsonObject(QJsonObject json) {

    m_percentage_isValid = ::OpenAPI::fromJsonValue(m_percentage, json[QString("percentage")]);
    m_percentage_isSet = !json[QString("percentage")].isNull() && m_percentage_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIPollResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPollResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_percentage_isSet) {
        obj.insert(QString("percentage"), ::OpenAPI::toJsonValue(m_percentage));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

float OAIPollResponse::getPercentage() const {
    return m_percentage;
}
void OAIPollResponse::setPercentage(const float &percentage) {
    m_percentage = percentage;
    m_percentage_isSet = true;
}

bool OAIPollResponse::is_percentage_Set() const{
    return m_percentage_isSet;
}

bool OAIPollResponse::is_percentage_Valid() const{
    return m_percentage_isValid;
}

QString OAIPollResponse::getText() const {
    return m_text;
}
void OAIPollResponse::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIPollResponse::is_text_Set() const{
    return m_text_isSet;
}

bool OAIPollResponse::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIPollResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPollResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_percentage_isValid && m_text_isValid && true;
}

} // namespace OpenAPI
