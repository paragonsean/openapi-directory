/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPollsAndSurveysStatistics.h
 *
 * Details on the polls and surveys for a webinar session.
 */

#ifndef OAIPollsAndSurveysStatistics_H
#define OAIPollsAndSurveysStatistics_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPollsAndSurveysStatistics : public OAIObject {
public:
    OAIPollsAndSurveysStatistics();
    OAIPollsAndSurveysStatistics(QString json);
    ~OAIPollsAndSurveysStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getPercentagePollsCompleted() const;
    void setPercentagePollsCompleted(const float &percentage_polls_completed);
    bool is_percentage_polls_completed_Set() const;
    bool is_percentage_polls_completed_Valid() const;

    float getPercentageSurveysCompleted() const;
    void setPercentageSurveysCompleted(const float &percentage_surveys_completed);
    bool is_percentage_surveys_completed_Set() const;
    bool is_percentage_surveys_completed_Valid() const;

    qint32 getPollCount() const;
    void setPollCount(const qint32 &poll_count);
    bool is_poll_count_Set() const;
    bool is_poll_count_Valid() const;

    qint32 getQuestionsAsked() const;
    void setQuestionsAsked(const qint32 &questions_asked);
    bool is_questions_asked_Set() const;
    bool is_questions_asked_Valid() const;

    float getSurveyCount() const;
    void setSurveyCount(const float &survey_count);
    bool is_survey_count_Set() const;
    bool is_survey_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_percentage_polls_completed;
    bool m_percentage_polls_completed_isSet;
    bool m_percentage_polls_completed_isValid;

    float m_percentage_surveys_completed;
    bool m_percentage_surveys_completed_isSet;
    bool m_percentage_surveys_completed_isValid;

    qint32 m_poll_count;
    bool m_poll_count_isSet;
    bool m_poll_count_isValid;

    qint32 m_questions_asked;
    bool m_questions_asked_isSet;
    bool m_questions_asked_isValid;

    float m_survey_count;
    bool m_survey_count_isSet;
    bool m_survey_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPollsAndSurveysStatistics)

#endif // OAIPollsAndSurveysStatistics_H
