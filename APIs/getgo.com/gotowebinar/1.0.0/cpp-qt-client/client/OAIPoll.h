/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPoll.h
 *
 * A poll or survey launched by an organizer during or after a webinar session; includes the responses given to it by the attendees.
 */

#ifndef OAIPoll_H
#define OAIPoll_H

#include <QJsonObject>

#include "OAIPollResponse.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPollResponse;

class OAIPoll : public OAIObject {
public:
    OAIPoll();
    OAIPoll(QString json);
    ~OAIPoll() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getNumberOfResponses() const;
    void setNumberOfResponses(const qint32 &number_of_responses);
    bool is_number_of_responses_Set() const;
    bool is_number_of_responses_Valid() const;

    QString getQuestion() const;
    void setQuestion(const QString &question);
    bool is_question_Set() const;
    bool is_question_Valid() const;

    QList<OAIPollResponse> getResponses() const;
    void setResponses(const QList<OAIPollResponse> &responses);
    bool is_responses_Set() const;
    bool is_responses_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_number_of_responses;
    bool m_number_of_responses_isSet;
    bool m_number_of_responses_isValid;

    QString m_question;
    bool m_question_isSet;
    bool m_question_isValid;

    QList<OAIPollResponse> m_responses;
    bool m_responses_isSet;
    bool m_responses_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPoll)

#endif // OAIPoll_H
