/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegistrantQAResponse.h
 *
 * Describes a completed registration question for a webinar registrant. If you use &#39;Multiple choice&#39; questions the response contains the numeric answerKey, otherwise the answer text. Example:&lt;br&gt;{&lt;br&gt;  \&quot;firstName\&quot;: \&quot;First\&quot;,&lt;br&gt;  \&quot;lastName\&quot;: \&quot;Last\&quot;,&lt;br&gt;  \&quot;email\&quot;: \&quot;First.Last@example.com\&quot;,&lt;br&gt;  \&quot;responses\&quot;: [{&lt;br&gt;      \&quot;questionKey\&quot;: 17023549,&lt;br&gt;      \&quot;responseText\&quot;: \&quot;This is a short answer\&quot;},{&lt;br&gt;      \&quot;questionKey\&quot;: 17023550,&lt;br&gt;      \&quot;answerKey\&quot;: 17023553}  ]&lt;br&gt;}
 */

#ifndef OAIRegistrantQAResponse_H
#define OAIRegistrantQAResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRegistrantQAResponse : public OAIObject {
public:
    OAIRegistrantQAResponse();
    OAIRegistrantQAResponse(QString json);
    ~OAIRegistrantQAResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAnswerKey() const;
    void setAnswerKey(const qint64 &answer_key);
    bool is_answer_key_Set() const;
    bool is_answer_key_Valid() const;

    qint64 getQuestionKey() const;
    void setQuestionKey(const qint64 &question_key);
    bool is_question_key_Set() const;
    bool is_question_key_Valid() const;

    QString getResponseText() const;
    void setResponseText(const QString &response_text);
    bool is_response_text_Set() const;
    bool is_response_text_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_answer_key;
    bool m_answer_key_isSet;
    bool m_answer_key_isValid;

    qint64 m_question_key;
    bool m_question_key_isSet;
    bool m_question_key_isValid;

    QString m_response_text;
    bool m_response_text_isSet;
    bool m_response_text_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegistrantQAResponse)

#endif // OAIRegistrantQAResponse_H
