/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPanelist.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPanelist::OAIPanelist(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPanelist::OAIPanelist() {
    this->initializeModel();
}

OAIPanelist::~OAIPanelist() {}

void OAIPanelist::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_join_link_isSet = false;
    m_join_link_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_panelist_id_isSet = false;
    m_panelist_id_isValid = false;
}

void OAIPanelist::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPanelist::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_join_link_isValid = ::OpenAPI::fromJsonValue(m_join_link, json[QString("joinLink")]);
    m_join_link_isSet = !json[QString("joinLink")].isNull() && m_join_link_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_panelist_id_isValid = ::OpenAPI::fromJsonValue(m_panelist_id, json[QString("panelistId")]);
    m_panelist_id_isSet = !json[QString("panelistId")].isNull() && m_panelist_id_isValid;
}

QString OAIPanelist::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPanelist::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_join_link_isSet) {
        obj.insert(QString("joinLink"), ::OpenAPI::toJsonValue(m_join_link));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_panelist_id_isSet) {
        obj.insert(QString("panelistId"), ::OpenAPI::toJsonValue(m_panelist_id));
    }
    return obj;
}

QString OAIPanelist::getEmail() const {
    return m_email;
}
void OAIPanelist::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIPanelist::is_email_Set() const{
    return m_email_isSet;
}

bool OAIPanelist::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIPanelist::getFirstName() const {
    return m_first_name;
}
void OAIPanelist::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIPanelist::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIPanelist::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIPanelist::getJoinLink() const {
    return m_join_link;
}
void OAIPanelist::setJoinLink(const QString &join_link) {
    m_join_link = join_link;
    m_join_link_isSet = true;
}

bool OAIPanelist::is_join_link_Set() const{
    return m_join_link_isSet;
}

bool OAIPanelist::is_join_link_Valid() const{
    return m_join_link_isValid;
}

QString OAIPanelist::getLastName() const {
    return m_last_name;
}
void OAIPanelist::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIPanelist::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIPanelist::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIPanelist::getName() const {
    return m_name;
}
void OAIPanelist::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIPanelist::is_name_Set() const{
    return m_name_isSet;
}

bool OAIPanelist::is_name_Valid() const{
    return m_name_isValid;
}

qint64 OAIPanelist::getPanelistId() const {
    return m_panelist_id;
}
void OAIPanelist::setPanelistId(const qint64 &panelist_id) {
    m_panelist_id = panelist_id;
    m_panelist_id_isSet = true;
}

bool OAIPanelist::is_panelist_id_Set() const{
    return m_panelist_id_isSet;
}

bool OAIPanelist::is_panelist_id_Valid() const{
    return m_panelist_id_isValid;
}

bool OAIPanelist::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_join_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_panelist_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPanelist::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_first_name_isValid && m_join_link_isValid && m_last_name_isValid && m_name_isValid && m_panelist_id_isValid && true;
}

} // namespace OpenAPI
