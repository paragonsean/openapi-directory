/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRegistrationQuestion.h
 *
 * Describes a custom field for a webinar registration.
 */

#ifndef OAIRegistrationQuestion_H
#define OAIRegistrationQuestion_H

#include <QJsonObject>

#include "OAIRegistrationAnswer.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIRegistrationAnswer;

class OAIRegistrationQuestion : public OAIObject {
public:
    OAIRegistrationQuestion();
    OAIRegistrationQuestion(QString json);
    ~OAIRegistrationQuestion() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIRegistrationAnswer> getAnswers() const;
    void setAnswers(const QList<OAIRegistrationAnswer> &answers);
    bool is_answers_Set() const;
    bool is_answers_Valid() const;

    qint32 getMaxSize() const;
    void setMaxSize(const qint32 &max_size);
    bool is_max_size_Set() const;
    bool is_max_size_Valid() const;

    QString getQuestion() const;
    void setQuestion(const QString &question);
    bool is_question_Set() const;
    bool is_question_Valid() const;

    qint64 getQuestionKey() const;
    void setQuestionKey(const qint64 &question_key);
    bool is_question_key_Set() const;
    bool is_question_key_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIRegistrationAnswer> m_answers;
    bool m_answers_isSet;
    bool m_answers_isValid;

    qint32 m_max_size;
    bool m_max_size_isSet;
    bool m_max_size_isValid;

    QString m_question;
    bool m_question_isSet;
    bool m_question_isValid;

    qint64 m_question_key;
    bool m_question_key_isSet;
    bool m_question_key_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRegistrationQuestion)

#endif // OAIRegistrationQuestion_H
