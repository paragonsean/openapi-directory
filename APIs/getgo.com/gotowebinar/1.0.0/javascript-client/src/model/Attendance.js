/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Attendance model module.
 * @module model/Attendance
 * @version 1.0.0
 */
class Attendance {
    /**
     * Constructs a new <code>Attendance</code>.
     * Describes the times the attendee joined and left a webinar session.
     * @alias module:model/Attendance
     * @param joinTime {Date} The time the attendee joined a webinar session
     * @param leaveTime {Date} The time the attendee left a webinar session
     */
    constructor(joinTime, leaveTime) { 
        
        Attendance.initialize(this, joinTime, leaveTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, joinTime, leaveTime) { 
        obj['joinTime'] = joinTime;
        obj['leaveTime'] = leaveTime;
    }

    /**
     * Constructs a <code>Attendance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Attendance} obj Optional instance to populate.
     * @return {module:model/Attendance} The populated <code>Attendance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Attendance();

            if (data.hasOwnProperty('joinTime')) {
                obj['joinTime'] = ApiClient.convertToType(data['joinTime'], 'Date');
            }
            if (data.hasOwnProperty('leaveTime')) {
                obj['leaveTime'] = ApiClient.convertToType(data['leaveTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Attendance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Attendance</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Attendance.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

Attendance.RequiredProperties = ["joinTime", "leaveTime"];

/**
 * The time the attendee joined a webinar session
 * @member {Date} joinTime
 */
Attendance.prototype['joinTime'] = undefined;

/**
 * The time the attendee left a webinar session
 * @member {Date} leaveTime
 */
Attendance.prototype['leaveTime'] = undefined;






export default Attendance;

