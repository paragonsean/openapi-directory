/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AttendanceStatistics from './AttendanceStatistics';
import PollsAndSurveysStatistics from './PollsAndSurveysStatistics';

/**
 * The SessionPerformance model module.
 * @module model/SessionPerformance
 * @version 1.0.0
 */
class SessionPerformance {
    /**
     * Constructs a new <code>SessionPerformance</code>.
     * Describes performance details for webinar sessions
     * @alias module:model/SessionPerformance
     * @param attendance {module:model/AttendanceStatistics} 
     * @param pollsAndSurveys {module:model/PollsAndSurveysStatistics} 
     */
    constructor(attendance, pollsAndSurveys) { 
        
        SessionPerformance.initialize(this, attendance, pollsAndSurveys);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attendance, pollsAndSurveys) { 
        obj['attendance'] = attendance;
        obj['pollsAndSurveys'] = pollsAndSurveys;
    }

    /**
     * Constructs a <code>SessionPerformance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SessionPerformance} obj Optional instance to populate.
     * @return {module:model/SessionPerformance} The populated <code>SessionPerformance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SessionPerformance();

            if (data.hasOwnProperty('attendance')) {
                obj['attendance'] = AttendanceStatistics.constructFromObject(data['attendance']);
            }
            if (data.hasOwnProperty('pollsAndSurveys')) {
                obj['pollsAndSurveys'] = PollsAndSurveysStatistics.constructFromObject(data['pollsAndSurveys']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SessionPerformance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SessionPerformance</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SessionPerformance.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `attendance`
        if (data['attendance']) { // data not null
          AttendanceStatistics.validateJSON(data['attendance']);
        }
        // validate the optional field `pollsAndSurveys`
        if (data['pollsAndSurveys']) { // data not null
          PollsAndSurveysStatistics.validateJSON(data['pollsAndSurveys']);
        }

        return true;
    }


}

SessionPerformance.RequiredProperties = ["attendance", "pollsAndSurveys"];

/**
 * @member {module:model/AttendanceStatistics} attendance
 */
SessionPerformance.prototype['attendance'] = undefined;

/**
 * @member {module:model/PollsAndSurveysStatistics} pollsAndSurveys
 */
SessionPerformance.prototype['pollsAndSurveys'] = undefined;






export default SessionPerformance;

