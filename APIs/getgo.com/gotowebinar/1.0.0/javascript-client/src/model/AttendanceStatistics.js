/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AttendanceStatistics model module.
 * @module model/AttendanceStatistics
 * @version 1.0.0
 */
class AttendanceStatistics {
    /**
     * Constructs a new <code>AttendanceStatistics</code>.
     * Describes attendance metrics for a webinar session.
     * @alias module:model/AttendanceStatistics
     * @param averageAttendanceTimeSeconds {Number} Average attendance time in seconds
     * @param averageAttentiveness {Number} Average based on the focus of the attendees Viewer during the webinar session
     * @param averageInterestRating {Number} Numerical value 1-100 (100 being most interested) indicating the average interest rating of the webinar attendees
     * @param percentageAttendance {Number} The percentage of registrants that actually attended the webinar session
     * @param registrantCount {Number} The number of registrations for the webinar
     */
    constructor(averageAttendanceTimeSeconds, averageAttentiveness, averageInterestRating, percentageAttendance, registrantCount) { 
        
        AttendanceStatistics.initialize(this, averageAttendanceTimeSeconds, averageAttentiveness, averageInterestRating, percentageAttendance, registrantCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, averageAttendanceTimeSeconds, averageAttentiveness, averageInterestRating, percentageAttendance, registrantCount) { 
        obj['averageAttendanceTimeSeconds'] = averageAttendanceTimeSeconds;
        obj['averageAttentiveness'] = averageAttentiveness;
        obj['averageInterestRating'] = averageInterestRating;
        obj['percentageAttendance'] = percentageAttendance;
        obj['registrantCount'] = registrantCount;
    }

    /**
     * Constructs a <code>AttendanceStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AttendanceStatistics} obj Optional instance to populate.
     * @return {module:model/AttendanceStatistics} The populated <code>AttendanceStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AttendanceStatistics();

            if (data.hasOwnProperty('averageAttendanceTimeSeconds')) {
                obj['averageAttendanceTimeSeconds'] = ApiClient.convertToType(data['averageAttendanceTimeSeconds'], 'Number');
            }
            if (data.hasOwnProperty('averageAttentiveness')) {
                obj['averageAttentiveness'] = ApiClient.convertToType(data['averageAttentiveness'], 'Number');
            }
            if (data.hasOwnProperty('averageInterestRating')) {
                obj['averageInterestRating'] = ApiClient.convertToType(data['averageInterestRating'], 'Number');
            }
            if (data.hasOwnProperty('percentageAttendance')) {
                obj['percentageAttendance'] = ApiClient.convertToType(data['percentageAttendance'], 'Number');
            }
            if (data.hasOwnProperty('registrantCount')) {
                obj['registrantCount'] = ApiClient.convertToType(data['registrantCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AttendanceStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AttendanceStatistics</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AttendanceStatistics.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AttendanceStatistics.RequiredProperties = ["averageAttendanceTimeSeconds", "averageAttentiveness", "averageInterestRating", "percentageAttendance", "registrantCount"];

/**
 * Average attendance time in seconds
 * @member {Number} averageAttendanceTimeSeconds
 */
AttendanceStatistics.prototype['averageAttendanceTimeSeconds'] = undefined;

/**
 * Average based on the focus of the attendees Viewer during the webinar session
 * @member {Number} averageAttentiveness
 */
AttendanceStatistics.prototype['averageAttentiveness'] = undefined;

/**
 * Numerical value 1-100 (100 being most interested) indicating the average interest rating of the webinar attendees
 * @member {Number} averageInterestRating
 */
AttendanceStatistics.prototype['averageInterestRating'] = undefined;

/**
 * The percentage of registrants that actually attended the webinar session
 * @member {Number} percentageAttendance
 */
AttendanceStatistics.prototype['percentageAttendance'] = undefined;

/**
 * The number of registrations for the webinar
 * @member {Number} registrantCount
 */
AttendanceStatistics.prototype['registrantCount'] = undefined;






export default AttendanceStatistics;

