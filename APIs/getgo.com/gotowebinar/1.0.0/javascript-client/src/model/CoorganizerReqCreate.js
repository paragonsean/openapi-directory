/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CoorganizerReqCreate model module.
 * @module model/CoorganizerReqCreate
 * @version 1.0.0
 */
class CoorganizerReqCreate {
    /**
     * Constructs a new <code>CoorganizerReqCreate</code>.
     * Details used for creating a co-organizer for a webinar. 
     * @alias module:model/CoorganizerReqCreate
     * @param external {Boolean} If the co-organizer has no GoToWebinar account, this value has to be set to 'true'
     */
    constructor(external) { 
        
        CoorganizerReqCreate.initialize(this, external);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, external) { 
        obj['external'] = external;
    }

    /**
     * Constructs a <code>CoorganizerReqCreate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CoorganizerReqCreate} obj Optional instance to populate.
     * @return {module:model/CoorganizerReqCreate} The populated <code>CoorganizerReqCreate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CoorganizerReqCreate();

            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('external')) {
                obj['external'] = ApiClient.convertToType(data['external'], 'Boolean');
            }
            if (data.hasOwnProperty('givenName')) {
                obj['givenName'] = ApiClient.convertToType(data['givenName'], 'String');
            }
            if (data.hasOwnProperty('organizerKey')) {
                obj['organizerKey'] = ApiClient.convertToType(data['organizerKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CoorganizerReqCreate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CoorganizerReqCreate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CoorganizerReqCreate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['givenName'] && !(typeof data['givenName'] === 'string' || data['givenName'] instanceof String)) {
            throw new Error("Expected the field `givenName` to be a primitive type in the JSON string but got " + data['givenName']);
        }
        // ensure the json data is a string
        if (data['organizerKey'] && !(typeof data['organizerKey'] === 'string' || data['organizerKey'] instanceof String)) {
            throw new Error("Expected the field `organizerKey` to be a primitive type in the JSON string but got " + data['organizerKey']);
        }

        return true;
    }


}

CoorganizerReqCreate.RequiredProperties = ["external"];

/**
 * The co-organizer's email address. This parameter has to be passed only, if 'external' is set to 'true'
 * @member {String} email
 */
CoorganizerReqCreate.prototype['email'] = undefined;

/**
 * If the co-organizer has no GoToWebinar account, this value has to be set to 'true'
 * @member {Boolean} external
 */
CoorganizerReqCreate.prototype['external'] = undefined;

/**
 * The co-organizer's given name. This parameter has to be passed only, if 'external' is set to 'true'
 * @member {String} givenName
 */
CoorganizerReqCreate.prototype['givenName'] = undefined;

/**
 * The co-organizer's organizer key. This parameter has to be passed only, if 'external' is set to 'false'
 * @member {String} organizerKey
 */
CoorganizerReqCreate.prototype['organizerKey'] = undefined;






export default CoorganizerReqCreate;

