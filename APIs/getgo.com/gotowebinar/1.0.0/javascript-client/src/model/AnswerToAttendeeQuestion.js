/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnswerToAttendeeQuestion model module.
 * @module model/AnswerToAttendeeQuestion
 * @version 1.0.0
 */
class AnswerToAttendeeQuestion {
    /**
     * Constructs a new <code>AnswerToAttendeeQuestion</code>.
     * Describes an answer to a question asked by an attendee during a webinar session.
     * @alias module:model/AnswerToAttendeeQuestion
     * @param answer {String} An answer given to a question asked by an attendee during a webinar session
     * @param answeredBy {String} The key of the organizer that answered the attendee's question
     */
    constructor(answer, answeredBy) { 
        
        AnswerToAttendeeQuestion.initialize(this, answer, answeredBy);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, answer, answeredBy) { 
        obj['answer'] = answer;
        obj['answeredBy'] = answeredBy;
    }

    /**
     * Constructs a <code>AnswerToAttendeeQuestion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnswerToAttendeeQuestion} obj Optional instance to populate.
     * @return {module:model/AnswerToAttendeeQuestion} The populated <code>AnswerToAttendeeQuestion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnswerToAttendeeQuestion();

            if (data.hasOwnProperty('answer')) {
                obj['answer'] = ApiClient.convertToType(data['answer'], 'String');
            }
            if (data.hasOwnProperty('answeredBy')) {
                obj['answeredBy'] = ApiClient.convertToType(data['answeredBy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnswerToAttendeeQuestion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnswerToAttendeeQuestion</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AnswerToAttendeeQuestion.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['answer'] && !(typeof data['answer'] === 'string' || data['answer'] instanceof String)) {
            throw new Error("Expected the field `answer` to be a primitive type in the JSON string but got " + data['answer']);
        }
        // ensure the json data is a string
        if (data['answeredBy'] && !(typeof data['answeredBy'] === 'string' || data['answeredBy'] instanceof String)) {
            throw new Error("Expected the field `answeredBy` to be a primitive type in the JSON string but got " + data['answeredBy']);
        }

        return true;
    }


}

AnswerToAttendeeQuestion.RequiredProperties = ["answer", "answeredBy"];

/**
 * An answer given to a question asked by an attendee during a webinar session
 * @member {String} answer
 */
AnswerToAttendeeQuestion.prototype['answer'] = undefined;

/**
 * The key of the organizer that answered the attendee's question
 * @member {String} answeredBy
 */
AnswerToAttendeeQuestion.prototype['answeredBy'] = undefined;






export default AnswerToAttendeeQuestion;

