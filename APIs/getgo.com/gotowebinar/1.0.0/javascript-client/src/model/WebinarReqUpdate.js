/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateTimeRange from './DateTimeRange';

/**
 * The WebinarReqUpdate model module.
 * @module model/WebinarReqUpdate
 * @version 1.0.0
 */
class WebinarReqUpdate {
    /**
     * Constructs a new <code>WebinarReqUpdate</code>.
     * Describes the details of the webinar
     * @alias module:model/WebinarReqUpdate
     */
    constructor() { 
        
        WebinarReqUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>WebinarReqUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/WebinarReqUpdate} obj Optional instance to populate.
     * @return {module:model/WebinarReqUpdate} The populated <code>WebinarReqUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new WebinarReqUpdate();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('timeZone')) {
                obj['timeZone'] = ApiClient.convertToType(data['timeZone'], 'String');
            }
            if (data.hasOwnProperty('times')) {
                obj['times'] = ApiClient.convertToType(data['times'], [DateTimeRange]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>WebinarReqUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>WebinarReqUpdate</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['timeZone'] && !(typeof data['timeZone'] === 'string' || data['timeZone'] instanceof String)) {
            throw new Error("Expected the field `timeZone` to be a primitive type in the JSON string but got " + data['timeZone']);
        }
        if (data['times']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['times'])) {
                throw new Error("Expected the field `times` to be an array in the JSON data but got " + data['times']);
            }
            // validate the optional field `times` (array)
            for (const item of data['times']) {
                DateTimeRange.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A description of the webinar (2048 characters maximum)
 * @member {String} description
 */
WebinarReqUpdate.prototype['description'] = undefined;

/**
 * The webinar language
 * @member {module:model/WebinarReqUpdate.LocaleEnum} locale
 */
WebinarReqUpdate.prototype['locale'] = undefined;

/**
 * The name/subject of the webinar (128 characters maximum)
 * @member {String} subject
 */
WebinarReqUpdate.prototype['subject'] = undefined;

/**
 * The time zone where the webinar is taking place (must be a valid time zone ID, see https://goto-developer.logmein.com/time-zones). If this parameter is not passed, the timezone of the organizer's profile will be used
 * @member {String} timeZone
 */
WebinarReqUpdate.prototype['timeZone'] = undefined;

/**
 * Array with start and end time(s) for webinar
 * @member {Array.<module:model/DateTimeRange>} times
 */
WebinarReqUpdate.prototype['times'] = undefined;





/**
 * Allowed values for the <code>locale</code> property.
 * @enum {String}
 * @readonly
 */
WebinarReqUpdate['LocaleEnum'] = {

    /**
     * value: "en_US"
     * @const
     */
    "en_US": "en_US",

    /**
     * value: "de_DE"
     * @const
     */
    "de_DE": "de_DE",

    /**
     * value: "es_ES"
     * @const
     */
    "es_ES": "es_ES",

    /**
     * value: "fr_FR"
     * @const
     */
    "fr_FR": "fr_FR",

    /**
     * value: "it_IT"
     * @const
     */
    "it_IT": "it_IT",

    /**
     * value: "zh_CN"
     * @const
     */
    "zh_CN": "zh_CN"
};



export default WebinarReqUpdate;

