/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PrivateInfoUpdate model module.
 * @module model/PrivateInfoUpdate
 * @version 1.0.0
 */
class PrivateInfoUpdate {
    /**
     * Constructs a new <code>PrivateInfoUpdate</code>.
     * Defines the audio data for an own conferencing system
     * @alias module:model/PrivateInfoUpdate
     * @param attendee {String} Attendee phone number for own conference call system
     */
    constructor(attendee) { 
        
        PrivateInfoUpdate.initialize(this, attendee);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, attendee) { 
        obj['attendee'] = attendee;
    }

    /**
     * Constructs a <code>PrivateInfoUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrivateInfoUpdate} obj Optional instance to populate.
     * @return {module:model/PrivateInfoUpdate} The populated <code>PrivateInfoUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrivateInfoUpdate();

            if (data.hasOwnProperty('attendee')) {
                obj['attendee'] = ApiClient.convertToType(data['attendee'], 'String');
            }
            if (data.hasOwnProperty('organizer')) {
                obj['organizer'] = ApiClient.convertToType(data['organizer'], 'String');
            }
            if (data.hasOwnProperty('panelist')) {
                obj['panelist'] = ApiClient.convertToType(data['panelist'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrivateInfoUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrivateInfoUpdate</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PrivateInfoUpdate.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['attendee'] && !(typeof data['attendee'] === 'string' || data['attendee'] instanceof String)) {
            throw new Error("Expected the field `attendee` to be a primitive type in the JSON string but got " + data['attendee']);
        }
        // ensure the json data is a string
        if (data['organizer'] && !(typeof data['organizer'] === 'string' || data['organizer'] instanceof String)) {
            throw new Error("Expected the field `organizer` to be a primitive type in the JSON string but got " + data['organizer']);
        }
        // ensure the json data is a string
        if (data['panelist'] && !(typeof data['panelist'] === 'string' || data['panelist'] instanceof String)) {
            throw new Error("Expected the field `panelist` to be a primitive type in the JSON string but got " + data['panelist']);
        }

        return true;
    }


}

PrivateInfoUpdate.RequiredProperties = ["attendee"];

/**
 * Attendee phone number for own conference call system
 * @member {String} attendee
 */
PrivateInfoUpdate.prototype['attendee'] = undefined;

/**
 * Organizer phone number for own conference call system
 * @member {String} organizer
 */
PrivateInfoUpdate.prototype['organizer'] = undefined;

/**
 * Panelist phone number for own conference call system
 * @member {String} panelist
 */
PrivateInfoUpdate.prototype['panelist'] = undefined;






export default PrivateInfoUpdate;

