/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoToWebinar);
  }
}(this, function(expect, GoToWebinar) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoToWebinar.AttendeesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AttendeesApi', function() {
    describe('getAttendee', function() {
      it('should call getAttendee successfully', function(done) {
        //uncomment below and update the code to test getAttendee
        //instance.getAttendee(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttendeePollAnswers', function() {
      it('should call getAttendeePollAnswers successfully', function(done) {
        //uncomment below and update the code to test getAttendeePollAnswers
        //instance.getAttendeePollAnswers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttendeeQuestions', function() {
      it('should call getAttendeeQuestions successfully', function(done) {
        //uncomment below and update the code to test getAttendeeQuestions
        //instance.getAttendeeQuestions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttendeeSurveyAnswers', function() {
      it('should call getAttendeeSurveyAnswers successfully', function(done) {
        //uncomment below and update the code to test getAttendeeSurveyAnswers
        //instance.getAttendeeSurveyAnswers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttendees', function() {
      it('should call getAttendees successfully', function(done) {
        //uncomment below and update the code to test getAttendees
        //instance.getAttendees(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
