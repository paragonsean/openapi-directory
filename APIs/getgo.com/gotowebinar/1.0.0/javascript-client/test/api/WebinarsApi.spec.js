/**
 * GoToWebinar
 * The GoToWebinar API provides seamless integration of webinar registrant and attendee data into your existing infrastructure or third-party applications. The ability to register participants, as well as pull lists of registrants and attendees for a webinar, allows organizers to manage the flow of information between their primary applications without manual intervention.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoToWebinar);
  }
}(this, function(expect, GoToWebinar) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoToWebinar.WebinarsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('WebinarsApi', function() {
    describe('cancelWebinar', function() {
      it('should call cancelWebinar successfully', function(done) {
        //uncomment below and update the code to test cancelWebinar
        //instance.cancelWebinar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createWebinar', function() {
      it('should call createWebinar successfully', function(done) {
        //uncomment below and update the code to test createWebinar
        //instance.createWebinar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllAccountWebinars', function() {
      it('should call getAllAccountWebinars successfully', function(done) {
        //uncomment below and update the code to test getAllAccountWebinars
        //instance.getAllAccountWebinars(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllWebinars', function() {
      it('should call getAllWebinars successfully', function(done) {
        //uncomment below and update the code to test getAllWebinars
        //instance.getAllWebinars(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAttendeesForAllWebinarSessions', function() {
      it('should call getAttendeesForAllWebinarSessions successfully', function(done) {
        //uncomment below and update the code to test getAttendeesForAllWebinarSessions
        //instance.getAttendeesForAllWebinarSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAudioInformation', function() {
      it('should call getAudioInformation successfully', function(done) {
        //uncomment below and update the code to test getAudioInformation
        //instance.getAudioInformation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getHistoricalWebinars', function() {
      it('should call getHistoricalWebinars successfully', function(done) {
        //uncomment below and update the code to test getHistoricalWebinars
        //instance.getHistoricalWebinars(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPerformanceForAllWebinarSessions', function() {
      it('should call getPerformanceForAllWebinarSessions successfully', function(done) {
        //uncomment below and update the code to test getPerformanceForAllWebinarSessions
        //instance.getPerformanceForAllWebinarSessions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUpcomingWebinars', function() {
      it('should call getUpcomingWebinars successfully', function(done) {
        //uncomment below and update the code to test getUpcomingWebinars
        //instance.getUpcomingWebinars(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWebinar', function() {
      it('should call getWebinar successfully', function(done) {
        //uncomment below and update the code to test getWebinar
        //instance.getWebinar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getWebinarMeetingTimes', function() {
      it('should call getWebinarMeetingTimes successfully', function(done) {
        //uncomment below and update the code to test getWebinarMeetingTimes
        //instance.getWebinarMeetingTimes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAudioInformation', function() {
      it('should call updateAudioInformation successfully', function(done) {
        //uncomment below and update the code to test updateAudioInformation
        //instance.updateAudioInformation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateWebinar', function() {
      it('should call updateWebinar successfully', function(done) {
        //uncomment below and update the code to test updateWebinar
        //instance.updateWebinar(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
