/**
 * GoToTraining
 * The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIHostUrl.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIHostUrl::OAIHostUrl(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIHostUrl::OAIHostUrl() {
    this->initializeModel();
}

OAIHostUrl::~OAIHostUrl() {}

void OAIHostUrl::initializeModel() {

    m_host_url_isSet = false;
    m_host_url_isValid = false;
}

void OAIHostUrl::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIHostUrl::fromJsonObject(QJsonObject json) {

    m_host_url_isValid = ::OpenAPI::fromJsonValue(m_host_url, json[QString("hostURL")]);
    m_host_url_isSet = !json[QString("hostURL")].isNull() && m_host_url_isValid;
}

QString OAIHostUrl::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIHostUrl::asJsonObject() const {
    QJsonObject obj;
    if (m_host_url_isSet) {
        obj.insert(QString("hostURL"), ::OpenAPI::toJsonValue(m_host_url));
    }
    return obj;
}

QString OAIHostUrl::getHostUrl() const {
    return m_host_url;
}
void OAIHostUrl::setHostUrl(const QString &host_url) {
    m_host_url = host_url;
    m_host_url_isSet = true;
}

bool OAIHostUrl::is_host_url_Set() const{
    return m_host_url_isSet;
}

bool OAIHostUrl::is_host_url_Valid() const{
    return m_host_url_isValid;
}

bool OAIHostUrl::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_host_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIHostUrl::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_host_url_isValid && true;
}

} // namespace OpenAPI
