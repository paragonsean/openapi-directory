openapi: 3.0.1
info:
  contact:
    email: developer-support@logmein.com
    name: Developer Support
    url: https://goto-developer.logmein.com
  description: "The GoToTraining API enables developers to use the stable and robust\
    \ GoToTraining functionality as the basis for online trainings in a proprietary\
    \ learning management system. The GoToTraining APIs provide the ability to access\
    \ the scheduling, registration, management, and reporting functions of GoToTraining\
    \ from external applications. With the ability to tightly integrate GoToTraining\
    \ into your learning infrastructure, you can offer your learners a seamless user\
    \ experience and provide them with a market leading virtual classroom environment."
  termsOfService: https://goto-developer.logmein.com/terms-use
  title: GoToTraining
  version: 1.0.0
  x-origin:
  - format: swagger
    url: https://developer.citrixonline.com/sites/default/files/citrix/citrix-apis/gototraining.json
    version: "2.0"
  x-providerName: getgo.com
  x-serviceName: gototraining
servers:
- url: https://api.getgo.com/G2T/rest
tags:
- description: Operations available for training organizers.
  name: Organizers
- description: Operations available for trainings.
  name: Trainings
- description: Operations available for registrants of a given training.
  name: Registrations
- description: Operations available for training reports.
  name: Reports
- description: Operations available for online recordings.
  name: Recordings
paths:
  /accounts/{accountKey}/organizers:
    get:
      deprecated: true
      description: "DEPRECATED: Please use the Admin API call 'Get all users' instead.\
        \ For details see https://goto-developer.logmein.com/get-all-users."
      operationId: get_all_organisers
      parameters:
      - description: Access token
        in: header
        name: Authorization
        required: true
        schema:
          type: string
      - description: The key of the multi-user account
        in: path
        name: accountKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organizer'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: "DEPRECATED: Get Organizers"
      tags:
      - Organizers
      x-openapi-router-controller: openapi_server.controllers.organizers_controller
  /organizers/{organizerKey}/trainings:
    get:
      description: "This call retrieves information on all scheduled trainings for\
        \ a given organizer. The trainings are returned in the order in which they\
        \ were created. Completed trainings are not included; ongoing trainings with\
        \ past sessions are included along with the past sessions. If the organizer\
        \ does not have any scheduled trainings, the response will be empty."
      operationId: get_all_trainings
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizerKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Training'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Get Trainings
      tags:
      - Trainings
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
    post:
      description: "Schedules a training of one or more sessions. The call requires\
        \ a training's name, at least one start and end time, and optionally may include\
        \ additional sessions, a description, additional organizers (presenters),\
        \ and registration settings. You can only add organizers to a training if\
        \ you have a multi-user account. Once a training has been created with this\
        \ method, you can accept registrations to the training. Registration is for\
        \ the entire training - all sessions. (The GoToTraining admin site enables\
        \ you to create trainings that allow participants to register for individual\
        \ sessions as well as automatically create weekly or monthly events.) Registration\
        \ settings controls whether you allow web registration for this training,\
        \ and whether a confirmation email is sent to the registrant following registration.\
        \ Disabling the confirmation email is an API-only setting. If the user registers\
        \ through the GoToTraining website, a confirmation email is sent. If the user\
        \ is manually approved by the training administrator through the GoToTraining\
        \ web site, the confirmation email is sent. It is recommended that you disable\
        \ web registration if you disable confirmation emails. The response contains\
        \ a trainingKey for the scheduled training."
      operationId: schedule_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingReqCreate'
        description: The details of the training to create
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                type: string
          description: Created
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Create Training
      tags:
      - Trainings
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /organizers/{organizerKey}/trainings/{trainingKey}:
    delete:
      description: "Deletes a scheduled or completed training. For scheduled trainings,\
        \ it deletes all scheduled sessions of the training. For completed trainings,\
        \ the sessions remain in the database. No email is sent to organizers or registrants,\
        \ but when participants attempt to start or join the training, they are directed\
        \ to a page that states: Training Not Found: The training you are trying to\
        \ join is no longer available."
      operationId: cancel_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Delete Training
      tags:
      - Trainings
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
    get:
      description: Uses the organizer key and training key to retrieve information
        on a scheduled training.
      operationId: get_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: trainingKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Training'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Training
      tags:
      - Trainings
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/manageUrl:
    get:
      description: "A request for a direct URL to the admin portal for a specific\
        \ training. The request identifies the organizer and the training; the response\
        \ provides a link the organizer can use to manage or launch the training in\
        \ the admin portal. The training organizer will be required to log in. You\
        \ can schedule and manage the training (e.g., add tests, polls and training\
        \ materials) from the URL provided in the response."
      operationId: get_manage_training_url
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Management URL for Training
      tags:
      - Trainings
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/nameDescription:
    put:
      description: Request to update a scheduled training name and description.
      operationId: update_training_name_description
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingNameDescription'
        description: The new name and description for the training
        required: true
        x-body-name: body
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Update Training Name and Description
      tags:
      - Trainings
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/organizers:
    get:
      description: Retrieves organizer details for a specific training. This is only
        applicable to multi-user accounts with sharing enabled (co-organizers).
      operationId: get_organisers_for_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Organizer'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Training Organizers
      tags:
      - Trainings
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
    put:
      description: Replaces the co-organizers for a specific training. The scheduling
        organizer cannot be unassigned. Organizers will be notified via email if the
        notifyOrganizers parameter is set to true. Replaced organizers are not notified.
        This method is only applicable to multi-user accounts with sharing enabled
        (co-organizers).
      operationId: update_organisers_for_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingOrganizers'
        description: The details of the training to create
        required: true
        x-body-name: body
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Update Training Organizers
      tags:
      - Trainings
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/registrants:
    get:
      description: "Retrieves details on all registrants for a specific training.\
        \ Registrants can be:<br>WAITING - registrant registered and is awaiting approval\
        \ (where organizer has required approval)<br>APPROVED - registrant registered\
        \ and is approved<br>DENIED - registrant registered and was not approved.<br><br>IMPORTANT:\
        \ The registrant data caches are typically updated immediately and the data\
        \ will be returned in the response. However, the update can take as long as\
        \ two hours."
      operationId: get_registrants
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Registrant'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Training Registrants
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
    post:
      description: "Registers one person, identified by a unique email address, for\
        \ a training. Approval is automatic unless payment or approval is required.\
        \ The response contains the Confirmation page URL and Join URL for the registrant.\
        \ NOTE: If some registrants do not receive a confirmation email, the emails\
        \ could be getting blocked by their email server due to spam filtering or\
        \ a grey-listing setting."
      operationId: register_for_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrantReqCreate'
        description: The details of the registrant to create
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrantCreated'
          description: Created
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "409":
          content: {}
          description: Conflict
      summary: Register for Training
      tags:
      - Registrations
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/registrants/{registrantKey}:
    delete:
      description: "This call cancels a registration in a scheduled training for a\
        \ specific registrant. If the registrant has paid for the training, a cancellation\
        \ cannot be completed with this method; it must be completed on the external\
        \ admin site. No notification is sent to the registrant or the organizer by\
        \ default. The registrant can re-register if needed."
      operationId: cancel_registration
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrant_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Cancel Registration
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
    get:
      description: "Retrieves details for specific registrant in a specific training.\
        \ Registrants can be:<br>WAITING - registrant registered and is awaiting approval\
        \ (where organizer has required approval)<br>APPROVED - registrant registered\
        \ and is approved<br>DENIED - registrant registered and was not approved.<br><br>IMPORTANT:\
        \ The registrant data caches are typically updated immediately and the data\
        \ will be returned in the response. However, the update can take as long as\
        \ two hours."
      operationId: get_registrant
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the registrant
        in: path
        name: registrantKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Registrant'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Registrant
      tags:
      - Registrations
      x-openapi-router-controller: openapi_server.controllers.registrations_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/registrationSettings:
    put:
      description: An API request to automatically enable or disable web registrations
        and confirmation emails to registrants.
      operationId: update_registration_settings_for_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationSettings'
        description: The new registration settings for the training
        required: true
        x-body-name: body
      responses:
        "204":
          content: {}
          description: No Content
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Update Training Registration Settings
      tags:
      - Trainings
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/startUrl:
    get:
      description: "Returns a URL that can be used to start a training. When this\
        \ URL is opened in a web browser, the GoToTraining client will be downloaded\
        \ and launched and the training will start after the organizer logs in with\
        \ its credentials."
      operationId: get_start_url
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Start Url
      tags:
      - Trainings
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /organizers/{organizerKey}/trainings/{trainingKey}/times:
    put:
      description: " A request to update a scheduled training's start and end times.\
        \ If the request contains 'notifyTrainers = true' and 'notifyRegistrants =\
        \ true', both organizers and registrants are notified. The response provides\
        \ the number of notified trainers and registrants."
      operationId: update_training_times
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TrainingTimes'
        description: The new start and end times for the scheduled training
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifiedParties'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Update Training Times
      tags:
      - Trainings
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
  /reports/organizers/{organizerKey}/sessions:
    post:
      description: This call returns all session details over a given date range for
        a given organizer. A session is a completed training event.
      operationId: get_session_details_for_date_range
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DateTimeRange'
        description: The start and end times for the time range over which to retrieve
          training sessions
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
      summary: Get Sessions by Date Range
      tags:
      - Reports
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /reports/organizers/{organizerKey}/sessions/{sessionKey}/attendees:
    get:
      description: "This call retrieves a list of registrants from a specific completed\
        \ training session. The response includes the registrants' email addresses,\
        \ and if they attended, it includes the duration of each period of their attendance\
        \ in minutes, and the times at which they joined and left. If a registrant\
        \ does not attend, they appear at the bottom of the listing with timeInSession\
        \ = 0."
      operationId: get_attendance_details
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training session
        in: path
        name: sessionKey
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Attendee'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Attendance Details
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /reports/organizers/{organizerKey}/trainings/{trainingKey}:
    get:
      description: This call returns session details for a given training. A session
        is a completed training event. Each training may contain one or more sessions.
      operationId: get_session_details_for_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training organizer
        in: path
        name: organizer_key
        required: true
        schema:
          format: int64
          type: integer
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Session'
                type: array
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Sessions By Training
      tags:
      - Reports
      x-openapi-router-controller: openapi_server.controllers.reports_controller
  /trainings/{trainingKey}/recordings:
    get:
      description: "This call retrieves information on all online recordings for a\
        \ given training. If there are none, it returns an empty list."
      operationId: get_recordings_for_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecordingsListForTraining'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Online Recordings for Training
      tags:
      - Recordings
      x-openapi-router-controller: openapi_server.controllers.recordings_controller
  /trainings/{trainingKey}/recordings/{recordingId}:
    get:
      description: This call provides the download for the given recording by returning
        a 302 redirect to the original file.
      operationId: get_recording_download_by_id
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      - description: the unique id of the recording
        in: path
        name: recordingId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "302":
          content: {}
          description: Redirected to download
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Get Download for Online Recordings
      tags:
      - Recordings
      x-openapi-router-controller: openapi_server.controllers.recordings_controller
  /trainings/{trainingKey}/start:
    get:
      description: "Returns a URL that can be used to start a training. When this\
        \ URL is opened in a web browser, the GoToTraining client will be downloaded\
        \ and launched and the training will start. A login of the organizer is not\
        \ required."
      operationId: start_training
      parameters:
      - description: Access token
        in: header
        name: authorization
        required: true
        schema:
          type: string
      - description: The key of the training
        in: path
        name: training_key
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HostUrl'
          description: OK
        "400":
          content: {}
          description: Bad Request
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Start Training
      tags:
      - Trainings
      x-openapi-router-controller: openapi_server.controllers.trainings_controller
components:
  parameters:
    Authorization:
      description: Access token
      in: header
      name: Authorization
      required: true
      schema:
        type: string
    organizerKey:
      description: The key of the training organizer
      in: path
      name: organizerKey
      required: true
      schema:
        format: int64
        type: integer
    registrantKey:
      description: The key of the registrant
      in: path
      name: registrantKey
      required: true
      schema:
        format: int64
        type: integer
    trainingKey:
      description: The key of the training
      in: path
      name: trainingKey
      required: true
      schema:
        format: int64
        type: integer
  schemas:
    Attendance:
      description: Describes the times the attendee joined and left a part of a training
        session.
      example:
        leaveTime: 2000-01-23T04:56:07.000+00:00
        joinTime: 2000-01-23T04:56:07.000+00:00
        timeInPartOfSession: 0
      properties:
        joinTime:
          description: The time the attendee joined a part of a training session
          format: date-time
          title: joinTime
          type: string
        leaveTime:
          description: The time the attendee left a part of a training session
          format: date-time
          title: leaveTime
          type: string
        timeInPartOfSession:
          description: The time in minutes the attendee spent at a part of a training
            session
          format: int32
          title: timeInPartOfSession
          type: integer
      required:
      - joinTime
      - leaveTime
      - timeInPartOfSession
      title: Attendance
      type: object
    Attendee:
      description: Describes the attendee of a training session.
      example:
        surname: surname
        givenName: givenName
        timeInSession: 6
        inSessionTimes:
        - leaveTime: 2000-01-23T04:56:07.000+00:00
          joinTime: 2000-01-23T04:56:07.000+00:00
          timeInPartOfSession: 0
        - leaveTime: 2000-01-23T04:56:07.000+00:00
          joinTime: 2000-01-23T04:56:07.000+00:00
          timeInPartOfSession: 0
        email: email
      properties:
        email:
          description: The attendee's email address
          title: email
          type: string
        givenName:
          description: The attendee's first name
          title: givenName
          type: string
        inSessionTimes:
          description: List of the parts of the training session the attendee joined
          items:
            $ref: '#/components/schemas/Attendance'
          title: inSessionTimes
          type: array
        surname:
          description: The attendee's surname
          title: surname
          type: string
        timeInSession:
          description: The total time in minutes spent at all the parts of the training
            session the attendee joined
          format: int32
          title: timeInSession
          type: integer
      required:
      - email
      - givenName
      - inSessionTimes
      - surname
      - timeInSession
      title: Attendee
      type: object
    DateTimeRange:
      description: "A pair of DateTime values, the first of which serves as a start\
        \ time and the second as an end time of an interval"
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        endDate:
          description: The ending time of an interval
          format: date-time
          title: endDate
          type: string
        startDate:
          description: The starting time of an interval
          format: date-time
          title: startDate
          type: string
      required:
      - endDate
      - startDate
      title: DateTimeRange
      type: object
    HostUrl:
      description: Host URL that can be used to start a training
      example:
        hostURL: hostURL
      properties:
        hostURL:
          description: The host URL that can be used to start a training
          title: hostURL
          type: string
      required:
      - hostURL
      title: HostUrl
      type: object
    NotifiedParties:
      description: Number of parties notified of a change to a training session times
      example:
        notifiedTrainers: 6
        notifiedRegistrants: 0
      properties:
        notifiedRegistrants:
          description: Number of registrants notified of changes to a training
          format: int32
          title: notifiedRegistrants
          type: integer
        notifiedTrainers:
          description: Number of trainers notified of changes to a training
          format: int32
          title: notifiedTrainers
          type: integer
      required:
      - notifiedRegistrants
      - notifiedTrainers
      title: NotifiedParties
      type: object
    Organizer:
      description: Describes a training organizer.
      example:
        surname: surname
        givenName: givenName
        organizerKey: organizerKey
        email: email
      properties:
        email:
          description: The email address of the training (co-)organizer
          title: email
          type: string
        givenName:
          description: The (co-)organizer's first name
          title: givenName
          type: string
        organizerKey:
          description: The key of the training (co-)organizer
          title: organizerKey
          type: string
        surname:
          description: The (co-)organizer's surname
          title: surname
          type: string
      required:
      - email
      - givenName
      - organizerKey
      - surname
      title: Organizer
      type: object
    Recording:
      description: Describes an online recording of a training
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        downloadUrl: downloadUrl
        name: name
        description: description
        recordingId: 0
        registrationUrl: registrationUrl
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        description:
          description: The description of the recording
          title: description
          type: string
        downloadUrl:
          description: The url used to download the recording to the local device
          title: downloadUrl
          type: string
        endDate:
          description: The time the recording was ended
          format: date-time
          title: endDate
          type: string
        name:
          description: The title of the recording
          title: name
          type: string
        recordingId:
          description: The unique id of the recording
          format: int64
          title: recordingId
          type: integer
        registrationUrl:
          description: The url where attendees can register to view the recording
          title: registrationUrl
          type: string
        startDate:
          description: The time the recording was started
          format: date-time
          title: startDate
          type: string
      required:
      - endDate
      - name
      - recordingId
      - startDate
      title: Recording
      type: object
    RecordingsListForTraining:
      description: Contains a list of recordings for the training.
      example:
        trainingKey: 6
        recordingList:
        - endDate: 2000-01-23T04:56:07.000+00:00
          downloadUrl: downloadUrl
          name: name
          description: description
          recordingId: 0
          registrationUrl: registrationUrl
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          downloadUrl: downloadUrl
          name: name
          description: description
          recordingId: 0
          registrationUrl: registrationUrl
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        recordingList:
          description: The list of online recordings for the training
          items:
            $ref: '#/components/schemas/Recording'
          title: recordingList
          type: array
        trainingKey:
          description: The training's unique key
          format: int64
          title: trainingKey
          type: integer
      required:
      - recordingList
      - trainingKey
      title: RecordingsListForTraining
      type: object
    Registrant:
      description: Describes a training registrant.
      example:
        confirmationUrl: confirmationUrl
        surname: surname
        givenName: givenName
        registrationDate: 2000-01-23T04:56:07.000+00:00
        joinUrl: joinUrl
        registrantKey: registrantKey
        email: email
        status: WAITING
      properties:
        confirmationUrl:
          description: The URL where the confirmation for the registration can be
            found
          title: confirmationUrl
          type: string
        email:
          description: The registrant's email address
          title: email
          type: string
        givenName:
          description: The registrant's first name
          title: givenName
          type: string
        joinUrl:
          description: The URL the registrant will use to join the training
          title: joinUrl
          type: string
        registrantKey:
          description: The registrant's key
          title: registrantKey
          type: string
        registrationDate:
          description: The date and time the registration took place
          format: date-time
          title: registrationDate
          type: string
        status:
          description: The registrant's status
          enum:
          - WAITING
          - APPROVED
          - DENIED
          title: status
          type: string
        surname:
          description: The registrant's surname
          title: surname
          type: string
      required:
      - confirmationUrl
      - email
      - givenName
      - joinUrl
      - registrantKey
      - registrationDate
      - status
      - surname
      title: Registrant
      type: object
    RegistrantCreated:
      description: Describes a newly created training registrant
      example:
        confirmationUrl: confirmationUrl
        joinUrl: joinUrl
        registrantKey: registrantKey
      properties:
        confirmationUrl:
          description: The URL where confirmation for the registration can be found
          title: confirmationUrl
          type: string
        joinUrl:
          description: The URL the registrant will use to join the training
          title: joinUrl
          type: string
        registrantKey:
          description: The registrant's key
          title: registrantKey
          type: string
      required:
      - confirmationUrl
      - joinUrl
      - registrantKey
      title: RegistrantCreated
      type: object
    RegistrantReqCreate:
      description: Details required to make a new training registration.
      example:
        surname: surname
        givenName: givenName
        email: email
      properties:
        email:
          description: The registrant's email address
          title: email
          type: string
        givenName:
          description: The registrant's first name
          title: givenName
          type: string
        surname:
          description: The registrant's surname
          title: surname
          type: string
      required:
      - email
      - givenName
      - surname
      title: RegistrantReqCreate
      type: object
    RegistrationSettings:
      description: "Training settings, namely availability of web registration and\
        \ confirmation emails to the training registrants"
      example:
        disableWebRegistration: true
        disableConfirmationEmail: true
      properties:
        disableConfirmationEmail:
          description: Indicates whether confirmation emails to the training registrants
            are disabled
          title: disableConfirmationEmail
          type: boolean
        disableWebRegistration:
          description: Indicates whether the web registration for the training is
            disabled
          title: disableWebRegistration
          type: boolean
      required:
      - disableConfirmationEmail
      - disableWebRegistration
      title: RegistrationSettings
      type: object
    Session:
      description: Describes a completed training session.
      example:
        duration: 6
        attendanceCount: 0
        sessionKey: sessionKey
        trainingName: trainingName
        sessionEndTime: 2000-01-23T04:56:07.000+00:00
        organizers:
        - surname: surname
          givenName: givenName
          organizerKey: organizerKey
          email: email
        - surname: surname
          givenName: givenName
          organizerKey: organizerKey
          email: email
        sessionStartTime: 2000-01-23T04:56:07.000+00:00
      properties:
        attendanceCount:
          description: The number of attendees at the training session
          format: int32
          title: attendanceCount
          type: integer
        duration:
          description: The duration of the training session in minutes
          format: int32
          title: duration
          type: integer
        organizers:
          description: The organizers of the training session.
          items:
            $ref: '#/components/schemas/Organizer'
          title: organizers
          type: array
        sessionEndTime:
          description: The time the training session finished
          format: date-time
          title: sessionEndTime
          type: string
        sessionKey:
          description: The key of the training session
          title: sessionKey
          type: string
        sessionStartTime:
          description: The time the training session started
          format: date-time
          title: sessionStartTime
          type: string
        trainingName:
          description: The subject of the training
          title: trainingName
          type: string
      required:
      - attendanceCount
      - duration
      - organizers
      - sessionEndTime
      - sessionKey
      - sessionStartTime
      - trainingName
      title: Session
      type: object
    Training:
      description: Describes a scheduled training.
      example:
        registrationSettings:
          disableWebRegistration: true
          disableConfirmationEmail: true
        times:
        - endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        trainingKey: trainingKey
        trainingId: trainingId
        name: name
        organizers:
        - surname: surname
          givenName: givenName
          organizerKey: organizerKey
          email: email
        - surname: surname
          givenName: givenName
          organizerKey: organizerKey
          email: email
        description: description
        timeZone: timeZone
      properties:
        description:
          description: The training's description
          title: description
          type: string
        name:
          description: The training's subject
          title: name
          type: string
        organizers:
          description: The list of (co-)organizers for the training
          items:
            $ref: '#/components/schemas/Organizer'
          title: organizers
          type: array
        registrationSettings:
          $ref: '#/components/schemas/RegistrationSettings'
        timeZone:
          description: The time zone where the training takes place
          title: timeZone
          type: string
        times:
          description: Array with startDate and endDate for the training sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
        trainingId:
          description: The 9-digit training's ID
          title: trainingId
          type: string
        trainingKey:
          description: The training's unique key
          title: trainingKey
          type: string
      required:
      - description
      - name
      - organizers
      - registrationSettings
      - timeZone
      - times
      - trainingId
      - trainingKey
      title: Training
      type: object
    TrainingNameDescription:
      description: Details required to update a training's name and description.
      example:
        name: name
        description: description
      properties:
        description:
          description: The training's description
          title: description
          type: string
        name:
          description: The training's name
          title: name
          type: string
      required:
      - name
      title: TrainingNameDescription
      type: object
    TrainingOrganizers:
      description: Details required to update the list of organizers for a training.
      example:
        notifyOrganizers: true
        organizers:
        - 0
        - 0
      properties:
        notifyOrganizers:
          description: Specifies whether an email should be sent notifying of the
            change to the training's organizers.
          title: notifyOrganizers
          type: boolean
        organizers:
          description: List of keys of the organizers for the training.
          items:
            format: int64
            type: integer
          title: organizers
          type: array
      required:
      - organizers
      title: TrainingOrganizers
      type: object
    TrainingReqCreate:
      description: Describes the details used to create a new training.
      example:
        registrationSettings:
          disableWebRegistration: true
          disableConfirmationEmail: true
        times:
        - endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        name: name
        organizers:
        - 0
        - 0
        description: description
        timeZone: timeZone
      properties:
        description:
          description: Description of the training
          title: description
          type: string
        name:
          description: Name of the training
          title: name
          type: string
        organizers:
          description: List of keys of the co-organizers for this training
          items:
            format: int64
            type: integer
          title: organizers
          type: array
        registrationSettings:
          $ref: '#/components/schemas/RegistrationSettings'
        timeZone:
          description: "Time zone of the training. (Must be a valid time zone ID,\
            \ see https://goto-developer.logmein.com/time-zones)"
          title: timeZone
          type: string
        times:
          description: Array with startDate and endDate for the training sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
      required:
      - name
      - timeZone
      - times
      title: TrainingReqCreate
      type: object
    TrainingTimes:
      description: Details required to update the session times of a training.
      example:
        notifyRegistrants: true
        times:
        - endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          startDate: 2000-01-23T04:56:07.000+00:00
        notifyTrainers: true
        timeZone: timeZone
      properties:
        notifyRegistrants:
          description: Notify registrants via email of change to training. Default
            is true
          title: notifyRegistrants
          type: boolean
        notifyTrainers:
          description: Notify trainers via email of change to training. Default is
            true
          title: notifyTrainers
          type: boolean
        timeZone:
          description: "Time zone of the training. Must be a valid time zone ID, see\
            \ https://goto-developer.logmein.com/time-zones"
          title: timeZone
          type: string
        times:
          description: Start and end times for the training sessions
          items:
            $ref: '#/components/schemas/DateTimeRange'
          title: times
          type: array
      required:
      - timeZone
      - times
      title: TrainingTimes
      type: object
x-original-swagger-version: "2.0"
