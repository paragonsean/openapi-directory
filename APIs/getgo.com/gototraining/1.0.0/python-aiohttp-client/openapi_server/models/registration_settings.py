# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RegistrationSettings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_confirmation_email: bool=None, disable_web_registration: bool=None):
        """RegistrationSettings - a model defined in OpenAPI

        :param disable_confirmation_email: The disable_confirmation_email of this RegistrationSettings.
        :param disable_web_registration: The disable_web_registration of this RegistrationSettings.
        """
        self.openapi_types = {
            'disable_confirmation_email': bool,
            'disable_web_registration': bool
        }

        self.attribute_map = {
            'disable_confirmation_email': 'disableConfirmationEmail',
            'disable_web_registration': 'disableWebRegistration'
        }

        self._disable_confirmation_email = disable_confirmation_email
        self._disable_web_registration = disable_web_registration

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RegistrationSettings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RegistrationSettings of this RegistrationSettings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_confirmation_email(self):
        """Gets the disable_confirmation_email of this RegistrationSettings.

        Indicates whether confirmation emails to the training registrants are disabled

        :return: The disable_confirmation_email of this RegistrationSettings.
        :rtype: bool
        """
        return self._disable_confirmation_email

    @disable_confirmation_email.setter
    def disable_confirmation_email(self, disable_confirmation_email):
        """Sets the disable_confirmation_email of this RegistrationSettings.

        Indicates whether confirmation emails to the training registrants are disabled

        :param disable_confirmation_email: The disable_confirmation_email of this RegistrationSettings.
        :type disable_confirmation_email: bool
        """
        if disable_confirmation_email is None:
            raise ValueError("Invalid value for `disable_confirmation_email`, must not be `None`")

        self._disable_confirmation_email = disable_confirmation_email

    @property
    def disable_web_registration(self):
        """Gets the disable_web_registration of this RegistrationSettings.

        Indicates whether the web registration for the training is disabled

        :return: The disable_web_registration of this RegistrationSettings.
        :rtype: bool
        """
        return self._disable_web_registration

    @disable_web_registration.setter
    def disable_web_registration(self, disable_web_registration):
        """Sets the disable_web_registration of this RegistrationSettings.

        Indicates whether the web registration for the training is disabled

        :param disable_web_registration: The disable_web_registration of this RegistrationSettings.
        :type disable_web_registration: bool
        """
        if disable_web_registration is None:
            raise ValueError("Invalid value for `disable_web_registration`, must not be `None`")

        self._disable_web_registration = disable_web_registration
