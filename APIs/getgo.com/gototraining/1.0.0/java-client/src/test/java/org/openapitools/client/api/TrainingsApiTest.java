/*
 * GoToTraining
 * The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.HostUrl;
import org.openapitools.client.model.NotifiedParties;
import org.openapitools.client.model.Organizer;
import org.openapitools.client.model.RegistrationSettings;
import org.openapitools.client.model.Training;
import org.openapitools.client.model.TrainingNameDescription;
import org.openapitools.client.model.TrainingOrganizers;
import org.openapitools.client.model.TrainingReqCreate;
import org.openapitools.client.model.TrainingTimes;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TrainingsApi
 */
@Disabled
public class TrainingsApiTest {

    private final TrainingsApi api = new TrainingsApi();

    /**
     * Delete Training
     *
     * Deletes a scheduled or completed training. For scheduled trainings, it deletes all scheduled sessions of the training. For completed trainings, the sessions remain in the database. No email is sent to organizers or registrants, but when participants attempt to start or join the training, they are directed to a page that states: Training Not Found: The training you are trying to join is no longer available.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelTrainingTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        api.cancelTraining(authorization, organizerKey, trainingKey);
        // TODO: test validations
    }

    /**
     * Get Trainings
     *
     * This call retrieves information on all scheduled trainings for a given organizer. The trainings are returned in the order in which they were created. Completed trainings are not included; ongoing trainings with past sessions are included along with the past sessions. If the organizer does not have any scheduled trainings, the response will be empty.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllTrainingsTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        List<Training> response = api.getAllTrainings(authorization, organizerKey);
        // TODO: test validations
    }

    /**
     * Get Management URL for Training
     *
     * A request for a direct URL to the admin portal for a specific training. The request identifies the organizer and the training; the response provides a link the organizer can use to manage or launch the training in the admin portal. The training organizer will be required to log in. You can schedule and manage the training (e.g., add tests, polls and training materials) from the URL provided in the response.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getManageTrainingURLTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        String response = api.getManageTrainingURL(authorization, organizerKey, trainingKey);
        // TODO: test validations
    }

    /**
     * Get Training Organizers
     *
     * Retrieves organizer details for a specific training. This is only applicable to multi-user accounts with sharing enabled (co-organizers).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getOrganisersForTrainingTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        List<Organizer> response = api.getOrganisersForTraining(authorization, organizerKey, trainingKey);
        // TODO: test validations
    }

    /**
     * Get Start Url
     *
     * Returns a URL that can be used to start a training. When this URL is opened in a web browser, the GoToTraining client will be downloaded and launched and the training will start after the organizer logs in with its credentials.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStartUrlTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        String response = api.getStartUrl(authorization, organizerKey, trainingKey);
        // TODO: test validations
    }

    /**
     * Get Training
     *
     * Uses the organizer key and training key to retrieve information on a scheduled training.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTrainingTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        Training response = api.getTraining(authorization, organizerKey, trainingKey);
        // TODO: test validations
    }

    /**
     * Create Training
     *
     * Schedules a training of one or more sessions. The call requires a training&#39;s name, at least one start and end time, and optionally may include additional sessions, a description, additional organizers (presenters), and registration settings. You can only add organizers to a training if you have a multi-user account. Once a training has been created with this method, you can accept registrations to the training. Registration is for the entire training - all sessions. (The GoToTraining admin site enables you to create trainings that allow participants to register for individual sessions as well as automatically create weekly or monthly events.) Registration settings controls whether you allow web registration for this training, and whether a confirmation email is sent to the registrant following registration. Disabling the confirmation email is an API-only setting. If the user registers through the GoToTraining website, a confirmation email is sent. If the user is manually approved by the training administrator through the GoToTraining web site, the confirmation email is sent. It is recommended that you disable web registration if you disable confirmation emails. The response contains a trainingKey for the scheduled training.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void scheduleTrainingTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        TrainingReqCreate body = null;
        String response = api.scheduleTraining(authorization, organizerKey, body);
        // TODO: test validations
    }

    /**
     * Start Training
     *
     * Returns a URL that can be used to start a training. When this URL is opened in a web browser, the GoToTraining client will be downloaded and launched and the training will start. A login of the organizer is not required.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void startTrainingTest() throws ApiException {
        String authorization = null;
        Long trainingKey = null;
        HostUrl response = api.startTraining(authorization, trainingKey);
        // TODO: test validations
    }

    /**
     * Update Training Organizers
     *
     * Replaces the co-organizers for a specific training. The scheduling organizer cannot be unassigned. Organizers will be notified via email if the notifyOrganizers parameter is set to true. Replaced organizers are not notified. This method is only applicable to multi-user accounts with sharing enabled (co-organizers).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateOrganisersForTrainingTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        TrainingOrganizers body = null;
        api.updateOrganisersForTraining(authorization, organizerKey, trainingKey, body);
        // TODO: test validations
    }

    /**
     * Update Training Registration Settings
     *
     * An API request to automatically enable or disable web registrations and confirmation emails to registrants.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateRegistrationSettingsForTrainingTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        RegistrationSettings body = null;
        api.updateRegistrationSettingsForTraining(authorization, organizerKey, trainingKey, body);
        // TODO: test validations
    }

    /**
     * Update Training Name and Description
     *
     * Request to update a scheduled training name and description.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTrainingNameDescriptionTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        TrainingNameDescription body = null;
        api.updateTrainingNameDescription(authorization, organizerKey, trainingKey, body);
        // TODO: test validations
    }

    /**
     * Update Training Times
     *
     *  A request to update a scheduled training&#39;s start and end times. If the request contains &#39;notifyTrainers &#x3D; true&#39; and &#39;notifyRegistrants &#x3D; true&#39;, both organizers and registrants are notified. The response provides the number of notified trainers and registrants.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTrainingTimesTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        TrainingTimes body = null;
        NotifiedParties response = api.updateTrainingTimes(authorization, organizerKey, trainingKey, body);
        // TODO: test validations
    }

}
