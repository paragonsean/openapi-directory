/*
 * GoToTraining
 * The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Attendee;
import org.openapitools.client.model.DateTimeRange;
import org.openapitools.client.model.Session;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportsApi
 */
@Disabled
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    /**
     * Get Attendance Details
     *
     * This call retrieves a list of registrants from a specific completed training session. The response includes the registrants&#39; email addresses, and if they attended, it includes the duration of each period of their attendance in minutes, and the times at which they joined and left. If a registrant does not attend, they appear at the bottom of the listing with timeInSession &#x3D; 0.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAttendanceDetailsTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long sessionKey = null;
        List<Attendee> response = api.getAttendanceDetails(authorization, organizerKey, sessionKey);
        // TODO: test validations
    }

    /**
     * Get Sessions by Date Range
     *
     * This call returns all session details over a given date range for a given organizer. A session is a completed training event.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSessionDetailsForDateRangeTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        DateTimeRange body = null;
        List<Session> response = api.getSessionDetailsForDateRange(authorization, organizerKey, body);
        // TODO: test validations
    }

    /**
     * Get Sessions By Training
     *
     * This call returns session details for a given training. A session is a completed training event. Each training may contain one or more sessions.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSessionDetailsForTrainingTest() throws ApiException {
        String authorization = null;
        Long organizerKey = null;
        Long trainingKey = null;
        List<Session> response = api.getSessionDetailsForTraining(authorization, organizerKey, trainingKey);
        // TODO: test validations
    }

}
