/**
 * GoToTraining
 * The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Attendance from './model/Attendance';
import Attendee from './model/Attendee';
import DateTimeRange from './model/DateTimeRange';
import HostUrl from './model/HostUrl';
import NotifiedParties from './model/NotifiedParties';
import Organizer from './model/Organizer';
import Recording from './model/Recording';
import RecordingsListForTraining from './model/RecordingsListForTraining';
import Registrant from './model/Registrant';
import RegistrantCreated from './model/RegistrantCreated';
import RegistrantReqCreate from './model/RegistrantReqCreate';
import RegistrationSettings from './model/RegistrationSettings';
import Session from './model/Session';
import Training from './model/Training';
import TrainingNameDescription from './model/TrainingNameDescription';
import TrainingOrganizers from './model/TrainingOrganizers';
import TrainingReqCreate from './model/TrainingReqCreate';
import TrainingTimes from './model/TrainingTimes';
import OrganizersApi from './api/OrganizersApi';
import RecordingsApi from './api/RecordingsApi';
import RegistrationsApi from './api/RegistrationsApi';
import ReportsApi from './api/ReportsApi';
import TrainingsApi from './api/TrainingsApi';


/**
* The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GoToTraining = require('index'); // See note below*.
* var xxxSvc = new GoToTraining.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GoToTraining.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GoToTraining.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GoToTraining.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Attendance model constructor.
     * @property {module:model/Attendance}
     */
    Attendance,

    /**
     * The Attendee model constructor.
     * @property {module:model/Attendee}
     */
    Attendee,

    /**
     * The DateTimeRange model constructor.
     * @property {module:model/DateTimeRange}
     */
    DateTimeRange,

    /**
     * The HostUrl model constructor.
     * @property {module:model/HostUrl}
     */
    HostUrl,

    /**
     * The NotifiedParties model constructor.
     * @property {module:model/NotifiedParties}
     */
    NotifiedParties,

    /**
     * The Organizer model constructor.
     * @property {module:model/Organizer}
     */
    Organizer,

    /**
     * The Recording model constructor.
     * @property {module:model/Recording}
     */
    Recording,

    /**
     * The RecordingsListForTraining model constructor.
     * @property {module:model/RecordingsListForTraining}
     */
    RecordingsListForTraining,

    /**
     * The Registrant model constructor.
     * @property {module:model/Registrant}
     */
    Registrant,

    /**
     * The RegistrantCreated model constructor.
     * @property {module:model/RegistrantCreated}
     */
    RegistrantCreated,

    /**
     * The RegistrantReqCreate model constructor.
     * @property {module:model/RegistrantReqCreate}
     */
    RegistrantReqCreate,

    /**
     * The RegistrationSettings model constructor.
     * @property {module:model/RegistrationSettings}
     */
    RegistrationSettings,

    /**
     * The Session model constructor.
     * @property {module:model/Session}
     */
    Session,

    /**
     * The Training model constructor.
     * @property {module:model/Training}
     */
    Training,

    /**
     * The TrainingNameDescription model constructor.
     * @property {module:model/TrainingNameDescription}
     */
    TrainingNameDescription,

    /**
     * The TrainingOrganizers model constructor.
     * @property {module:model/TrainingOrganizers}
     */
    TrainingOrganizers,

    /**
     * The TrainingReqCreate model constructor.
     * @property {module:model/TrainingReqCreate}
     */
    TrainingReqCreate,

    /**
     * The TrainingTimes model constructor.
     * @property {module:model/TrainingTimes}
     */
    TrainingTimes,

    /**
    * The OrganizersApi service constructor.
    * @property {module:api/OrganizersApi}
    */
    OrganizersApi,

    /**
    * The RecordingsApi service constructor.
    * @property {module:api/RecordingsApi}
    */
    RecordingsApi,

    /**
    * The RegistrationsApi service constructor.
    * @property {module:api/RegistrationsApi}
    */
    RegistrationsApi,

    /**
    * The ReportsApi service constructor.
    * @property {module:api/ReportsApi}
    */
    ReportsApi,

    /**
    * The TrainingsApi service constructor.
    * @property {module:api/TrainingsApi}
    */
    TrainingsApi
};
