/**
 * GoToTraining
 * The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DateTimeRange model module.
 * @module model/DateTimeRange
 * @version 1.0.0
 */
class DateTimeRange {
    /**
     * Constructs a new <code>DateTimeRange</code>.
     * A pair of DateTime values, the first of which serves as a start time and the second as an end time of an interval
     * @alias module:model/DateTimeRange
     * @param endDate {Date} The ending time of an interval
     * @param startDate {Date} The starting time of an interval
     */
    constructor(endDate, startDate) { 
        
        DateTimeRange.initialize(this, endDate, startDate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endDate, startDate) { 
        obj['endDate'] = endDate;
        obj['startDate'] = startDate;
    }

    /**
     * Constructs a <code>DateTimeRange</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DateTimeRange} obj Optional instance to populate.
     * @return {module:model/DateTimeRange} The populated <code>DateTimeRange</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DateTimeRange();

            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DateTimeRange</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DateTimeRange</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DateTimeRange.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

DateTimeRange.RequiredProperties = ["endDate", "startDate"];

/**
 * The ending time of an interval
 * @member {Date} endDate
 */
DateTimeRange.prototype['endDate'] = undefined;

/**
 * The starting time of an interval
 * @member {Date} startDate
 */
DateTimeRange.prototype['startDate'] = undefined;






export default DateTimeRange;

