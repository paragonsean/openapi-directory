/**
 * GoToTraining
 * The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoToTraining);
  }
}(this, function(expect, GoToTraining) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoToTraining.Registrant();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Registrant', function() {
    it('should create an instance of Registrant', function() {
      // uncomment below and update the code to test Registrant
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be.a(GoToTraining.Registrant);
    });

    it('should have the property confirmationUrl (base name: "confirmationUrl")', function() {
      // uncomment below and update the code to test the property confirmationUrl
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

    it('should have the property givenName (base name: "givenName")', function() {
      // uncomment below and update the code to test the property givenName
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

    it('should have the property joinUrl (base name: "joinUrl")', function() {
      // uncomment below and update the code to test the property joinUrl
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

    it('should have the property registrantKey (base name: "registrantKey")', function() {
      // uncomment below and update the code to test the property registrantKey
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

    it('should have the property registrationDate (base name: "registrationDate")', function() {
      // uncomment below and update the code to test the property registrationDate
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

    it('should have the property surname (base name: "surname")', function() {
      // uncomment below and update the code to test the property surname
      //var instance = new GoToTraining.Registrant();
      //expect(instance).to.be();
    });

  });

}));
