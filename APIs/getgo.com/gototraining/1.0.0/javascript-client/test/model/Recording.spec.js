/**
 * GoToTraining
 * The GoToTraining API enables developers to use the stable and robust GoToTraining functionality as the basis for online trainings in a proprietary learning management system. The GoToTraining APIs provide the ability to access the scheduling, registration, management, and reporting functions of GoToTraining from external applications. With the ability to tightly integrate GoToTraining into your learning infrastructure, you can offer your learners a seamless user experience and provide them with a market leading virtual classroom environment.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: developer-support@logmein.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GoToTraining);
  }
}(this, function(expect, GoToTraining) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GoToTraining.Recording();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Recording', function() {
    it('should create an instance of Recording', function() {
      // uncomment below and update the code to test Recording
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be.a(GoToTraining.Recording);
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be();
    });

    it('should have the property downloadUrl (base name: "downloadUrl")', function() {
      // uncomment below and update the code to test the property downloadUrl
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "endDate")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be();
    });

    it('should have the property recordingId (base name: "recordingId")', function() {
      // uncomment below and update the code to test the property recordingId
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be();
    });

    it('should have the property registrationUrl (base name: "registrationUrl")', function() {
      // uncomment below and update the code to test the property registrationUrl
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "startDate")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new GoToTraining.Recording();
      //expect(instance).to.be();
    });

  });

}));
