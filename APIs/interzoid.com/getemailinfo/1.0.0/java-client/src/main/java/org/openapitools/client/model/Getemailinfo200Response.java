/*
 * Interzoid Get Email Information API
 * This API provides validation information for email addresses to aid in deliverability. Syntax, existence of mail servers, and other tests are run to ensure delivery. Additional demographics are provided for the email address as well, including identifying generic, vulgar, education, government, or other entity type email addresses.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Getemailinfo200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:23.295195-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Getemailinfo200Response {
  public static final String SERIALIZED_NAME_CODE = "Code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CREDITS = "Credits";
  @SerializedName(SERIALIZED_NAME_CREDITS)
  private String credits;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_GEOLOCATION = "Geolocation";
  @SerializedName(SERIALIZED_NAME_GEOLOCATION)
  private String geolocation;

  public static final String SERIALIZED_NAME_INFO = "Info";
  @SerializedName(SERIALIZED_NAME_INFO)
  private String info;

  public static final String SERIALIZED_NAME_IS_DISPOSABLE = "IsDisposable";
  @SerializedName(SERIALIZED_NAME_IS_DISPOSABLE)
  private String isDisposable;

  public static final String SERIALIZED_NAME_IS_EDUCATIONAL = "IsEducational";
  @SerializedName(SERIALIZED_NAME_IS_EDUCATIONAL)
  private String isEducational;

  public static final String SERIALIZED_NAME_IS_GENERIC = "IsGeneric";
  @SerializedName(SERIALIZED_NAME_IS_GENERIC)
  private String isGeneric;

  public static final String SERIALIZED_NAME_IS_GOVERNMENT = "IsGovernment";
  @SerializedName(SERIALIZED_NAME_IS_GOVERNMENT)
  private String isGovernment;

  public static final String SERIALIZED_NAME_IS_ORGANIZATIONAL = "IsOrganizational";
  @SerializedName(SERIALIZED_NAME_IS_ORGANIZATIONAL)
  private String isOrganizational;

  public static final String SERIALIZED_NAME_IS_VULGAR = "IsVulgar";
  @SerializedName(SERIALIZED_NAME_IS_VULGAR)
  private String isVulgar;

  public static final String SERIALIZED_NAME_RESPONSE = "Response";
  @SerializedName(SERIALIZED_NAME_RESPONSE)
  private String response;

  public Getemailinfo200Response() {
  }

  public Getemailinfo200Response code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public Getemailinfo200Response credits(String credits) {
    this.credits = credits;
    return this;
  }

  /**
   * Get credits
   * @return credits
   */
  @javax.annotation.Nullable
  public String getCredits() {
    return credits;
  }

  public void setCredits(String credits) {
    this.credits = credits;
  }


  public Getemailinfo200Response email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public Getemailinfo200Response geolocation(String geolocation) {
    this.geolocation = geolocation;
    return this;
  }

  /**
   * Get geolocation
   * @return geolocation
   */
  @javax.annotation.Nullable
  public String getGeolocation() {
    return geolocation;
  }

  public void setGeolocation(String geolocation) {
    this.geolocation = geolocation;
  }


  public Getemailinfo200Response info(String info) {
    this.info = info;
    return this;
  }

  /**
   * Get info
   * @return info
   */
  @javax.annotation.Nullable
  public String getInfo() {
    return info;
  }

  public void setInfo(String info) {
    this.info = info;
  }


  public Getemailinfo200Response isDisposable(String isDisposable) {
    this.isDisposable = isDisposable;
    return this;
  }

  /**
   * Get isDisposable
   * @return isDisposable
   */
  @javax.annotation.Nullable
  public String getIsDisposable() {
    return isDisposable;
  }

  public void setIsDisposable(String isDisposable) {
    this.isDisposable = isDisposable;
  }


  public Getemailinfo200Response isEducational(String isEducational) {
    this.isEducational = isEducational;
    return this;
  }

  /**
   * Get isEducational
   * @return isEducational
   */
  @javax.annotation.Nullable
  public String getIsEducational() {
    return isEducational;
  }

  public void setIsEducational(String isEducational) {
    this.isEducational = isEducational;
  }


  public Getemailinfo200Response isGeneric(String isGeneric) {
    this.isGeneric = isGeneric;
    return this;
  }

  /**
   * Get isGeneric
   * @return isGeneric
   */
  @javax.annotation.Nullable
  public String getIsGeneric() {
    return isGeneric;
  }

  public void setIsGeneric(String isGeneric) {
    this.isGeneric = isGeneric;
  }


  public Getemailinfo200Response isGovernment(String isGovernment) {
    this.isGovernment = isGovernment;
    return this;
  }

  /**
   * Get isGovernment
   * @return isGovernment
   */
  @javax.annotation.Nullable
  public String getIsGovernment() {
    return isGovernment;
  }

  public void setIsGovernment(String isGovernment) {
    this.isGovernment = isGovernment;
  }


  public Getemailinfo200Response isOrganizational(String isOrganizational) {
    this.isOrganizational = isOrganizational;
    return this;
  }

  /**
   * Get isOrganizational
   * @return isOrganizational
   */
  @javax.annotation.Nullable
  public String getIsOrganizational() {
    return isOrganizational;
  }

  public void setIsOrganizational(String isOrganizational) {
    this.isOrganizational = isOrganizational;
  }


  public Getemailinfo200Response isVulgar(String isVulgar) {
    this.isVulgar = isVulgar;
    return this;
  }

  /**
   * Get isVulgar
   * @return isVulgar
   */
  @javax.annotation.Nullable
  public String getIsVulgar() {
    return isVulgar;
  }

  public void setIsVulgar(String isVulgar) {
    this.isVulgar = isVulgar;
  }


  public Getemailinfo200Response response(String response) {
    this.response = response;
    return this;
  }

  /**
   * Get response
   * @return response
   */
  @javax.annotation.Nullable
  public String getResponse() {
    return response;
  }

  public void setResponse(String response) {
    this.response = response;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Getemailinfo200Response getemailinfo200Response = (Getemailinfo200Response) o;
    return Objects.equals(this.code, getemailinfo200Response.code) &&
        Objects.equals(this.credits, getemailinfo200Response.credits) &&
        Objects.equals(this.email, getemailinfo200Response.email) &&
        Objects.equals(this.geolocation, getemailinfo200Response.geolocation) &&
        Objects.equals(this.info, getemailinfo200Response.info) &&
        Objects.equals(this.isDisposable, getemailinfo200Response.isDisposable) &&
        Objects.equals(this.isEducational, getemailinfo200Response.isEducational) &&
        Objects.equals(this.isGeneric, getemailinfo200Response.isGeneric) &&
        Objects.equals(this.isGovernment, getemailinfo200Response.isGovernment) &&
        Objects.equals(this.isOrganizational, getemailinfo200Response.isOrganizational) &&
        Objects.equals(this.isVulgar, getemailinfo200Response.isVulgar) &&
        Objects.equals(this.response, getemailinfo200Response.response);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, credits, email, geolocation, info, isDisposable, isEducational, isGeneric, isGovernment, isOrganizational, isVulgar, response);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Getemailinfo200Response {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    geolocation: ").append(toIndentedString(geolocation)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    isDisposable: ").append(toIndentedString(isDisposable)).append("\n");
    sb.append("    isEducational: ").append(toIndentedString(isEducational)).append("\n");
    sb.append("    isGeneric: ").append(toIndentedString(isGeneric)).append("\n");
    sb.append("    isGovernment: ").append(toIndentedString(isGovernment)).append("\n");
    sb.append("    isOrganizational: ").append(toIndentedString(isOrganizational)).append("\n");
    sb.append("    isVulgar: ").append(toIndentedString(isVulgar)).append("\n");
    sb.append("    response: ").append(toIndentedString(response)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Code");
    openapiFields.add("Credits");
    openapiFields.add("Email");
    openapiFields.add("Geolocation");
    openapiFields.add("Info");
    openapiFields.add("IsDisposable");
    openapiFields.add("IsEducational");
    openapiFields.add("IsGeneric");
    openapiFields.add("IsGovernment");
    openapiFields.add("IsOrganizational");
    openapiFields.add("IsVulgar");
    openapiFields.add("Response");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Getemailinfo200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Getemailinfo200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Getemailinfo200Response is not found in the empty JSON string", Getemailinfo200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Getemailinfo200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Getemailinfo200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Code") != null && !jsonObj.get("Code").isJsonNull()) && !jsonObj.get("Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Code").toString()));
      }
      if ((jsonObj.get("Credits") != null && !jsonObj.get("Credits").isJsonNull()) && !jsonObj.get("Credits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Credits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Credits").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("Geolocation") != null && !jsonObj.get("Geolocation").isJsonNull()) && !jsonObj.get("Geolocation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Geolocation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Geolocation").toString()));
      }
      if ((jsonObj.get("Info") != null && !jsonObj.get("Info").isJsonNull()) && !jsonObj.get("Info").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Info` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Info").toString()));
      }
      if ((jsonObj.get("IsDisposable") != null && !jsonObj.get("IsDisposable").isJsonNull()) && !jsonObj.get("IsDisposable").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IsDisposable` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IsDisposable").toString()));
      }
      if ((jsonObj.get("IsEducational") != null && !jsonObj.get("IsEducational").isJsonNull()) && !jsonObj.get("IsEducational").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IsEducational` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IsEducational").toString()));
      }
      if ((jsonObj.get("IsGeneric") != null && !jsonObj.get("IsGeneric").isJsonNull()) && !jsonObj.get("IsGeneric").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IsGeneric` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IsGeneric").toString()));
      }
      if ((jsonObj.get("IsGovernment") != null && !jsonObj.get("IsGovernment").isJsonNull()) && !jsonObj.get("IsGovernment").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IsGovernment` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IsGovernment").toString()));
      }
      if ((jsonObj.get("IsOrganizational") != null && !jsonObj.get("IsOrganizational").isJsonNull()) && !jsonObj.get("IsOrganizational").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IsOrganizational` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IsOrganizational").toString()));
      }
      if ((jsonObj.get("IsVulgar") != null && !jsonObj.get("IsVulgar").isJsonNull()) && !jsonObj.get("IsVulgar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IsVulgar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IsVulgar").toString()));
      }
      if ((jsonObj.get("Response") != null && !jsonObj.get("Response").isJsonNull()) && !jsonObj.get("Response").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Response` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Response").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Getemailinfo200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Getemailinfo200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Getemailinfo200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Getemailinfo200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<Getemailinfo200Response>() {
           @Override
           public void write(JsonWriter out, Getemailinfo200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Getemailinfo200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Getemailinfo200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Getemailinfo200Response
   * @throws IOException if the JSON string is invalid with respect to Getemailinfo200Response
   */
  public static Getemailinfo200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Getemailinfo200Response.class);
  }

  /**
   * Convert an instance of Getemailinfo200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

