/**
 * Interzoid Get Email Information API
 * This API provides validation information for email addresses to aid in deliverability. Syntax, existence of mail servers, and other tests are run to ensure delivery. Additional demographics are provided for the email address as well, including identifying generic, vulgar, education, government, or other entity type email addresses.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetemailinfo_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetemailinfo_200_response::OAIGetemailinfo_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetemailinfo_200_response::OAIGetemailinfo_200_response() {
    this->initializeModel();
}

OAIGetemailinfo_200_response::~OAIGetemailinfo_200_response() {}

void OAIGetemailinfo_200_response::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_credits_isSet = false;
    m_credits_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_geolocation_isSet = false;
    m_geolocation_isValid = false;

    m_info_isSet = false;
    m_info_isValid = false;

    m_is_disposable_isSet = false;
    m_is_disposable_isValid = false;

    m_is_educational_isSet = false;
    m_is_educational_isValid = false;

    m_is_generic_isSet = false;
    m_is_generic_isValid = false;

    m_is_government_isSet = false;
    m_is_government_isValid = false;

    m_is_organizational_isSet = false;
    m_is_organizational_isValid = false;

    m_is_vulgar_isSet = false;
    m_is_vulgar_isValid = false;

    m_response_isSet = false;
    m_response_isValid = false;
}

void OAIGetemailinfo_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetemailinfo_200_response::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_credits_isValid = ::OpenAPI::fromJsonValue(m_credits, json[QString("Credits")]);
    m_credits_isSet = !json[QString("Credits")].isNull() && m_credits_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_geolocation_isValid = ::OpenAPI::fromJsonValue(m_geolocation, json[QString("Geolocation")]);
    m_geolocation_isSet = !json[QString("Geolocation")].isNull() && m_geolocation_isValid;

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("Info")]);
    m_info_isSet = !json[QString("Info")].isNull() && m_info_isValid;

    m_is_disposable_isValid = ::OpenAPI::fromJsonValue(m_is_disposable, json[QString("IsDisposable")]);
    m_is_disposable_isSet = !json[QString("IsDisposable")].isNull() && m_is_disposable_isValid;

    m_is_educational_isValid = ::OpenAPI::fromJsonValue(m_is_educational, json[QString("IsEducational")]);
    m_is_educational_isSet = !json[QString("IsEducational")].isNull() && m_is_educational_isValid;

    m_is_generic_isValid = ::OpenAPI::fromJsonValue(m_is_generic, json[QString("IsGeneric")]);
    m_is_generic_isSet = !json[QString("IsGeneric")].isNull() && m_is_generic_isValid;

    m_is_government_isValid = ::OpenAPI::fromJsonValue(m_is_government, json[QString("IsGovernment")]);
    m_is_government_isSet = !json[QString("IsGovernment")].isNull() && m_is_government_isValid;

    m_is_organizational_isValid = ::OpenAPI::fromJsonValue(m_is_organizational, json[QString("IsOrganizational")]);
    m_is_organizational_isSet = !json[QString("IsOrganizational")].isNull() && m_is_organizational_isValid;

    m_is_vulgar_isValid = ::OpenAPI::fromJsonValue(m_is_vulgar, json[QString("IsVulgar")]);
    m_is_vulgar_isSet = !json[QString("IsVulgar")].isNull() && m_is_vulgar_isValid;

    m_response_isValid = ::OpenAPI::fromJsonValue(m_response, json[QString("Response")]);
    m_response_isSet = !json[QString("Response")].isNull() && m_response_isValid;
}

QString OAIGetemailinfo_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetemailinfo_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_credits_isSet) {
        obj.insert(QString("Credits"), ::OpenAPI::toJsonValue(m_credits));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_geolocation_isSet) {
        obj.insert(QString("Geolocation"), ::OpenAPI::toJsonValue(m_geolocation));
    }
    if (m_info_isSet) {
        obj.insert(QString("Info"), ::OpenAPI::toJsonValue(m_info));
    }
    if (m_is_disposable_isSet) {
        obj.insert(QString("IsDisposable"), ::OpenAPI::toJsonValue(m_is_disposable));
    }
    if (m_is_educational_isSet) {
        obj.insert(QString("IsEducational"), ::OpenAPI::toJsonValue(m_is_educational));
    }
    if (m_is_generic_isSet) {
        obj.insert(QString("IsGeneric"), ::OpenAPI::toJsonValue(m_is_generic));
    }
    if (m_is_government_isSet) {
        obj.insert(QString("IsGovernment"), ::OpenAPI::toJsonValue(m_is_government));
    }
    if (m_is_organizational_isSet) {
        obj.insert(QString("IsOrganizational"), ::OpenAPI::toJsonValue(m_is_organizational));
    }
    if (m_is_vulgar_isSet) {
        obj.insert(QString("IsVulgar"), ::OpenAPI::toJsonValue(m_is_vulgar));
    }
    if (m_response_isSet) {
        obj.insert(QString("Response"), ::OpenAPI::toJsonValue(m_response));
    }
    return obj;
}

QString OAIGetemailinfo_200_response::getCode() const {
    return m_code;
}
void OAIGetemailinfo_200_response::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIGetemailinfo_200_response::is_code_Set() const{
    return m_code_isSet;
}

bool OAIGetemailinfo_200_response::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIGetemailinfo_200_response::getCredits() const {
    return m_credits;
}
void OAIGetemailinfo_200_response::setCredits(const QString &credits) {
    m_credits = credits;
    m_credits_isSet = true;
}

bool OAIGetemailinfo_200_response::is_credits_Set() const{
    return m_credits_isSet;
}

bool OAIGetemailinfo_200_response::is_credits_Valid() const{
    return m_credits_isValid;
}

QString OAIGetemailinfo_200_response::getEmail() const {
    return m_email;
}
void OAIGetemailinfo_200_response::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIGetemailinfo_200_response::is_email_Set() const{
    return m_email_isSet;
}

bool OAIGetemailinfo_200_response::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIGetemailinfo_200_response::getGeolocation() const {
    return m_geolocation;
}
void OAIGetemailinfo_200_response::setGeolocation(const QString &geolocation) {
    m_geolocation = geolocation;
    m_geolocation_isSet = true;
}

bool OAIGetemailinfo_200_response::is_geolocation_Set() const{
    return m_geolocation_isSet;
}

bool OAIGetemailinfo_200_response::is_geolocation_Valid() const{
    return m_geolocation_isValid;
}

QString OAIGetemailinfo_200_response::getInfo() const {
    return m_info;
}
void OAIGetemailinfo_200_response::setInfo(const QString &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAIGetemailinfo_200_response::is_info_Set() const{
    return m_info_isSet;
}

bool OAIGetemailinfo_200_response::is_info_Valid() const{
    return m_info_isValid;
}

QString OAIGetemailinfo_200_response::getIsDisposable() const {
    return m_is_disposable;
}
void OAIGetemailinfo_200_response::setIsDisposable(const QString &is_disposable) {
    m_is_disposable = is_disposable;
    m_is_disposable_isSet = true;
}

bool OAIGetemailinfo_200_response::is_is_disposable_Set() const{
    return m_is_disposable_isSet;
}

bool OAIGetemailinfo_200_response::is_is_disposable_Valid() const{
    return m_is_disposable_isValid;
}

QString OAIGetemailinfo_200_response::getIsEducational() const {
    return m_is_educational;
}
void OAIGetemailinfo_200_response::setIsEducational(const QString &is_educational) {
    m_is_educational = is_educational;
    m_is_educational_isSet = true;
}

bool OAIGetemailinfo_200_response::is_is_educational_Set() const{
    return m_is_educational_isSet;
}

bool OAIGetemailinfo_200_response::is_is_educational_Valid() const{
    return m_is_educational_isValid;
}

QString OAIGetemailinfo_200_response::getIsGeneric() const {
    return m_is_generic;
}
void OAIGetemailinfo_200_response::setIsGeneric(const QString &is_generic) {
    m_is_generic = is_generic;
    m_is_generic_isSet = true;
}

bool OAIGetemailinfo_200_response::is_is_generic_Set() const{
    return m_is_generic_isSet;
}

bool OAIGetemailinfo_200_response::is_is_generic_Valid() const{
    return m_is_generic_isValid;
}

QString OAIGetemailinfo_200_response::getIsGovernment() const {
    return m_is_government;
}
void OAIGetemailinfo_200_response::setIsGovernment(const QString &is_government) {
    m_is_government = is_government;
    m_is_government_isSet = true;
}

bool OAIGetemailinfo_200_response::is_is_government_Set() const{
    return m_is_government_isSet;
}

bool OAIGetemailinfo_200_response::is_is_government_Valid() const{
    return m_is_government_isValid;
}

QString OAIGetemailinfo_200_response::getIsOrganizational() const {
    return m_is_organizational;
}
void OAIGetemailinfo_200_response::setIsOrganizational(const QString &is_organizational) {
    m_is_organizational = is_organizational;
    m_is_organizational_isSet = true;
}

bool OAIGetemailinfo_200_response::is_is_organizational_Set() const{
    return m_is_organizational_isSet;
}

bool OAIGetemailinfo_200_response::is_is_organizational_Valid() const{
    return m_is_organizational_isValid;
}

QString OAIGetemailinfo_200_response::getIsVulgar() const {
    return m_is_vulgar;
}
void OAIGetemailinfo_200_response::setIsVulgar(const QString &is_vulgar) {
    m_is_vulgar = is_vulgar;
    m_is_vulgar_isSet = true;
}

bool OAIGetemailinfo_200_response::is_is_vulgar_Set() const{
    return m_is_vulgar_isSet;
}

bool OAIGetemailinfo_200_response::is_is_vulgar_Valid() const{
    return m_is_vulgar_isValid;
}

QString OAIGetemailinfo_200_response::getResponse() const {
    return m_response;
}
void OAIGetemailinfo_200_response::setResponse(const QString &response) {
    m_response = response;
    m_response_isSet = true;
}

bool OAIGetemailinfo_200_response::is_response_Set() const{
    return m_response_isSet;
}

bool OAIGetemailinfo_200_response::is_response_Valid() const{
    return m_response_isValid;
}

bool OAIGetemailinfo_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_geolocation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_disposable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_educational_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_generic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_government_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_organizational_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_vulgar_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_response_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetemailinfo_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
