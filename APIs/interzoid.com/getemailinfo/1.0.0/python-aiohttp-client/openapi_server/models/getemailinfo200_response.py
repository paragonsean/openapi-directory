# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Getemailinfo200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, credits: str=None, email: str=None, geolocation: str=None, info: str=None, is_disposable: str=None, is_educational: str=None, is_generic: str=None, is_government: str=None, is_organizational: str=None, is_vulgar: str=None, response: str=None):
        """Getemailinfo200Response - a model defined in OpenAPI

        :param code: The code of this Getemailinfo200Response.
        :param credits: The credits of this Getemailinfo200Response.
        :param email: The email of this Getemailinfo200Response.
        :param geolocation: The geolocation of this Getemailinfo200Response.
        :param info: The info of this Getemailinfo200Response.
        :param is_disposable: The is_disposable of this Getemailinfo200Response.
        :param is_educational: The is_educational of this Getemailinfo200Response.
        :param is_generic: The is_generic of this Getemailinfo200Response.
        :param is_government: The is_government of this Getemailinfo200Response.
        :param is_organizational: The is_organizational of this Getemailinfo200Response.
        :param is_vulgar: The is_vulgar of this Getemailinfo200Response.
        :param response: The response of this Getemailinfo200Response.
        """
        self.openapi_types = {
            'code': str,
            'credits': str,
            'email': str,
            'geolocation': str,
            'info': str,
            'is_disposable': str,
            'is_educational': str,
            'is_generic': str,
            'is_government': str,
            'is_organizational': str,
            'is_vulgar': str,
            'response': str
        }

        self.attribute_map = {
            'code': 'Code',
            'credits': 'Credits',
            'email': 'Email',
            'geolocation': 'Geolocation',
            'info': 'Info',
            'is_disposable': 'IsDisposable',
            'is_educational': 'IsEducational',
            'is_generic': 'IsGeneric',
            'is_government': 'IsGovernment',
            'is_organizational': 'IsOrganizational',
            'is_vulgar': 'IsVulgar',
            'response': 'Response'
        }

        self._code = code
        self._credits = credits
        self._email = email
        self._geolocation = geolocation
        self._info = info
        self._is_disposable = is_disposable
        self._is_educational = is_educational
        self._is_generic = is_generic
        self._is_government = is_government
        self._is_organizational = is_organizational
        self._is_vulgar = is_vulgar
        self._response = response

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Getemailinfo200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getemailinfo_200_response of this Getemailinfo200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Getemailinfo200Response.


        :return: The code of this Getemailinfo200Response.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Getemailinfo200Response.


        :param code: The code of this Getemailinfo200Response.
        :type code: str
        """

        self._code = code

    @property
    def credits(self):
        """Gets the credits of this Getemailinfo200Response.


        :return: The credits of this Getemailinfo200Response.
        :rtype: str
        """
        return self._credits

    @credits.setter
    def credits(self, credits):
        """Sets the credits of this Getemailinfo200Response.


        :param credits: The credits of this Getemailinfo200Response.
        :type credits: str
        """

        self._credits = credits

    @property
    def email(self):
        """Gets the email of this Getemailinfo200Response.


        :return: The email of this Getemailinfo200Response.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Getemailinfo200Response.


        :param email: The email of this Getemailinfo200Response.
        :type email: str
        """

        self._email = email

    @property
    def geolocation(self):
        """Gets the geolocation of this Getemailinfo200Response.


        :return: The geolocation of this Getemailinfo200Response.
        :rtype: str
        """
        return self._geolocation

    @geolocation.setter
    def geolocation(self, geolocation):
        """Sets the geolocation of this Getemailinfo200Response.


        :param geolocation: The geolocation of this Getemailinfo200Response.
        :type geolocation: str
        """

        self._geolocation = geolocation

    @property
    def info(self):
        """Gets the info of this Getemailinfo200Response.


        :return: The info of this Getemailinfo200Response.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this Getemailinfo200Response.


        :param info: The info of this Getemailinfo200Response.
        :type info: str
        """

        self._info = info

    @property
    def is_disposable(self):
        """Gets the is_disposable of this Getemailinfo200Response.


        :return: The is_disposable of this Getemailinfo200Response.
        :rtype: str
        """
        return self._is_disposable

    @is_disposable.setter
    def is_disposable(self, is_disposable):
        """Sets the is_disposable of this Getemailinfo200Response.


        :param is_disposable: The is_disposable of this Getemailinfo200Response.
        :type is_disposable: str
        """

        self._is_disposable = is_disposable

    @property
    def is_educational(self):
        """Gets the is_educational of this Getemailinfo200Response.


        :return: The is_educational of this Getemailinfo200Response.
        :rtype: str
        """
        return self._is_educational

    @is_educational.setter
    def is_educational(self, is_educational):
        """Sets the is_educational of this Getemailinfo200Response.


        :param is_educational: The is_educational of this Getemailinfo200Response.
        :type is_educational: str
        """

        self._is_educational = is_educational

    @property
    def is_generic(self):
        """Gets the is_generic of this Getemailinfo200Response.


        :return: The is_generic of this Getemailinfo200Response.
        :rtype: str
        """
        return self._is_generic

    @is_generic.setter
    def is_generic(self, is_generic):
        """Sets the is_generic of this Getemailinfo200Response.


        :param is_generic: The is_generic of this Getemailinfo200Response.
        :type is_generic: str
        """

        self._is_generic = is_generic

    @property
    def is_government(self):
        """Gets the is_government of this Getemailinfo200Response.


        :return: The is_government of this Getemailinfo200Response.
        :rtype: str
        """
        return self._is_government

    @is_government.setter
    def is_government(self, is_government):
        """Sets the is_government of this Getemailinfo200Response.


        :param is_government: The is_government of this Getemailinfo200Response.
        :type is_government: str
        """

        self._is_government = is_government

    @property
    def is_organizational(self):
        """Gets the is_organizational of this Getemailinfo200Response.


        :return: The is_organizational of this Getemailinfo200Response.
        :rtype: str
        """
        return self._is_organizational

    @is_organizational.setter
    def is_organizational(self, is_organizational):
        """Sets the is_organizational of this Getemailinfo200Response.


        :param is_organizational: The is_organizational of this Getemailinfo200Response.
        :type is_organizational: str
        """

        self._is_organizational = is_organizational

    @property
    def is_vulgar(self):
        """Gets the is_vulgar of this Getemailinfo200Response.


        :return: The is_vulgar of this Getemailinfo200Response.
        :rtype: str
        """
        return self._is_vulgar

    @is_vulgar.setter
    def is_vulgar(self, is_vulgar):
        """Sets the is_vulgar of this Getemailinfo200Response.


        :param is_vulgar: The is_vulgar of this Getemailinfo200Response.
        :type is_vulgar: str
        """

        self._is_vulgar = is_vulgar

    @property
    def response(self):
        """Gets the response of this Getemailinfo200Response.


        :return: The response of this Getemailinfo200Response.
        :rtype: str
        """
        return self._response

    @response.setter
    def response(self, response):
        """Sets the response of this Getemailinfo200Response.


        :param response: The response of this Getemailinfo200Response.
        :type response: str
        """

        self._response = response
