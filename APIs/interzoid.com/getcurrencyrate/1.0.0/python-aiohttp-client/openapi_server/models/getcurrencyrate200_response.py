# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Getcurrencyrate200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, country: str=None, credits: str=None, name: str=None, rate: str=None, symbol: str=None):
        """Getcurrencyrate200Response - a model defined in OpenAPI

        :param code: The code of this Getcurrencyrate200Response.
        :param country: The country of this Getcurrencyrate200Response.
        :param credits: The credits of this Getcurrencyrate200Response.
        :param name: The name of this Getcurrencyrate200Response.
        :param rate: The rate of this Getcurrencyrate200Response.
        :param symbol: The symbol of this Getcurrencyrate200Response.
        """
        self.openapi_types = {
            'code': str,
            'country': str,
            'credits': str,
            'name': str,
            'rate': str,
            'symbol': str
        }

        self.attribute_map = {
            'code': 'Code',
            'country': 'Country',
            'credits': 'Credits',
            'name': 'Name',
            'rate': 'Rate',
            'symbol': 'Symbol'
        }

        self._code = code
        self._country = country
        self._credits = credits
        self._name = name
        self._rate = rate
        self._symbol = symbol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Getcurrencyrate200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getcurrencyrate_200_response of this Getcurrencyrate200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this Getcurrencyrate200Response.


        :return: The code of this Getcurrencyrate200Response.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Getcurrencyrate200Response.


        :param code: The code of this Getcurrencyrate200Response.
        :type code: str
        """

        self._code = code

    @property
    def country(self):
        """Gets the country of this Getcurrencyrate200Response.


        :return: The country of this Getcurrencyrate200Response.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this Getcurrencyrate200Response.


        :param country: The country of this Getcurrencyrate200Response.
        :type country: str
        """

        self._country = country

    @property
    def credits(self):
        """Gets the credits of this Getcurrencyrate200Response.


        :return: The credits of this Getcurrencyrate200Response.
        :rtype: str
        """
        return self._credits

    @credits.setter
    def credits(self, credits):
        """Sets the credits of this Getcurrencyrate200Response.


        :param credits: The credits of this Getcurrencyrate200Response.
        :type credits: str
        """

        self._credits = credits

    @property
    def name(self):
        """Gets the name of this Getcurrencyrate200Response.


        :return: The name of this Getcurrencyrate200Response.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Getcurrencyrate200Response.


        :param name: The name of this Getcurrencyrate200Response.
        :type name: str
        """

        self._name = name

    @property
    def rate(self):
        """Gets the rate of this Getcurrencyrate200Response.


        :return: The rate of this Getcurrencyrate200Response.
        :rtype: str
        """
        return self._rate

    @rate.setter
    def rate(self, rate):
        """Sets the rate of this Getcurrencyrate200Response.


        :param rate: The rate of this Getcurrencyrate200Response.
        :type rate: str
        """

        self._rate = rate

    @property
    def symbol(self):
        """Gets the symbol of this Getcurrencyrate200Response.


        :return: The symbol of this Getcurrencyrate200Response.
        :rtype: str
        """
        return self._symbol

    @symbol.setter
    def symbol(self, symbol):
        """Sets the symbol of this Getcurrencyrate200Response.


        :param symbol: The symbol of this Getcurrencyrate200Response.
        :type symbol: str
        """

        self._symbol = symbol
