/**
 * Interzoid Convert Currency Rate API
 * This API enables you to convert an amount of one currency into another currency using current foreign exchange rates.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Convertcurrency200Response from '../model/Convertcurrency200Response';

/**
* LiveCurrencyRateConversion service.
* @module api/LiveCurrencyRateConversionApi
* @version 1.0.0
*/
export default class LiveCurrencyRateConversionApi {

    /**
    * Constructs a new LiveCurrencyRateConversionApi. 
    * @alias module:api/LiveCurrencyRateConversionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the convertcurrency operation.
     * @callback module:api/LiveCurrencyRateConversionApi~convertcurrencyCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Convertcurrency200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Converts amount in one currency to that of another
     * Provide an amount in one currency (EUR, GBP, CNY, JPY, AUD, etc.), and also a second currency to convert it to. The API will return the result using current foreign exchange rates. See the API home page for a list of all supported currencies.
     * @param {String} license Your Interzoid license API key. Register at www.interzoid.com/register
     * @param {String} from Currency symbol for the converted from amount
     * @param {String} to Currency symbol for the converted to amount
     * @param {String} amount The amount of currency to be converted
     * @param {module:api/LiveCurrencyRateConversionApi~convertcurrencyCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Convertcurrency200Response}
     */
    convertcurrency(license, from, to, amount, callback) {
      let postBody = null;
      // verify the required parameter 'license' is set
      if (license === undefined || license === null) {
        throw new Error("Missing the required parameter 'license' when calling convertcurrency");
      }
      // verify the required parameter 'from' is set
      if (from === undefined || from === null) {
        throw new Error("Missing the required parameter 'from' when calling convertcurrency");
      }
      // verify the required parameter 'to' is set
      if (to === undefined || to === null) {
        throw new Error("Missing the required parameter 'to' when calling convertcurrency");
      }
      // verify the required parameter 'amount' is set
      if (amount === undefined || amount === null) {
        throw new Error("Missing the required parameter 'amount' when calling convertcurrency");
      }

      let pathParams = {
      };
      let queryParams = {
        'license': license,
        'from': from,
        'to': to,
        'amount': amount
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Convertcurrency200Response;
      return this.apiClient.callApi(
        '/convertcurrency', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
