/**
 * Interzoid State Data Standardization API
 * This API provides the two-letter state abbreviation (or the province abbreviation for Canada) for the purposes of standardizing state name data, improving query results, analytics, and data merging.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Getstateabbreviation200Response from '../model/Getstateabbreviation200Response';

/**
* StateDataStandardization service.
* @module api/StateDataStandardizationApi
* @version 1.0.0
*/
export default class StateDataStandardizationApi {

    /**
    * Constructs a new StateDataStandardizationApi. 
    * @alias module:api/StateDataStandardizationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getstateabbreviation operation.
     * @callback module:api/StateDataStandardizationApi~getstateabbreviationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Getstateabbreviation200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a two-letter abbreviation for a state or province name data
     * Gets a two-letter abbreviation for a state or province given a permutation of state or province data.
     * @param {String} license Your Interzoid license API key. Register at www.interzoid.com/register
     * @param {String} state State (or province) name from which to retrieve the two letter abbreviation.
     * @param {module:api/StateDataStandardizationApi~getstateabbreviationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Getstateabbreviation200Response}
     */
    getstateabbreviation(license, state, callback) {
      let postBody = null;
      // verify the required parameter 'license' is set
      if (license === undefined || license === null) {
        throw new Error("Missing the required parameter 'license' when calling getstateabbreviation");
      }
      // verify the required parameter 'state' is set
      if (state === undefined || state === null) {
        throw new Error("Missing the required parameter 'state' when calling getstateabbreviation");
      }

      let pathParams = {
      };
      let queryParams = {
        'license': license,
        'state': state
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Getstateabbreviation200Response;
      return this.apiClient.callApi(
        '/getstateabbreviation', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
