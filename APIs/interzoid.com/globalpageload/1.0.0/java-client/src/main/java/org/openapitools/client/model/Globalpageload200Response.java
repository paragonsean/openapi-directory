/*
 * Interzoid Global Page Load Performance API
 * This API provides a timed, browser-simulated page load function (or a measured API call) from the specified geography using a server from that geography.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Globalpageload200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:16.570448-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Globalpageload200Response {
  public static final String SERIALIZED_NAME_CODE = "Code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CONTENTS = "Contents";
  @SerializedName(SERIALIZED_NAME_CONTENTS)
  private String contents;

  public static final String SERIALIZED_NAME_CREDITS = "Credits";
  @SerializedName(SERIALIZED_NAME_CREDITS)
  private String credits;

  public static final String SERIALIZED_NAME_ORIGIN = "Origin";
  @SerializedName(SERIALIZED_NAME_ORIGIN)
  private String origin;

  public static final String SERIALIZED_NAME_PAGE_RESPONSE_STATUS = "PageResponseStatus";
  @SerializedName(SERIALIZED_NAME_PAGE_RESPONSE_STATUS)
  private String pageResponseStatus;

  public static final String SERIALIZED_NAME_SECONDS = "Seconds";
  @SerializedName(SERIALIZED_NAME_SECONDS)
  private String seconds;

  public Globalpageload200Response() {
  }

  public Globalpageload200Response code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public Globalpageload200Response contents(String contents) {
    this.contents = contents;
    return this;
  }

  /**
   * Get contents
   * @return contents
   */
  @javax.annotation.Nullable
  public String getContents() {
    return contents;
  }

  public void setContents(String contents) {
    this.contents = contents;
  }


  public Globalpageload200Response credits(String credits) {
    this.credits = credits;
    return this;
  }

  /**
   * Get credits
   * @return credits
   */
  @javax.annotation.Nullable
  public String getCredits() {
    return credits;
  }

  public void setCredits(String credits) {
    this.credits = credits;
  }


  public Globalpageload200Response origin(String origin) {
    this.origin = origin;
    return this;
  }

  /**
   * Get origin
   * @return origin
   */
  @javax.annotation.Nullable
  public String getOrigin() {
    return origin;
  }

  public void setOrigin(String origin) {
    this.origin = origin;
  }


  public Globalpageload200Response pageResponseStatus(String pageResponseStatus) {
    this.pageResponseStatus = pageResponseStatus;
    return this;
  }

  /**
   * Get pageResponseStatus
   * @return pageResponseStatus
   */
  @javax.annotation.Nullable
  public String getPageResponseStatus() {
    return pageResponseStatus;
  }

  public void setPageResponseStatus(String pageResponseStatus) {
    this.pageResponseStatus = pageResponseStatus;
  }


  public Globalpageload200Response seconds(String seconds) {
    this.seconds = seconds;
    return this;
  }

  /**
   * Get seconds
   * @return seconds
   */
  @javax.annotation.Nullable
  public String getSeconds() {
    return seconds;
  }

  public void setSeconds(String seconds) {
    this.seconds = seconds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Globalpageload200Response globalpageload200Response = (Globalpageload200Response) o;
    return Objects.equals(this.code, globalpageload200Response.code) &&
        Objects.equals(this.contents, globalpageload200Response.contents) &&
        Objects.equals(this.credits, globalpageload200Response.credits) &&
        Objects.equals(this.origin, globalpageload200Response.origin) &&
        Objects.equals(this.pageResponseStatus, globalpageload200Response.pageResponseStatus) &&
        Objects.equals(this.seconds, globalpageload200Response.seconds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, contents, credits, origin, pageResponseStatus, seconds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Globalpageload200Response {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    contents: ").append(toIndentedString(contents)).append("\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    pageResponseStatus: ").append(toIndentedString(pageResponseStatus)).append("\n");
    sb.append("    seconds: ").append(toIndentedString(seconds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Code");
    openapiFields.add("Contents");
    openapiFields.add("Credits");
    openapiFields.add("Origin");
    openapiFields.add("PageResponseStatus");
    openapiFields.add("Seconds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Globalpageload200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Globalpageload200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Globalpageload200Response is not found in the empty JSON string", Globalpageload200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Globalpageload200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Globalpageload200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Code") != null && !jsonObj.get("Code").isJsonNull()) && !jsonObj.get("Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Code").toString()));
      }
      if ((jsonObj.get("Contents") != null && !jsonObj.get("Contents").isJsonNull()) && !jsonObj.get("Contents").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Contents` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Contents").toString()));
      }
      if ((jsonObj.get("Credits") != null && !jsonObj.get("Credits").isJsonNull()) && !jsonObj.get("Credits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Credits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Credits").toString()));
      }
      if ((jsonObj.get("Origin") != null && !jsonObj.get("Origin").isJsonNull()) && !jsonObj.get("Origin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Origin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Origin").toString()));
      }
      if ((jsonObj.get("PageResponseStatus") != null && !jsonObj.get("PageResponseStatus").isJsonNull()) && !jsonObj.get("PageResponseStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PageResponseStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PageResponseStatus").toString()));
      }
      if ((jsonObj.get("Seconds") != null && !jsonObj.get("Seconds").isJsonNull()) && !jsonObj.get("Seconds").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Seconds` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Seconds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Globalpageload200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Globalpageload200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Globalpageload200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Globalpageload200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<Globalpageload200Response>() {
           @Override
           public void write(JsonWriter out, Globalpageload200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Globalpageload200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Globalpageload200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Globalpageload200Response
   * @throws IOException if the JSON string is invalid with respect to Globalpageload200Response
   */
  public static Globalpageload200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Globalpageload200Response.class);
  }

  /**
   * Convert an instance of Globalpageload200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

