/**
 * Interzoid Get Global Phone Number Information API
 * This API provides geographic information for a global telephone number, including city and country information, primary languages spoken, and mobile device identification.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetglobalnumberinfo_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetglobalnumberinfo_200_response::OAIGetglobalnumberinfo_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetglobalnumberinfo_200_response::OAIGetglobalnumberinfo_200_response() {
    this->initializeModel();
}

OAIGetglobalnumberinfo_200_response::~OAIGetglobalnumberinfo_200_response() {}

void OAIGetglobalnumberinfo_200_response::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_credits_isSet = false;
    m_credits_isValid = false;

    m_language2_isSet = false;
    m_language2_isValid = false;

    m_language3_isSet = false;
    m_language3_isValid = false;

    m_mobile_isSet = false;
    m_mobile_isValid = false;

    m_primary_city_isSet = false;
    m_primary_city_isValid = false;

    m_primary_language_isSet = false;
    m_primary_language_isValid = false;

    m_region_isSet = false;
    m_region_isValid = false;

    m_wealth_isSet = false;
    m_wealth_isValid = false;
}

void OAIGetglobalnumberinfo_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetglobalnumberinfo_200_response::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("Country")]);
    m_country_isSet = !json[QString("Country")].isNull() && m_country_isValid;

    m_credits_isValid = ::OpenAPI::fromJsonValue(m_credits, json[QString("Credits")]);
    m_credits_isSet = !json[QString("Credits")].isNull() && m_credits_isValid;

    m_language2_isValid = ::OpenAPI::fromJsonValue(m_language2, json[QString("Language2")]);
    m_language2_isSet = !json[QString("Language2")].isNull() && m_language2_isValid;

    m_language3_isValid = ::OpenAPI::fromJsonValue(m_language3, json[QString("Language3")]);
    m_language3_isSet = !json[QString("Language3")].isNull() && m_language3_isValid;

    m_mobile_isValid = ::OpenAPI::fromJsonValue(m_mobile, json[QString("Mobile")]);
    m_mobile_isSet = !json[QString("Mobile")].isNull() && m_mobile_isValid;

    m_primary_city_isValid = ::OpenAPI::fromJsonValue(m_primary_city, json[QString("PrimaryCity")]);
    m_primary_city_isSet = !json[QString("PrimaryCity")].isNull() && m_primary_city_isValid;

    m_primary_language_isValid = ::OpenAPI::fromJsonValue(m_primary_language, json[QString("PrimaryLanguage")]);
    m_primary_language_isSet = !json[QString("PrimaryLanguage")].isNull() && m_primary_language_isValid;

    m_region_isValid = ::OpenAPI::fromJsonValue(m_region, json[QString("Region")]);
    m_region_isSet = !json[QString("Region")].isNull() && m_region_isValid;

    m_wealth_isValid = ::OpenAPI::fromJsonValue(m_wealth, json[QString("Wealth")]);
    m_wealth_isSet = !json[QString("Wealth")].isNull() && m_wealth_isValid;
}

QString OAIGetglobalnumberinfo_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetglobalnumberinfo_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_country_isSet) {
        obj.insert(QString("Country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_credits_isSet) {
        obj.insert(QString("Credits"), ::OpenAPI::toJsonValue(m_credits));
    }
    if (m_language2_isSet) {
        obj.insert(QString("Language2"), ::OpenAPI::toJsonValue(m_language2));
    }
    if (m_language3_isSet) {
        obj.insert(QString("Language3"), ::OpenAPI::toJsonValue(m_language3));
    }
    if (m_mobile_isSet) {
        obj.insert(QString("Mobile"), ::OpenAPI::toJsonValue(m_mobile));
    }
    if (m_primary_city_isSet) {
        obj.insert(QString("PrimaryCity"), ::OpenAPI::toJsonValue(m_primary_city));
    }
    if (m_primary_language_isSet) {
        obj.insert(QString("PrimaryLanguage"), ::OpenAPI::toJsonValue(m_primary_language));
    }
    if (m_region_isSet) {
        obj.insert(QString("Region"), ::OpenAPI::toJsonValue(m_region));
    }
    if (m_wealth_isSet) {
        obj.insert(QString("Wealth"), ::OpenAPI::toJsonValue(m_wealth));
    }
    return obj;
}

QString OAIGetglobalnumberinfo_200_response::getCode() const {
    return m_code;
}
void OAIGetglobalnumberinfo_200_response::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_code_Set() const{
    return m_code_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getCountry() const {
    return m_country;
}
void OAIGetglobalnumberinfo_200_response::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_country_Set() const{
    return m_country_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getCredits() const {
    return m_credits;
}
void OAIGetglobalnumberinfo_200_response::setCredits(const QString &credits) {
    m_credits = credits;
    m_credits_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_credits_Set() const{
    return m_credits_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_credits_Valid() const{
    return m_credits_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getLanguage2() const {
    return m_language2;
}
void OAIGetglobalnumberinfo_200_response::setLanguage2(const QString &language2) {
    m_language2 = language2;
    m_language2_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_language2_Set() const{
    return m_language2_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_language2_Valid() const{
    return m_language2_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getLanguage3() const {
    return m_language3;
}
void OAIGetglobalnumberinfo_200_response::setLanguage3(const QString &language3) {
    m_language3 = language3;
    m_language3_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_language3_Set() const{
    return m_language3_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_language3_Valid() const{
    return m_language3_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getMobile() const {
    return m_mobile;
}
void OAIGetglobalnumberinfo_200_response::setMobile(const QString &mobile) {
    m_mobile = mobile;
    m_mobile_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_mobile_Set() const{
    return m_mobile_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_mobile_Valid() const{
    return m_mobile_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getPrimaryCity() const {
    return m_primary_city;
}
void OAIGetglobalnumberinfo_200_response::setPrimaryCity(const QString &primary_city) {
    m_primary_city = primary_city;
    m_primary_city_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_primary_city_Set() const{
    return m_primary_city_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_primary_city_Valid() const{
    return m_primary_city_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getPrimaryLanguage() const {
    return m_primary_language;
}
void OAIGetglobalnumberinfo_200_response::setPrimaryLanguage(const QString &primary_language) {
    m_primary_language = primary_language;
    m_primary_language_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_primary_language_Set() const{
    return m_primary_language_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_primary_language_Valid() const{
    return m_primary_language_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getRegion() const {
    return m_region;
}
void OAIGetglobalnumberinfo_200_response::setRegion(const QString &region) {
    m_region = region;
    m_region_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_region_Set() const{
    return m_region_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_region_Valid() const{
    return m_region_isValid;
}

QString OAIGetglobalnumberinfo_200_response::getWealth() const {
    return m_wealth;
}
void OAIGetglobalnumberinfo_200_response::setWealth(const QString &wealth) {
    m_wealth = wealth;
    m_wealth_isSet = true;
}

bool OAIGetglobalnumberinfo_200_response::is_wealth_Set() const{
    return m_wealth_isSet;
}

bool OAIGetglobalnumberinfo_200_response::is_wealth_Valid() const{
    return m_wealth_isValid;
}

bool OAIGetglobalnumberinfo_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_language3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mobile_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_primary_language_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wealth_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetglobalnumberinfo_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
