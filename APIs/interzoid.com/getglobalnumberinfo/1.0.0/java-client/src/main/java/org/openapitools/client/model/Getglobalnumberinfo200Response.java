/*
 * Interzoid Get Global Phone Number Information API
 * This API provides geographic information for a global telephone number, including city and country information, primary languages spoken, and mobile device identification.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Getglobalnumberinfo200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:09.973201-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Getglobalnumberinfo200Response {
  public static final String SERIALIZED_NAME_CODE = "Code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_COUNTRY = "Country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CREDITS = "Credits";
  @SerializedName(SERIALIZED_NAME_CREDITS)
  private String credits;

  public static final String SERIALIZED_NAME_LANGUAGE2 = "Language2";
  @SerializedName(SERIALIZED_NAME_LANGUAGE2)
  private String language2;

  public static final String SERIALIZED_NAME_LANGUAGE3 = "Language3";
  @SerializedName(SERIALIZED_NAME_LANGUAGE3)
  private String language3;

  public static final String SERIALIZED_NAME_MOBILE = "Mobile";
  @SerializedName(SERIALIZED_NAME_MOBILE)
  private String mobile;

  public static final String SERIALIZED_NAME_PRIMARY_CITY = "PrimaryCity";
  @SerializedName(SERIALIZED_NAME_PRIMARY_CITY)
  private String primaryCity;

  public static final String SERIALIZED_NAME_PRIMARY_LANGUAGE = "PrimaryLanguage";
  @SerializedName(SERIALIZED_NAME_PRIMARY_LANGUAGE)
  private String primaryLanguage;

  public static final String SERIALIZED_NAME_REGION = "Region";
  @SerializedName(SERIALIZED_NAME_REGION)
  private String region;

  public static final String SERIALIZED_NAME_WEALTH = "Wealth";
  @SerializedName(SERIALIZED_NAME_WEALTH)
  private String wealth;

  public Getglobalnumberinfo200Response() {
  }

  public Getglobalnumberinfo200Response code(String code) {
    this.code = code;
    return this;
  }

  /**
   * Get code
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public Getglobalnumberinfo200Response country(String country) {
    this.country = country;
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }


  public Getglobalnumberinfo200Response credits(String credits) {
    this.credits = credits;
    return this;
  }

  /**
   * Get credits
   * @return credits
   */
  @javax.annotation.Nullable
  public String getCredits() {
    return credits;
  }

  public void setCredits(String credits) {
    this.credits = credits;
  }


  public Getglobalnumberinfo200Response language2(String language2) {
    this.language2 = language2;
    return this;
  }

  /**
   * Get language2
   * @return language2
   */
  @javax.annotation.Nullable
  public String getLanguage2() {
    return language2;
  }

  public void setLanguage2(String language2) {
    this.language2 = language2;
  }


  public Getglobalnumberinfo200Response language3(String language3) {
    this.language3 = language3;
    return this;
  }

  /**
   * Get language3
   * @return language3
   */
  @javax.annotation.Nullable
  public String getLanguage3() {
    return language3;
  }

  public void setLanguage3(String language3) {
    this.language3 = language3;
  }


  public Getglobalnumberinfo200Response mobile(String mobile) {
    this.mobile = mobile;
    return this;
  }

  /**
   * Get mobile
   * @return mobile
   */
  @javax.annotation.Nullable
  public String getMobile() {
    return mobile;
  }

  public void setMobile(String mobile) {
    this.mobile = mobile;
  }


  public Getglobalnumberinfo200Response primaryCity(String primaryCity) {
    this.primaryCity = primaryCity;
    return this;
  }

  /**
   * Get primaryCity
   * @return primaryCity
   */
  @javax.annotation.Nullable
  public String getPrimaryCity() {
    return primaryCity;
  }

  public void setPrimaryCity(String primaryCity) {
    this.primaryCity = primaryCity;
  }


  public Getglobalnumberinfo200Response primaryLanguage(String primaryLanguage) {
    this.primaryLanguage = primaryLanguage;
    return this;
  }

  /**
   * Get primaryLanguage
   * @return primaryLanguage
   */
  @javax.annotation.Nullable
  public String getPrimaryLanguage() {
    return primaryLanguage;
  }

  public void setPrimaryLanguage(String primaryLanguage) {
    this.primaryLanguage = primaryLanguage;
  }


  public Getglobalnumberinfo200Response region(String region) {
    this.region = region;
    return this;
  }

  /**
   * Get region
   * @return region
   */
  @javax.annotation.Nullable
  public String getRegion() {
    return region;
  }

  public void setRegion(String region) {
    this.region = region;
  }


  public Getglobalnumberinfo200Response wealth(String wealth) {
    this.wealth = wealth;
    return this;
  }

  /**
   * Get wealth
   * @return wealth
   */
  @javax.annotation.Nullable
  public String getWealth() {
    return wealth;
  }

  public void setWealth(String wealth) {
    this.wealth = wealth;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Getglobalnumberinfo200Response getglobalnumberinfo200Response = (Getglobalnumberinfo200Response) o;
    return Objects.equals(this.code, getglobalnumberinfo200Response.code) &&
        Objects.equals(this.country, getglobalnumberinfo200Response.country) &&
        Objects.equals(this.credits, getglobalnumberinfo200Response.credits) &&
        Objects.equals(this.language2, getglobalnumberinfo200Response.language2) &&
        Objects.equals(this.language3, getglobalnumberinfo200Response.language3) &&
        Objects.equals(this.mobile, getglobalnumberinfo200Response.mobile) &&
        Objects.equals(this.primaryCity, getglobalnumberinfo200Response.primaryCity) &&
        Objects.equals(this.primaryLanguage, getglobalnumberinfo200Response.primaryLanguage) &&
        Objects.equals(this.region, getglobalnumberinfo200Response.region) &&
        Objects.equals(this.wealth, getglobalnumberinfo200Response.wealth);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, country, credits, language2, language3, mobile, primaryCity, primaryLanguage, region, wealth);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Getglobalnumberinfo200Response {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("    language2: ").append(toIndentedString(language2)).append("\n");
    sb.append("    language3: ").append(toIndentedString(language3)).append("\n");
    sb.append("    mobile: ").append(toIndentedString(mobile)).append("\n");
    sb.append("    primaryCity: ").append(toIndentedString(primaryCity)).append("\n");
    sb.append("    primaryLanguage: ").append(toIndentedString(primaryLanguage)).append("\n");
    sb.append("    region: ").append(toIndentedString(region)).append("\n");
    sb.append("    wealth: ").append(toIndentedString(wealth)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Code");
    openapiFields.add("Country");
    openapiFields.add("Credits");
    openapiFields.add("Language2");
    openapiFields.add("Language3");
    openapiFields.add("Mobile");
    openapiFields.add("PrimaryCity");
    openapiFields.add("PrimaryLanguage");
    openapiFields.add("Region");
    openapiFields.add("Wealth");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Getglobalnumberinfo200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Getglobalnumberinfo200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Getglobalnumberinfo200Response is not found in the empty JSON string", Getglobalnumberinfo200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Getglobalnumberinfo200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Getglobalnumberinfo200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Code") != null && !jsonObj.get("Code").isJsonNull()) && !jsonObj.get("Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Code").toString()));
      }
      if ((jsonObj.get("Country") != null && !jsonObj.get("Country").isJsonNull()) && !jsonObj.get("Country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Country").toString()));
      }
      if ((jsonObj.get("Credits") != null && !jsonObj.get("Credits").isJsonNull()) && !jsonObj.get("Credits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Credits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Credits").toString()));
      }
      if ((jsonObj.get("Language2") != null && !jsonObj.get("Language2").isJsonNull()) && !jsonObj.get("Language2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Language2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Language2").toString()));
      }
      if ((jsonObj.get("Language3") != null && !jsonObj.get("Language3").isJsonNull()) && !jsonObj.get("Language3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Language3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Language3").toString()));
      }
      if ((jsonObj.get("Mobile") != null && !jsonObj.get("Mobile").isJsonNull()) && !jsonObj.get("Mobile").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Mobile` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Mobile").toString()));
      }
      if ((jsonObj.get("PrimaryCity") != null && !jsonObj.get("PrimaryCity").isJsonNull()) && !jsonObj.get("PrimaryCity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrimaryCity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrimaryCity").toString()));
      }
      if ((jsonObj.get("PrimaryLanguage") != null && !jsonObj.get("PrimaryLanguage").isJsonNull()) && !jsonObj.get("PrimaryLanguage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrimaryLanguage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrimaryLanguage").toString()));
      }
      if ((jsonObj.get("Region") != null && !jsonObj.get("Region").isJsonNull()) && !jsonObj.get("Region").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Region` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Region").toString()));
      }
      if ((jsonObj.get("Wealth") != null && !jsonObj.get("Wealth").isJsonNull()) && !jsonObj.get("Wealth").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Wealth` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Wealth").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Getglobalnumberinfo200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Getglobalnumberinfo200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Getglobalnumberinfo200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Getglobalnumberinfo200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<Getglobalnumberinfo200Response>() {
           @Override
           public void write(JsonWriter out, Getglobalnumberinfo200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Getglobalnumberinfo200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Getglobalnumberinfo200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Getglobalnumberinfo200Response
   * @throws IOException if the JSON string is invalid with respect to Getglobalnumberinfo200Response
   */
  public static Getglobalnumberinfo200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Getglobalnumberinfo200Response.class);
  }

  /**
   * Convert an instance of Getglobalnumberinfo200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

