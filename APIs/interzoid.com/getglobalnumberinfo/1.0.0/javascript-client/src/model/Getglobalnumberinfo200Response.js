/**
 * Interzoid Get Global Phone Number Information API
 * This API provides geographic information for a global telephone number, including city and country information, primary languages spoken, and mobile device identification.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Getglobalnumberinfo200Response model module.
 * @module model/Getglobalnumberinfo200Response
 * @version 1.0.0
 */
class Getglobalnumberinfo200Response {
    /**
     * Constructs a new <code>Getglobalnumberinfo200Response</code>.
     * @alias module:model/Getglobalnumberinfo200Response
     */
    constructor() { 
        
        Getglobalnumberinfo200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Getglobalnumberinfo200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Getglobalnumberinfo200Response} obj Optional instance to populate.
     * @return {module:model/Getglobalnumberinfo200Response} The populated <code>Getglobalnumberinfo200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Getglobalnumberinfo200Response();

            if (data.hasOwnProperty('Code')) {
                obj['Code'] = ApiClient.convertToType(data['Code'], 'String');
            }
            if (data.hasOwnProperty('Country')) {
                obj['Country'] = ApiClient.convertToType(data['Country'], 'String');
            }
            if (data.hasOwnProperty('Credits')) {
                obj['Credits'] = ApiClient.convertToType(data['Credits'], 'String');
            }
            if (data.hasOwnProperty('Language2')) {
                obj['Language2'] = ApiClient.convertToType(data['Language2'], 'String');
            }
            if (data.hasOwnProperty('Language3')) {
                obj['Language3'] = ApiClient.convertToType(data['Language3'], 'String');
            }
            if (data.hasOwnProperty('Mobile')) {
                obj['Mobile'] = ApiClient.convertToType(data['Mobile'], 'String');
            }
            if (data.hasOwnProperty('PrimaryCity')) {
                obj['PrimaryCity'] = ApiClient.convertToType(data['PrimaryCity'], 'String');
            }
            if (data.hasOwnProperty('PrimaryLanguage')) {
                obj['PrimaryLanguage'] = ApiClient.convertToType(data['PrimaryLanguage'], 'String');
            }
            if (data.hasOwnProperty('Region')) {
                obj['Region'] = ApiClient.convertToType(data['Region'], 'String');
            }
            if (data.hasOwnProperty('Wealth')) {
                obj['Wealth'] = ApiClient.convertToType(data['Wealth'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Getglobalnumberinfo200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Getglobalnumberinfo200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Code'] && !(typeof data['Code'] === 'string' || data['Code'] instanceof String)) {
            throw new Error("Expected the field `Code` to be a primitive type in the JSON string but got " + data['Code']);
        }
        // ensure the json data is a string
        if (data['Country'] && !(typeof data['Country'] === 'string' || data['Country'] instanceof String)) {
            throw new Error("Expected the field `Country` to be a primitive type in the JSON string but got " + data['Country']);
        }
        // ensure the json data is a string
        if (data['Credits'] && !(typeof data['Credits'] === 'string' || data['Credits'] instanceof String)) {
            throw new Error("Expected the field `Credits` to be a primitive type in the JSON string but got " + data['Credits']);
        }
        // ensure the json data is a string
        if (data['Language2'] && !(typeof data['Language2'] === 'string' || data['Language2'] instanceof String)) {
            throw new Error("Expected the field `Language2` to be a primitive type in the JSON string but got " + data['Language2']);
        }
        // ensure the json data is a string
        if (data['Language3'] && !(typeof data['Language3'] === 'string' || data['Language3'] instanceof String)) {
            throw new Error("Expected the field `Language3` to be a primitive type in the JSON string but got " + data['Language3']);
        }
        // ensure the json data is a string
        if (data['Mobile'] && !(typeof data['Mobile'] === 'string' || data['Mobile'] instanceof String)) {
            throw new Error("Expected the field `Mobile` to be a primitive type in the JSON string but got " + data['Mobile']);
        }
        // ensure the json data is a string
        if (data['PrimaryCity'] && !(typeof data['PrimaryCity'] === 'string' || data['PrimaryCity'] instanceof String)) {
            throw new Error("Expected the field `PrimaryCity` to be a primitive type in the JSON string but got " + data['PrimaryCity']);
        }
        // ensure the json data is a string
        if (data['PrimaryLanguage'] && !(typeof data['PrimaryLanguage'] === 'string' || data['PrimaryLanguage'] instanceof String)) {
            throw new Error("Expected the field `PrimaryLanguage` to be a primitive type in the JSON string but got " + data['PrimaryLanguage']);
        }
        // ensure the json data is a string
        if (data['Region'] && !(typeof data['Region'] === 'string' || data['Region'] instanceof String)) {
            throw new Error("Expected the field `Region` to be a primitive type in the JSON string but got " + data['Region']);
        }
        // ensure the json data is a string
        if (data['Wealth'] && !(typeof data['Wealth'] === 'string' || data['Wealth'] instanceof String)) {
            throw new Error("Expected the field `Wealth` to be a primitive type in the JSON string but got " + data['Wealth']);
        }

        return true;
    }


}



/**
 * @member {String} Code
 */
Getglobalnumberinfo200Response.prototype['Code'] = undefined;

/**
 * @member {String} Country
 */
Getglobalnumberinfo200Response.prototype['Country'] = undefined;

/**
 * @member {String} Credits
 */
Getglobalnumberinfo200Response.prototype['Credits'] = undefined;

/**
 * @member {String} Language2
 */
Getglobalnumberinfo200Response.prototype['Language2'] = undefined;

/**
 * @member {String} Language3
 */
Getglobalnumberinfo200Response.prototype['Language3'] = undefined;

/**
 * @member {String} Mobile
 */
Getglobalnumberinfo200Response.prototype['Mobile'] = undefined;

/**
 * @member {String} PrimaryCity
 */
Getglobalnumberinfo200Response.prototype['PrimaryCity'] = undefined;

/**
 * @member {String} PrimaryLanguage
 */
Getglobalnumberinfo200Response.prototype['PrimaryLanguage'] = undefined;

/**
 * @member {String} Region
 */
Getglobalnumberinfo200Response.prototype['Region'] = undefined;

/**
 * @member {String} Wealth
 */
Getglobalnumberinfo200Response.prototype['Wealth'] = undefined;






export default Getglobalnumberinfo200Response;

