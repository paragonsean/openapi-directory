/**
 * Interzoid Get Weather By Zip Code API
 * This API provides current weather information for US Cities, including temperatures, wind speeds, wind direction, relative humidity, and visibility.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Getweatherzipcode200Response from '../model/Getweatherzipcode200Response';

/**
* WeatherByZipCode service.
* @module api/WeatherByZipCodeApi
* @version 1.0.0
*/
export default class WeatherByZipCodeApi {

    /**
    * Constructs a new WeatherByZipCodeApi. 
    * @alias module:api/WeatherByZipCodeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getweatherzipcode operation.
     * @callback module:api/WeatherByZipCodeApi~getweatherzipcodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Getweatherzipcode200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets current weather information for a US zip code
     * Use a US zip code to retrieve current weather information
     * @param {String} license Your Interzoid license API key. Register at www.interzoid.com/register
     * @param {String} zip Zip code for weather information
     * @param {module:api/WeatherByZipCodeApi~getweatherzipcodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Getweatherzipcode200Response}
     */
    getweatherzipcode(license, zip, callback) {
      let postBody = null;
      // verify the required parameter 'license' is set
      if (license === undefined || license === null) {
        throw new Error("Missing the required parameter 'license' when calling getweatherzipcode");
      }
      // verify the required parameter 'zip' is set
      if (zip === undefined || zip === null) {
        throw new Error("Missing the required parameter 'zip' when calling getweatherzipcode");
      }

      let pathParams = {
      };
      let queryParams = {
        'license': license,
        'zip': zip
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Getweatherzipcode200Response;
      return this.apiClient.callApi(
        '/getweatherzipcode', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
