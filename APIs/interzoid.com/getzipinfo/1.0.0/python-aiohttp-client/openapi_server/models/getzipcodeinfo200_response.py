# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Getzipcodeinfo200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area_square_miles: str=None, city: str=None, code: str=None, credits: str=None, elderly_household_percent: str=None, farmer_household_percent: str=None, income_percent100k: str=None, income_percent200k: str=None, income_percent50k: str=None, latitude: str=None, longitude: str=None, married_household_percent: str=None, population: str=None, state: str=None, zip_code: str=None):
        """Getzipcodeinfo200Response - a model defined in OpenAPI

        :param area_square_miles: The area_square_miles of this Getzipcodeinfo200Response.
        :param city: The city of this Getzipcodeinfo200Response.
        :param code: The code of this Getzipcodeinfo200Response.
        :param credits: The credits of this Getzipcodeinfo200Response.
        :param elderly_household_percent: The elderly_household_percent of this Getzipcodeinfo200Response.
        :param farmer_household_percent: The farmer_household_percent of this Getzipcodeinfo200Response.
        :param income_percent100k: The income_percent100k of this Getzipcodeinfo200Response.
        :param income_percent200k: The income_percent200k of this Getzipcodeinfo200Response.
        :param income_percent50k: The income_percent50k of this Getzipcodeinfo200Response.
        :param latitude: The latitude of this Getzipcodeinfo200Response.
        :param longitude: The longitude of this Getzipcodeinfo200Response.
        :param married_household_percent: The married_household_percent of this Getzipcodeinfo200Response.
        :param population: The population of this Getzipcodeinfo200Response.
        :param state: The state of this Getzipcodeinfo200Response.
        :param zip_code: The zip_code of this Getzipcodeinfo200Response.
        """
        self.openapi_types = {
            'area_square_miles': str,
            'city': str,
            'code': str,
            'credits': str,
            'elderly_household_percent': str,
            'farmer_household_percent': str,
            'income_percent100k': str,
            'income_percent200k': str,
            'income_percent50k': str,
            'latitude': str,
            'longitude': str,
            'married_household_percent': str,
            'population': str,
            'state': str,
            'zip_code': str
        }

        self.attribute_map = {
            'area_square_miles': 'AreaSquareMiles',
            'city': 'City',
            'code': 'Code',
            'credits': 'Credits',
            'elderly_household_percent': 'ElderlyHouseholdPercent',
            'farmer_household_percent': 'FarmerHouseholdPercent',
            'income_percent100k': 'IncomePercent100k',
            'income_percent200k': 'IncomePercent200k',
            'income_percent50k': 'IncomePercent50k',
            'latitude': 'Latitude',
            'longitude': 'Longitude',
            'married_household_percent': 'MarriedHouseholdPercent',
            'population': 'Population',
            'state': 'State',
            'zip_code': 'ZipCode'
        }

        self._area_square_miles = area_square_miles
        self._city = city
        self._code = code
        self._credits = credits
        self._elderly_household_percent = elderly_household_percent
        self._farmer_household_percent = farmer_household_percent
        self._income_percent100k = income_percent100k
        self._income_percent200k = income_percent200k
        self._income_percent50k = income_percent50k
        self._latitude = latitude
        self._longitude = longitude
        self._married_household_percent = married_household_percent
        self._population = population
        self._state = state
        self._zip_code = zip_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Getzipcodeinfo200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getzipcodeinfo_200_response of this Getzipcodeinfo200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area_square_miles(self):
        """Gets the area_square_miles of this Getzipcodeinfo200Response.


        :return: The area_square_miles of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._area_square_miles

    @area_square_miles.setter
    def area_square_miles(self, area_square_miles):
        """Sets the area_square_miles of this Getzipcodeinfo200Response.


        :param area_square_miles: The area_square_miles of this Getzipcodeinfo200Response.
        :type area_square_miles: str
        """

        self._area_square_miles = area_square_miles

    @property
    def city(self):
        """Gets the city of this Getzipcodeinfo200Response.


        :return: The city of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Getzipcodeinfo200Response.


        :param city: The city of this Getzipcodeinfo200Response.
        :type city: str
        """

        self._city = city

    @property
    def code(self):
        """Gets the code of this Getzipcodeinfo200Response.


        :return: The code of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Getzipcodeinfo200Response.


        :param code: The code of this Getzipcodeinfo200Response.
        :type code: str
        """

        self._code = code

    @property
    def credits(self):
        """Gets the credits of this Getzipcodeinfo200Response.


        :return: The credits of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._credits

    @credits.setter
    def credits(self, credits):
        """Sets the credits of this Getzipcodeinfo200Response.


        :param credits: The credits of this Getzipcodeinfo200Response.
        :type credits: str
        """

        self._credits = credits

    @property
    def elderly_household_percent(self):
        """Gets the elderly_household_percent of this Getzipcodeinfo200Response.


        :return: The elderly_household_percent of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._elderly_household_percent

    @elderly_household_percent.setter
    def elderly_household_percent(self, elderly_household_percent):
        """Sets the elderly_household_percent of this Getzipcodeinfo200Response.


        :param elderly_household_percent: The elderly_household_percent of this Getzipcodeinfo200Response.
        :type elderly_household_percent: str
        """

        self._elderly_household_percent = elderly_household_percent

    @property
    def farmer_household_percent(self):
        """Gets the farmer_household_percent of this Getzipcodeinfo200Response.


        :return: The farmer_household_percent of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._farmer_household_percent

    @farmer_household_percent.setter
    def farmer_household_percent(self, farmer_household_percent):
        """Sets the farmer_household_percent of this Getzipcodeinfo200Response.


        :param farmer_household_percent: The farmer_household_percent of this Getzipcodeinfo200Response.
        :type farmer_household_percent: str
        """

        self._farmer_household_percent = farmer_household_percent

    @property
    def income_percent100k(self):
        """Gets the income_percent100k of this Getzipcodeinfo200Response.


        :return: The income_percent100k of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._income_percent100k

    @income_percent100k.setter
    def income_percent100k(self, income_percent100k):
        """Sets the income_percent100k of this Getzipcodeinfo200Response.


        :param income_percent100k: The income_percent100k of this Getzipcodeinfo200Response.
        :type income_percent100k: str
        """

        self._income_percent100k = income_percent100k

    @property
    def income_percent200k(self):
        """Gets the income_percent200k of this Getzipcodeinfo200Response.


        :return: The income_percent200k of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._income_percent200k

    @income_percent200k.setter
    def income_percent200k(self, income_percent200k):
        """Sets the income_percent200k of this Getzipcodeinfo200Response.


        :param income_percent200k: The income_percent200k of this Getzipcodeinfo200Response.
        :type income_percent200k: str
        """

        self._income_percent200k = income_percent200k

    @property
    def income_percent50k(self):
        """Gets the income_percent50k of this Getzipcodeinfo200Response.


        :return: The income_percent50k of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._income_percent50k

    @income_percent50k.setter
    def income_percent50k(self, income_percent50k):
        """Sets the income_percent50k of this Getzipcodeinfo200Response.


        :param income_percent50k: The income_percent50k of this Getzipcodeinfo200Response.
        :type income_percent50k: str
        """

        self._income_percent50k = income_percent50k

    @property
    def latitude(self):
        """Gets the latitude of this Getzipcodeinfo200Response.


        :return: The latitude of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this Getzipcodeinfo200Response.


        :param latitude: The latitude of this Getzipcodeinfo200Response.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this Getzipcodeinfo200Response.


        :return: The longitude of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this Getzipcodeinfo200Response.


        :param longitude: The longitude of this Getzipcodeinfo200Response.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def married_household_percent(self):
        """Gets the married_household_percent of this Getzipcodeinfo200Response.


        :return: The married_household_percent of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._married_household_percent

    @married_household_percent.setter
    def married_household_percent(self, married_household_percent):
        """Sets the married_household_percent of this Getzipcodeinfo200Response.


        :param married_household_percent: The married_household_percent of this Getzipcodeinfo200Response.
        :type married_household_percent: str
        """

        self._married_household_percent = married_household_percent

    @property
    def population(self):
        """Gets the population of this Getzipcodeinfo200Response.


        :return: The population of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._population

    @population.setter
    def population(self, population):
        """Sets the population of this Getzipcodeinfo200Response.


        :param population: The population of this Getzipcodeinfo200Response.
        :type population: str
        """

        self._population = population

    @property
    def state(self):
        """Gets the state of this Getzipcodeinfo200Response.


        :return: The state of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Getzipcodeinfo200Response.


        :param state: The state of this Getzipcodeinfo200Response.
        :type state: str
        """

        self._state = state

    @property
    def zip_code(self):
        """Gets the zip_code of this Getzipcodeinfo200Response.


        :return: The zip_code of this Getzipcodeinfo200Response.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this Getzipcodeinfo200Response.


        :param zip_code: The zip_code of this Getzipcodeinfo200Response.
        :type zip_code: str
        """

        self._zip_code = zip_code
