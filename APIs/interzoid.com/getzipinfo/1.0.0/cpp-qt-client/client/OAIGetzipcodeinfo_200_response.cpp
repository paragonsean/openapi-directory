/**
 * Interzoid Zip Code Detailed Info API
 * This API provides detailed information for a given zip code, including city, state, latitude, longitude, area size, and various population demographics.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetzipcodeinfo_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetzipcodeinfo_200_response::OAIGetzipcodeinfo_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetzipcodeinfo_200_response::OAIGetzipcodeinfo_200_response() {
    this->initializeModel();
}

OAIGetzipcodeinfo_200_response::~OAIGetzipcodeinfo_200_response() {}

void OAIGetzipcodeinfo_200_response::initializeModel() {

    m_area_square_miles_isSet = false;
    m_area_square_miles_isValid = false;

    m_city_isSet = false;
    m_city_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_credits_isSet = false;
    m_credits_isValid = false;

    m_elderly_household_percent_isSet = false;
    m_elderly_household_percent_isValid = false;

    m_farmer_household_percent_isSet = false;
    m_farmer_household_percent_isValid = false;

    m_income_percent100k_isSet = false;
    m_income_percent100k_isValid = false;

    m_income_percent200k_isSet = false;
    m_income_percent200k_isValid = false;

    m_income_percent50k_isSet = false;
    m_income_percent50k_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;

    m_married_household_percent_isSet = false;
    m_married_household_percent_isValid = false;

    m_population_isSet = false;
    m_population_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_zip_code_isSet = false;
    m_zip_code_isValid = false;
}

void OAIGetzipcodeinfo_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetzipcodeinfo_200_response::fromJsonObject(QJsonObject json) {

    m_area_square_miles_isValid = ::OpenAPI::fromJsonValue(m_area_square_miles, json[QString("AreaSquareMiles")]);
    m_area_square_miles_isSet = !json[QString("AreaSquareMiles")].isNull() && m_area_square_miles_isValid;

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("City")]);
    m_city_isSet = !json[QString("City")].isNull() && m_city_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_credits_isValid = ::OpenAPI::fromJsonValue(m_credits, json[QString("Credits")]);
    m_credits_isSet = !json[QString("Credits")].isNull() && m_credits_isValid;

    m_elderly_household_percent_isValid = ::OpenAPI::fromJsonValue(m_elderly_household_percent, json[QString("ElderlyHouseholdPercent")]);
    m_elderly_household_percent_isSet = !json[QString("ElderlyHouseholdPercent")].isNull() && m_elderly_household_percent_isValid;

    m_farmer_household_percent_isValid = ::OpenAPI::fromJsonValue(m_farmer_household_percent, json[QString("FarmerHouseholdPercent")]);
    m_farmer_household_percent_isSet = !json[QString("FarmerHouseholdPercent")].isNull() && m_farmer_household_percent_isValid;

    m_income_percent100k_isValid = ::OpenAPI::fromJsonValue(m_income_percent100k, json[QString("IncomePercent100k")]);
    m_income_percent100k_isSet = !json[QString("IncomePercent100k")].isNull() && m_income_percent100k_isValid;

    m_income_percent200k_isValid = ::OpenAPI::fromJsonValue(m_income_percent200k, json[QString("IncomePercent200k")]);
    m_income_percent200k_isSet = !json[QString("IncomePercent200k")].isNull() && m_income_percent200k_isValid;

    m_income_percent50k_isValid = ::OpenAPI::fromJsonValue(m_income_percent50k, json[QString("IncomePercent50k")]);
    m_income_percent50k_isSet = !json[QString("IncomePercent50k")].isNull() && m_income_percent50k_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("Latitude")]);
    m_latitude_isSet = !json[QString("Latitude")].isNull() && m_latitude_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("Longitude")]);
    m_longitude_isSet = !json[QString("Longitude")].isNull() && m_longitude_isValid;

    m_married_household_percent_isValid = ::OpenAPI::fromJsonValue(m_married_household_percent, json[QString("MarriedHouseholdPercent")]);
    m_married_household_percent_isSet = !json[QString("MarriedHouseholdPercent")].isNull() && m_married_household_percent_isValid;

    m_population_isValid = ::OpenAPI::fromJsonValue(m_population, json[QString("Population")]);
    m_population_isSet = !json[QString("Population")].isNull() && m_population_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_zip_code_isValid = ::OpenAPI::fromJsonValue(m_zip_code, json[QString("ZipCode")]);
    m_zip_code_isSet = !json[QString("ZipCode")].isNull() && m_zip_code_isValid;
}

QString OAIGetzipcodeinfo_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetzipcodeinfo_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_area_square_miles_isSet) {
        obj.insert(QString("AreaSquareMiles"), ::OpenAPI::toJsonValue(m_area_square_miles));
    }
    if (m_city_isSet) {
        obj.insert(QString("City"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_code_isSet) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_credits_isSet) {
        obj.insert(QString("Credits"), ::OpenAPI::toJsonValue(m_credits));
    }
    if (m_elderly_household_percent_isSet) {
        obj.insert(QString("ElderlyHouseholdPercent"), ::OpenAPI::toJsonValue(m_elderly_household_percent));
    }
    if (m_farmer_household_percent_isSet) {
        obj.insert(QString("FarmerHouseholdPercent"), ::OpenAPI::toJsonValue(m_farmer_household_percent));
    }
    if (m_income_percent100k_isSet) {
        obj.insert(QString("IncomePercent100k"), ::OpenAPI::toJsonValue(m_income_percent100k));
    }
    if (m_income_percent200k_isSet) {
        obj.insert(QString("IncomePercent200k"), ::OpenAPI::toJsonValue(m_income_percent200k));
    }
    if (m_income_percent50k_isSet) {
        obj.insert(QString("IncomePercent50k"), ::OpenAPI::toJsonValue(m_income_percent50k));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("Latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("Longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    if (m_married_household_percent_isSet) {
        obj.insert(QString("MarriedHouseholdPercent"), ::OpenAPI::toJsonValue(m_married_household_percent));
    }
    if (m_population_isSet) {
        obj.insert(QString("Population"), ::OpenAPI::toJsonValue(m_population));
    }
    if (m_state_isSet) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_zip_code_isSet) {
        obj.insert(QString("ZipCode"), ::OpenAPI::toJsonValue(m_zip_code));
    }
    return obj;
}

QString OAIGetzipcodeinfo_200_response::getAreaSquareMiles() const {
    return m_area_square_miles;
}
void OAIGetzipcodeinfo_200_response::setAreaSquareMiles(const QString &area_square_miles) {
    m_area_square_miles = area_square_miles;
    m_area_square_miles_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_area_square_miles_Set() const{
    return m_area_square_miles_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_area_square_miles_Valid() const{
    return m_area_square_miles_isValid;
}

QString OAIGetzipcodeinfo_200_response::getCity() const {
    return m_city;
}
void OAIGetzipcodeinfo_200_response::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_city_Set() const{
    return m_city_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIGetzipcodeinfo_200_response::getCode() const {
    return m_code;
}
void OAIGetzipcodeinfo_200_response::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_code_Set() const{
    return m_code_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIGetzipcodeinfo_200_response::getCredits() const {
    return m_credits;
}
void OAIGetzipcodeinfo_200_response::setCredits(const QString &credits) {
    m_credits = credits;
    m_credits_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_credits_Set() const{
    return m_credits_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_credits_Valid() const{
    return m_credits_isValid;
}

QString OAIGetzipcodeinfo_200_response::getElderlyHouseholdPercent() const {
    return m_elderly_household_percent;
}
void OAIGetzipcodeinfo_200_response::setElderlyHouseholdPercent(const QString &elderly_household_percent) {
    m_elderly_household_percent = elderly_household_percent;
    m_elderly_household_percent_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_elderly_household_percent_Set() const{
    return m_elderly_household_percent_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_elderly_household_percent_Valid() const{
    return m_elderly_household_percent_isValid;
}

QString OAIGetzipcodeinfo_200_response::getFarmerHouseholdPercent() const {
    return m_farmer_household_percent;
}
void OAIGetzipcodeinfo_200_response::setFarmerHouseholdPercent(const QString &farmer_household_percent) {
    m_farmer_household_percent = farmer_household_percent;
    m_farmer_household_percent_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_farmer_household_percent_Set() const{
    return m_farmer_household_percent_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_farmer_household_percent_Valid() const{
    return m_farmer_household_percent_isValid;
}

QString OAIGetzipcodeinfo_200_response::getIncomePercent100k() const {
    return m_income_percent100k;
}
void OAIGetzipcodeinfo_200_response::setIncomePercent100k(const QString &income_percent100k) {
    m_income_percent100k = income_percent100k;
    m_income_percent100k_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_income_percent100k_Set() const{
    return m_income_percent100k_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_income_percent100k_Valid() const{
    return m_income_percent100k_isValid;
}

QString OAIGetzipcodeinfo_200_response::getIncomePercent200k() const {
    return m_income_percent200k;
}
void OAIGetzipcodeinfo_200_response::setIncomePercent200k(const QString &income_percent200k) {
    m_income_percent200k = income_percent200k;
    m_income_percent200k_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_income_percent200k_Set() const{
    return m_income_percent200k_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_income_percent200k_Valid() const{
    return m_income_percent200k_isValid;
}

QString OAIGetzipcodeinfo_200_response::getIncomePercent50k() const {
    return m_income_percent50k;
}
void OAIGetzipcodeinfo_200_response::setIncomePercent50k(const QString &income_percent50k) {
    m_income_percent50k = income_percent50k;
    m_income_percent50k_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_income_percent50k_Set() const{
    return m_income_percent50k_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_income_percent50k_Valid() const{
    return m_income_percent50k_isValid;
}

QString OAIGetzipcodeinfo_200_response::getLatitude() const {
    return m_latitude;
}
void OAIGetzipcodeinfo_200_response::setLatitude(const QString &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_latitude_Valid() const{
    return m_latitude_isValid;
}

QString OAIGetzipcodeinfo_200_response::getLongitude() const {
    return m_longitude;
}
void OAIGetzipcodeinfo_200_response::setLongitude(const QString &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_longitude_Valid() const{
    return m_longitude_isValid;
}

QString OAIGetzipcodeinfo_200_response::getMarriedHouseholdPercent() const {
    return m_married_household_percent;
}
void OAIGetzipcodeinfo_200_response::setMarriedHouseholdPercent(const QString &married_household_percent) {
    m_married_household_percent = married_household_percent;
    m_married_household_percent_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_married_household_percent_Set() const{
    return m_married_household_percent_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_married_household_percent_Valid() const{
    return m_married_household_percent_isValid;
}

QString OAIGetzipcodeinfo_200_response::getPopulation() const {
    return m_population;
}
void OAIGetzipcodeinfo_200_response::setPopulation(const QString &population) {
    m_population = population;
    m_population_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_population_Set() const{
    return m_population_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_population_Valid() const{
    return m_population_isValid;
}

QString OAIGetzipcodeinfo_200_response::getState() const {
    return m_state;
}
void OAIGetzipcodeinfo_200_response::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIGetzipcodeinfo_200_response::getZipCode() const {
    return m_zip_code;
}
void OAIGetzipcodeinfo_200_response::setZipCode(const QString &zip_code) {
    m_zip_code = zip_code;
    m_zip_code_isSet = true;
}

bool OAIGetzipcodeinfo_200_response::is_zip_code_Set() const{
    return m_zip_code_isSet;
}

bool OAIGetzipcodeinfo_200_response::is_zip_code_Valid() const{
    return m_zip_code_isValid;
}

bool OAIGetzipcodeinfo_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_area_square_miles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_elderly_household_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_farmer_household_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_percent100k_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_percent200k_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_income_percent50k_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_married_household_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_population_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetzipcodeinfo_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
