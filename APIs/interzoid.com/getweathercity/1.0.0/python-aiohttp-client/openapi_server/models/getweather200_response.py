# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Getweather200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, code: str=None, credits: str=None, relative_humidity: str=None, state: str=None, temp_c: str=None, temp_f: str=None, visibility_miles: str=None, weather: str=None, wind_dir: str=None, wind_mph: str=None):
        """Getweather200Response - a model defined in OpenAPI

        :param city: The city of this Getweather200Response.
        :param code: The code of this Getweather200Response.
        :param credits: The credits of this Getweather200Response.
        :param relative_humidity: The relative_humidity of this Getweather200Response.
        :param state: The state of this Getweather200Response.
        :param temp_c: The temp_c of this Getweather200Response.
        :param temp_f: The temp_f of this Getweather200Response.
        :param visibility_miles: The visibility_miles of this Getweather200Response.
        :param weather: The weather of this Getweather200Response.
        :param wind_dir: The wind_dir of this Getweather200Response.
        :param wind_mph: The wind_mph of this Getweather200Response.
        """
        self.openapi_types = {
            'city': str,
            'code': str,
            'credits': str,
            'relative_humidity': str,
            'state': str,
            'temp_c': str,
            'temp_f': str,
            'visibility_miles': str,
            'weather': str,
            'wind_dir': str,
            'wind_mph': str
        }

        self.attribute_map = {
            'city': 'City',
            'code': 'Code',
            'credits': 'Credits',
            'relative_humidity': 'RelativeHumidity',
            'state': 'State',
            'temp_c': 'TempC',
            'temp_f': 'TempF',
            'visibility_miles': 'VisibilityMiles',
            'weather': 'Weather',
            'wind_dir': 'WindDir',
            'wind_mph': 'WindMPH'
        }

        self._city = city
        self._code = code
        self._credits = credits
        self._relative_humidity = relative_humidity
        self._state = state
        self._temp_c = temp_c
        self._temp_f = temp_f
        self._visibility_miles = visibility_miles
        self._weather = weather
        self._wind_dir = wind_dir
        self._wind_mph = wind_mph

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Getweather200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getweather_200_response of this Getweather200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this Getweather200Response.


        :return: The city of this Getweather200Response.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Getweather200Response.


        :param city: The city of this Getweather200Response.
        :type city: str
        """

        self._city = city

    @property
    def code(self):
        """Gets the code of this Getweather200Response.


        :return: The code of this Getweather200Response.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this Getweather200Response.


        :param code: The code of this Getweather200Response.
        :type code: str
        """

        self._code = code

    @property
    def credits(self):
        """Gets the credits of this Getweather200Response.


        :return: The credits of this Getweather200Response.
        :rtype: str
        """
        return self._credits

    @credits.setter
    def credits(self, credits):
        """Sets the credits of this Getweather200Response.


        :param credits: The credits of this Getweather200Response.
        :type credits: str
        """

        self._credits = credits

    @property
    def relative_humidity(self):
        """Gets the relative_humidity of this Getweather200Response.


        :return: The relative_humidity of this Getweather200Response.
        :rtype: str
        """
        return self._relative_humidity

    @relative_humidity.setter
    def relative_humidity(self, relative_humidity):
        """Sets the relative_humidity of this Getweather200Response.


        :param relative_humidity: The relative_humidity of this Getweather200Response.
        :type relative_humidity: str
        """

        self._relative_humidity = relative_humidity

    @property
    def state(self):
        """Gets the state of this Getweather200Response.


        :return: The state of this Getweather200Response.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Getweather200Response.


        :param state: The state of this Getweather200Response.
        :type state: str
        """

        self._state = state

    @property
    def temp_c(self):
        """Gets the temp_c of this Getweather200Response.


        :return: The temp_c of this Getweather200Response.
        :rtype: str
        """
        return self._temp_c

    @temp_c.setter
    def temp_c(self, temp_c):
        """Sets the temp_c of this Getweather200Response.


        :param temp_c: The temp_c of this Getweather200Response.
        :type temp_c: str
        """

        self._temp_c = temp_c

    @property
    def temp_f(self):
        """Gets the temp_f of this Getweather200Response.


        :return: The temp_f of this Getweather200Response.
        :rtype: str
        """
        return self._temp_f

    @temp_f.setter
    def temp_f(self, temp_f):
        """Sets the temp_f of this Getweather200Response.


        :param temp_f: The temp_f of this Getweather200Response.
        :type temp_f: str
        """

        self._temp_f = temp_f

    @property
    def visibility_miles(self):
        """Gets the visibility_miles of this Getweather200Response.


        :return: The visibility_miles of this Getweather200Response.
        :rtype: str
        """
        return self._visibility_miles

    @visibility_miles.setter
    def visibility_miles(self, visibility_miles):
        """Sets the visibility_miles of this Getweather200Response.


        :param visibility_miles: The visibility_miles of this Getweather200Response.
        :type visibility_miles: str
        """

        self._visibility_miles = visibility_miles

    @property
    def weather(self):
        """Gets the weather of this Getweather200Response.


        :return: The weather of this Getweather200Response.
        :rtype: str
        """
        return self._weather

    @weather.setter
    def weather(self, weather):
        """Sets the weather of this Getweather200Response.


        :param weather: The weather of this Getweather200Response.
        :type weather: str
        """

        self._weather = weather

    @property
    def wind_dir(self):
        """Gets the wind_dir of this Getweather200Response.


        :return: The wind_dir of this Getweather200Response.
        :rtype: str
        """
        return self._wind_dir

    @wind_dir.setter
    def wind_dir(self, wind_dir):
        """Sets the wind_dir of this Getweather200Response.


        :param wind_dir: The wind_dir of this Getweather200Response.
        :type wind_dir: str
        """

        self._wind_dir = wind_dir

    @property
    def wind_mph(self):
        """Gets the wind_mph of this Getweather200Response.


        :return: The wind_mph of this Getweather200Response.
        :rtype: str
        """
        return self._wind_mph

    @wind_mph.setter
    def wind_mph(self, wind_mph):
        """Sets the wind_mph of this Getweather200Response.


        :param wind_mph: The wind_mph of this Getweather200Response.
        :type wind_mph: str
        """

        self._wind_mph = wind_mph
