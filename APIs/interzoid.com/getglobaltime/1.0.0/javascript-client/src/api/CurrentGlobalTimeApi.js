/**
 * Interzoid Get Global Time API
 * This API retrieves the current time for a city or geographic location around the globe.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Getglobaltime200Response from '../model/Getglobaltime200Response';

/**
* CurrentGlobalTime service.
* @module api/CurrentGlobalTimeApi
* @version 1.0.0
*/
export default class CurrentGlobalTimeApi {

    /**
    * Constructs a new CurrentGlobalTimeApi. 
    * @alias module:api/CurrentGlobalTimeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getglobaltime operation.
     * @callback module:api/CurrentGlobalTimeApi~getglobaltimeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Getglobaltime200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets the current time for a global locale
     * Gets the current time for a global locale (city, state, region, or country such as Chicago, London, Paris, Seoul, Spain, Buenos Aires, Hawaii, Moscow, Tokyo, Hanoi, etc.)
     * @param {String} license Your Interzoid license API key. Register at www.interzoid.com/register
     * @param {String} locale Geographic locale to get the current time for
     * @param {module:api/CurrentGlobalTimeApi~getglobaltimeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Getglobaltime200Response}
     */
    getglobaltime(license, locale, callback) {
      let postBody = null;
      // verify the required parameter 'license' is set
      if (license === undefined || license === null) {
        throw new Error("Missing the required parameter 'license' when calling getglobaltime");
      }
      // verify the required parameter 'locale' is set
      if (locale === undefined || locale === null) {
        throw new Error("Missing the required parameter 'locale' when calling getglobaltime");
      }

      let pathParams = {
      };
      let queryParams = {
        'license': license,
        'locale': locale
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Getglobaltime200Response;
      return this.apiClient.callApi(
        '/getglobaltime', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
