/**
 * Interzoid Get Global Time API
 * This API retrieves the current time for a city or geographic location around the globe.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.InterzoidGetGlobalTimeApi);
  }
}(this, function(expect, InterzoidGetGlobalTimeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Getglobaltime200Response', function() {
    it('should create an instance of Getglobaltime200Response', function() {
      // uncomment below and update the code to test Getglobaltime200Response
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be.a(InterzoidGetGlobalTimeApi.Getglobaltime200Response);
    });

    it('should have the property clockTime (base name: "ClockTime")', function() {
      // uncomment below and update the code to test the property clockTime
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property code (base name: "Code")', function() {
      // uncomment below and update the code to test the property code
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property credits (base name: "Credits")', function() {
      // uncomment below and update the code to test the property credits
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property currentDate (base name: "CurrentDate")', function() {
      // uncomment below and update the code to test the property currentDate
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property currentTime (base name: "CurrentTime")', function() {
      // uncomment below and update the code to test the property currentTime
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property day (base name: "Day")', function() {
      // uncomment below and update the code to test the property day
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property hour (base name: "Hour")', function() {
      // uncomment below and update the code to test the property hour
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property locale (base name: "Locale")', function() {
      // uncomment below and update the code to test the property locale
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property minute (base name: "Minute")', function() {
      // uncomment below and update the code to test the property minute
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property month (base name: "Month")', function() {
      // uncomment below and update the code to test the property month
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property monthNumber (base name: "MonthNumber")', function() {
      // uncomment below and update the code to test the property monthNumber
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property second (base name: "Second")', function() {
      // uncomment below and update the code to test the property second
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property timeStamp (base name: "TimeStamp")', function() {
      // uncomment below and update the code to test the property timeStamp
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property weekday (base name: "Weekday")', function() {
      // uncomment below and update the code to test the property weekday
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property year (base name: "Year")', function() {
      // uncomment below and update the code to test the property year
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

    it('should have the property zone (base name: "Zone")', function() {
      // uncomment below and update the code to test the property zone
      //var instance = new InterzoidGetGlobalTimeApi.Getglobaltime200Response();
      //expect(instance).to.be();
    });

  });

}));
