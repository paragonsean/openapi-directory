/**
 * Interzoid Get Global Time API
 * This API retrieves the current time for a city or geographic location around the globe.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetglobaltime_200_response.h
 *
 * 
 */

#ifndef OAIGetglobaltime_200_response_H
#define OAIGetglobaltime_200_response_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetglobaltime_200_response : public OAIObject {
public:
    OAIGetglobaltime_200_response();
    OAIGetglobaltime_200_response(QString json);
    ~OAIGetglobaltime_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClockTime() const;
    void setClockTime(const QString &clock_time);
    bool is_clock_time_Set() const;
    bool is_clock_time_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getCredits() const;
    void setCredits(const QString &credits);
    bool is_credits_Set() const;
    bool is_credits_Valid() const;

    QString getCurrentDate() const;
    void setCurrentDate(const QString &current_date);
    bool is_current_date_Set() const;
    bool is_current_date_Valid() const;

    QString getCurrentTime() const;
    void setCurrentTime(const QString &current_time);
    bool is_current_time_Set() const;
    bool is_current_time_Valid() const;

    QString getDay() const;
    void setDay(const QString &day);
    bool is_day_Set() const;
    bool is_day_Valid() const;

    QString getHour() const;
    void setHour(const QString &hour);
    bool is_hour_Set() const;
    bool is_hour_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getMinute() const;
    void setMinute(const QString &minute);
    bool is_minute_Set() const;
    bool is_minute_Valid() const;

    QString getMonth() const;
    void setMonth(const QString &month);
    bool is_month_Set() const;
    bool is_month_Valid() const;

    QString getMonthNumber() const;
    void setMonthNumber(const QString &month_number);
    bool is_month_number_Set() const;
    bool is_month_number_Valid() const;

    QString getSecond() const;
    void setSecond(const QString &second);
    bool is_second_Set() const;
    bool is_second_Valid() const;

    QString getTimeStamp() const;
    void setTimeStamp(const QString &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    QString getWeekday() const;
    void setWeekday(const QString &weekday);
    bool is_weekday_Set() const;
    bool is_weekday_Valid() const;

    QString getYear() const;
    void setYear(const QString &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    QString getZone() const;
    void setZone(const QString &zone);
    bool is_zone_Set() const;
    bool is_zone_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_clock_time;
    bool m_clock_time_isSet;
    bool m_clock_time_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_credits;
    bool m_credits_isSet;
    bool m_credits_isValid;

    QString m_current_date;
    bool m_current_date_isSet;
    bool m_current_date_isValid;

    QString m_current_time;
    bool m_current_time_isSet;
    bool m_current_time_isValid;

    QString m_day;
    bool m_day_isSet;
    bool m_day_isValid;

    QString m_hour;
    bool m_hour_isSet;
    bool m_hour_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_minute;
    bool m_minute_isSet;
    bool m_minute_isValid;

    QString m_month;
    bool m_month_isSet;
    bool m_month_isValid;

    QString m_month_number;
    bool m_month_number_isSet;
    bool m_month_number_isValid;

    QString m_second;
    bool m_second_isSet;
    bool m_second_isValid;

    QString m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;

    QString m_weekday;
    bool m_weekday_isSet;
    bool m_weekday_isValid;

    QString m_year;
    bool m_year_isSet;
    bool m_year_isValid;

    QString m_zone;
    bool m_zone_isSet;
    bool m_zone_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetglobaltime_200_response)

#endif // OAIGetglobaltime_200_response_H
