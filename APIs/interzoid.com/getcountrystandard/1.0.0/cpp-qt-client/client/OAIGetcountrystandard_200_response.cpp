/**
 * Interzoid Country Data Standardization API
 * This API provides a standard for country name for the purposes of standardizing country name data, improving query results, analytics, and data merging.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@interzoid.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetcountrystandard_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetcountrystandard_200_response::OAIGetcountrystandard_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetcountrystandard_200_response::OAIGetcountrystandard_200_response() {
    this->initializeModel();
}

OAIGetcountrystandard_200_response::~OAIGetcountrystandard_200_response() {}

void OAIGetcountrystandard_200_response::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_country_standard_isSet = false;
    m_country_standard_isValid = false;

    m_credits_isSet = false;
    m_credits_isValid = false;
}

void OAIGetcountrystandard_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetcountrystandard_200_response::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_country_standard_isValid = ::OpenAPI::fromJsonValue(m_country_standard, json[QString("CountryStandard")]);
    m_country_standard_isSet = !json[QString("CountryStandard")].isNull() && m_country_standard_isValid;

    m_credits_isValid = ::OpenAPI::fromJsonValue(m_credits, json[QString("Credits")]);
    m_credits_isSet = !json[QString("Credits")].isNull() && m_credits_isValid;
}

QString OAIGetcountrystandard_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetcountrystandard_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_country_standard_isSet) {
        obj.insert(QString("CountryStandard"), ::OpenAPI::toJsonValue(m_country_standard));
    }
    if (m_credits_isSet) {
        obj.insert(QString("Credits"), ::OpenAPI::toJsonValue(m_credits));
    }
    return obj;
}

QString OAIGetcountrystandard_200_response::getCode() const {
    return m_code;
}
void OAIGetcountrystandard_200_response::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIGetcountrystandard_200_response::is_code_Set() const{
    return m_code_isSet;
}

bool OAIGetcountrystandard_200_response::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIGetcountrystandard_200_response::getCountryStandard() const {
    return m_country_standard;
}
void OAIGetcountrystandard_200_response::setCountryStandard(const QString &country_standard) {
    m_country_standard = country_standard;
    m_country_standard_isSet = true;
}

bool OAIGetcountrystandard_200_response::is_country_standard_Set() const{
    return m_country_standard_isSet;
}

bool OAIGetcountrystandard_200_response::is_country_standard_Valid() const{
    return m_country_standard_isValid;
}

QString OAIGetcountrystandard_200_response::getCredits() const {
    return m_credits;
}
void OAIGetcountrystandard_200_response::setCredits(const QString &credits) {
    m_credits = credits;
    m_credits_isSet = true;
}

bool OAIGetcountrystandard_200_response::is_credits_Set() const{
    return m_credits_isSet;
}

bool OAIGetcountrystandard_200_response::is_credits_Valid() const{
    return m_credits_isValid;
}

bool OAIGetcountrystandard_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_standard_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credits_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetcountrystandard_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
