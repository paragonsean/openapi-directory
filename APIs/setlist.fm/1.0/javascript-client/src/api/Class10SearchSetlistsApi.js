/**
 * setlist.fm API
 * <p> The setlist.fm API has been designed to give you easy access to setlist data in order to build fancy websites and other applications. Before starting to use the API, be sure to ... <ol> <li>... understand how setlist.fm works (the <a href=\"https://www.setlist.fm/faq\">FAQ</a> and the <a href=\"https://www.setlist.fm/guidelines\">Guidelines</a> are a good starting point),</li> <li>... read this documentation carefully and</li> <li>... <a href=\"https://www.setlist.fm/settings/api\">apply for an API key</a> (link for logged in users only) - if you're no registered user yet, then <a href=\"https://www.setlist.fm/signup\">register first</a> (it's free).</li> </ol> </p> <p> If this documentation isn't enough or if you've got other things you'd like to tell us about the API, visit the <a href=\"https://www.setlist.fm/forum/setlistfm/setlistfm-api\">API Forum</a>. </p> <p> Note that the setlist.fm API is, according to the <a href=\"https://www.setlist.fm/help/api-terms\">API terms of service</a>, only free for non-commercial projects. If you're interested in using the API for commercial purposes, <a href=\"https://www.setlist.fm/contact\">contact us</a>. </p>  <h2>About this Service</h2> <p> This service provides methods to get both setlists and components of setlists such as artists, cities, countries or venues. </p>  <h2>Supported Content Types</h2> <p> The REST service currently supports XML (default) and JSON content. </p> <p> To receive a JSON response, set the <code>Accept</code> <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1\">header</a> to <em>application/json</em>. </p>  <h2>Internationalization</h2> <p> <small>(Please note that this is an experimental feature and does not work for all cities!)</small> </p> <p> Most of the featured methods honor the <code>Accept-Language</code> <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\">header</a>. This header is used for localizing cities and countries. The default language is English (en), but you can provide any of the languages Spanish (es), French (fr), German (de), Portuguese (pt), Turkish (tr), Italian (it) or Polish (pl). </p> <p> E.g. if you search a setlist for a concert that took place in Vienna and you pass &quot;de&quot; as header, you'll get <em>&quot;Wien, &Ouml;sterreich&quot;</em> instead of <em>&quot;Vienna, Austria&quot;</em>.<br/> This also works if you use a different language than the country's native language. </p> <p> E.g. for a concert in New York, you'll get <em>&quot;Nueva York, Estados Unidos&quot;</em> instead of <em>&quot;New York, United States&quot;</em> if you pass &quot;es&quot; as language. </p>  <h2>API Keys</h2>  API keys (<a href=\"https://www.setlist.fm/settings/api\">application form</a>) must be included in the request with the <code>x-api-key</code> header.  <h2>Version History</h2> <table class=\"table table-bordered table-versions\"> <thead> <tr> <th>Version</th> <th>Docs</th> <th>End of Service</th> </tr> </thead> <tbody> <tr> <td><strong>1.0</strong></td> <td><a href=\"/docs/1.0\">Docs</a></td> <td>-</li> </tr> <tr> <td><strong>0.1</strong></td> <td></td> <td>December 31, 2017</li> </tr> </tbody> </table>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import JsonSetlists from '../model/JsonSetlists';

/**
* Class10SearchSetlists service.
* @module api/Class10SearchSetlistsApi
* @version 1.0
*/
export default class Class10SearchSetlistsApi {

    /**
    * Constructs a new Class10SearchSetlistsApi. 
    * @alias module:api/Class10SearchSetlistsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the resource10SearchSetlistsGetSetlistsGET operation.
     * @callback module:api/Class10SearchSetlistsApi~resource10SearchSetlistsGetSetlistsGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/JsonSetlists} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search for setlists.
     * Search for setlists.
     * @param {Object} opts Optional parameters
     * @param {String} [artistMbid] the artist's Musicbrainz Identifier (mbid)
     * @param {String} [artistName] the artist's name
     * @param {Number} [artistTmid] the artist's Ticketmaster Identifier (tmid)
     * @param {String} [cityId] the city's geoId
     * @param {String} [cityName] the name of the city
     * @param {String} [countryCode] the country code
     * @param {String} [date] the date of the event (format dd-MM-yyyy)
     * @param {Number} [lastFm] the event's Last.fm Event ID (deprecated)
     * @param {String} [lastUpdated] the date and time (UTC) when this setlist was last updated (format yyyyMMddHHmmss) - either edited or reverted. search will return setlists that were updated on or after this date
     * @param {Number} [p = 1)] the number of the result page
     * @param {String} [state] the state
     * @param {String} [stateCode] the state code
     * @param {String} [tourName] 
     * @param {String} [venueId] the venue id
     * @param {String} [venueName] the name of the venue
     * @param {String} [year] the year of the event
     * @param {module:api/Class10SearchSetlistsApi~resource10SearchSetlistsGetSetlistsGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/JsonSetlists}
     */
    resource10SearchSetlistsGetSetlistsGET(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'artistMbid': opts['artistMbid'],
        'artistName': opts['artistName'],
        'artistTmid': opts['artistTmid'],
        'cityId': opts['cityId'],
        'cityName': opts['cityName'],
        'countryCode': opts['countryCode'],
        'date': opts['date'],
        'lastFm': opts['lastFm'],
        'lastUpdated': opts['lastUpdated'],
        'p': opts['p'],
        'state': opts['state'],
        'stateCode': opts['stateCode'],
        'tourName': opts['tourName'],
        'venueId': opts['venueId'],
        'venueName': opts['venueName'],
        'year': opts['year']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/xml', 'application/json'];
      let returnType = JsonSetlists;
      return this.apiClient.callApi(
        '/1.0/search/setlists', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
