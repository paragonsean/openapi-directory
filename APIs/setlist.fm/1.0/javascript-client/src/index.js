/**
 * setlist.fm API
 * <p> The setlist.fm API has been designed to give you easy access to setlist data in order to build fancy websites and other applications. Before starting to use the API, be sure to ... <ol> <li>... understand how setlist.fm works (the <a href=\"https://www.setlist.fm/faq\">FAQ</a> and the <a href=\"https://www.setlist.fm/guidelines\">Guidelines</a> are a good starting point),</li> <li>... read this documentation carefully and</li> <li>... <a href=\"https://www.setlist.fm/settings/api\">apply for an API key</a> (link for logged in users only) - if you're no registered user yet, then <a href=\"https://www.setlist.fm/signup\">register first</a> (it's free).</li> </ol> </p> <p> If this documentation isn't enough or if you've got other things you'd like to tell us about the API, visit the <a href=\"https://www.setlist.fm/forum/setlistfm/setlistfm-api\">API Forum</a>. </p> <p> Note that the setlist.fm API is, according to the <a href=\"https://www.setlist.fm/help/api-terms\">API terms of service</a>, only free for non-commercial projects. If you're interested in using the API for commercial purposes, <a href=\"https://www.setlist.fm/contact\">contact us</a>. </p>  <h2>About this Service</h2> <p> This service provides methods to get both setlists and components of setlists such as artists, cities, countries or venues. </p>  <h2>Supported Content Types</h2> <p> The REST service currently supports XML (default) and JSON content. </p> <p> To receive a JSON response, set the <code>Accept</code> <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1\">header</a> to <em>application/json</em>. </p>  <h2>Internationalization</h2> <p> <small>(Please note that this is an experimental feature and does not work for all cities!)</small> </p> <p> Most of the featured methods honor the <code>Accept-Language</code> <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\">header</a>. This header is used for localizing cities and countries. The default language is English (en), but you can provide any of the languages Spanish (es), French (fr), German (de), Portuguese (pt), Turkish (tr), Italian (it) or Polish (pl). </p> <p> E.g. if you search a setlist for a concert that took place in Vienna and you pass &quot;de&quot; as header, you'll get <em>&quot;Wien, &Ouml;sterreich&quot;</em> instead of <em>&quot;Vienna, Austria&quot;</em>.<br/> This also works if you use a different language than the country's native language. </p> <p> E.g. for a concert in New York, you'll get <em>&quot;Nueva York, Estados Unidos&quot;</em> instead of <em>&quot;New York, United States&quot;</em> if you pass &quot;es&quot; as language. </p>  <h2>API Keys</h2>  API keys (<a href=\"https://www.setlist.fm/settings/api\">application form</a>) must be included in the request with the <code>x-api-key</code> header.  <h2>Version History</h2> <table class=\"table table-bordered table-versions\"> <thead> <tr> <th>Version</th> <th>Docs</th> <th>End of Service</th> </tr> </thead> <tbody> <tr> <td><strong>1.0</strong></td> <td><a href=\"/docs/1.0\">Docs</a></td> <td>-</li> </tr> <tr> <td><strong>0.1</strong></td> <td></td> <td>December 31, 2017</li> </tr> </tbody> </table>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import JsonArtist from './model/JsonArtist';
import JsonArtists from './model/JsonArtists';
import JsonCities from './model/JsonCities';
import JsonCity from './model/JsonCity';
import JsonCoords from './model/JsonCoords';
import JsonCountries from './model/JsonCountries';
import JsonCountry from './model/JsonCountry';
import JsonError from './model/JsonError';
import JsonSet from './model/JsonSet';
import JsonSetlist from './model/JsonSetlist';
import JsonSetlists from './model/JsonSetlists';
import JsonSong from './model/JsonSong';
import JsonTour from './model/JsonTour';
import JsonUser from './model/JsonUser';
import JsonVenue from './model/JsonVenue';
import JsonVenues from './model/JsonVenues';
import XmlNs0Artist from './model/XmlNs0Artist';
import XmlNs0Artists from './model/XmlNs0Artists';
import XmlNs0Cities from './model/XmlNs0Cities';
import XmlNs0City from './model/XmlNs0City';
import XmlNs0Coords from './model/XmlNs0Coords';
import XmlNs0Countries from './model/XmlNs0Countries';
import XmlNs0Country from './model/XmlNs0Country';
import XmlNs0Error from './model/XmlNs0Error';
import XmlNs0Result from './model/XmlNs0Result';
import XmlNs0Set from './model/XmlNs0Set';
import XmlNs0Setlist from './model/XmlNs0Setlist';
import XmlNs0Setlists from './model/XmlNs0Setlists';
import XmlNs0Song from './model/XmlNs0Song';
import XmlNs0Tour from './model/XmlNs0Tour';
import XmlNs0User from './model/XmlNs0User';
import XmlNs0Venue from './model/XmlNs0Venue';
import XmlNs0Venues from './model/XmlNs0Venues';
import Class10ArtistMbidApi from './api/Class10ArtistMbidApi';
import Class10ArtistMbidSetlistsApi from './api/Class10ArtistMbidSetlistsApi';
import Class10CityGeoIdApi from './api/Class10CityGeoIdApi';
import Class10SearchArtistsApi from './api/Class10SearchArtistsApi';
import Class10SearchCitiesApi from './api/Class10SearchCitiesApi';
import Class10SearchCountriesApi from './api/Class10SearchCountriesApi';
import Class10SearchSetlistsApi from './api/Class10SearchSetlistsApi';
import Class10SearchVenuesApi from './api/Class10SearchVenuesApi';
import Class10SetlistSetlistIdApi from './api/Class10SetlistSetlistIdApi';
import Class10SetlistVersionVersionIdApi from './api/Class10SetlistVersionVersionIdApi';
import Class10UserUserIdApi from './api/Class10UserUserIdApi';
import Class10UserUserIdAttendedApi from './api/Class10UserUserIdAttendedApi';
import Class10UserUserIdEditedApi from './api/Class10UserUserIdEditedApi';
import Class10VenueVenueIdApi from './api/Class10VenueVenueIdApi';
import Class10VenueVenueIdSetlistsApi from './api/Class10VenueVenueIdSetlistsApi';


/**
* &lt;p&gt; The setlist.fm API has been designed to give you easy access to setlist data in order to build fancy websites and other applications. Before starting to use the API, be sure to ... &lt;ol&gt; &lt;li&gt;... understand how setlist.fm works (the &lt;a href&#x3D;\&quot;https://www.setlist.fm/faq\&quot;&gt;FAQ&lt;/a&gt; and the &lt;a href&#x3D;\&quot;https://www.setlist.fm/guidelines\&quot;&gt;Guidelines&lt;/a&gt; are a good starting point),&lt;/li&gt; &lt;li&gt;... read this documentation carefully and&lt;/li&gt; &lt;li&gt;... &lt;a href&#x3D;\&quot;https://www.setlist.fm/settings/api\&quot;&gt;apply for an API key&lt;/a&gt; (link for logged in users only) - if you&#39;re no registered user yet, then &lt;a href&#x3D;\&quot;https://www.setlist.fm/signup\&quot;&gt;register first&lt;/a&gt; (it&#39;s free).&lt;/li&gt; &lt;/ol&gt; &lt;/p&gt; &lt;p&gt; If this documentation isn&#39;t enough or if you&#39;ve got other things you&#39;d like to tell us about the API, visit the &lt;a href&#x3D;\&quot;https://www.setlist.fm/forum/setlistfm/setlistfm-api\&quot;&gt;API Forum&lt;/a&gt;. &lt;/p&gt; &lt;p&gt; Note that the setlist.fm API is, according to the &lt;a href&#x3D;\&quot;https://www.setlist.fm/help/api-terms\&quot;&gt;API terms of service&lt;/a&gt;, only free for non-commercial projects. If you&#39;re interested in using the API for commercial purposes, &lt;a href&#x3D;\&quot;https://www.setlist.fm/contact\&quot;&gt;contact us&lt;/a&gt;. &lt;/p&gt;  &lt;h2&gt;About this Service&lt;/h2&gt; &lt;p&gt; This service provides methods to get both setlists and components of setlists such as artists, cities, countries or venues. &lt;/p&gt;  &lt;h2&gt;Supported Content Types&lt;/h2&gt; &lt;p&gt; The REST service currently supports XML (default) and JSON content. &lt;/p&gt; &lt;p&gt; To receive a JSON response, set the &lt;code&gt;Accept&lt;/code&gt; &lt;a href&#x3D;\&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1\&quot;&gt;header&lt;/a&gt; to &lt;em&gt;application/json&lt;/em&gt;. &lt;/p&gt;  &lt;h2&gt;Internationalization&lt;/h2&gt; &lt;p&gt; &lt;small&gt;(Please note that this is an experimental feature and does not work for all cities!)&lt;/small&gt; &lt;/p&gt; &lt;p&gt; Most of the featured methods honor the &lt;code&gt;Accept-Language&lt;/code&gt; &lt;a href&#x3D;\&quot;https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\&quot;&gt;header&lt;/a&gt;. This header is used for localizing cities and countries. The default language is English (en), but you can provide any of the languages Spanish (es), French (fr), German (de), Portuguese (pt), Turkish (tr), Italian (it) or Polish (pl). &lt;/p&gt; &lt;p&gt; E.g. if you search a setlist for a concert that took place in Vienna and you pass &amp;quot;de&amp;quot; as header, you&#39;ll get &lt;em&gt;&amp;quot;Wien, &amp;Ouml;sterreich&amp;quot;&lt;/em&gt; instead of &lt;em&gt;&amp;quot;Vienna, Austria&amp;quot;&lt;/em&gt;.&lt;br/&gt; This also works if you use a different language than the country&#39;s native language. &lt;/p&gt; &lt;p&gt; E.g. for a concert in New York, you&#39;ll get &lt;em&gt;&amp;quot;Nueva York, Estados Unidos&amp;quot;&lt;/em&gt; instead of &lt;em&gt;&amp;quot;New York, United States&amp;quot;&lt;/em&gt; if you pass &amp;quot;es&amp;quot; as language. &lt;/p&gt;  &lt;h2&gt;API Keys&lt;/h2&gt;  API keys (&lt;a href&#x3D;\&quot;https://www.setlist.fm/settings/api\&quot;&gt;application form&lt;/a&gt;) must be included in the request with the &lt;code&gt;x-api-key&lt;/code&gt; header.  &lt;h2&gt;Version History&lt;/h2&gt; &lt;table class&#x3D;\&quot;table table-bordered table-versions\&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th&gt;Version&lt;/th&gt; &lt;th&gt;Docs&lt;/th&gt; &lt;th&gt;End of Service&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;1.0&lt;/strong&gt;&lt;/td&gt; &lt;td&gt;&lt;a href&#x3D;\&quot;/docs/1.0\&quot;&gt;Docs&lt;/a&gt;&lt;/td&gt; &lt;td&gt;-&lt;/li&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td&gt;&lt;strong&gt;0.1&lt;/strong&gt;&lt;/td&gt; &lt;td&gt;&lt;/td&gt; &lt;td&gt;December 31, 2017&lt;/li&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SetlistFmApi = require('index'); // See note below*.
* var xxxSvc = new SetlistFmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SetlistFmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SetlistFmApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SetlistFmApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The JsonArtist model constructor.
     * @property {module:model/JsonArtist}
     */
    JsonArtist,

    /**
     * The JsonArtists model constructor.
     * @property {module:model/JsonArtists}
     */
    JsonArtists,

    /**
     * The JsonCities model constructor.
     * @property {module:model/JsonCities}
     */
    JsonCities,

    /**
     * The JsonCity model constructor.
     * @property {module:model/JsonCity}
     */
    JsonCity,

    /**
     * The JsonCoords model constructor.
     * @property {module:model/JsonCoords}
     */
    JsonCoords,

    /**
     * The JsonCountries model constructor.
     * @property {module:model/JsonCountries}
     */
    JsonCountries,

    /**
     * The JsonCountry model constructor.
     * @property {module:model/JsonCountry}
     */
    JsonCountry,

    /**
     * The JsonError model constructor.
     * @property {module:model/JsonError}
     */
    JsonError,

    /**
     * The JsonSet model constructor.
     * @property {module:model/JsonSet}
     */
    JsonSet,

    /**
     * The JsonSetlist model constructor.
     * @property {module:model/JsonSetlist}
     */
    JsonSetlist,

    /**
     * The JsonSetlists model constructor.
     * @property {module:model/JsonSetlists}
     */
    JsonSetlists,

    /**
     * The JsonSong model constructor.
     * @property {module:model/JsonSong}
     */
    JsonSong,

    /**
     * The JsonTour model constructor.
     * @property {module:model/JsonTour}
     */
    JsonTour,

    /**
     * The JsonUser model constructor.
     * @property {module:model/JsonUser}
     */
    JsonUser,

    /**
     * The JsonVenue model constructor.
     * @property {module:model/JsonVenue}
     */
    JsonVenue,

    /**
     * The JsonVenues model constructor.
     * @property {module:model/JsonVenues}
     */
    JsonVenues,

    /**
     * The XmlNs0Artist model constructor.
     * @property {module:model/XmlNs0Artist}
     */
    XmlNs0Artist,

    /**
     * The XmlNs0Artists model constructor.
     * @property {module:model/XmlNs0Artists}
     */
    XmlNs0Artists,

    /**
     * The XmlNs0Cities model constructor.
     * @property {module:model/XmlNs0Cities}
     */
    XmlNs0Cities,

    /**
     * The XmlNs0City model constructor.
     * @property {module:model/XmlNs0City}
     */
    XmlNs0City,

    /**
     * The XmlNs0Coords model constructor.
     * @property {module:model/XmlNs0Coords}
     */
    XmlNs0Coords,

    /**
     * The XmlNs0Countries model constructor.
     * @property {module:model/XmlNs0Countries}
     */
    XmlNs0Countries,

    /**
     * The XmlNs0Country model constructor.
     * @property {module:model/XmlNs0Country}
     */
    XmlNs0Country,

    /**
     * The XmlNs0Error model constructor.
     * @property {module:model/XmlNs0Error}
     */
    XmlNs0Error,

    /**
     * The XmlNs0Result model constructor.
     * @property {module:model/XmlNs0Result}
     */
    XmlNs0Result,

    /**
     * The XmlNs0Set model constructor.
     * @property {module:model/XmlNs0Set}
     */
    XmlNs0Set,

    /**
     * The XmlNs0Setlist model constructor.
     * @property {module:model/XmlNs0Setlist}
     */
    XmlNs0Setlist,

    /**
     * The XmlNs0Setlists model constructor.
     * @property {module:model/XmlNs0Setlists}
     */
    XmlNs0Setlists,

    /**
     * The XmlNs0Song model constructor.
     * @property {module:model/XmlNs0Song}
     */
    XmlNs0Song,

    /**
     * The XmlNs0Tour model constructor.
     * @property {module:model/XmlNs0Tour}
     */
    XmlNs0Tour,

    /**
     * The XmlNs0User model constructor.
     * @property {module:model/XmlNs0User}
     */
    XmlNs0User,

    /**
     * The XmlNs0Venue model constructor.
     * @property {module:model/XmlNs0Venue}
     */
    XmlNs0Venue,

    /**
     * The XmlNs0Venues model constructor.
     * @property {module:model/XmlNs0Venues}
     */
    XmlNs0Venues,

    /**
    * The Class10ArtistMbidApi service constructor.
    * @property {module:api/Class10ArtistMbidApi}
    */
    Class10ArtistMbidApi,

    /**
    * The Class10ArtistMbidSetlistsApi service constructor.
    * @property {module:api/Class10ArtistMbidSetlistsApi}
    */
    Class10ArtistMbidSetlistsApi,

    /**
    * The Class10CityGeoIdApi service constructor.
    * @property {module:api/Class10CityGeoIdApi}
    */
    Class10CityGeoIdApi,

    /**
    * The Class10SearchArtistsApi service constructor.
    * @property {module:api/Class10SearchArtistsApi}
    */
    Class10SearchArtistsApi,

    /**
    * The Class10SearchCitiesApi service constructor.
    * @property {module:api/Class10SearchCitiesApi}
    */
    Class10SearchCitiesApi,

    /**
    * The Class10SearchCountriesApi service constructor.
    * @property {module:api/Class10SearchCountriesApi}
    */
    Class10SearchCountriesApi,

    /**
    * The Class10SearchSetlistsApi service constructor.
    * @property {module:api/Class10SearchSetlistsApi}
    */
    Class10SearchSetlistsApi,

    /**
    * The Class10SearchVenuesApi service constructor.
    * @property {module:api/Class10SearchVenuesApi}
    */
    Class10SearchVenuesApi,

    /**
    * The Class10SetlistSetlistIdApi service constructor.
    * @property {module:api/Class10SetlistSetlistIdApi}
    */
    Class10SetlistSetlistIdApi,

    /**
    * The Class10SetlistVersionVersionIdApi service constructor.
    * @property {module:api/Class10SetlistVersionVersionIdApi}
    */
    Class10SetlistVersionVersionIdApi,

    /**
    * The Class10UserUserIdApi service constructor.
    * @property {module:api/Class10UserUserIdApi}
    */
    Class10UserUserIdApi,

    /**
    * The Class10UserUserIdAttendedApi service constructor.
    * @property {module:api/Class10UserUserIdAttendedApi}
    */
    Class10UserUserIdAttendedApi,

    /**
    * The Class10UserUserIdEditedApi service constructor.
    * @property {module:api/Class10UserUserIdEditedApi}
    */
    Class10UserUserIdEditedApi,

    /**
    * The Class10VenueVenueIdApi service constructor.
    * @property {module:api/Class10VenueVenueIdApi}
    */
    Class10VenueVenueIdApi,

    /**
    * The Class10VenueVenueIdSetlistsApi service constructor.
    * @property {module:api/Class10VenueVenueIdSetlistsApi}
    */
    Class10VenueVenueIdSetlistsApi
};
