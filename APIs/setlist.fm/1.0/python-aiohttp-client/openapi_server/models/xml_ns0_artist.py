# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class XmlNs0Artist(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disambiguation: str=None, mbid: str=None, name: str=None, sort_name: str=None, tmid: float=None, url: str=None):
        """XmlNs0Artist - a model defined in OpenAPI

        :param disambiguation: The disambiguation of this XmlNs0Artist.
        :param mbid: The mbid of this XmlNs0Artist.
        :param name: The name of this XmlNs0Artist.
        :param sort_name: The sort_name of this XmlNs0Artist.
        :param tmid: The tmid of this XmlNs0Artist.
        :param url: The url of this XmlNs0Artist.
        """
        self.openapi_types = {
            'disambiguation': str,
            'mbid': str,
            'name': str,
            'sort_name': str,
            'tmid': float,
            'url': str
        }

        self.attribute_map = {
            'disambiguation': 'disambiguation',
            'mbid': 'mbid',
            'name': 'name',
            'sort_name': 'sortName',
            'tmid': 'tmid',
            'url': 'url'
        }

        self._disambiguation = disambiguation
        self._mbid = mbid
        self._name = name
        self._sort_name = sort_name
        self._tmid = tmid
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'XmlNs0Artist':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The xml_ns0_artist of this XmlNs0Artist.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disambiguation(self):
        """Gets the disambiguation of this XmlNs0Artist.

        disambiguation to distinguish between artists with same names

        :return: The disambiguation of this XmlNs0Artist.
        :rtype: str
        """
        return self._disambiguation

    @disambiguation.setter
    def disambiguation(self, disambiguation):
        """Sets the disambiguation of this XmlNs0Artist.

        disambiguation to distinguish between artists with same names

        :param disambiguation: The disambiguation of this XmlNs0Artist.
        :type disambiguation: str
        """

        self._disambiguation = disambiguation

    @property
    def mbid(self):
        """Gets the mbid of this XmlNs0Artist.

        unique Musicbrainz Identifier (MBID), e.g. <em>&quot;b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d&quot;</em>

        :return: The mbid of this XmlNs0Artist.
        :rtype: str
        """
        return self._mbid

    @mbid.setter
    def mbid(self, mbid):
        """Sets the mbid of this XmlNs0Artist.

        unique Musicbrainz Identifier (MBID), e.g. <em>&quot;b10bbbfc-cf9e-42e0-be17-e2c3e1d2600d&quot;</em>

        :param mbid: The mbid of this XmlNs0Artist.
        :type mbid: str
        """

        self._mbid = mbid

    @property
    def name(self):
        """Gets the name of this XmlNs0Artist.

        the artist's name, e.g. <em>&quot;The Beatles&quot;</em>

        :return: The name of this XmlNs0Artist.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this XmlNs0Artist.

        the artist's name, e.g. <em>&quot;The Beatles&quot;</em>

        :param name: The name of this XmlNs0Artist.
        :type name: str
        """

        self._name = name

    @property
    def sort_name(self):
        """Gets the sort_name of this XmlNs0Artist.

        the artist's sort name, e.g. <em>&quot;Beatles, The&quot;</em> or <em>&quot;Springsteen, Bruce&quot;</em>

        :return: The sort_name of this XmlNs0Artist.
        :rtype: str
        """
        return self._sort_name

    @sort_name.setter
    def sort_name(self, sort_name):
        """Sets the sort_name of this XmlNs0Artist.

        the artist's sort name, e.g. <em>&quot;Beatles, The&quot;</em> or <em>&quot;Springsteen, Bruce&quot;</em>

        :param sort_name: The sort_name of this XmlNs0Artist.
        :type sort_name: str
        """

        self._sort_name = sort_name

    @property
    def tmid(self):
        """Gets the tmid of this XmlNs0Artist.

        unique Ticket Master Identifier (TMID), e.g. <em>735610</em>

        :return: The tmid of this XmlNs0Artist.
        :rtype: float
        """
        return self._tmid

    @tmid.setter
    def tmid(self, tmid):
        """Sets the tmid of this XmlNs0Artist.

        unique Ticket Master Identifier (TMID), e.g. <em>735610</em>

        :param tmid: The tmid of this XmlNs0Artist.
        :type tmid: float
        """

        self._tmid = tmid

    @property
    def url(self):
        """Gets the url of this XmlNs0Artist.

        the attribution url

        :return: The url of this XmlNs0Artist.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this XmlNs0Artist.

        the attribution url

        :param url: The url of this XmlNs0Artist.
        :type url: str
        """

        self._url = url
