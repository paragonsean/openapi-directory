# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.json_artist import JsonArtist
from openapi_server.models.json_set import JsonSet
from openapi_server.models.json_tour import JsonTour
from openapi_server.models.json_venue import JsonVenue
from openapi_server import util


class JsonSetlist(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artist: JsonArtist=None, event_date: str=None, id: str=None, info: str=None, last_fm_event_id: float=None, last_updated: str=None, set: List[JsonSet]=None, tour: JsonTour=None, url: str=None, venue: JsonVenue=None, version_id: str=None):
        """JsonSetlist - a model defined in OpenAPI

        :param artist: The artist of this JsonSetlist.
        :param event_date: The event_date of this JsonSetlist.
        :param id: The id of this JsonSetlist.
        :param info: The info of this JsonSetlist.
        :param last_fm_event_id: The last_fm_event_id of this JsonSetlist.
        :param last_updated: The last_updated of this JsonSetlist.
        :param set: The set of this JsonSetlist.
        :param tour: The tour of this JsonSetlist.
        :param url: The url of this JsonSetlist.
        :param venue: The venue of this JsonSetlist.
        :param version_id: The version_id of this JsonSetlist.
        """
        self.openapi_types = {
            'artist': JsonArtist,
            'event_date': str,
            'id': str,
            'info': str,
            'last_fm_event_id': float,
            'last_updated': str,
            'set': List[JsonSet],
            'tour': JsonTour,
            'url': str,
            'venue': JsonVenue,
            'version_id': str
        }

        self.attribute_map = {
            'artist': 'artist',
            'event_date': 'eventDate',
            'id': 'id',
            'info': 'info',
            'last_fm_event_id': 'lastFmEventId',
            'last_updated': 'lastUpdated',
            'set': 'set',
            'tour': 'tour',
            'url': 'url',
            'venue': 'venue',
            'version_id': 'versionId'
        }

        self._artist = artist
        self._event_date = event_date
        self._id = id
        self._info = info
        self._last_fm_event_id = last_fm_event_id
        self._last_updated = last_updated
        self._set = set
        self._tour = tour
        self._url = url
        self._venue = venue
        self._version_id = version_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JsonSetlist':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The json_Setlist of this JsonSetlist.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artist(self):
        """Gets the artist of this JsonSetlist.


        :return: The artist of this JsonSetlist.
        :rtype: JsonArtist
        """
        return self._artist

    @artist.setter
    def artist(self, artist):
        """Sets the artist of this JsonSetlist.


        :param artist: The artist of this JsonSetlist.
        :type artist: JsonArtist
        """

        self._artist = artist

    @property
    def event_date(self):
        """Gets the event_date of this JsonSetlist.

        date of the concert in the format &quot;dd-MM-yyyy&quot;

        :return: The event_date of this JsonSetlist.
        :rtype: str
        """
        return self._event_date

    @event_date.setter
    def event_date(self, event_date):
        """Sets the event_date of this JsonSetlist.

        date of the concert in the format &quot;dd-MM-yyyy&quot;

        :param event_date: The event_date of this JsonSetlist.
        :type event_date: str
        """

        self._event_date = event_date

    @property
    def id(self):
        """Gets the id of this JsonSetlist.

        unique identifier

        :return: The id of this JsonSetlist.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this JsonSetlist.

        unique identifier

        :param id: The id of this JsonSetlist.
        :type id: str
        """

        self._id = id

    @property
    def info(self):
        """Gets the info of this JsonSetlist.

        additional information on the concert - see the <a href=\"https://www.setlist.fm/guidelines\">setlist.fm guidelines</a> for a complete list of allowed content.

        :return: The info of this JsonSetlist.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this JsonSetlist.

        additional information on the concert - see the <a href=\"https://www.setlist.fm/guidelines\">setlist.fm guidelines</a> for a complete list of allowed content.

        :param info: The info of this JsonSetlist.
        :type info: str
        """

        self._info = info

    @property
    def last_fm_event_id(self):
        """Gets the last_fm_event_id of this JsonSetlist.

        the id this event has on <a href=\"http://last.fm/\">last.fm</a> (deprecated)

        :return: The last_fm_event_id of this JsonSetlist.
        :rtype: float
        """
        return self._last_fm_event_id

    @last_fm_event_id.setter
    def last_fm_event_id(self, last_fm_event_id):
        """Sets the last_fm_event_id of this JsonSetlist.

        the id this event has on <a href=\"http://last.fm/\">last.fm</a> (deprecated)

        :param last_fm_event_id: The last_fm_event_id of this JsonSetlist.
        :type last_fm_event_id: float
        """

        self._last_fm_event_id = last_fm_event_id

    @property
    def last_updated(self):
        """Gets the last_updated of this JsonSetlist.

        date, time and time zone of the last update to this setlist in the format &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ&quot;

        :return: The last_updated of this JsonSetlist.
        :rtype: str
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this JsonSetlist.

        date, time and time zone of the last update to this setlist in the format &quot;yyyy-MM-dd'T'HH:mm:ss.SSSZZZZZ&quot;

        :param last_updated: The last_updated of this JsonSetlist.
        :type last_updated: str
        """

        self._last_updated = last_updated

    @property
    def set(self):
        """Gets the set of this JsonSetlist.

        all sets of this setlist

        :return: The set of this JsonSetlist.
        :rtype: List[JsonSet]
        """
        return self._set

    @set.setter
    def set(self, set):
        """Sets the set of this JsonSetlist.

        all sets of this setlist

        :param set: The set of this JsonSetlist.
        :type set: List[JsonSet]
        """

        self._set = set

    @property
    def tour(self):
        """Gets the tour of this JsonSetlist.


        :return: The tour of this JsonSetlist.
        :rtype: JsonTour
        """
        return self._tour

    @tour.setter
    def tour(self, tour):
        """Sets the tour of this JsonSetlist.


        :param tour: The tour of this JsonSetlist.
        :type tour: JsonTour
        """

        self._tour = tour

    @property
    def url(self):
        """Gets the url of this JsonSetlist.

        the attribution url to which you have to link to wherever you use data from this setlist in your application

        :return: The url of this JsonSetlist.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this JsonSetlist.

        the attribution url to which you have to link to wherever you use data from this setlist in your application

        :param url: The url of this JsonSetlist.
        :type url: str
        """

        self._url = url

    @property
    def venue(self):
        """Gets the venue of this JsonSetlist.


        :return: The venue of this JsonSetlist.
        :rtype: JsonVenue
        """
        return self._venue

    @venue.setter
    def venue(self, venue):
        """Sets the venue of this JsonSetlist.


        :param venue: The venue of this JsonSetlist.
        :type venue: JsonVenue
        """

        self._venue = venue

    @property
    def version_id(self):
        """Gets the version_id of this JsonSetlist.

        unique identifier of the version

        :return: The version_id of this JsonSetlist.
        :rtype: str
        """
        return self._version_id

    @version_id.setter
    def version_id(self, version_id):
        """Sets the version_id of this JsonSetlist.

        unique identifier of the version

        :param version_id: The version_id of this JsonSetlist.
        :type version_id: str
        """

        self._version_id = version_id
