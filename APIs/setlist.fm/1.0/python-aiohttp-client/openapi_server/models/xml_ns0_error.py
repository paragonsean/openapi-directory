# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class XmlNs0Error(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: float=None, message: str=None, status: str=None, timestamp: str=None):
        """XmlNs0Error - a model defined in OpenAPI

        :param code: The code of this XmlNs0Error.
        :param message: The message of this XmlNs0Error.
        :param status: The status of this XmlNs0Error.
        :param timestamp: The timestamp of this XmlNs0Error.
        """
        self.openapi_types = {
            'code': float,
            'message': str,
            'status': str,
            'timestamp': str
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'status': 'status',
            'timestamp': 'timestamp'
        }

        self._code = code
        self._message = message
        self._status = status
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'XmlNs0Error':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The xml_ns0_error of this XmlNs0Error.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this XmlNs0Error.

        the HTTP status code

        :return: The code of this XmlNs0Error.
        :rtype: float
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this XmlNs0Error.

        the HTTP status code

        :param code: The code of this XmlNs0Error.
        :type code: float
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this XmlNs0Error.

        an additional error message

        :return: The message of this XmlNs0Error.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this XmlNs0Error.

        an additional error message

        :param message: The message of this XmlNs0Error.
        :type message: str
        """

        self._message = message

    @property
    def status(self):
        """Gets the status of this XmlNs0Error.

        the HTTP status message

        :return: The status of this XmlNs0Error.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this XmlNs0Error.

        the HTTP status message

        :param status: The status of this XmlNs0Error.
        :type status: str
        """

        self._status = status

    @property
    def timestamp(self):
        """Gets the timestamp of this XmlNs0Error.

        current timestamp

        :return: The timestamp of this XmlNs0Error.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this XmlNs0Error.

        current timestamp

        :param timestamp: The timestamp of this XmlNs0Error.
        :type timestamp: str
        """

        self._timestamp = timestamp
