/*
 * setlist.fm API
 * <p> The setlist.fm API has been designed to give you easy access to setlist data in order to build fancy websites and other applications. Before starting to use the API, be sure to ... <ol> <li>... understand how setlist.fm works (the <a href=\"https://www.setlist.fm/faq\">FAQ</a> and the <a href=\"https://www.setlist.fm/guidelines\">Guidelines</a> are a good starting point),</li> <li>... read this documentation carefully and</li> <li>... <a href=\"https://www.setlist.fm/settings/api\">apply for an API key</a> (link for logged in users only) - if you're no registered user yet, then <a href=\"https://www.setlist.fm/signup\">register first</a> (it's free).</li> </ol> </p> <p> If this documentation isn't enough or if you've got other things you'd like to tell us about the API, visit the <a href=\"https://www.setlist.fm/forum/setlistfm/setlistfm-api\">API Forum</a>. </p> <p> Note that the setlist.fm API is, according to the <a href=\"https://www.setlist.fm/help/api-terms\">API terms of service</a>, only free for non-commercial projects. If you're interested in using the API for commercial purposes, <a href=\"https://www.setlist.fm/contact\">contact us</a>. </p>  <h2>About this Service</h2> <p> This service provides methods to get both setlists and components of setlists such as artists, cities, countries or venues. </p>  <h2>Supported Content Types</h2> <p> The REST service currently supports XML (default) and JSON content. </p> <p> To receive a JSON response, set the <code>Accept</code> <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.1\">header</a> to <em>application/json</em>. </p>  <h2>Internationalization</h2> <p> <small>(Please note that this is an experimental feature and does not work for all cities!)</small> </p> <p> Most of the featured methods honor the <code>Accept-Language</code> <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.4\">header</a>. This header is used for localizing cities and countries. The default language is English (en), but you can provide any of the languages Spanish (es), French (fr), German (de), Portuguese (pt), Turkish (tr), Italian (it) or Polish (pl). </p> <p> E.g. if you search a setlist for a concert that took place in Vienna and you pass &quot;de&quot; as header, you'll get <em>&quot;Wien, &Ouml;sterreich&quot;</em> instead of <em>&quot;Vienna, Austria&quot;</em>.<br/> This also works if you use a different language than the country's native language. </p> <p> E.g. for a concert in New York, you'll get <em>&quot;Nueva York, Estados Unidos&quot;</em> instead of <em>&quot;New York, United States&quot;</em> if you pass &quot;es&quot; as language. </p>  <h2>API Keys</h2>  API keys (<a href=\"https://www.setlist.fm/settings/api\">application form</a>) must be included in the request with the <code>x-api-key</code> header.  <h2>Version History</h2> <table class=\"table table-bordered table-versions\"> <thead> <tr> <th>Version</th> <th>Docs</th> <th>End of Service</th> </tr> </thead> <tbody> <tr> <td><strong>1.0</strong></td> <td><a href=\"/docs/1.0\">Docs</a></td> <td>-</li> </tr> <tr> <td><strong>0.1</strong></td> <td></td> <td>December 31, 2017</li> </tr> </tbody> </table>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.XmlNs0Artist;
import org.openapitools.client.model.XmlNs0Set;
import org.openapitools.client.model.XmlNs0Tour;
import org.openapitools.client.model.XmlNs0Venue;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Setlists, that&#39;s what it&#39;s all about. So if you&#39;re trying to use this API without knowing what a setlist is then you&#39;re kinda wrong on this page ;-).  A setlist can be distinguished from other setlists by its unique id. But as &lt;a href&#x3D;\&quot;https://www.setlist.fm/\&quot;&gt;setlist.fm&lt;/a&gt; works the wiki way, there can be different versions of one setlist (each time a user updates a setlist a new version gets created). These different versions have a unique id on its own. So setlists can have the same id although they differ as far as the content is concerned - thus the best way to check if two setlists are the same is to compare their versionIds.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:10.607870-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class XmlNs0Setlist {
  public static final String SERIALIZED_NAME_ARTIST = "artist";
  @SerializedName(SERIALIZED_NAME_ARTIST)
  private XmlNs0Artist artist;

  public static final String SERIALIZED_NAME_EVENT_DATE = "eventDate";
  @SerializedName(SERIALIZED_NAME_EVENT_DATE)
  private String eventDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INFO = "info";
  @SerializedName(SERIALIZED_NAME_INFO)
  private String info;

  public static final String SERIALIZED_NAME_LAST_FM_EVENT_ID = "lastFmEventId";
  @SerializedName(SERIALIZED_NAME_LAST_FM_EVENT_ID)
  private BigDecimal lastFmEventId;

  public static final String SERIALIZED_NAME_LAST_UPDATED = "lastUpdated";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATED)
  private String lastUpdated;

  public static final String SERIALIZED_NAME_SET = "set";
  @SerializedName(SERIALIZED_NAME_SET)
  private XmlNs0Set set;

  public static final String SERIALIZED_NAME_TOUR = "tour";
  @SerializedName(SERIALIZED_NAME_TOUR)
  private XmlNs0Tour tour;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_VENUE = "venue";
  @SerializedName(SERIALIZED_NAME_VENUE)
  private XmlNs0Venue venue;

  public static final String SERIALIZED_NAME_VERSION_ID = "versionId";
  @SerializedName(SERIALIZED_NAME_VERSION_ID)
  private String versionId;

  public XmlNs0Setlist() {
  }

  public XmlNs0Setlist artist(XmlNs0Artist artist) {
    this.artist = artist;
    return this;
  }

  /**
   * Get artist
   * @return artist
   */
  @javax.annotation.Nullable
  public XmlNs0Artist getArtist() {
    return artist;
  }

  public void setArtist(XmlNs0Artist artist) {
    this.artist = artist;
  }


  public XmlNs0Setlist eventDate(String eventDate) {
    this.eventDate = eventDate;
    return this;
  }

  /**
   * date of the concert in the format &amp;quot;dd-MM-yyyy&amp;quot;
   * @return eventDate
   */
  @javax.annotation.Nullable
  public String getEventDate() {
    return eventDate;
  }

  public void setEventDate(String eventDate) {
    this.eventDate = eventDate;
  }


  public XmlNs0Setlist id(String id) {
    this.id = id;
    return this;
  }

  /**
   * unique identifier
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public XmlNs0Setlist info(String info) {
    this.info = info;
    return this;
  }

  /**
   * additional information on the concert - see the &lt;a href&#x3D;\&quot;https://www.setlist.fm/guidelines\&quot;&gt;setlist.fm guidelines&lt;/a&gt; for a complete list of allowed content.
   * @return info
   */
  @javax.annotation.Nullable
  public String getInfo() {
    return info;
  }

  public void setInfo(String info) {
    this.info = info;
  }


  public XmlNs0Setlist lastFmEventId(BigDecimal lastFmEventId) {
    this.lastFmEventId = lastFmEventId;
    return this;
  }

  /**
   * the id this event has on &lt;a href&#x3D;\&quot;http://last.fm/\&quot;&gt;last.fm&lt;/a&gt; (deprecated)
   * @return lastFmEventId
   */
  @javax.annotation.Nullable
  public BigDecimal getLastFmEventId() {
    return lastFmEventId;
  }

  public void setLastFmEventId(BigDecimal lastFmEventId) {
    this.lastFmEventId = lastFmEventId;
  }


  public XmlNs0Setlist lastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
    return this;
  }

  /**
   * date, time and time zone of the last update to this setlist in the format &amp;quot;yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSSZZZZZ&amp;quot;
   * @return lastUpdated
   */
  @javax.annotation.Nullable
  public String getLastUpdated() {
    return lastUpdated;
  }

  public void setLastUpdated(String lastUpdated) {
    this.lastUpdated = lastUpdated;
  }


  public XmlNs0Setlist set(XmlNs0Set set) {
    this.set = set;
    return this;
  }

  /**
   * Get set
   * @return set
   */
  @javax.annotation.Nullable
  public XmlNs0Set getSet() {
    return set;
  }

  public void setSet(XmlNs0Set set) {
    this.set = set;
  }


  public XmlNs0Setlist tour(XmlNs0Tour tour) {
    this.tour = tour;
    return this;
  }

  /**
   * Get tour
   * @return tour
   */
  @javax.annotation.Nullable
  public XmlNs0Tour getTour() {
    return tour;
  }

  public void setTour(XmlNs0Tour tour) {
    this.tour = tour;
  }


  public XmlNs0Setlist url(String url) {
    this.url = url;
    return this;
  }

  /**
   * the attribution url to which you have to link to wherever you use data from this setlist in your application
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public XmlNs0Setlist venue(XmlNs0Venue venue) {
    this.venue = venue;
    return this;
  }

  /**
   * Get venue
   * @return venue
   */
  @javax.annotation.Nullable
  public XmlNs0Venue getVenue() {
    return venue;
  }

  public void setVenue(XmlNs0Venue venue) {
    this.venue = venue;
  }


  public XmlNs0Setlist versionId(String versionId) {
    this.versionId = versionId;
    return this;
  }

  /**
   * unique identifier of the version
   * @return versionId
   */
  @javax.annotation.Nullable
  public String getVersionId() {
    return versionId;
  }

  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    XmlNs0Setlist xmlNs0Setlist = (XmlNs0Setlist) o;
    return Objects.equals(this.artist, xmlNs0Setlist.artist) &&
        Objects.equals(this.eventDate, xmlNs0Setlist.eventDate) &&
        Objects.equals(this.id, xmlNs0Setlist.id) &&
        Objects.equals(this.info, xmlNs0Setlist.info) &&
        Objects.equals(this.lastFmEventId, xmlNs0Setlist.lastFmEventId) &&
        Objects.equals(this.lastUpdated, xmlNs0Setlist.lastUpdated) &&
        Objects.equals(this.set, xmlNs0Setlist.set) &&
        Objects.equals(this.tour, xmlNs0Setlist.tour) &&
        Objects.equals(this.url, xmlNs0Setlist.url) &&
        Objects.equals(this.venue, xmlNs0Setlist.venue) &&
        Objects.equals(this.versionId, xmlNs0Setlist.versionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(artist, eventDate, id, info, lastFmEventId, lastUpdated, set, tour, url, venue, versionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class XmlNs0Setlist {\n");
    sb.append("    artist: ").append(toIndentedString(artist)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    lastFmEventId: ").append(toIndentedString(lastFmEventId)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    set: ").append(toIndentedString(set)).append("\n");
    sb.append("    tour: ").append(toIndentedString(tour)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    venue: ").append(toIndentedString(venue)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("artist");
    openapiFields.add("eventDate");
    openapiFields.add("id");
    openapiFields.add("info");
    openapiFields.add("lastFmEventId");
    openapiFields.add("lastUpdated");
    openapiFields.add("set");
    openapiFields.add("tour");
    openapiFields.add("url");
    openapiFields.add("venue");
    openapiFields.add("versionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to XmlNs0Setlist
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!XmlNs0Setlist.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in XmlNs0Setlist is not found in the empty JSON string", XmlNs0Setlist.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!XmlNs0Setlist.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `XmlNs0Setlist` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `artist`
      if (jsonObj.get("artist") != null && !jsonObj.get("artist").isJsonNull()) {
        XmlNs0Artist.validateJsonElement(jsonObj.get("artist"));
      }
      if ((jsonObj.get("eventDate") != null && !jsonObj.get("eventDate").isJsonNull()) && !jsonObj.get("eventDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eventDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eventDate").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("info") != null && !jsonObj.get("info").isJsonNull()) && !jsonObj.get("info").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `info` to be a primitive type in the JSON string but got `%s`", jsonObj.get("info").toString()));
      }
      if ((jsonObj.get("lastUpdated") != null && !jsonObj.get("lastUpdated").isJsonNull()) && !jsonObj.get("lastUpdated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastUpdated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastUpdated").toString()));
      }
      // validate the optional field `set`
      if (jsonObj.get("set") != null && !jsonObj.get("set").isJsonNull()) {
        XmlNs0Set.validateJsonElement(jsonObj.get("set"));
      }
      // validate the optional field `tour`
      if (jsonObj.get("tour") != null && !jsonObj.get("tour").isJsonNull()) {
        XmlNs0Tour.validateJsonElement(jsonObj.get("tour"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      // validate the optional field `venue`
      if (jsonObj.get("venue") != null && !jsonObj.get("venue").isJsonNull()) {
        XmlNs0Venue.validateJsonElement(jsonObj.get("venue"));
      }
      if ((jsonObj.get("versionId") != null && !jsonObj.get("versionId").isJsonNull()) && !jsonObj.get("versionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `versionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("versionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!XmlNs0Setlist.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'XmlNs0Setlist' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<XmlNs0Setlist> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(XmlNs0Setlist.class));

       return (TypeAdapter<T>) new TypeAdapter<XmlNs0Setlist>() {
           @Override
           public void write(JsonWriter out, XmlNs0Setlist value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public XmlNs0Setlist read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of XmlNs0Setlist given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of XmlNs0Setlist
   * @throws IOException if the JSON string is invalid with respect to XmlNs0Setlist
   */
  public static XmlNs0Setlist fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, XmlNs0Setlist.class);
  }

  /**
   * Convert an instance of XmlNs0Setlist to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

