/**
 * FraudLabs Pro SMS Verification
 * Send an SMS with verification code and a custom message for authentication purpose. It helps merchants to minimize chargebacks and fraud for various kinds of payment method, such as credit card, paypal, cod and so on. Please visit https://www.fraudlabspro.com to learn more.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Default service.
* @module api/DefaultApi
* @version 1.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v1VerificationResultGet operation.
     * @callback module:api/DefaultApi~v1VerificationResultGetCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Verify that an OTP sent by the Send SMS Verification API is valid.
     * @param {String} tranId The unique ID that was returned by the Send Verification SMS API that triggered the OTP sms.
     * @param {String} key FraudLabs Pro API key.
     * @param {String} otp The OTP that was sent to the recipientâ€™s phone.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [format] Returns the API response in json (default) or xml format.
     * @param {module:api/DefaultApi~v1VerificationResultGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    v1VerificationResultGet(tranId, key, otp, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'tranId' is set
      if (tranId === undefined || tranId === null) {
        throw new Error("Missing the required parameter 'tranId' when calling v1VerificationResultGet");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling v1VerificationResultGet");
      }
      // verify the required parameter 'otp' is set
      if (otp === undefined || otp === null) {
        throw new Error("Missing the required parameter 'otp' when calling v1VerificationResultGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'tran_id': tranId,
        'key': key,
        'format': opts['format'],
        'otp': otp
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json; charset=utf-8'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/v1/verification/result', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1VerificationSendPost operation.
     * @callback module:api/DefaultApi~v1VerificationSendPostCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Send an SMS with verification code and a custom message for authentication purpose.
     * @param {String} tel The recipient mobile phone number in E164 format which is a plus followed by just numbers with no spaces or parentheses.
     * @param {String} key FraudLabs Pro API key.
     * @param {Object} opts Optional parameters
     * @param {String} [countryCode] ISO 3166 country code for the recipient mobile phone number. If parameter is supplied, then some basic telephone number validation is done.
     * @param {module:model/String} [format] Returns the API response in json (default) or xml format.
     * @param {String} [mesg] The message template for the SMS. Add <otp> as placeholder for the actual OTP to be generated. Max length is 140 characters.
     * @param {module:api/DefaultApi~v1VerificationSendPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    v1VerificationSendPost(tel, key, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'tel' is set
      if (tel === undefined || tel === null) {
        throw new Error("Missing the required parameter 'tel' when calling v1VerificationSendPost");
      }
      // verify the required parameter 'key' is set
      if (key === undefined || key === null) {
        throw new Error("Missing the required parameter 'key' when calling v1VerificationSendPost");
      }

      let pathParams = {
      };
      let queryParams = {
        'country_code': opts['countryCode'],
        'format': opts['format'],
        'tel': tel,
        'key': key,
        'mesg': opts['mesg']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json; charset=utf-8'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/v1/verification/send', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
