/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectFeatureFlags model module.
 * @module model/ProjectFeatureFlags
 * @version v1
 */
class ProjectFeatureFlags {
    /**
     * Constructs a new <code>ProjectFeatureFlags</code>.
     * @alias module:model/ProjectFeatureFlags
     */
    constructor() { 
        
        ProjectFeatureFlags.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ProjectFeatureFlags</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectFeatureFlags} obj Optional instance to populate.
     * @return {module:model/ProjectFeatureFlags} The populated <code>ProjectFeatureFlags</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectFeatureFlags();

            if (data.hasOwnProperty('build-fork-prs')) {
                obj['build-fork-prs'] = ApiClient.convertToType(data['build-fork-prs'], 'Boolean');
            }
            if (data.hasOwnProperty('fleet')) {
                obj['fleet'] = ApiClient.convertToType(data['fleet'], 'Boolean');
            }
            if (data.hasOwnProperty('junit')) {
                obj['junit'] = ApiClient.convertToType(data['junit'], 'Boolean');
            }
            if (data.hasOwnProperty('oss')) {
                obj['oss'] = ApiClient.convertToType(data['oss'], 'Boolean');
            }
            if (data.hasOwnProperty('osx')) {
                obj['osx'] = ApiClient.convertToType(data['osx'], 'Boolean');
            }
            if (data.hasOwnProperty('set-github-status')) {
                obj['set-github-status'] = ApiClient.convertToType(data['set-github-status'], 'Boolean');
            }
            if (data.hasOwnProperty('trusty-beta')) {
                obj['trusty-beta'] = ApiClient.convertToType(data['trusty-beta'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectFeatureFlags</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectFeatureFlags</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Boolean} build-fork-prs
 */
ProjectFeatureFlags.prototype['build-fork-prs'] = undefined;

/**
 * @member {Boolean} fleet
 */
ProjectFeatureFlags.prototype['fleet'] = undefined;

/**
 * @member {Boolean} junit
 */
ProjectFeatureFlags.prototype['junit'] = undefined;

/**
 * @member {Boolean} oss
 */
ProjectFeatureFlags.prototype['oss'] = undefined;

/**
 * @member {Boolean} osx
 */
ProjectFeatureFlags.prototype['osx'] = undefined;

/**
 * @member {Boolean} set-github-status
 */
ProjectFeatureFlags.prototype['set-github-status'] = undefined;

/**
 * @member {Boolean} trusty-beta
 */
ProjectFeatureFlags.prototype['trusty-beta'] = undefined;






export default ProjectFeatureFlags;

