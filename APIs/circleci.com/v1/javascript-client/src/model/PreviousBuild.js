/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Status from './Status';

/**
 * The PreviousBuild model module.
 * @module model/PreviousBuild
 * @version v1
 */
class PreviousBuild {
    /**
     * Constructs a new <code>PreviousBuild</code>.
     * previous build
     * @alias module:model/PreviousBuild
     */
    constructor() { 
        
        PreviousBuild.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PreviousBuild</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PreviousBuild} obj Optional instance to populate.
     * @return {module:model/PreviousBuild} The populated <code>PreviousBuild</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PreviousBuild();

            if (data.hasOwnProperty('build_num')) {
                obj['build_num'] = ApiClient.convertToType(data['build_num'], 'Number');
            }
            if (data.hasOwnProperty('build_time_millis')) {
                obj['build_time_millis'] = ApiClient.convertToType(data['build_time_millis'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = Status.constructFromObject(data['status']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PreviousBuild</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PreviousBuild</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} build_num
 */
PreviousBuild.prototype['build_num'] = undefined;

/**
 * @member {Number} build_time_millis
 */
PreviousBuild.prototype['build_time_millis'] = undefined;

/**
 * @member {module:model/Status} status
 */
PreviousBuild.prototype['status'] = undefined;






export default PreviousBuild;

