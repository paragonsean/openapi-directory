/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.CircleCiRestApi);
  }
}(this, function(expect, CircleCiRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new CircleCiRestApi.CommitDetail();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CommitDetail', function() {
    it('should create an instance of CommitDetail', function() {
      // uncomment below and update the code to test CommitDetail
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be.a(CircleCiRestApi.CommitDetail);
    });

    it('should have the property authorDate (base name: "author_date")', function() {
      // uncomment below and update the code to test the property authorDate
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property authorEmail (base name: "author_email")', function() {
      // uncomment below and update the code to test the property authorEmail
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property authorLogin (base name: "author_login")', function() {
      // uncomment below and update the code to test the property authorLogin
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property authorName (base name: "author_name")', function() {
      // uncomment below and update the code to test the property authorName
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property body (base name: "body")', function() {
      // uncomment below and update the code to test the property body
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property commit (base name: "commit")', function() {
      // uncomment below and update the code to test the property commit
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property commitUrl (base name: "commit_url")', function() {
      // uncomment below and update the code to test the property commitUrl
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property committerDate (base name: "committer_date")', function() {
      // uncomment below and update the code to test the property committerDate
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property committerEmail (base name: "committer_email")', function() {
      // uncomment below and update the code to test the property committerEmail
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property committerLogin (base name: "committer_login")', function() {
      // uncomment below and update the code to test the property committerLogin
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property committerName (base name: "committer_name")', function() {
      // uncomment below and update the code to test the property committerName
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

    it('should have the property subject (base name: "subject")', function() {
      // uncomment below and update the code to test the property subject
      //var instance = new CircleCiRestApi.CommitDetail();
      //expect(instance).to.be();
    });

  });

}));
