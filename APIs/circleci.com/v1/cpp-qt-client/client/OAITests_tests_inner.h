/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITests_tests_inner.h
 *
 * 
 */

#ifndef OAITests_tests_inner_H
#define OAITests_tests_inner_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITests_tests_inner : public OAIObject {
public:
    OAITests_tests_inner();
    OAITests_tests_inner(QString json);
    ~OAITests_tests_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClassname() const;
    void setClassname(const QString &classname);
    bool is_classname_Set() const;
    bool is_classname_Valid() const;

    QString getFile() const;
    void setFile(const QString &file);
    bool is_file_Set() const;
    bool is_file_Valid() const;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIStatus getResult() const;
    void setResult(const OAIStatus &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    double getRunTime() const;
    void setRunTime(const double &run_time);
    bool is_run_time_Set() const;
    bool is_run_time_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_classname;
    bool m_classname_isSet;
    bool m_classname_isValid;

    QString m_file;
    bool m_file_isSet;
    bool m_file_isValid;

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIStatus m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    double m_run_time;
    bool m_run_time_isSet;
    bool m_run_time_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITests_tests_inner)

#endif // OAITests_tests_inner_H
