/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_project__username___project__ssh_key_post_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_project__username___project__ssh_key_post_request::OAI_project__username___project__ssh_key_post_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_project__username___project__ssh_key_post_request::OAI_project__username___project__ssh_key_post_request() {
    this->initializeModel();
}

OAI_project__username___project__ssh_key_post_request::~OAI_project__username___project__ssh_key_post_request() {}

void OAI_project__username___project__ssh_key_post_request::initializeModel() {

    m_hostname_isSet = false;
    m_hostname_isValid = false;

    m_private_key_isSet = false;
    m_private_key_isValid = false;
}

void OAI_project__username___project__ssh_key_post_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_project__username___project__ssh_key_post_request::fromJsonObject(QJsonObject json) {

    m_hostname_isValid = ::OpenAPI::fromJsonValue(m_hostname, json[QString("hostname")]);
    m_hostname_isSet = !json[QString("hostname")].isNull() && m_hostname_isValid;

    m_private_key_isValid = ::OpenAPI::fromJsonValue(m_private_key, json[QString("private_key")]);
    m_private_key_isSet = !json[QString("private_key")].isNull() && m_private_key_isValid;
}

QString OAI_project__username___project__ssh_key_post_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_project__username___project__ssh_key_post_request::asJsonObject() const {
    QJsonObject obj;
    if (m_hostname_isSet) {
        obj.insert(QString("hostname"), ::OpenAPI::toJsonValue(m_hostname));
    }
    if (m_private_key_isSet) {
        obj.insert(QString("private_key"), ::OpenAPI::toJsonValue(m_private_key));
    }
    return obj;
}

QString OAI_project__username___project__ssh_key_post_request::getHostname() const {
    return m_hostname;
}
void OAI_project__username___project__ssh_key_post_request::setHostname(const QString &hostname) {
    m_hostname = hostname;
    m_hostname_isSet = true;
}

bool OAI_project__username___project__ssh_key_post_request::is_hostname_Set() const{
    return m_hostname_isSet;
}

bool OAI_project__username___project__ssh_key_post_request::is_hostname_Valid() const{
    return m_hostname_isValid;
}

QString OAI_project__username___project__ssh_key_post_request::getPrivateKey() const {
    return m_private_key;
}
void OAI_project__username___project__ssh_key_post_request::setPrivateKey(const QString &private_key) {
    m_private_key = private_key;
    m_private_key_isSet = true;
}

bool OAI_project__username___project__ssh_key_post_request::is_private_key_Set() const{
    return m_private_key_isSet;
}

bool OAI_project__username___project__ssh_key_post_request::is_private_key_Valid() const{
    return m_private_key_isValid;
}

bool OAI_project__username___project__ssh_key_post_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_hostname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_project__username___project__ssh_key_post_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
