/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICommitDetail.h
 *
 * 
 */

#ifndef OAICommitDetail_H
#define OAICommitDetail_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICommitDetail : public OAIObject {
public:
    OAICommitDetail();
    OAICommitDetail(QString json);
    ~OAICommitDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAuthorDate() const;
    void setAuthorDate(const QDateTime &author_date);
    bool is_author_date_Set() const;
    bool is_author_date_Valid() const;

    QString getAuthorEmail() const;
    void setAuthorEmail(const QString &author_email);
    bool is_author_email_Set() const;
    bool is_author_email_Valid() const;

    QString getAuthorLogin() const;
    void setAuthorLogin(const QString &author_login);
    bool is_author_login_Set() const;
    bool is_author_login_Valid() const;

    QString getAuthorName() const;
    void setAuthorName(const QString &author_name);
    bool is_author_name_Set() const;
    bool is_author_name_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    QString getCommit() const;
    void setCommit(const QString &commit);
    bool is_commit_Set() const;
    bool is_commit_Valid() const;

    QString getCommitUrl() const;
    void setCommitUrl(const QString &commit_url);
    bool is_commit_url_Set() const;
    bool is_commit_url_Valid() const;

    QDateTime getCommitterDate() const;
    void setCommitterDate(const QDateTime &committer_date);
    bool is_committer_date_Set() const;
    bool is_committer_date_Valid() const;

    QString getCommitterEmail() const;
    void setCommitterEmail(const QString &committer_email);
    bool is_committer_email_Set() const;
    bool is_committer_email_Valid() const;

    QString getCommitterLogin() const;
    void setCommitterLogin(const QString &committer_login);
    bool is_committer_login_Set() const;
    bool is_committer_login_Valid() const;

    QString getCommitterName() const;
    void setCommitterName(const QString &committer_name);
    bool is_committer_name_Set() const;
    bool is_committer_name_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_author_date;
    bool m_author_date_isSet;
    bool m_author_date_isValid;

    QString m_author_email;
    bool m_author_email_isSet;
    bool m_author_email_isValid;

    QString m_author_login;
    bool m_author_login_isSet;
    bool m_author_login_isValid;

    QString m_author_name;
    bool m_author_name_isSet;
    bool m_author_name_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    QString m_commit;
    bool m_commit_isSet;
    bool m_commit_isValid;

    QString m_commit_url;
    bool m_commit_url_isSet;
    bool m_commit_url_isValid;

    QDateTime m_committer_date;
    bool m_committer_date_isSet;
    bool m_committer_date_isValid;

    QString m_committer_email;
    bool m_committer_email_isSet;
    bool m_committer_email_isValid;

    QString m_committer_login;
    bool m_committer_login_isSet;
    bool m_committer_login_isValid;

    QString m_committer_name;
    bool m_committer_name_isSet;
    bool m_committer_name_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICommitDetail)

#endif // OAICommitDetail_H
