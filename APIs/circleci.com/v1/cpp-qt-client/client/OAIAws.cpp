/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAws.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAws::OAIAws(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAws::OAIAws() {
    this->initializeModel();
}

OAIAws::~OAIAws() {}

void OAIAws::initializeModel() {

    m_keypair_isSet = false;
    m_keypair_isValid = false;
}

void OAIAws::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAws::fromJsonObject(QJsonObject json) {

    m_keypair_isValid = ::OpenAPI::fromJsonValue(m_keypair, json[QString("keypair")]);
    m_keypair_isSet = !json[QString("keypair")].isNull() && m_keypair_isValid;
}

QString OAIAws::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAws::asJsonObject() const {
    QJsonObject obj;
    if (m_keypair_isSet) {
        obj.insert(QString("keypair"), ::OpenAPI::toJsonValue(m_keypair));
    }
    return obj;
}

QString OAIAws::getKeypair() const {
    return m_keypair;
}
void OAIAws::setKeypair(const QString &keypair) {
    m_keypair = keypair;
    m_keypair_isSet = true;
}

bool OAIAws::is_keypair_Set() const{
    return m_keypair_isSet;
}

bool OAIAws::is_keypair_Valid() const{
    return m_keypair_isValid;
}

bool OAIAws::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_keypair_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAws::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
