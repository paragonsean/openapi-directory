/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIArtifact.h
 *
 * 
 */

#ifndef OAIArtifact_H
#define OAIArtifact_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIArtifact : public OAIObject {
public:
    OAIArtifact();
    OAIArtifact(QString json);
    ~OAIArtifact() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getNodeIndex() const;
    void setNodeIndex(const qint32 &node_index);
    bool is_node_index_Set() const;
    bool is_node_index_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getPrettyPath() const;
    void setPrettyPath(const QString &pretty_path);
    bool is_pretty_path_Set() const;
    bool is_pretty_path_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_node_index;
    bool m_node_index_isSet;
    bool m_node_index_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_pretty_path;
    bool m_pretty_path_isSet;
    bool m_pretty_path_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIArtifact)

#endif // OAIArtifact_H
