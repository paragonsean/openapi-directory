/**
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_project__username___project__tree__branch__post_request.h
 *
 * 
 */

#ifndef OAI_project__username___project__tree__branch__post_request_H
#define OAI_project__username___project__tree__branch__post_request_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_project__username___project__tree__branch__post_request : public OAIObject {
public:
    OAI_project__username___project__tree__branch__post_request();
    OAI_project__username___project__tree__branch__post_request(QString json);
    ~OAI_project__username___project__tree__branch__post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getBuildParameters() const;
    void setBuildParameters(const OAIObject &build_parameters);
    bool is_build_parameters_Set() const;
    bool is_build_parameters_Valid() const;

    QString getParallel() const;
    void setParallel(const QString &parallel);
    bool is_parallel_Set() const;
    bool is_parallel_Valid() const;

    QString getRevision() const;
    void setRevision(const QString &revision);
    bool is_revision_Set() const;
    bool is_revision_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_build_parameters;
    bool m_build_parameters_isSet;
    bool m_build_parameters_isValid;

    QString m_parallel;
    bool m_parallel_isSet;
    bool m_parallel_isValid;

    QString m_revision;
    bool m_revision_isSet;
    bool m_revision_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_project__username___project__tree__branch__post_request)

#endif // OAI_project__username___project__tree__branch__post_request_H
