/*
 * CircleCI REST API
 * The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI. You can access all information and trigger all actions. The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.Lifecycle;
import org.openapitools.client.model.PreviousBuild;
import org.openapitools.jackson.nullable.JsonNullable;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Build
 */
public class BuildTest {
    private final Build model = new Build();

    /**
     * Model tests for Build
     */
    @Test
    public void testBuild() {
        // TODO: test Build
    }

    /**
     * Test the property 'body'
     */
    @Test
    public void bodyTest() {
        // TODO: test body
    }

    /**
     * Test the property 'branch'
     */
    @Test
    public void branchTest() {
        // TODO: test branch
    }

    /**
     * Test the property 'buildTimeMillis'
     */
    @Test
    public void buildTimeMillisTest() {
        // TODO: test buildTimeMillis
    }

    /**
     * Test the property 'buildUrl'
     */
    @Test
    public void buildUrlTest() {
        // TODO: test buildUrl
    }

    /**
     * Test the property 'committerEmail'
     */
    @Test
    public void committerEmailTest() {
        // TODO: test committerEmail
    }

    /**
     * Test the property 'committerName'
     */
    @Test
    public void committerNameTest() {
        // TODO: test committerName
    }

    /**
     * Test the property 'dontBuild'
     */
    @Test
    public void dontBuildTest() {
        // TODO: test dontBuild
    }

    /**
     * Test the property 'lifecycle'
     */
    @Test
    public void lifecycleTest() {
        // TODO: test lifecycle
    }

    /**
     * Test the property 'previous'
     */
    @Test
    public void previousTest() {
        // TODO: test previous
    }

    /**
     * Test the property 'queuedAt'
     */
    @Test
    public void queuedAtTest() {
        // TODO: test queuedAt
    }

    /**
     * Test the property 'reponame'
     */
    @Test
    public void reponameTest() {
        // TODO: test reponame
    }

    /**
     * Test the property 'retryOf'
     */
    @Test
    public void retryOfTest() {
        // TODO: test retryOf
    }

    /**
     * Test the property 'startTime'
     */
    @Test
    public void startTimeTest() {
        // TODO: test startTime
    }

    /**
     * Test the property 'stopTime'
     */
    @Test
    public void stopTimeTest() {
        // TODO: test stopTime
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

    /**
     * Test the property 'username'
     */
    @Test
    public void usernameTest() {
        // TODO: test username
    }

    /**
     * Test the property 'vcsUrl'
     */
    @Test
    public void vcsUrlTest() {
        // TODO: test vcsUrl
    }

    /**
     * Test the property 'why'
     */
    @Test
    public void whyTest() {
        // TODO: test why
    }

}
