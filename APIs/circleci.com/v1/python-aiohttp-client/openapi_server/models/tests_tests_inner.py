# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class TestsTestsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, classname: str=None, file: str=None, message: str=None, name: str=None, result: Status=None, run_time: float=None, source: str=None):
        """TestsTestsInner - a model defined in OpenAPI

        :param classname: The classname of this TestsTestsInner.
        :param file: The file of this TestsTestsInner.
        :param message: The message of this TestsTestsInner.
        :param name: The name of this TestsTestsInner.
        :param result: The result of this TestsTestsInner.
        :param run_time: The run_time of this TestsTestsInner.
        :param source: The source of this TestsTestsInner.
        """
        self.openapi_types = {
            'classname': str,
            'file': str,
            'message': str,
            'name': str,
            'result': Status,
            'run_time': float,
            'source': str
        }

        self.attribute_map = {
            'classname': 'classname',
            'file': 'file',
            'message': 'message',
            'name': 'name',
            'result': 'result',
            'run_time': 'run_time',
            'source': 'source'
        }

        self._classname = classname
        self._file = file
        self._message = message
        self._name = name
        self._result = result
        self._run_time = run_time
        self._source = source

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestsTestsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tests_tests_inner of this TestsTestsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classname(self):
        """Gets the classname of this TestsTestsInner.


        :return: The classname of this TestsTestsInner.
        :rtype: str
        """
        return self._classname

    @classname.setter
    def classname(self, classname):
        """Sets the classname of this TestsTestsInner.


        :param classname: The classname of this TestsTestsInner.
        :type classname: str
        """

        self._classname = classname

    @property
    def file(self):
        """Gets the file of this TestsTestsInner.


        :return: The file of this TestsTestsInner.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this TestsTestsInner.


        :param file: The file of this TestsTestsInner.
        :type file: str
        """

        self._file = file

    @property
    def message(self):
        """Gets the message of this TestsTestsInner.


        :return: The message of this TestsTestsInner.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this TestsTestsInner.


        :param message: The message of this TestsTestsInner.
        :type message: str
        """

        self._message = message

    @property
    def name(self):
        """Gets the name of this TestsTestsInner.


        :return: The name of this TestsTestsInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TestsTestsInner.


        :param name: The name of this TestsTestsInner.
        :type name: str
        """

        self._name = name

    @property
    def result(self):
        """Gets the result of this TestsTestsInner.


        :return: The result of this TestsTestsInner.
        :rtype: Status
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this TestsTestsInner.


        :param result: The result of this TestsTestsInner.
        :type result: Status
        """

        self._result = result

    @property
    def run_time(self):
        """Gets the run_time of this TestsTestsInner.


        :return: The run_time of this TestsTestsInner.
        :rtype: float
        """
        return self._run_time

    @run_time.setter
    def run_time(self, run_time):
        """Sets the run_time of this TestsTestsInner.


        :param run_time: The run_time of this TestsTestsInner.
        :type run_time: float
        """

        self._run_time = run_time

    @property
    def source(self):
        """Gets the source of this TestsTestsInner.


        :return: The source of this TestsTestsInner.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this TestsTestsInner.


        :param source: The source of this TestsTestsInner.
        :type source: str
        """

        self._source = source
