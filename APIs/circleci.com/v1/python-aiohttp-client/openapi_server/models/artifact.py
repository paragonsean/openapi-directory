# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Artifact(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_index: int=None, path: str=None, pretty_path: str=None, url: str=None):
        """Artifact - a model defined in OpenAPI

        :param node_index: The node_index of this Artifact.
        :param path: The path of this Artifact.
        :param pretty_path: The pretty_path of this Artifact.
        :param url: The url of this Artifact.
        """
        self.openapi_types = {
            'node_index': int,
            'path': str,
            'pretty_path': str,
            'url': str
        }

        self.attribute_map = {
            'node_index': 'node_index',
            'path': 'path',
            'pretty_path': 'pretty_path',
            'url': 'url'
        }

        self._node_index = node_index
        self._path = path
        self._pretty_path = pretty_path
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Artifact':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Artifact of this Artifact.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_index(self):
        """Gets the node_index of this Artifact.


        :return: The node_index of this Artifact.
        :rtype: int
        """
        return self._node_index

    @node_index.setter
    def node_index(self, node_index):
        """Sets the node_index of this Artifact.


        :param node_index: The node_index of this Artifact.
        :type node_index: int
        """

        self._node_index = node_index

    @property
    def path(self):
        """Gets the path of this Artifact.


        :return: The path of this Artifact.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this Artifact.


        :param path: The path of this Artifact.
        :type path: str
        """

        self._path = path

    @property
    def pretty_path(self):
        """Gets the pretty_path of this Artifact.


        :return: The pretty_path of this Artifact.
        :rtype: str
        """
        return self._pretty_path

    @pretty_path.setter
    def pretty_path(self, pretty_path):
        """Sets the pretty_path of this Artifact.


        :param pretty_path: The pretty_path of this Artifact.
        :type pretty_path: str
        """

        self._pretty_path = pretty_path

    @property
    def url(self):
        """Gets the url of this Artifact.


        :return: The url of this Artifact.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this Artifact.


        :param url: The url of this Artifact.
        :type url: str
        """

        self._url = url
