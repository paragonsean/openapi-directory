openapi: 3.0.0
info:
  description: |
    The CircleCI API is a RESTful, fully-featured API that allows you to do almost anything in CircleCI.
    You can access all information and trigger all actions.
    The only thing we donâ€™t provide access to is billing functions, which must be done from the CircleCI web UI.
  license:
    name: Attribution-NonCommercial-ShareAlike 4.0 International
    url: http://creativecommons.org/licenses/by-nc-sa/4.0/
  title: CircleCI REST API
  version: v1
  x-apisguru-categories:
  - developer_tools
  x-logo:
    url: https://avatars0.githubusercontent.com/u/1231870?v=3&s=200
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/kamikazechaser/spec-circleci/master/swagger.yml
    version: "3.0"
  x-providerName: circleci.com
  x-unofficialSpec: true
servers:
- url: https://circleci.com/api/v1
security:
- apikey: []
paths:
  /me:
    get:
      description: |
        Provides information about the signed in user.
      operationId: me_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: signed in user
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}:
    get:
      description: |
        Build summary for each of the last 30 builds for a single git repo.
      operationId: project_username_project_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The number of builds to return. Maximum 100, defaults to 30.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 30
          maximum: 100
          type: integer
        style: form
      - description: |
          The API returns builds starting from this offset, defaults to 0.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      - description: |
          Restricts which builds are returned.
          Set to "completed", "successful", "failed", "running", or defaults to no filter.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          enum:
          - completed
          - successful
          - failed
          - running
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Builds'
          description: Build summary for each of the last 30 builds
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: |
        Triggers a new build, returns a summary of the build.
      operationId: project_username_project_post
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_project__username___project__post_request'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildSummary'
          description: returns a summary of the build
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /project/{username}/{project}/build-cache:
    delete:
      description: |
        Clears the cache for a project.
      operationId: project_username_project_build_cache_delete
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_project__username___project__build_cache_delete_200_response'
          description: status message
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/checkout-key:
    get:
      description: |
        Lists checkout keys.
      operationId: project_username_project_checkout_key_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Keys'
          description: checkout keys
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: |
        Creates a new checkout key.
        Only usable with a user API token.
      operationId: project_username_project_checkout_key_post
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              enum:
              - deploy-key
              - github-user-key
              type: string
        description: |
          The type of key to create. Can be 'deploy-key' or 'github-user-key'.
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: checkout key
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /project/{username}/{project}/checkout-key/{fingerprint}:
    delete:
      description: |
        Delete a checkout key.
      operationId: project_username_project_checkout_key_fingerprint_delete
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_project__username___project__checkout_key__fingerprint__delete_200_response'
          description: status message
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: |
        Get a checkout key.
      operationId: project_username_project_checkout_key_fingerprint_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: fingerprint
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Key'
          description: checkout key
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/envvar:
    get:
      description: |
        Lists the environment variables for :project
      operationId: project_username_project_envvar_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envvars'
          description: XXX
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: |
        Creates a new environment variable
      operationId: project_username_project_envvar_post
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envvar'
          description: XXX
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/envvar/{name}:
    delete:
      description: |
        Deletes the environment variable named ':name'
      operationId: project_username_project_envvar_name_delete
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_project__username___project__checkout_key__fingerprint__delete_200_response'
          description: |
            Deletes the environment variable named ':name'
      x-openapi-router-controller: openapi_server.controllers.default_controller
    get:
      description: |
        Gets the hidden value of environment variable :name
      operationId: project_username_project_envvar_name_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Envvar'
          description: XXX
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/ssh-key:
    post:
      description: |
        Create an ssh key used to access external systems that require SSH key-based authentication
      operationId: project_username_project_ssh_key_post
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: Content-Type
        required: true
        schema:
          enum:
          - application/json
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_project__username___project__ssh_key_post_request'
        required: true
        x-body-name: body
      responses:
        default:
          content:
            application/json:
              examples:
                response:
                  value:
                    message: a private key is required
              schema:
                $ref: '#/components/schemas/_project__username___project__ssh_key_post_default_response'
          description: no response expected
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /project/{username}/{project}/tree/{branch}:
    post:
      description: |
        Triggers a new build, returns a summary of the build.
        Optional build parameters can be set using an experimental API.

        Note: For more about build parameters, read about [using parameterized builds](https://circleci.com/docs/parameterized-builds/)
      operationId: project_username_project_tree_branch_post
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          The branch name should be url-encoded.
        explode: false
        in: path
        name: branch
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/_project__username___project__tree__branch__post_request'
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: returns a summary of the build
          headers:
            Location:
              explode: false
              schema:
                format: uri
                type: string
              style: simple
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /project/{username}/{project}/{build_num}:
    get:
      description: |
        Full details for a single build. The response includes all of the fields from the build summary.
        This is also the payload for the [notification webhooks](/docs/configuration/#notify), in which case this object is the value to a key named 'payload'.
      operationId: project_username_project_build_num_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: build_num
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildDetail'
          description: Full details for a single build
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/{build_num}/artifacts:
    get:
      description: |
        List the artifacts produced by a given build.
      operationId: project_username_project_build_num_artifacts_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: build_num
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artifacts'
          description: List the artifacts produced by a given build
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/{build_num}/cancel:
    post:
      description: |
        Cancels the build, returns a summary of the build.
      operationId: project_username_project_build_num_cancel_post
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: build_num
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: returns a summary of the build
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/{build_num}/retry:
    post:
      description: |
        Retries the build, returns a summary of the new build.
      operationId: project_username_project_build_num_retry_post
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: build_num
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Build'
          description: returns a summary of the new build
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /project/{username}/{project}/{build_num}/tests:
    get:
      description: |
        Provides test metadata for a build
        Note: [Learn how to set up your builds to collect test metadata](https://circleci.com/docs/test-metadata/)
      operationId: project_username_project_build_num_tests_get
      parameters:
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: username
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXX
        explode: false
        in: path
        name: project
        required: true
        schema:
          type: string
        style: simple
      - description: |
          XXXXXXXXXX
        explode: false
        in: path
        name: build_num
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tests'
          description: |
            test metadata for a build
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /projects:
    get:
      description: |
        List of all the projects you're following on CircleCI, with build information organized by branch.
      operationId: projects_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Projects'
          description: |
            List of all the projects you're following on CircleCI
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /recent-builds:
    get:
      description: |
        Build summary for each of the last 30 recent builds, ordered by build_num.
      operationId: recent_builds_get
      parameters:
      - description: |
          The number of builds to return. Maximum 100, defaults to 30.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 30
          maximum: 100
          type: integer
        style: form
      - description: |
          The API returns builds starting from this offset, defaults to 0.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: 0
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Builds'
          description: Build summary for each of the last 30 recent builds
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /user/heroku-key:
    post:
      description: |
        Adds your Heroku API key to CircleCI, takes apikey as form param name.
      operationId: user_heroku_key_post
      responses:
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_project__username___project__ssh_key_post_default_response'
          description: |
            Your Heroku API key is invalid.
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    branch:
      description: |
        The branch name should be url-encoded.
      explode: false
      in: path
      name: branch
      required: true
      schema:
        type: string
      style: simple
    build_num:
      description: |
        XXXXXXXXXX
      explode: false
      in: path
      name: build_num
      required: true
      schema:
        type: integer
      style: simple
    envvar_name:
      description: |
        XXXXXXXXXX
      explode: false
      in: path
      name: name
      required: true
      schema:
        type: string
      style: simple
    filter:
      description: |
        Restricts which builds are returned.
        Set to "completed", "successful", "failed", "running", or defaults to no filter.
      explode: true
      in: query
      name: filter
      required: false
      schema:
        enum:
        - completed
        - successful
        - failed
        - running
        type: string
      style: form
    fingerprint:
      description: |
        XXXXXXXXXX
      explode: false
      in: path
      name: fingerprint
      required: true
      schema:
        type: string
      style: simple
    limit:
      description: |
        The number of builds to return. Maximum 100, defaults to 30.
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 30
        maximum: 100
        type: integer
      style: form
    offset:
      description: |
        The API returns builds starting from this offset, defaults to 0.
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        type: integer
      style: form
    project:
      description: |
        XXXXXXXXX
      explode: false
      in: path
      name: project
      required: true
      schema:
        type: string
      style: simple
    username:
      description: |
        XXXXXXXXX
      explode: false
      in: path
      name: username
      required: true
      schema:
        type: string
      style: simple
  responses:
    envvar:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Envvar'
      description: XXX
    envvars:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Envvars'
      description: XXX
    key:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Key'
      description: checkout key
  schemas:
    Artifact:
      example:
        path: path
        node_index: 0
        pretty_path: pretty_path
        url: url
      properties:
        node_index:
          title: node_index
          type: integer
        path:
          title: path
          type: string
        pretty_path:
          title: pretty_path
          type: string
        url:
          title: url
          type: string
      title: Artifact
      type: object
    Artifacts:
      items:
        $ref: '#/components/schemas/Artifact'
      type: array
    Aws:
      example:
        keypair: keypair
      properties:
        keypair:
          nullable: true
          title: keypair
          type: string
      title: Aws
      type: object
    Build:
      example:
        retry_of: 5
        committer_email: committer_email
        stop_time: 2000-01-23T04:56:07.000+00:00
        previous:
          build_num: 6
          build_time_millis: 1
          status: retried
        queued_at: 2000-01-23T04:56:07.000+00:00
        subject: subject
        vcs_url: https://openapi-generator.tech
        build_time_millis: 0
        dont_build: dont_build
        why: why
        body: body
        branch: branch
        committer_name: committer_name
        lifecycle: queued
        start_time: 2000-01-23T04:56:07.000+00:00
        reponame: reponame
        build_url: https://openapi-generator.tech
        username: username
      properties:
        body:
          description: commit message body
          title: body
          type: string
        branch:
          title: branch
          type: string
        build_time_millis:
          title: build_time_millis
          type: integer
        build_url:
          format: uri
          title: build_url
          type: string
        committer_email:
          format: email
          title: committer_email
          type: string
        committer_name:
          title: committer_name
          type: string
        dont_build:
          description: "reason why we didn't build, if we didn't build"
          nullable: true
          title: dont_build
          type: string
        lifecycle:
          $ref: '#/components/schemas/Lifecycle'
        previous:
          $ref: '#/components/schemas/PreviousBuild'
        queued_at:
          description: time build was queued
          format: date-time
          title: queued_at
          type: string
        reponame:
          title: reponame
          type: string
        retry_of:
          description: build_num of the build this is a retry of
          nullable: true
          title: retry_of
          type: integer
        start_time:
          description: time build started
          format: date-time
          title: start_time
          type: string
        stop_time:
          description: time build finished
          format: date-time
          title: stop_time
          type: string
        subject:
          title: subject
          type: string
        username:
          title: username
          type: string
        vcs_url:
          format: uri
          title: vcs_url
          type: string
        why:
          description: short string explaining the reason we built
          title: why
          type: string
      title: Build
      type: object
    BuildDetail:
      description: previous build
      example:
        all_commit_details:
        - author_name: author_name
          author_login: author_login
          commit_url: https://openapi-generator.tech
          committer_email: committer_email
          committer_login: committer_login
          subject: subject
          author_date: 2000-01-23T04:56:07.000+00:00
          commit: commit
          author_email: author_email
          committer_date: 2000-01-23T04:56:07.000+00:00
          body: body
          committer_name: committer_name
        - author_name: author_name
          author_login: author_login
          commit_url: https://openapi-generator.tech
          committer_email: committer_email
          committer_login: committer_login
          subject: subject
          author_date: 2000-01-23T04:56:07.000+00:00
          commit: commit
          author_email: author_email
          committer_date: 2000-01-23T04:56:07.000+00:00
          body: body
          committer_name: committer_name
        node: ""
        retries: true
        compare: https://openapi-generator.tech
        timedout: true
        job_name: job_name
        previous_successful_build:
          build_num: 6
          build_time_millis: 1
          status: retried
        ssh_enabled: true
        usage_queued_at: 2000-01-23T04:56:07.000+00:00
        user:
          days_left_in_trial: 1
          projects: "{}"
          parallelism: 2
          admin: true
          created_at: 2000-01-23T04:56:07.000+00:00
          sign_in_count: 7
          bitbucket: 0
          login: login
          pusher_id: pusher_id
          all_emails:
          - all_emails
          - all_emails
          gravatar_id: 5
          organization_prefs: "{}"
          plan: plan
          github_oauth_scopes:
          - github_oauth_scopes
          - github_oauth_scopes
          bitbucket_authorized: true
          analytics_id: analytics_id
          trial_end: 2000-01-23T04:56:07.000+00:00
          enrolled_betas:
          - enrolled_betas
          - enrolled_betas
          basic_email_prefs: basic_email_prefs
          avatar_url: https://openapi-generator.tech
          in_beta_program: true
          selected_email: selected_email
          dev_admin: true
          heroku_api_key: heroku_api_key
          name: name
          containers: 6
          github_id: 5
      properties:
        all_commit_details:
          items:
            $ref: '#/components/schemas/CommitDetail'
          title: all_commit_details
          type: array
        compare:
          format: uri
          nullable: true
          title: compare
          type: string
        job_name:
          title: job_name
          type: string
        node:
          nullable: true
          title: node
        previous_successful_build:
          $ref: '#/components/schemas/PreviousBuild'
        retries:
          nullable: true
          title: retries
          type: boolean
        ssh_enabled:
          nullable: true
          title: ssh_enabled
          type: boolean
        timedout:
          nullable: true
          title: timedout
          type: boolean
        usage_queued_at:
          format: date-time
          title: usage_queued_at
          type: string
        user:
          $ref: '#/components/schemas/User'
      title: BuildDetail
      type: object
    BuildParameters:
      description: |
        Additional environment variables to inject into the build environment. A map of names to values.
      title: build_parameters
      type: object
    BuildSummary:
      example:
        added_at: 2000-01-23T04:56:07.000+00:00
        pushed_at: 2000-01-23T04:56:07.000+00:00
        build_num: 0
        outcome: canceled
        status: retried
        vcs_revision: vcs_revision
      properties:
        added_at:
          format: date-time
          title: added_at
          type: string
        build_num:
          title: build_num
          type: integer
        outcome:
          $ref: '#/components/schemas/Outcome'
        pushed_at:
          format: date-time
          title: pushed_at
          type: string
        status:
          $ref: '#/components/schemas/Status'
        vcs_revision:
          title: Sha1
          type: string
      title: BuildSummary
      type: object
    Builds:
      items:
        $ref: '#/components/schemas/Build'
      type: array
    CommitDetail:
      example:
        author_name: author_name
        author_login: author_login
        commit_url: https://openapi-generator.tech
        committer_email: committer_email
        committer_login: committer_login
        subject: subject
        author_date: 2000-01-23T04:56:07.000+00:00
        commit: commit
        author_email: author_email
        committer_date: 2000-01-23T04:56:07.000+00:00
        body: body
        committer_name: committer_name
      properties:
        author_date:
          format: date-time
          title: author_date
          type: string
        author_email:
          format: email
          title: author_email
          type: string
        author_login:
          title: author_login
          type: string
        author_name:
          title: author_name
          type: string
        body:
          title: body
          type: string
        commit:
          title: Sha1
          type: string
        commit_url:
          format: uri
          title: commit_url
          type: string
        committer_date:
          format: date-time
          title: committer_date
          type: string
        committer_email:
          format: email
          title: committer_email
          type: string
        committer_login:
          title: committer_login
          type: string
        committer_name:
          title: committer_name
          type: string
        subject:
          title: subject
          type: string
      title: CommitDetail
      type: object
    CommitDetails:
      items:
        $ref: '#/components/schemas/CommitDetail'
      title: all_commit_details
      type: array
    Envvar:
      example:
        name: name
        value: value
      properties:
        name:
          title: name
          type: string
        value:
          title: value
          type: string
      title: Envvar
      type: object
    Envvars:
      items:
        $ref: '#/components/schemas/Envvar'
      type: array
    Key:
      example:
        public_key: public_key
        fingerprint: fingerprint
        time: 2000-01-23T04:56:07.000+00:00
        type: deploy-key
        preferred: true
      properties:
        fingerprint:
          title: fingerprint
          type: string
        preferred:
          title: preferred
          type: boolean
        public_key:
          title: public_key
          type: string
        time:
          description: when the key was issued
          format: date-time
          title: time
          type: string
        type:
          description: |
            can be "deploy-key" or "github-user-key"
          enum:
          - deploy-key
          - github-user-key
          title: type
          type: string
      title: Key
      type: object
    Keys:
      items:
        $ref: '#/components/schemas/Key'
      type: array
    Lifecycle:
      enum:
      - queued
      - scheduled
      - not_run
      - not_running
      - running
      - finished
      title: Lifecycle
      type: string
    Outcome:
      enum:
      - canceled
      - infrastructure_fail
      - timedout
      - failed
      - no_tests
      - success
      title: Outcome
      type: string
    Parallel:
      description: |
        The number of containers to use to run the build. Default is null and the project default is used.
      title: parallel
      type: string
    PreviousBuild:
      description: previous build
      example:
        build_num: 6
        build_time_millis: 1
        status: retried
      properties:
        build_num:
          title: build_num
          type: integer
        build_time_millis:
          title: build_time_millis
          type: integer
        status:
          $ref: '#/components/schemas/Status'
      title: PreviousBuild
      type: object
    Project:
      example:
        slack_api_token: slack_api_token
        slack_channel: slack_channel
        vcs_url: https://openapi-generator.tech
        slack_notify_prefs: slack_notify_prefs
        language: language
        slack_webhook_url: https://openapi-generator.tech
        irc_channel: irc_channel
        campfire_notify_prefs: campfire_notify_prefs
        campfire_token: campfire_token
        oss: true
        campfire_room: campfire_room
        compile: compile
        hipchat_notify_prefs: hipchat_notify_prefs
        parallel: 0
        extra: extra
        irc_server: irc_server
        hipchat_room: hipchat_room
        slack_subdomain: slack_subdomain
        flowdock_api_token: flowdock_api_token
        test: test
        hipchat_api_token: hipchat_api_token
        hipchat_notify: hipchat_notify
        has_usable_key: true
        heroku_deploy_user: heroku_deploy_user
        irc_password: irc_password
        slack_channel_override: slack_channel_override
        branches: "{}"
        followed: true
        campfire_subdomain: campfire_subdomain
        dependencies: dependencies
        vcs_type: vcs_type
        irc_username: irc_username
        ssh_keys:
        - ssh_keys
        - ssh_keys
        reponame: reponame
        irc_notify_prefs: irc_notify_prefs
        feature_flags:
          fleet: true
          build-fork-prs: true
          junit: true
          trusty-beta: true
          osx: true
          oss: true
          set-github-status: true
        irc_keyword: irc_keyword
        setup: setup
        default_branch: default_branch
        scopes:
        - write-settings
        - write-settings
        aws:
          keypair: keypair
        username: username
      properties:
        aws:
          $ref: '#/components/schemas/Aws'
        branches:
          title: branches
          type: object
        campfire_notify_prefs:
          nullable: true
          title: campfire_notify_prefs
          type: string
        campfire_room:
          nullable: true
          title: campfire_notify_prefs
          type: string
        campfire_subdomain:
          nullable: true
          title: campfire_notify_prefs
          type: string
        campfire_token:
          nullable: true
          title: campfire_notify_prefs
          type: string
        compile:
          title: compile
          type: string
        default_branch:
          title: default_branch
          type: string
        dependencies:
          title: dependencies
          type: string
        extra:
          title: extra
          type: string
        feature_flags:
          $ref: '#/components/schemas/Project_feature_flags'
        flowdock_api_token:
          nullable: true
          title: campfire_notify_prefs
          type: string
        followed:
          title: followed
          type: boolean
        has_usable_key:
          title: has_usable_key
          type: boolean
        heroku_deploy_user:
          nullable: true
          title: campfire_notify_prefs
          type: string
        hipchat_api_token:
          nullable: true
          title: campfire_notify_prefs
          type: string
        hipchat_notify:
          nullable: true
          title: campfire_notify_prefs
          type: string
        hipchat_notify_prefs:
          nullable: true
          title: hipchat_notify_prefs
          type: string
        hipchat_room:
          nullable: true
          title: campfire_notify_prefs
          type: string
        irc_channel:
          nullable: true
          title: campfire_notify_prefs
          type: string
        irc_keyword:
          nullable: true
          title: campfire_notify_prefs
          type: string
        irc_notify_prefs:
          nullable: true
          title: campfire_notify_prefs
          type: string
        irc_password:
          nullable: true
          title: campfire_notify_prefs
          type: string
        irc_server:
          nullable: true
          title: campfire_notify_prefs
          type: string
        irc_username:
          nullable: true
          title: campfire_notify_prefs
          type: string
        language:
          title: language
          type: string
        oss:
          title: oss
          type: boolean
        parallel:
          title: parallel
          type: integer
        reponame:
          title: reponame
          type: string
        scopes:
          items:
            $ref: '#/components/schemas/Scope'
          title: scopes
          type: array
        setup:
          title: setup
          type: string
        slack_api_token:
          nullable: true
          title: campfire_notify_prefs
          type: string
        slack_channel:
          nullable: true
          title: campfire_notify_prefs
          type: string
        slack_channel_override:
          nullable: true
          title: campfire_notify_prefs
          type: string
        slack_notify_prefs:
          nullable: true
          title: campfire_notify_prefs
          type: string
        slack_subdomain:
          nullable: true
          title: campfire_notify_prefs
          type: string
        slack_webhook_url:
          format: uri
          title: slack_webhook_url
          type: string
        ssh_keys:
          items:
            type: string
          title: ssh_keys
          type: array
        test:
          title: test
          type: string
        username:
          title: username
          type: string
        vcs_type:
          title: vcs_type
          type: string
        vcs_url:
          format: uri
          title: vcs_url
          type: string
      title: Project
      type: object
    Projects:
      items:
        $ref: '#/components/schemas/Project'
      type: array
    Revision:
      description: |
        The specific revision to build.
        Default is null and the head of the branch is used. Cannot be used with tag parameter.
      title: revision
      type: string
    Scope:
      enum:
      - write-settings
      - view-builds
      - read-settings
      - trigger-builds
      - all
      - status
      - none
      title: Scope
      type: string
    Sha1:
      title: Sha1
      type: string
    Status:
      enum:
      - retried
      - canceled
      - infrastructure_fail
      - timedout
      - not_run
      - running
      - failed
      - queued
      - scheduled
      - not_running
      - no_tests
      - fixed
      - success
      title: Status
      type: string
    StringOrNull:
      nullable: true
      title: campfire_notify_prefs
      type: string
    Tag:
      description: |
        The tag to build. Default is null. Cannot be used with revision parameter.
      title: tag
      type: string
    Tests:
      example:
        tests:
        - result: retried
          file: file
          classname: classname
          run_time: 0.8008281904610115
          name: name
          source: source
          message: message
        - result: retried
          file: file
          classname: classname
          run_time: 0.8008281904610115
          name: name
          source: source
          message: message
      properties:
        tests:
          items:
            $ref: '#/components/schemas/Tests_tests_inner'
          title: tests
          type: array
      title: Tests
      type: object
    User:
      example:
        days_left_in_trial: 1
        projects: "{}"
        parallelism: 2
        admin: true
        created_at: 2000-01-23T04:56:07.000+00:00
        sign_in_count: 7
        bitbucket: 0
        login: login
        pusher_id: pusher_id
        all_emails:
        - all_emails
        - all_emails
        gravatar_id: 5
        organization_prefs: "{}"
        plan: plan
        github_oauth_scopes:
        - github_oauth_scopes
        - github_oauth_scopes
        bitbucket_authorized: true
        analytics_id: analytics_id
        trial_end: 2000-01-23T04:56:07.000+00:00
        enrolled_betas:
        - enrolled_betas
        - enrolled_betas
        basic_email_prefs: basic_email_prefs
        avatar_url: https://openapi-generator.tech
        in_beta_program: true
        selected_email: selected_email
        dev_admin: true
        heroku_api_key: heroku_api_key
        name: name
        containers: 6
        github_id: 5
      properties:
        admin:
          title: admin
          type: boolean
        all_emails:
          items:
            format: email
            type: string
          title: all_emails
          type: array
        analytics_id:
          title: analytics_id
          type: string
        avatar_url:
          format: uri
          title: avatar_url
          type: string
        basic_email_prefs:
          title: basic_email_prefs
          type: string
        bitbucket:
          nullable: true
          title: bitbucket
          type: integer
        bitbucket_authorized:
          title: bitbucket_authorized
          type: boolean
        containers:
          title: containers
          type: integer
        created_at:
          format: date-time
          title: created_at
          type: string
        days_left_in_trial:
          title: days_left_in_trial
          type: integer
        dev_admin:
          title: dev_admin
          type: boolean
        enrolled_betas:
          items:
            type: string
          title: enrolled_betas
          type: array
        github_id:
          nullable: true
          title: github_id
          type: integer
        github_oauth_scopes:
          items:
            type: string
          title: github_oauth_scopes
          type: array
        gravatar_id:
          nullable: true
          title: gravatar_id
          type: integer
        heroku_api_key:
          nullable: true
          title: heroku_api_key
          type: string
        in_beta_program:
          title: in_beta_program
          type: boolean
        login:
          title: login
          type: string
        name:
          title: name
          type: string
        organization_prefs:
          title: organization_prefs
          type: object
        parallelism:
          title: parallelism
          type: integer
        plan:
          nullable: true
          title: plan
          type: string
        projects:
          title: projects
          type: object
        pusher_id:
          title: pusher_id
          type: string
        selected_email:
          format: email
          title: selected_email
          type: string
        sign_in_count:
          title: sign_in_count
          type: integer
        trial_end:
          format: date-time
          title: trial_end
          type: string
      title: User
      type: object
    _project__username___project__post_request:
      properties:
        build_parameters:
          description: |
            Additional environment variables to inject into the build environment. A map of names to values.
          title: build_parameters
          type: object
        parallel:
          description: |
            The number of containers to use to run the build. Default is null and the project default is used.
          title: parallel
          type: string
        revision:
          description: |
            The specific revision to build.
            Default is null and the head of the branch is used. Cannot be used with tag parameter.
          title: revision
          type: string
        tag:
          description: |
            The tag to build. Default is null. Cannot be used with revision parameter.
          title: tag
          type: string
      title: _project__username___project__post_request
      type: object
    _project__username___project__build_cache_delete_200_response:
      example:
        status: status
      properties:
        status:
          title: status
          type: string
      title: _project__username___project__build_cache_delete_200_response
      type: object
    _project__username___project__checkout_key__fingerprint__delete_200_response:
      example:
        message: OK
      properties:
        message:
          enum:
          - OK
          title: message
          type: string
      title: _project__username___project__checkout_key__fingerprint__delete_200_response
      type: object
    _project__username___project__ssh_key_post_request:
      properties:
        hostname:
          title: hostname
          type: string
        private_key:
          title: private_key
          type: string
      title: _project__username___project__ssh_key_post_request
      type: object
    _project__username___project__ssh_key_post_default_response:
      example:
        message: message
      properties:
        message:
          title: message
          type: string
      title: _project__username___project__ssh_key_post_default_response
      type: object
    _project__username___project__tree__branch__post_request:
      properties:
        build_parameters:
          description: |
            Additional environment variables to inject into the build environment. A map of names to values.
          title: build_parameters
          type: object
        parallel:
          description: |
            The number of containers to use to run the build. Default is null and the project default is used.
          title: parallel
          type: string
        revision:
          description: |
            The specific revision to build.
            Default is null and the head of the branch is used. Cannot be used with tag parameter.
          title: revision
          type: string
      title: _project__username___project__tree__branch__post_request
      type: object
    Project_feature_flags:
      example:
        fleet: true
        build-fork-prs: true
        junit: true
        trusty-beta: true
        osx: true
        oss: true
        set-github-status: true
      properties:
        build-fork-prs:
          title: build-fork-prs
          type: boolean
        fleet:
          nullable: true
          title: fleet
          type: boolean
        junit:
          title: junit
          type: boolean
        oss:
          title: oss
          type: boolean
        osx:
          title: osx
          type: boolean
        set-github-status:
          title: set-github-status
          type: boolean
        trusty-beta:
          title: trusty-beta
          type: boolean
      title: Project_feature_flags
      type: object
    Tests_tests_inner:
      example:
        result: retried
        file: file
        classname: classname
        run_time: 0.8008281904610115
        name: name
        source: source
        message: message
      properties:
        classname:
          title: classname
          type: string
        file:
          title: file
          type: string
        message:
          title: message
          type: string
        name:
          title: name
          type: string
        result:
          $ref: '#/components/schemas/Status'
        run_time:
          title: run_time
          type: number
        source:
          title: source
          type: string
      title: Tests_tests_inner
      type: object
  securitySchemes:
    apikey:
      in: query
      name: circle-token
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_apikey
