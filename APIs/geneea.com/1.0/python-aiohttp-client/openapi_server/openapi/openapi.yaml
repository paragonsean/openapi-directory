openapi: 3.0.1
info:
  description: |
    <div class="api-description">
        <h2>Authentication</h2>
        <p>For all calls, supply your API key. <a href="https://www.geneea.com/pricing">Sign up to <em>obtain the key</em></a>.</p>
        <p>
            Our API supports both <em>unencrypted (HTTP)</em> and <em>encrypted (HTTPS)</em> protocols.
            However, for security reasons, we strongly encourage using only the encrypted version.
        </p>
        <p>The API key should be supplied as either a request parameter <code>user_key</code> or in <code>Authorization</code> header.</p>
        <pre><code>Authorization: user_key &lt;YOUR_API_KEY&gt;</code></pre>

        <h2>API operations</h2>
        <p>
            All API operations can perform analysis on supplied raw text or on text extracted from a given URL.
            Optionally, one can supply additional information which can make the result more precise. An example
            of such information would be the language of text or a particular text extractor for URL resources.
        </p>
        <p>The supported types of analyses are:</p>
        <ul>
            <li><strong>lemmatization</strong> &longrightarrow;
                Finds out lemmata (basic forms) of all the words in the document.
            </li>
            <li><strong>correction</strong> &longrightarrow;
                Performs correction (diacritization) on all the words in the document.
            </li>
            <li><strong>topic detection</strong> &longrightarrow;
                Determines a topic of the document, e.g. finance or sports.
            </li>
            <li><strong>sentiment analysis</strong> &longrightarrow;
                Determines a sentiment of the document, i.e. how positive or negative the document is.
            </li>
            <li><strong>named entity recognition</strong> &longrightarrow;
                Finds named entities (like person, location, date etc.) mentioned the the document.
            </li>
        </ul>

        <h2>Encoding</h2>
        <p>The supplied text is expected to be in UTF-8 encoding, this is especially important for non-english texts.</p>

        <h2>Returned values</h2>
        <p>The API calls always return objects in serialized JSON format in UTF-8 encoding.</p>
        <p>
            If any error occurs, the HTTP response code will be in the range <code>4xx</code> (client-side error) or
            <code>5xx</code> (server-side error). In this situation, the body of the response will contain information
            about the error in JSON format, with <code>exception</code> and <code>message</code> values.
        </p>

        <h2>URL limitations</h2>
        <p>
            All the requests are semantically <code>GET</code>. However, for longer texts, you may run into issues
            with URL length limit. Therefore, it's possible to always issue a <code>POST</code> request with all
            the parameters encoded as a JSON in the request body.
        </p>
        <p>Example:</p>
        <pre><code>
            POST /s1/sentiment
            Content-Type: application/json

            {"text":"There is no harm in being sometimes wrong - especially if one is promptly found out."}
        </code></pre>
        <p>This is equivalent to <code>GET /s1/sentiment?text=There%20is%20no%20harm...</code></p>

        <h2>Request limitations</h2>
        <p>
            The API has other limitations concerning the size of the HTTP requests. The maximum allowed size of any
            POST request body is <em>512 KiB</em>. For request with a URL resource, the maximum allowed number of
            extracted characters from each such resource is <em>100,000</em>.
        </p>

        <h2>Terms of Service</h2>
        <p>
            By using the API, you agree to our
            <a href="https://www.geneea.com/terms.html" target="_blank">Terms of Service Agreement</a>.
        </p>

        <h2>More information</h2>
        <p>
            <a href="https://help.geneea.com/index.html" target="_blank">
            The Interpretor Public Documentation
            </a>
        </p>
    </div>
  title: Geneea Natural Language Processing
  version: "1.0"
  x-apisguru-categories:
  - text
  x-logo:
    url: http://www.geneea.com/img/geneea-logo.png
  x-origin:
  - converter:
      url: https://github.com/lucybot/api-spec-converter
      version: 2.7.25
    format: swagger
    url: https://api.geneea.com/api-docs?group=s1
    version: "1.2"
  x-providerName: geneea.com
servers:
- url: https://api.geneea.com/
security:
- user_key: []
tags:
- description: Basic information about the user account.
  name: account
- description: Geneea simple REST API version 1
  name: geneea-api-s1
- description: REST API for status monitoring
  name: status-api
paths:
  /account:
    get:
      deprecated: false
      description: getInfo
      operationId: get_info
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Information%20about%20a%20user%20account.'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Information about current user account
      tags:
      - account
      x-openapi-router-controller: openapi_server.controllers.account_controller
  /s1/correction:
    get:
      deprecated: false
      description: "<br/><strong>Possible options:</strong><p class=\"markdown\">An\
        \ optional parameter <code>diacritize</code> with values <code>yes</code>,\
        \ <code>no</code> or <code>auto</code> indicate whether the text diacritization\
        \ will be performed. The default value is <code>auto</code>.</p>"
      operationId: correction_get
      parameters:
      - description: document ID
        in: query
        name: id
        schema:
          type: string
      - description: raw document text
        in: query
        name: text
        schema:
          type: string
      - description: document URL
        in: query
        name: url
        schema:
          type: string
      - description: document extractor
        in: query
        name: extractor
        schema:
          enum:
          - default
          - article
          - keep-everything
          type: string
      - description: document language
        in: query
        name: language
        schema:
          type: string
      - in: query
        name: returnTextInfo
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response%20for%20the%20text%20correction'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs text correction (diacritization) on the given document
      tags:
      - geneea-api-s1
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
    post:
      deprecated: false
      description: "<strong>Notes:</strong><br/>Valid JSON cannot contain newline\
        \ characters. These have to be escaped. (See also <a href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\"\
        \ target=\"_blank\">Interpretor documentation</a>)<br/>Fields <code>text</code>\
        \ and <code>url</code> are mutually exclusive.<br/><strong>Examples:</strong><pre><code>{\"\
        text\": \"Hello world!\"}</code></pre><pre><code>{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"\
        }</code></pre><br/><strong>Possible options:</strong><p class=\"markdown\"\
        >An optional parameter <code>diacritize</code> with values <code>yes</code>,\
        \ <code>no</code> or <code>auto</code> indicate whether the text diacritization\
        \ will be performed. The default value is <code>auto</code>.</p>"
      operationId: correction_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        description: request
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response%20for%20the%20text%20correction'
          description: Description was not specified
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs text correction (diacritization) on the given document
      tags:
      - geneea-api-s1
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
  /s1/entities:
    get:
      deprecated: false
      description: entitiesGet
      operationId: entities_get
      parameters:
      - description: document ID
        in: query
        name: id
        schema:
          type: string
      - description: raw document text
        in: query
        name: text
        schema:
          type: string
      - description: document URL
        in: query
        name: url
        schema:
          type: string
      - description: document extractor
        in: query
        name: extractor
        schema:
          enum:
          - default
          - article
          - keep-everything
          type: string
      - description: document language
        in: query
        name: language
        schema:
          type: string
      - in: query
        name: returnTextInfo
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs named-entity recognition on the given document
      tags:
      - geneea-api-s1
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
    post:
      deprecated: false
      description: "<strong>Notes:</strong><br/>Valid JSON cannot contain newline\
        \ characters. These have to be escaped. (See also <a href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\"\
        \ target=\"_blank\">Interpretor documentation</a>)<br/>Fields <code>text</code>\
        \ and <code>url</code> are mutually exclusive.<br/><strong>Examples:</strong><pre><code>{\"\
        text\": \"Hello world!\"}</code></pre><pre><code>{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"\
        }</code></pre>"
      operationId: entities_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        description: request
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitiesResponse'
          description: Description was not specified
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs named-entity recognition on the given document
      tags:
      - geneea-api-s1
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
  /s1/lemmatize:
    get:
      deprecated: false
      description: lemmatizeGet
      operationId: lemmatize_get
      parameters:
      - description: document ID
        in: query
        name: id
        schema:
          type: string
      - description: raw document text
        in: query
        name: text
        schema:
          type: string
      - description: document URL
        in: query
        name: url
        schema:
          type: string
      - description: document extractor
        in: query
        name: extractor
        schema:
          enum:
          - default
          - article
          - keep-everything
          type: string
      - description: document language
        in: query
        name: language
        schema:
          type: string
      - in: query
        name: returnTextInfo
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LemmatizeResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs lemmatization on the given document
      tags:
      - geneea-api-s1
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
    post:
      deprecated: false
      description: "<strong>Notes:</strong><br/>Valid JSON cannot contain newline\
        \ characters. These have to be escaped. (See also <a href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\"\
        \ target=\"_blank\">Interpretor documentation</a>)<br/>Fields <code>text</code>\
        \ and <code>url</code> are mutually exclusive.<br/><strong>Examples:</strong><pre><code>{\"\
        text\": \"Hello world!\"}</code></pre><pre><code>{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"\
        }</code></pre>"
      operationId: lemmatize_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        description: request
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LemmatizeResponse'
          description: Description was not specified
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs lemmatization on the given document
      tags:
      - geneea-api-s1
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
  /s1/sentiment:
    get:
      deprecated: false
      description: sentimentGet
      operationId: sentiment_get
      parameters:
      - description: document ID
        in: query
        name: id
        schema:
          type: string
      - description: raw document text
        in: query
        name: text
        schema:
          type: string
      - description: document URL
        in: query
        name: url
        schema:
          type: string
      - description: document extractor
        in: query
        name: extractor
        schema:
          enum:
          - default
          - article
          - keep-everything
          type: string
      - description: document language
        in: query
        name: language
        schema:
          type: string
      - in: query
        name: returnTextInfo
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentimentResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs sentiment analysis on the given document
      tags:
      - geneea-api-s1
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
    post:
      deprecated: false
      description: "<strong>Notes:</strong><br/>Valid JSON cannot contain newline\
        \ characters. These have to be escaped. (See also <a href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\"\
        \ target=\"_blank\">Interpretor documentation</a>)<br/>Fields <code>text</code>\
        \ and <code>url</code> are mutually exclusive.<br/><strong>Examples:</strong><pre><code>{\"\
        text\": \"Hello world!\"}</code></pre><pre><code>{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"\
        }</code></pre>"
      operationId: sentiment_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        description: request
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SentimentResponse'
          description: Description was not specified
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs sentiment analysis on the given document
      tags:
      - geneea-api-s1
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
  /s1/topic:
    get:
      deprecated: false
      description: topicGet
      operationId: topic_get
      parameters:
      - description: document ID
        in: query
        name: id
        schema:
          type: string
      - description: raw document text
        in: query
        name: text
        schema:
          type: string
      - description: document URL
        in: query
        name: url
        schema:
          type: string
      - description: document extractor
        in: query
        name: extractor
        schema:
          enum:
          - default
          - article
          - keep-everything
          type: string
      - description: document language
        in: query
        name: language
        schema:
          type: string
      - in: query
        name: returnTextInfo
        schema:
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs topic detection on the given document
      tags:
      - geneea-api-s1
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
    post:
      deprecated: false
      description: "<strong>Notes:</strong><br/>Valid JSON cannot contain newline\
        \ characters. These have to be escaped. (See also <a href=\"https://geneea.atlassian.net/wiki/display/IPD/The+Interpretor+API+Public+Documentation#TheInterpretorAPIPublicDocumentation-Interactiveonlinedocumentation\"\
        \ target=\"_blank\">Interpretor documentation</a>)<br/>Fields <code>text</code>\
        \ and <code>url</code> are mutually exclusive.<br/><strong>Examples:</strong><pre><code>{\"\
        text\": \"Hello world!\"}</code></pre><pre><code>{\"url\": \"https://en.wikipedia.org/wiki/Pyrrhuloxia\"\
        }</code></pre>"
      operationId: topic_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Request'
        description: request
        required: false
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicResponse'
          description: Description was not specified
        "201":
          content: {}
          description: Created
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Performs topic detection on the given document
      tags:
      - geneea-api-s1
      x-codegen-request-body-name: body
      x-openapi-router-controller: openapi_server.controllers.geneea_api_s1_controller
  /status:
    get:
      deprecated: false
      description: status
      operationId: status
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
      summary: Gets status of the Interpretor service
      tags:
      - status-api
      x-openapi-router-controller: openapi_server.controllers.status_api_controller
components:
  schemas:
    EntitiesResponse:
      description: Response for the named-entity recognition
      example:
        entities:
        - sentiment: 0.8008281904610115
          textOffset: 6
          links: "{}"
          type: type
          entity: entity
        - sentiment: 0.8008281904610115
          textOffset: 6
          links: "{}"
          type: type
          entity: entity
        language: language
        id: id
        text: text
      properties:
        entities:
          description: Found named entities in the document
          items:
            $ref: '#/components/schemas/Entity'
          title: entities
          type: array
        id:
          description: Unique identifier of the document
          title: id
          type: string
        language:
          description: The used language of the document
          title: language
          type: string
        text:
          description: The raw text of the document which has been analysed
          title: text
          type: string
      required:
      - entities
      - language
      title: EntitiesResponse
      type: object
    Entity:
      description: The named entity
      example:
        sentiment: 0.8008281904610115
        textOffset: 6
        links: "{}"
        type: type
        entity: entity
      properties:
        entity:
          description: Disambiguated and standardized form of the entity
          title: entity
          type: string
        links:
          description: "Disambiguation links for the entity, e.g. its DBpedia page"
          properties: {}
          title: links
          type: object
        sentiment:
          description: Detected sentiment of the entity (value from -1.0 to 1.0)
          format: double
          title: sentiment
          type: number
        textOffset:
          description: Character offset in the text (starting from 0)
          format: int32
          title: textOffset
          type: integer
        type:
          description: Detected type of the entity
          title: type
          type: string
      required:
      - entity
      - links
      - textOffset
      - type
      title: Entity
      type: object
    Entry«string,long»:
      properties:
        key:
          format: int64
          title: key
          type: integer
      title: "Entry«string,long»"
      type: object
    Information about a user account.:
      type: object
    Information_about_a_user_account.:
      properties:
        remainingQuotas:
          description: Remaining quotas for the user account.
          items:
            $ref: "#/components/schemas/Entry«string,long»"
          type: array
        type:
          description: Type (plan) of the user account.
          type: string
      type: object
    Label:
      description: The topic label
      example:
        confidence: 6.027456183070403
        label: label
      properties:
        confidence:
          description: Confidence (probability) of this label
          format: double
          title: confidence
          type: number
        label:
          description: The value of this label
          title: label
          type: string
      required:
      - confidence
      - label
      title: Label
      type: object
    LemmatizeResponse:
      description: Response for the lemmatization
      example:
        language: language
        id: id
        lemmatizedText: lemmatizedText
        text: text
      properties:
        id:
          description: Unique identifier of the document
          title: id
          type: string
        language:
          description: The used language of the document
          title: language
          type: string
        lemmatizedText:
          description: "Lemmatized text of the document, individual tokens are separated\
            \ by a space and sentences are separated by a new-line character"
          title: lemmatizedText
          type: string
        text:
          description: The raw text of the document which has been analysed
          title: text
          type: string
      required:
      - language
      - lemmatizedText
      title: LemmatizeResponse
      type: object
    Request:
      description: Request encapsulation for simple API version 1
      example:
        returnTextInfo: true
        options: "{}"
        extractor: default
        language: language
        id: id
        text: text
        url: url
      properties:
        extractor:
          description: "[optional] Text extractor to be used when analyzing HTML document"
          enum:
          - default
          - article
          - keep-everything
          title: extractor
          type: string
        id:
          description: "Unique identifier of the document, it's optional"
          title: id
          type: string
        language:
          description: "[optional] The language of the document, auto-detection will\
            \ be used if omitted"
          title: language
          type: string
        options:
          description: "[optional] Additional options for the internal modules (key-value\
            \ pairs)"
          properties: {}
          title: options
          type: object
        returnTextInfo:
          description: "[optional] Indicates whether to return the source text within\
            \ the response object"
          title: returnTextInfo
          type: boolean
        text:
          description: "The raw text to be analyzed, mutually exclusive with the 'url'\
            \ parameter"
          title: text
          type: string
        url:
          description: "URL of a document to be analysed, mutually exclusive with\
            \ the 'text' parameter"
          title: url
          type: string
      title: Request
      type: object
    Response for the text correction:
      type: object
    Response_for_the_text_correction:
      properties:
        corrected:
          type: boolean
        correctedText:
          description: Corrected text of the document
          type: string
        diacritized:
          type: boolean
        id:
          description: Unique identifier of the document
          type: string
        language:
          description: The used language of the document
          type: string
        text:
          description: The raw text of the document which has been analysed
          type: string
      required:
      - correctedText
      - language
      type: object
    SentimentResponse:
      description: Response for the sentiment analysis
      example:
        sentiment: 0.8008281904610115
        language: language
        id: id
        text: text
      properties:
        id:
          description: Unique identifier of the document
          title: id
          type: string
        language:
          description: The used language of the document
          title: language
          type: string
        sentiment:
          description: Detected sentiment of the document (value from -1.0 to 1.0)
          format: double
          title: sentiment
          type: number
        text:
          description: The raw text of the document which has been analysed
          title: text
          type: string
      required:
      - language
      - sentiment
      title: SentimentResponse
      type: object
    TopicResponse:
      description: Response for the topic detection
      example:
        confidence: 0.8008281904610115
        topic: topic
        language: language
        id: id
        text: text
        labels:
        - confidence: 6.027456183070403
          label: label
        - confidence: 6.027456183070403
          label: label
      properties:
        confidence:
          description: Confidence for the detected topic
          format: double
          title: confidence
          type: number
        id:
          description: Unique identifier of the document
          title: id
          type: string
        labels:
          description: Probabilistic distribution over possible topic labels
          items:
            $ref: '#/components/schemas/Label'
          title: labels
          type: array
        language:
          description: The used language of the document
          title: language
          type: string
        text:
          description: The raw text of the document which has been analysed
          title: text
          type: string
        topic:
          description: Detected topic of the document
          title: topic
          type: string
      required:
      - confidence
      - labels
      - language
      - topic
      title: TopicResponse
      type: object
  securitySchemes:
    user_key:
      in: query
      name: user_key
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_user_key
x-original-swagger-version: "2.0"
