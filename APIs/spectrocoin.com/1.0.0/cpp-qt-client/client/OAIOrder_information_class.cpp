/**
 * SpectroCoin Merchant
 * This is an API designed for merchants who are using SpectroCoin services and wishes to integrate them locally.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder_information_class.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder_information_class::OAIOrder_information_class(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder_information_class::OAIOrder_information_class() {
    this->initializeModel();
}

OAIOrder_information_class::~OAIOrder_information_class() {}

void OAIOrder_information_class::initializeModel() {

    m_deposit_address_isSet = false;
    m_deposit_address_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_order_request_id_isSet = false;
    m_order_request_id_isValid = false;

    m_pay_amount_isSet = false;
    m_pay_amount_isValid = false;

    m_pay_currency_isSet = false;
    m_pay_currency_isValid = false;

    m_receive_amount_isSet = false;
    m_receive_amount_isValid = false;

    m_receive_currency_isSet = false;
    m_receive_currency_isValid = false;

    m_redirect_url_isSet = false;
    m_redirect_url_isValid = false;

    m_valid_until_isSet = false;
    m_valid_until_isValid = false;
}

void OAIOrder_information_class::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder_information_class::fromJsonObject(QJsonObject json) {

    m_deposit_address_isValid = ::OpenAPI::fromJsonValue(m_deposit_address, json[QString("depositAddress")]);
    m_deposit_address_isSet = !json[QString("depositAddress")].isNull() && m_deposit_address_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_order_request_id_isValid = ::OpenAPI::fromJsonValue(m_order_request_id, json[QString("orderRequestId")]);
    m_order_request_id_isSet = !json[QString("orderRequestId")].isNull() && m_order_request_id_isValid;

    m_pay_amount_isValid = ::OpenAPI::fromJsonValue(m_pay_amount, json[QString("payAmount")]);
    m_pay_amount_isSet = !json[QString("payAmount")].isNull() && m_pay_amount_isValid;

    m_pay_currency_isValid = ::OpenAPI::fromJsonValue(m_pay_currency, json[QString("payCurrency")]);
    m_pay_currency_isSet = !json[QString("payCurrency")].isNull() && m_pay_currency_isValid;

    m_receive_amount_isValid = ::OpenAPI::fromJsonValue(m_receive_amount, json[QString("receiveAmount")]);
    m_receive_amount_isSet = !json[QString("receiveAmount")].isNull() && m_receive_amount_isValid;

    m_receive_currency_isValid = ::OpenAPI::fromJsonValue(m_receive_currency, json[QString("receiveCurrency")]);
    m_receive_currency_isSet = !json[QString("receiveCurrency")].isNull() && m_receive_currency_isValid;

    m_redirect_url_isValid = ::OpenAPI::fromJsonValue(m_redirect_url, json[QString("redirectUrl")]);
    m_redirect_url_isSet = !json[QString("redirectUrl")].isNull() && m_redirect_url_isValid;

    m_valid_until_isValid = ::OpenAPI::fromJsonValue(m_valid_until, json[QString("validUntil")]);
    m_valid_until_isSet = !json[QString("validUntil")].isNull() && m_valid_until_isValid;
}

QString OAIOrder_information_class::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder_information_class::asJsonObject() const {
    QJsonObject obj;
    if (m_deposit_address_isSet) {
        obj.insert(QString("depositAddress"), ::OpenAPI::toJsonValue(m_deposit_address));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_order_request_id_isSet) {
        obj.insert(QString("orderRequestId"), ::OpenAPI::toJsonValue(m_order_request_id));
    }
    if (m_pay_amount_isSet) {
        obj.insert(QString("payAmount"), ::OpenAPI::toJsonValue(m_pay_amount));
    }
    if (m_pay_currency_isSet) {
        obj.insert(QString("payCurrency"), ::OpenAPI::toJsonValue(m_pay_currency));
    }
    if (m_receive_amount_isSet) {
        obj.insert(QString("receiveAmount"), ::OpenAPI::toJsonValue(m_receive_amount));
    }
    if (m_receive_currency_isSet) {
        obj.insert(QString("receiveCurrency"), ::OpenAPI::toJsonValue(m_receive_currency));
    }
    if (m_redirect_url_isSet) {
        obj.insert(QString("redirectUrl"), ::OpenAPI::toJsonValue(m_redirect_url));
    }
    if (m_valid_until_isSet) {
        obj.insert(QString("validUntil"), ::OpenAPI::toJsonValue(m_valid_until));
    }
    return obj;
}

QString OAIOrder_information_class::getDepositAddress() const {
    return m_deposit_address;
}
void OAIOrder_information_class::setDepositAddress(const QString &deposit_address) {
    m_deposit_address = deposit_address;
    m_deposit_address_isSet = true;
}

bool OAIOrder_information_class::is_deposit_address_Set() const{
    return m_deposit_address_isSet;
}

bool OAIOrder_information_class::is_deposit_address_Valid() const{
    return m_deposit_address_isValid;
}

QString OAIOrder_information_class::getOrderId() const {
    return m_order_id;
}
void OAIOrder_information_class::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrder_information_class::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrder_information_class::is_order_id_Valid() const{
    return m_order_id_isValid;
}

qint64 OAIOrder_information_class::getOrderRequestId() const {
    return m_order_request_id;
}
void OAIOrder_information_class::setOrderRequestId(const qint64 &order_request_id) {
    m_order_request_id = order_request_id;
    m_order_request_id_isSet = true;
}

bool OAIOrder_information_class::is_order_request_id_Set() const{
    return m_order_request_id_isSet;
}

bool OAIOrder_information_class::is_order_request_id_Valid() const{
    return m_order_request_id_isValid;
}

double OAIOrder_information_class::getPayAmount() const {
    return m_pay_amount;
}
void OAIOrder_information_class::setPayAmount(const double &pay_amount) {
    m_pay_amount = pay_amount;
    m_pay_amount_isSet = true;
}

bool OAIOrder_information_class::is_pay_amount_Set() const{
    return m_pay_amount_isSet;
}

bool OAIOrder_information_class::is_pay_amount_Valid() const{
    return m_pay_amount_isValid;
}

QString OAIOrder_information_class::getPayCurrency() const {
    return m_pay_currency;
}
void OAIOrder_information_class::setPayCurrency(const QString &pay_currency) {
    m_pay_currency = pay_currency;
    m_pay_currency_isSet = true;
}

bool OAIOrder_information_class::is_pay_currency_Set() const{
    return m_pay_currency_isSet;
}

bool OAIOrder_information_class::is_pay_currency_Valid() const{
    return m_pay_currency_isValid;
}

double OAIOrder_information_class::getReceiveAmount() const {
    return m_receive_amount;
}
void OAIOrder_information_class::setReceiveAmount(const double &receive_amount) {
    m_receive_amount = receive_amount;
    m_receive_amount_isSet = true;
}

bool OAIOrder_information_class::is_receive_amount_Set() const{
    return m_receive_amount_isSet;
}

bool OAIOrder_information_class::is_receive_amount_Valid() const{
    return m_receive_amount_isValid;
}

QString OAIOrder_information_class::getReceiveCurrency() const {
    return m_receive_currency;
}
void OAIOrder_information_class::setReceiveCurrency(const QString &receive_currency) {
    m_receive_currency = receive_currency;
    m_receive_currency_isSet = true;
}

bool OAIOrder_information_class::is_receive_currency_Set() const{
    return m_receive_currency_isSet;
}

bool OAIOrder_information_class::is_receive_currency_Valid() const{
    return m_receive_currency_isValid;
}

QString OAIOrder_information_class::getRedirectUrl() const {
    return m_redirect_url;
}
void OAIOrder_information_class::setRedirectUrl(const QString &redirect_url) {
    m_redirect_url = redirect_url;
    m_redirect_url_isSet = true;
}

bool OAIOrder_information_class::is_redirect_url_Set() const{
    return m_redirect_url_isSet;
}

bool OAIOrder_information_class::is_redirect_url_Valid() const{
    return m_redirect_url_isValid;
}

qint64 OAIOrder_information_class::getValidUntil() const {
    return m_valid_until;
}
void OAIOrder_information_class::setValidUntil(const qint64 &valid_until) {
    m_valid_until = valid_until;
    m_valid_until_isSet = true;
}

bool OAIOrder_information_class::is_valid_until_Set() const{
    return m_valid_until_isSet;
}

bool OAIOrder_information_class::is_valid_until_Valid() const{
    return m_valid_until_isValid;
}

bool OAIOrder_information_class::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deposit_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_request_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pay_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receive_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_receive_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_redirect_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_until_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder_information_class::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_deposit_address_isValid && m_order_id_isValid && m_order_request_id_isValid && m_pay_amount_isValid && m_pay_currency_isValid && m_receive_amount_isValid && m_receive_currency_isValid && m_redirect_url_isValid && m_valid_until_isValid && true;
}

} // namespace OpenAPI
