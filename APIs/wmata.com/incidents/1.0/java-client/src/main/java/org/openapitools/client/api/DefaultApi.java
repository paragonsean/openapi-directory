/*
 * Incidents
 * Rail, bus, and elevator disruptions/outages.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for call54763641281d830c946a3d75
     * @param route Base bus route; variations are not recognized (i.e.: C2 instead of C2v1, C2v2, etc.). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d75Call(String route, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/json/BusIncidents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (route != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Route", route));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call54763641281d830c946a3d75ValidateBeforeCall(String route, final ApiCallback _callback) throws ApiException {
        return call54763641281d830c946a3d75Call(route, _callback);

    }

    /**
     * JSON - Bus Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns a set of reported bus incidents/delays for a given Route. Omit the  Route to return all reported items.&lt;/p&gt;    &lt;p&gt;Note that the Route parameter accepts only base route names and no  variations, i.e.: use 10A instead of 10Av1 and 10Av2.&lt;/p&gt;    &lt;p&gt;Bus incidents/delays are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;BusIncidents&lt;/td&gt;    &lt;td&gt;  Array containing bus incident information (&lt;a href&#x3D;  \&quot;#BusIncident\&quot;&gt;BusIncident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;BusIncident\&quot; name&#x3D;\&quot;BusIncident\&quot;&gt;BusIncident  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-28T08:13:03).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the delay or incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Delay&lt;/span&gt; or &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;Alert&lt;/span&gt; but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;RoutesAffected&lt;/td&gt;    &lt;td&gt;Array containing routes affected. Routes listed are usually  identical to base route names (i.e.: not 10Av1 or 10Av2, but 10A),  but &lt;em&gt;may&lt;/em&gt; differ from what our bus methods return.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param route Base bus route; variations are not recognized (i.e.: C2 instead of C2v1, C2v2, etc.). (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public void call54763641281d830c946a3d75(String route) throws ApiException {
        call54763641281d830c946a3d75WithHttpInfo(route);
    }

    /**
     * JSON - Bus Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns a set of reported bus incidents/delays for a given Route. Omit the  Route to return all reported items.&lt;/p&gt;    &lt;p&gt;Note that the Route parameter accepts only base route names and no  variations, i.e.: use 10A instead of 10Av1 and 10Av2.&lt;/p&gt;    &lt;p&gt;Bus incidents/delays are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;BusIncidents&lt;/td&gt;    &lt;td&gt;  Array containing bus incident information (&lt;a href&#x3D;  \&quot;#BusIncident\&quot;&gt;BusIncident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;BusIncident\&quot; name&#x3D;\&quot;BusIncident\&quot;&gt;BusIncident  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-28T08:13:03).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the delay or incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Delay&lt;/span&gt; or &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;Alert&lt;/span&gt; but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;RoutesAffected&lt;/td&gt;    &lt;td&gt;Array containing routes affected. Routes listed are usually  identical to base route names (i.e.: not 10Av1 or 10Av2, but 10A),  but &lt;em&gt;may&lt;/em&gt; differ from what our bus methods return.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param route Base bus route; variations are not recognized (i.e.: C2 instead of C2v1, C2v2, etc.). (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call54763641281d830c946a3d75WithHttpInfo(String route) throws ApiException {
        okhttp3.Call localVarCall = call54763641281d830c946a3d75ValidateBeforeCall(route, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * JSON - Bus Incidents (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns a set of reported bus incidents/delays for a given Route. Omit the  Route to return all reported items.&lt;/p&gt;    &lt;p&gt;Note that the Route parameter accepts only base route names and no  variations, i.e.: use 10A instead of 10Av1 and 10Av2.&lt;/p&gt;    &lt;p&gt;Bus incidents/delays are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;BusIncidents&lt;/td&gt;    &lt;td&gt;  Array containing bus incident information (&lt;a href&#x3D;  \&quot;#BusIncident\&quot;&gt;BusIncident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;BusIncident\&quot; name&#x3D;\&quot;BusIncident\&quot;&gt;BusIncident  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-28T08:13:03).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the delay or incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Delay&lt;/span&gt; or &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;Alert&lt;/span&gt; but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;RoutesAffected&lt;/td&gt;    &lt;td&gt;Array containing routes affected. Routes listed are usually  identical to base route names (i.e.: not 10Av1 or 10Av2, but 10A),  but &lt;em&gt;may&lt;/em&gt; differ from what our bus methods return.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param route Base bus route; variations are not recognized (i.e.: C2 instead of C2v1, C2v2, etc.). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d75Async(String route, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call54763641281d830c946a3d75ValidateBeforeCall(route, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for call54763641281d830c946a3d76
     * @param stationCode Station code.  Use the Station List method to return a list of all station codes. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d76Call(String stationCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/json/ElevatorIncidents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (stationCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("StationCode", stationCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call54763641281d830c946a3d76ValidateBeforeCall(String stationCode, final ApiCallback _callback) throws ApiException {
        return call54763641281d830c946a3d76Call(stationCode, _callback);

    }

    /**
     * JSON - Elevator/Escalator Outages
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;  &lt;p&gt;Returns a list of &lt;em&gt;reported&lt;/em&gt; elevator and escalator outages at a given station. Omit the StationCode parameter to return all reported outages.&lt;/p&gt;  &lt;p&gt;Note that for stations with multiple platforms and therefore StationCodes (e.g.: Metro Center, L&#39;Enfant Plaza, etc.), a distinct call is required for each StationCode.&lt;/p&gt;  &lt;p&gt;Elevator and escalator outages are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;  &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;  &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;  &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;  &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;ElevatorIncidents&lt;/td&gt;  &lt;td&gt; Array containing elevator/escalator outage information (&lt;a href&#x3D;\&quot;#ElevatorIncident\&quot;&gt;ElevatorIncident&lt;/a&gt;). &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td colspan&#x3D;\&quot;2\&quot;&gt; &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt; &lt;a id&#x3D;\&quot;ElevatorIncident\&quot; name&#x3D; \&quot;ElevatorIncident\&quot;&gt;ElevatorIncident Elements&lt;/a&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateOutOfServ&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) unit was reported out of service. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateUpdated&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) outage details was last updated. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DisplayOrder&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;EstimatedReturnToService&lt;/td&gt;  &lt;td&gt;Estimated date and time (Eastern Standard Time) by when unit is expected to return to normal service. May be NULL, otherwise will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T23:59:59).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;LocationDescription&lt;/td&gt;  &lt;td&gt;Free-text description of the unit location within a station (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Escalator between mezzanine and platform&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationCode&lt;/td&gt;  &lt;td&gt;Unit&#39;s station code. Use this value in other rail-related APIs to retrieve data about a station.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationName&lt;/td&gt;  &lt;td&gt;Full station name, may include entrance information (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Metro Center, G and 11th St Entrance&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;SymptomCode&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;SymptomDescription&lt;/td&gt;  &lt;td&gt;Description for why the unit is out of service or otherwise in reduced operation.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;TimeOutOfService&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; Use the time portion of the DateOutOfServ element.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitName&lt;/td&gt;  &lt;td&gt;Unique identifier for unit, by type (a single elevator and escalator may have the same UnitName, but no two elevators or two escalators will have the same UnitName).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;UnitStatus&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; If listed here, the unit is inoperational or otherwise impaired.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitType&lt;/td&gt;  &lt;td&gt;Type of unit. Will be &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ELEVATOR&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ESCALATOR&lt;/span&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;
     * @param stationCode Station code.  Use the Station List method to return a list of all station codes. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public void call54763641281d830c946a3d76(String stationCode) throws ApiException {
        call54763641281d830c946a3d76WithHttpInfo(stationCode);
    }

    /**
     * JSON - Elevator/Escalator Outages
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;  &lt;p&gt;Returns a list of &lt;em&gt;reported&lt;/em&gt; elevator and escalator outages at a given station. Omit the StationCode parameter to return all reported outages.&lt;/p&gt;  &lt;p&gt;Note that for stations with multiple platforms and therefore StationCodes (e.g.: Metro Center, L&#39;Enfant Plaza, etc.), a distinct call is required for each StationCode.&lt;/p&gt;  &lt;p&gt;Elevator and escalator outages are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;  &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;  &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;  &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;  &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;ElevatorIncidents&lt;/td&gt;  &lt;td&gt; Array containing elevator/escalator outage information (&lt;a href&#x3D;\&quot;#ElevatorIncident\&quot;&gt;ElevatorIncident&lt;/a&gt;). &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td colspan&#x3D;\&quot;2\&quot;&gt; &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt; &lt;a id&#x3D;\&quot;ElevatorIncident\&quot; name&#x3D; \&quot;ElevatorIncident\&quot;&gt;ElevatorIncident Elements&lt;/a&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateOutOfServ&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) unit was reported out of service. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateUpdated&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) outage details was last updated. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DisplayOrder&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;EstimatedReturnToService&lt;/td&gt;  &lt;td&gt;Estimated date and time (Eastern Standard Time) by when unit is expected to return to normal service. May be NULL, otherwise will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T23:59:59).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;LocationDescription&lt;/td&gt;  &lt;td&gt;Free-text description of the unit location within a station (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Escalator between mezzanine and platform&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationCode&lt;/td&gt;  &lt;td&gt;Unit&#39;s station code. Use this value in other rail-related APIs to retrieve data about a station.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationName&lt;/td&gt;  &lt;td&gt;Full station name, may include entrance information (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Metro Center, G and 11th St Entrance&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;SymptomCode&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;SymptomDescription&lt;/td&gt;  &lt;td&gt;Description for why the unit is out of service or otherwise in reduced operation.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;TimeOutOfService&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; Use the time portion of the DateOutOfServ element.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitName&lt;/td&gt;  &lt;td&gt;Unique identifier for unit, by type (a single elevator and escalator may have the same UnitName, but no two elevators or two escalators will have the same UnitName).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;UnitStatus&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; If listed here, the unit is inoperational or otherwise impaired.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitType&lt;/td&gt;  &lt;td&gt;Type of unit. Will be &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ELEVATOR&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ESCALATOR&lt;/span&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;
     * @param stationCode Station code.  Use the Station List method to return a list of all station codes. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call54763641281d830c946a3d76WithHttpInfo(String stationCode) throws ApiException {
        okhttp3.Call localVarCall = call54763641281d830c946a3d76ValidateBeforeCall(stationCode, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * JSON - Elevator/Escalator Outages (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;  &lt;p&gt;Returns a list of &lt;em&gt;reported&lt;/em&gt; elevator and escalator outages at a given station. Omit the StationCode parameter to return all reported outages.&lt;/p&gt;  &lt;p&gt;Note that for stations with multiple platforms and therefore StationCodes (e.g.: Metro Center, L&#39;Enfant Plaza, etc.), a distinct call is required for each StationCode.&lt;/p&gt;  &lt;p&gt;Elevator and escalator outages are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;  &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;  &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;  &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;  &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;ElevatorIncidents&lt;/td&gt;  &lt;td&gt; Array containing elevator/escalator outage information (&lt;a href&#x3D;\&quot;#ElevatorIncident\&quot;&gt;ElevatorIncident&lt;/a&gt;). &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td colspan&#x3D;\&quot;2\&quot;&gt; &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt; &lt;a id&#x3D;\&quot;ElevatorIncident\&quot; name&#x3D; \&quot;ElevatorIncident\&quot;&gt;ElevatorIncident Elements&lt;/a&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateOutOfServ&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) unit was reported out of service. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateUpdated&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) outage details was last updated. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DisplayOrder&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;EstimatedReturnToService&lt;/td&gt;  &lt;td&gt;Estimated date and time (Eastern Standard Time) by when unit is expected to return to normal service. May be NULL, otherwise will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T23:59:59).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;LocationDescription&lt;/td&gt;  &lt;td&gt;Free-text description of the unit location within a station (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Escalator between mezzanine and platform&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationCode&lt;/td&gt;  &lt;td&gt;Unit&#39;s station code. Use this value in other rail-related APIs to retrieve data about a station.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationName&lt;/td&gt;  &lt;td&gt;Full station name, may include entrance information (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Metro Center, G and 11th St Entrance&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;SymptomCode&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;SymptomDescription&lt;/td&gt;  &lt;td&gt;Description for why the unit is out of service or otherwise in reduced operation.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;TimeOutOfService&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; Use the time portion of the DateOutOfServ element.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitName&lt;/td&gt;  &lt;td&gt;Unique identifier for unit, by type (a single elevator and escalator may have the same UnitName, but no two elevators or two escalators will have the same UnitName).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;UnitStatus&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; If listed here, the unit is inoperational or otherwise impaired.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitType&lt;/td&gt;  &lt;td&gt;Type of unit. Will be &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ELEVATOR&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ESCALATOR&lt;/span&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;
     * @param stationCode Station code.  Use the Station List method to return a list of all station codes. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d76Async(String stationCode, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call54763641281d830c946a3d76ValidateBeforeCall(stationCode, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for call54763641281d830c946a3d77
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d77Call(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/json/Incidents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call54763641281d830c946a3d77ValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return call54763641281d830c946a3d77Call(_callback);

    }

    /**
     * JSON - Rail Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns reported rail incidents (significant disruptions and delays to  normal service). The data is identical to WMATA&#39;s &lt;a href&#x3D;  \&quot;http://www.metroalerts.info/rss.aspx?rs\&quot;&gt;Metrorail Service Status  feed&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;Rail incidents are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Incidents&lt;/td&gt;    &lt;td&gt;  Array containing rail disruption information (&lt;a href&#x3D;  \&quot;#Incident\&quot;&gt;Incident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;Incident\&quot; name&#x3D;\&quot;Incident\&quot;&gt;Incident Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:SS format (e.g.: 2010-07-29T14:21:28).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DelaySeverity&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EmergencyText&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EndLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually Delay or  Alert but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LinesAffected&lt;/td&gt;    &lt;td&gt;Semi-colon and space separated list of line codes (e.g.:  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;RD;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL;  OR;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL; OR; RD;&lt;/span&gt;). We do  plan to update this to return something more reasonable like an  array, but until then, use code similar to the following:&lt;br&gt;  &lt;br&gt;  &lt;code&gt;\&quot;RD; GR; BL;\&quot;.split(/;[\\s]?/).filter(function(fn) { return fn  !&#x3D;&#x3D; &#39;&#39;; })&lt;/code&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;PassengerDelay&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;  StartLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public void call54763641281d830c946a3d77() throws ApiException {
        call54763641281d830c946a3d77WithHttpInfo();
    }

    /**
     * JSON - Rail Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns reported rail incidents (significant disruptions and delays to  normal service). The data is identical to WMATA&#39;s &lt;a href&#x3D;  \&quot;http://www.metroalerts.info/rss.aspx?rs\&quot;&gt;Metrorail Service Status  feed&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;Rail incidents are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Incidents&lt;/td&gt;    &lt;td&gt;  Array containing rail disruption information (&lt;a href&#x3D;  \&quot;#Incident\&quot;&gt;Incident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;Incident\&quot; name&#x3D;\&quot;Incident\&quot;&gt;Incident Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:SS format (e.g.: 2010-07-29T14:21:28).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DelaySeverity&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EmergencyText&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EndLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually Delay or  Alert but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LinesAffected&lt;/td&gt;    &lt;td&gt;Semi-colon and space separated list of line codes (e.g.:  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;RD;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL;  OR;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL; OR; RD;&lt;/span&gt;). We do  plan to update this to return something more reasonable like an  array, but until then, use code similar to the following:&lt;br&gt;  &lt;br&gt;  &lt;code&gt;\&quot;RD; GR; BL;\&quot;.split(/;[\\s]?/).filter(function(fn) { return fn  !&#x3D;&#x3D; &#39;&#39;; })&lt;/code&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;PassengerDelay&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;  StartLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call54763641281d830c946a3d77WithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = call54763641281d830c946a3d77ValidateBeforeCall(null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * JSON - Rail Incidents (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns reported rail incidents (significant disruptions and delays to  normal service). The data is identical to WMATA&#39;s &lt;a href&#x3D;  \&quot;http://www.metroalerts.info/rss.aspx?rs\&quot;&gt;Metrorail Service Status  feed&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;Rail incidents are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Incidents&lt;/td&gt;    &lt;td&gt;  Array containing rail disruption information (&lt;a href&#x3D;  \&quot;#Incident\&quot;&gt;Incident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;Incident\&quot; name&#x3D;\&quot;Incident\&quot;&gt;Incident Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:SS format (e.g.: 2010-07-29T14:21:28).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DelaySeverity&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EmergencyText&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EndLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually Delay or  Alert but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LinesAffected&lt;/td&gt;    &lt;td&gt;Semi-colon and space separated list of line codes (e.g.:  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;RD;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL;  OR;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL; OR; RD;&lt;/span&gt;). We do  plan to update this to return something more reasonable like an  array, but until then, use code similar to the following:&lt;br&gt;  &lt;br&gt;  &lt;code&gt;\&quot;RD; GR; BL;\&quot;.split(/;[\\s]?/).filter(function(fn) { return fn  !&#x3D;&#x3D; &#39;&#39;; })&lt;/code&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;PassengerDelay&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;  StartLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d77Async(final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call54763641281d830c946a3d77ValidateBeforeCall(_callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for call54763641281d830c946a3d78
     * @param route Bus route.  Use full route code, i.e.: C2 instead of C2v1, C2v2, etc. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d78Call(String route, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/BusIncidents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (route != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("Route", route));
        }

        final String[] localVarAccepts = {
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call54763641281d830c946a3d78ValidateBeforeCall(String route, final ApiCallback _callback) throws ApiException {
        return call54763641281d830c946a3d78Call(route, _callback);

    }

    /**
     * XML - Bus Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns a set of reported bus incidents/delays for a given Route. Omit the  Route to return all reported items.&lt;/p&gt;    &lt;p&gt;Note that the Route parameter accepts only base route names and no  variations, i.e.: use 10A instead of 10Av1 and 10Av2.&lt;/p&gt;    &lt;p&gt;Bus incidents/delays are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;BusIncidents&lt;/td&gt;    &lt;td&gt;  Array containing bus incident information (&lt;a href&#x3D;  \&quot;#BusIncident\&quot;&gt;BusIncident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;BusIncident\&quot; name&#x3D;\&quot;BusIncident\&quot;&gt;BusIncident  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-28T08:13:03).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the delay or incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Delay&lt;/span&gt; or &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;Alert&lt;/span&gt; but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;RoutesAffected&lt;/td&gt;    &lt;td&gt;Array containing routes affected. Routes listed are usually  identical to base route names (i.e.: not 10Av1 or 10Av2, but 10A),  but &lt;em&gt;may&lt;/em&gt; differ from what our bus methods return.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param route Bus route.  Use full route code, i.e.: C2 instead of C2v1, C2v2, etc. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public void call54763641281d830c946a3d78(String route) throws ApiException {
        call54763641281d830c946a3d78WithHttpInfo(route);
    }

    /**
     * XML - Bus Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns a set of reported bus incidents/delays for a given Route. Omit the  Route to return all reported items.&lt;/p&gt;    &lt;p&gt;Note that the Route parameter accepts only base route names and no  variations, i.e.: use 10A instead of 10Av1 and 10Av2.&lt;/p&gt;    &lt;p&gt;Bus incidents/delays are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;BusIncidents&lt;/td&gt;    &lt;td&gt;  Array containing bus incident information (&lt;a href&#x3D;  \&quot;#BusIncident\&quot;&gt;BusIncident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;BusIncident\&quot; name&#x3D;\&quot;BusIncident\&quot;&gt;BusIncident  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-28T08:13:03).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the delay or incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Delay&lt;/span&gt; or &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;Alert&lt;/span&gt; but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;RoutesAffected&lt;/td&gt;    &lt;td&gt;Array containing routes affected. Routes listed are usually  identical to base route names (i.e.: not 10Av1 or 10Av2, but 10A),  but &lt;em&gt;may&lt;/em&gt; differ from what our bus methods return.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param route Bus route.  Use full route code, i.e.: C2 instead of C2v1, C2v2, etc. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call54763641281d830c946a3d78WithHttpInfo(String route) throws ApiException {
        okhttp3.Call localVarCall = call54763641281d830c946a3d78ValidateBeforeCall(route, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * XML - Bus Incidents (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns a set of reported bus incidents/delays for a given Route. Omit the  Route to return all reported items.&lt;/p&gt;    &lt;p&gt;Note that the Route parameter accepts only base route names and no  variations, i.e.: use 10A instead of 10Av1 and 10Av2.&lt;/p&gt;    &lt;p&gt;Bus incidents/delays are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;BusIncidents&lt;/td&gt;    &lt;td&gt;  Array containing bus incident information (&lt;a href&#x3D;  \&quot;#BusIncident\&quot;&gt;BusIncident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;BusIncident\&quot; name&#x3D;\&quot;BusIncident\&quot;&gt;BusIncident  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-28T08:13:03).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the delay or incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Delay&lt;/span&gt; or &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;Alert&lt;/span&gt; but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;RoutesAffected&lt;/td&gt;    &lt;td&gt;Array containing routes affected. Routes listed are usually  identical to base route names (i.e.: not 10Av1 or 10Av2, but 10A),  but &lt;em&gt;may&lt;/em&gt; differ from what our bus methods return.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param route Bus route.  Use full route code, i.e.: C2 instead of C2v1, C2v2, etc. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d78Async(String route, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call54763641281d830c946a3d78ValidateBeforeCall(route, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for call54763641281d830c946a3d79
     * @param stationCode Two-letter station code.  Use the Station List method to return a list of all station codes. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d79Call(String stationCode, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/ElevatorIncidents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (stationCode != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("StationCode", stationCode));
        }

        final String[] localVarAccepts = {
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call54763641281d830c946a3d79ValidateBeforeCall(String stationCode, final ApiCallback _callback) throws ApiException {
        return call54763641281d830c946a3d79Call(stationCode, _callback);

    }

    /**
     * XML - Elevator/Escalator Outages
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;  &lt;p&gt;Returns a list of &lt;em&gt;reported&lt;/em&gt; elevator and escalator outages at a given station. Omit the StationCode parameter to return all reported outages.&lt;/p&gt;  &lt;p&gt;Note that for stations with multiple platforms and therefore StationCodes (e.g.: Metro Center, L&#39;Enfant Plaza, etc.), a distinct call is required for each StationCode.&lt;/p&gt;  &lt;p&gt;Elevator and escalator outages are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;  &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;  &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;  &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;  &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;ElevatorIncidents&lt;/td&gt;  &lt;td&gt; Array containing elevator/escalator outage information (&lt;a href&#x3D;\&quot;#ElevatorIncident\&quot;&gt;ElevatorIncident&lt;/a&gt;). &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td colspan&#x3D;\&quot;2\&quot;&gt; &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt; &lt;a id&#x3D;\&quot;ElevatorIncident\&quot; name&#x3D; \&quot;ElevatorIncident\&quot;&gt;ElevatorIncident Elements&lt;/a&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateOutOfServ&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) unit was reported out of service. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateUpdated&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) outage details was last updated. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DisplayOrder&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;EstimatedReturnToService&lt;/td&gt;  &lt;td&gt;Estimated date and time (Eastern Standard Time) by when unit is expected to return to normal service. May be NULL, otherwise will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T23:59:59).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;LocationDescription&lt;/td&gt;  &lt;td&gt;Free-text description of the unit location within a station (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Escalator between mezzanine and platform&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationCode&lt;/td&gt;  &lt;td&gt;Unit&#39;s station code. Use this value in other rail-related APIs to retrieve data about a station.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationName&lt;/td&gt;  &lt;td&gt;Full station name, may include entrance information (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Metro Center, G and 11th St Entrance&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;SymptomCode&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;SymptomDescription&lt;/td&gt;  &lt;td&gt;Description for why the unit is out of service or otherwise in reduced operation.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;TimeOutOfService&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; Use the time portion of the DateOutOfServ element.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitName&lt;/td&gt;  &lt;td&gt;Unique identifier for unit, by type (a single elevator and escalator may have the same UnitName, but no two elevators or two escalators will have the same UnitName).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;UnitStatus&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; If listed here, the unit is inoperational or otherwise impaired.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitType&lt;/td&gt;  &lt;td&gt;Type of unit. Will be &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ELEVATOR&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ESCALATOR&lt;/span&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;
     * @param stationCode Two-letter station code.  Use the Station List method to return a list of all station codes. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public void call54763641281d830c946a3d79(String stationCode) throws ApiException {
        call54763641281d830c946a3d79WithHttpInfo(stationCode);
    }

    /**
     * XML - Elevator/Escalator Outages
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;  &lt;p&gt;Returns a list of &lt;em&gt;reported&lt;/em&gt; elevator and escalator outages at a given station. Omit the StationCode parameter to return all reported outages.&lt;/p&gt;  &lt;p&gt;Note that for stations with multiple platforms and therefore StationCodes (e.g.: Metro Center, L&#39;Enfant Plaza, etc.), a distinct call is required for each StationCode.&lt;/p&gt;  &lt;p&gt;Elevator and escalator outages are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;  &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;  &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;  &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;  &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;ElevatorIncidents&lt;/td&gt;  &lt;td&gt; Array containing elevator/escalator outage information (&lt;a href&#x3D;\&quot;#ElevatorIncident\&quot;&gt;ElevatorIncident&lt;/a&gt;). &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td colspan&#x3D;\&quot;2\&quot;&gt; &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt; &lt;a id&#x3D;\&quot;ElevatorIncident\&quot; name&#x3D; \&quot;ElevatorIncident\&quot;&gt;ElevatorIncident Elements&lt;/a&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateOutOfServ&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) unit was reported out of service. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateUpdated&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) outage details was last updated. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DisplayOrder&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;EstimatedReturnToService&lt;/td&gt;  &lt;td&gt;Estimated date and time (Eastern Standard Time) by when unit is expected to return to normal service. May be NULL, otherwise will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T23:59:59).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;LocationDescription&lt;/td&gt;  &lt;td&gt;Free-text description of the unit location within a station (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Escalator between mezzanine and platform&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationCode&lt;/td&gt;  &lt;td&gt;Unit&#39;s station code. Use this value in other rail-related APIs to retrieve data about a station.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationName&lt;/td&gt;  &lt;td&gt;Full station name, may include entrance information (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Metro Center, G and 11th St Entrance&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;SymptomCode&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;SymptomDescription&lt;/td&gt;  &lt;td&gt;Description for why the unit is out of service or otherwise in reduced operation.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;TimeOutOfService&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; Use the time portion of the DateOutOfServ element.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitName&lt;/td&gt;  &lt;td&gt;Unique identifier for unit, by type (a single elevator and escalator may have the same UnitName, but no two elevators or two escalators will have the same UnitName).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;UnitStatus&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; If listed here, the unit is inoperational or otherwise impaired.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitType&lt;/td&gt;  &lt;td&gt;Type of unit. Will be &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ELEVATOR&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ESCALATOR&lt;/span&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;
     * @param stationCode Two-letter station code.  Use the Station List method to return a list of all station codes. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call54763641281d830c946a3d79WithHttpInfo(String stationCode) throws ApiException {
        okhttp3.Call localVarCall = call54763641281d830c946a3d79ValidateBeforeCall(stationCode, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * XML - Elevator/Escalator Outages (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;  &lt;p&gt;Returns a list of &lt;em&gt;reported&lt;/em&gt; elevator and escalator outages at a given station. Omit the StationCode parameter to return all reported outages.&lt;/p&gt;  &lt;p&gt;Note that for stations with multiple platforms and therefore StationCodes (e.g.: Metro Center, L&#39;Enfant Plaza, etc.), a distinct call is required for each StationCode.&lt;/p&gt;  &lt;p&gt;Elevator and escalator outages are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;  &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;  &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt; &lt;thead&gt; &lt;tr&gt; &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;  &lt;th&gt;Description&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt;  &lt;tbody&gt; &lt;tr&gt; &lt;td&gt;ElevatorIncidents&lt;/td&gt;  &lt;td&gt; Array containing elevator/escalator outage information (&lt;a href&#x3D;\&quot;#ElevatorIncident\&quot;&gt;ElevatorIncident&lt;/a&gt;). &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td colspan&#x3D;\&quot;2\&quot;&gt; &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt; &lt;a id&#x3D;\&quot;ElevatorIncident\&quot; name&#x3D; \&quot;ElevatorIncident\&quot;&gt;ElevatorIncident Elements&lt;/a&gt; &lt;/div&gt; &lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateOutOfServ&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) unit was reported out of service. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;DateUpdated&lt;/td&gt;  &lt;td&gt;Date and time (Eastern Standard Time) outage details was last updated. Will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T15:17:00).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DisplayOrder&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;EstimatedReturnToService&lt;/td&gt;  &lt;td&gt;Estimated date and time (Eastern Standard Time) by when unit is expected to return to normal service. May be NULL, otherwise will be in YYYY-MM-DDTHH:mm:ss format (e.g.: 2014-10-27T23:59:59).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;LocationDescription&lt;/td&gt;  &lt;td&gt;Free-text description of the unit location within a station (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Escalator between mezzanine and platform&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationCode&lt;/td&gt;  &lt;td&gt;Unit&#39;s station code. Use this value in other rail-related APIs to retrieve data about a station.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;StationName&lt;/td&gt;  &lt;td&gt;Full station name, may include entrance information (e.g.: &lt;span class&#x3D;\&quot;text-info\&quot;&gt;Metro Center, G and 11th St Entrance&lt;/span&gt;).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;SymptomCode&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;SymptomDescription&lt;/td&gt;  &lt;td&gt;Description for why the unit is out of service or otherwise in reduced operation.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;TimeOutOfService&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; Use the time portion of the DateOutOfServ element.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitName&lt;/td&gt;  &lt;td&gt;Unique identifier for unit, by type (a single elevator and escalator may have the same UnitName, but no two elevators or two escalators will have the same UnitName).&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;UnitStatus&lt;/td&gt;  &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt; If listed here, the unit is inoperational or otherwise impaired.&lt;/td&gt; &lt;/tr&gt;  &lt;tr&gt; &lt;td&gt;UnitType&lt;/td&gt;  &lt;td&gt;Type of unit. Will be &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ELEVATOR&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;ESCALATOR&lt;/span&gt;.&lt;/td&gt; &lt;/tr&gt; &lt;/tbody&gt; &lt;/table&gt;
     * @param stationCode Two-letter station code.  Use the Station List method to return a list of all station codes. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d79Async(String stationCode, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call54763641281d830c946a3d79ValidateBeforeCall(stationCode, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for call54763641281d830c946a3d7a
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d7aCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/Incidents";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call54763641281d830c946a3d7aValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return call54763641281d830c946a3d7aCall(_callback);

    }

    /**
     * XML - Rail Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns reported rail incidents (significant disruptions and delays to  normal service). The data is identical to WMATA&#39;s &lt;a href&#x3D;  \&quot;http://www.metroalerts.info/rss.aspx?rs\&quot;&gt;Metrorail Service Status  feed&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;Rail incidents are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Incidents&lt;/td&gt;    &lt;td&gt;  Array containing rail disruption information (&lt;a href&#x3D;  \&quot;#Incident\&quot;&gt;Incident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;Incident\&quot; name&#x3D;\&quot;Incident\&quot;&gt;Incident Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:SS format (e.g.: 2010-07-29T14:21:28).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DelaySeverity&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EmergencyText&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EndLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually Delay or  Alert but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LinesAffected&lt;/td&gt;    &lt;td&gt;Semi-colon and space separated list of line codes (e.g.:  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;RD;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL;  OR;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL; OR; RD;&lt;/span&gt;). We do  plan to update this to return something more reasonable like an  array, but until then, use code similar to the following:&lt;br&gt;  &lt;br&gt;  &lt;code&gt;\&quot;RD; GR; BL;\&quot;.split(/;[\\s]?/).filter(function(fn) { return fn  !&#x3D;&#x3D; &#39;&#39;; })&lt;/code&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;PassengerDelay&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;  StartLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public void call54763641281d830c946a3d7a() throws ApiException {
        call54763641281d830c946a3d7aWithHttpInfo();
    }

    /**
     * XML - Rail Incidents
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns reported rail incidents (significant disruptions and delays to  normal service). The data is identical to WMATA&#39;s &lt;a href&#x3D;  \&quot;http://www.metroalerts.info/rss.aspx?rs\&quot;&gt;Metrorail Service Status  feed&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;Rail incidents are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Incidents&lt;/td&gt;    &lt;td&gt;  Array containing rail disruption information (&lt;a href&#x3D;  \&quot;#Incident\&quot;&gt;Incident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;Incident\&quot; name&#x3D;\&quot;Incident\&quot;&gt;Incident Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:SS format (e.g.: 2010-07-29T14:21:28).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DelaySeverity&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EmergencyText&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EndLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually Delay or  Alert but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LinesAffected&lt;/td&gt;    &lt;td&gt;Semi-colon and space separated list of line codes (e.g.:  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;RD;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL;  OR;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL; OR; RD;&lt;/span&gt;). We do  plan to update this to return something more reasonable like an  array, but until then, use code similar to the following:&lt;br&gt;  &lt;br&gt;  &lt;code&gt;\&quot;RD; GR; BL;\&quot;.split(/;[\\s]?/).filter(function(fn) { return fn  !&#x3D;&#x3D; &#39;&#39;; })&lt;/code&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;PassengerDelay&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;  StartLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call54763641281d830c946a3d7aWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = call54763641281d830c946a3d7aValidateBeforeCall(null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * XML - Rail Incidents (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns reported rail incidents (significant disruptions and delays to  normal service). The data is identical to WMATA&#39;s &lt;a href&#x3D;  \&quot;http://www.metroalerts.info/rss.aspx?rs\&quot;&gt;Metrorail Service Status  feed&lt;/a&gt;.&lt;/p&gt;    &lt;p&gt;Rail incidents are refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Incidents&lt;/td&gt;    &lt;td&gt;  Array containing rail disruption information (&lt;a href&#x3D;  \&quot;#Incident\&quot;&gt;Incident&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;Incident\&quot; name&#x3D;\&quot;Incident\&quot;&gt;Incident Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DateUpdated&lt;/td&gt;    &lt;td&gt;Date and time (Eastern Standard Time) of last update. Will be  in YYYY-MM-DDTHH:mm:SS format (e.g.: 2010-07-29T14:21:28).&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;DelaySeverity&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Description&lt;/td&gt;    &lt;td&gt;Free-text description of the incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EmergencyText&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;EndLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentID&lt;/td&gt;    &lt;td&gt;Unique identifier for an incident.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;IncidentType&lt;/td&gt;    &lt;td&gt;Free-text description of the incident type. Usually Delay or  Alert but is subject to change at any time.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LinesAffected&lt;/td&gt;    &lt;td&gt;Semi-colon and space separated list of line codes (e.g.:  &lt;span class&#x3D;\&quot;text-info\&quot;&gt;RD;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL;  OR;&lt;/span&gt; or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;BL; OR; RD;&lt;/span&gt;). We do  plan to update this to return something more reasonable like an  array, but until then, use code similar to the following:&lt;br&gt;  &lt;br&gt;  &lt;code&gt;\&quot;RD; GR; BL;\&quot;.split(/;[\\s]?/).filter(function(fn) { return fn  !&#x3D;&#x3D; &#39;&#39;; })&lt;/code&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;PassengerDelay&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td style&#x3D;\&quot;text-decoration: line-through\&quot;&gt;  StartLocationFullName&lt;/td&gt;    &lt;td&gt;&lt;span class&#x3D;\&quot;text-danger\&quot;&gt;Deprecated.&lt;/span&gt;&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default response code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call54763641281d830c946a3d7aAsync(final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call54763641281d830c946a3d7aValidateBeforeCall(_callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
