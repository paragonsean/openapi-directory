/*
 * Real-Time Rail Predictions
 * Real-time rail prediction methods.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;



import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DefaultApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DefaultApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DefaultApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for call547636a6f918230da855363f
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call547636a6f918230da855363fCall(String stationCodes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/json/GetPrediction/{StationCodes}"
            .replace("{" + "StationCodes" + "}", localVarApiClient.escapeString(stationCodes.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call547636a6f918230da855363fValidateBeforeCall(String stationCodes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'stationCodes' is set
        if (stationCodes == null) {
            throw new ApiException("Missing the required parameter 'stationCodes' when calling call547636a6f918230da855363f(Async)");
        }

        return call547636a6f918230da855363fCall(stationCodes, _callback);

    }

    /**
     * JSON - Next Trains
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns next train arrival information for one or more stations. Will return  an empty set of results when no predictions are available. Use &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;All&lt;/span&gt; for the StationCodes parameter to return predictions for  all stations.&lt;/p&gt;    &lt;p&gt;For terminal stations (e.g.: Greenbelt, Shady Grove, etc.), predictions may  be displayed twice.&lt;/p&gt;    &lt;p&gt;Some stations have two platforms (e.g.: Gallery Place, Fort Totten, L&#39;Enfant  Plaza, and Metro Center). To retrieve complete predictions for these stations,  be sure to pass in both StationCodes.&lt;/p&gt;    &lt;p&gt;For trains with no passengers, the DestinationName will be &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;No Passenger&lt;/span&gt;.&lt;/p&gt;    &lt;p&gt;Next train arrival information is refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Trains&lt;/td&gt;    &lt;td&gt;  Array containing train prediction information (&lt;a href&#x3D;  \&quot;#AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;AIMPredictionTrainInfo\&quot; name&#x3D;  \&quot;AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Car&lt;/td&gt;    &lt;td&gt;Number of cars on a train, usually 6 or 8, but might also  return &lt;span class&#x3D;\&quot;text-info\&quot;&gt;-&lt;/span&gt; or NULL.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Destination&lt;/td&gt;    &lt;td&gt;Abbreviated version of the final destination for a train. This  is similar to what is displayed on the signs at stations.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationCode&lt;/td&gt;    &lt;td&gt;Destination station code. Can be NULL. Use this value in other  rail-related APIs to retrieve data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationName&lt;/td&gt;    &lt;td&gt;When DestinationCode is populated, this is the full name of the  destination station, as shown on the WMATA website.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Group&lt;/td&gt;    &lt;td&gt;Denotes the track this train is on, but does not necessarily  equate to Track 1 or Track 2. With the exception of terminal  stations, predictions at the same station with different Group  values refer to trains on different tracks.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Line&lt;/td&gt;    &lt;td&gt;Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,  or SV). May also be blank or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;No&lt;/span&gt; for  trains with no passengers.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationCode&lt;/td&gt;    &lt;td&gt;Station code for where the train is arriving. Useful when  passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the StationCodes  parameter. Use this value in other rail-related APIs to retrieve  data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationName&lt;/td&gt;    &lt;td&gt;Full name of the station where the train is arriving. Useful  when passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the  StationCodes parameter.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Min&lt;/td&gt;    &lt;td&gt;Minutes until arrival. Can be a numeric value, &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;ARR&lt;/span&gt; (arriving), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;BRD&lt;/span&gt; (boarding), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;---&lt;/span&gt;, or empty.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;  &lt;hr&gt;
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public void call547636a6f918230da855363f(String stationCodes) throws ApiException {
        call547636a6f918230da855363fWithHttpInfo(stationCodes);
    }

    /**
     * JSON - Next Trains
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns next train arrival information for one or more stations. Will return  an empty set of results when no predictions are available. Use &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;All&lt;/span&gt; for the StationCodes parameter to return predictions for  all stations.&lt;/p&gt;    &lt;p&gt;For terminal stations (e.g.: Greenbelt, Shady Grove, etc.), predictions may  be displayed twice.&lt;/p&gt;    &lt;p&gt;Some stations have two platforms (e.g.: Gallery Place, Fort Totten, L&#39;Enfant  Plaza, and Metro Center). To retrieve complete predictions for these stations,  be sure to pass in both StationCodes.&lt;/p&gt;    &lt;p&gt;For trains with no passengers, the DestinationName will be &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;No Passenger&lt;/span&gt;.&lt;/p&gt;    &lt;p&gt;Next train arrival information is refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Trains&lt;/td&gt;    &lt;td&gt;  Array containing train prediction information (&lt;a href&#x3D;  \&quot;#AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;AIMPredictionTrainInfo\&quot; name&#x3D;  \&quot;AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Car&lt;/td&gt;    &lt;td&gt;Number of cars on a train, usually 6 or 8, but might also  return &lt;span class&#x3D;\&quot;text-info\&quot;&gt;-&lt;/span&gt; or NULL.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Destination&lt;/td&gt;    &lt;td&gt;Abbreviated version of the final destination for a train. This  is similar to what is displayed on the signs at stations.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationCode&lt;/td&gt;    &lt;td&gt;Destination station code. Can be NULL. Use this value in other  rail-related APIs to retrieve data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationName&lt;/td&gt;    &lt;td&gt;When DestinationCode is populated, this is the full name of the  destination station, as shown on the WMATA website.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Group&lt;/td&gt;    &lt;td&gt;Denotes the track this train is on, but does not necessarily  equate to Track 1 or Track 2. With the exception of terminal  stations, predictions at the same station with different Group  values refer to trains on different tracks.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Line&lt;/td&gt;    &lt;td&gt;Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,  or SV). May also be blank or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;No&lt;/span&gt; for  trains with no passengers.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationCode&lt;/td&gt;    &lt;td&gt;Station code for where the train is arriving. Useful when  passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the StationCodes  parameter. Use this value in other rail-related APIs to retrieve  data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationName&lt;/td&gt;    &lt;td&gt;Full name of the station where the train is arriving. Useful  when passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the  StationCodes parameter.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Min&lt;/td&gt;    &lt;td&gt;Minutes until arrival. Can be a numeric value, &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;ARR&lt;/span&gt; (arriving), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;BRD&lt;/span&gt; (boarding), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;---&lt;/span&gt;, or empty.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;  &lt;hr&gt;
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call547636a6f918230da855363fWithHttpInfo(String stationCodes) throws ApiException {
        okhttp3.Call localVarCall = call547636a6f918230da855363fValidateBeforeCall(stationCodes, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * JSON - Next Trains (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns next train arrival information for one or more stations. Will return  an empty set of results when no predictions are available. Use &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;All&lt;/span&gt; for the StationCodes parameter to return predictions for  all stations.&lt;/p&gt;    &lt;p&gt;For terminal stations (e.g.: Greenbelt, Shady Grove, etc.), predictions may  be displayed twice.&lt;/p&gt;    &lt;p&gt;Some stations have two platforms (e.g.: Gallery Place, Fort Totten, L&#39;Enfant  Plaza, and Metro Center). To retrieve complete predictions for these stations,  be sure to pass in both StationCodes.&lt;/p&gt;    &lt;p&gt;For trains with no passengers, the DestinationName will be &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;No Passenger&lt;/span&gt;.&lt;/p&gt;    &lt;p&gt;Next train arrival information is refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Trains&lt;/td&gt;    &lt;td&gt;  Array containing train prediction information (&lt;a href&#x3D;  \&quot;#AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;AIMPredictionTrainInfo\&quot; name&#x3D;  \&quot;AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Car&lt;/td&gt;    &lt;td&gt;Number of cars on a train, usually 6 or 8, but might also  return &lt;span class&#x3D;\&quot;text-info\&quot;&gt;-&lt;/span&gt; or NULL.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Destination&lt;/td&gt;    &lt;td&gt;Abbreviated version of the final destination for a train. This  is similar to what is displayed on the signs at stations.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationCode&lt;/td&gt;    &lt;td&gt;Destination station code. Can be NULL. Use this value in other  rail-related APIs to retrieve data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationName&lt;/td&gt;    &lt;td&gt;When DestinationCode is populated, this is the full name of the  destination station, as shown on the WMATA website.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Group&lt;/td&gt;    &lt;td&gt;Denotes the track this train is on, but does not necessarily  equate to Track 1 or Track 2. With the exception of terminal  stations, predictions at the same station with different Group  values refer to trains on different tracks.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Line&lt;/td&gt;    &lt;td&gt;Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,  or SV). May also be blank or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;No&lt;/span&gt; for  trains with no passengers.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationCode&lt;/td&gt;    &lt;td&gt;Station code for where the train is arriving. Useful when  passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the StationCodes  parameter. Use this value in other rail-related APIs to retrieve  data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationName&lt;/td&gt;    &lt;td&gt;Full name of the station where the train is arriving. Useful  when passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the  StationCodes parameter.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Min&lt;/td&gt;    &lt;td&gt;Minutes until arrival. Can be a numeric value, &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;ARR&lt;/span&gt; (arriving), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;BRD&lt;/span&gt; (boarding), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;---&lt;/span&gt;, or empty.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;  &lt;hr&gt;
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call547636a6f918230da855363fAsync(String stationCodes, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call547636a6f918230da855363fValidateBeforeCall(stationCodes, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for call547636a6f918230da8553640
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call547636a6f918230da8553640Call(String stationCodes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/GetPrediction/{StationCodes}"
            .replace("{" + "StationCodes" + "}", localVarApiClient.escapeString(stationCodes.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apiKeyQuery", "apiKeyHeader" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call call547636a6f918230da8553640ValidateBeforeCall(String stationCodes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'stationCodes' is set
        if (stationCodes == null) {
            throw new ApiException("Missing the required parameter 'stationCodes' when calling call547636a6f918230da8553640(Async)");
        }

        return call547636a6f918230da8553640Call(stationCodes, _callback);

    }

    /**
     * XML - Next Trains
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns next train arrival information for one or more stations. Will return  an empty set of results when no predictions are available. Use &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;All&lt;/span&gt; for the StationCodes parameter to return predictions for  all stations.&lt;/p&gt;    &lt;p&gt;For terminal stations (e.g.: Greenbelt, Shady Grove, etc.), predictions may  be displayed twice.&lt;/p&gt;    &lt;p&gt;Some stations have two platforms (e.g.: Gallery Place, Fort Totten, L&#39;Enfant  Plaza, and Metro Center). To retrieve complete predictions for these stations,  be sure to pass in both StationCodes.&lt;/p&gt;    &lt;p&gt;For trains with no passengers, the DestinationName will be &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;No Passenger&lt;/span&gt;.&lt;/p&gt;    &lt;p&gt;Next train arrival information is refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Trains&lt;/td&gt;    &lt;td&gt;  Array containing train prediction information (&lt;a href&#x3D;  \&quot;#AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;AIMPredictionTrainInfo\&quot; name&#x3D;  \&quot;AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Car&lt;/td&gt;    &lt;td&gt;Number of cars on a train, usually 6 or 8, but might also  return &lt;span class&#x3D;\&quot;text-info\&quot;&gt;-&lt;/span&gt; or NULL.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Destination&lt;/td&gt;    &lt;td&gt;Abbreviated version of the final destination for a train. This  is similar to what is displayed on the signs at stations.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationCode&lt;/td&gt;    &lt;td&gt;Destination station code. Can be NULL. Use this value in other  rail-related APIs to retrieve data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationName&lt;/td&gt;    &lt;td&gt;When DestinationCode is populated, this is the full name of the  destination station, as shown on the WMATA website.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Group&lt;/td&gt;    &lt;td&gt;Denotes the track this train is on, but does not necessarily  equate to Track 1 or Track 2. With the exception of terminal  stations, predictions at the same station with different Group  values refer to trains on different tracks.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Line&lt;/td&gt;    &lt;td&gt;Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,  or SV). May also be blank or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;No&lt;/span&gt; for  trains with no passengers.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationCode&lt;/td&gt;    &lt;td&gt;Station code for where the train is arriving. Useful when  passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the StationCodes  parameter. Use this value in other rail-related APIs to retrieve  data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationName&lt;/td&gt;    &lt;td&gt;Full name of the station where the train is arriving. Useful  when passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the  StationCodes parameter.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Min&lt;/td&gt;    &lt;td&gt;Minutes until arrival. Can be a numeric value, &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;ARR&lt;/span&gt; (arriving), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;BRD&lt;/span&gt; (boarding), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;---&lt;/span&gt;, or empty.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;  &lt;hr&gt;
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public void call547636a6f918230da8553640(String stationCodes) throws ApiException {
        call547636a6f918230da8553640WithHttpInfo(stationCodes);
    }

    /**
     * XML - Next Trains
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns next train arrival information for one or more stations. Will return  an empty set of results when no predictions are available. Use &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;All&lt;/span&gt; for the StationCodes parameter to return predictions for  all stations.&lt;/p&gt;    &lt;p&gt;For terminal stations (e.g.: Greenbelt, Shady Grove, etc.), predictions may  be displayed twice.&lt;/p&gt;    &lt;p&gt;Some stations have two platforms (e.g.: Gallery Place, Fort Totten, L&#39;Enfant  Plaza, and Metro Center). To retrieve complete predictions for these stations,  be sure to pass in both StationCodes.&lt;/p&gt;    &lt;p&gt;For trains with no passengers, the DestinationName will be &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;No Passenger&lt;/span&gt;.&lt;/p&gt;    &lt;p&gt;Next train arrival information is refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Trains&lt;/td&gt;    &lt;td&gt;  Array containing train prediction information (&lt;a href&#x3D;  \&quot;#AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;AIMPredictionTrainInfo\&quot; name&#x3D;  \&quot;AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Car&lt;/td&gt;    &lt;td&gt;Number of cars on a train, usually 6 or 8, but might also  return &lt;span class&#x3D;\&quot;text-info\&quot;&gt;-&lt;/span&gt; or NULL.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Destination&lt;/td&gt;    &lt;td&gt;Abbreviated version of the final destination for a train. This  is similar to what is displayed on the signs at stations.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationCode&lt;/td&gt;    &lt;td&gt;Destination station code. Can be NULL. Use this value in other  rail-related APIs to retrieve data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationName&lt;/td&gt;    &lt;td&gt;When DestinationCode is populated, this is the full name of the  destination station, as shown on the WMATA website.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Group&lt;/td&gt;    &lt;td&gt;Denotes the track this train is on, but does not necessarily  equate to Track 1 or Track 2. With the exception of terminal  stations, predictions at the same station with different Group  values refer to trains on different tracks.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Line&lt;/td&gt;    &lt;td&gt;Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,  or SV). May also be blank or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;No&lt;/span&gt; for  trains with no passengers.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationCode&lt;/td&gt;    &lt;td&gt;Station code for where the train is arriving. Useful when  passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the StationCodes  parameter. Use this value in other rail-related APIs to retrieve  data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationName&lt;/td&gt;    &lt;td&gt;Full name of the station where the train is arriving. Useful  when passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the  StationCodes parameter.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Min&lt;/td&gt;    &lt;td&gt;Minutes until arrival. Can be a numeric value, &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;ARR&lt;/span&gt; (arriving), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;BRD&lt;/span&gt; (boarding), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;---&lt;/span&gt;, or empty.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;  &lt;hr&gt;
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> call547636a6f918230da8553640WithHttpInfo(String stationCodes) throws ApiException {
        okhttp3.Call localVarCall = call547636a6f918230da8553640ValidateBeforeCall(stationCodes, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * XML - Next Trains (asynchronously)
     * &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Description&lt;/h4&gt;    &lt;p&gt;Returns next train arrival information for one or more stations. Will return  an empty set of results when no predictions are available. Use &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;All&lt;/span&gt; for the StationCodes parameter to return predictions for  all stations.&lt;/p&gt;    &lt;p&gt;For terminal stations (e.g.: Greenbelt, Shady Grove, etc.), predictions may  be displayed twice.&lt;/p&gt;    &lt;p&gt;Some stations have two platforms (e.g.: Gallery Place, Fort Totten, L&#39;Enfant  Plaza, and Metro Center). To retrieve complete predictions for these stations,  be sure to pass in both StationCodes.&lt;/p&gt;    &lt;p&gt;For trains with no passengers, the DestinationName will be &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;No Passenger&lt;/span&gt;.&lt;/p&gt;    &lt;p&gt;Next train arrival information is refreshed once every 20 to 30 seconds approximately.&lt;/p&gt;    &lt;h4 class&#x3D;\&quot;text-primary\&quot;&gt;Response Elements&lt;/h4&gt;    &lt;table class&#x3D;\&quot;table table-condensed table-hover\&quot;&gt;  &lt;thead&gt;  &lt;tr&gt;  &lt;th class&#x3D;\&quot;col-md-3\&quot;&gt;Element&lt;/th&gt;    &lt;th&gt;Description&lt;/th&gt;  &lt;/tr&gt;  &lt;/thead&gt;    &lt;tbody&gt;  &lt;tr&gt;  &lt;td&gt;Trains&lt;/td&gt;    &lt;td&gt;  Array containing train prediction information (&lt;a href&#x3D;  \&quot;#AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo&lt;/a&gt;).  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td colspan&#x3D;\&quot;2\&quot;&gt;  &lt;div class&#x3D;\&quot;text-primary\&quot; style&#x3D;\&quot;margin-top: 1em\&quot;&gt;  &lt;a id&#x3D;\&quot;AIMPredictionTrainInfo\&quot; name&#x3D;  \&quot;AIMPredictionTrainInfo\&quot;&gt;AIMPredictionTrainInfo  Elements&lt;/a&gt;  &lt;/div&gt;  &lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Car&lt;/td&gt;    &lt;td&gt;Number of cars on a train, usually 6 or 8, but might also  return &lt;span class&#x3D;\&quot;text-info\&quot;&gt;-&lt;/span&gt; or NULL.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Destination&lt;/td&gt;    &lt;td&gt;Abbreviated version of the final destination for a train. This  is similar to what is displayed on the signs at stations.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationCode&lt;/td&gt;    &lt;td&gt;Destination station code. Can be NULL. Use this value in other  rail-related APIs to retrieve data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;DestinationName&lt;/td&gt;    &lt;td&gt;When DestinationCode is populated, this is the full name of the  destination station, as shown on the WMATA website.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Group&lt;/td&gt;    &lt;td&gt;Denotes the track this train is on, but does not necessarily  equate to Track 1 or Track 2. With the exception of terminal  stations, predictions at the same station with different Group  values refer to trains on different tracks.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Line&lt;/td&gt;    &lt;td&gt;Two-letter abbreviation for the line (e.g.: RD, BL, YL, OR, GR,  or SV). May also be blank or &lt;span class&#x3D;\&quot;text-info\&quot;&gt;No&lt;/span&gt; for  trains with no passengers.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationCode&lt;/td&gt;    &lt;td&gt;Station code for where the train is arriving. Useful when  passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the StationCodes  parameter. Use this value in other rail-related APIs to retrieve  data about a station.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;LocationName&lt;/td&gt;    &lt;td&gt;Full name of the station where the train is arriving. Useful  when passing in &lt;span class&#x3D;\&quot;text-info\&quot;&gt;All&lt;/span&gt; as the  StationCodes parameter.&lt;/td&gt;  &lt;/tr&gt;    &lt;tr&gt;  &lt;td&gt;Min&lt;/td&gt;    &lt;td&gt;Minutes until arrival. Can be a numeric value, &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;ARR&lt;/span&gt; (arriving), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;BRD&lt;/span&gt; (boarding), &lt;span class&#x3D;  \&quot;text-info\&quot;&gt;---&lt;/span&gt;, or empty.&lt;/td&gt;  &lt;/tr&gt;  &lt;/tbody&gt;  &lt;/table&gt;  &lt;hr&gt;
     * @param stationCodes Comma-separated list of station codes.  For all predictions, use \&quot;All\&quot;. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Default return code. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call call547636a6f918230da8553640Async(String stationCodes, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = call547636a6f918230da8553640ValidateBeforeCall(stationCodes, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
