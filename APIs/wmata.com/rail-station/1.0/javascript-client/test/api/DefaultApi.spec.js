/**
 * Rail Station Information
 * Rail line and station information, including locations, fares, times, and parking.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RailStationInformation);
  }
}(this, function(expect, RailStationInformation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RailStationInformation.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('call5476364f031f5909e4fe330c', function() {
      it('should call call5476364f031f5909e4fe330c successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe330c
        //instance.call5476364f031f5909e4fe330c(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe330d', function() {
      it('should call call5476364f031f5909e4fe330d successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe330d
        //instance.call5476364f031f5909e4fe330d(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe330e', function() {
      it('should call call5476364f031f5909e4fe330e successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe330e
        //instance.call5476364f031f5909e4fe330e(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe330f', function() {
      it('should call call5476364f031f5909e4fe330f successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe330f
        //instance.call5476364f031f5909e4fe330f(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3310', function() {
      it('should call call5476364f031f5909e4fe3310 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3310
        //instance.call5476364f031f5909e4fe3310(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3311', function() {
      it('should call call5476364f031f5909e4fe3311 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3311
        //instance.call5476364f031f5909e4fe3311(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3312', function() {
      it('should call call5476364f031f5909e4fe3312 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3312
        //instance.call5476364f031f5909e4fe3312(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3313', function() {
      it('should call call5476364f031f5909e4fe3313 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3313
        //instance.call5476364f031f5909e4fe3313(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3314', function() {
      it('should call call5476364f031f5909e4fe3314 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3314
        //instance.call5476364f031f5909e4fe3314(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3315', function() {
      it('should call call5476364f031f5909e4fe3315 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3315
        //instance.call5476364f031f5909e4fe3315(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3316', function() {
      it('should call call5476364f031f5909e4fe3316 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3316
        //instance.call5476364f031f5909e4fe3316(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3317', function() {
      it('should call call5476364f031f5909e4fe3317 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3317
        //instance.call5476364f031f5909e4fe3317(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3318', function() {
      it('should call call5476364f031f5909e4fe3318 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3318
        //instance.call5476364f031f5909e4fe3318(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe3319', function() {
      it('should call call5476364f031f5909e4fe3319 successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe3319
        //instance.call5476364f031f5909e4fe3319(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe331a', function() {
      it('should call call5476364f031f5909e4fe331a successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe331a
        //instance.call5476364f031f5909e4fe331a(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476364f031f5909e4fe331b', function() {
      it('should call call5476364f031f5909e4fe331b successfully', function(done) {
        //uncomment below and update the code to test call5476364f031f5909e4fe331b
        //instance.call5476364f031f5909e4fe331b(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
