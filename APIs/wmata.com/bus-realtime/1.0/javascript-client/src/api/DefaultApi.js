/**
 * Real-Time Bus Predictions
 * Real-time bus prediction methods.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Default service.
* @module api/DefaultApi
* @version 1.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the call5476365e031f5909e4fe331d operation.
     * @callback module:api/DefaultApi~call5476365e031f5909e4fe331dCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * JSON - Next Buses
     * <h4 class=\"text-primary\">Description</h4>    <p>Returns next bus arrival times at a stop.</p>    <h4 class=\"text-primary\">Response Elements</h4>    <table class=\"table table-condensed table-hover\">  <thead>  <tr>  <th class=\"col-md-3\">Element</th>    <th>Description</th>  </tr>  </thead>    <tbody>  <tr>  <td>Predictions</td>    <td>  Array containing bus predictions (<a href=  \"#NextBusPrediction\">NextBusPrediction</a>).  </td>  </tr>    <tr>  <td>StopName</td>    <td>Full name of the given StopID.</td>  </tr>    <tr>  <td colspan=\"2\">  <div class=\"text-primary\" style=\"margin-top: 1em\">  <a id=\"NextBusPrediction\" name=  \"NextBusPrediction\">NextBusPrediction Elements</a>  </div>  </td>  </tr>    <tr>  <td>DirectionNum</td>    <td>Denotes a binary direction (0 or 1) of the bus. There is no  specific mapping to direction, but a different value for the same  route signifies that the buses are traveling in opposite  directions. Use the DirectionText element to show the actual  destination of the bus.</td>  </tr>    <tr>  <td>DirectionText</td>    <td>Customer-friendly description of direction and destination for  a bus.</td>  </tr>    <tr>  <td>Minutes</td>    <td>Minutes until bus arrival at this stop. Numeric value.</td>  </tr>    <tr>  <td>RouteID</td>    <td>Base route name as shown on the bus. This can be used in other  bus-related methods. Note that all variants will be shown as their  base route names (i.e.: 10Av1 and 10Av2 will be shown as 10A).</td>  </tr>    <tr>  <td>TripID</td>    <td>Trip identifier. This can be correlated with the data in our  bus schedule information as well as bus positions.</td>  </tr>    <tr>  <td>VehicleID</td>    <td>Bus identifier. This can be correlated with results returned  from bus positions.</td>  </tr>  </tbody>  </table>
     * @param {module:model/String} stopID 7-digit regional stop ID.
     * @param {module:api/DefaultApi~call5476365e031f5909e4fe331dCallback} callback The callback function, accepting three arguments: error, data, response
     */
    call5476365e031f5909e4fe331d(stopID, callback) {
      let postBody = null;
      // verify the required parameter 'stopID' is set
      if (stopID === undefined || stopID === null) {
        throw new Error("Missing the required parameter 'stopID' when calling call5476365e031f5909e4fe331d");
      }

      let pathParams = {
      };
      let queryParams = {
        'StopID': stopID
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery', 'apiKeyHeader'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/json/jPredictions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the call5476365e031f5909e4fe331e operation.
     * @callback module:api/DefaultApi~call5476365e031f5909e4fe331eCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * XML - Next Buses
     * <h4 class=\"text-primary\">Description</h4>    <p>Returns next bus arrival times at a stop.</p>    <h4 class=\"text-primary\">Response Elements</h4>    <table class=\"table table-condensed table-hover\">  <thead>  <tr>  <th class=\"col-md-3\">Element</th>    <th>Description</th>  </tr>  </thead>    <tbody>  <tr>  <td>Predictions</td>    <td>  Array containing bus predictions (<a href=  \"#NextBusPrediction\">NextBusPrediction</a>).  </td>  </tr>    <tr>  <td>StopName</td>    <td>Full name of the given StopID.</td>  </tr>    <tr>  <td colspan=\"2\">  <div class=\"text-primary\" style=\"margin-top: 1em\">  <a id=\"NextBusPrediction\" name=  \"NextBusPrediction\">NextBusPrediction Elements</a>  </div>  </td>  </tr>    <tr>  <td>DirectionNum</td>    <td>Denotes a binary direction (0 or 1) of the bus. There is no  specific mapping to direction, but a different value for the same  route signifies that the buses are traveling in opposite  directions. Use the DirectionText element to show the actual  destination of the bus.</td>  </tr>    <tr>  <td>DirectionText</td>    <td>Customer-friendly description of direction and destination for  a bus.</td>  </tr>    <tr>  <td>Minutes</td>    <td>Minutes until bus arrival at this stop. Numeric value.</td>  </tr>    <tr>  <td>RouteID</td>    <td>Base route name as shown on the bus. This can be used in other  bus-related methods. Note that all variants will be shown as their  base route names (i.e.: 10Av1 and 10Av2 will be shown as 10A).</td>  </tr>    <tr>  <td>TripID</td>    <td>Trip identifier. This can be correlated with the data in our  bus schedule information as well as bus positions.</td>  </tr>    <tr>  <td>VehicleID</td>    <td>Bus identifier. This can be correlated with results returned  from bus positions.</td>  </tr>  </tbody>  </table>
     * @param {module:model/String} stopID 7-digit regional stop ID.
     * @param {module:api/DefaultApi~call5476365e031f5909e4fe331eCallback} callback The callback function, accepting three arguments: error, data, response
     */
    call5476365e031f5909e4fe331e(stopID, callback) {
      let postBody = null;
      // verify the required parameter 'stopID' is set
      if (stopID === undefined || stopID === null) {
        throw new Error("Missing the required parameter 'stopID' when calling call5476365e031f5909e4fe331e");
      }

      let pathParams = {
      };
      let queryParams = {
        'StopID': stopID
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyQuery', 'apiKeyHeader'];
      let contentTypes = [];
      let accepts = ['text/xml', 'application/xml'];
      let returnType = null;
      return this.apiClient.callApi(
        '/Predictions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
