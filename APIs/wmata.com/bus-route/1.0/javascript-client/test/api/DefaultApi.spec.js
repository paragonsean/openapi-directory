/**
 * Bus Route and Stop Methods
 * Bus stop information, route and schedule data, and bus positions.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BusRouteAndStopMethods);
  }
}(this, function(expect, BusRouteAndStopMethods) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BusRouteAndStopMethods.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('call5476362a281d830c946a3d68', function() {
      it('should call call5476362a281d830c946a3d68 successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d68
        //instance.call5476362a281d830c946a3d68(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d69', function() {
      it('should call call5476362a281d830c946a3d69 successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d69
        //instance.call5476362a281d830c946a3d69(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d6a', function() {
      it('should call call5476362a281d830c946a3d6a successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d6a
        //instance.call5476362a281d830c946a3d6a(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d6b', function() {
      it('should call call5476362a281d830c946a3d6b successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d6b
        //instance.call5476362a281d830c946a3d6b(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d6c', function() {
      it('should call call5476362a281d830c946a3d6c successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d6c
        //instance.call5476362a281d830c946a3d6c(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d6d', function() {
      it('should call call5476362a281d830c946a3d6d successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d6d
        //instance.call5476362a281d830c946a3d6d(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d6e', function() {
      it('should call call5476362a281d830c946a3d6e successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d6e
        //instance.call5476362a281d830c946a3d6e(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d6f', function() {
      it('should call call5476362a281d830c946a3d6f successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d6f
        //instance.call5476362a281d830c946a3d6f(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d70', function() {
      it('should call call5476362a281d830c946a3d70 successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d70
        //instance.call5476362a281d830c946a3d70(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d71', function() {
      it('should call call5476362a281d830c946a3d71 successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d71
        //instance.call5476362a281d830c946a3d71(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d72', function() {
      it('should call call5476362a281d830c946a3d72 successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d72
        //instance.call5476362a281d830c946a3d72(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('call5476362a281d830c946a3d73', function() {
      it('should call call5476362a281d830c946a3d73 successfully', function(done) {
        //uncomment below and update the code to test call5476362a281d830c946a3d73
        //instance.call5476362a281d830c946a3d73(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
