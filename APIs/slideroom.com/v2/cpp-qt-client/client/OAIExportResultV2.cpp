/**
 * SlideRoom API V2
 * SlideRoom provides a RESTful API for exporting data out of your organizations SlideRoom account.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExportResultV2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExportResultV2::OAIExportResultV2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExportResultV2::OAIExportResultV2() {
    this->initializeModel();
}

OAIExportResultV2::~OAIExportResultV2() {}

void OAIExportResultV2::initializeModel() {

    m_completed_files_isSet = false;
    m_completed_files_isValid = false;

    m_file_urls_isSet = false;
    m_file_urls_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_total_files_isSet = false;
    m_total_files_isValid = false;
}

void OAIExportResultV2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExportResultV2::fromJsonObject(QJsonObject json) {

    m_completed_files_isValid = ::OpenAPI::fromJsonValue(m_completed_files, json[QString("completed_files")]);
    m_completed_files_isSet = !json[QString("completed_files")].isNull() && m_completed_files_isValid;

    m_file_urls_isValid = ::OpenAPI::fromJsonValue(m_file_urls, json[QString("file_urls")]);
    m_file_urls_isSet = !json[QString("file_urls")].isNull() && m_file_urls_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_total_files_isValid = ::OpenAPI::fromJsonValue(m_total_files, json[QString("total_files")]);
    m_total_files_isSet = !json[QString("total_files")].isNull() && m_total_files_isValid;
}

QString OAIExportResultV2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExportResultV2::asJsonObject() const {
    QJsonObject obj;
    if (m_completed_files_isSet) {
        obj.insert(QString("completed_files"), ::OpenAPI::toJsonValue(m_completed_files));
    }
    if (m_file_urls.size() > 0) {
        obj.insert(QString("file_urls"), ::OpenAPI::toJsonValue(m_file_urls));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_total_files_isSet) {
        obj.insert(QString("total_files"), ::OpenAPI::toJsonValue(m_total_files));
    }
    return obj;
}

qint32 OAIExportResultV2::getCompletedFiles() const {
    return m_completed_files;
}
void OAIExportResultV2::setCompletedFiles(const qint32 &completed_files) {
    m_completed_files = completed_files;
    m_completed_files_isSet = true;
}

bool OAIExportResultV2::is_completed_files_Set() const{
    return m_completed_files_isSet;
}

bool OAIExportResultV2::is_completed_files_Valid() const{
    return m_completed_files_isValid;
}

QList<QString> OAIExportResultV2::getFileUrls() const {
    return m_file_urls;
}
void OAIExportResultV2::setFileUrls(const QList<QString> &file_urls) {
    m_file_urls = file_urls;
    m_file_urls_isSet = true;
}

bool OAIExportResultV2::is_file_urls_Set() const{
    return m_file_urls_isSet;
}

bool OAIExportResultV2::is_file_urls_Valid() const{
    return m_file_urls_isValid;
}

QString OAIExportResultV2::getStatus() const {
    return m_status;
}
void OAIExportResultV2::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIExportResultV2::is_status_Set() const{
    return m_status_isSet;
}

bool OAIExportResultV2::is_status_Valid() const{
    return m_status_isValid;
}

qint32 OAIExportResultV2::getTotalFiles() const {
    return m_total_files;
}
void OAIExportResultV2::setTotalFiles(const qint32 &total_files) {
    m_total_files = total_files;
    m_total_files_isSet = true;
}

bool OAIExportResultV2::is_total_files_Set() const{
    return m_total_files_isSet;
}

bool OAIExportResultV2::is_total_files_Valid() const{
    return m_total_files_isValid;
}

bool OAIExportResultV2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completed_files_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_urls.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_files_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExportResultV2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
