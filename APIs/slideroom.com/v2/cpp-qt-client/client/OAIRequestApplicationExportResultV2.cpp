/**
 * SlideRoom API V2
 * SlideRoom provides a RESTful API for exporting data out of your organizations SlideRoom account.
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRequestApplicationExportResultV2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRequestApplicationExportResultV2::OAIRequestApplicationExportResultV2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRequestApplicationExportResultV2::OAIRequestApplicationExportResultV2() {
    this->initializeModel();
}

OAIRequestApplicationExportResultV2::~OAIRequestApplicationExportResultV2() {}

void OAIRequestApplicationExportResultV2::initializeModel() {

    m_message_isSet = false;
    m_message_isValid = false;

    m_submissions_isSet = false;
    m_submissions_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAIRequestApplicationExportResultV2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRequestApplicationExportResultV2::fromJsonObject(QJsonObject json) {

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_submissions_isValid = ::OpenAPI::fromJsonValue(m_submissions, json[QString("submissions")]);
    m_submissions_isSet = !json[QString("submissions")].isNull() && m_submissions_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAIRequestApplicationExportResultV2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRequestApplicationExportResultV2::asJsonObject() const {
    QJsonObject obj;
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_submissions_isSet) {
        obj.insert(QString("submissions"), ::OpenAPI::toJsonValue(m_submissions));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

QString OAIRequestApplicationExportResultV2::getMessage() const {
    return m_message;
}
void OAIRequestApplicationExportResultV2::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIRequestApplicationExportResultV2::is_message_Set() const{
    return m_message_isSet;
}

bool OAIRequestApplicationExportResultV2::is_message_Valid() const{
    return m_message_isValid;
}

qint32 OAIRequestApplicationExportResultV2::getSubmissions() const {
    return m_submissions;
}
void OAIRequestApplicationExportResultV2::setSubmissions(const qint32 &submissions) {
    m_submissions = submissions;
    m_submissions_isSet = true;
}

bool OAIRequestApplicationExportResultV2::is_submissions_Set() const{
    return m_submissions_isSet;
}

bool OAIRequestApplicationExportResultV2::is_submissions_Valid() const{
    return m_submissions_isValid;
}

qint32 OAIRequestApplicationExportResultV2::getToken() const {
    return m_token;
}
void OAIRequestApplicationExportResultV2::setToken(const qint32 &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIRequestApplicationExportResultV2::is_token_Set() const{
    return m_token_isSet;
}

bool OAIRequestApplicationExportResultV2::is_token_Valid() const{
    return m_token_isValid;
}

bool OAIRequestApplicationExportResultV2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submissions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRequestApplicationExportResultV2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
