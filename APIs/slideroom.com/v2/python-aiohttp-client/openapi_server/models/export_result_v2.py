# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportResultV2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, completed_files: int=None, file_urls: List[str]=None, status: str=None, total_files: int=None):
        """ExportResultV2 - a model defined in OpenAPI

        :param completed_files: The completed_files of this ExportResultV2.
        :param file_urls: The file_urls of this ExportResultV2.
        :param status: The status of this ExportResultV2.
        :param total_files: The total_files of this ExportResultV2.
        """
        self.openapi_types = {
            'completed_files': int,
            'file_urls': List[str],
            'status': str,
            'total_files': int
        }

        self.attribute_map = {
            'completed_files': 'completed_files',
            'file_urls': 'file_urls',
            'status': 'status',
            'total_files': 'total_files'
        }

        self._completed_files = completed_files
        self._file_urls = file_urls
        self._status = status
        self._total_files = total_files

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportResultV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExportResultV2 of this ExportResultV2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def completed_files(self):
        """Gets the completed_files of this ExportResultV2.


        :return: The completed_files of this ExportResultV2.
        :rtype: int
        """
        return self._completed_files

    @completed_files.setter
    def completed_files(self, completed_files):
        """Sets the completed_files of this ExportResultV2.


        :param completed_files: The completed_files of this ExportResultV2.
        :type completed_files: int
        """

        self._completed_files = completed_files

    @property
    def file_urls(self):
        """Gets the file_urls of this ExportResultV2.


        :return: The file_urls of this ExportResultV2.
        :rtype: List[str]
        """
        return self._file_urls

    @file_urls.setter
    def file_urls(self, file_urls):
        """Sets the file_urls of this ExportResultV2.


        :param file_urls: The file_urls of this ExportResultV2.
        :type file_urls: List[str]
        """

        self._file_urls = file_urls

    @property
    def status(self):
        """Gets the status of this ExportResultV2.


        :return: The status of this ExportResultV2.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ExportResultV2.


        :param status: The status of this ExportResultV2.
        :type status: str
        """

        self._status = status

    @property
    def total_files(self):
        """Gets the total_files of this ExportResultV2.


        :return: The total_files of this ExportResultV2.
        :rtype: int
        """
        return self._total_files

    @total_files.setter
    def total_files(self, total_files):
        """Sets the total_files of this ExportResultV2.


        :param total_files: The total_files of this ExportResultV2.
        :type total_files: int
        """

        self._total_files = total_files
