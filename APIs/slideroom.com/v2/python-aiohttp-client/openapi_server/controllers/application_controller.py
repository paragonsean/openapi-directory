from typing import List, Dict
from aiohttp import web

from openapi_server.models.request_application_export_result_v2 import RequestApplicationExportResultV2
from openapi_server import util


async def application_delete_attributes_v2(request: web.Request, application_id, name) -> web.Response:
    """Deletes a custom attribute for an application.

    

    :param application_id: The ID of the application.
    :type application_id: str
    :param name: The name of the attribute to be deleted.
    :type name: str

    """
    return web.Response(status=200)


async def application_get_attribute_names_v2(request: web.Request, ) -> web.Response:
    """Gets the custom application attributes used by the organization.

    


    """
    return web.Response(status=200)


async def application_get_attributes_v2(request: web.Request, application_id) -> web.Response:
    """Gets the custom attributes for an application.

    

    :param application_id: The ID of the application.
    :type application_id: str

    """
    return web.Response(status=200)


async def application_post_attributes_v2(request: web.Request, application_id, data) -> web.Response:
    """Updates the custom attributes for an application. API Import is available in the Advanced Plan.

    This method only adds or updates attributes. Null values will be updated as nulls, but not deleted.

    :param application_id: The ID of the application.
    :type application_id: str
    :param data: The name/value pairs of the attributes.
    :type data: Dict[str, str]

    """
    return web.Response(status=200)


async def application_request_export_by_application_id_v2(request: web.Request, application_id, format=None, round_type=None, round_name=None, tab_export=None, pdf_include_forms=None, pdf_include_references=None, pdf_include_media=None, pdf_include_applicant_attachments=None, pdf_include_organization_attachments=None, pdf_include_ratings=None, pdf_include_full_page_media=None, pdf_include_highlights=None, pdf_include_comments=None, pdf_include_common_app=None, zip_original_media=None, zip_include_forms=None, zip_include_references=None, zip_include_media=None, zip_include_applicant_attachments=None, zip_include_organization_attachments=None, zip_include_ratings=None, zip_include_comments=None, zip_include_common_app=None, delivery_account=None, delivery_folder=None) -> web.Response:
    """Requests the generation of a single application export file (tabular, pdf, zip).

    Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.

    :param application_id: The id of the application to export
    :type application_id: str
    :param format: 
    :type format: str
    :param round_type: 
    :type round_type: str
    :param round_name: 
    :type round_name: str
    :param tab_export: 
    :type tab_export: str
    :param pdf_include_forms: 
    :type pdf_include_forms: bool
    :param pdf_include_references: 
    :type pdf_include_references: bool
    :param pdf_include_media: 
    :type pdf_include_media: bool
    :param pdf_include_applicant_attachments: 
    :type pdf_include_applicant_attachments: bool
    :param pdf_include_organization_attachments: 
    :type pdf_include_organization_attachments: bool
    :param pdf_include_ratings: 
    :type pdf_include_ratings: bool
    :param pdf_include_full_page_media: 
    :type pdf_include_full_page_media: bool
    :param pdf_include_highlights: 
    :type pdf_include_highlights: bool
    :param pdf_include_comments: 
    :type pdf_include_comments: bool
    :param pdf_include_common_app: 
    :type pdf_include_common_app: bool
    :param zip_original_media: 
    :type zip_original_media: bool
    :param zip_include_forms: 
    :type zip_include_forms: bool
    :param zip_include_references: 
    :type zip_include_references: bool
    :param zip_include_media: 
    :type zip_include_media: bool
    :param zip_include_applicant_attachments: 
    :type zip_include_applicant_attachments: bool
    :param zip_include_organization_attachments: 
    :type zip_include_organization_attachments: bool
    :param zip_include_ratings: 
    :type zip_include_ratings: bool
    :param zip_include_comments: 
    :type zip_include_comments: bool
    :param zip_include_common_app: 
    :type zip_include_common_app: bool
    :param delivery_account: 
    :type delivery_account: str
    :param delivery_folder: 
    :type delivery_folder: str

    """
    return web.Response(status=200)


async def application_request_export_v2(request: web.Request, format=None, round_type=None, round_name=None, tab_export=None, pdf_include_forms=None, pdf_include_references=None, pdf_include_media=None, pdf_include_applicant_attachments=None, pdf_include_organization_attachments=None, pdf_include_ratings=None, pdf_include_full_page_media=None, pdf_include_highlights=None, pdf_include_comments=None, pdf_include_common_app=None, zip_original_media=None, zip_include_forms=None, zip_include_references=None, zip_include_media=None, zip_include_applicant_attachments=None, zip_include_organization_attachments=None, zip_include_ratings=None, zip_include_comments=None, zip_include_common_app=None, delivery_account=None, delivery_folder=None, since=None, pool=None, status=None, search_name=None, email=None) -> web.Response:
    """Requests the generation of application export files (tabular, pdf, zip).

    Exports are generated asynchronously within SlideRoom.  To retrieve the export file generated by this request, use the api/v#/export/{token} endpoint to check the progress/result of the generation process.  PDF and ZIP exports are available in the Advanced Plan.

    :param format: 
    :type format: str
    :param round_type: 
    :type round_type: str
    :param round_name: 
    :type round_name: str
    :param tab_export: 
    :type tab_export: str
    :param pdf_include_forms: 
    :type pdf_include_forms: bool
    :param pdf_include_references: 
    :type pdf_include_references: bool
    :param pdf_include_media: 
    :type pdf_include_media: bool
    :param pdf_include_applicant_attachments: 
    :type pdf_include_applicant_attachments: bool
    :param pdf_include_organization_attachments: 
    :type pdf_include_organization_attachments: bool
    :param pdf_include_ratings: 
    :type pdf_include_ratings: bool
    :param pdf_include_full_page_media: 
    :type pdf_include_full_page_media: bool
    :param pdf_include_highlights: 
    :type pdf_include_highlights: bool
    :param pdf_include_comments: 
    :type pdf_include_comments: bool
    :param pdf_include_common_app: 
    :type pdf_include_common_app: bool
    :param zip_original_media: 
    :type zip_original_media: bool
    :param zip_include_forms: 
    :type zip_include_forms: bool
    :param zip_include_references: 
    :type zip_include_references: bool
    :param zip_include_media: 
    :type zip_include_media: bool
    :param zip_include_applicant_attachments: 
    :type zip_include_applicant_attachments: bool
    :param zip_include_organization_attachments: 
    :type zip_include_organization_attachments: bool
    :param zip_include_ratings: 
    :type zip_include_ratings: bool
    :param zip_include_comments: 
    :type zip_include_comments: bool
    :param zip_include_common_app: 
    :type zip_include_common_app: bool
    :param delivery_account: 
    :type delivery_account: str
    :param delivery_folder: 
    :type delivery_folder: str
    :param since: 
    :type since: int
    :param pool: 
    :type pool: str
    :param status: 
    :type status: str
    :param search_name: 
    :type search_name: str
    :param email: 
    :type email: str

    """
    return web.Response(status=200)
