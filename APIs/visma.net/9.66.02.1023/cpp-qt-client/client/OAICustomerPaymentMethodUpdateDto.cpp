/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerPaymentMethodUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerPaymentMethodUpdateDto::OAICustomerPaymentMethodUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerPaymentMethodUpdateDto::OAICustomerPaymentMethodUpdateDto() {
    this->initializeModel();
}

OAICustomerPaymentMethodUpdateDto::~OAICustomerPaymentMethodUpdateDto() {}

void OAICustomerPaymentMethodUpdateDto::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_cash_account_id_isSet = false;
    m_cash_account_id_isValid = false;

    m_payment_method_details_isSet = false;
    m_payment_method_details_isValid = false;
}

void OAICustomerPaymentMethodUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerPaymentMethodUpdateDto::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_cash_account_id_isValid = ::OpenAPI::fromJsonValue(m_cash_account_id, json[QString("cashAccountId")]);
    m_cash_account_id_isSet = !json[QString("cashAccountId")].isNull() && m_cash_account_id_isValid;

    m_payment_method_details_isValid = ::OpenAPI::fromJsonValue(m_payment_method_details, json[QString("paymentMethodDetails")]);
    m_payment_method_details_isSet = !json[QString("paymentMethodDetails")].isNull() && m_payment_method_details_isValid;
}

QString OAICustomerPaymentMethodUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerPaymentMethodUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_active.isSet()) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_cash_account_id.isSet()) {
        obj.insert(QString("cashAccountId"), ::OpenAPI::toJsonValue(m_cash_account_id));
    }
    if (m_payment_method_details.size() > 0) {
        obj.insert(QString("paymentMethodDetails"), ::OpenAPI::toJsonValue(m_payment_method_details));
    }
    return obj;
}

OAIDtoValueOfNullableOfBoolean OAICustomerPaymentMethodUpdateDto::getActive() const {
    return m_active;
}
void OAICustomerPaymentMethodUpdateDto::setActive(const OAIDtoValueOfNullableOfBoolean &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAICustomerPaymentMethodUpdateDto::is_active_Set() const{
    return m_active_isSet;
}

bool OAICustomerPaymentMethodUpdateDto::is_active_Valid() const{
    return m_active_isValid;
}

OAIDtoValueOfString OAICustomerPaymentMethodUpdateDto::getCashAccountId() const {
    return m_cash_account_id;
}
void OAICustomerPaymentMethodUpdateDto::setCashAccountId(const OAIDtoValueOfString &cash_account_id) {
    m_cash_account_id = cash_account_id;
    m_cash_account_id_isSet = true;
}

bool OAICustomerPaymentMethodUpdateDto::is_cash_account_id_Set() const{
    return m_cash_account_id_isSet;
}

bool OAICustomerPaymentMethodUpdateDto::is_cash_account_id_Valid() const{
    return m_cash_account_id_isValid;
}

QList<OAICustomerPaymentMethodDetailUpdateDto> OAICustomerPaymentMethodUpdateDto::getPaymentMethodDetails() const {
    return m_payment_method_details;
}
void OAICustomerPaymentMethodUpdateDto::setPaymentMethodDetails(const QList<OAICustomerPaymentMethodDetailUpdateDto> &payment_method_details) {
    m_payment_method_details = payment_method_details;
    m_payment_method_details_isSet = true;
}

bool OAICustomerPaymentMethodUpdateDto::is_payment_method_details_Set() const{
    return m_payment_method_details_isSet;
}

bool OAICustomerPaymentMethodUpdateDto::is_payment_method_details_Valid() const{
    return m_payment_method_details_isValid;
}

bool OAICustomerPaymentMethodUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_account_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_method_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerPaymentMethodUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
