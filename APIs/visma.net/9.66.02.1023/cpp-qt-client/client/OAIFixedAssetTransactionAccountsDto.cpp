/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFixedAssetTransactionAccountsDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFixedAssetTransactionAccountsDto::OAIFixedAssetTransactionAccountsDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFixedAssetTransactionAccountsDto::OAIFixedAssetTransactionAccountsDto() {
    this->initializeModel();
}

OAIFixedAssetTransactionAccountsDto::~OAIFixedAssetTransactionAccountsDto() {}

void OAIFixedAssetTransactionAccountsDto::initializeModel() {

    m_credit_account_id_isSet = false;
    m_credit_account_id_isValid = false;

    m_credit_sub_account_id_isSet = false;
    m_credit_sub_account_id_isValid = false;

    m_debit_account_id_isSet = false;
    m_debit_account_id_isValid = false;

    m_debit_sub_account_id_isSet = false;
    m_debit_sub_account_id_isValid = false;
}

void OAIFixedAssetTransactionAccountsDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFixedAssetTransactionAccountsDto::fromJsonObject(QJsonObject json) {

    m_credit_account_id_isValid = ::OpenAPI::fromJsonValue(m_credit_account_id, json[QString("creditAccountID")]);
    m_credit_account_id_isSet = !json[QString("creditAccountID")].isNull() && m_credit_account_id_isValid;

    m_credit_sub_account_id_isValid = ::OpenAPI::fromJsonValue(m_credit_sub_account_id, json[QString("creditSubAccountID")]);
    m_credit_sub_account_id_isSet = !json[QString("creditSubAccountID")].isNull() && m_credit_sub_account_id_isValid;

    m_debit_account_id_isValid = ::OpenAPI::fromJsonValue(m_debit_account_id, json[QString("debitAccountID")]);
    m_debit_account_id_isSet = !json[QString("debitAccountID")].isNull() && m_debit_account_id_isValid;

    m_debit_sub_account_id_isValid = ::OpenAPI::fromJsonValue(m_debit_sub_account_id, json[QString("debitSubAccountID")]);
    m_debit_sub_account_id_isSet = !json[QString("debitSubAccountID")].isNull() && m_debit_sub_account_id_isValid;
}

QString OAIFixedAssetTransactionAccountsDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFixedAssetTransactionAccountsDto::asJsonObject() const {
    QJsonObject obj;
    if (m_credit_account_id_isSet) {
        obj.insert(QString("creditAccountID"), ::OpenAPI::toJsonValue(m_credit_account_id));
    }
    if (m_credit_sub_account_id_isSet) {
        obj.insert(QString("creditSubAccountID"), ::OpenAPI::toJsonValue(m_credit_sub_account_id));
    }
    if (m_debit_account_id_isSet) {
        obj.insert(QString("debitAccountID"), ::OpenAPI::toJsonValue(m_debit_account_id));
    }
    if (m_debit_sub_account_id_isSet) {
        obj.insert(QString("debitSubAccountID"), ::OpenAPI::toJsonValue(m_debit_sub_account_id));
    }
    return obj;
}

QString OAIFixedAssetTransactionAccountsDto::getCreditAccountId() const {
    return m_credit_account_id;
}
void OAIFixedAssetTransactionAccountsDto::setCreditAccountId(const QString &credit_account_id) {
    m_credit_account_id = credit_account_id;
    m_credit_account_id_isSet = true;
}

bool OAIFixedAssetTransactionAccountsDto::is_credit_account_id_Set() const{
    return m_credit_account_id_isSet;
}

bool OAIFixedAssetTransactionAccountsDto::is_credit_account_id_Valid() const{
    return m_credit_account_id_isValid;
}

QString OAIFixedAssetTransactionAccountsDto::getCreditSubAccountId() const {
    return m_credit_sub_account_id;
}
void OAIFixedAssetTransactionAccountsDto::setCreditSubAccountId(const QString &credit_sub_account_id) {
    m_credit_sub_account_id = credit_sub_account_id;
    m_credit_sub_account_id_isSet = true;
}

bool OAIFixedAssetTransactionAccountsDto::is_credit_sub_account_id_Set() const{
    return m_credit_sub_account_id_isSet;
}

bool OAIFixedAssetTransactionAccountsDto::is_credit_sub_account_id_Valid() const{
    return m_credit_sub_account_id_isValid;
}

QString OAIFixedAssetTransactionAccountsDto::getDebitAccountId() const {
    return m_debit_account_id;
}
void OAIFixedAssetTransactionAccountsDto::setDebitAccountId(const QString &debit_account_id) {
    m_debit_account_id = debit_account_id;
    m_debit_account_id_isSet = true;
}

bool OAIFixedAssetTransactionAccountsDto::is_debit_account_id_Set() const{
    return m_debit_account_id_isSet;
}

bool OAIFixedAssetTransactionAccountsDto::is_debit_account_id_Valid() const{
    return m_debit_account_id_isValid;
}

QString OAIFixedAssetTransactionAccountsDto::getDebitSubAccountId() const {
    return m_debit_sub_account_id;
}
void OAIFixedAssetTransactionAccountsDto::setDebitSubAccountId(const QString &debit_sub_account_id) {
    m_debit_sub_account_id = debit_sub_account_id;
    m_debit_sub_account_id_isSet = true;
}

bool OAIFixedAssetTransactionAccountsDto::is_debit_sub_account_id_Set() const{
    return m_debit_sub_account_id_isSet;
}

bool OAIFixedAssetTransactionAccountsDto::is_debit_sub_account_id_Valid() const{
    return m_debit_sub_account_id_isValid;
}

bool OAIFixedAssetTransactionAccountsDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credit_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_sub_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debit_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_debit_sub_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFixedAssetTransactionAccountsDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
