/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesInvoiceContactUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesInvoiceContactUpdateDto::OAISalesInvoiceContactUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesInvoiceContactUpdateDto::OAISalesInvoiceContactUpdateDto() {
    this->initializeModel();
}

OAISalesInvoiceContactUpdateDto::~OAISalesInvoiceContactUpdateDto() {}

void OAISalesInvoiceContactUpdateDto::initializeModel() {

    m_attention_isSet = false;
    m_attention_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_override_contact_isSet = false;
    m_override_contact_isValid = false;

    m_phone1_isSet = false;
    m_phone1_isValid = false;
}

void OAISalesInvoiceContactUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesInvoiceContactUpdateDto::fromJsonObject(QJsonObject json) {

    m_attention_isValid = ::OpenAPI::fromJsonValue(m_attention, json[QString("attention")]);
    m_attention_isSet = !json[QString("attention")].isNull() && m_attention_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_override_contact_isValid = ::OpenAPI::fromJsonValue(m_override_contact, json[QString("overrideContact")]);
    m_override_contact_isSet = !json[QString("overrideContact")].isNull() && m_override_contact_isValid;

    m_phone1_isValid = ::OpenAPI::fromJsonValue(m_phone1, json[QString("phone1")]);
    m_phone1_isSet = !json[QString("phone1")].isNull() && m_phone1_isValid;
}

QString OAISalesInvoiceContactUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesInvoiceContactUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_attention.isSet()) {
        obj.insert(QString("attention"), ::OpenAPI::toJsonValue(m_attention));
    }
    if (m_email.isSet()) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_override_contact.isSet()) {
        obj.insert(QString("overrideContact"), ::OpenAPI::toJsonValue(m_override_contact));
    }
    if (m_phone1.isSet()) {
        obj.insert(QString("phone1"), ::OpenAPI::toJsonValue(m_phone1));
    }
    return obj;
}

OAIDtoValueOfString OAISalesInvoiceContactUpdateDto::getAttention() const {
    return m_attention;
}
void OAISalesInvoiceContactUpdateDto::setAttention(const OAIDtoValueOfString &attention) {
    m_attention = attention;
    m_attention_isSet = true;
}

bool OAISalesInvoiceContactUpdateDto::is_attention_Set() const{
    return m_attention_isSet;
}

bool OAISalesInvoiceContactUpdateDto::is_attention_Valid() const{
    return m_attention_isValid;
}

OAIDtoValueOfString OAISalesInvoiceContactUpdateDto::getEmail() const {
    return m_email;
}
void OAISalesInvoiceContactUpdateDto::setEmail(const OAIDtoValueOfString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISalesInvoiceContactUpdateDto::is_email_Set() const{
    return m_email_isSet;
}

bool OAISalesInvoiceContactUpdateDto::is_email_Valid() const{
    return m_email_isValid;
}

OAIDtoValueOfString OAISalesInvoiceContactUpdateDto::getName() const {
    return m_name;
}
void OAISalesInvoiceContactUpdateDto::setName(const OAIDtoValueOfString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISalesInvoiceContactUpdateDto::is_name_Set() const{
    return m_name_isSet;
}

bool OAISalesInvoiceContactUpdateDto::is_name_Valid() const{
    return m_name_isValid;
}

OAIDtoValueOfNullableOfBoolean OAISalesInvoiceContactUpdateDto::getOverrideContact() const {
    return m_override_contact;
}
void OAISalesInvoiceContactUpdateDto::setOverrideContact(const OAIDtoValueOfNullableOfBoolean &override_contact) {
    m_override_contact = override_contact;
    m_override_contact_isSet = true;
}

bool OAISalesInvoiceContactUpdateDto::is_override_contact_Set() const{
    return m_override_contact_isSet;
}

bool OAISalesInvoiceContactUpdateDto::is_override_contact_Valid() const{
    return m_override_contact_isValid;
}

OAIDtoValueOfString OAISalesInvoiceContactUpdateDto::getPhone1() const {
    return m_phone1;
}
void OAISalesInvoiceContactUpdateDto::setPhone1(const OAIDtoValueOfString &phone1) {
    m_phone1 = phone1;
    m_phone1_isSet = true;
}

bool OAISalesInvoiceContactUpdateDto::is_phone1_Set() const{
    return m_phone1_isSet;
}

bool OAISalesInvoiceContactUpdateDto::is_phone1_Valid() const{
    return m_phone1_isValid;
}

bool OAISalesInvoiceContactUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attention.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone1.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesInvoiceContactUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
