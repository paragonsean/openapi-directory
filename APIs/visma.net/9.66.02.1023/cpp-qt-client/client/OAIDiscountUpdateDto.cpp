/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscountUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscountUpdateDto::OAIDiscountUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscountUpdateDto::OAIDiscountUpdateDto() {
    this->initializeModel();
}

OAIDiscountUpdateDto::~OAIDiscountUpdateDto() {}

void OAIDiscountUpdateDto::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_break_by_isSet = false;
    m_break_by_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_discount_breakpoints_isSet = false;
    m_discount_breakpoints_isValid = false;

    m_discount_by_isSet = false;
    m_discount_by_isValid = false;

    m_discount_code_isSet = false;
    m_discount_code_isValid = false;

    m_effective_date_isSet = false;
    m_effective_date_isValid = false;

    m_expiration_date_isSet = false;
    m_expiration_date_isValid = false;

    m_promotional_isSet = false;
    m_promotional_isValid = false;

    m_prorate_discount_isSet = false;
    m_prorate_discount_isValid = false;

    m_series_isSet = false;
    m_series_isValid = false;
}

void OAIDiscountUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscountUpdateDto::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_break_by_isValid = ::OpenAPI::fromJsonValue(m_break_by, json[QString("breakBy")]);
    m_break_by_isSet = !json[QString("breakBy")].isNull() && m_break_by_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_discount_breakpoints_isValid = ::OpenAPI::fromJsonValue(m_discount_breakpoints, json[QString("discountBreakpoints")]);
    m_discount_breakpoints_isSet = !json[QString("discountBreakpoints")].isNull() && m_discount_breakpoints_isValid;

    m_discount_by_isValid = ::OpenAPI::fromJsonValue(m_discount_by, json[QString("discountBy")]);
    m_discount_by_isSet = !json[QString("discountBy")].isNull() && m_discount_by_isValid;

    m_discount_code_isValid = ::OpenAPI::fromJsonValue(m_discount_code, json[QString("discountCode")]);
    m_discount_code_isSet = !json[QString("discountCode")].isNull() && m_discount_code_isValid;

    m_effective_date_isValid = ::OpenAPI::fromJsonValue(m_effective_date, json[QString("effectiveDate")]);
    m_effective_date_isSet = !json[QString("effectiveDate")].isNull() && m_effective_date_isValid;

    m_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_date, json[QString("expirationDate")]);
    m_expiration_date_isSet = !json[QString("expirationDate")].isNull() && m_expiration_date_isValid;

    m_promotional_isValid = ::OpenAPI::fromJsonValue(m_promotional, json[QString("promotional")]);
    m_promotional_isSet = !json[QString("promotional")].isNull() && m_promotional_isValid;

    m_prorate_discount_isValid = ::OpenAPI::fromJsonValue(m_prorate_discount, json[QString("prorateDiscount")]);
    m_prorate_discount_isSet = !json[QString("prorateDiscount")].isNull() && m_prorate_discount_isValid;

    m_series_isValid = ::OpenAPI::fromJsonValue(m_series, json[QString("series")]);
    m_series_isSet = !json[QString("series")].isNull() && m_series_isValid;
}

QString OAIDiscountUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscountUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_active.isSet()) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_break_by.isSet()) {
        obj.insert(QString("breakBy"), ::OpenAPI::toJsonValue(m_break_by));
    }
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_discount_breakpoints.size() > 0) {
        obj.insert(QString("discountBreakpoints"), ::OpenAPI::toJsonValue(m_discount_breakpoints));
    }
    if (m_discount_by.isSet()) {
        obj.insert(QString("discountBy"), ::OpenAPI::toJsonValue(m_discount_by));
    }
    if (m_discount_code.isSet()) {
        obj.insert(QString("discountCode"), ::OpenAPI::toJsonValue(m_discount_code));
    }
    if (m_effective_date.isSet()) {
        obj.insert(QString("effectiveDate"), ::OpenAPI::toJsonValue(m_effective_date));
    }
    if (m_expiration_date.isSet()) {
        obj.insert(QString("expirationDate"), ::OpenAPI::toJsonValue(m_expiration_date));
    }
    if (m_promotional.isSet()) {
        obj.insert(QString("promotional"), ::OpenAPI::toJsonValue(m_promotional));
    }
    if (m_prorate_discount.isSet()) {
        obj.insert(QString("prorateDiscount"), ::OpenAPI::toJsonValue(m_prorate_discount));
    }
    if (m_series.isSet()) {
        obj.insert(QString("series"), ::OpenAPI::toJsonValue(m_series));
    }
    return obj;
}

OAIDtoValueOfNullableOfBoolean OAIDiscountUpdateDto::getActive() const {
    return m_active;
}
void OAIDiscountUpdateDto::setActive(const OAIDtoValueOfNullableOfBoolean &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIDiscountUpdateDto::is_active_Set() const{
    return m_active_isSet;
}

bool OAIDiscountUpdateDto::is_active_Valid() const{
    return m_active_isValid;
}

OAIDtoValueOfString OAIDiscountUpdateDto::getBreakBy() const {
    return m_break_by;
}
void OAIDiscountUpdateDto::setBreakBy(const OAIDtoValueOfString &break_by) {
    m_break_by = break_by;
    m_break_by_isSet = true;
}

bool OAIDiscountUpdateDto::is_break_by_Set() const{
    return m_break_by_isSet;
}

bool OAIDiscountUpdateDto::is_break_by_Valid() const{
    return m_break_by_isValid;
}

OAIDtoValueOfString OAIDiscountUpdateDto::getDescription() const {
    return m_description;
}
void OAIDiscountUpdateDto::setDescription(const OAIDtoValueOfString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDiscountUpdateDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDiscountUpdateDto::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIDiscountBreakpointUpdateDto> OAIDiscountUpdateDto::getDiscountBreakpoints() const {
    return m_discount_breakpoints;
}
void OAIDiscountUpdateDto::setDiscountBreakpoints(const QList<OAIDiscountBreakpointUpdateDto> &discount_breakpoints) {
    m_discount_breakpoints = discount_breakpoints;
    m_discount_breakpoints_isSet = true;
}

bool OAIDiscountUpdateDto::is_discount_breakpoints_Set() const{
    return m_discount_breakpoints_isSet;
}

bool OAIDiscountUpdateDto::is_discount_breakpoints_Valid() const{
    return m_discount_breakpoints_isValid;
}

OAIDtoValueOfString OAIDiscountUpdateDto::getDiscountBy() const {
    return m_discount_by;
}
void OAIDiscountUpdateDto::setDiscountBy(const OAIDtoValueOfString &discount_by) {
    m_discount_by = discount_by;
    m_discount_by_isSet = true;
}

bool OAIDiscountUpdateDto::is_discount_by_Set() const{
    return m_discount_by_isSet;
}

bool OAIDiscountUpdateDto::is_discount_by_Valid() const{
    return m_discount_by_isValid;
}

OAIDtoValueOfString OAIDiscountUpdateDto::getDiscountCode() const {
    return m_discount_code;
}
void OAIDiscountUpdateDto::setDiscountCode(const OAIDtoValueOfString &discount_code) {
    m_discount_code = discount_code;
    m_discount_code_isSet = true;
}

bool OAIDiscountUpdateDto::is_discount_code_Set() const{
    return m_discount_code_isSet;
}

bool OAIDiscountUpdateDto::is_discount_code_Valid() const{
    return m_discount_code_isValid;
}

OAIDtoValueOfNullableOfDateTime OAIDiscountUpdateDto::getEffectiveDate() const {
    return m_effective_date;
}
void OAIDiscountUpdateDto::setEffectiveDate(const OAIDtoValueOfNullableOfDateTime &effective_date) {
    m_effective_date = effective_date;
    m_effective_date_isSet = true;
}

bool OAIDiscountUpdateDto::is_effective_date_Set() const{
    return m_effective_date_isSet;
}

bool OAIDiscountUpdateDto::is_effective_date_Valid() const{
    return m_effective_date_isValid;
}

OAIDtoValueOfNullableOfDateTime OAIDiscountUpdateDto::getExpirationDate() const {
    return m_expiration_date;
}
void OAIDiscountUpdateDto::setExpirationDate(const OAIDtoValueOfNullableOfDateTime &expiration_date) {
    m_expiration_date = expiration_date;
    m_expiration_date_isSet = true;
}

bool OAIDiscountUpdateDto::is_expiration_date_Set() const{
    return m_expiration_date_isSet;
}

bool OAIDiscountUpdateDto::is_expiration_date_Valid() const{
    return m_expiration_date_isValid;
}

OAIDtoValueOfBoolean OAIDiscountUpdateDto::getPromotional() const {
    return m_promotional;
}
void OAIDiscountUpdateDto::setPromotional(const OAIDtoValueOfBoolean &promotional) {
    m_promotional = promotional;
    m_promotional_isSet = true;
}

bool OAIDiscountUpdateDto::is_promotional_Set() const{
    return m_promotional_isSet;
}

bool OAIDiscountUpdateDto::is_promotional_Valid() const{
    return m_promotional_isValid;
}

OAIDtoValueOfBoolean OAIDiscountUpdateDto::getProrateDiscount() const {
    return m_prorate_discount;
}
void OAIDiscountUpdateDto::setProrateDiscount(const OAIDtoValueOfBoolean &prorate_discount) {
    m_prorate_discount = prorate_discount;
    m_prorate_discount_isSet = true;
}

bool OAIDiscountUpdateDto::is_prorate_discount_Set() const{
    return m_prorate_discount_isSet;
}

bool OAIDiscountUpdateDto::is_prorate_discount_Valid() const{
    return m_prorate_discount_isValid;
}

OAIDtoValueOfString OAIDiscountUpdateDto::getSeries() const {
    return m_series;
}
void OAIDiscountUpdateDto::setSeries(const OAIDtoValueOfString &series) {
    m_series = series;
    m_series_isSet = true;
}

bool OAIDiscountUpdateDto::is_series_Set() const{
    return m_series_isSet;
}

bool OAIDiscountUpdateDto::is_series_Valid() const{
    return m_series_isValid;
}

bool OAIDiscountUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_break_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_breakpoints.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_effective_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_date.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_promotional.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_prorate_discount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_series.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscountUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
