/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesNonTaxableAccountInInventoryAccountInformationDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesNonTaxableAccountInInventoryAccountInformationDto::OAISalesNonTaxableAccountInInventoryAccountInformationDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesNonTaxableAccountInInventoryAccountInformationDto::OAISalesNonTaxableAccountInInventoryAccountInformationDto() {
    this->initializeModel();
}

OAISalesNonTaxableAccountInInventoryAccountInformationDto::~OAISalesNonTaxableAccountInInventoryAccountInformationDto() {}

void OAISalesNonTaxableAccountInInventoryAccountInformationDto::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAISalesNonTaxableAccountInInventoryAccountInformationDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesNonTaxableAccountInInventoryAccountInformationDto::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAISalesNonTaxableAccountInInventoryAccountInformationDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesNonTaxableAccountInInventoryAccountInformationDto::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAISalesNonTaxableAccountInInventoryAccountInformationDto::getDescription() const {
    return m_description;
}
void OAISalesNonTaxableAccountInInventoryAccountInformationDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::is_description_Valid() const{
    return m_description_isValid;
}

QString OAISalesNonTaxableAccountInInventoryAccountInformationDto::getNumber() const {
    return m_number;
}
void OAISalesNonTaxableAccountInInventoryAccountInformationDto::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::is_number_Set() const{
    return m_number_isSet;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::is_number_Valid() const{
    return m_number_isValid;
}

QString OAISalesNonTaxableAccountInInventoryAccountInformationDto::getType() const {
    return m_type;
}
void OAISalesNonTaxableAccountInInventoryAccountInformationDto::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::is_type_Set() const{
    return m_type_isSet;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::is_type_Valid() const{
    return m_type_isValid;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesNonTaxableAccountInInventoryAccountInformationDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
