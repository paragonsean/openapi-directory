/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStocktakeLineV2Dto.h
 *
 * 
 */

#ifndef OAIStocktakeLineV2Dto_H
#define OAIStocktakeLineV2Dto_H

#include <QJsonObject>

#include "OAIInventoryInStocktakeLineV2Dto.h"
#include "OAILocationInStocktakeLineV2Dto.h"
#include "OAIWarehouseInStocktakeLineV2Dto.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInventoryInStocktakeLineV2Dto;
class OAILocationInStocktakeLineV2Dto;
class OAIWarehouseInStocktakeLineV2Dto;

class OAIStocktakeLineV2Dto : public OAIObject {
public:
    OAIStocktakeLineV2Dto();
    OAIStocktakeLineV2Dto(QString json);
    ~OAIStocktakeLineV2Dto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseUnit() const;
    void setBaseUnit(const QString &base_unit);
    bool is_base_unit_Set() const;
    bool is_base_unit_Valid() const;

    double getBookQuantity() const;
    void setBookQuantity(const double &book_quantity);
    bool is_book_quantity_Set() const;
    bool is_book_quantity_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    double getExtVarianceCost() const;
    void setExtVarianceCost(const double &ext_variance_cost);
    bool is_ext_variance_cost_Set() const;
    bool is_ext_variance_cost_Valid() const;

    OAIInventoryInStocktakeLineV2Dto getInventory() const;
    void setInventory(const OAIInventoryInStocktakeLineV2Dto &inventory);
    bool is_inventory_Set() const;
    bool is_inventory_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    qint32 getLineNbr() const;
    void setLineNbr(const qint32 &line_nbr);
    bool is_line_nbr_Set() const;
    bool is_line_nbr_Valid() const;

    OAILocationInStocktakeLineV2Dto getLocation() const;
    void setLocation(const OAILocationInStocktakeLineV2Dto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getLotSerialNbr() const;
    void setLotSerialNbr(const QString &lot_serial_nbr);
    bool is_lot_serial_nbr_Set() const;
    bool is_lot_serial_nbr_Valid() const;

    double getPhysicalQuantity() const;
    void setPhysicalQuantity(const double &physical_quantity);
    bool is_physical_quantity_Set() const;
    bool is_physical_quantity_Valid() const;

    QString getReasonCode() const;
    void setReasonCode(const QString &reason_code);
    bool is_reason_code_Set() const;
    bool is_reason_code_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTagNbr() const;
    void setTagNbr(const qint32 &tag_nbr);
    bool is_tag_nbr_Set() const;
    bool is_tag_nbr_Valid() const;

    double getUnitCost() const;
    void setUnitCost(const double &unit_cost);
    bool is_unit_cost_Set() const;
    bool is_unit_cost_Valid() const;

    double getVarianceQuantity() const;
    void setVarianceQuantity(const double &variance_quantity);
    bool is_variance_quantity_Set() const;
    bool is_variance_quantity_Valid() const;

    OAIWarehouseInStocktakeLineV2Dto getWarehouse() const;
    void setWarehouse(const OAIWarehouseInStocktakeLineV2Dto &warehouse);
    bool is_warehouse_Set() const;
    bool is_warehouse_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_unit;
    bool m_base_unit_isSet;
    bool m_base_unit_isValid;

    double m_book_quantity;
    bool m_book_quantity_isSet;
    bool m_book_quantity_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    double m_ext_variance_cost;
    bool m_ext_variance_cost_isSet;
    bool m_ext_variance_cost_isValid;

    OAIInventoryInStocktakeLineV2Dto m_inventory;
    bool m_inventory_isSet;
    bool m_inventory_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    qint32 m_line_nbr;
    bool m_line_nbr_isSet;
    bool m_line_nbr_isValid;

    OAILocationInStocktakeLineV2Dto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_lot_serial_nbr;
    bool m_lot_serial_nbr_isSet;
    bool m_lot_serial_nbr_isValid;

    double m_physical_quantity;
    bool m_physical_quantity_isSet;
    bool m_physical_quantity_isValid;

    QString m_reason_code;
    bool m_reason_code_isSet;
    bool m_reason_code_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_tag_nbr;
    bool m_tag_nbr_isSet;
    bool m_tag_nbr_isValid;

    double m_unit_cost;
    bool m_unit_cost_isSet;
    bool m_unit_cost_isValid;

    double m_variance_quantity;
    bool m_variance_quantity_isSet;
    bool m_variance_quantity_isValid;

    OAIWarehouseInStocktakeLineV2Dto m_warehouse;
    bool m_warehouse_isSet;
    bool m_warehouse_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStocktakeLineV2Dto)

#endif // OAIStocktakeLineV2Dto_H
