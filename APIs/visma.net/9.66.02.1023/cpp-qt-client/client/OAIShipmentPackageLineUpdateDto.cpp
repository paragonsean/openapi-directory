/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipmentPackageLineUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipmentPackageLineUpdateDto::OAIShipmentPackageLineUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipmentPackageLineUpdateDto::OAIShipmentPackageLineUpdateDto() {
    this->initializeModel();
}

OAIShipmentPackageLineUpdateDto::~OAIShipmentPackageLineUpdateDto() {}

void OAIShipmentPackageLineUpdateDto::initializeModel() {

    m_box_id_isSet = false;
    m_box_id_isValid = false;

    m_cod_amount_isSet = false;
    m_cod_amount_isValid = false;

    m_confirmed_isSet = false;
    m_confirmed_isValid = false;

    m_custom_ref_nbr1_isSet = false;
    m_custom_ref_nbr1_isValid = false;

    m_custom_ref_nbr2_isSet = false;
    m_custom_ref_nbr2_isValid = false;

    m_declared_value_isSet = false;
    m_declared_value_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_line_number_isSet = false;
    m_line_number_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_tracking_number_isSet = false;
    m_tracking_number_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAIShipmentPackageLineUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipmentPackageLineUpdateDto::fromJsonObject(QJsonObject json) {

    m_box_id_isValid = ::OpenAPI::fromJsonValue(m_box_id, json[QString("boxId")]);
    m_box_id_isSet = !json[QString("boxId")].isNull() && m_box_id_isValid;

    m_cod_amount_isValid = ::OpenAPI::fromJsonValue(m_cod_amount, json[QString("codAmount")]);
    m_cod_amount_isSet = !json[QString("codAmount")].isNull() && m_cod_amount_isValid;

    m_confirmed_isValid = ::OpenAPI::fromJsonValue(m_confirmed, json[QString("confirmed")]);
    m_confirmed_isSet = !json[QString("confirmed")].isNull() && m_confirmed_isValid;

    m_custom_ref_nbr1_isValid = ::OpenAPI::fromJsonValue(m_custom_ref_nbr1, json[QString("customRefNbr1")]);
    m_custom_ref_nbr1_isSet = !json[QString("customRefNbr1")].isNull() && m_custom_ref_nbr1_isValid;

    m_custom_ref_nbr2_isValid = ::OpenAPI::fromJsonValue(m_custom_ref_nbr2, json[QString("customRefNbr2")]);
    m_custom_ref_nbr2_isSet = !json[QString("customRefNbr2")].isNull() && m_custom_ref_nbr2_isValid;

    m_declared_value_isValid = ::OpenAPI::fromJsonValue(m_declared_value, json[QString("declaredValue")]);
    m_declared_value_isSet = !json[QString("declaredValue")].isNull() && m_declared_value_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_line_number_isValid = ::OpenAPI::fromJsonValue(m_line_number, json[QString("lineNumber")]);
    m_line_number_isSet = !json[QString("lineNumber")].isNull() && m_line_number_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_tracking_number_isValid = ::OpenAPI::fromJsonValue(m_tracking_number, json[QString("trackingNumber")]);
    m_tracking_number_isSet = !json[QString("trackingNumber")].isNull() && m_tracking_number_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAIShipmentPackageLineUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipmentPackageLineUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_box_id.isSet()) {
        obj.insert(QString("boxId"), ::OpenAPI::toJsonValue(m_box_id));
    }
    if (m_cod_amount.isSet()) {
        obj.insert(QString("codAmount"), ::OpenAPI::toJsonValue(m_cod_amount));
    }
    if (m_confirmed.isSet()) {
        obj.insert(QString("confirmed"), ::OpenAPI::toJsonValue(m_confirmed));
    }
    if (m_custom_ref_nbr1.isSet()) {
        obj.insert(QString("customRefNbr1"), ::OpenAPI::toJsonValue(m_custom_ref_nbr1));
    }
    if (m_custom_ref_nbr2.isSet()) {
        obj.insert(QString("customRefNbr2"), ::OpenAPI::toJsonValue(m_custom_ref_nbr2));
    }
    if (m_declared_value.isSet()) {
        obj.insert(QString("declaredValue"), ::OpenAPI::toJsonValue(m_declared_value));
    }
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_line_number.isSet()) {
        obj.insert(QString("lineNumber"), ::OpenAPI::toJsonValue(m_line_number));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_tracking_number.isSet()) {
        obj.insert(QString("trackingNumber"), ::OpenAPI::toJsonValue(m_tracking_number));
    }
    if (m_weight.isSet()) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

OAIDtoValueOfString OAIShipmentPackageLineUpdateDto::getBoxId() const {
    return m_box_id;
}
void OAIShipmentPackageLineUpdateDto::setBoxId(const OAIDtoValueOfString &box_id) {
    m_box_id = box_id;
    m_box_id_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_box_id_Set() const{
    return m_box_id_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_box_id_Valid() const{
    return m_box_id_isValid;
}

OAIDtoValueOfNullableOfDecimal OAIShipmentPackageLineUpdateDto::getCodAmount() const {
    return m_cod_amount;
}
void OAIShipmentPackageLineUpdateDto::setCodAmount(const OAIDtoValueOfNullableOfDecimal &cod_amount) {
    m_cod_amount = cod_amount;
    m_cod_amount_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_cod_amount_Set() const{
    return m_cod_amount_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_cod_amount_Valid() const{
    return m_cod_amount_isValid;
}

OAIDtoValueOfNullableOfBoolean OAIShipmentPackageLineUpdateDto::getConfirmed() const {
    return m_confirmed;
}
void OAIShipmentPackageLineUpdateDto::setConfirmed(const OAIDtoValueOfNullableOfBoolean &confirmed) {
    m_confirmed = confirmed;
    m_confirmed_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_confirmed_Set() const{
    return m_confirmed_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_confirmed_Valid() const{
    return m_confirmed_isValid;
}

OAIDtoValueOfString OAIShipmentPackageLineUpdateDto::getCustomRefNbr1() const {
    return m_custom_ref_nbr1;
}
void OAIShipmentPackageLineUpdateDto::setCustomRefNbr1(const OAIDtoValueOfString &custom_ref_nbr1) {
    m_custom_ref_nbr1 = custom_ref_nbr1;
    m_custom_ref_nbr1_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_custom_ref_nbr1_Set() const{
    return m_custom_ref_nbr1_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_custom_ref_nbr1_Valid() const{
    return m_custom_ref_nbr1_isValid;
}

OAIDtoValueOfString OAIShipmentPackageLineUpdateDto::getCustomRefNbr2() const {
    return m_custom_ref_nbr2;
}
void OAIShipmentPackageLineUpdateDto::setCustomRefNbr2(const OAIDtoValueOfString &custom_ref_nbr2) {
    m_custom_ref_nbr2 = custom_ref_nbr2;
    m_custom_ref_nbr2_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_custom_ref_nbr2_Set() const{
    return m_custom_ref_nbr2_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_custom_ref_nbr2_Valid() const{
    return m_custom_ref_nbr2_isValid;
}

OAIDtoValueOfNullableOfDecimal OAIShipmentPackageLineUpdateDto::getDeclaredValue() const {
    return m_declared_value;
}
void OAIShipmentPackageLineUpdateDto::setDeclaredValue(const OAIDtoValueOfNullableOfDecimal &declared_value) {
    m_declared_value = declared_value;
    m_declared_value_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_declared_value_Set() const{
    return m_declared_value_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_declared_value_Valid() const{
    return m_declared_value_isValid;
}

OAIDtoValueOfString OAIShipmentPackageLineUpdateDto::getDescription() const {
    return m_description;
}
void OAIShipmentPackageLineUpdateDto::setDescription(const OAIDtoValueOfString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_description_Valid() const{
    return m_description_isValid;
}

OAIDtoValueOfInt32 OAIShipmentPackageLineUpdateDto::getLineNumber() const {
    return m_line_number;
}
void OAIShipmentPackageLineUpdateDto::setLineNumber(const OAIDtoValueOfInt32 &line_number) {
    m_line_number = line_number;
    m_line_number_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_line_number_Set() const{
    return m_line_number_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_line_number_Valid() const{
    return m_line_number_isValid;
}

QString OAIShipmentPackageLineUpdateDto::getOperation() const {
    return m_operation;
}
void OAIShipmentPackageLineUpdateDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_operation_Valid() const{
    return m_operation_isValid;
}

OAIDtoValueOfString OAIShipmentPackageLineUpdateDto::getTrackingNumber() const {
    return m_tracking_number;
}
void OAIShipmentPackageLineUpdateDto::setTrackingNumber(const OAIDtoValueOfString &tracking_number) {
    m_tracking_number = tracking_number;
    m_tracking_number_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_tracking_number_Set() const{
    return m_tracking_number_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_tracking_number_Valid() const{
    return m_tracking_number_isValid;
}

OAIDtoValueOfNullableOfDecimal OAIShipmentPackageLineUpdateDto::getWeight() const {
    return m_weight;
}
void OAIShipmentPackageLineUpdateDto::setWeight(const OAIDtoValueOfNullableOfDecimal &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAIShipmentPackageLineUpdateDto::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAIShipmentPackageLineUpdateDto::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAIShipmentPackageLineUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_box_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_cod_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmed.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_ref_nbr1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_ref_nbr2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_declared_value.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipmentPackageLineUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
