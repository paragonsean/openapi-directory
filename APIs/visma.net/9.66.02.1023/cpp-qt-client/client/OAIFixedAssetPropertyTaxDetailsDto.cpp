/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFixedAssetPropertyTaxDetailsDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFixedAssetPropertyTaxDetailsDto::OAIFixedAssetPropertyTaxDetailsDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFixedAssetPropertyTaxDetailsDto::OAIFixedAssetPropertyTaxDetailsDto() {
    this->initializeModel();
}

OAIFixedAssetPropertyTaxDetailsDto::~OAIFixedAssetPropertyTaxDetailsDto() {}

void OAIFixedAssetPropertyTaxDetailsDto::initializeModel() {

    m_date_isSet = false;
    m_date_isValid = false;

    m_min_percent_isSet = false;
    m_min_percent_isValid = false;

    m_property_value_isSet = false;
    m_property_value_isValid = false;
}

void OAIFixedAssetPropertyTaxDetailsDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFixedAssetPropertyTaxDetailsDto::fromJsonObject(QJsonObject json) {

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_min_percent_isValid = ::OpenAPI::fromJsonValue(m_min_percent, json[QString("minPercent")]);
    m_min_percent_isSet = !json[QString("minPercent")].isNull() && m_min_percent_isValid;

    m_property_value_isValid = ::OpenAPI::fromJsonValue(m_property_value, json[QString("propertyValue")]);
    m_property_value_isSet = !json[QString("propertyValue")].isNull() && m_property_value_isValid;
}

QString OAIFixedAssetPropertyTaxDetailsDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFixedAssetPropertyTaxDetailsDto::asJsonObject() const {
    QJsonObject obj;
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_min_percent_isSet) {
        obj.insert(QString("minPercent"), ::OpenAPI::toJsonValue(m_min_percent));
    }
    if (m_property_value_isSet) {
        obj.insert(QString("propertyValue"), ::OpenAPI::toJsonValue(m_property_value));
    }
    return obj;
}

QDateTime OAIFixedAssetPropertyTaxDetailsDto::getDate() const {
    return m_date;
}
void OAIFixedAssetPropertyTaxDetailsDto::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIFixedAssetPropertyTaxDetailsDto::is_date_Set() const{
    return m_date_isSet;
}

bool OAIFixedAssetPropertyTaxDetailsDto::is_date_Valid() const{
    return m_date_isValid;
}

double OAIFixedAssetPropertyTaxDetailsDto::getMinPercent() const {
    return m_min_percent;
}
void OAIFixedAssetPropertyTaxDetailsDto::setMinPercent(const double &min_percent) {
    m_min_percent = min_percent;
    m_min_percent_isSet = true;
}

bool OAIFixedAssetPropertyTaxDetailsDto::is_min_percent_Set() const{
    return m_min_percent_isSet;
}

bool OAIFixedAssetPropertyTaxDetailsDto::is_min_percent_Valid() const{
    return m_min_percent_isValid;
}

double OAIFixedAssetPropertyTaxDetailsDto::getPropertyValue() const {
    return m_property_value;
}
void OAIFixedAssetPropertyTaxDetailsDto::setPropertyValue(const double &property_value) {
    m_property_value = property_value;
    m_property_value_isSet = true;
}

bool OAIFixedAssetPropertyTaxDetailsDto::is_property_value_Set() const{
    return m_property_value_isSet;
}

bool OAIFixedAssetPropertyTaxDetailsDto::is_property_value_Valid() const{
    return m_property_value_isValid;
}

bool OAIFixedAssetPropertyTaxDetailsDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_property_value_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFixedAssetPropertyTaxDetailsDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
