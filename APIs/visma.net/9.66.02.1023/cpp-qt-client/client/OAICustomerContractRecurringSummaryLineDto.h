/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerContractRecurringSummaryLineDto.h
 *
 * This class represents a CustomerContractRecurringSummaryLine in CustomerContractController. Used for getting data.
 */

#ifndef OAICustomerContractRecurringSummaryLineDto_H
#define OAICustomerContractRecurringSummaryLineDto_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICustomerContractRecurringSummaryLineDto : public OAIObject {
public:
    OAICustomerContractRecurringSummaryLineDto();
    OAICustomerContractRecurringSummaryLineDto(QString json);
    ~OAICustomerContractRecurringSummaryLineDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getExtraUsagePrice() const;
    void setExtraUsagePrice(const double &extra_usage_price);
    bool is_extra_usage_price_Set() const;
    bool is_extra_usage_price_Valid() const;

    double getIncluded() const;
    void setIncluded(const double &included);
    bool is_included_Set() const;
    bool is_included_Valid() const;

    QString getInvoiceType() const;
    void setInvoiceType(const QString &invoice_type);
    bool is_invoice_type_Set() const;
    bool is_invoice_type_Valid() const;

    QString getItemCode() const;
    void setItemCode(const QString &item_code);
    bool is_item_code_Set() const;
    bool is_item_code_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    double getRecurringDiscount() const;
    void setRecurringDiscount(const double &recurring_discount);
    bool is_recurring_discount_Set() const;
    bool is_recurring_discount_Valid() const;

    double getRecurringPrice() const;
    void setRecurringPrice(const double &recurring_price);
    bool is_recurring_price_Set() const;
    bool is_recurring_price_Valid() const;

    double getUnInvoiced() const;
    void setUnInvoiced(const double &un_invoiced);
    bool is_un_invoiced_Set() const;
    bool is_un_invoiced_Valid() const;

    QString getUom() const;
    void setUom(const QString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    double getUsedTotal() const;
    void setUsedTotal(const double &used_total);
    bool is_used_total_Set() const;
    bool is_used_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_extra_usage_price;
    bool m_extra_usage_price_isSet;
    bool m_extra_usage_price_isValid;

    double m_included;
    bool m_included_isSet;
    bool m_included_isValid;

    QString m_invoice_type;
    bool m_invoice_type_isSet;
    bool m_invoice_type_isValid;

    QString m_item_code;
    bool m_item_code_isSet;
    bool m_item_code_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    double m_recurring_discount;
    bool m_recurring_discount_isSet;
    bool m_recurring_discount_isValid;

    double m_recurring_price;
    bool m_recurring_price_isSet;
    bool m_recurring_price_isValid;

    double m_un_invoiced;
    bool m_un_invoiced_isSet;
    bool m_un_invoiced_isValid;

    QString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;

    double m_used_total;
    bool m_used_total_isSet;
    bool m_used_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerContractRecurringSummaryLineDto)

#endif // OAICustomerContractRecurringSummaryLineDto_H
