/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactQueryParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactQueryParameters::OAIContactQueryParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactQueryParameters::OAIContactQueryParameters() {
    this->initializeModel();
}

OAIContactQueryParameters::~OAIContactQueryParameters() {}

void OAIContactQueryParameters::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_business_account_isSet = false;
    m_business_account_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_greater_than_value_isSet = false;
    m_greater_than_value_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_modified_date_time_condition_isSet = false;
    m_last_modified_date_time_condition_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_number_to_read_isSet = false;
    m_number_to_read_isValid = false;

    m_order_by_isSet = false;
    m_order_by_isValid = false;

    m_skip_records_isSet = false;
    m_skip_records_isValid = false;
}

void OAIContactQueryParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactQueryParameters::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_business_account_isValid = ::OpenAPI::fromJsonValue(m_business_account, json[QString("businessAccount")]);
    m_business_account_isSet = !json[QString("businessAccount")].isNull() && m_business_account_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_greater_than_value_isValid = ::OpenAPI::fromJsonValue(m_greater_than_value, json[QString("greaterThanValue")]);
    m_greater_than_value_isSet = !json[QString("greaterThanValue")].isNull() && m_greater_than_value_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_modified_date_time_condition_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time_condition, json[QString("lastModifiedDateTimeCondition")]);
    m_last_modified_date_time_condition_isSet = !json[QString("lastModifiedDateTimeCondition")].isNull() && m_last_modified_date_time_condition_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_number_to_read_isValid = ::OpenAPI::fromJsonValue(m_number_to_read, json[QString("numberToRead")]);
    m_number_to_read_isSet = !json[QString("numberToRead")].isNull() && m_number_to_read_isValid;

    m_order_by_isValid = ::OpenAPI::fromJsonValue(m_order_by, json[QString("orderBy")]);
    m_order_by_isSet = !json[QString("orderBy")].isNull() && m_order_by_isValid;

    m_skip_records_isValid = ::OpenAPI::fromJsonValue(m_skip_records, json[QString("skipRecords")]);
    m_skip_records_isSet = !json[QString("skipRecords")].isNull() && m_skip_records_isValid;
}

QString OAIContactQueryParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactQueryParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_business_account_isSet) {
        obj.insert(QString("businessAccount"), ::OpenAPI::toJsonValue(m_business_account));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_greater_than_value_isSet) {
        obj.insert(QString("greaterThanValue"), ::OpenAPI::toJsonValue(m_greater_than_value));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_modified_date_time_condition_isSet) {
        obj.insert(QString("lastModifiedDateTimeCondition"), ::OpenAPI::toJsonValue(m_last_modified_date_time_condition));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_number_to_read_isSet) {
        obj.insert(QString("numberToRead"), ::OpenAPI::toJsonValue(m_number_to_read));
    }
    if (m_order_by_isSet) {
        obj.insert(QString("orderBy"), ::OpenAPI::toJsonValue(m_order_by));
    }
    if (m_skip_records_isSet) {
        obj.insert(QString("skipRecords"), ::OpenAPI::toJsonValue(m_skip_records));
    }
    return obj;
}

QString OAIContactQueryParameters::getActive() const {
    return m_active;
}
void OAIContactQueryParameters::setActive(const QString &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIContactQueryParameters::is_active_Set() const{
    return m_active_isSet;
}

bool OAIContactQueryParameters::is_active_Valid() const{
    return m_active_isValid;
}

QString OAIContactQueryParameters::getBusinessAccount() const {
    return m_business_account;
}
void OAIContactQueryParameters::setBusinessAccount(const QString &business_account) {
    m_business_account = business_account;
    m_business_account_isSet = true;
}

bool OAIContactQueryParameters::is_business_account_Set() const{
    return m_business_account_isSet;
}

bool OAIContactQueryParameters::is_business_account_Valid() const{
    return m_business_account_isValid;
}

QString OAIContactQueryParameters::getDisplayName() const {
    return m_display_name;
}
void OAIContactQueryParameters::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIContactQueryParameters::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIContactQueryParameters::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIContactQueryParameters::getEmail() const {
    return m_email;
}
void OAIContactQueryParameters::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContactQueryParameters::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContactQueryParameters::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIContactQueryParameters::getFirstName() const {
    return m_first_name;
}
void OAIContactQueryParameters::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIContactQueryParameters::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIContactQueryParameters::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIContactQueryParameters::getGreaterThanValue() const {
    return m_greater_than_value;
}
void OAIContactQueryParameters::setGreaterThanValue(const QString &greater_than_value) {
    m_greater_than_value = greater_than_value;
    m_greater_than_value_isSet = true;
}

bool OAIContactQueryParameters::is_greater_than_value_Set() const{
    return m_greater_than_value_isSet;
}

bool OAIContactQueryParameters::is_greater_than_value_Valid() const{
    return m_greater_than_value_isValid;
}

QString OAIContactQueryParameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIContactQueryParameters::setLastModifiedDateTime(const QString &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIContactQueryParameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIContactQueryParameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIContactQueryParameters::getLastModifiedDateTimeCondition() const {
    return m_last_modified_date_time_condition;
}
void OAIContactQueryParameters::setLastModifiedDateTimeCondition(const QString &last_modified_date_time_condition) {
    m_last_modified_date_time_condition = last_modified_date_time_condition;
    m_last_modified_date_time_condition_isSet = true;
}

bool OAIContactQueryParameters::is_last_modified_date_time_condition_Set() const{
    return m_last_modified_date_time_condition_isSet;
}

bool OAIContactQueryParameters::is_last_modified_date_time_condition_Valid() const{
    return m_last_modified_date_time_condition_isValid;
}

QString OAIContactQueryParameters::getLastName() const {
    return m_last_name;
}
void OAIContactQueryParameters::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIContactQueryParameters::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIContactQueryParameters::is_last_name_Valid() const{
    return m_last_name_isValid;
}

qint32 OAIContactQueryParameters::getNumberToRead() const {
    return m_number_to_read;
}
void OAIContactQueryParameters::setNumberToRead(const qint32 &number_to_read) {
    m_number_to_read = number_to_read;
    m_number_to_read_isSet = true;
}

bool OAIContactQueryParameters::is_number_to_read_Set() const{
    return m_number_to_read_isSet;
}

bool OAIContactQueryParameters::is_number_to_read_Valid() const{
    return m_number_to_read_isValid;
}

QString OAIContactQueryParameters::getOrderBy() const {
    return m_order_by;
}
void OAIContactQueryParameters::setOrderBy(const QString &order_by) {
    m_order_by = order_by;
    m_order_by_isSet = true;
}

bool OAIContactQueryParameters::is_order_by_Set() const{
    return m_order_by_isSet;
}

bool OAIContactQueryParameters::is_order_by_Valid() const{
    return m_order_by_isValid;
}

qint32 OAIContactQueryParameters::getSkipRecords() const {
    return m_skip_records;
}
void OAIContactQueryParameters::setSkipRecords(const qint32 &skip_records) {
    m_skip_records = skip_records;
    m_skip_records_isSet = true;
}

bool OAIContactQueryParameters::is_skip_records_Set() const{
    return m_skip_records_isSet;
}

bool OAIContactQueryParameters::is_skip_records_Valid() const{
    return m_skip_records_isValid;
}

bool OAIContactQueryParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_greater_than_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_to_read_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_records_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactQueryParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
