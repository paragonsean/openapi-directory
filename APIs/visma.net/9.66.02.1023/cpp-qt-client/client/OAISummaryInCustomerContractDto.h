/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISummaryInCustomerContractDto.h
 *
 * Summary tab &amp;gt;
 */

#ifndef OAISummaryInCustomerContractDto_H
#define OAISummaryInCustomerContractDto_H

#include <QJsonObject>

#include "OAICaseCountItemInCustomerContractSummaryDto.h"
#include "OAIInvoiceAccountInCustomerContractSummaryDto.h"
#include "OAILocationNameDescriptionDto.h"
#include "OAIOwnerInCustomerContractSummaryDto.h"
#include "OAISalesPersonInCustomerContractSummaryDto.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICaseCountItemInCustomerContractSummaryDto;
class OAIInvoiceAccountInCustomerContractSummaryDto;
class OAILocationNameDescriptionDto;
class OAIOwnerInCustomerContractSummaryDto;
class OAISalesPersonInCustomerContractSummaryDto;

class OAISummaryInCustomerContractDto : public OAIObject {
public:
    OAISummaryInCustomerContractDto();
    OAISummaryInCustomerContractDto(QString json);
    ~OAISummaryInCustomerContractDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getActivationDate() const;
    void setActivationDate(const QDateTime &activation_date);
    bool is_activation_date_Set() const;
    bool is_activation_date_Valid() const;

    OAICaseCountItemInCustomerContractSummaryDto getCaseCountItem() const;
    void setCaseCountItem(const OAICaseCountItemInCustomerContractSummaryDto &case_count_item);
    bool is_case_count_item_Set() const;
    bool is_case_count_item_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    qint32 getGracePeriod() const;
    void setGracePeriod(const qint32 &grace_period);
    bool is_grace_period_Set() const;
    bool is_grace_period_Valid() const;

    OAIInvoiceAccountInCustomerContractSummaryDto getInvoiceAccount() const;
    void setInvoiceAccount(const OAIInvoiceAccountInCustomerContractSummaryDto &invoice_account);
    bool is_invoice_account_Set() const;
    bool is_invoice_account_Valid() const;

    OAILocationNameDescriptionDto getInvoiceLocation() const;
    void setInvoiceLocation(const OAILocationNameDescriptionDto &invoice_location);
    bool is_invoice_location_Set() const;
    bool is_invoice_location_Valid() const;

    QString getInvoiceTo() const;
    void setInvoiceTo(const QString &invoice_to);
    bool is_invoice_to_Set() const;
    bool is_invoice_to_Valid() const;

    QString getInvoicingPeriod() const;
    void setInvoicingPeriod(const QString &invoicing_period);
    bool is_invoicing_period_Set() const;
    bool is_invoicing_period_Valid() const;

    QDateTime getInvoicingScheduleStartsOn() const;
    void setInvoicingScheduleStartsOn(const QDateTime &invoicing_schedule_starts_on);
    bool is_invoicing_schedule_starts_on_Set() const;
    bool is_invoicing_schedule_starts_on_Valid() const;

    QDateTime getLastInvoicingDate() const;
    void setLastInvoicingDate(const QDateTime &last_invoicing_date);
    bool is_last_invoicing_date_Set() const;
    bool is_last_invoicing_date_Valid() const;

    bool isMassRenewal() const;
    void setMassRenewal(const bool &mass_renewal);
    bool is_mass_renewal_Set() const;
    bool is_mass_renewal_Valid() const;

    QDateTime getNextInvoicingDate() const;
    void setNextInvoicingDate(const QDateTime &next_invoicing_date);
    bool is_next_invoicing_date_Set() const;
    bool is_next_invoicing_date_Valid() const;

    OAIOwnerInCustomerContractSummaryDto getOwner() const;
    void setOwner(const OAIOwnerInCustomerContractSummaryDto &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    qint32 getRenewalPoint() const;
    void setRenewalPoint(const qint32 &renewal_point);
    bool is_renewal_point_Set() const;
    bool is_renewal_point_Valid() const;

    OAISalesPersonInCustomerContractSummaryDto getSalesPerson() const;
    void setSalesPerson(const OAISalesPersonInCustomerContractSummaryDto &sales_person);
    bool is_sales_person_Set() const;
    bool is_sales_person_Valid() const;

    QDateTime getSetupDate() const;
    void setSetupDate(const QDateTime &setup_date);
    bool is_setup_date_Set() const;
    bool is_setup_date_Valid() const;

    QDateTime getTerminationDate() const;
    void setTerminationDate(const QDateTime &termination_date);
    bool is_termination_date_Set() const;
    bool is_termination_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_activation_date;
    bool m_activation_date_isSet;
    bool m_activation_date_isValid;

    OAICaseCountItemInCustomerContractSummaryDto m_case_count_item;
    bool m_case_count_item_isSet;
    bool m_case_count_item_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    qint32 m_grace_period;
    bool m_grace_period_isSet;
    bool m_grace_period_isValid;

    OAIInvoiceAccountInCustomerContractSummaryDto m_invoice_account;
    bool m_invoice_account_isSet;
    bool m_invoice_account_isValid;

    OAILocationNameDescriptionDto m_invoice_location;
    bool m_invoice_location_isSet;
    bool m_invoice_location_isValid;

    QString m_invoice_to;
    bool m_invoice_to_isSet;
    bool m_invoice_to_isValid;

    QString m_invoicing_period;
    bool m_invoicing_period_isSet;
    bool m_invoicing_period_isValid;

    QDateTime m_invoicing_schedule_starts_on;
    bool m_invoicing_schedule_starts_on_isSet;
    bool m_invoicing_schedule_starts_on_isValid;

    QDateTime m_last_invoicing_date;
    bool m_last_invoicing_date_isSet;
    bool m_last_invoicing_date_isValid;

    bool m_mass_renewal;
    bool m_mass_renewal_isSet;
    bool m_mass_renewal_isValid;

    QDateTime m_next_invoicing_date;
    bool m_next_invoicing_date_isSet;
    bool m_next_invoicing_date_isValid;

    OAIOwnerInCustomerContractSummaryDto m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    qint32 m_renewal_point;
    bool m_renewal_point_isSet;
    bool m_renewal_point_isValid;

    OAISalesPersonInCustomerContractSummaryDto m_sales_person;
    bool m_sales_person_isSet;
    bool m_sales_person_isValid;

    QDateTime m_setup_date;
    bool m_setup_date_isSet;
    bool m_setup_date_isValid;

    QDateTime m_termination_date;
    bool m_termination_date_isSet;
    bool m_termination_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISummaryInCustomerContractDto)

#endif // OAISummaryInCustomerContractDto_H
