/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreditTermDto.h
 *
 * 
 */

#ifndef OAICreditTermDto_H
#define OAICreditTermDto_H

#include <QJsonObject>

#include "OAIInstalmentSchedule.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInstalmentSchedule;

class OAICreditTermDto : public OAIObject {
public:
    OAICreditTermDto();
    OAICreditTermDto(QString json);
    ~OAICreditTermDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCalculationType() const;
    void setCalculationType(const QString &calculation_type);
    bool is_calculation_type_Set() const;
    bool is_calculation_type_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    qint32 getDelayDays() const;
    void setDelayDays(const qint32 &delay_days);
    bool is_delay_days_Set() const;
    bool is_delay_days_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getDiscountDay() const;
    void setDiscountDay(const qint32 &discount_day);
    bool is_discount_day_Set() const;
    bool is_discount_day_Valid() const;

    double getDiscountPercent() const;
    void setDiscountPercent(const double &discount_percent);
    bool is_discount_percent_Set() const;
    bool is_discount_percent_Valid() const;

    QString getDiscountType() const;
    void setDiscountType(const QString &discount_type);
    bool is_discount_type_Set() const;
    bool is_discount_type_Valid() const;

    QString getDueDateType() const;
    void setDueDateType(const QString &due_date_type);
    bool is_due_date_type_Set() const;
    bool is_due_date_type_Valid() const;

    qint32 getDueDay1() const;
    void setDueDay1(const qint32 &due_day1);
    bool is_due_day1_Set() const;
    bool is_due_day1_Valid() const;

    qint32 getDueDay1DayFrom1() const;
    void setDueDay1DayFrom1(const qint32 &due_day1_day_from1);
    bool is_due_day1_day_from1_Set() const;
    bool is_due_day1_day_from1_Valid() const;

    qint32 getDueDay1DayTo1() const;
    void setDueDay1DayTo1(const qint32 &due_day1_day_to1);
    bool is_due_day1_day_to1_Set() const;
    bool is_due_day1_day_to1_Valid() const;

    qint32 getDueDay2() const;
    void setDueDay2(const qint32 &due_day2);
    bool is_due_day2_Set() const;
    bool is_due_day2_Valid() const;

    qint32 getDueDay2DayFrom1() const;
    void setDueDay2DayFrom1(const qint32 &due_day2_day_from1);
    bool is_due_day2_day_from1_Set() const;
    bool is_due_day2_day_from1_Valid() const;

    qint32 getDueDay2DayTo1() const;
    void setDueDay2DayTo1(const qint32 &due_day2_day_to1);
    bool is_due_day2_day_to1_Set() const;
    bool is_due_day2_day_to1_Valid() const;

    QString getInstalmentFrequency() const;
    void setInstalmentFrequency(const QString &instalment_frequency);
    bool is_instalment_frequency_Set() const;
    bool is_instalment_frequency_Valid() const;

    QString getInstalmentMethod() const;
    void setInstalmentMethod(const QString &instalment_method);
    bool is_instalment_method_Set() const;
    bool is_instalment_method_Valid() const;

    QString getInstalmentType() const;
    void setInstalmentType(const QString &instalment_type);
    bool is_instalment_type_Set() const;
    bool is_instalment_type_Valid() const;

    QList<OAIInstalmentSchedule> getInstalmentsSchedule() const;
    void setInstalmentsSchedule(const QList<OAIInstalmentSchedule> &instalments_schedule);
    bool is_instalments_schedule_Set() const;
    bool is_instalments_schedule_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QString getMoveDueDateIfOnTheWeekend() const;
    void setMoveDueDateIfOnTheWeekend(const QString &move_due_date_if_on_the_weekend);
    bool is_move_due_date_if_on_the_weekend_Set() const;
    bool is_move_due_date_if_on_the_weekend_Valid() const;

    qint32 getNumberOfInstalments() const;
    void setNumberOfInstalments(const qint32 &number_of_instalments);
    bool is_number_of_instalments_Set() const;
    bool is_number_of_instalments_Valid() const;

    QString getTermsId() const;
    void setTermsId(const QString &terms_id);
    bool is_terms_id_Set() const;
    bool is_terms_id_Valid() const;

    QString getVisibleTo() const;
    void setVisibleTo(const QString &visible_to);
    bool is_visible_to_Set() const;
    bool is_visible_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calculation_type;
    bool m_calculation_type_isSet;
    bool m_calculation_type_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    qint32 m_delay_days;
    bool m_delay_days_isSet;
    bool m_delay_days_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_discount_day;
    bool m_discount_day_isSet;
    bool m_discount_day_isValid;

    double m_discount_percent;
    bool m_discount_percent_isSet;
    bool m_discount_percent_isValid;

    QString m_discount_type;
    bool m_discount_type_isSet;
    bool m_discount_type_isValid;

    QString m_due_date_type;
    bool m_due_date_type_isSet;
    bool m_due_date_type_isValid;

    qint32 m_due_day1;
    bool m_due_day1_isSet;
    bool m_due_day1_isValid;

    qint32 m_due_day1_day_from1;
    bool m_due_day1_day_from1_isSet;
    bool m_due_day1_day_from1_isValid;

    qint32 m_due_day1_day_to1;
    bool m_due_day1_day_to1_isSet;
    bool m_due_day1_day_to1_isValid;

    qint32 m_due_day2;
    bool m_due_day2_isSet;
    bool m_due_day2_isValid;

    qint32 m_due_day2_day_from1;
    bool m_due_day2_day_from1_isSet;
    bool m_due_day2_day_from1_isValid;

    qint32 m_due_day2_day_to1;
    bool m_due_day2_day_to1_isSet;
    bool m_due_day2_day_to1_isValid;

    QString m_instalment_frequency;
    bool m_instalment_frequency_isSet;
    bool m_instalment_frequency_isValid;

    QString m_instalment_method;
    bool m_instalment_method_isSet;
    bool m_instalment_method_isValid;

    QString m_instalment_type;
    bool m_instalment_type_isSet;
    bool m_instalment_type_isValid;

    QList<OAIInstalmentSchedule> m_instalments_schedule;
    bool m_instalments_schedule_isSet;
    bool m_instalments_schedule_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QString m_move_due_date_if_on_the_weekend;
    bool m_move_due_date_if_on_the_weekend_isSet;
    bool m_move_due_date_if_on_the_weekend_isValid;

    qint32 m_number_of_instalments;
    bool m_number_of_instalments_isSet;
    bool m_number_of_instalments_isValid;

    QString m_terms_id;
    bool m_terms_id_isSet;
    bool m_terms_id_isValid;

    QString m_visible_to;
    bool m_visible_to_isSet;
    bool m_visible_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreditTermDto)

#endif // OAICreditTermDto_H
