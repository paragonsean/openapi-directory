/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPurchaseReceiptOrderLinesUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPurchaseReceiptOrderLinesUpdateDto::OAIPurchaseReceiptOrderLinesUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPurchaseReceiptOrderLinesUpdateDto::OAIPurchaseReceiptOrderLinesUpdateDto() {
    this->initializeModel();
}

OAIPurchaseReceiptOrderLinesUpdateDto::~OAIPurchaseReceiptOrderLinesUpdateDto() {}

void OAIPurchaseReceiptOrderLinesUpdateDto::initializeModel() {

    m_allocations_isSet = false;
    m_allocations_isValid = false;

    m_lines_isSet = false;
    m_lines_isValid = false;

    m_order_nbr_isSet = false;
    m_order_nbr_isValid = false;
}

void OAIPurchaseReceiptOrderLinesUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPurchaseReceiptOrderLinesUpdateDto::fromJsonObject(QJsonObject json) {

    m_allocations_isValid = ::OpenAPI::fromJsonValue(m_allocations, json[QString("allocations")]);
    m_allocations_isSet = !json[QString("allocations")].isNull() && m_allocations_isValid;

    m_lines_isValid = ::OpenAPI::fromJsonValue(m_lines, json[QString("lines")]);
    m_lines_isSet = !json[QString("lines")].isNull() && m_lines_isValid;

    m_order_nbr_isValid = ::OpenAPI::fromJsonValue(m_order_nbr, json[QString("orderNbr")]);
    m_order_nbr_isSet = !json[QString("orderNbr")].isNull() && m_order_nbr_isValid;
}

QString OAIPurchaseReceiptOrderLinesUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPurchaseReceiptOrderLinesUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_allocations.size() > 0) {
        obj.insert(QString("allocations"), ::OpenAPI::toJsonValue(m_allocations));
    }
    if (m_lines.size() > 0) {
        obj.insert(QString("lines"), ::OpenAPI::toJsonValue(m_lines));
    }
    if (m_order_nbr_isSet) {
        obj.insert(QString("orderNbr"), ::OpenAPI::toJsonValue(m_order_nbr));
    }
    return obj;
}

QList<OAIAllocationsUpdateDto> OAIPurchaseReceiptOrderLinesUpdateDto::getAllocations() const {
    return m_allocations;
}
void OAIPurchaseReceiptOrderLinesUpdateDto::setAllocations(const QList<OAIAllocationsUpdateDto> &allocations) {
    m_allocations = allocations;
    m_allocations_isSet = true;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::is_allocations_Set() const{
    return m_allocations_isSet;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::is_allocations_Valid() const{
    return m_allocations_isValid;
}

QList<OAIPurchaseReceiptOrderLineNbrUpdateDto> OAIPurchaseReceiptOrderLinesUpdateDto::getLines() const {
    return m_lines;
}
void OAIPurchaseReceiptOrderLinesUpdateDto::setLines(const QList<OAIPurchaseReceiptOrderLineNbrUpdateDto> &lines) {
    m_lines = lines;
    m_lines_isSet = true;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::is_lines_Set() const{
    return m_lines_isSet;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::is_lines_Valid() const{
    return m_lines_isValid;
}

QString OAIPurchaseReceiptOrderLinesUpdateDto::getOrderNbr() const {
    return m_order_nbr;
}
void OAIPurchaseReceiptOrderLinesUpdateDto::setOrderNbr(const QString &order_nbr) {
    m_order_nbr = order_nbr;
    m_order_nbr_isSet = true;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::is_order_nbr_Set() const{
    return m_order_nbr_isSet;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::is_order_nbr_Valid() const{
    return m_order_nbr_isValid;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allocations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_lines.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPurchaseReceiptOrderLinesUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
