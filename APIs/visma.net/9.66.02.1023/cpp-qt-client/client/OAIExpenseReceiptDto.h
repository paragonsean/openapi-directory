/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpenseReceiptDto.h
 *
 * This class represents a Expense Receipt in ExpenseReceiptController. Used by getting data.
 */

#ifndef OAIExpenseReceiptDto_H
#define OAIExpenseReceiptDto_H

#include <QJsonObject>

#include "OAIBranchInExpenseReceiptDto.h"
#include "OAIClaimedByInExpenseReceiptDto.h"
#include "OAICurrencyInExpenseReceiptDto.h"
#include "OAICustomerInExpenseReceiptDto.h"
#include "OAIExpenseAccountInExpenseReceiptDto.h"
#include "OAIExpenseClaimInExpenseReceiptDto.h"
#include "OAIExpenseSubInExpenseReceiptDto.h"
#include "OAIImageInExpenseReceiptDto.h"
#include "OAIInventoryNumberDescriptionDto.h"
#include "OAILocationInExpenseReceiptDto.h"
#include "OAIProjectInExpenseReceiptDto.h"
#include "OAIProjectTaskInExpenseReceiptDto.h"
#include "OAISalesAccountInExpenseReceiptDto.h"
#include "OAISalesSubInExpenseReceiptDto.h"
#include "OAITaxCategoryInExpenseReceiptDto.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBranchInExpenseReceiptDto;
class OAIClaimedByInExpenseReceiptDto;
class OAICurrencyInExpenseReceiptDto;
class OAICustomerInExpenseReceiptDto;
class OAIExpenseAccountInExpenseReceiptDto;
class OAIExpenseClaimInExpenseReceiptDto;
class OAIExpenseSubInExpenseReceiptDto;
class OAIImageInExpenseReceiptDto;
class OAIInventoryNumberDescriptionDto;
class OAILocationInExpenseReceiptDto;
class OAIProjectInExpenseReceiptDto;
class OAIProjectTaskInExpenseReceiptDto;
class OAISalesAccountInExpenseReceiptDto;
class OAISalesSubInExpenseReceiptDto;
class OAITaxCategoryInExpenseReceiptDto;

class OAIExpenseReceiptDto : public OAIObject {
public:
    OAIExpenseReceiptDto();
    OAIExpenseReceiptDto(QString json);
    ~OAIExpenseReceiptDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBranchInExpenseReceiptDto getBranch() const;
    void setBranch(const OAIBranchInExpenseReceiptDto &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    double getClaimAmount() const;
    void setClaimAmount(const double &claim_amount);
    bool is_claim_amount_Set() const;
    bool is_claim_amount_Valid() const;

    OAIClaimedByInExpenseReceiptDto getClaimedBy() const;
    void setClaimedBy(const OAIClaimedByInExpenseReceiptDto &claimed_by);
    bool is_claimed_by_Set() const;
    bool is_claimed_by_Valid() const;

    OAICurrencyInExpenseReceiptDto getCurrency() const;
    void setCurrency(const OAICurrencyInExpenseReceiptDto &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAICustomerInExpenseReceiptDto getCustomer() const;
    void setCustomer(const OAICustomerInExpenseReceiptDto &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getEmployeePart() const;
    void setEmployeePart(const double &employee_part);
    bool is_employee_part_Set() const;
    bool is_employee_part_Valid() const;

    OAIExpenseAccountInExpenseReceiptDto getExpenseAccount() const;
    void setExpenseAccount(const OAIExpenseAccountInExpenseReceiptDto &expense_account);
    bool is_expense_account_Set() const;
    bool is_expense_account_Valid() const;

    OAIExpenseClaimInExpenseReceiptDto getExpenseClaim() const;
    void setExpenseClaim(const OAIExpenseClaimInExpenseReceiptDto &expense_claim);
    bool is_expense_claim_Set() const;
    bool is_expense_claim_Valid() const;

    OAIExpenseSubInExpenseReceiptDto getExpenseSub() const;
    void setExpenseSub(const OAIExpenseSubInExpenseReceiptDto &expense_sub);
    bool is_expense_sub_Set() const;
    bool is_expense_sub_Valid() const;

    OAIImageInExpenseReceiptDto getImage() const;
    void setImage(const OAIImageInExpenseReceiptDto &image);
    bool is_image_Set() const;
    bool is_image_Valid() const;

    qint32 getInternalId() const;
    void setInternalId(const qint32 &internal_id);
    bool is_internal_id_Set() const;
    bool is_internal_id_Valid() const;

    OAIInventoryNumberDescriptionDto getInventory() const;
    void setInventory(const OAIInventoryNumberDescriptionDto &inventory);
    bool is_inventory_Set() const;
    bool is_inventory_Valid() const;

    bool isInvoiceable() const;
    void setInvoiceable(const bool &invoiceable);
    bool is_invoiceable_Set() const;
    bool is_invoiceable_Valid() const;

    OAILocationInExpenseReceiptDto getLocation() const;
    void setLocation(const OAILocationInExpenseReceiptDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIProjectInExpenseReceiptDto getProject() const;
    void setProject(const OAIProjectInExpenseReceiptDto &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    OAIProjectTaskInExpenseReceiptDto getProjectTask() const;
    void setProjectTask(const OAIProjectTaskInExpenseReceiptDto &project_task);
    bool is_project_task_Set() const;
    bool is_project_task_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getReceiptId() const;
    void setReceiptId(const QString &receipt_id);
    bool is_receipt_id_Set() const;
    bool is_receipt_id_Valid() const;

    QString getRefNbr() const;
    void setRefNbr(const QString &ref_nbr);
    bool is_ref_nbr_Set() const;
    bool is_ref_nbr_Valid() const;

    OAISalesAccountInExpenseReceiptDto getSalesAccount() const;
    void setSalesAccount(const OAISalesAccountInExpenseReceiptDto &sales_account);
    bool is_sales_account_Set() const;
    bool is_sales_account_Valid() const;

    OAISalesSubInExpenseReceiptDto getSalesSub() const;
    void setSalesSub(const OAISalesSubInExpenseReceiptDto &sales_sub);
    bool is_sales_sub_Set() const;
    bool is_sales_sub_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAITaxCategoryInExpenseReceiptDto getTaxCategory() const;
    void setTaxCategory(const OAITaxCategoryInExpenseReceiptDto &tax_category);
    bool is_tax_category_Set() const;
    bool is_tax_category_Valid() const;

    double getTaxTotal() const;
    void setTaxTotal(const double &tax_total);
    bool is_tax_total_Set() const;
    bool is_tax_total_Valid() const;

    double getTotalAmount() const;
    void setTotalAmount(const double &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    double getUnitCost() const;
    void setUnitCost(const double &unit_cost);
    bool is_unit_cost_Set() const;
    bool is_unit_cost_Valid() const;

    QString getUom() const;
    void setUom(const QString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBranchInExpenseReceiptDto m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    double m_claim_amount;
    bool m_claim_amount_isSet;
    bool m_claim_amount_isValid;

    OAIClaimedByInExpenseReceiptDto m_claimed_by;
    bool m_claimed_by_isSet;
    bool m_claimed_by_isValid;

    OAICurrencyInExpenseReceiptDto m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAICustomerInExpenseReceiptDto m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_employee_part;
    bool m_employee_part_isSet;
    bool m_employee_part_isValid;

    OAIExpenseAccountInExpenseReceiptDto m_expense_account;
    bool m_expense_account_isSet;
    bool m_expense_account_isValid;

    OAIExpenseClaimInExpenseReceiptDto m_expense_claim;
    bool m_expense_claim_isSet;
    bool m_expense_claim_isValid;

    OAIExpenseSubInExpenseReceiptDto m_expense_sub;
    bool m_expense_sub_isSet;
    bool m_expense_sub_isValid;

    OAIImageInExpenseReceiptDto m_image;
    bool m_image_isSet;
    bool m_image_isValid;

    qint32 m_internal_id;
    bool m_internal_id_isSet;
    bool m_internal_id_isValid;

    OAIInventoryNumberDescriptionDto m_inventory;
    bool m_inventory_isSet;
    bool m_inventory_isValid;

    bool m_invoiceable;
    bool m_invoiceable_isSet;
    bool m_invoiceable_isValid;

    OAILocationInExpenseReceiptDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIProjectInExpenseReceiptDto m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    OAIProjectTaskInExpenseReceiptDto m_project_task;
    bool m_project_task_isSet;
    bool m_project_task_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_receipt_id;
    bool m_receipt_id_isSet;
    bool m_receipt_id_isValid;

    QString m_ref_nbr;
    bool m_ref_nbr_isSet;
    bool m_ref_nbr_isValid;

    OAISalesAccountInExpenseReceiptDto m_sales_account;
    bool m_sales_account_isSet;
    bool m_sales_account_isValid;

    OAISalesSubInExpenseReceiptDto m_sales_sub;
    bool m_sales_sub_isSet;
    bool m_sales_sub_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAITaxCategoryInExpenseReceiptDto m_tax_category;
    bool m_tax_category_isSet;
    bool m_tax_category_isValid;

    double m_tax_total;
    bool m_tax_total_isSet;
    bool m_tax_total_isValid;

    double m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;

    double m_unit_cost;
    bool m_unit_cost_isSet;
    bool m_unit_cost_isValid;

    QString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpenseReceiptDto)

#endif // OAIExpenseReceiptDto_H
