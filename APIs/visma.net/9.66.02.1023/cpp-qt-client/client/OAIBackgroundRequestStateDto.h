/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBackgroundRequestStateDto.h
 *
 * 
 */

#ifndef OAIBackgroundRequestStateDto_H
#define OAIBackgroundRequestStateDto_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBackgroundRequestStateDto : public OAIObject {
public:
    OAIBackgroundRequestStateDto();
    OAIBackgroundRequestStateDto(QString json);
    ~OAIBackgroundRequestStateDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContentLocation() const;
    void setContentLocation(const QString &content_location);
    bool is_content_location_Set() const;
    bool is_content_location_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QDateTime getFinishedUtc() const;
    void setFinishedUtc(const QDateTime &finished_utc);
    bool is_finished_utc_Set() const;
    bool is_finished_utc_Valid() const;

    bool isHasRequestContent() const;
    void setHasRequestContent(const bool &has_request_content);
    bool is_has_request_content_Set() const;
    bool is_has_request_content_Valid() const;

    bool isHasResponseContent() const;
    void setHasResponseContent(const bool &has_response_content);
    bool is_has_response_content_Set() const;
    bool is_has_response_content_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getOriginalUri() const;
    void setOriginalUri(const QString &original_uri);
    bool is_original_uri_Set() const;
    bool is_original_uri_Valid() const;

    QDateTime getReceivedUtc() const;
    void setReceivedUtc(const QDateTime &received_utc);
    bool is_received_utc_Set() const;
    bool is_received_utc_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QMap<QString, QString> getResponseHeaders() const;
    void setResponseHeaders(const QMap<QString, QString> &response_headers);
    bool is_response_headers_Set() const;
    bool is_response_headers_Valid() const;

    QDateTime getStartedUtc() const;
    void setStartedUtc(const QDateTime &started_utc);
    bool is_started_utc_Set() const;
    bool is_started_utc_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getStatusCode() const;
    void setStatusCode(const qint32 &status_code);
    bool is_status_code_Set() const;
    bool is_status_code_Valid() const;

    QString getWebhookAddress() const;
    void setWebhookAddress(const QString &webhook_address);
    bool is_webhook_address_Set() const;
    bool is_webhook_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_content_location;
    bool m_content_location_isSet;
    bool m_content_location_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QDateTime m_finished_utc;
    bool m_finished_utc_isSet;
    bool m_finished_utc_isValid;

    bool m_has_request_content;
    bool m_has_request_content_isSet;
    bool m_has_request_content_isValid;

    bool m_has_response_content;
    bool m_has_response_content_isSet;
    bool m_has_response_content_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_original_uri;
    bool m_original_uri_isSet;
    bool m_original_uri_isValid;

    QDateTime m_received_utc;
    bool m_received_utc_isSet;
    bool m_received_utc_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QMap<QString, QString> m_response_headers;
    bool m_response_headers_isSet;
    bool m_response_headers_isValid;

    QDateTime m_started_utc;
    bool m_started_utc_isSet;
    bool m_started_utc_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_status_code;
    bool m_status_code_isSet;
    bool m_status_code_isValid;

    QString m_webhook_address;
    bool m_webhook_address_isSet;
    bool m_webhook_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBackgroundRequestStateDto)

#endif // OAIBackgroundRequestStateDto_H
