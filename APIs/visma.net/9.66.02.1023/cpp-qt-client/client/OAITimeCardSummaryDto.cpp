/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeCardSummaryDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeCardSummaryDto::OAITimeCardSummaryDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeCardSummaryDto::OAITimeCardSummaryDto() {
    this->initializeModel();
}

OAITimeCardSummaryDto::~OAITimeCardSummaryDto() {}

void OAITimeCardSummaryDto::initializeModel() {

    m_approval_status_isSet = false;
    m_approval_status_isValid = false;

    m_approval_status_text_isSet = false;
    m_approval_status_text_isValid = false;

    m_approver_isSet = false;
    m_approver_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_earning_type_isSet = false;
    m_earning_type_isValid = false;

    m_fri_isSet = false;
    m_fri_isValid = false;

    m_invoiceable_isSet = false;
    m_invoiceable_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_line_id_isSet = false;
    m_line_id_isValid = false;

    m_line_number_isSet = false;
    m_line_number_isValid = false;

    m_mon_isSet = false;
    m_mon_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_project_task_isSet = false;
    m_project_task_isValid = false;

    m_sat_isSet = false;
    m_sat_isValid = false;

    m_sun_isSet = false;
    m_sun_isValid = false;

    m_thu_isSet = false;
    m_thu_isValid = false;

    m_time_spent_isSet = false;
    m_time_spent_isValid = false;

    m_tue_isSet = false;
    m_tue_isValid = false;

    m_wed_isSet = false;
    m_wed_isValid = false;
}

void OAITimeCardSummaryDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeCardSummaryDto::fromJsonObject(QJsonObject json) {

    m_approval_status_isValid = ::OpenAPI::fromJsonValue(m_approval_status, json[QString("approvalStatus")]);
    m_approval_status_isSet = !json[QString("approvalStatus")].isNull() && m_approval_status_isValid;

    m_approval_status_text_isValid = ::OpenAPI::fromJsonValue(m_approval_status_text, json[QString("approvalStatusText")]);
    m_approval_status_text_isSet = !json[QString("approvalStatusText")].isNull() && m_approval_status_text_isValid;

    m_approver_isValid = ::OpenAPI::fromJsonValue(m_approver, json[QString("approver")]);
    m_approver_isSet = !json[QString("approver")].isNull() && m_approver_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_earning_type_isValid = ::OpenAPI::fromJsonValue(m_earning_type, json[QString("earningType")]);
    m_earning_type_isSet = !json[QString("earningType")].isNull() && m_earning_type_isValid;

    m_fri_isValid = ::OpenAPI::fromJsonValue(m_fri, json[QString("fri")]);
    m_fri_isSet = !json[QString("fri")].isNull() && m_fri_isValid;

    m_invoiceable_isValid = ::OpenAPI::fromJsonValue(m_invoiceable, json[QString("invoiceable")]);
    m_invoiceable_isSet = !json[QString("invoiceable")].isNull() && m_invoiceable_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_line_id_isValid = ::OpenAPI::fromJsonValue(m_line_id, json[QString("lineId")]);
    m_line_id_isSet = !json[QString("lineId")].isNull() && m_line_id_isValid;

    m_line_number_isValid = ::OpenAPI::fromJsonValue(m_line_number, json[QString("lineNumber")]);
    m_line_number_isSet = !json[QString("lineNumber")].isNull() && m_line_number_isValid;

    m_mon_isValid = ::OpenAPI::fromJsonValue(m_mon, json[QString("mon")]);
    m_mon_isSet = !json[QString("mon")].isNull() && m_mon_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_project_task_isValid = ::OpenAPI::fromJsonValue(m_project_task, json[QString("projectTask")]);
    m_project_task_isSet = !json[QString("projectTask")].isNull() && m_project_task_isValid;

    m_sat_isValid = ::OpenAPI::fromJsonValue(m_sat, json[QString("sat")]);
    m_sat_isSet = !json[QString("sat")].isNull() && m_sat_isValid;

    m_sun_isValid = ::OpenAPI::fromJsonValue(m_sun, json[QString("sun")]);
    m_sun_isSet = !json[QString("sun")].isNull() && m_sun_isValid;

    m_thu_isValid = ::OpenAPI::fromJsonValue(m_thu, json[QString("thu")]);
    m_thu_isSet = !json[QString("thu")].isNull() && m_thu_isValid;

    m_time_spent_isValid = ::OpenAPI::fromJsonValue(m_time_spent, json[QString("timeSpent")]);
    m_time_spent_isSet = !json[QString("timeSpent")].isNull() && m_time_spent_isValid;

    m_tue_isValid = ::OpenAPI::fromJsonValue(m_tue, json[QString("tue")]);
    m_tue_isSet = !json[QString("tue")].isNull() && m_tue_isValid;

    m_wed_isValid = ::OpenAPI::fromJsonValue(m_wed, json[QString("wed")]);
    m_wed_isSet = !json[QString("wed")].isNull() && m_wed_isValid;
}

QString OAITimeCardSummaryDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeCardSummaryDto::asJsonObject() const {
    QJsonObject obj;
    if (m_approval_status_isSet) {
        obj.insert(QString("approvalStatus"), ::OpenAPI::toJsonValue(m_approval_status));
    }
    if (m_approval_status_text_isSet) {
        obj.insert(QString("approvalStatusText"), ::OpenAPI::toJsonValue(m_approval_status_text));
    }
    if (m_approver_isSet) {
        obj.insert(QString("approver"), ::OpenAPI::toJsonValue(m_approver));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_earning_type.isSet()) {
        obj.insert(QString("earningType"), ::OpenAPI::toJsonValue(m_earning_type));
    }
    if (m_fri_isSet) {
        obj.insert(QString("fri"), ::OpenAPI::toJsonValue(m_fri));
    }
    if (m_invoiceable_isSet) {
        obj.insert(QString("invoiceable"), ::OpenAPI::toJsonValue(m_invoiceable));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_line_id_isSet) {
        obj.insert(QString("lineId"), ::OpenAPI::toJsonValue(m_line_id));
    }
    if (m_line_number_isSet) {
        obj.insert(QString("lineNumber"), ::OpenAPI::toJsonValue(m_line_number));
    }
    if (m_mon_isSet) {
        obj.insert(QString("mon"), ::OpenAPI::toJsonValue(m_mon));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_project_task.isSet()) {
        obj.insert(QString("projectTask"), ::OpenAPI::toJsonValue(m_project_task));
    }
    if (m_sat_isSet) {
        obj.insert(QString("sat"), ::OpenAPI::toJsonValue(m_sat));
    }
    if (m_sun_isSet) {
        obj.insert(QString("sun"), ::OpenAPI::toJsonValue(m_sun));
    }
    if (m_thu_isSet) {
        obj.insert(QString("thu"), ::OpenAPI::toJsonValue(m_thu));
    }
    if (m_time_spent_isSet) {
        obj.insert(QString("timeSpent"), ::OpenAPI::toJsonValue(m_time_spent));
    }
    if (m_tue_isSet) {
        obj.insert(QString("tue"), ::OpenAPI::toJsonValue(m_tue));
    }
    if (m_wed_isSet) {
        obj.insert(QString("wed"), ::OpenAPI::toJsonValue(m_wed));
    }
    return obj;
}

QString OAITimeCardSummaryDto::getApprovalStatus() const {
    return m_approval_status;
}
void OAITimeCardSummaryDto::setApprovalStatus(const QString &approval_status) {
    m_approval_status = approval_status;
    m_approval_status_isSet = true;
}

bool OAITimeCardSummaryDto::is_approval_status_Set() const{
    return m_approval_status_isSet;
}

bool OAITimeCardSummaryDto::is_approval_status_Valid() const{
    return m_approval_status_isValid;
}

QString OAITimeCardSummaryDto::getApprovalStatusText() const {
    return m_approval_status_text;
}
void OAITimeCardSummaryDto::setApprovalStatusText(const QString &approval_status_text) {
    m_approval_status_text = approval_status_text;
    m_approval_status_text_isSet = true;
}

bool OAITimeCardSummaryDto::is_approval_status_text_Set() const{
    return m_approval_status_text_isSet;
}

bool OAITimeCardSummaryDto::is_approval_status_text_Valid() const{
    return m_approval_status_text_isValid;
}

QString OAITimeCardSummaryDto::getApprover() const {
    return m_approver;
}
void OAITimeCardSummaryDto::setApprover(const QString &approver) {
    m_approver = approver;
    m_approver_isSet = true;
}

bool OAITimeCardSummaryDto::is_approver_Set() const{
    return m_approver_isSet;
}

bool OAITimeCardSummaryDto::is_approver_Valid() const{
    return m_approver_isValid;
}

QString OAITimeCardSummaryDto::getDescription() const {
    return m_description;
}
void OAITimeCardSummaryDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITimeCardSummaryDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAITimeCardSummaryDto::is_description_Valid() const{
    return m_description_isValid;
}

OAIEarningTypeInTimeCardSummaryDto OAITimeCardSummaryDto::getEarningType() const {
    return m_earning_type;
}
void OAITimeCardSummaryDto::setEarningType(const OAIEarningTypeInTimeCardSummaryDto &earning_type) {
    m_earning_type = earning_type;
    m_earning_type_isSet = true;
}

bool OAITimeCardSummaryDto::is_earning_type_Set() const{
    return m_earning_type_isSet;
}

bool OAITimeCardSummaryDto::is_earning_type_Valid() const{
    return m_earning_type_isValid;
}

qint32 OAITimeCardSummaryDto::getFri() const {
    return m_fri;
}
void OAITimeCardSummaryDto::setFri(const qint32 &fri) {
    m_fri = fri;
    m_fri_isSet = true;
}

bool OAITimeCardSummaryDto::is_fri_Set() const{
    return m_fri_isSet;
}

bool OAITimeCardSummaryDto::is_fri_Valid() const{
    return m_fri_isValid;
}

bool OAITimeCardSummaryDto::isInvoiceable() const {
    return m_invoiceable;
}
void OAITimeCardSummaryDto::setInvoiceable(const bool &invoiceable) {
    m_invoiceable = invoiceable;
    m_invoiceable_isSet = true;
}

bool OAITimeCardSummaryDto::is_invoiceable_Set() const{
    return m_invoiceable_isSet;
}

bool OAITimeCardSummaryDto::is_invoiceable_Valid() const{
    return m_invoiceable_isValid;
}

QDateTime OAITimeCardSummaryDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAITimeCardSummaryDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAITimeCardSummaryDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAITimeCardSummaryDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAITimeCardSummaryDto::getLineId() const {
    return m_line_id;
}
void OAITimeCardSummaryDto::setLineId(const QString &line_id) {
    m_line_id = line_id;
    m_line_id_isSet = true;
}

bool OAITimeCardSummaryDto::is_line_id_Set() const{
    return m_line_id_isSet;
}

bool OAITimeCardSummaryDto::is_line_id_Valid() const{
    return m_line_id_isValid;
}

qint32 OAITimeCardSummaryDto::getLineNumber() const {
    return m_line_number;
}
void OAITimeCardSummaryDto::setLineNumber(const qint32 &line_number) {
    m_line_number = line_number;
    m_line_number_isSet = true;
}

bool OAITimeCardSummaryDto::is_line_number_Set() const{
    return m_line_number_isSet;
}

bool OAITimeCardSummaryDto::is_line_number_Valid() const{
    return m_line_number_isValid;
}

qint32 OAITimeCardSummaryDto::getMon() const {
    return m_mon;
}
void OAITimeCardSummaryDto::setMon(const qint32 &mon) {
    m_mon = mon;
    m_mon_isSet = true;
}

bool OAITimeCardSummaryDto::is_mon_Set() const{
    return m_mon_isSet;
}

bool OAITimeCardSummaryDto::is_mon_Valid() const{
    return m_mon_isValid;
}

OAIProjectInTimeCardSummaryDto OAITimeCardSummaryDto::getProject() const {
    return m_project;
}
void OAITimeCardSummaryDto::setProject(const OAIProjectInTimeCardSummaryDto &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAITimeCardSummaryDto::is_project_Set() const{
    return m_project_isSet;
}

bool OAITimeCardSummaryDto::is_project_Valid() const{
    return m_project_isValid;
}

OAIProjectTaskInTimeCardSummaryDto OAITimeCardSummaryDto::getProjectTask() const {
    return m_project_task;
}
void OAITimeCardSummaryDto::setProjectTask(const OAIProjectTaskInTimeCardSummaryDto &project_task) {
    m_project_task = project_task;
    m_project_task_isSet = true;
}

bool OAITimeCardSummaryDto::is_project_task_Set() const{
    return m_project_task_isSet;
}

bool OAITimeCardSummaryDto::is_project_task_Valid() const{
    return m_project_task_isValid;
}

qint32 OAITimeCardSummaryDto::getSat() const {
    return m_sat;
}
void OAITimeCardSummaryDto::setSat(const qint32 &sat) {
    m_sat = sat;
    m_sat_isSet = true;
}

bool OAITimeCardSummaryDto::is_sat_Set() const{
    return m_sat_isSet;
}

bool OAITimeCardSummaryDto::is_sat_Valid() const{
    return m_sat_isValid;
}

qint32 OAITimeCardSummaryDto::getSun() const {
    return m_sun;
}
void OAITimeCardSummaryDto::setSun(const qint32 &sun) {
    m_sun = sun;
    m_sun_isSet = true;
}

bool OAITimeCardSummaryDto::is_sun_Set() const{
    return m_sun_isSet;
}

bool OAITimeCardSummaryDto::is_sun_Valid() const{
    return m_sun_isValid;
}

qint32 OAITimeCardSummaryDto::getThu() const {
    return m_thu;
}
void OAITimeCardSummaryDto::setThu(const qint32 &thu) {
    m_thu = thu;
    m_thu_isSet = true;
}

bool OAITimeCardSummaryDto::is_thu_Set() const{
    return m_thu_isSet;
}

bool OAITimeCardSummaryDto::is_thu_Valid() const{
    return m_thu_isValid;
}

qint32 OAITimeCardSummaryDto::getTimeSpent() const {
    return m_time_spent;
}
void OAITimeCardSummaryDto::setTimeSpent(const qint32 &time_spent) {
    m_time_spent = time_spent;
    m_time_spent_isSet = true;
}

bool OAITimeCardSummaryDto::is_time_spent_Set() const{
    return m_time_spent_isSet;
}

bool OAITimeCardSummaryDto::is_time_spent_Valid() const{
    return m_time_spent_isValid;
}

qint32 OAITimeCardSummaryDto::getTue() const {
    return m_tue;
}
void OAITimeCardSummaryDto::setTue(const qint32 &tue) {
    m_tue = tue;
    m_tue_isSet = true;
}

bool OAITimeCardSummaryDto::is_tue_Set() const{
    return m_tue_isSet;
}

bool OAITimeCardSummaryDto::is_tue_Valid() const{
    return m_tue_isValid;
}

qint32 OAITimeCardSummaryDto::getWed() const {
    return m_wed;
}
void OAITimeCardSummaryDto::setWed(const qint32 &wed) {
    m_wed = wed;
    m_wed_isSet = true;
}

bool OAITimeCardSummaryDto::is_wed_Set() const{
    return m_wed_isSet;
}

bool OAITimeCardSummaryDto::is_wed_Valid() const{
    return m_wed_isValid;
}

bool OAITimeCardSummaryDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_approval_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approval_status_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_approver_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_earning_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoiceable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_task.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sat_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sun_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thu_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_spent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeCardSummaryDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
