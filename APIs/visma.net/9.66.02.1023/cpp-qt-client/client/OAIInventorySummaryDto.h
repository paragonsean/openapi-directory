/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventorySummaryDto.h
 *
 * This class represents a InventorySummary in InventorySummaryController. Used by getting data.
 */

#ifndef OAIInventorySummaryDto_H
#define OAIInventorySummaryDto_H

#include <QJsonObject>

#include "OAIInventoryInInventorySummaryDto.h"
#include "OAILocationInInventorySummaryDto.h"
#include "OAIMetadataDto.h"
#include "OAIWarehouseInInventorySummaryDto.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInventoryInInventorySummaryDto;
class OAILocationInInventorySummaryDto;
class OAIMetadataDto;
class OAIWarehouseInInventorySummaryDto;

class OAIInventorySummaryDto : public OAIObject {
public:
    OAIInventorySummaryDto();
    OAIInventorySummaryDto(QString json);
    ~OAIInventorySummaryDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAvailable() const;
    void setAvailable(const double &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    double getAvailableForShipment() const;
    void setAvailableForShipment(const double &available_for_shipment);
    bool is_available_for_shipment_Set() const;
    bool is_available_for_shipment_Valid() const;

    QString getBaseUnit() const;
    void setBaseUnit(const QString &base_unit);
    bool is_base_unit_Set() const;
    bool is_base_unit_Valid() const;

    double getDropShipForSo() const;
    void setDropShipForSo(const double &drop_ship_for_so);
    bool is_drop_ship_for_so_Set() const;
    bool is_drop_ship_for_so_Valid() const;

    double getDropShipForSoPrepared() const;
    void setDropShipForSoPrepared(const double &drop_ship_for_so_prepared);
    bool is_drop_ship_for_so_prepared_Set() const;
    bool is_drop_ship_for_so_prepared_Valid() const;

    double getDropShipForSoReceipts() const;
    void setDropShipForSoReceipts(const double &drop_ship_for_so_receipts);
    bool is_drop_ship_for_so_receipts_Set() const;
    bool is_drop_ship_for_so_receipts_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    double getEstimatedTotalCost() const;
    void setEstimatedTotalCost(const double &estimated_total_cost);
    bool is_estimated_total_cost_Set() const;
    bool is_estimated_total_cost_Valid() const;

    double getEstimatedUnitCost() const;
    void setEstimatedUnitCost(const double &estimated_unit_cost);
    bool is_estimated_unit_cost_Set() const;
    bool is_estimated_unit_cost_Valid() const;

    double getExpired() const;
    void setExpired(const double &expired);
    bool is_expired_Set() const;
    bool is_expired_Valid() const;

    double getInAssemblyDemand() const;
    void setInAssemblyDemand(const double &in_assembly_demand);
    bool is_in_assembly_demand_Set() const;
    bool is_in_assembly_demand_Valid() const;

    double getInAssemblySupply() const;
    void setInAssemblySupply(const double &in_assembly_supply);
    bool is_in_assembly_supply_Set() const;
    bool is_in_assembly_supply_Valid() const;

    double getInIssues() const;
    void setInIssues(const double &in_issues);
    bool is_in_issues_Set() const;
    bool is_in_issues_Valid() const;

    double getInReceipts() const;
    void setInReceipts(const double &in_receipts);
    bool is_in_receipts_Set() const;
    bool is_in_receipts_Valid() const;

    double getInTransit() const;
    void setInTransit(const double &in_transit);
    bool is_in_transit_Set() const;
    bool is_in_transit_Valid() const;

    OAIInventoryInInventorySummaryDto getInventory() const;
    void setInventory(const OAIInventoryInInventorySummaryDto &inventory);
    bool is_inventory_Set() const;
    bool is_inventory_Valid() const;

    OAILocationInInventorySummaryDto getLocation() const;
    void setLocation(const OAILocationInInventorySummaryDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    double getNotAvailable() const;
    void setNotAvailable(const double &not_available);
    bool is_not_available_Set() const;
    bool is_not_available_Valid() const;

    double getOnHand() const;
    void setOnHand(const double &on_hand);
    bool is_on_hand_Set() const;
    bool is_on_hand_Valid() const;

    double getPoReceipts() const;
    void setPoReceipts(const double &po_receipts);
    bool is_po_receipts_Set() const;
    bool is_po_receipts_Valid() const;

    double getPurchaseForSo() const;
    void setPurchaseForSo(const double &purchase_for_so);
    bool is_purchase_for_so_Set() const;
    bool is_purchase_for_so_Valid() const;

    double getPurchaseForSoPrepared() const;
    void setPurchaseForSoPrepared(const double &purchase_for_so_prepared);
    bool is_purchase_for_so_prepared_Set() const;
    bool is_purchase_for_so_prepared_Valid() const;

    double getPurchaseForSoReceipts() const;
    void setPurchaseForSoReceipts(const double &purchase_for_so_receipts);
    bool is_purchase_for_so_receipts_Set() const;
    bool is_purchase_for_so_receipts_Valid() const;

    double getPurchaseOrders() const;
    void setPurchaseOrders(const double &purchase_orders);
    bool is_purchase_orders_Set() const;
    bool is_purchase_orders_Valid() const;

    double getPurchasePrepared() const;
    void setPurchasePrepared(const double &purchase_prepared);
    bool is_purchase_prepared_Set() const;
    bool is_purchase_prepared_Valid() const;

    double getSoAllocated() const;
    void setSoAllocated(const double &so_allocated);
    bool is_so_allocated_Set() const;
    bool is_so_allocated_Valid() const;

    double getSoBackOrdered() const;
    void setSoBackOrdered(const double &so_back_ordered);
    bool is_so_back_ordered_Set() const;
    bool is_so_back_ordered_Valid() const;

    double getSoBooked() const;
    void setSoBooked(const double &so_booked);
    bool is_so_booked_Set() const;
    bool is_so_booked_Valid() const;

    double getSoShipped() const;
    void setSoShipped(const double &so_shipped);
    bool is_so_shipped_Set() const;
    bool is_so_shipped_Valid() const;

    double getSoToDropShip() const;
    void setSoToDropShip(const double &so_to_drop_ship);
    bool is_so_to_drop_ship_Set() const;
    bool is_so_to_drop_ship_Valid() const;

    double getSoToPurchase() const;
    void setSoToPurchase(const double &so_to_purchase);
    bool is_so_to_purchase_Set() const;
    bool is_so_to_purchase_Valid() const;

    OAIWarehouseInInventorySummaryDto getWarehouse() const;
    void setWarehouse(const OAIWarehouseInInventorySummaryDto &warehouse);
    bool is_warehouse_Set() const;
    bool is_warehouse_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    double m_available_for_shipment;
    bool m_available_for_shipment_isSet;
    bool m_available_for_shipment_isValid;

    QString m_base_unit;
    bool m_base_unit_isSet;
    bool m_base_unit_isValid;

    double m_drop_ship_for_so;
    bool m_drop_ship_for_so_isSet;
    bool m_drop_ship_for_so_isValid;

    double m_drop_ship_for_so_prepared;
    bool m_drop_ship_for_so_prepared_isSet;
    bool m_drop_ship_for_so_prepared_isValid;

    double m_drop_ship_for_so_receipts;
    bool m_drop_ship_for_so_receipts_isSet;
    bool m_drop_ship_for_so_receipts_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    double m_estimated_total_cost;
    bool m_estimated_total_cost_isSet;
    bool m_estimated_total_cost_isValid;

    double m_estimated_unit_cost;
    bool m_estimated_unit_cost_isSet;
    bool m_estimated_unit_cost_isValid;

    double m_expired;
    bool m_expired_isSet;
    bool m_expired_isValid;

    double m_in_assembly_demand;
    bool m_in_assembly_demand_isSet;
    bool m_in_assembly_demand_isValid;

    double m_in_assembly_supply;
    bool m_in_assembly_supply_isSet;
    bool m_in_assembly_supply_isValid;

    double m_in_issues;
    bool m_in_issues_isSet;
    bool m_in_issues_isValid;

    double m_in_receipts;
    bool m_in_receipts_isSet;
    bool m_in_receipts_isValid;

    double m_in_transit;
    bool m_in_transit_isSet;
    bool m_in_transit_isValid;

    OAIInventoryInInventorySummaryDto m_inventory;
    bool m_inventory_isSet;
    bool m_inventory_isValid;

    OAILocationInInventorySummaryDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    double m_not_available;
    bool m_not_available_isSet;
    bool m_not_available_isValid;

    double m_on_hand;
    bool m_on_hand_isSet;
    bool m_on_hand_isValid;

    double m_po_receipts;
    bool m_po_receipts_isSet;
    bool m_po_receipts_isValid;

    double m_purchase_for_so;
    bool m_purchase_for_so_isSet;
    bool m_purchase_for_so_isValid;

    double m_purchase_for_so_prepared;
    bool m_purchase_for_so_prepared_isSet;
    bool m_purchase_for_so_prepared_isValid;

    double m_purchase_for_so_receipts;
    bool m_purchase_for_so_receipts_isSet;
    bool m_purchase_for_so_receipts_isValid;

    double m_purchase_orders;
    bool m_purchase_orders_isSet;
    bool m_purchase_orders_isValid;

    double m_purchase_prepared;
    bool m_purchase_prepared_isSet;
    bool m_purchase_prepared_isValid;

    double m_so_allocated;
    bool m_so_allocated_isSet;
    bool m_so_allocated_isValid;

    double m_so_back_ordered;
    bool m_so_back_ordered_isSet;
    bool m_so_back_ordered_isValid;

    double m_so_booked;
    bool m_so_booked_isSet;
    bool m_so_booked_isValid;

    double m_so_shipped;
    bool m_so_shipped_isSet;
    bool m_so_shipped_isValid;

    double m_so_to_drop_ship;
    bool m_so_to_drop_ship_isSet;
    bool m_so_to_drop_ship_isValid;

    double m_so_to_purchase;
    bool m_so_to_purchase_isSet;
    bool m_so_to_purchase_isValid;

    OAIWarehouseInInventorySummaryDto m_warehouse;
    bool m_warehouse_isSet;
    bool m_warehouse_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventorySummaryDto)

#endif // OAIInventorySummaryDto_H
