/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInventoryReceiptLineUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInventoryReceiptLineUpdateDto::OAIInventoryReceiptLineUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInventoryReceiptLineUpdateDto::OAIInventoryReceiptLineUpdateDto() {
    this->initializeModel();
}

OAIInventoryReceiptLineUpdateDto::~OAIInventoryReceiptLineUpdateDto() {}

void OAIInventoryReceiptLineUpdateDto::initializeModel() {

    m_branch_number_isSet = false;
    m_branch_number_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_ext_cost_isSet = false;
    m_ext_cost_isValid = false;

    m_inventory_number_isSet = false;
    m_inventory_number_isValid = false;

    m_line_number_isSet = false;
    m_line_number_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_reason_code_isSet = false;
    m_reason_code_isValid = false;

    m_unit_cost_isSet = false;
    m_unit_cost_isValid = false;

    m_uom_isSet = false;
    m_uom_isValid = false;

    m_warehouse_id_isSet = false;
    m_warehouse_id_isValid = false;
}

void OAIInventoryReceiptLineUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInventoryReceiptLineUpdateDto::fromJsonObject(QJsonObject json) {

    m_branch_number_isValid = ::OpenAPI::fromJsonValue(m_branch_number, json[QString("branchNumber")]);
    m_branch_number_isSet = !json[QString("branchNumber")].isNull() && m_branch_number_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_ext_cost_isValid = ::OpenAPI::fromJsonValue(m_ext_cost, json[QString("extCost")]);
    m_ext_cost_isSet = !json[QString("extCost")].isNull() && m_ext_cost_isValid;

    m_inventory_number_isValid = ::OpenAPI::fromJsonValue(m_inventory_number, json[QString("inventoryNumber")]);
    m_inventory_number_isSet = !json[QString("inventoryNumber")].isNull() && m_inventory_number_isValid;

    m_line_number_isValid = ::OpenAPI::fromJsonValue(m_line_number, json[QString("lineNumber")]);
    m_line_number_isSet = !json[QString("lineNumber")].isNull() && m_line_number_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_reason_code_isValid = ::OpenAPI::fromJsonValue(m_reason_code, json[QString("reasonCode")]);
    m_reason_code_isSet = !json[QString("reasonCode")].isNull() && m_reason_code_isValid;

    m_unit_cost_isValid = ::OpenAPI::fromJsonValue(m_unit_cost, json[QString("unitCost")]);
    m_unit_cost_isSet = !json[QString("unitCost")].isNull() && m_unit_cost_isValid;

    m_uom_isValid = ::OpenAPI::fromJsonValue(m_uom, json[QString("uom")]);
    m_uom_isSet = !json[QString("uom")].isNull() && m_uom_isValid;

    m_warehouse_id_isValid = ::OpenAPI::fromJsonValue(m_warehouse_id, json[QString("warehouseId")]);
    m_warehouse_id_isSet = !json[QString("warehouseId")].isNull() && m_warehouse_id_isValid;
}

QString OAIInventoryReceiptLineUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInventoryReceiptLineUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_number.isSet()) {
        obj.insert(QString("branchNumber"), ::OpenAPI::toJsonValue(m_branch_number));
    }
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_ext_cost.isSet()) {
        obj.insert(QString("extCost"), ::OpenAPI::toJsonValue(m_ext_cost));
    }
    if (m_inventory_number.isSet()) {
        obj.insert(QString("inventoryNumber"), ::OpenAPI::toJsonValue(m_inventory_number));
    }
    if (m_line_number.isSet()) {
        obj.insert(QString("lineNumber"), ::OpenAPI::toJsonValue(m_line_number));
    }
    if (m_location_id.isSet()) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_quantity.isSet()) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_reason_code.isSet()) {
        obj.insert(QString("reasonCode"), ::OpenAPI::toJsonValue(m_reason_code));
    }
    if (m_unit_cost.isSet()) {
        obj.insert(QString("unitCost"), ::OpenAPI::toJsonValue(m_unit_cost));
    }
    if (m_uom.isSet()) {
        obj.insert(QString("uom"), ::OpenAPI::toJsonValue(m_uom));
    }
    if (m_warehouse_id.isSet()) {
        obj.insert(QString("warehouseId"), ::OpenAPI::toJsonValue(m_warehouse_id));
    }
    return obj;
}

OAIDtoValueOfString OAIInventoryReceiptLineUpdateDto::getBranchNumber() const {
    return m_branch_number;
}
void OAIInventoryReceiptLineUpdateDto::setBranchNumber(const OAIDtoValueOfString &branch_number) {
    m_branch_number = branch_number;
    m_branch_number_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_branch_number_Set() const{
    return m_branch_number_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_branch_number_Valid() const{
    return m_branch_number_isValid;
}

OAIDtoValueOfString OAIInventoryReceiptLineUpdateDto::getDescription() const {
    return m_description;
}
void OAIInventoryReceiptLineUpdateDto::setDescription(const OAIDtoValueOfString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_description_Valid() const{
    return m_description_isValid;
}

OAIDtoValueOfNullableOfDecimal OAIInventoryReceiptLineUpdateDto::getExtCost() const {
    return m_ext_cost;
}
void OAIInventoryReceiptLineUpdateDto::setExtCost(const OAIDtoValueOfNullableOfDecimal &ext_cost) {
    m_ext_cost = ext_cost;
    m_ext_cost_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_ext_cost_Set() const{
    return m_ext_cost_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_ext_cost_Valid() const{
    return m_ext_cost_isValid;
}

OAIDtoValueOfString OAIInventoryReceiptLineUpdateDto::getInventoryNumber() const {
    return m_inventory_number;
}
void OAIInventoryReceiptLineUpdateDto::setInventoryNumber(const OAIDtoValueOfString &inventory_number) {
    m_inventory_number = inventory_number;
    m_inventory_number_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_inventory_number_Set() const{
    return m_inventory_number_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_inventory_number_Valid() const{
    return m_inventory_number_isValid;
}

OAIDtoValueOfInt32 OAIInventoryReceiptLineUpdateDto::getLineNumber() const {
    return m_line_number;
}
void OAIInventoryReceiptLineUpdateDto::setLineNumber(const OAIDtoValueOfInt32 &line_number) {
    m_line_number = line_number;
    m_line_number_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_line_number_Set() const{
    return m_line_number_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_line_number_Valid() const{
    return m_line_number_isValid;
}

OAIDtoValueOfString OAIInventoryReceiptLineUpdateDto::getLocationId() const {
    return m_location_id;
}
void OAIInventoryReceiptLineUpdateDto::setLocationId(const OAIDtoValueOfString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAIInventoryReceiptLineUpdateDto::getOperation() const {
    return m_operation;
}
void OAIInventoryReceiptLineUpdateDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_operation_Valid() const{
    return m_operation_isValid;
}

OAIDtoValueOfNullableOfDecimal OAIInventoryReceiptLineUpdateDto::getQuantity() const {
    return m_quantity;
}
void OAIInventoryReceiptLineUpdateDto::setQuantity(const OAIDtoValueOfNullableOfDecimal &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_quantity_Valid() const{
    return m_quantity_isValid;
}

OAIDtoValueOfString OAIInventoryReceiptLineUpdateDto::getReasonCode() const {
    return m_reason_code;
}
void OAIInventoryReceiptLineUpdateDto::setReasonCode(const OAIDtoValueOfString &reason_code) {
    m_reason_code = reason_code;
    m_reason_code_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_reason_code_Set() const{
    return m_reason_code_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_reason_code_Valid() const{
    return m_reason_code_isValid;
}

OAIDtoValueOfNullableOfDecimal OAIInventoryReceiptLineUpdateDto::getUnitCost() const {
    return m_unit_cost;
}
void OAIInventoryReceiptLineUpdateDto::setUnitCost(const OAIDtoValueOfNullableOfDecimal &unit_cost) {
    m_unit_cost = unit_cost;
    m_unit_cost_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_unit_cost_Set() const{
    return m_unit_cost_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_unit_cost_Valid() const{
    return m_unit_cost_isValid;
}

OAIDtoValueOfString OAIInventoryReceiptLineUpdateDto::getUom() const {
    return m_uom;
}
void OAIInventoryReceiptLineUpdateDto::setUom(const OAIDtoValueOfString &uom) {
    m_uom = uom;
    m_uom_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_uom_Set() const{
    return m_uom_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_uom_Valid() const{
    return m_uom_isValid;
}

OAIDtoValueOfString OAIInventoryReceiptLineUpdateDto::getWarehouseId() const {
    return m_warehouse_id;
}
void OAIInventoryReceiptLineUpdateDto::setWarehouseId(const OAIDtoValueOfString &warehouse_id) {
    m_warehouse_id = warehouse_id;
    m_warehouse_id_isSet = true;
}

bool OAIInventoryReceiptLineUpdateDto::is_warehouse_id_Set() const{
    return m_warehouse_id_isSet;
}

bool OAIInventoryReceiptLineUpdateDto::is_warehouse_id_Valid() const{
    return m_warehouse_id_isValid;
}

bool OAIInventoryReceiptLineUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ext_cost.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_reason_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_cost.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uom.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInventoryReceiptLineUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
