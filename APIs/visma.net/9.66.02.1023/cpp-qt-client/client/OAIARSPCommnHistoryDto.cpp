/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIARSPCommnHistoryDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIARSPCommnHistoryDto::OAIARSPCommnHistoryDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIARSPCommnHistoryDto::OAIARSPCommnHistoryDto() {
    this->initializeModel();
}

OAIARSPCommnHistoryDto::~OAIARSPCommnHistoryDto() {}

void OAIARSPCommnHistoryDto::initializeModel() {

    m_commn_amt_isSet = false;
    m_commn_amt_isValid = false;

    m_commn_period_isSet = false;
    m_commn_period_isValid = false;

    m_commnbl_amt_isSet = false;
    m_commnbl_amt_isValid = false;

    m_error_info_isSet = false;
    m_error_info_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_pr_processed_date_isSet = false;
    m_pr_processed_date_isValid = false;
}

void OAIARSPCommnHistoryDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIARSPCommnHistoryDto::fromJsonObject(QJsonObject json) {

    m_commn_amt_isValid = ::OpenAPI::fromJsonValue(m_commn_amt, json[QString("commnAmt")]);
    m_commn_amt_isSet = !json[QString("commnAmt")].isNull() && m_commn_amt_isValid;

    m_commn_period_isValid = ::OpenAPI::fromJsonValue(m_commn_period, json[QString("commnPeriod")]);
    m_commn_period_isSet = !json[QString("commnPeriod")].isNull() && m_commn_period_isValid;

    m_commnbl_amt_isValid = ::OpenAPI::fromJsonValue(m_commnbl_amt, json[QString("commnblAmt")]);
    m_commnbl_amt_isSet = !json[QString("commnblAmt")].isNull() && m_commnbl_amt_isValid;

    m_error_info_isValid = ::OpenAPI::fromJsonValue(m_error_info, json[QString("errorInfo")]);
    m_error_info_isSet = !json[QString("errorInfo")].isNull() && m_error_info_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_pr_processed_date_isValid = ::OpenAPI::fromJsonValue(m_pr_processed_date, json[QString("prProcessedDate")]);
    m_pr_processed_date_isSet = !json[QString("prProcessedDate")].isNull() && m_pr_processed_date_isValid;
}

QString OAIARSPCommnHistoryDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIARSPCommnHistoryDto::asJsonObject() const {
    QJsonObject obj;
    if (m_commn_amt_isSet) {
        obj.insert(QString("commnAmt"), ::OpenAPI::toJsonValue(m_commn_amt));
    }
    if (m_commn_period_isSet) {
        obj.insert(QString("commnPeriod"), ::OpenAPI::toJsonValue(m_commn_period));
    }
    if (m_commnbl_amt_isSet) {
        obj.insert(QString("commnblAmt"), ::OpenAPI::toJsonValue(m_commnbl_amt));
    }
    if (m_error_info_isSet) {
        obj.insert(QString("errorInfo"), ::OpenAPI::toJsonValue(m_error_info));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_pr_processed_date_isSet) {
        obj.insert(QString("prProcessedDate"), ::OpenAPI::toJsonValue(m_pr_processed_date));
    }
    return obj;
}

double OAIARSPCommnHistoryDto::getCommnAmt() const {
    return m_commn_amt;
}
void OAIARSPCommnHistoryDto::setCommnAmt(const double &commn_amt) {
    m_commn_amt = commn_amt;
    m_commn_amt_isSet = true;
}

bool OAIARSPCommnHistoryDto::is_commn_amt_Set() const{
    return m_commn_amt_isSet;
}

bool OAIARSPCommnHistoryDto::is_commn_amt_Valid() const{
    return m_commn_amt_isValid;
}

QString OAIARSPCommnHistoryDto::getCommnPeriod() const {
    return m_commn_period;
}
void OAIARSPCommnHistoryDto::setCommnPeriod(const QString &commn_period) {
    m_commn_period = commn_period;
    m_commn_period_isSet = true;
}

bool OAIARSPCommnHistoryDto::is_commn_period_Set() const{
    return m_commn_period_isSet;
}

bool OAIARSPCommnHistoryDto::is_commn_period_Valid() const{
    return m_commn_period_isValid;
}

double OAIARSPCommnHistoryDto::getCommnblAmt() const {
    return m_commnbl_amt;
}
void OAIARSPCommnHistoryDto::setCommnblAmt(const double &commnbl_amt) {
    m_commnbl_amt = commnbl_amt;
    m_commnbl_amt_isSet = true;
}

bool OAIARSPCommnHistoryDto::is_commnbl_amt_Set() const{
    return m_commnbl_amt_isSet;
}

bool OAIARSPCommnHistoryDto::is_commnbl_amt_Valid() const{
    return m_commnbl_amt_isValid;
}

QString OAIARSPCommnHistoryDto::getErrorInfo() const {
    return m_error_info;
}
void OAIARSPCommnHistoryDto::setErrorInfo(const QString &error_info) {
    m_error_info = error_info;
    m_error_info_isSet = true;
}

bool OAIARSPCommnHistoryDto::is_error_info_Set() const{
    return m_error_info_isSet;
}

bool OAIARSPCommnHistoryDto::is_error_info_Valid() const{
    return m_error_info_isValid;
}

OAIMetadataDto OAIARSPCommnHistoryDto::getMetadata() const {
    return m_metadata;
}
void OAIARSPCommnHistoryDto::setMetadata(const OAIMetadataDto &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIARSPCommnHistoryDto::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIARSPCommnHistoryDto::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QDateTime OAIARSPCommnHistoryDto::getPrProcessedDate() const {
    return m_pr_processed_date;
}
void OAIARSPCommnHistoryDto::setPrProcessedDate(const QDateTime &pr_processed_date) {
    m_pr_processed_date = pr_processed_date;
    m_pr_processed_date_isSet = true;
}

bool OAIARSPCommnHistoryDto::is_pr_processed_date_Set() const{
    return m_pr_processed_date_isSet;
}

bool OAIARSPCommnHistoryDto::is_pr_processed_date_Valid() const{
    return m_pr_processed_date_isValid;
}

bool OAIARSPCommnHistoryDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commn_amt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commn_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commnbl_amt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pr_processed_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIARSPCommnHistoryDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
