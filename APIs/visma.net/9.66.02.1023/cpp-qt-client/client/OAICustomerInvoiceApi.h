/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAICustomerInvoiceApi_H
#define OAI_OAICustomerInvoiceApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBackgroundApiAcceptedDto.h"
#include "OAICorrectArDocumentActionResultDto.h"
#include "OAICustomerInvoiceDto.h"
#include "OAICustomerInvoiceUpdateDto.h"
#include "OAIObject.h"
#include "OAIReleaseInvoiceActionResultDto.h"
#include "OAIReverseInvoiceActionDto.h"
#include "OAIReverseInvoiceActionResultDto.h"
#include "OAIRotRutDto.h"
#include "OAISendToAutoInvoiceArDocumentActionResultDto.h"
#include "OAIWorkTypeDto.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAICustomerInvoiceApi : public QObject {
    Q_OBJECT

public:
    OAICustomerInvoiceApi(const int timeOut = 0);
    ~OAICustomerInvoiceApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceCorrectInvoiceByinvoiceNumber(const QString &invoice_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  oai_customer_invoice_update_dto OAICustomerInvoiceUpdateDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void customerInvoiceCreate(const OAICustomerInvoiceUpdateDto &oai_customer_invoice_update_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceCreateHeaderAttachmentByinvoiceNumber(const QString &invoice_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  line_number qint32 [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumber(const QString &invoice_number, const qint32 &line_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceDeleteByinvoiceNumber(const QString &invoice_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  document_type QString [optional]
    * @param[in]  released qint32 [optional]
    * @param[in]  dunning_level qint32 [optional]
    * @param[in]  closed_financial_period QString [optional]
    * @param[in]  dunning_letter_date_time QString [optional]
    * @param[in]  dunning_letter_date_time_condition QString [optional]
    * @param[in]  project QString [optional]
    * @param[in]  expand_applications bool [optional]
    * @param[in]  expand_dunning_information bool [optional]
    * @param[in]  expand_attachments bool [optional]
    * @param[in]  expand_tax_details bool [optional]
    * @param[in]  expand_invoice_address bool [optional]
    * @param[in]  financial_period QString [optional]
    * @param[in]  document_due_date QDateTime [optional]
    * @param[in]  status QString [optional]
    * @param[in]  number_to_read qint32 [optional]
    * @param[in]  skip_records qint32 [optional]
    * @param[in]  external_reference QString [optional]
    * @param[in]  payment_reference QString [optional]
    * @param[in]  customer_ref_number QString [optional]
    * @param[in]  greater_than_value QString [optional]
    * @param[in]  last_modified_date_time QString [optional]
    * @param[in]  last_modified_date_time_condition QString [optional]
    * @param[in]  created_date_time QString [optional]
    * @param[in]  created_date_time_condition QString [optional]
    * @param[in]  page_number qint32 [optional]
    * @param[in]  page_size qint32 [optional]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceGetAll(const ::OpenAPI::OptionalParam<QString> &document_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &released = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &dunning_level = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &closed_financial_period = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dunning_letter_date_time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dunning_letter_date_time_condition = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &project = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &expand_applications = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_dunning_information = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_attachments = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_tax_details = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_invoice_address = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &financial_period = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QDateTime> &document_due_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<QString> &status = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &number_to_read = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &skip_records = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &external_reference = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payment_reference = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &customer_ref_number = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &greater_than_value = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_modified_date_time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_modified_date_time_condition = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_date_time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_date_time_condition = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &page_number = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &page_size = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceGetByinvoiceNumber(const QString &invoice_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  ref_nbr QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceGetRotRutByrefNbr(const QString &ref_nbr, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceGetWorkTypes(const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  ref_nbr QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoicePrintInvoiceByrefNbr(const QString &ref_nbr, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceReleaseInvoiceByinvoiceNumber(const QString &invoice_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  oai_reverse_invoice_action_dto OAIReverseInvoiceActionDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumber(const QString &invoice_number, const OAIReverseInvoiceActionDto &oai_reverse_invoice_action_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  oai_reverse_invoice_action_dto OAIReverseInvoiceActionDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceReverseInvoiceByinvoiceNumber(const QString &invoice_number, const OAIReverseInvoiceActionDto &oai_reverse_invoice_action_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceSendToAutoInvoiceByinvoiceNumber(const QString &invoice_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  invoice_number QString [required]
    * @param[in]  oai_customer_invoice_update_dto OAICustomerInvoiceUpdateDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void customerInvoiceUpdateByinvoiceNumber(const QString &invoice_number, const OAICustomerInvoiceUpdateDto &oai_customer_invoice_update_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void customerInvoiceCorrectInvoiceByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceCreateCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceCreateHeaderAttachmentByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceDeleteByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceGetAllCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceGetByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceGetRotRutByrefNbrCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceGetWorkTypesCallback(OAIHttpRequestWorker *worker);
    void customerInvoicePrintInvoiceByrefNbrCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceReleaseInvoiceByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceReverseInvoiceByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceSendToAutoInvoiceByinvoiceNumberCallback(OAIHttpRequestWorker *worker);
    void customerInvoiceUpdateByinvoiceNumberCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void customerInvoiceCorrectInvoiceByinvoiceNumberSignal(OAICorrectArDocumentActionResultDto summary);
    void customerInvoiceCreateSignal(OAIObject summary);
    void customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignal(OAIObject summary);
    void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignal(OAIObject summary);
    void customerInvoiceDeleteByinvoiceNumberSignal(OAIBackgroundApiAcceptedDto summary);
    void customerInvoiceGetAllSignal(QList<OAICustomerInvoiceDto> summary);
    void customerInvoiceGetByinvoiceNumberSignal(OAICustomerInvoiceDto summary);
    void customerInvoiceGetRotRutByrefNbrSignal(OAIRotRutDto summary);
    void customerInvoiceGetWorkTypesSignal(QList<OAIWorkTypeDto> summary);
    void customerInvoicePrintInvoiceByrefNbrSignal(OAIObject summary);
    void customerInvoiceReleaseInvoiceByinvoiceNumberSignal(OAIReleaseInvoiceActionResultDto summary);
    void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignal(OAIObject summary);
    void customerInvoiceReverseInvoiceByinvoiceNumberSignal(OAIReverseInvoiceActionResultDto summary);
    void customerInvoiceSendToAutoInvoiceByinvoiceNumberSignal(OAISendToAutoInvoiceArDocumentActionResultDto summary);
    void customerInvoiceUpdateByinvoiceNumberSignal(OAIBackgroundApiAcceptedDto summary);


    void customerInvoiceCorrectInvoiceByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAICorrectArDocumentActionResultDto summary);
    void customerInvoiceCreateSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void customerInvoiceDeleteByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);
    void customerInvoiceGetAllSignalFull(OAIHttpRequestWorker *worker, QList<OAICustomerInvoiceDto> summary);
    void customerInvoiceGetByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAICustomerInvoiceDto summary);
    void customerInvoiceGetRotRutByrefNbrSignalFull(OAIHttpRequestWorker *worker, OAIRotRutDto summary);
    void customerInvoiceGetWorkTypesSignalFull(OAIHttpRequestWorker *worker, QList<OAIWorkTypeDto> summary);
    void customerInvoicePrintInvoiceByrefNbrSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void customerInvoiceReleaseInvoiceByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAIReleaseInvoiceActionResultDto summary);
    void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void customerInvoiceReverseInvoiceByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAIReverseInvoiceActionResultDto summary);
    void customerInvoiceSendToAutoInvoiceByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAISendToAutoInvoiceArDocumentActionResultDto summary);
    void customerInvoiceUpdateByinvoiceNumberSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);

    Q_DECL_DEPRECATED_X("Use customerInvoiceCorrectInvoiceByinvoiceNumberSignalError() instead")
    void customerInvoiceCorrectInvoiceByinvoiceNumberSignalE(OAICorrectArDocumentActionResultDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCorrectInvoiceByinvoiceNumberSignalError(OAICorrectArDocumentActionResultDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceCreateSignalError() instead")
    void customerInvoiceCreateSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCreateSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignalError() instead")
    void customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignalError() instead")
    void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceDeleteByinvoiceNumberSignalError() instead")
    void customerInvoiceDeleteByinvoiceNumberSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceDeleteByinvoiceNumberSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetAllSignalError() instead")
    void customerInvoiceGetAllSignalE(QList<OAICustomerInvoiceDto> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetAllSignalError(QList<OAICustomerInvoiceDto> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetByinvoiceNumberSignalError() instead")
    void customerInvoiceGetByinvoiceNumberSignalE(OAICustomerInvoiceDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetByinvoiceNumberSignalError(OAICustomerInvoiceDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetRotRutByrefNbrSignalError() instead")
    void customerInvoiceGetRotRutByrefNbrSignalE(OAIRotRutDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetRotRutByrefNbrSignalError(OAIRotRutDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetWorkTypesSignalError() instead")
    void customerInvoiceGetWorkTypesSignalE(QList<OAIWorkTypeDto> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetWorkTypesSignalError(QList<OAIWorkTypeDto> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoicePrintInvoiceByrefNbrSignalError() instead")
    void customerInvoicePrintInvoiceByrefNbrSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoicePrintInvoiceByrefNbrSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceReleaseInvoiceByinvoiceNumberSignalError() instead")
    void customerInvoiceReleaseInvoiceByinvoiceNumberSignalE(OAIReleaseInvoiceActionResultDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceReleaseInvoiceByinvoiceNumberSignalError(OAIReleaseInvoiceActionResultDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignalError() instead")
    void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceReverseInvoiceByinvoiceNumberSignalError() instead")
    void customerInvoiceReverseInvoiceByinvoiceNumberSignalE(OAIReverseInvoiceActionResultDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceReverseInvoiceByinvoiceNumberSignalError(OAIReverseInvoiceActionResultDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceSendToAutoInvoiceByinvoiceNumberSignalError() instead")
    void customerInvoiceSendToAutoInvoiceByinvoiceNumberSignalE(OAISendToAutoInvoiceArDocumentActionResultDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceSendToAutoInvoiceByinvoiceNumberSignalError(OAISendToAutoInvoiceArDocumentActionResultDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceUpdateByinvoiceNumberSignalError() instead")
    void customerInvoiceUpdateByinvoiceNumberSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceUpdateByinvoiceNumberSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use customerInvoiceCorrectInvoiceByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceCorrectInvoiceByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCorrectInvoiceByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceCreateSignalErrorFull() instead")
    void customerInvoiceCreateSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCreateSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCreateHeaderAttachmentByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignalErrorFull() instead")
    void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceCreateLineAttachmentByinvoiceNumberlineNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceDeleteByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceDeleteByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceDeleteByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetAllSignalErrorFull() instead")
    void customerInvoiceGetAllSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetAllSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceGetByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetRotRutByrefNbrSignalErrorFull() instead")
    void customerInvoiceGetRotRutByrefNbrSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetRotRutByrefNbrSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceGetWorkTypesSignalErrorFull() instead")
    void customerInvoiceGetWorkTypesSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceGetWorkTypesSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoicePrintInvoiceByrefNbrSignalErrorFull() instead")
    void customerInvoicePrintInvoiceByrefNbrSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoicePrintInvoiceByrefNbrSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceReleaseInvoiceByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceReleaseInvoiceByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceReleaseInvoiceByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceReverseInvoiceAndApplyToNoteByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceReverseInvoiceByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceReverseInvoiceByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceReverseInvoiceByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceSendToAutoInvoiceByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceSendToAutoInvoiceByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceSendToAutoInvoiceByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use customerInvoiceUpdateByinvoiceNumberSignalErrorFull() instead")
    void customerInvoiceUpdateByinvoiceNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void customerInvoiceUpdateByinvoiceNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
