/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeCardUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeCardUpdateDto::OAITimeCardUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeCardUpdateDto::OAITimeCardUpdateDto() {
    this->initializeModel();
}

OAITimeCardUpdateDto::~OAITimeCardUpdateDto() {}

void OAITimeCardUpdateDto::initializeModel() {

    m_employee_isSet = false;
    m_employee_isValid = false;

    m_materials_isSet = false;
    m_materials_isValid = false;

    m_ref_nbr_isSet = false;
    m_ref_nbr_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;
}

void OAITimeCardUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeCardUpdateDto::fromJsonObject(QJsonObject json) {

    m_employee_isValid = ::OpenAPI::fromJsonValue(m_employee, json[QString("employee")]);
    m_employee_isSet = !json[QString("employee")].isNull() && m_employee_isValid;

    m_materials_isValid = ::OpenAPI::fromJsonValue(m_materials, json[QString("materials")]);
    m_materials_isSet = !json[QString("materials")].isNull() && m_materials_isValid;

    m_ref_nbr_isValid = ::OpenAPI::fromJsonValue(m_ref_nbr, json[QString("refNbr")]);
    m_ref_nbr_isSet = !json[QString("refNbr")].isNull() && m_ref_nbr_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("summary")]);
    m_summary_isSet = !json[QString("summary")].isNull() && m_summary_isValid;
}

QString OAITimeCardUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeCardUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_employee.isSet()) {
        obj.insert(QString("employee"), ::OpenAPI::toJsonValue(m_employee));
    }
    if (m_materials.size() > 0) {
        obj.insert(QString("materials"), ::OpenAPI::toJsonValue(m_materials));
    }
    if (m_ref_nbr.isSet()) {
        obj.insert(QString("refNbr"), ::OpenAPI::toJsonValue(m_ref_nbr));
    }
    if (m_summary.size() > 0) {
        obj.insert(QString("summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    return obj;
}

OAIDtoValueOfString OAITimeCardUpdateDto::getEmployee() const {
    return m_employee;
}
void OAITimeCardUpdateDto::setEmployee(const OAIDtoValueOfString &employee) {
    m_employee = employee;
    m_employee_isSet = true;
}

bool OAITimeCardUpdateDto::is_employee_Set() const{
    return m_employee_isSet;
}

bool OAITimeCardUpdateDto::is_employee_Valid() const{
    return m_employee_isValid;
}

QList<OAITimeCardMaterialsUpdateDto> OAITimeCardUpdateDto::getMaterials() const {
    return m_materials;
}
void OAITimeCardUpdateDto::setMaterials(const QList<OAITimeCardMaterialsUpdateDto> &materials) {
    m_materials = materials;
    m_materials_isSet = true;
}

bool OAITimeCardUpdateDto::is_materials_Set() const{
    return m_materials_isSet;
}

bool OAITimeCardUpdateDto::is_materials_Valid() const{
    return m_materials_isValid;
}

OAIDtoValueOfString OAITimeCardUpdateDto::getRefNbr() const {
    return m_ref_nbr;
}
void OAITimeCardUpdateDto::setRefNbr(const OAIDtoValueOfString &ref_nbr) {
    m_ref_nbr = ref_nbr;
    m_ref_nbr_isSet = true;
}

bool OAITimeCardUpdateDto::is_ref_nbr_Set() const{
    return m_ref_nbr_isSet;
}

bool OAITimeCardUpdateDto::is_ref_nbr_Valid() const{
    return m_ref_nbr_isValid;
}

QList<OAITimeCardSummaryUpdateDto> OAITimeCardUpdateDto::getSummary() const {
    return m_summary;
}
void OAITimeCardUpdateDto::setSummary(const QList<OAITimeCardSummaryUpdateDto> &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAITimeCardUpdateDto::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAITimeCardUpdateDto::is_summary_Valid() const{
    return m_summary_isValid;
}

bool OAITimeCardUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_employee.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_materials.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_nbr.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeCardUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
