/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeneralLedgerBudgetQueryParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeneralLedgerBudgetQueryParameters::OAIGeneralLedgerBudgetQueryParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeneralLedgerBudgetQueryParameters::OAIGeneralLedgerBudgetQueryParameters() {
    this->initializeModel();
}

OAIGeneralLedgerBudgetQueryParameters::~OAIGeneralLedgerBudgetQueryParameters() {}

void OAIGeneralLedgerBudgetQueryParameters::initializeModel() {

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_financial_year_isSet = false;
    m_financial_year_isValid = false;

    m_greater_than_value_isSet = false;
    m_greater_than_value_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_modified_date_time_condition_isSet = false;
    m_last_modified_date_time_condition_isValid = false;

    m_ledger_isSet = false;
    m_ledger_isValid = false;

    m_number_to_read_isSet = false;
    m_number_to_read_isValid = false;

    m_order_by_isSet = false;
    m_order_by_isValid = false;

    m_skip_records_isSet = false;
    m_skip_records_isValid = false;

    m_subaccount_isSet = false;
    m_subaccount_isValid = false;
}

void OAIGeneralLedgerBudgetQueryParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeneralLedgerBudgetQueryParameters::fromJsonObject(QJsonObject json) {

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_financial_year_isValid = ::OpenAPI::fromJsonValue(m_financial_year, json[QString("financialYear")]);
    m_financial_year_isSet = !json[QString("financialYear")].isNull() && m_financial_year_isValid;

    m_greater_than_value_isValid = ::OpenAPI::fromJsonValue(m_greater_than_value, json[QString("greaterThanValue")]);
    m_greater_than_value_isSet = !json[QString("greaterThanValue")].isNull() && m_greater_than_value_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_modified_date_time_condition_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time_condition, json[QString("lastModifiedDateTimeCondition")]);
    m_last_modified_date_time_condition_isSet = !json[QString("lastModifiedDateTimeCondition")].isNull() && m_last_modified_date_time_condition_isValid;

    m_ledger_isValid = ::OpenAPI::fromJsonValue(m_ledger, json[QString("ledger")]);
    m_ledger_isSet = !json[QString("ledger")].isNull() && m_ledger_isValid;

    m_number_to_read_isValid = ::OpenAPI::fromJsonValue(m_number_to_read, json[QString("numberToRead")]);
    m_number_to_read_isSet = !json[QString("numberToRead")].isNull() && m_number_to_read_isValid;

    m_order_by_isValid = ::OpenAPI::fromJsonValue(m_order_by, json[QString("orderBy")]);
    m_order_by_isSet = !json[QString("orderBy")].isNull() && m_order_by_isValid;

    m_skip_records_isValid = ::OpenAPI::fromJsonValue(m_skip_records, json[QString("skipRecords")]);
    m_skip_records_isSet = !json[QString("skipRecords")].isNull() && m_skip_records_isValid;

    m_subaccount_isValid = ::OpenAPI::fromJsonValue(m_subaccount, json[QString("subaccount")]);
    m_subaccount_isSet = !json[QString("subaccount")].isNull() && m_subaccount_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeneralLedgerBudgetQueryParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_financial_year_isSet) {
        obj.insert(QString("financialYear"), ::OpenAPI::toJsonValue(m_financial_year));
    }
    if (m_greater_than_value_isSet) {
        obj.insert(QString("greaterThanValue"), ::OpenAPI::toJsonValue(m_greater_than_value));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_modified_date_time_condition_isSet) {
        obj.insert(QString("lastModifiedDateTimeCondition"), ::OpenAPI::toJsonValue(m_last_modified_date_time_condition));
    }
    if (m_ledger_isSet) {
        obj.insert(QString("ledger"), ::OpenAPI::toJsonValue(m_ledger));
    }
    if (m_number_to_read_isSet) {
        obj.insert(QString("numberToRead"), ::OpenAPI::toJsonValue(m_number_to_read));
    }
    if (m_order_by_isSet) {
        obj.insert(QString("orderBy"), ::OpenAPI::toJsonValue(m_order_by));
    }
    if (m_skip_records_isSet) {
        obj.insert(QString("skipRecords"), ::OpenAPI::toJsonValue(m_skip_records));
    }
    if (m_subaccount_isSet) {
        obj.insert(QString("subaccount"), ::OpenAPI::toJsonValue(m_subaccount));
    }
    return obj;
}

QString OAIGeneralLedgerBudgetQueryParameters::getBranch() const {
    return m_branch;
}
void OAIGeneralLedgerBudgetQueryParameters::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_branch_Valid() const{
    return m_branch_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::getFinancialYear() const {
    return m_financial_year;
}
void OAIGeneralLedgerBudgetQueryParameters::setFinancialYear(const QString &financial_year) {
    m_financial_year = financial_year;
    m_financial_year_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_financial_year_Set() const{
    return m_financial_year_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_financial_year_Valid() const{
    return m_financial_year_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::getGreaterThanValue() const {
    return m_greater_than_value;
}
void OAIGeneralLedgerBudgetQueryParameters::setGreaterThanValue(const QString &greater_than_value) {
    m_greater_than_value = greater_than_value;
    m_greater_than_value_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_greater_than_value_Set() const{
    return m_greater_than_value_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_greater_than_value_Valid() const{
    return m_greater_than_value_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIGeneralLedgerBudgetQueryParameters::setLastModifiedDateTime(const QString &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::getLastModifiedDateTimeCondition() const {
    return m_last_modified_date_time_condition;
}
void OAIGeneralLedgerBudgetQueryParameters::setLastModifiedDateTimeCondition(const QString &last_modified_date_time_condition) {
    m_last_modified_date_time_condition = last_modified_date_time_condition;
    m_last_modified_date_time_condition_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_last_modified_date_time_condition_Set() const{
    return m_last_modified_date_time_condition_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_last_modified_date_time_condition_Valid() const{
    return m_last_modified_date_time_condition_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::getLedger() const {
    return m_ledger;
}
void OAIGeneralLedgerBudgetQueryParameters::setLedger(const QString &ledger) {
    m_ledger = ledger;
    m_ledger_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_ledger_Set() const{
    return m_ledger_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_ledger_Valid() const{
    return m_ledger_isValid;
}

qint32 OAIGeneralLedgerBudgetQueryParameters::getNumberToRead() const {
    return m_number_to_read;
}
void OAIGeneralLedgerBudgetQueryParameters::setNumberToRead(const qint32 &number_to_read) {
    m_number_to_read = number_to_read;
    m_number_to_read_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_number_to_read_Set() const{
    return m_number_to_read_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_number_to_read_Valid() const{
    return m_number_to_read_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::getOrderBy() const {
    return m_order_by;
}
void OAIGeneralLedgerBudgetQueryParameters::setOrderBy(const QString &order_by) {
    m_order_by = order_by;
    m_order_by_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_order_by_Set() const{
    return m_order_by_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_order_by_Valid() const{
    return m_order_by_isValid;
}

qint32 OAIGeneralLedgerBudgetQueryParameters::getSkipRecords() const {
    return m_skip_records;
}
void OAIGeneralLedgerBudgetQueryParameters::setSkipRecords(const qint32 &skip_records) {
    m_skip_records = skip_records;
    m_skip_records_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_skip_records_Set() const{
    return m_skip_records_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_skip_records_Valid() const{
    return m_skip_records_isValid;
}

QString OAIGeneralLedgerBudgetQueryParameters::getSubaccount() const {
    return m_subaccount;
}
void OAIGeneralLedgerBudgetQueryParameters::setSubaccount(const QString &subaccount) {
    m_subaccount = subaccount;
    m_subaccount_isSet = true;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_subaccount_Set() const{
    return m_subaccount_isSet;
}

bool OAIGeneralLedgerBudgetQueryParameters::is_subaccount_Valid() const{
    return m_subaccount_isValid;
}

bool OAIGeneralLedgerBudgetQueryParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_financial_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_greater_than_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ledger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_to_read_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_records_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeneralLedgerBudgetQueryParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
