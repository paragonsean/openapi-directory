/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBudgetDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBudgetDto::OAIBudgetDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBudgetDto::OAIBudgetDto() {
    this->initializeModel();
}

OAIBudgetDto::~OAIBudgetDto() {}

void OAIBudgetDto::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_branch_number_isSet = false;
    m_branch_number_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_distributed_amount_isSet = false;
    m_distributed_amount_isValid = false;

    m_financial_year_isSet = false;
    m_financial_year_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_periods_isSet = false;
    m_periods_isValid = false;

    m_released_isSet = false;
    m_released_isValid = false;

    m_released_amount_isSet = false;
    m_released_amount_isValid = false;

    m_subaccount_isSet = false;
    m_subaccount_isValid = false;
}

void OAIBudgetDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBudgetDto::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_branch_number_isValid = ::OpenAPI::fromJsonValue(m_branch_number, json[QString("branchNumber")]);
    m_branch_number_isSet = !json[QString("branchNumber")].isNull() && m_branch_number_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_distributed_amount_isValid = ::OpenAPI::fromJsonValue(m_distributed_amount, json[QString("distributedAmount")]);
    m_distributed_amount_isSet = !json[QString("distributedAmount")].isNull() && m_distributed_amount_isValid;

    m_financial_year_isValid = ::OpenAPI::fromJsonValue(m_financial_year, json[QString("financialYear")]);
    m_financial_year_isSet = !json[QString("financialYear")].isNull() && m_financial_year_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_periods_isValid = ::OpenAPI::fromJsonValue(m_periods, json[QString("periods")]);
    m_periods_isSet = !json[QString("periods")].isNull() && m_periods_isValid;

    m_released_isValid = ::OpenAPI::fromJsonValue(m_released, json[QString("released")]);
    m_released_isSet = !json[QString("released")].isNull() && m_released_isValid;

    m_released_amount_isValid = ::OpenAPI::fromJsonValue(m_released_amount, json[QString("releasedAmount")]);
    m_released_amount_isSet = !json[QString("releasedAmount")].isNull() && m_released_amount_isValid;

    m_subaccount_isValid = ::OpenAPI::fromJsonValue(m_subaccount, json[QString("subaccount")]);
    m_subaccount_isSet = !json[QString("subaccount")].isNull() && m_subaccount_isValid;
}

QString OAIBudgetDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBudgetDto::asJsonObject() const {
    QJsonObject obj;
    if (m_account.isSet()) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_branch_number.isSet()) {
        obj.insert(QString("branchNumber"), ::OpenAPI::toJsonValue(m_branch_number));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_distributed_amount_isSet) {
        obj.insert(QString("distributedAmount"), ::OpenAPI::toJsonValue(m_distributed_amount));
    }
    if (m_financial_year_isSet) {
        obj.insert(QString("financialYear"), ::OpenAPI::toJsonValue(m_financial_year));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_periods.size() > 0) {
        obj.insert(QString("periods"), ::OpenAPI::toJsonValue(m_periods));
    }
    if (m_released_isSet) {
        obj.insert(QString("released"), ::OpenAPI::toJsonValue(m_released));
    }
    if (m_released_amount_isSet) {
        obj.insert(QString("releasedAmount"), ::OpenAPI::toJsonValue(m_released_amount));
    }
    if (m_subaccount.isSet()) {
        obj.insert(QString("subaccount"), ::OpenAPI::toJsonValue(m_subaccount));
    }
    return obj;
}

OAIAccountInBudgetDto OAIBudgetDto::getAccount() const {
    return m_account;
}
void OAIBudgetDto::setAccount(const OAIAccountInBudgetDto &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIBudgetDto::is_account_Set() const{
    return m_account_isSet;
}

bool OAIBudgetDto::is_account_Valid() const{
    return m_account_isValid;
}

double OAIBudgetDto::getAmount() const {
    return m_amount;
}
void OAIBudgetDto::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIBudgetDto::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIBudgetDto::is_amount_Valid() const{
    return m_amount_isValid;
}

OAIBranchNumberInBudgetDto OAIBudgetDto::getBranchNumber() const {
    return m_branch_number;
}
void OAIBudgetDto::setBranchNumber(const OAIBranchNumberInBudgetDto &branch_number) {
    m_branch_number = branch_number;
    m_branch_number_isSet = true;
}

bool OAIBudgetDto::is_branch_number_Set() const{
    return m_branch_number_isSet;
}

bool OAIBudgetDto::is_branch_number_Valid() const{
    return m_branch_number_isValid;
}

QString OAIBudgetDto::getDescription() const {
    return m_description;
}
void OAIBudgetDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIBudgetDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIBudgetDto::is_description_Valid() const{
    return m_description_isValid;
}

double OAIBudgetDto::getDistributedAmount() const {
    return m_distributed_amount;
}
void OAIBudgetDto::setDistributedAmount(const double &distributed_amount) {
    m_distributed_amount = distributed_amount;
    m_distributed_amount_isSet = true;
}

bool OAIBudgetDto::is_distributed_amount_Set() const{
    return m_distributed_amount_isSet;
}

bool OAIBudgetDto::is_distributed_amount_Valid() const{
    return m_distributed_amount_isValid;
}

QString OAIBudgetDto::getFinancialYear() const {
    return m_financial_year;
}
void OAIBudgetDto::setFinancialYear(const QString &financial_year) {
    m_financial_year = financial_year;
    m_financial_year_isSet = true;
}

bool OAIBudgetDto::is_financial_year_Set() const{
    return m_financial_year_isSet;
}

bool OAIBudgetDto::is_financial_year_Valid() const{
    return m_financial_year_isValid;
}

QDateTime OAIBudgetDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIBudgetDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIBudgetDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIBudgetDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QList<OAIFinancialPeriodAmountDto> OAIBudgetDto::getPeriods() const {
    return m_periods;
}
void OAIBudgetDto::setPeriods(const QList<OAIFinancialPeriodAmountDto> &periods) {
    m_periods = periods;
    m_periods_isSet = true;
}

bool OAIBudgetDto::is_periods_Set() const{
    return m_periods_isSet;
}

bool OAIBudgetDto::is_periods_Valid() const{
    return m_periods_isValid;
}

bool OAIBudgetDto::isReleased() const {
    return m_released;
}
void OAIBudgetDto::setReleased(const bool &released) {
    m_released = released;
    m_released_isSet = true;
}

bool OAIBudgetDto::is_released_Set() const{
    return m_released_isSet;
}

bool OAIBudgetDto::is_released_Valid() const{
    return m_released_isValid;
}

double OAIBudgetDto::getReleasedAmount() const {
    return m_released_amount;
}
void OAIBudgetDto::setReleasedAmount(const double &released_amount) {
    m_released_amount = released_amount;
    m_released_amount_isSet = true;
}

bool OAIBudgetDto::is_released_amount_Set() const{
    return m_released_amount_isSet;
}

bool OAIBudgetDto::is_released_amount_Valid() const{
    return m_released_amount_isValid;
}

OAISubaccountInBudgetDto OAIBudgetDto::getSubaccount() const {
    return m_subaccount;
}
void OAIBudgetDto::setSubaccount(const OAISubaccountInBudgetDto &subaccount) {
    m_subaccount = subaccount;
    m_subaccount_isSet = true;
}

bool OAIBudgetDto::is_subaccount_Set() const{
    return m_subaccount_isSet;
}

bool OAIBudgetDto::is_subaccount_Valid() const{
    return m_subaccount_isValid;
}

bool OAIBudgetDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_distributed_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_financial_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_periods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_released_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_released_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBudgetDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
