/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesOrderShipmentDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesOrderShipmentDto::OAISalesOrderShipmentDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesOrderShipmentDto::OAISalesOrderShipmentDto() {
    this->initializeModel();
}

OAISalesOrderShipmentDto::~OAISalesOrderShipmentDto() {}

void OAISalesOrderShipmentDto::initializeModel() {

    m_inventory_doc_type_isSet = false;
    m_inventory_doc_type_isValid = false;

    m_inventory_ref_no_isSet = false;
    m_inventory_ref_no_isValid = false;

    m_invoice_no_isSet = false;
    m_invoice_no_isValid = false;

    m_invoice_type_isSet = false;
    m_invoice_type_isValid = false;

    m_shipment_date_isSet = false;
    m_shipment_date_isValid = false;

    m_shipment_no_isSet = false;
    m_shipment_no_isValid = false;

    m_shipment_type_isSet = false;
    m_shipment_type_isValid = false;

    m_shipped_qty_isSet = false;
    m_shipped_qty_isValid = false;

    m_shipped_volume_isSet = false;
    m_shipped_volume_isValid = false;

    m_shipped_weight_isSet = false;
    m_shipped_weight_isValid = false;
}

void OAISalesOrderShipmentDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesOrderShipmentDto::fromJsonObject(QJsonObject json) {

    m_inventory_doc_type_isValid = ::OpenAPI::fromJsonValue(m_inventory_doc_type, json[QString("inventoryDocType")]);
    m_inventory_doc_type_isSet = !json[QString("inventoryDocType")].isNull() && m_inventory_doc_type_isValid;

    m_inventory_ref_no_isValid = ::OpenAPI::fromJsonValue(m_inventory_ref_no, json[QString("inventoryRefNo")]);
    m_inventory_ref_no_isSet = !json[QString("inventoryRefNo")].isNull() && m_inventory_ref_no_isValid;

    m_invoice_no_isValid = ::OpenAPI::fromJsonValue(m_invoice_no, json[QString("invoiceNo")]);
    m_invoice_no_isSet = !json[QString("invoiceNo")].isNull() && m_invoice_no_isValid;

    m_invoice_type_isValid = ::OpenAPI::fromJsonValue(m_invoice_type, json[QString("invoiceType")]);
    m_invoice_type_isSet = !json[QString("invoiceType")].isNull() && m_invoice_type_isValid;

    m_shipment_date_isValid = ::OpenAPI::fromJsonValue(m_shipment_date, json[QString("shipmentDate")]);
    m_shipment_date_isSet = !json[QString("shipmentDate")].isNull() && m_shipment_date_isValid;

    m_shipment_no_isValid = ::OpenAPI::fromJsonValue(m_shipment_no, json[QString("shipmentNo")]);
    m_shipment_no_isSet = !json[QString("shipmentNo")].isNull() && m_shipment_no_isValid;

    m_shipment_type_isValid = ::OpenAPI::fromJsonValue(m_shipment_type, json[QString("shipmentType")]);
    m_shipment_type_isSet = !json[QString("shipmentType")].isNull() && m_shipment_type_isValid;

    m_shipped_qty_isValid = ::OpenAPI::fromJsonValue(m_shipped_qty, json[QString("shippedQty")]);
    m_shipped_qty_isSet = !json[QString("shippedQty")].isNull() && m_shipped_qty_isValid;

    m_shipped_volume_isValid = ::OpenAPI::fromJsonValue(m_shipped_volume, json[QString("shippedVolume")]);
    m_shipped_volume_isSet = !json[QString("shippedVolume")].isNull() && m_shipped_volume_isValid;

    m_shipped_weight_isValid = ::OpenAPI::fromJsonValue(m_shipped_weight, json[QString("shippedWeight")]);
    m_shipped_weight_isSet = !json[QString("shippedWeight")].isNull() && m_shipped_weight_isValid;
}

QString OAISalesOrderShipmentDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesOrderShipmentDto::asJsonObject() const {
    QJsonObject obj;
    if (m_inventory_doc_type_isSet) {
        obj.insert(QString("inventoryDocType"), ::OpenAPI::toJsonValue(m_inventory_doc_type));
    }
    if (m_inventory_ref_no_isSet) {
        obj.insert(QString("inventoryRefNo"), ::OpenAPI::toJsonValue(m_inventory_ref_no));
    }
    if (m_invoice_no_isSet) {
        obj.insert(QString("invoiceNo"), ::OpenAPI::toJsonValue(m_invoice_no));
    }
    if (m_invoice_type_isSet) {
        obj.insert(QString("invoiceType"), ::OpenAPI::toJsonValue(m_invoice_type));
    }
    if (m_shipment_date_isSet) {
        obj.insert(QString("shipmentDate"), ::OpenAPI::toJsonValue(m_shipment_date));
    }
    if (m_shipment_no_isSet) {
        obj.insert(QString("shipmentNo"), ::OpenAPI::toJsonValue(m_shipment_no));
    }
    if (m_shipment_type_isSet) {
        obj.insert(QString("shipmentType"), ::OpenAPI::toJsonValue(m_shipment_type));
    }
    if (m_shipped_qty_isSet) {
        obj.insert(QString("shippedQty"), ::OpenAPI::toJsonValue(m_shipped_qty));
    }
    if (m_shipped_volume_isSet) {
        obj.insert(QString("shippedVolume"), ::OpenAPI::toJsonValue(m_shipped_volume));
    }
    if (m_shipped_weight_isSet) {
        obj.insert(QString("shippedWeight"), ::OpenAPI::toJsonValue(m_shipped_weight));
    }
    return obj;
}

QString OAISalesOrderShipmentDto::getInventoryDocType() const {
    return m_inventory_doc_type;
}
void OAISalesOrderShipmentDto::setInventoryDocType(const QString &inventory_doc_type) {
    m_inventory_doc_type = inventory_doc_type;
    m_inventory_doc_type_isSet = true;
}

bool OAISalesOrderShipmentDto::is_inventory_doc_type_Set() const{
    return m_inventory_doc_type_isSet;
}

bool OAISalesOrderShipmentDto::is_inventory_doc_type_Valid() const{
    return m_inventory_doc_type_isValid;
}

QString OAISalesOrderShipmentDto::getInventoryRefNo() const {
    return m_inventory_ref_no;
}
void OAISalesOrderShipmentDto::setInventoryRefNo(const QString &inventory_ref_no) {
    m_inventory_ref_no = inventory_ref_no;
    m_inventory_ref_no_isSet = true;
}

bool OAISalesOrderShipmentDto::is_inventory_ref_no_Set() const{
    return m_inventory_ref_no_isSet;
}

bool OAISalesOrderShipmentDto::is_inventory_ref_no_Valid() const{
    return m_inventory_ref_no_isValid;
}

QString OAISalesOrderShipmentDto::getInvoiceNo() const {
    return m_invoice_no;
}
void OAISalesOrderShipmentDto::setInvoiceNo(const QString &invoice_no) {
    m_invoice_no = invoice_no;
    m_invoice_no_isSet = true;
}

bool OAISalesOrderShipmentDto::is_invoice_no_Set() const{
    return m_invoice_no_isSet;
}

bool OAISalesOrderShipmentDto::is_invoice_no_Valid() const{
    return m_invoice_no_isValid;
}

QString OAISalesOrderShipmentDto::getInvoiceType() const {
    return m_invoice_type;
}
void OAISalesOrderShipmentDto::setInvoiceType(const QString &invoice_type) {
    m_invoice_type = invoice_type;
    m_invoice_type_isSet = true;
}

bool OAISalesOrderShipmentDto::is_invoice_type_Set() const{
    return m_invoice_type_isSet;
}

bool OAISalesOrderShipmentDto::is_invoice_type_Valid() const{
    return m_invoice_type_isValid;
}

QDateTime OAISalesOrderShipmentDto::getShipmentDate() const {
    return m_shipment_date;
}
void OAISalesOrderShipmentDto::setShipmentDate(const QDateTime &shipment_date) {
    m_shipment_date = shipment_date;
    m_shipment_date_isSet = true;
}

bool OAISalesOrderShipmentDto::is_shipment_date_Set() const{
    return m_shipment_date_isSet;
}

bool OAISalesOrderShipmentDto::is_shipment_date_Valid() const{
    return m_shipment_date_isValid;
}

QString OAISalesOrderShipmentDto::getShipmentNo() const {
    return m_shipment_no;
}
void OAISalesOrderShipmentDto::setShipmentNo(const QString &shipment_no) {
    m_shipment_no = shipment_no;
    m_shipment_no_isSet = true;
}

bool OAISalesOrderShipmentDto::is_shipment_no_Set() const{
    return m_shipment_no_isSet;
}

bool OAISalesOrderShipmentDto::is_shipment_no_Valid() const{
    return m_shipment_no_isValid;
}

QString OAISalesOrderShipmentDto::getShipmentType() const {
    return m_shipment_type;
}
void OAISalesOrderShipmentDto::setShipmentType(const QString &shipment_type) {
    m_shipment_type = shipment_type;
    m_shipment_type_isSet = true;
}

bool OAISalesOrderShipmentDto::is_shipment_type_Set() const{
    return m_shipment_type_isSet;
}

bool OAISalesOrderShipmentDto::is_shipment_type_Valid() const{
    return m_shipment_type_isValid;
}

double OAISalesOrderShipmentDto::getShippedQty() const {
    return m_shipped_qty;
}
void OAISalesOrderShipmentDto::setShippedQty(const double &shipped_qty) {
    m_shipped_qty = shipped_qty;
    m_shipped_qty_isSet = true;
}

bool OAISalesOrderShipmentDto::is_shipped_qty_Set() const{
    return m_shipped_qty_isSet;
}

bool OAISalesOrderShipmentDto::is_shipped_qty_Valid() const{
    return m_shipped_qty_isValid;
}

double OAISalesOrderShipmentDto::getShippedVolume() const {
    return m_shipped_volume;
}
void OAISalesOrderShipmentDto::setShippedVolume(const double &shipped_volume) {
    m_shipped_volume = shipped_volume;
    m_shipped_volume_isSet = true;
}

bool OAISalesOrderShipmentDto::is_shipped_volume_Set() const{
    return m_shipped_volume_isSet;
}

bool OAISalesOrderShipmentDto::is_shipped_volume_Valid() const{
    return m_shipped_volume_isValid;
}

double OAISalesOrderShipmentDto::getShippedWeight() const {
    return m_shipped_weight;
}
void OAISalesOrderShipmentDto::setShippedWeight(const double &shipped_weight) {
    m_shipped_weight = shipped_weight;
    m_shipped_weight_isSet = true;
}

bool OAISalesOrderShipmentDto::is_shipped_weight_Set() const{
    return m_shipped_weight_isSet;
}

bool OAISalesOrderShipmentDto::is_shipped_weight_Valid() const{
    return m_shipped_weight_isValid;
}

bool OAISalesOrderShipmentDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inventory_doc_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_ref_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_volume_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesOrderShipmentDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
