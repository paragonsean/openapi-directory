/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICurrencyInSupplierPaymentDto.h
 *
 * The top part &amp;gt; Currency &amp;gt; The currency of the payment; by default, it is the currency associated with the cash account.
 */

#ifndef OAICurrencyInSupplierPaymentDto_H
#define OAICurrencyInSupplierPaymentDto_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICurrencyInSupplierPaymentDto : public OAIObject {
public:
    OAICurrencyInSupplierPaymentDto();
    OAICurrencyInSupplierPaymentDto(QString json);
    ~OAICurrencyInSupplierPaymentDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDecimalPrecision() const;
    void setDecimalPrecision(const qint32 &decimal_precision);
    bool is_decimal_precision_Set() const;
    bool is_decimal_precision_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsBaseCurrency() const;
    void setIsBaseCurrency(const bool &is_base_currency);
    bool is_is_base_currency_Set() const;
    bool is_is_base_currency_Valid() const;

    bool isIsUsedForAccounting() const;
    void setIsUsedForAccounting(const bool &is_used_for_accounting);
    bool is_is_used_for_accounting_Set() const;
    bool is_is_used_for_accounting_Valid() const;

    QString getSymbol() const;
    void setSymbol(const QString &symbol);
    bool is_symbol_Set() const;
    bool is_symbol_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_decimal_precision;
    bool m_decimal_precision_isSet;
    bool m_decimal_precision_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_base_currency;
    bool m_is_base_currency_isSet;
    bool m_is_base_currency_isValid;

    bool m_is_used_for_accounting;
    bool m_is_used_for_accounting_isSet;
    bool m_is_used_for_accounting_isValid;

    QString m_symbol;
    bool m_symbol_isSet;
    bool m_symbol_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICurrencyInSupplierPaymentDto)

#endif // OAICurrencyInSupplierPaymentDto_H
