/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinkLineDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinkLineDto::OAILinkLineDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinkLineDto::OAILinkLineDto() {
    this->initializeModel();
}

OAILinkLineDto::~OAILinkLineDto() {}

void OAILinkLineDto::initializeModel() {

    m_purchase_line_nbr_isSet = false;
    m_purchase_line_nbr_isValid = false;

    m_purchase_number_isSet = false;
    m_purchase_number_isValid = false;

    m_purchase_type_isSet = false;
    m_purchase_type_isValid = false;
}

void OAILinkLineDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinkLineDto::fromJsonObject(QJsonObject json) {

    m_purchase_line_nbr_isValid = ::OpenAPI::fromJsonValue(m_purchase_line_nbr, json[QString("purchaseLineNbr")]);
    m_purchase_line_nbr_isSet = !json[QString("purchaseLineNbr")].isNull() && m_purchase_line_nbr_isValid;

    m_purchase_number_isValid = ::OpenAPI::fromJsonValue(m_purchase_number, json[QString("purchaseNumber")]);
    m_purchase_number_isSet = !json[QString("purchaseNumber")].isNull() && m_purchase_number_isValid;

    m_purchase_type_isValid = ::OpenAPI::fromJsonValue(m_purchase_type, json[QString("purchaseType")]);
    m_purchase_type_isSet = !json[QString("purchaseType")].isNull() && m_purchase_type_isValid;
}

QString OAILinkLineDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinkLineDto::asJsonObject() const {
    QJsonObject obj;
    if (m_purchase_line_nbr.isSet()) {
        obj.insert(QString("purchaseLineNbr"), ::OpenAPI::toJsonValue(m_purchase_line_nbr));
    }
    if (m_purchase_number.isSet()) {
        obj.insert(QString("purchaseNumber"), ::OpenAPI::toJsonValue(m_purchase_number));
    }
    if (m_purchase_type_isSet) {
        obj.insert(QString("purchaseType"), ::OpenAPI::toJsonValue(m_purchase_type));
    }
    return obj;
}

OAIPurchaseLineNbrInLinkLineDto OAILinkLineDto::getPurchaseLineNbr() const {
    return m_purchase_line_nbr;
}
void OAILinkLineDto::setPurchaseLineNbr(const OAIPurchaseLineNbrInLinkLineDto &purchase_line_nbr) {
    m_purchase_line_nbr = purchase_line_nbr;
    m_purchase_line_nbr_isSet = true;
}

bool OAILinkLineDto::is_purchase_line_nbr_Set() const{
    return m_purchase_line_nbr_isSet;
}

bool OAILinkLineDto::is_purchase_line_nbr_Valid() const{
    return m_purchase_line_nbr_isValid;
}

OAIPurchaseNumberInLinkLineDto OAILinkLineDto::getPurchaseNumber() const {
    return m_purchase_number;
}
void OAILinkLineDto::setPurchaseNumber(const OAIPurchaseNumberInLinkLineDto &purchase_number) {
    m_purchase_number = purchase_number;
    m_purchase_number_isSet = true;
}

bool OAILinkLineDto::is_purchase_number_Set() const{
    return m_purchase_number_isSet;
}

bool OAILinkLineDto::is_purchase_number_Valid() const{
    return m_purchase_number_isValid;
}

QString OAILinkLineDto::getPurchaseType() const {
    return m_purchase_type;
}
void OAILinkLineDto::setPurchaseType(const QString &purchase_type) {
    m_purchase_type = purchase_type;
    m_purchase_type_isSet = true;
}

bool OAILinkLineDto::is_purchase_type_Set() const{
    return m_purchase_type_isSet;
}

bool OAILinkLineDto::is_purchase_type_Valid() const{
    return m_purchase_type_isValid;
}

bool OAILinkLineDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_purchase_line_nbr.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinkLineDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
