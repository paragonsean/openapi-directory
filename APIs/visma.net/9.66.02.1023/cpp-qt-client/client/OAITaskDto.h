/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskDto.h
 *
 * 
 */

#ifndef OAITaskDto_H
#define OAITaskDto_H

#include <QJsonObject>

#include "OAIEmployeeDto.h"
#include "OAIRateTableIdDescriptionDto.h"
#include "OAIVisibilityDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEmployeeDto;
class OAIRateTableIdDescriptionDto;
class OAIVisibilityDto;

class OAITaskDto : public OAIObject {
public:
    OAITaskDto();
    OAITaskDto(QString json);
    ~OAITaskDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIEmployeeDto> getEmployees() const;
    void setEmployees(const QList<OAIEmployeeDto> &employees);
    bool is_employees_Set() const;
    bool is_employees_Valid() const;

    QDateTime getPlannedEnd() const;
    void setPlannedEnd(const QDateTime &planned_end);
    bool is_planned_end_Set() const;
    bool is_planned_end_Valid() const;

    QDateTime getPlannedStart() const;
    void setPlannedStart(const QDateTime &planned_start);
    bool is_planned_start_Set() const;
    bool is_planned_start_Valid() const;

    OAIRateTableIdDescriptionDto getRateTable() const;
    void setRateTable(const OAIRateTableIdDescriptionDto &rate_table);
    bool is_rate_table_Set() const;
    bool is_rate_table_Valid() const;

    bool isRestrictEmployees() const;
    void setRestrictEmployees(const bool &restrict_employees);
    bool is_restrict_employees_Set() const;
    bool is_restrict_employees_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTaskId() const;
    void setTaskId(const QString &task_id);
    bool is_task_id_Set() const;
    bool is_task_id_Valid() const;

    OAIVisibilityDto getVisibility() const;
    void setVisibility(const OAIVisibilityDto &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIEmployeeDto> m_employees;
    bool m_employees_isSet;
    bool m_employees_isValid;

    QDateTime m_planned_end;
    bool m_planned_end_isSet;
    bool m_planned_end_isValid;

    QDateTime m_planned_start;
    bool m_planned_start_isSet;
    bool m_planned_start_isValid;

    OAIRateTableIdDescriptionDto m_rate_table;
    bool m_rate_table_isSet;
    bool m_rate_table_isValid;

    bool m_restrict_employees;
    bool m_restrict_employees_isSet;
    bool m_restrict_employees_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_task_id;
    bool m_task_id_isSet;
    bool m_task_id_isValid;

    OAIVisibilityDto m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskDto)

#endif // OAITaskDto_H
