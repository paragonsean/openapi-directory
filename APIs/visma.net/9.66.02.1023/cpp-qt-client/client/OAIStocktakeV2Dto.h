/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStocktakeV2Dto.h
 *
 * 
 */

#ifndef OAIStocktakeV2Dto_H
#define OAIStocktakeV2Dto_H

#include <QJsonObject>

#include "OAIMetadataDto.h"
#include "OAIStocktakeLineV2Dto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStocktakeLineV2Dto;
class OAIMetadataDto;

class OAIStocktakeV2Dto : public OAIObject {
public:
    OAIStocktakeV2Dto();
    OAIStocktakeV2Dto(QString json);
    ~OAIStocktakeV2Dto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QDateTime getFreezeDate() const;
    void setFreezeDate(const QDateTime &freeze_date);
    bool is_freeze_date_Set() const;
    bool is_freeze_date_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QList<OAIStocktakeLineV2Dto> getLines() const;
    void setLines(const QList<OAIStocktakeLineV2Dto> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    qint32 getNumberOfLines() const;
    void setNumberOfLines(const qint32 &number_of_lines);
    bool is_number_of_lines_Set() const;
    bool is_number_of_lines_Valid() const;

    double getPhysicalQty() const;
    void setPhysicalQty(const double &physical_qty);
    bool is_physical_qty_Set() const;
    bool is_physical_qty_Valid() const;

    QString getReferenceNbr() const;
    void setReferenceNbr(const QString &reference_nbr);
    bool is_reference_nbr_Set() const;
    bool is_reference_nbr_Valid() const;

    QString getSummaryStatus() const;
    void setSummaryStatus(const QString &summary_status);
    bool is_summary_status_Set() const;
    bool is_summary_status_Valid() const;

    double getVarianceCost() const;
    void setVarianceCost(const double &variance_cost);
    bool is_variance_cost_Set() const;
    bool is_variance_cost_Valid() const;

    double getVarianceQty() const;
    void setVarianceQty(const double &variance_qty);
    bool is_variance_qty_Set() const;
    bool is_variance_qty_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QDateTime m_freeze_date;
    bool m_freeze_date_isSet;
    bool m_freeze_date_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QList<OAIStocktakeLineV2Dto> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    qint32 m_number_of_lines;
    bool m_number_of_lines_isSet;
    bool m_number_of_lines_isValid;

    double m_physical_qty;
    bool m_physical_qty_isSet;
    bool m_physical_qty_isValid;

    QString m_reference_nbr;
    bool m_reference_nbr_isSet;
    bool m_reference_nbr_isValid;

    QString m_summary_status;
    bool m_summary_status_isSet;
    bool m_summary_status_isValid;

    double m_variance_cost;
    bool m_variance_cost_isSet;
    bool m_variance_cost_isValid;

    double m_variance_qty;
    bool m_variance_qty_isSet;
    bool m_variance_qty_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStocktakeV2Dto)

#endif // OAIStocktakeV2Dto_H
