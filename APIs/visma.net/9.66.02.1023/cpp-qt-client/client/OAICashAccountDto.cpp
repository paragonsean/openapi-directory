/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICashAccountDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICashAccountDto::OAICashAccountDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICashAccountDto::OAICashAccountDto() {
    this->initializeModel();
}

OAICashAccountDto::~OAICashAccountDto() {}

void OAICashAccountDto::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_entry_types_isSet = false;
    m_entry_types_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;
}

void OAICashAccountDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICashAccountDto::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_entry_types_isValid = ::OpenAPI::fromJsonValue(m_entry_types, json[QString("entryTypes")]);
    m_entry_types_isSet = !json[QString("entryTypes")].isNull() && m_entry_types_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;
}

QString OAICashAccountDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICashAccountDto::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_entry_types.size() > 0) {
        obj.insert(QString("entryTypes"), ::OpenAPI::toJsonValue(m_entry_types));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    return obj;
}

QString OAICashAccountDto::getCurrency() const {
    return m_currency;
}
void OAICashAccountDto::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAICashAccountDto::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAICashAccountDto::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAICashAccountDto::getDescription() const {
    return m_description;
}
void OAICashAccountDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICashAccountDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAICashAccountDto::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIEntryTypeDto> OAICashAccountDto::getEntryTypes() const {
    return m_entry_types;
}
void OAICashAccountDto::setEntryTypes(const QList<OAIEntryTypeDto> &entry_types) {
    m_entry_types = entry_types;
    m_entry_types_isSet = true;
}

bool OAICashAccountDto::is_entry_types_Set() const{
    return m_entry_types_isSet;
}

bool OAICashAccountDto::is_entry_types_Valid() const{
    return m_entry_types_isValid;
}

QDateTime OAICashAccountDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAICashAccountDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAICashAccountDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAICashAccountDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAICashAccountDto::getNumber() const {
    return m_number;
}
void OAICashAccountDto::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAICashAccountDto::is_number_Set() const{
    return m_number_isSet;
}

bool OAICashAccountDto::is_number_Valid() const{
    return m_number_isValid;
}

bool OAICashAccountDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entry_types.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICashAccountDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
