/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiscountBreakpointDto.h
 *
 * 
 */

#ifndef OAIDiscountBreakpointDto_H
#define OAIDiscountBreakpointDto_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDiscountBreakpointDto : public OAIObject {
public:
    OAIDiscountBreakpointDto();
    OAIDiscountBreakpointDto(QString json);
    ~OAIDiscountBreakpointDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    double getAmountTo() const;
    void setAmountTo(const double &amount_to);
    bool is_amount_to_Set() const;
    bool is_amount_to_Valid() const;

    double getBreakAmount() const;
    void setBreakAmount(const double &break_amount);
    bool is_break_amount_Set() const;
    bool is_break_amount_Valid() const;

    double getBreakQuantity() const;
    void setBreakQuantity(const double &break_quantity);
    bool is_break_quantity_Set() const;
    bool is_break_quantity_Valid() const;

    double getDiscountAmount() const;
    void setDiscountAmount(const double &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    double getDiscountPercent() const;
    void setDiscountPercent(const double &discount_percent);
    bool is_discount_percent_Set() const;
    bool is_discount_percent_Valid() const;

    QDateTime getEffectiveDate() const;
    void setEffectiveDate(const QDateTime &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    double getFreeItemQty() const;
    void setFreeItemQty(const double &free_item_qty);
    bool is_free_item_qty_Set() const;
    bool is_free_item_qty_Valid() const;

    double getLastAmountTo() const;
    void setLastAmountTo(const double &last_amount_to);
    bool is_last_amount_to_Set() const;
    bool is_last_amount_to_Valid() const;

    double getLastBreakAmount() const;
    void setLastBreakAmount(const double &last_break_amount);
    bool is_last_break_amount_Set() const;
    bool is_last_break_amount_Valid() const;

    double getLastBreakQuantity() const;
    void setLastBreakQuantity(const double &last_break_quantity);
    bool is_last_break_quantity_Set() const;
    bool is_last_break_quantity_Valid() const;

    double getLastDiscount() const;
    void setLastDiscount(const double &last_discount);
    bool is_last_discount_Set() const;
    bool is_last_discount_Valid() const;

    double getLastDiscountAmount() const;
    void setLastDiscountAmount(const double &last_discount_amount);
    bool is_last_discount_amount_Set() const;
    bool is_last_discount_amount_Valid() const;

    double getLastDiscountPercent() const;
    void setLastDiscountPercent(const double &last_discount_percent);
    bool is_last_discount_percent_Set() const;
    bool is_last_discount_percent_Valid() const;

    double getLastFreeItemQty() const;
    void setLastFreeItemQty(const double &last_free_item_qty);
    bool is_last_free_item_qty_Set() const;
    bool is_last_free_item_qty_Valid() const;

    double getLastQuantityTo() const;
    void setLastQuantityTo(const double &last_quantity_to);
    bool is_last_quantity_to_Set() const;
    bool is_last_quantity_to_Valid() const;

    qint32 getLineNbr() const;
    void setLineNbr(const qint32 &line_nbr);
    bool is_line_nbr_Set() const;
    bool is_line_nbr_Valid() const;

    double getPendingBreakAmount() const;
    void setPendingBreakAmount(const double &pending_break_amount);
    bool is_pending_break_amount_Set() const;
    bool is_pending_break_amount_Valid() const;

    double getPendingBreakQuantity() const;
    void setPendingBreakQuantity(const double &pending_break_quantity);
    bool is_pending_break_quantity_Set() const;
    bool is_pending_break_quantity_Valid() const;

    QDateTime getPendingDate() const;
    void setPendingDate(const QDateTime &pending_date);
    bool is_pending_date_Set() const;
    bool is_pending_date_Valid() const;

    double getPendingDiscountAmount() const;
    void setPendingDiscountAmount(const double &pending_discount_amount);
    bool is_pending_discount_amount_Set() const;
    bool is_pending_discount_amount_Valid() const;

    double getPendingDiscountPercent() const;
    void setPendingDiscountPercent(const double &pending_discount_percent);
    bool is_pending_discount_percent_Set() const;
    bool is_pending_discount_percent_Valid() const;

    double getPendingFreeItemQty() const;
    void setPendingFreeItemQty(const double &pending_free_item_qty);
    bool is_pending_free_item_qty_Set() const;
    bool is_pending_free_item_qty_Valid() const;

    double getQuantityTo() const;
    void setQuantityTo(const double &quantity_to);
    bool is_quantity_to_Set() const;
    bool is_quantity_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    double m_amount_to;
    bool m_amount_to_isSet;
    bool m_amount_to_isValid;

    double m_break_amount;
    bool m_break_amount_isSet;
    bool m_break_amount_isValid;

    double m_break_quantity;
    bool m_break_quantity_isSet;
    bool m_break_quantity_isValid;

    double m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    double m_discount_percent;
    bool m_discount_percent_isSet;
    bool m_discount_percent_isValid;

    QDateTime m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    double m_free_item_qty;
    bool m_free_item_qty_isSet;
    bool m_free_item_qty_isValid;

    double m_last_amount_to;
    bool m_last_amount_to_isSet;
    bool m_last_amount_to_isValid;

    double m_last_break_amount;
    bool m_last_break_amount_isSet;
    bool m_last_break_amount_isValid;

    double m_last_break_quantity;
    bool m_last_break_quantity_isSet;
    bool m_last_break_quantity_isValid;

    double m_last_discount;
    bool m_last_discount_isSet;
    bool m_last_discount_isValid;

    double m_last_discount_amount;
    bool m_last_discount_amount_isSet;
    bool m_last_discount_amount_isValid;

    double m_last_discount_percent;
    bool m_last_discount_percent_isSet;
    bool m_last_discount_percent_isValid;

    double m_last_free_item_qty;
    bool m_last_free_item_qty_isSet;
    bool m_last_free_item_qty_isValid;

    double m_last_quantity_to;
    bool m_last_quantity_to_isSet;
    bool m_last_quantity_to_isValid;

    qint32 m_line_nbr;
    bool m_line_nbr_isSet;
    bool m_line_nbr_isValid;

    double m_pending_break_amount;
    bool m_pending_break_amount_isSet;
    bool m_pending_break_amount_isValid;

    double m_pending_break_quantity;
    bool m_pending_break_quantity_isSet;
    bool m_pending_break_quantity_isValid;

    QDateTime m_pending_date;
    bool m_pending_date_isSet;
    bool m_pending_date_isValid;

    double m_pending_discount_amount;
    bool m_pending_discount_amount_isSet;
    bool m_pending_discount_amount_isValid;

    double m_pending_discount_percent;
    bool m_pending_discount_percent_isSet;
    bool m_pending_discount_percent_isValid;

    double m_pending_free_item_qty;
    bool m_pending_free_item_qty_isSet;
    bool m_pending_free_item_qty_isValid;

    double m_quantity_to;
    bool m_quantity_to_isSet;
    bool m_quantity_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiscountBreakpointDto)

#endif // OAIDiscountBreakpointDto_H
