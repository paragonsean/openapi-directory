/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountNumberDescriptionDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountNumberDescriptionDto::OAIAccountNumberDescriptionDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountNumberDescriptionDto::OAIAccountNumberDescriptionDto() {
    this->initializeModel();
}

OAIAccountNumberDescriptionDto::~OAIAccountNumberDescriptionDto() {}

void OAIAccountNumberDescriptionDto::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_external_code1_isSet = false;
    m_external_code1_isValid = false;

    m_external_code1_info_isSet = false;
    m_external_code1_info_isValid = false;

    m_external_code2_isSet = false;
    m_external_code2_isValid = false;

    m_external_code2_info_isSet = false;
    m_external_code2_info_isValid = false;

    m_gl_consol_account_cd_isSet = false;
    m_gl_consol_account_cd_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIAccountNumberDescriptionDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountNumberDescriptionDto::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_external_code1_isValid = ::OpenAPI::fromJsonValue(m_external_code1, json[QString("externalCode1")]);
    m_external_code1_isSet = !json[QString("externalCode1")].isNull() && m_external_code1_isValid;

    m_external_code1_info_isValid = ::OpenAPI::fromJsonValue(m_external_code1_info, json[QString("externalCode1Info")]);
    m_external_code1_info_isSet = !json[QString("externalCode1Info")].isNull() && m_external_code1_info_isValid;

    m_external_code2_isValid = ::OpenAPI::fromJsonValue(m_external_code2, json[QString("externalCode2")]);
    m_external_code2_isSet = !json[QString("externalCode2")].isNull() && m_external_code2_isValid;

    m_external_code2_info_isValid = ::OpenAPI::fromJsonValue(m_external_code2_info, json[QString("externalCode2Info")]);
    m_external_code2_info_isSet = !json[QString("externalCode2Info")].isNull() && m_external_code2_info_isValid;

    m_gl_consol_account_cd_isValid = ::OpenAPI::fromJsonValue(m_gl_consol_account_cd, json[QString("glConsolAccountCD")]);
    m_gl_consol_account_cd_isSet = !json[QString("glConsolAccountCD")].isNull() && m_gl_consol_account_cd_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIAccountNumberDescriptionDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountNumberDescriptionDto::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_external_code1_isSet) {
        obj.insert(QString("externalCode1"), ::OpenAPI::toJsonValue(m_external_code1));
    }
    if (m_external_code1_info.isSet()) {
        obj.insert(QString("externalCode1Info"), ::OpenAPI::toJsonValue(m_external_code1_info));
    }
    if (m_external_code2_isSet) {
        obj.insert(QString("externalCode2"), ::OpenAPI::toJsonValue(m_external_code2));
    }
    if (m_external_code2_info.isSet()) {
        obj.insert(QString("externalCode2Info"), ::OpenAPI::toJsonValue(m_external_code2_info));
    }
    if (m_gl_consol_account_cd_isSet) {
        obj.insert(QString("glConsolAccountCD"), ::OpenAPI::toJsonValue(m_gl_consol_account_cd));
    }
    if (m_number_isSet) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIAccountNumberDescriptionDto::getDescription() const {
    return m_description;
}
void OAIAccountNumberDescriptionDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAccountNumberDescriptionDto::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIAccountNumberDescriptionDto::getExternalCode1() const {
    return m_external_code1;
}
void OAIAccountNumberDescriptionDto::setExternalCode1(const QString &external_code1) {
    m_external_code1 = external_code1;
    m_external_code1_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_external_code1_Set() const{
    return m_external_code1_isSet;
}

bool OAIAccountNumberDescriptionDto::is_external_code1_Valid() const{
    return m_external_code1_isValid;
}

OAIExternalCodeNumberDescriptionDto OAIAccountNumberDescriptionDto::getExternalCode1Info() const {
    return m_external_code1_info;
}
void OAIAccountNumberDescriptionDto::setExternalCode1Info(const OAIExternalCodeNumberDescriptionDto &external_code1_info) {
    m_external_code1_info = external_code1_info;
    m_external_code1_info_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_external_code1_info_Set() const{
    return m_external_code1_info_isSet;
}

bool OAIAccountNumberDescriptionDto::is_external_code1_info_Valid() const{
    return m_external_code1_info_isValid;
}

QString OAIAccountNumberDescriptionDto::getExternalCode2() const {
    return m_external_code2;
}
void OAIAccountNumberDescriptionDto::setExternalCode2(const QString &external_code2) {
    m_external_code2 = external_code2;
    m_external_code2_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_external_code2_Set() const{
    return m_external_code2_isSet;
}

bool OAIAccountNumberDescriptionDto::is_external_code2_Valid() const{
    return m_external_code2_isValid;
}

OAIExternalCodeNumberDescriptionDto OAIAccountNumberDescriptionDto::getExternalCode2Info() const {
    return m_external_code2_info;
}
void OAIAccountNumberDescriptionDto::setExternalCode2Info(const OAIExternalCodeNumberDescriptionDto &external_code2_info) {
    m_external_code2_info = external_code2_info;
    m_external_code2_info_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_external_code2_info_Set() const{
    return m_external_code2_info_isSet;
}

bool OAIAccountNumberDescriptionDto::is_external_code2_info_Valid() const{
    return m_external_code2_info_isValid;
}

QString OAIAccountNumberDescriptionDto::getGlConsolAccountCd() const {
    return m_gl_consol_account_cd;
}
void OAIAccountNumberDescriptionDto::setGlConsolAccountCd(const QString &gl_consol_account_cd) {
    m_gl_consol_account_cd = gl_consol_account_cd;
    m_gl_consol_account_cd_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_gl_consol_account_cd_Set() const{
    return m_gl_consol_account_cd_isSet;
}

bool OAIAccountNumberDescriptionDto::is_gl_consol_account_cd_Valid() const{
    return m_gl_consol_account_cd_isValid;
}

QString OAIAccountNumberDescriptionDto::getNumber() const {
    return m_number;
}
void OAIAccountNumberDescriptionDto::setNumber(const QString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_number_Set() const{
    return m_number_isSet;
}

bool OAIAccountNumberDescriptionDto::is_number_Valid() const{
    return m_number_isValid;
}

QString OAIAccountNumberDescriptionDto::getType() const {
    return m_type;
}
void OAIAccountNumberDescriptionDto::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIAccountNumberDescriptionDto::is_type_Set() const{
    return m_type_isSet;
}

bool OAIAccountNumberDescriptionDto::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIAccountNumberDescriptionDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_code1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_code1_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_code2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_code2_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gl_consol_account_cd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountNumberDescriptionDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
