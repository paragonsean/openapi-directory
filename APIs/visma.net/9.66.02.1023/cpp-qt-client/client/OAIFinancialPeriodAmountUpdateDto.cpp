/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFinancialPeriodAmountUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFinancialPeriodAmountUpdateDto::OAIFinancialPeriodAmountUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFinancialPeriodAmountUpdateDto::OAIFinancialPeriodAmountUpdateDto() {
    this->initializeModel();
}

OAIFinancialPeriodAmountUpdateDto::~OAIFinancialPeriodAmountUpdateDto() {}

void OAIFinancialPeriodAmountUpdateDto::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_period_id_isSet = false;
    m_period_id_isValid = false;
}

void OAIFinancialPeriodAmountUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFinancialPeriodAmountUpdateDto::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_period_id_isValid = ::OpenAPI::fromJsonValue(m_period_id, json[QString("periodId")]);
    m_period_id_isSet = !json[QString("periodId")].isNull() && m_period_id_isValid;
}

QString OAIFinancialPeriodAmountUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFinancialPeriodAmountUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_amount.isSet()) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_period_id.isSet()) {
        obj.insert(QString("periodId"), ::OpenAPI::toJsonValue(m_period_id));
    }
    return obj;
}

OAIDtoValueOfDecimal OAIFinancialPeriodAmountUpdateDto::getAmount() const {
    return m_amount;
}
void OAIFinancialPeriodAmountUpdateDto::setAmount(const OAIDtoValueOfDecimal &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIFinancialPeriodAmountUpdateDto::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIFinancialPeriodAmountUpdateDto::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIFinancialPeriodAmountUpdateDto::getOperation() const {
    return m_operation;
}
void OAIFinancialPeriodAmountUpdateDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIFinancialPeriodAmountUpdateDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIFinancialPeriodAmountUpdateDto::is_operation_Valid() const{
    return m_operation_isValid;
}

OAIDtoValueOfString OAIFinancialPeriodAmountUpdateDto::getPeriodId() const {
    return m_period_id;
}
void OAIFinancialPeriodAmountUpdateDto::setPeriodId(const OAIDtoValueOfString &period_id) {
    m_period_id = period_id;
    m_period_id_isSet = true;
}

bool OAIFinancialPeriodAmountUpdateDto::is_period_id_Set() const{
    return m_period_id_isSet;
}

bool OAIFinancialPeriodAmountUpdateDto::is_period_id_Valid() const{
    return m_period_id_isValid;
}

bool OAIFinancialPeriodAmountUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFinancialPeriodAmountUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
