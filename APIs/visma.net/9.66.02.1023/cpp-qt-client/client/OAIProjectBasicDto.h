/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectBasicDto.h
 *
 * This class represents a Project (light weight) in ProjectBasicController. Used for getting data.
 */

#ifndef OAIProjectBasicDto_H
#define OAIProjectBasicDto_H

#include <QJsonObject>

#include "OAICustomerInProjectBasicDto.h"
#include "OAIMetadataDto.h"
#include "OAIVisibilityInProjectBasicDto.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerInProjectBasicDto;
class OAIMetadataDto;
class OAIVisibilityInProjectBasicDto;

class OAIProjectBasicDto : public OAIObject {
public:
    OAIProjectBasicDto();
    OAIProjectBasicDto(QString json);
    ~OAIProjectBasicDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutoAllocate() const;
    void setAutoAllocate(const bool &auto_allocate);
    bool is_auto_allocate_Set() const;
    bool is_auto_allocate_Valid() const;

    bool isAutomaticReleaseAr() const;
    void setAutomaticReleaseAr(const bool &automatic_release_ar);
    bool is_automatic_release_ar_Set() const;
    bool is_automatic_release_ar_Valid() const;

    OAICustomerInProjectBasicDto getCustomer() const;
    void setCustomer(const OAICustomerInProjectBasicDto &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    bool isHold() const;
    void setHold(const bool &hold);
    bool is_hold_Set() const;
    bool is_hold_Valid() const;

    qint32 getInternalId() const;
    void setInternalId(const qint32 &internal_id);
    bool is_internal_id_Set() const;
    bool is_internal_id_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getPublicId() const;
    void setPublicId(const QString &public_id);
    bool is_public_id_Set() const;
    bool is_public_id_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIVisibilityInProjectBasicDto getVisibility() const;
    void setVisibility(const OAIVisibilityInProjectBasicDto &visibility);
    bool is_visibility_Set() const;
    bool is_visibility_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_auto_allocate;
    bool m_auto_allocate_isSet;
    bool m_auto_allocate_isValid;

    bool m_automatic_release_ar;
    bool m_automatic_release_ar_isSet;
    bool m_automatic_release_ar_isValid;

    OAICustomerInProjectBasicDto m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    bool m_hold;
    bool m_hold_isSet;
    bool m_hold_isValid;

    qint32 m_internal_id;
    bool m_internal_id_isSet;
    bool m_internal_id_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_public_id;
    bool m_public_id_isSet;
    bool m_public_id_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIVisibilityInProjectBasicDto m_visibility;
    bool m_visibility_isSet;
    bool m_visibility_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectBasicDto)

#endif // OAIProjectBasicDto_H
