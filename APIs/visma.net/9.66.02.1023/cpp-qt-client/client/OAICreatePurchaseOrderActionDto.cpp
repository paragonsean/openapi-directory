/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreatePurchaseOrderActionDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreatePurchaseOrderActionDto::OAICreatePurchaseOrderActionDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreatePurchaseOrderActionDto::OAICreatePurchaseOrderActionDto() {
    this->initializeModel();
}

OAICreatePurchaseOrderActionDto::~OAICreatePurchaseOrderActionDto() {}

void OAICreatePurchaseOrderActionDto::initializeModel() {

    m_order_type_isSet = false;
    m_order_type_isValid = false;

    m_prefer_supplier_from_so_line_isSet = false;
    m_prefer_supplier_from_so_line_isValid = false;
}

void OAICreatePurchaseOrderActionDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreatePurchaseOrderActionDto::fromJsonObject(QJsonObject json) {

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;

    m_prefer_supplier_from_so_line_isValid = ::OpenAPI::fromJsonValue(m_prefer_supplier_from_so_line, json[QString("preferSupplierFromSOLine")]);
    m_prefer_supplier_from_so_line_isSet = !json[QString("preferSupplierFromSOLine")].isNull() && m_prefer_supplier_from_so_line_isValid;
}

QString OAICreatePurchaseOrderActionDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreatePurchaseOrderActionDto::asJsonObject() const {
    QJsonObject obj;
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    if (m_prefer_supplier_from_so_line_isSet) {
        obj.insert(QString("preferSupplierFromSOLine"), ::OpenAPI::toJsonValue(m_prefer_supplier_from_so_line));
    }
    return obj;
}

QString OAICreatePurchaseOrderActionDto::getOrderType() const {
    return m_order_type;
}
void OAICreatePurchaseOrderActionDto::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAICreatePurchaseOrderActionDto::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAICreatePurchaseOrderActionDto::is_order_type_Valid() const{
    return m_order_type_isValid;
}

bool OAICreatePurchaseOrderActionDto::isPreferSupplierFromSoLine() const {
    return m_prefer_supplier_from_so_line;
}
void OAICreatePurchaseOrderActionDto::setPreferSupplierFromSoLine(const bool &prefer_supplier_from_so_line) {
    m_prefer_supplier_from_so_line = prefer_supplier_from_so_line;
    m_prefer_supplier_from_so_line_isSet = true;
}

bool OAICreatePurchaseOrderActionDto::is_prefer_supplier_from_so_line_Set() const{
    return m_prefer_supplier_from_so_line_isSet;
}

bool OAICreatePurchaseOrderActionDto::is_prefer_supplier_from_so_line_Valid() const{
    return m_prefer_supplier_from_so_line_isValid;
}

bool OAICreatePurchaseOrderActionDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefer_supplier_from_so_line_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreatePurchaseOrderActionDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_order_type_isValid && true;
}

} // namespace OpenAPI
