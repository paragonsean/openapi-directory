/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICarrierDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICarrierDto::OAICarrierDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICarrierDto::OAICarrierDto() {
    this->initializeModel();
}

OAICarrierDto::~OAICarrierDto() {}

void OAICarrierDto::initializeModel() {

    m_carrier_description_isSet = false;
    m_carrier_description_isValid = false;

    m_carrier_id_isSet = false;
    m_carrier_id_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;
}

void OAICarrierDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICarrierDto::fromJsonObject(QJsonObject json) {

    m_carrier_description_isValid = ::OpenAPI::fromJsonValue(m_carrier_description, json[QString("carrierDescription")]);
    m_carrier_description_isSet = !json[QString("carrierDescription")].isNull() && m_carrier_description_isValid;

    m_carrier_id_isValid = ::OpenAPI::fromJsonValue(m_carrier_id, json[QString("carrierId")]);
    m_carrier_id_isSet = !json[QString("carrierId")].isNull() && m_carrier_id_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;
}

QString OAICarrierDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICarrierDto::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_description_isSet) {
        obj.insert(QString("carrierDescription"), ::OpenAPI::toJsonValue(m_carrier_description));
    }
    if (m_carrier_id_isSet) {
        obj.insert(QString("carrierId"), ::OpenAPI::toJsonValue(m_carrier_id));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    return obj;
}

QString OAICarrierDto::getCarrierDescription() const {
    return m_carrier_description;
}
void OAICarrierDto::setCarrierDescription(const QString &carrier_description) {
    m_carrier_description = carrier_description;
    m_carrier_description_isSet = true;
}

bool OAICarrierDto::is_carrier_description_Set() const{
    return m_carrier_description_isSet;
}

bool OAICarrierDto::is_carrier_description_Valid() const{
    return m_carrier_description_isValid;
}

QString OAICarrierDto::getCarrierId() const {
    return m_carrier_id;
}
void OAICarrierDto::setCarrierId(const QString &carrier_id) {
    m_carrier_id = carrier_id;
    m_carrier_id_isSet = true;
}

bool OAICarrierDto::is_carrier_id_Set() const{
    return m_carrier_id_isSet;
}

bool OAICarrierDto::is_carrier_id_Valid() const{
    return m_carrier_id_isValid;
}

QDateTime OAICarrierDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAICarrierDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAICarrierDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAICarrierDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

bool OAICarrierDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_carrier_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICarrierDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
