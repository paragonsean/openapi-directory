/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGeneralLedgerPeriodBalanceQueryParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGeneralLedgerPeriodBalanceQueryParameters::OAIGeneralLedgerPeriodBalanceQueryParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGeneralLedgerPeriodBalanceQueryParameters::OAIGeneralLedgerPeriodBalanceQueryParameters() {
    this->initializeModel();
}

OAIGeneralLedgerPeriodBalanceQueryParameters::~OAIGeneralLedgerPeriodBalanceQueryParameters() {}

void OAIGeneralLedgerPeriodBalanceQueryParameters::initializeModel() {

    m_account_isSet = false;
    m_account_isValid = false;

    m_balance_type_isSet = false;
    m_balance_type_isValid = false;

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_ledger_isSet = false;
    m_ledger_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_period_id_isSet = false;
    m_period_id_isValid = false;

    m_toggle_balance_signs_isSet = false;
    m_toggle_balance_signs_isValid = false;
}

void OAIGeneralLedgerPeriodBalanceQueryParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGeneralLedgerPeriodBalanceQueryParameters::fromJsonObject(QJsonObject json) {

    m_account_isValid = ::OpenAPI::fromJsonValue(m_account, json[QString("account")]);
    m_account_isSet = !json[QString("account")].isNull() && m_account_isValid;

    m_balance_type_isValid = ::OpenAPI::fromJsonValue(m_balance_type, json[QString("balanceType")]);
    m_balance_type_isSet = !json[QString("balanceType")].isNull() && m_balance_type_isValid;

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_ledger_isValid = ::OpenAPI::fromJsonValue(m_ledger, json[QString("ledger")]);
    m_ledger_isSet = !json[QString("ledger")].isNull() && m_ledger_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("pageNumber")]);
    m_page_number_isSet = !json[QString("pageNumber")].isNull() && m_page_number_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_period_id_isValid = ::OpenAPI::fromJsonValue(m_period_id, json[QString("periodId")]);
    m_period_id_isSet = !json[QString("periodId")].isNull() && m_period_id_isValid;

    m_toggle_balance_signs_isValid = ::OpenAPI::fromJsonValue(m_toggle_balance_signs, json[QString("toggleBalanceSigns")]);
    m_toggle_balance_signs_isSet = !json[QString("toggleBalanceSigns")].isNull() && m_toggle_balance_signs_isValid;
}

QString OAIGeneralLedgerPeriodBalanceQueryParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGeneralLedgerPeriodBalanceQueryParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_account_isSet) {
        obj.insert(QString("account"), ::OpenAPI::toJsonValue(m_account));
    }
    if (m_balance_type_isSet) {
        obj.insert(QString("balanceType"), ::OpenAPI::toJsonValue(m_balance_type));
    }
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_ledger_isSet) {
        obj.insert(QString("ledger"), ::OpenAPI::toJsonValue(m_ledger));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("pageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_period_id_isSet) {
        obj.insert(QString("periodId"), ::OpenAPI::toJsonValue(m_period_id));
    }
    if (m_toggle_balance_signs_isSet) {
        obj.insert(QString("toggleBalanceSigns"), ::OpenAPI::toJsonValue(m_toggle_balance_signs));
    }
    return obj;
}

QString OAIGeneralLedgerPeriodBalanceQueryParameters::getAccount() const {
    return m_account;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setAccount(const QString &account) {
    m_account = account;
    m_account_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_account_Set() const{
    return m_account_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_account_Valid() const{
    return m_account_isValid;
}

QString OAIGeneralLedgerPeriodBalanceQueryParameters::getBalanceType() const {
    return m_balance_type;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setBalanceType(const QString &balance_type) {
    m_balance_type = balance_type;
    m_balance_type_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_balance_type_Set() const{
    return m_balance_type_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_balance_type_Valid() const{
    return m_balance_type_isValid;
}

QString OAIGeneralLedgerPeriodBalanceQueryParameters::getBranch() const {
    return m_branch;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_branch_Valid() const{
    return m_branch_isValid;
}

QDateTime OAIGeneralLedgerPeriodBalanceQueryParameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIGeneralLedgerPeriodBalanceQueryParameters::getLedger() const {
    return m_ledger;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setLedger(const QString &ledger) {
    m_ledger = ledger;
    m_ledger_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_ledger_Set() const{
    return m_ledger_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_ledger_Valid() const{
    return m_ledger_isValid;
}

qint32 OAIGeneralLedgerPeriodBalanceQueryParameters::getPageNumber() const {
    return m_page_number;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_page_number_Valid() const{
    return m_page_number_isValid;
}

qint32 OAIGeneralLedgerPeriodBalanceQueryParameters::getPageSize() const {
    return m_page_size;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIGeneralLedgerPeriodBalanceQueryParameters::getPeriodId() const {
    return m_period_id;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setPeriodId(const QString &period_id) {
    m_period_id = period_id;
    m_period_id_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_period_id_Set() const{
    return m_period_id_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_period_id_Valid() const{
    return m_period_id_isValid;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::isToggleBalanceSigns() const {
    return m_toggle_balance_signs;
}
void OAIGeneralLedgerPeriodBalanceQueryParameters::setToggleBalanceSigns(const bool &toggle_balance_signs) {
    m_toggle_balance_signs = toggle_balance_signs;
    m_toggle_balance_signs_isSet = true;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_toggle_balance_signs_Set() const{
    return m_toggle_balance_signs_isSet;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::is_toggle_balance_signs_Valid() const{
    return m_toggle_balance_signs_isValid;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ledger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_toggle_balance_signs_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGeneralLedgerPeriodBalanceQueryParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
