/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerContractDetailsUpdateDto.h
 *
 * 
 */

#ifndef OAICustomerContractDetailsUpdateDto_H
#define OAICustomerContractDetailsUpdateDto_H

#include <QJsonObject>

#include "OAIDtoValueOfInt32.h"
#include "OAIDtoValueOfNullableOfDecimal.h"
#include "OAIDtoValueOfString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDtoValueOfInt32;
class OAIDtoValueOfNullableOfDecimal;
class OAIDtoValueOfString;

class OAICustomerContractDetailsUpdateDto : public OAIObject {
public:
    OAICustomerContractDetailsUpdateDto();
    OAICustomerContractDetailsUpdateDto(QString json);
    ~OAICustomerContractDetailsUpdateDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDtoValueOfInt32 getContractDetailId() const;
    void setContractDetailId(const OAIDtoValueOfInt32 &contract_detail_id);
    bool is_contract_detail_id_Set() const;
    bool is_contract_detail_id_Valid() const;

    OAIDtoValueOfNullableOfDecimal getExtraUsagePrice() const;
    void setExtraUsagePrice(const OAIDtoValueOfNullableOfDecimal &extra_usage_price);
    bool is_extra_usage_price_Set() const;
    bool is_extra_usage_price_Valid() const;

    OAIDtoValueOfNullableOfDecimal getIncluded() const;
    void setIncluded(const OAIDtoValueOfNullableOfDecimal &included);
    bool is_included_Set() const;
    bool is_included_Valid() const;

    OAIDtoValueOfString getItemCode() const;
    void setItemCode(const OAIDtoValueOfString &item_code);
    bool is_item_code_Set() const;
    bool is_item_code_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    OAIDtoValueOfNullableOfDecimal getRecurringPrice() const;
    void setRecurringPrice(const OAIDtoValueOfNullableOfDecimal &recurring_price);
    bool is_recurring_price_Set() const;
    bool is_recurring_price_Valid() const;

    OAIDtoValueOfNullableOfDecimal getRenewalPrice() const;
    void setRenewalPrice(const OAIDtoValueOfNullableOfDecimal &renewal_price);
    bool is_renewal_price_Set() const;
    bool is_renewal_price_Valid() const;

    OAIDtoValueOfNullableOfDecimal getSetupPrice() const;
    void setSetupPrice(const OAIDtoValueOfNullableOfDecimal &setup_price);
    bool is_setup_price_Set() const;
    bool is_setup_price_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDtoValueOfInt32 m_contract_detail_id;
    bool m_contract_detail_id_isSet;
    bool m_contract_detail_id_isValid;

    OAIDtoValueOfNullableOfDecimal m_extra_usage_price;
    bool m_extra_usage_price_isSet;
    bool m_extra_usage_price_isValid;

    OAIDtoValueOfNullableOfDecimal m_included;
    bool m_included_isSet;
    bool m_included_isValid;

    OAIDtoValueOfString m_item_code;
    bool m_item_code_isSet;
    bool m_item_code_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    OAIDtoValueOfNullableOfDecimal m_recurring_price;
    bool m_recurring_price_isSet;
    bool m_recurring_price_isValid;

    OAIDtoValueOfNullableOfDecimal m_renewal_price;
    bool m_renewal_price_isSet;
    bool m_renewal_price_isValid;

    OAIDtoValueOfNullableOfDecimal m_setup_price;
    bool m_setup_price_isSet;
    bool m_setup_price_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerContractDetailsUpdateDto)

#endif // OAICustomerContractDetailsUpdateDto_H
