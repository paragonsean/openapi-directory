/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectTransactionDocumentUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectTransactionDocumentUpdateDto::OAIProjectTransactionDocumentUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectTransactionDocumentUpdateDto::OAIProjectTransactionDocumentUpdateDto() {
    this->initializeModel();
}

OAIProjectTransactionDocumentUpdateDto::~OAIProjectTransactionDocumentUpdateDto() {}

void OAIProjectTransactionDocumentUpdateDto::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_lines_isSet = false;
    m_lines_isValid = false;

    m_module_isSet = false;
    m_module_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_ref_nbr_isSet = false;
    m_ref_nbr_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAIProjectTransactionDocumentUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectTransactionDocumentUpdateDto::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_lines_isValid = ::OpenAPI::fromJsonValue(m_lines, json[QString("lines")]);
    m_lines_isSet = !json[QString("lines")].isNull() && m_lines_isValid;

    m_module_isValid = ::OpenAPI::fromJsonValue(m_module, json[QString("module")]);
    m_module_isSet = !json[QString("module")].isNull() && m_module_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_ref_nbr_isValid = ::OpenAPI::fromJsonValue(m_ref_nbr, json[QString("refNbr")]);
    m_ref_nbr_isSet = !json[QString("refNbr")].isNull() && m_ref_nbr_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAIProjectTransactionDocumentUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectTransactionDocumentUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_lines.size() > 0) {
        obj.insert(QString("lines"), ::OpenAPI::toJsonValue(m_lines));
    }
    if (m_module.isSet()) {
        obj.insert(QString("module"), ::OpenAPI::toJsonValue(m_module));
    }
    if (m_note.isSet()) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_ref_nbr.isSet()) {
        obj.insert(QString("refNbr"), ::OpenAPI::toJsonValue(m_ref_nbr));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

OAIDtoValueOfString OAIProjectTransactionDocumentUpdateDto::getDescription() const {
    return m_description;
}
void OAIProjectTransactionDocumentUpdateDto::setDescription(const OAIDtoValueOfString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProjectTransactionDocumentUpdateDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProjectTransactionDocumentUpdateDto::is_description_Valid() const{
    return m_description_isValid;
}

QList<OAIProjectTransactionLineUpdateDto> OAIProjectTransactionDocumentUpdateDto::getLines() const {
    return m_lines;
}
void OAIProjectTransactionDocumentUpdateDto::setLines(const QList<OAIProjectTransactionLineUpdateDto> &lines) {
    m_lines = lines;
    m_lines_isSet = true;
}

bool OAIProjectTransactionDocumentUpdateDto::is_lines_Set() const{
    return m_lines_isSet;
}

bool OAIProjectTransactionDocumentUpdateDto::is_lines_Valid() const{
    return m_lines_isValid;
}

OAIDtoValueOfNullableOfJournalTransactionModule OAIProjectTransactionDocumentUpdateDto::getModule() const {
    return m_module;
}
void OAIProjectTransactionDocumentUpdateDto::setModule(const OAIDtoValueOfNullableOfJournalTransactionModule &module) {
    m_module = module;
    m_module_isSet = true;
}

bool OAIProjectTransactionDocumentUpdateDto::is_module_Set() const{
    return m_module_isSet;
}

bool OAIProjectTransactionDocumentUpdateDto::is_module_Valid() const{
    return m_module_isValid;
}

OAIDtoValueOfString OAIProjectTransactionDocumentUpdateDto::getNote() const {
    return m_note;
}
void OAIProjectTransactionDocumentUpdateDto::setNote(const OAIDtoValueOfString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIProjectTransactionDocumentUpdateDto::is_note_Set() const{
    return m_note_isSet;
}

bool OAIProjectTransactionDocumentUpdateDto::is_note_Valid() const{
    return m_note_isValid;
}

OAIDtoValueOfString OAIProjectTransactionDocumentUpdateDto::getRefNbr() const {
    return m_ref_nbr;
}
void OAIProjectTransactionDocumentUpdateDto::setRefNbr(const OAIDtoValueOfString &ref_nbr) {
    m_ref_nbr = ref_nbr;
    m_ref_nbr_isSet = true;
}

bool OAIProjectTransactionDocumentUpdateDto::is_ref_nbr_Set() const{
    return m_ref_nbr_isSet;
}

bool OAIProjectTransactionDocumentUpdateDto::is_ref_nbr_Valid() const{
    return m_ref_nbr_isValid;
}

OAIDtoValueOfNullableOfProjectTransactionStatus OAIProjectTransactionDocumentUpdateDto::getStatus() const {
    return m_status;
}
void OAIProjectTransactionDocumentUpdateDto::setStatus(const OAIDtoValueOfNullableOfProjectTransactionStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIProjectTransactionDocumentUpdateDto::is_status_Set() const{
    return m_status_isSet;
}

bool OAIProjectTransactionDocumentUpdateDto::is_status_Valid() const{
    return m_status_isValid;
}

bool OAIProjectTransactionDocumentUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lines.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_module.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_note.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_nbr.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectTransactionDocumentUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
