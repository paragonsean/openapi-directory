/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAllocationsUpdateDto.h
 *
 * This class represents a Allocations for Purchase Receipt Line in PurchaseReceiptEndpoint. Used to add/update data.
 */

#ifndef OAIAllocationsUpdateDto_H
#define OAIAllocationsUpdateDto_H

#include <QJsonObject>

#include "OAIExpirationDateInAllocationsUpdateDto.h"
#include "OAILineNbrInAllocationsUpdateDto.h"
#include "OAILocationInAllocationsUpdateDto.h"
#include "OAILotSerialNumberInAllocationsUpdateDto.h"
#include "OAIQuantityInAllocationsUpdateDto.h"
#include "OAIUomInAllocationsUpdateDto.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpirationDateInAllocationsUpdateDto;
class OAILineNbrInAllocationsUpdateDto;
class OAILocationInAllocationsUpdateDto;
class OAILotSerialNumberInAllocationsUpdateDto;
class OAIQuantityInAllocationsUpdateDto;
class OAIUomInAllocationsUpdateDto;

class OAIAllocationsUpdateDto : public OAIObject {
public:
    OAIAllocationsUpdateDto();
    OAIAllocationsUpdateDto(QString json);
    ~OAIAllocationsUpdateDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExpirationDateInAllocationsUpdateDto getExpirationDate() const;
    void setExpirationDate(const OAIExpirationDateInAllocationsUpdateDto &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    OAILineNbrInAllocationsUpdateDto getLineNbr() const;
    void setLineNbr(const OAILineNbrInAllocationsUpdateDto &line_nbr);
    bool is_line_nbr_Set() const;
    bool is_line_nbr_Valid() const;

    OAILocationInAllocationsUpdateDto getLocation() const;
    void setLocation(const OAILocationInAllocationsUpdateDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAILotSerialNumberInAllocationsUpdateDto getLotSerialNumber() const;
    void setLotSerialNumber(const OAILotSerialNumberInAllocationsUpdateDto &lot_serial_number);
    bool is_lot_serial_number_Set() const;
    bool is_lot_serial_number_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    OAIQuantityInAllocationsUpdateDto getQuantity() const;
    void setQuantity(const OAIQuantityInAllocationsUpdateDto &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    OAIUomInAllocationsUpdateDto getUom() const;
    void setUom(const OAIUomInAllocationsUpdateDto &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExpirationDateInAllocationsUpdateDto m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    OAILineNbrInAllocationsUpdateDto m_line_nbr;
    bool m_line_nbr_isSet;
    bool m_line_nbr_isValid;

    OAILocationInAllocationsUpdateDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAILotSerialNumberInAllocationsUpdateDto m_lot_serial_number;
    bool m_lot_serial_number_isSet;
    bool m_lot_serial_number_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    OAIQuantityInAllocationsUpdateDto m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    OAIUomInAllocationsUpdateDto m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAllocationsUpdateDto)

#endif // OAIAllocationsUpdateDto_H
