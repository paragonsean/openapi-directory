/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILocationUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILocationUpdateDto::OAILocationUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILocationUpdateDto::OAILocationUpdateDto() {
    this->initializeModel();
}

OAILocationUpdateDto::~OAILocationUpdateDto() {}

void OAILocationUpdateDto::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_address_is_same_as_main_isSet = false;
    m_address_is_same_as_main_isValid = false;

    m_baccount_id_isSet = false;
    m_baccount_id_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_contact_is_same_as_main_isSet = false;
    m_contact_is_same_as_main_isValid = false;

    m_corporate_id_isSet = false;
    m_corporate_id_isValid = false;

    m_edi_code_isSet = false;
    m_edi_code_isValid = false;

    m_gln_isSet = false;
    m_gln_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_location_name_isSet = false;
    m_location_name_isValid = false;

    m_peppol_scheme_isSet = false;
    m_peppol_scheme_isValid = false;

    m_vat_registration_id_isSet = false;
    m_vat_registration_id_isValid = false;

    m_vat_zone_isSet = false;
    m_vat_zone_isValid = false;
}

void OAILocationUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILocationUpdateDto::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_address_is_same_as_main_isValid = ::OpenAPI::fromJsonValue(m_address_is_same_as_main, json[QString("addressIsSameAsMain")]);
    m_address_is_same_as_main_isSet = !json[QString("addressIsSameAsMain")].isNull() && m_address_is_same_as_main_isValid;

    m_baccount_id_isValid = ::OpenAPI::fromJsonValue(m_baccount_id, json[QString("baccountId")]);
    m_baccount_id_isSet = !json[QString("baccountId")].isNull() && m_baccount_id_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("contact")]);
    m_contact_isSet = !json[QString("contact")].isNull() && m_contact_isValid;

    m_contact_is_same_as_main_isValid = ::OpenAPI::fromJsonValue(m_contact_is_same_as_main, json[QString("contactIsSameAsMain")]);
    m_contact_is_same_as_main_isSet = !json[QString("contactIsSameAsMain")].isNull() && m_contact_is_same_as_main_isValid;

    m_corporate_id_isValid = ::OpenAPI::fromJsonValue(m_corporate_id, json[QString("corporateId")]);
    m_corporate_id_isSet = !json[QString("corporateId")].isNull() && m_corporate_id_isValid;

    m_edi_code_isValid = ::OpenAPI::fromJsonValue(m_edi_code, json[QString("ediCode")]);
    m_edi_code_isSet = !json[QString("ediCode")].isNull() && m_edi_code_isValid;

    m_gln_isValid = ::OpenAPI::fromJsonValue(m_gln, json[QString("gln")]);
    m_gln_isSet = !json[QString("gln")].isNull() && m_gln_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_location_name_isValid = ::OpenAPI::fromJsonValue(m_location_name, json[QString("locationName")]);
    m_location_name_isSet = !json[QString("locationName")].isNull() && m_location_name_isValid;

    m_peppol_scheme_isValid = ::OpenAPI::fromJsonValue(m_peppol_scheme, json[QString("peppolScheme")]);
    m_peppol_scheme_isSet = !json[QString("peppolScheme")].isNull() && m_peppol_scheme_isValid;

    m_vat_registration_id_isValid = ::OpenAPI::fromJsonValue(m_vat_registration_id, json[QString("vatRegistrationId")]);
    m_vat_registration_id_isSet = !json[QString("vatRegistrationId")].isNull() && m_vat_registration_id_isValid;

    m_vat_zone_isValid = ::OpenAPI::fromJsonValue(m_vat_zone, json[QString("vatZone")]);
    m_vat_zone_isSet = !json[QString("vatZone")].isNull() && m_vat_zone_isValid;
}

QString OAILocationUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILocationUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_active.isSet()) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_address_is_same_as_main.isSet()) {
        obj.insert(QString("addressIsSameAsMain"), ::OpenAPI::toJsonValue(m_address_is_same_as_main));
    }
    if (m_baccount_id.isSet()) {
        obj.insert(QString("baccountId"), ::OpenAPI::toJsonValue(m_baccount_id));
    }
    if (m_contact.isSet()) {
        obj.insert(QString("contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_contact_is_same_as_main.isSet()) {
        obj.insert(QString("contactIsSameAsMain"), ::OpenAPI::toJsonValue(m_contact_is_same_as_main));
    }
    if (m_corporate_id.isSet()) {
        obj.insert(QString("corporateId"), ::OpenAPI::toJsonValue(m_corporate_id));
    }
    if (m_edi_code.isSet()) {
        obj.insert(QString("ediCode"), ::OpenAPI::toJsonValue(m_edi_code));
    }
    if (m_gln.isSet()) {
        obj.insert(QString("gln"), ::OpenAPI::toJsonValue(m_gln));
    }
    if (m_location_id.isSet()) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_location_name.isSet()) {
        obj.insert(QString("locationName"), ::OpenAPI::toJsonValue(m_location_name));
    }
    if (m_peppol_scheme.isSet()) {
        obj.insert(QString("peppolScheme"), ::OpenAPI::toJsonValue(m_peppol_scheme));
    }
    if (m_vat_registration_id.isSet()) {
        obj.insert(QString("vatRegistrationId"), ::OpenAPI::toJsonValue(m_vat_registration_id));
    }
    if (m_vat_zone.isSet()) {
        obj.insert(QString("vatZone"), ::OpenAPI::toJsonValue(m_vat_zone));
    }
    return obj;
}

OAIDtoValueOfNullableOfBoolean OAILocationUpdateDto::getActive() const {
    return m_active;
}
void OAILocationUpdateDto::setActive(const OAIDtoValueOfNullableOfBoolean &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAILocationUpdateDto::is_active_Set() const{
    return m_active_isSet;
}

bool OAILocationUpdateDto::is_active_Valid() const{
    return m_active_isValid;
}

OAIDtoValueOfAddressUpdateDto OAILocationUpdateDto::getAddress() const {
    return m_address;
}
void OAILocationUpdateDto::setAddress(const OAIDtoValueOfAddressUpdateDto &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAILocationUpdateDto::is_address_Set() const{
    return m_address_isSet;
}

bool OAILocationUpdateDto::is_address_Valid() const{
    return m_address_isValid;
}

OAIDtoValueOfNullableOfBoolean OAILocationUpdateDto::getAddressIsSameAsMain() const {
    return m_address_is_same_as_main;
}
void OAILocationUpdateDto::setAddressIsSameAsMain(const OAIDtoValueOfNullableOfBoolean &address_is_same_as_main) {
    m_address_is_same_as_main = address_is_same_as_main;
    m_address_is_same_as_main_isSet = true;
}

bool OAILocationUpdateDto::is_address_is_same_as_main_Set() const{
    return m_address_is_same_as_main_isSet;
}

bool OAILocationUpdateDto::is_address_is_same_as_main_Valid() const{
    return m_address_is_same_as_main_isValid;
}

OAIBaccountIdInLocationUpdateDto OAILocationUpdateDto::getBaccountId() const {
    return m_baccount_id;
}
void OAILocationUpdateDto::setBaccountId(const OAIBaccountIdInLocationUpdateDto &baccount_id) {
    m_baccount_id = baccount_id;
    m_baccount_id_isSet = true;
}

bool OAILocationUpdateDto::is_baccount_id_Set() const{
    return m_baccount_id_isSet;
}

bool OAILocationUpdateDto::is_baccount_id_Valid() const{
    return m_baccount_id_isValid;
}

OAIDtoValueOfContactInfoUpdateDto OAILocationUpdateDto::getContact() const {
    return m_contact;
}
void OAILocationUpdateDto::setContact(const OAIDtoValueOfContactInfoUpdateDto &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAILocationUpdateDto::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAILocationUpdateDto::is_contact_Valid() const{
    return m_contact_isValid;
}

OAIDtoValueOfNullableOfBoolean OAILocationUpdateDto::getContactIsSameAsMain() const {
    return m_contact_is_same_as_main;
}
void OAILocationUpdateDto::setContactIsSameAsMain(const OAIDtoValueOfNullableOfBoolean &contact_is_same_as_main) {
    m_contact_is_same_as_main = contact_is_same_as_main;
    m_contact_is_same_as_main_isSet = true;
}

bool OAILocationUpdateDto::is_contact_is_same_as_main_Set() const{
    return m_contact_is_same_as_main_isSet;
}

bool OAILocationUpdateDto::is_contact_is_same_as_main_Valid() const{
    return m_contact_is_same_as_main_isValid;
}

OAIDtoValueOfString OAILocationUpdateDto::getCorporateId() const {
    return m_corporate_id;
}
void OAILocationUpdateDto::setCorporateId(const OAIDtoValueOfString &corporate_id) {
    m_corporate_id = corporate_id;
    m_corporate_id_isSet = true;
}

bool OAILocationUpdateDto::is_corporate_id_Set() const{
    return m_corporate_id_isSet;
}

bool OAILocationUpdateDto::is_corporate_id_Valid() const{
    return m_corporate_id_isValid;
}

OAIDtoValueOfString OAILocationUpdateDto::getEdiCode() const {
    return m_edi_code;
}
void OAILocationUpdateDto::setEdiCode(const OAIDtoValueOfString &edi_code) {
    m_edi_code = edi_code;
    m_edi_code_isSet = true;
}

bool OAILocationUpdateDto::is_edi_code_Set() const{
    return m_edi_code_isSet;
}

bool OAILocationUpdateDto::is_edi_code_Valid() const{
    return m_edi_code_isValid;
}

OAIDtoValueOfString OAILocationUpdateDto::getGln() const {
    return m_gln;
}
void OAILocationUpdateDto::setGln(const OAIDtoValueOfString &gln) {
    m_gln = gln;
    m_gln_isSet = true;
}

bool OAILocationUpdateDto::is_gln_Set() const{
    return m_gln_isSet;
}

bool OAILocationUpdateDto::is_gln_Valid() const{
    return m_gln_isValid;
}

OAILocationIdInLocationUpdateDto OAILocationUpdateDto::getLocationId() const {
    return m_location_id;
}
void OAILocationUpdateDto::setLocationId(const OAILocationIdInLocationUpdateDto &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAILocationUpdateDto::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAILocationUpdateDto::is_location_id_Valid() const{
    return m_location_id_isValid;
}

OAIDtoValueOfString OAILocationUpdateDto::getLocationName() const {
    return m_location_name;
}
void OAILocationUpdateDto::setLocationName(const OAIDtoValueOfString &location_name) {
    m_location_name = location_name;
    m_location_name_isSet = true;
}

bool OAILocationUpdateDto::is_location_name_Set() const{
    return m_location_name_isSet;
}

bool OAILocationUpdateDto::is_location_name_Valid() const{
    return m_location_name_isValid;
}

OAIDtoValueOfPeppolSchemeUpdateDto OAILocationUpdateDto::getPeppolScheme() const {
    return m_peppol_scheme;
}
void OAILocationUpdateDto::setPeppolScheme(const OAIDtoValueOfPeppolSchemeUpdateDto &peppol_scheme) {
    m_peppol_scheme = peppol_scheme;
    m_peppol_scheme_isSet = true;
}

bool OAILocationUpdateDto::is_peppol_scheme_Set() const{
    return m_peppol_scheme_isSet;
}

bool OAILocationUpdateDto::is_peppol_scheme_Valid() const{
    return m_peppol_scheme_isValid;
}

OAIDtoValueOfString OAILocationUpdateDto::getVatRegistrationId() const {
    return m_vat_registration_id;
}
void OAILocationUpdateDto::setVatRegistrationId(const OAIDtoValueOfString &vat_registration_id) {
    m_vat_registration_id = vat_registration_id;
    m_vat_registration_id_isSet = true;
}

bool OAILocationUpdateDto::is_vat_registration_id_Set() const{
    return m_vat_registration_id_isSet;
}

bool OAILocationUpdateDto::is_vat_registration_id_Valid() const{
    return m_vat_registration_id_isValid;
}

OAIDtoValueOfString OAILocationUpdateDto::getVatZone() const {
    return m_vat_zone;
}
void OAILocationUpdateDto::setVatZone(const OAIDtoValueOfString &vat_zone) {
    m_vat_zone = vat_zone;
    m_vat_zone_isSet = true;
}

bool OAILocationUpdateDto::is_vat_zone_Set() const{
    return m_vat_zone_isSet;
}

bool OAILocationUpdateDto::is_vat_zone_Valid() const{
    return m_vat_zone_isValid;
}

bool OAILocationUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_is_same_as_main.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_baccount_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_is_same_as_main.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporate_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_edi_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gln.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_peppol_scheme.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_registration_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_zone.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILocationUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
