/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISupplierInvoiceDto.h
 *
 * This class represents a ApInvoice in SupplierInvoiceController. Used by getting data.
 */

#ifndef OAISupplierInvoiceDto_H
#define OAISupplierInvoiceDto_H

#include <QJsonObject>

#include "OAIApprovalDetailsInSupplierInvoiceDto.h"
#include "OAIAttachmentDto.h"
#include "OAIBranchNumberDto.h"
#include "OAICreditTermsInSupplierInvoiceDto.h"
#include "OAILocationInSupplierInvoiceDto.h"
#include "OAIMetadataDto.h"
#include "OAIPaymentMethodInSupplierInvoiceDto.h"
#include "OAISupplierInSupplierInvoiceDto.h"
#include "OAISupplierInvoiceLineDto.h"
#include "OAISupplierTaxZoneInSupplierInvoiceDto.h"
#include "OAITaxDetailDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApprovalDetailsInSupplierInvoiceDto;
class OAIAttachmentDto;
class OAIBranchNumberDto;
class OAICreditTermsInSupplierInvoiceDto;
class OAISupplierInvoiceLineDto;
class OAILocationInSupplierInvoiceDto;
class OAIMetadataDto;
class OAIPaymentMethodInSupplierInvoiceDto;
class OAISupplierInSupplierInvoiceDto;
class OAISupplierTaxZoneInSupplierInvoiceDto;
class OAITaxDetailDto;

class OAISupplierInvoiceDto : public OAIObject {
public:
    OAISupplierInvoiceDto();
    OAISupplierInvoiceDto(QString json);
    ~OAISupplierInvoiceDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAIApprovalDetailsInSupplierInvoiceDto getApprovalDetails() const;
    void setApprovalDetails(const OAIApprovalDetailsInSupplierInvoiceDto &approval_details);
    bool is_approval_details_Set() const;
    bool is_approval_details_Valid() const;

    QString getApprovalStatus() const;
    void setApprovalStatus(const QString &approval_status);
    bool is_approval_status_Set() const;
    bool is_approval_status_Valid() const;

    QList<OAIAttachmentDto> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentDto> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    double getBalance() const;
    void setBalance(const double &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    double getBalanceInCurrency() const;
    void setBalanceInCurrency(const double &balance_in_currency);
    bool is_balance_in_currency_Set() const;
    bool is_balance_in_currency_Valid() const;

    OAIBranchNumberDto getBranchNumber() const;
    void setBranchNumber(const OAIBranchNumberDto &branch_number);
    bool is_branch_number_Set() const;
    bool is_branch_number_Valid() const;

    QString getBuyerReference() const;
    void setBuyerReference(const QString &buyer_reference);
    bool is_buyer_reference_Set() const;
    bool is_buyer_reference_Valid() const;

    QString getCashAccount() const;
    void setCashAccount(const QString &cash_account);
    bool is_cash_account_Set() const;
    bool is_cash_account_Valid() const;

    double getCashDiscount() const;
    void setCashDiscount(const double &cash_discount);
    bool is_cash_discount_Set() const;
    bool is_cash_discount_Valid() const;

    QDateTime getCashDiscountDate() const;
    void setCashDiscountDate(const QDateTime &cash_discount_date);
    bool is_cash_discount_date_Set() const;
    bool is_cash_discount_date_Valid() const;

    double getCashDiscountInCurrency() const;
    void setCashDiscountInCurrency(const double &cash_discount_in_currency);
    bool is_cash_discount_in_currency_Set() const;
    bool is_cash_discount_in_currency_Valid() const;

    QString getClosedFinancialPeriod() const;
    void setClosedFinancialPeriod(const QString &closed_financial_period);
    bool is_closed_financial_period_Set() const;
    bool is_closed_financial_period_Valid() const;

    QDateTime getCreatedDateTime() const;
    void setCreatedDateTime(const QDateTime &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    OAICreditTermsInSupplierInvoiceDto getCreditTerms() const;
    void setCreditTerms(const OAICreditTermsInSupplierInvoiceDto &credit_terms);
    bool is_credit_terms_Set() const;
    bool is_credit_terms_Valid() const;

    QString getCurrencyId() const;
    void setCurrencyId(const QString &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    double getCuryRetainageTotal() const;
    void setCuryRetainageTotal(const double &cury_retainage_total);
    bool is_cury_retainage_total_Set() const;
    bool is_cury_retainage_total_Valid() const;

    double getCuryRetainageUnreleasedAmt() const;
    void setCuryRetainageUnreleasedAmt(const double &cury_retainage_unreleased_amt);
    bool is_cury_retainage_unreleased_amt_Set() const;
    bool is_cury_retainage_unreleased_amt_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getDetailTotal() const;
    void setDetailTotal(const double &detail_total);
    bool is_detail_total_Set() const;
    bool is_detail_total_Valid() const;

    double getDetailTotalInCurrency() const;
    void setDetailTotalInCurrency(const double &detail_total_in_currency);
    bool is_detail_total_in_currency_Set() const;
    bool is_detail_total_in_currency_Valid() const;

    double getDiscountTotal() const;
    void setDiscountTotal(const double &discount_total);
    bool is_discount_total_Set() const;
    bool is_discount_total_Valid() const;

    double getDiscountTotalInCurrency() const;
    void setDiscountTotalInCurrency(const double &discount_total_in_currency);
    bool is_discount_total_in_currency_Set() const;
    bool is_discount_total_in_currency_Valid() const;

    QString getDocumentType() const;
    void setDocumentType(const QString &document_type);
    bool is_document_type_Set() const;
    bool is_document_type_Valid() const;

    qint64 getDocumentVersionNumber() const;
    void setDocumentVersionNumber(const qint64 &document_version_number);
    bool is_document_version_number_Set() const;
    bool is_document_version_number_Valid() const;

    QDateTime getDueDate() const;
    void setDueDate(const QDateTime &due_date);
    bool is_due_date_Set() const;
    bool is_due_date_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    double getExchangeRate() const;
    void setExchangeRate(const double &exchange_rate);
    bool is_exchange_rate_Set() const;
    bool is_exchange_rate_Valid() const;

    QString getFinancialPeriod() const;
    void setFinancialPeriod(const QString &financial_period);
    bool is_financial_period_Set() const;
    bool is_financial_period_Valid() const;

    bool isHold() const;
    void setHold(const bool &hold);
    bool is_hold_Set() const;
    bool is_hold_Valid() const;

    QList<OAISupplierInvoiceLineDto> getInvoiceLines() const;
    void setInvoiceLines(const QList<OAISupplierInvoiceLineDto> &invoice_lines);
    bool is_invoice_lines_Set() const;
    bool is_invoice_lines_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    OAILocationInSupplierInvoiceDto getLocation() const;
    void setLocation(const OAILocationInSupplierInvoiceDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QDateTime getOrigInvoiceDate() const;
    void setOrigInvoiceDate(const QDateTime &orig_invoice_date);
    bool is_orig_invoice_date_Set() const;
    bool is_orig_invoice_date_Valid() const;

    QDateTime getPayDate() const;
    void setPayDate(const QDateTime &pay_date);
    bool is_pay_date_Set() const;
    bool is_pay_date_Valid() const;

    bool isPaySelected() const;
    void setPaySelected(const bool &pay_selected);
    bool is_pay_selected_Set() const;
    bool is_pay_selected_Valid() const;

    QString getPaymentMessage() const;
    void setPaymentMessage(const QString &payment_message);
    bool is_payment_message_Set() const;
    bool is_payment_message_Valid() const;

    OAIPaymentMethodInSupplierInvoiceDto getPaymentMethod() const;
    void setPaymentMethod(const OAIPaymentMethodInSupplierInvoiceDto &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getPaymentRefNo() const;
    void setPaymentRefNo(const QString &payment_ref_no);
    bool is_payment_ref_no_Set() const;
    bool is_payment_ref_no_Valid() const;

    QString getPostPeriod() const;
    void setPostPeriod(const QString &post_period);
    bool is_post_period_Set() const;
    bool is_post_period_Valid() const;

    QString getReferenceNumber() const;
    void setReferenceNumber(const QString &reference_number);
    bool is_reference_number_Set() const;
    bool is_reference_number_Valid() const;

    bool isRetainageApply() const;
    void setRetainageApply(const bool &retainage_apply);
    bool is_retainage_apply_Set() const;
    bool is_retainage_apply_Valid() const;

    double getRoundingDiff() const;
    void setRoundingDiff(const double &rounding_diff);
    bool is_rounding_diff_Set() const;
    bool is_rounding_diff_Valid() const;

    double getRoundingDiffInCurrency() const;
    void setRoundingDiffInCurrency(const double &rounding_diff_in_currency);
    bool is_rounding_diff_in_currency_Set() const;
    bool is_rounding_diff_in_currency_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAISupplierInSupplierInvoiceDto getSupplier() const;
    void setSupplier(const OAISupplierInSupplierInvoiceDto &supplier);
    bool is_supplier_Set() const;
    bool is_supplier_Valid() const;

    QString getSupplierReference() const;
    void setSupplierReference(const QString &supplier_reference);
    bool is_supplier_reference_Set() const;
    bool is_supplier_reference_Valid() const;

    OAISupplierTaxZoneInSupplierInvoiceDto getSupplierTaxZone() const;
    void setSupplierTaxZone(const OAISupplierTaxZoneInSupplierInvoiceDto &supplier_tax_zone);
    bool is_supplier_tax_zone_Set() const;
    bool is_supplier_tax_zone_Valid() const;

    QString getTaxCalculationMode() const;
    void setTaxCalculationMode(const QString &tax_calculation_mode);
    bool is_tax_calculation_mode_Set() const;
    bool is_tax_calculation_mode_Valid() const;

    QList<OAITaxDetailDto> getTaxDetailLines() const;
    void setTaxDetailLines(const QList<OAITaxDetailDto> &tax_detail_lines);
    bool is_tax_detail_lines_Set() const;
    bool is_tax_detail_lines_Valid() const;

    double getVatAmount() const;
    void setVatAmount(const double &vat_amount);
    bool is_vat_amount_Set() const;
    bool is_vat_amount_Valid() const;

    double getVatExemptTotal() const;
    void setVatExemptTotal(const double &vat_exempt_total);
    bool is_vat_exempt_total_Set() const;
    bool is_vat_exempt_total_Valid() const;

    double getVatExemptTotalInCurrency() const;
    void setVatExemptTotalInCurrency(const double &vat_exempt_total_in_currency);
    bool is_vat_exempt_total_in_currency_Set() const;
    bool is_vat_exempt_total_in_currency_Valid() const;

    double getVatTaxableTotal() const;
    void setVatTaxableTotal(const double &vat_taxable_total);
    bool is_vat_taxable_total_Set() const;
    bool is_vat_taxable_total_Valid() const;

    double getVatTaxableTotalInCurrency() const;
    void setVatTaxableTotalInCurrency(const double &vat_taxable_total_in_currency);
    bool is_vat_taxable_total_in_currency_Set() const;
    bool is_vat_taxable_total_in_currency_Valid() const;

    double getVatTotal() const;
    void setVatTotal(const double &vat_total);
    bool is_vat_total_Set() const;
    bool is_vat_total_Valid() const;

    double getVatTotalInCurrency() const;
    void setVatTotalInCurrency(const double &vat_total_in_currency);
    bool is_vat_total_in_currency_Set() const;
    bool is_vat_total_in_currency_Valid() const;

    double getWithholdingTax() const;
    void setWithholdingTax(const double &withholding_tax);
    bool is_withholding_tax_Set() const;
    bool is_withholding_tax_Valid() const;

    double getWithholdingTaxInCurrency() const;
    void setWithholdingTaxInCurrency(const double &withholding_tax_in_currency);
    bool is_withholding_tax_in_currency_Set() const;
    bool is_withholding_tax_in_currency_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAIApprovalDetailsInSupplierInvoiceDto m_approval_details;
    bool m_approval_details_isSet;
    bool m_approval_details_isValid;

    QString m_approval_status;
    bool m_approval_status_isSet;
    bool m_approval_status_isValid;

    QList<OAIAttachmentDto> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    double m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    double m_balance_in_currency;
    bool m_balance_in_currency_isSet;
    bool m_balance_in_currency_isValid;

    OAIBranchNumberDto m_branch_number;
    bool m_branch_number_isSet;
    bool m_branch_number_isValid;

    QString m_buyer_reference;
    bool m_buyer_reference_isSet;
    bool m_buyer_reference_isValid;

    QString m_cash_account;
    bool m_cash_account_isSet;
    bool m_cash_account_isValid;

    double m_cash_discount;
    bool m_cash_discount_isSet;
    bool m_cash_discount_isValid;

    QDateTime m_cash_discount_date;
    bool m_cash_discount_date_isSet;
    bool m_cash_discount_date_isValid;

    double m_cash_discount_in_currency;
    bool m_cash_discount_in_currency_isSet;
    bool m_cash_discount_in_currency_isValid;

    QString m_closed_financial_period;
    bool m_closed_financial_period_isSet;
    bool m_closed_financial_period_isValid;

    QDateTime m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    OAICreditTermsInSupplierInvoiceDto m_credit_terms;
    bool m_credit_terms_isSet;
    bool m_credit_terms_isValid;

    QString m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    double m_cury_retainage_total;
    bool m_cury_retainage_total_isSet;
    bool m_cury_retainage_total_isValid;

    double m_cury_retainage_unreleased_amt;
    bool m_cury_retainage_unreleased_amt_isSet;
    bool m_cury_retainage_unreleased_amt_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_detail_total;
    bool m_detail_total_isSet;
    bool m_detail_total_isValid;

    double m_detail_total_in_currency;
    bool m_detail_total_in_currency_isSet;
    bool m_detail_total_in_currency_isValid;

    double m_discount_total;
    bool m_discount_total_isSet;
    bool m_discount_total_isValid;

    double m_discount_total_in_currency;
    bool m_discount_total_in_currency_isSet;
    bool m_discount_total_in_currency_isValid;

    QString m_document_type;
    bool m_document_type_isSet;
    bool m_document_type_isValid;

    qint64 m_document_version_number;
    bool m_document_version_number_isSet;
    bool m_document_version_number_isValid;

    QDateTime m_due_date;
    bool m_due_date_isSet;
    bool m_due_date_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    double m_exchange_rate;
    bool m_exchange_rate_isSet;
    bool m_exchange_rate_isValid;

    QString m_financial_period;
    bool m_financial_period_isSet;
    bool m_financial_period_isValid;

    bool m_hold;
    bool m_hold_isSet;
    bool m_hold_isValid;

    QList<OAISupplierInvoiceLineDto> m_invoice_lines;
    bool m_invoice_lines_isSet;
    bool m_invoice_lines_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    OAILocationInSupplierInvoiceDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QDateTime m_orig_invoice_date;
    bool m_orig_invoice_date_isSet;
    bool m_orig_invoice_date_isValid;

    QDateTime m_pay_date;
    bool m_pay_date_isSet;
    bool m_pay_date_isValid;

    bool m_pay_selected;
    bool m_pay_selected_isSet;
    bool m_pay_selected_isValid;

    QString m_payment_message;
    bool m_payment_message_isSet;
    bool m_payment_message_isValid;

    OAIPaymentMethodInSupplierInvoiceDto m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_payment_ref_no;
    bool m_payment_ref_no_isSet;
    bool m_payment_ref_no_isValid;

    QString m_post_period;
    bool m_post_period_isSet;
    bool m_post_period_isValid;

    QString m_reference_number;
    bool m_reference_number_isSet;
    bool m_reference_number_isValid;

    bool m_retainage_apply;
    bool m_retainage_apply_isSet;
    bool m_retainage_apply_isValid;

    double m_rounding_diff;
    bool m_rounding_diff_isSet;
    bool m_rounding_diff_isValid;

    double m_rounding_diff_in_currency;
    bool m_rounding_diff_in_currency_isSet;
    bool m_rounding_diff_in_currency_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAISupplierInSupplierInvoiceDto m_supplier;
    bool m_supplier_isSet;
    bool m_supplier_isValid;

    QString m_supplier_reference;
    bool m_supplier_reference_isSet;
    bool m_supplier_reference_isValid;

    OAISupplierTaxZoneInSupplierInvoiceDto m_supplier_tax_zone;
    bool m_supplier_tax_zone_isSet;
    bool m_supplier_tax_zone_isValid;

    QString m_tax_calculation_mode;
    bool m_tax_calculation_mode_isSet;
    bool m_tax_calculation_mode_isValid;

    QList<OAITaxDetailDto> m_tax_detail_lines;
    bool m_tax_detail_lines_isSet;
    bool m_tax_detail_lines_isValid;

    double m_vat_amount;
    bool m_vat_amount_isSet;
    bool m_vat_amount_isValid;

    double m_vat_exempt_total;
    bool m_vat_exempt_total_isSet;
    bool m_vat_exempt_total_isValid;

    double m_vat_exempt_total_in_currency;
    bool m_vat_exempt_total_in_currency_isSet;
    bool m_vat_exempt_total_in_currency_isValid;

    double m_vat_taxable_total;
    bool m_vat_taxable_total_isSet;
    bool m_vat_taxable_total_isValid;

    double m_vat_taxable_total_in_currency;
    bool m_vat_taxable_total_in_currency_isSet;
    bool m_vat_taxable_total_in_currency_isValid;

    double m_vat_total;
    bool m_vat_total_isSet;
    bool m_vat_total_isValid;

    double m_vat_total_in_currency;
    bool m_vat_total_in_currency_isSet;
    bool m_vat_total_in_currency_isValid;

    double m_withholding_tax;
    bool m_withholding_tax_isSet;
    bool m_withholding_tax_isValid;

    double m_withholding_tax_in_currency;
    bool m_withholding_tax_in_currency_isSet;
    bool m_withholding_tax_in_currency_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISupplierInvoiceDto)

#endif // OAISupplierInvoiceDto_H
