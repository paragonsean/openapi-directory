/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPurchaseReceiptOrderUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPurchaseReceiptOrderUpdateDto::OAIPurchaseReceiptOrderUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPurchaseReceiptOrderUpdateDto::OAIPurchaseReceiptOrderUpdateDto() {
    this->initializeModel();
}

OAIPurchaseReceiptOrderUpdateDto::~OAIPurchaseReceiptOrderUpdateDto() {}

void OAIPurchaseReceiptOrderUpdateDto::initializeModel() {

    m_allocations_isSet = false;
    m_allocations_isValid = false;

    m_order_nbr_isSet = false;
    m_order_nbr_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;
}

void OAIPurchaseReceiptOrderUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPurchaseReceiptOrderUpdateDto::fromJsonObject(QJsonObject json) {

    m_allocations_isValid = ::OpenAPI::fromJsonValue(m_allocations, json[QString("allocations")]);
    m_allocations_isSet = !json[QString("allocations")].isNull() && m_allocations_isValid;

    m_order_nbr_isValid = ::OpenAPI::fromJsonValue(m_order_nbr, json[QString("orderNbr")]);
    m_order_nbr_isSet = !json[QString("orderNbr")].isNull() && m_order_nbr_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;
}

QString OAIPurchaseReceiptOrderUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPurchaseReceiptOrderUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_allocations.size() > 0) {
        obj.insert(QString("allocations"), ::OpenAPI::toJsonValue(m_allocations));
    }
    if (m_order_nbr_isSet) {
        obj.insert(QString("orderNbr"), ::OpenAPI::toJsonValue(m_order_nbr));
    }
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    return obj;
}

QList<OAIAllocationsUpdateDto> OAIPurchaseReceiptOrderUpdateDto::getAllocations() const {
    return m_allocations;
}
void OAIPurchaseReceiptOrderUpdateDto::setAllocations(const QList<OAIAllocationsUpdateDto> &allocations) {
    m_allocations = allocations;
    m_allocations_isSet = true;
}

bool OAIPurchaseReceiptOrderUpdateDto::is_allocations_Set() const{
    return m_allocations_isSet;
}

bool OAIPurchaseReceiptOrderUpdateDto::is_allocations_Valid() const{
    return m_allocations_isValid;
}

QString OAIPurchaseReceiptOrderUpdateDto::getOrderNbr() const {
    return m_order_nbr;
}
void OAIPurchaseReceiptOrderUpdateDto::setOrderNbr(const QString &order_nbr) {
    m_order_nbr = order_nbr;
    m_order_nbr_isSet = true;
}

bool OAIPurchaseReceiptOrderUpdateDto::is_order_nbr_Set() const{
    return m_order_nbr_isSet;
}

bool OAIPurchaseReceiptOrderUpdateDto::is_order_nbr_Valid() const{
    return m_order_nbr_isValid;
}

QString OAIPurchaseReceiptOrderUpdateDto::getOrderType() const {
    return m_order_type;
}
void OAIPurchaseReceiptOrderUpdateDto::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAIPurchaseReceiptOrderUpdateDto::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAIPurchaseReceiptOrderUpdateDto::is_order_type_Valid() const{
    return m_order_type_isValid;
}

bool OAIPurchaseReceiptOrderUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allocations.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPurchaseReceiptOrderUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
