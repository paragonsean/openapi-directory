/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectBudgetDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectBudgetDto::OAIProjectBudgetDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectBudgetDto::OAIProjectBudgetDto() {
    this->initializeModel();
}

OAIProjectBudgetDto::~OAIProjectBudgetDto() {}

void OAIProjectBudgetDto::initializeModel() {

    m_account_group_id_isSet = false;
    m_account_group_id_isValid = false;

    m_actual_amount_isSet = false;
    m_actual_amount_isValid = false;

    m_actual_qty_isSet = false;
    m_actual_qty_isValid = false;

    m_committed_amount_isSet = false;
    m_committed_amount_isValid = false;

    m_committed_invoiced_amount_isSet = false;
    m_committed_invoiced_amount_isValid = false;

    m_committed_invoiced_qty_isSet = false;
    m_committed_invoiced_qty_isValid = false;

    m_committed_open_amount_isSet = false;
    m_committed_open_amount_isValid = false;

    m_committed_open_qty_isSet = false;
    m_committed_open_qty_isValid = false;

    m_committed_qty_isSet = false;
    m_committed_qty_isValid = false;

    m_committed_received_qty_isSet = false;
    m_committed_received_qty_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_error_info_isSet = false;
    m_error_info_isValid = false;

    m_inventory_number_isSet = false;
    m_inventory_number_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_original_budget_amount_isSet = false;
    m_original_budget_amount_isValid = false;

    m_original_budget_qty_isSet = false;
    m_original_budget_qty_isValid = false;

    m_project_id_isSet = false;
    m_project_id_isValid = false;

    m_project_task_id_isSet = false;
    m_project_task_id_isValid = false;

    m_rate_isSet = false;
    m_rate_isValid = false;

    m_revised_budget_amount_isSet = false;
    m_revised_budget_amount_isValid = false;

    m_revised_budget_qty_isSet = false;
    m_revised_budget_qty_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_uom_isSet = false;
    m_uom_isValid = false;
}

void OAIProjectBudgetDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectBudgetDto::fromJsonObject(QJsonObject json) {

    m_account_group_id_isValid = ::OpenAPI::fromJsonValue(m_account_group_id, json[QString("accountGroupID")]);
    m_account_group_id_isSet = !json[QString("accountGroupID")].isNull() && m_account_group_id_isValid;

    m_actual_amount_isValid = ::OpenAPI::fromJsonValue(m_actual_amount, json[QString("actualAmount")]);
    m_actual_amount_isSet = !json[QString("actualAmount")].isNull() && m_actual_amount_isValid;

    m_actual_qty_isValid = ::OpenAPI::fromJsonValue(m_actual_qty, json[QString("actualQty")]);
    m_actual_qty_isSet = !json[QString("actualQty")].isNull() && m_actual_qty_isValid;

    m_committed_amount_isValid = ::OpenAPI::fromJsonValue(m_committed_amount, json[QString("committedAmount")]);
    m_committed_amount_isSet = !json[QString("committedAmount")].isNull() && m_committed_amount_isValid;

    m_committed_invoiced_amount_isValid = ::OpenAPI::fromJsonValue(m_committed_invoiced_amount, json[QString("committedInvoicedAmount")]);
    m_committed_invoiced_amount_isSet = !json[QString("committedInvoicedAmount")].isNull() && m_committed_invoiced_amount_isValid;

    m_committed_invoiced_qty_isValid = ::OpenAPI::fromJsonValue(m_committed_invoiced_qty, json[QString("committedInvoicedQty")]);
    m_committed_invoiced_qty_isSet = !json[QString("committedInvoicedQty")].isNull() && m_committed_invoiced_qty_isValid;

    m_committed_open_amount_isValid = ::OpenAPI::fromJsonValue(m_committed_open_amount, json[QString("committedOpenAmount")]);
    m_committed_open_amount_isSet = !json[QString("committedOpenAmount")].isNull() && m_committed_open_amount_isValid;

    m_committed_open_qty_isValid = ::OpenAPI::fromJsonValue(m_committed_open_qty, json[QString("committedOpenQty")]);
    m_committed_open_qty_isSet = !json[QString("committedOpenQty")].isNull() && m_committed_open_qty_isValid;

    m_committed_qty_isValid = ::OpenAPI::fromJsonValue(m_committed_qty, json[QString("committedQty")]);
    m_committed_qty_isSet = !json[QString("committedQty")].isNull() && m_committed_qty_isValid;

    m_committed_received_qty_isValid = ::OpenAPI::fromJsonValue(m_committed_received_qty, json[QString("committedReceivedQty")]);
    m_committed_received_qty_isSet = !json[QString("committedReceivedQty")].isNull() && m_committed_received_qty_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_error_info_isValid = ::OpenAPI::fromJsonValue(m_error_info, json[QString("errorInfo")]);
    m_error_info_isSet = !json[QString("errorInfo")].isNull() && m_error_info_isValid;

    m_inventory_number_isValid = ::OpenAPI::fromJsonValue(m_inventory_number, json[QString("inventoryNumber")]);
    m_inventory_number_isSet = !json[QString("inventoryNumber")].isNull() && m_inventory_number_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_original_budget_amount_isValid = ::OpenAPI::fromJsonValue(m_original_budget_amount, json[QString("originalBudgetAmount")]);
    m_original_budget_amount_isSet = !json[QString("originalBudgetAmount")].isNull() && m_original_budget_amount_isValid;

    m_original_budget_qty_isValid = ::OpenAPI::fromJsonValue(m_original_budget_qty, json[QString("originalBudgetQty")]);
    m_original_budget_qty_isSet = !json[QString("originalBudgetQty")].isNull() && m_original_budget_qty_isValid;

    m_project_id_isValid = ::OpenAPI::fromJsonValue(m_project_id, json[QString("projectID")]);
    m_project_id_isSet = !json[QString("projectID")].isNull() && m_project_id_isValid;

    m_project_task_id_isValid = ::OpenAPI::fromJsonValue(m_project_task_id, json[QString("projectTaskID")]);
    m_project_task_id_isSet = !json[QString("projectTaskID")].isNull() && m_project_task_id_isValid;

    m_rate_isValid = ::OpenAPI::fromJsonValue(m_rate, json[QString("rate")]);
    m_rate_isSet = !json[QString("rate")].isNull() && m_rate_isValid;

    m_revised_budget_amount_isValid = ::OpenAPI::fromJsonValue(m_revised_budget_amount, json[QString("revisedBudgetAmount")]);
    m_revised_budget_amount_isSet = !json[QString("revisedBudgetAmount")].isNull() && m_revised_budget_amount_isValid;

    m_revised_budget_qty_isValid = ::OpenAPI::fromJsonValue(m_revised_budget_qty, json[QString("revisedBudgetQty")]);
    m_revised_budget_qty_isSet = !json[QString("revisedBudgetQty")].isNull() && m_revised_budget_qty_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_uom_isValid = ::OpenAPI::fromJsonValue(m_uom, json[QString("uom")]);
    m_uom_isSet = !json[QString("uom")].isNull() && m_uom_isValid;
}

QString OAIProjectBudgetDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectBudgetDto::asJsonObject() const {
    QJsonObject obj;
    if (m_account_group_id_isSet) {
        obj.insert(QString("accountGroupID"), ::OpenAPI::toJsonValue(m_account_group_id));
    }
    if (m_actual_amount_isSet) {
        obj.insert(QString("actualAmount"), ::OpenAPI::toJsonValue(m_actual_amount));
    }
    if (m_actual_qty_isSet) {
        obj.insert(QString("actualQty"), ::OpenAPI::toJsonValue(m_actual_qty));
    }
    if (m_committed_amount_isSet) {
        obj.insert(QString("committedAmount"), ::OpenAPI::toJsonValue(m_committed_amount));
    }
    if (m_committed_invoiced_amount_isSet) {
        obj.insert(QString("committedInvoicedAmount"), ::OpenAPI::toJsonValue(m_committed_invoiced_amount));
    }
    if (m_committed_invoiced_qty_isSet) {
        obj.insert(QString("committedInvoicedQty"), ::OpenAPI::toJsonValue(m_committed_invoiced_qty));
    }
    if (m_committed_open_amount_isSet) {
        obj.insert(QString("committedOpenAmount"), ::OpenAPI::toJsonValue(m_committed_open_amount));
    }
    if (m_committed_open_qty_isSet) {
        obj.insert(QString("committedOpenQty"), ::OpenAPI::toJsonValue(m_committed_open_qty));
    }
    if (m_committed_qty_isSet) {
        obj.insert(QString("committedQty"), ::OpenAPI::toJsonValue(m_committed_qty));
    }
    if (m_committed_received_qty_isSet) {
        obj.insert(QString("committedReceivedQty"), ::OpenAPI::toJsonValue(m_committed_received_qty));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_error_info_isSet) {
        obj.insert(QString("errorInfo"), ::OpenAPI::toJsonValue(m_error_info));
    }
    if (m_inventory_number_isSet) {
        obj.insert(QString("inventoryNumber"), ::OpenAPI::toJsonValue(m_inventory_number));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_original_budget_amount_isSet) {
        obj.insert(QString("originalBudgetAmount"), ::OpenAPI::toJsonValue(m_original_budget_amount));
    }
    if (m_original_budget_qty_isSet) {
        obj.insert(QString("originalBudgetQty"), ::OpenAPI::toJsonValue(m_original_budget_qty));
    }
    if (m_project_id_isSet) {
        obj.insert(QString("projectID"), ::OpenAPI::toJsonValue(m_project_id));
    }
    if (m_project_task_id_isSet) {
        obj.insert(QString("projectTaskID"), ::OpenAPI::toJsonValue(m_project_task_id));
    }
    if (m_rate_isSet) {
        obj.insert(QString("rate"), ::OpenAPI::toJsonValue(m_rate));
    }
    if (m_revised_budget_amount_isSet) {
        obj.insert(QString("revisedBudgetAmount"), ::OpenAPI::toJsonValue(m_revised_budget_amount));
    }
    if (m_revised_budget_qty_isSet) {
        obj.insert(QString("revisedBudgetQty"), ::OpenAPI::toJsonValue(m_revised_budget_qty));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_uom_isSet) {
        obj.insert(QString("uom"), ::OpenAPI::toJsonValue(m_uom));
    }
    return obj;
}

QString OAIProjectBudgetDto::getAccountGroupId() const {
    return m_account_group_id;
}
void OAIProjectBudgetDto::setAccountGroupId(const QString &account_group_id) {
    m_account_group_id = account_group_id;
    m_account_group_id_isSet = true;
}

bool OAIProjectBudgetDto::is_account_group_id_Set() const{
    return m_account_group_id_isSet;
}

bool OAIProjectBudgetDto::is_account_group_id_Valid() const{
    return m_account_group_id_isValid;
}

double OAIProjectBudgetDto::getActualAmount() const {
    return m_actual_amount;
}
void OAIProjectBudgetDto::setActualAmount(const double &actual_amount) {
    m_actual_amount = actual_amount;
    m_actual_amount_isSet = true;
}

bool OAIProjectBudgetDto::is_actual_amount_Set() const{
    return m_actual_amount_isSet;
}

bool OAIProjectBudgetDto::is_actual_amount_Valid() const{
    return m_actual_amount_isValid;
}

double OAIProjectBudgetDto::getActualQty() const {
    return m_actual_qty;
}
void OAIProjectBudgetDto::setActualQty(const double &actual_qty) {
    m_actual_qty = actual_qty;
    m_actual_qty_isSet = true;
}

bool OAIProjectBudgetDto::is_actual_qty_Set() const{
    return m_actual_qty_isSet;
}

bool OAIProjectBudgetDto::is_actual_qty_Valid() const{
    return m_actual_qty_isValid;
}

double OAIProjectBudgetDto::getCommittedAmount() const {
    return m_committed_amount;
}
void OAIProjectBudgetDto::setCommittedAmount(const double &committed_amount) {
    m_committed_amount = committed_amount;
    m_committed_amount_isSet = true;
}

bool OAIProjectBudgetDto::is_committed_amount_Set() const{
    return m_committed_amount_isSet;
}

bool OAIProjectBudgetDto::is_committed_amount_Valid() const{
    return m_committed_amount_isValid;
}

double OAIProjectBudgetDto::getCommittedInvoicedAmount() const {
    return m_committed_invoiced_amount;
}
void OAIProjectBudgetDto::setCommittedInvoicedAmount(const double &committed_invoiced_amount) {
    m_committed_invoiced_amount = committed_invoiced_amount;
    m_committed_invoiced_amount_isSet = true;
}

bool OAIProjectBudgetDto::is_committed_invoiced_amount_Set() const{
    return m_committed_invoiced_amount_isSet;
}

bool OAIProjectBudgetDto::is_committed_invoiced_amount_Valid() const{
    return m_committed_invoiced_amount_isValid;
}

double OAIProjectBudgetDto::getCommittedInvoicedQty() const {
    return m_committed_invoiced_qty;
}
void OAIProjectBudgetDto::setCommittedInvoicedQty(const double &committed_invoiced_qty) {
    m_committed_invoiced_qty = committed_invoiced_qty;
    m_committed_invoiced_qty_isSet = true;
}

bool OAIProjectBudgetDto::is_committed_invoiced_qty_Set() const{
    return m_committed_invoiced_qty_isSet;
}

bool OAIProjectBudgetDto::is_committed_invoiced_qty_Valid() const{
    return m_committed_invoiced_qty_isValid;
}

double OAIProjectBudgetDto::getCommittedOpenAmount() const {
    return m_committed_open_amount;
}
void OAIProjectBudgetDto::setCommittedOpenAmount(const double &committed_open_amount) {
    m_committed_open_amount = committed_open_amount;
    m_committed_open_amount_isSet = true;
}

bool OAIProjectBudgetDto::is_committed_open_amount_Set() const{
    return m_committed_open_amount_isSet;
}

bool OAIProjectBudgetDto::is_committed_open_amount_Valid() const{
    return m_committed_open_amount_isValid;
}

double OAIProjectBudgetDto::getCommittedOpenQty() const {
    return m_committed_open_qty;
}
void OAIProjectBudgetDto::setCommittedOpenQty(const double &committed_open_qty) {
    m_committed_open_qty = committed_open_qty;
    m_committed_open_qty_isSet = true;
}

bool OAIProjectBudgetDto::is_committed_open_qty_Set() const{
    return m_committed_open_qty_isSet;
}

bool OAIProjectBudgetDto::is_committed_open_qty_Valid() const{
    return m_committed_open_qty_isValid;
}

double OAIProjectBudgetDto::getCommittedQty() const {
    return m_committed_qty;
}
void OAIProjectBudgetDto::setCommittedQty(const double &committed_qty) {
    m_committed_qty = committed_qty;
    m_committed_qty_isSet = true;
}

bool OAIProjectBudgetDto::is_committed_qty_Set() const{
    return m_committed_qty_isSet;
}

bool OAIProjectBudgetDto::is_committed_qty_Valid() const{
    return m_committed_qty_isValid;
}

double OAIProjectBudgetDto::getCommittedReceivedQty() const {
    return m_committed_received_qty;
}
void OAIProjectBudgetDto::setCommittedReceivedQty(const double &committed_received_qty) {
    m_committed_received_qty = committed_received_qty;
    m_committed_received_qty_isSet = true;
}

bool OAIProjectBudgetDto::is_committed_received_qty_Set() const{
    return m_committed_received_qty_isSet;
}

bool OAIProjectBudgetDto::is_committed_received_qty_Valid() const{
    return m_committed_received_qty_isValid;
}

QString OAIProjectBudgetDto::getDescription() const {
    return m_description;
}
void OAIProjectBudgetDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIProjectBudgetDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIProjectBudgetDto::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIProjectBudgetDto::getErrorInfo() const {
    return m_error_info;
}
void OAIProjectBudgetDto::setErrorInfo(const QString &error_info) {
    m_error_info = error_info;
    m_error_info_isSet = true;
}

bool OAIProjectBudgetDto::is_error_info_Set() const{
    return m_error_info_isSet;
}

bool OAIProjectBudgetDto::is_error_info_Valid() const{
    return m_error_info_isValid;
}

QString OAIProjectBudgetDto::getInventoryNumber() const {
    return m_inventory_number;
}
void OAIProjectBudgetDto::setInventoryNumber(const QString &inventory_number) {
    m_inventory_number = inventory_number;
    m_inventory_number_isSet = true;
}

bool OAIProjectBudgetDto::is_inventory_number_Set() const{
    return m_inventory_number_isSet;
}

bool OAIProjectBudgetDto::is_inventory_number_Valid() const{
    return m_inventory_number_isValid;
}

OAIMetadataDto OAIProjectBudgetDto::getMetadata() const {
    return m_metadata;
}
void OAIProjectBudgetDto::setMetadata(const OAIMetadataDto &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIProjectBudgetDto::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIProjectBudgetDto::is_metadata_Valid() const{
    return m_metadata_isValid;
}

double OAIProjectBudgetDto::getOriginalBudgetAmount() const {
    return m_original_budget_amount;
}
void OAIProjectBudgetDto::setOriginalBudgetAmount(const double &original_budget_amount) {
    m_original_budget_amount = original_budget_amount;
    m_original_budget_amount_isSet = true;
}

bool OAIProjectBudgetDto::is_original_budget_amount_Set() const{
    return m_original_budget_amount_isSet;
}

bool OAIProjectBudgetDto::is_original_budget_amount_Valid() const{
    return m_original_budget_amount_isValid;
}

double OAIProjectBudgetDto::getOriginalBudgetQty() const {
    return m_original_budget_qty;
}
void OAIProjectBudgetDto::setOriginalBudgetQty(const double &original_budget_qty) {
    m_original_budget_qty = original_budget_qty;
    m_original_budget_qty_isSet = true;
}

bool OAIProjectBudgetDto::is_original_budget_qty_Set() const{
    return m_original_budget_qty_isSet;
}

bool OAIProjectBudgetDto::is_original_budget_qty_Valid() const{
    return m_original_budget_qty_isValid;
}

QString OAIProjectBudgetDto::getProjectId() const {
    return m_project_id;
}
void OAIProjectBudgetDto::setProjectId(const QString &project_id) {
    m_project_id = project_id;
    m_project_id_isSet = true;
}

bool OAIProjectBudgetDto::is_project_id_Set() const{
    return m_project_id_isSet;
}

bool OAIProjectBudgetDto::is_project_id_Valid() const{
    return m_project_id_isValid;
}

QString OAIProjectBudgetDto::getProjectTaskId() const {
    return m_project_task_id;
}
void OAIProjectBudgetDto::setProjectTaskId(const QString &project_task_id) {
    m_project_task_id = project_task_id;
    m_project_task_id_isSet = true;
}

bool OAIProjectBudgetDto::is_project_task_id_Set() const{
    return m_project_task_id_isSet;
}

bool OAIProjectBudgetDto::is_project_task_id_Valid() const{
    return m_project_task_id_isValid;
}

double OAIProjectBudgetDto::getRate() const {
    return m_rate;
}
void OAIProjectBudgetDto::setRate(const double &rate) {
    m_rate = rate;
    m_rate_isSet = true;
}

bool OAIProjectBudgetDto::is_rate_Set() const{
    return m_rate_isSet;
}

bool OAIProjectBudgetDto::is_rate_Valid() const{
    return m_rate_isValid;
}

double OAIProjectBudgetDto::getRevisedBudgetAmount() const {
    return m_revised_budget_amount;
}
void OAIProjectBudgetDto::setRevisedBudgetAmount(const double &revised_budget_amount) {
    m_revised_budget_amount = revised_budget_amount;
    m_revised_budget_amount_isSet = true;
}

bool OAIProjectBudgetDto::is_revised_budget_amount_Set() const{
    return m_revised_budget_amount_isSet;
}

bool OAIProjectBudgetDto::is_revised_budget_amount_Valid() const{
    return m_revised_budget_amount_isValid;
}

double OAIProjectBudgetDto::getRevisedBudgetQty() const {
    return m_revised_budget_qty;
}
void OAIProjectBudgetDto::setRevisedBudgetQty(const double &revised_budget_qty) {
    m_revised_budget_qty = revised_budget_qty;
    m_revised_budget_qty_isSet = true;
}

bool OAIProjectBudgetDto::is_revised_budget_qty_Set() const{
    return m_revised_budget_qty_isSet;
}

bool OAIProjectBudgetDto::is_revised_budget_qty_Valid() const{
    return m_revised_budget_qty_isValid;
}

QString OAIProjectBudgetDto::getType() const {
    return m_type;
}
void OAIProjectBudgetDto::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIProjectBudgetDto::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProjectBudgetDto::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIProjectBudgetDto::getUom() const {
    return m_uom;
}
void OAIProjectBudgetDto::setUom(const QString &uom) {
    m_uom = uom;
    m_uom_isSet = true;
}

bool OAIProjectBudgetDto::is_uom_Set() const{
    return m_uom_isSet;
}

bool OAIProjectBudgetDto::is_uom_Valid() const{
    return m_uom_isValid;
}

bool OAIProjectBudgetDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_actual_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_actual_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committed_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committed_invoiced_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committed_invoiced_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committed_open_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committed_open_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committed_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_committed_received_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_budget_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_budget_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_task_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revised_budget_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revised_budget_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uom_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectBudgetDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
