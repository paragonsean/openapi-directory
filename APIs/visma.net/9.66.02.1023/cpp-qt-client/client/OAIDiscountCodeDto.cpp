/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscountCodeDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscountCodeDto::OAIDiscountCodeDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscountCodeDto::OAIDiscountCodeDto() {
    this->initializeModel();
}

OAIDiscountCodeDto::~OAIDiscountCodeDto() {}

void OAIDiscountCodeDto::initializeModel() {

    m_applicable_to_isSet = false;
    m_applicable_to_isValid = false;

    m_apply_to_deferred_revenue_isSet = false;
    m_apply_to_deferred_revenue_isValid = false;

    m_auto_numbering_isSet = false;
    m_auto_numbering_isValid = false;

    m_created_date_time_isSet = false;
    m_created_date_time_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_discount_code_isSet = false;
    m_discount_code_isValid = false;

    m_discount_type_isSet = false;
    m_discount_type_isValid = false;

    m_error_info_isSet = false;
    m_error_info_isValid = false;

    m_exclude_from_discountable_amount_isSet = false;
    m_exclude_from_discountable_amount_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_number_isSet = false;
    m_last_number_isValid = false;

    m_manual_isSet = false;
    m_manual_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_skip_document_discounts_isSet = false;
    m_skip_document_discounts_isValid = false;
}

void OAIDiscountCodeDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscountCodeDto::fromJsonObject(QJsonObject json) {

    m_applicable_to_isValid = ::OpenAPI::fromJsonValue(m_applicable_to, json[QString("applicableTo")]);
    m_applicable_to_isSet = !json[QString("applicableTo")].isNull() && m_applicable_to_isValid;

    m_apply_to_deferred_revenue_isValid = ::OpenAPI::fromJsonValue(m_apply_to_deferred_revenue, json[QString("applyToDeferredRevenue")]);
    m_apply_to_deferred_revenue_isSet = !json[QString("applyToDeferredRevenue")].isNull() && m_apply_to_deferred_revenue_isValid;

    m_auto_numbering_isValid = ::OpenAPI::fromJsonValue(m_auto_numbering, json[QString("autoNumbering")]);
    m_auto_numbering_isSet = !json[QString("autoNumbering")].isNull() && m_auto_numbering_isValid;

    m_created_date_time_isValid = ::OpenAPI::fromJsonValue(m_created_date_time, json[QString("createdDateTime")]);
    m_created_date_time_isSet = !json[QString("createdDateTime")].isNull() && m_created_date_time_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_discount_code_isValid = ::OpenAPI::fromJsonValue(m_discount_code, json[QString("discountCode")]);
    m_discount_code_isSet = !json[QString("discountCode")].isNull() && m_discount_code_isValid;

    m_discount_type_isValid = ::OpenAPI::fromJsonValue(m_discount_type, json[QString("discountType")]);
    m_discount_type_isSet = !json[QString("discountType")].isNull() && m_discount_type_isValid;

    m_error_info_isValid = ::OpenAPI::fromJsonValue(m_error_info, json[QString("errorInfo")]);
    m_error_info_isSet = !json[QString("errorInfo")].isNull() && m_error_info_isValid;

    m_exclude_from_discountable_amount_isValid = ::OpenAPI::fromJsonValue(m_exclude_from_discountable_amount, json[QString("excludeFromDiscountableAmount")]);
    m_exclude_from_discountable_amount_isSet = !json[QString("excludeFromDiscountableAmount")].isNull() && m_exclude_from_discountable_amount_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_number_isValid = ::OpenAPI::fromJsonValue(m_last_number, json[QString("lastNumber")]);
    m_last_number_isSet = !json[QString("lastNumber")].isNull() && m_last_number_isValid;

    m_manual_isValid = ::OpenAPI::fromJsonValue(m_manual, json[QString("manual")]);
    m_manual_isSet = !json[QString("manual")].isNull() && m_manual_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_skip_document_discounts_isValid = ::OpenAPI::fromJsonValue(m_skip_document_discounts, json[QString("skipDocumentDiscounts")]);
    m_skip_document_discounts_isSet = !json[QString("skipDocumentDiscounts")].isNull() && m_skip_document_discounts_isValid;
}

QString OAIDiscountCodeDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscountCodeDto::asJsonObject() const {
    QJsonObject obj;
    if (m_applicable_to_isSet) {
        obj.insert(QString("applicableTo"), ::OpenAPI::toJsonValue(m_applicable_to));
    }
    if (m_apply_to_deferred_revenue_isSet) {
        obj.insert(QString("applyToDeferredRevenue"), ::OpenAPI::toJsonValue(m_apply_to_deferred_revenue));
    }
    if (m_auto_numbering_isSet) {
        obj.insert(QString("autoNumbering"), ::OpenAPI::toJsonValue(m_auto_numbering));
    }
    if (m_created_date_time_isSet) {
        obj.insert(QString("createdDateTime"), ::OpenAPI::toJsonValue(m_created_date_time));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_discount_code_isSet) {
        obj.insert(QString("discountCode"), ::OpenAPI::toJsonValue(m_discount_code));
    }
    if (m_discount_type_isSet) {
        obj.insert(QString("discountType"), ::OpenAPI::toJsonValue(m_discount_type));
    }
    if (m_error_info_isSet) {
        obj.insert(QString("errorInfo"), ::OpenAPI::toJsonValue(m_error_info));
    }
    if (m_exclude_from_discountable_amount_isSet) {
        obj.insert(QString("excludeFromDiscountableAmount"), ::OpenAPI::toJsonValue(m_exclude_from_discountable_amount));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_number_isSet) {
        obj.insert(QString("lastNumber"), ::OpenAPI::toJsonValue(m_last_number));
    }
    if (m_manual_isSet) {
        obj.insert(QString("manual"), ::OpenAPI::toJsonValue(m_manual));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_skip_document_discounts_isSet) {
        obj.insert(QString("skipDocumentDiscounts"), ::OpenAPI::toJsonValue(m_skip_document_discounts));
    }
    return obj;
}

QString OAIDiscountCodeDto::getApplicableTo() const {
    return m_applicable_to;
}
void OAIDiscountCodeDto::setApplicableTo(const QString &applicable_to) {
    m_applicable_to = applicable_to;
    m_applicable_to_isSet = true;
}

bool OAIDiscountCodeDto::is_applicable_to_Set() const{
    return m_applicable_to_isSet;
}

bool OAIDiscountCodeDto::is_applicable_to_Valid() const{
    return m_applicable_to_isValid;
}

bool OAIDiscountCodeDto::isApplyToDeferredRevenue() const {
    return m_apply_to_deferred_revenue;
}
void OAIDiscountCodeDto::setApplyToDeferredRevenue(const bool &apply_to_deferred_revenue) {
    m_apply_to_deferred_revenue = apply_to_deferred_revenue;
    m_apply_to_deferred_revenue_isSet = true;
}

bool OAIDiscountCodeDto::is_apply_to_deferred_revenue_Set() const{
    return m_apply_to_deferred_revenue_isSet;
}

bool OAIDiscountCodeDto::is_apply_to_deferred_revenue_Valid() const{
    return m_apply_to_deferred_revenue_isValid;
}

bool OAIDiscountCodeDto::isAutoNumbering() const {
    return m_auto_numbering;
}
void OAIDiscountCodeDto::setAutoNumbering(const bool &auto_numbering) {
    m_auto_numbering = auto_numbering;
    m_auto_numbering_isSet = true;
}

bool OAIDiscountCodeDto::is_auto_numbering_Set() const{
    return m_auto_numbering_isSet;
}

bool OAIDiscountCodeDto::is_auto_numbering_Valid() const{
    return m_auto_numbering_isValid;
}

QDateTime OAIDiscountCodeDto::getCreatedDateTime() const {
    return m_created_date_time;
}
void OAIDiscountCodeDto::setCreatedDateTime(const QDateTime &created_date_time) {
    m_created_date_time = created_date_time;
    m_created_date_time_isSet = true;
}

bool OAIDiscountCodeDto::is_created_date_time_Set() const{
    return m_created_date_time_isSet;
}

bool OAIDiscountCodeDto::is_created_date_time_Valid() const{
    return m_created_date_time_isValid;
}

QString OAIDiscountCodeDto::getDescription() const {
    return m_description;
}
void OAIDiscountCodeDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDiscountCodeDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDiscountCodeDto::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIDiscountCodeDto::getDiscountCode() const {
    return m_discount_code;
}
void OAIDiscountCodeDto::setDiscountCode(const QString &discount_code) {
    m_discount_code = discount_code;
    m_discount_code_isSet = true;
}

bool OAIDiscountCodeDto::is_discount_code_Set() const{
    return m_discount_code_isSet;
}

bool OAIDiscountCodeDto::is_discount_code_Valid() const{
    return m_discount_code_isValid;
}

QString OAIDiscountCodeDto::getDiscountType() const {
    return m_discount_type;
}
void OAIDiscountCodeDto::setDiscountType(const QString &discount_type) {
    m_discount_type = discount_type;
    m_discount_type_isSet = true;
}

bool OAIDiscountCodeDto::is_discount_type_Set() const{
    return m_discount_type_isSet;
}

bool OAIDiscountCodeDto::is_discount_type_Valid() const{
    return m_discount_type_isValid;
}

QString OAIDiscountCodeDto::getErrorInfo() const {
    return m_error_info;
}
void OAIDiscountCodeDto::setErrorInfo(const QString &error_info) {
    m_error_info = error_info;
    m_error_info_isSet = true;
}

bool OAIDiscountCodeDto::is_error_info_Set() const{
    return m_error_info_isSet;
}

bool OAIDiscountCodeDto::is_error_info_Valid() const{
    return m_error_info_isValid;
}

bool OAIDiscountCodeDto::isExcludeFromDiscountableAmount() const {
    return m_exclude_from_discountable_amount;
}
void OAIDiscountCodeDto::setExcludeFromDiscountableAmount(const bool &exclude_from_discountable_amount) {
    m_exclude_from_discountable_amount = exclude_from_discountable_amount;
    m_exclude_from_discountable_amount_isSet = true;
}

bool OAIDiscountCodeDto::is_exclude_from_discountable_amount_Set() const{
    return m_exclude_from_discountable_amount_isSet;
}

bool OAIDiscountCodeDto::is_exclude_from_discountable_amount_Valid() const{
    return m_exclude_from_discountable_amount_isValid;
}

QDateTime OAIDiscountCodeDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIDiscountCodeDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIDiscountCodeDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIDiscountCodeDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIDiscountCodeDto::getLastNumber() const {
    return m_last_number;
}
void OAIDiscountCodeDto::setLastNumber(const QString &last_number) {
    m_last_number = last_number;
    m_last_number_isSet = true;
}

bool OAIDiscountCodeDto::is_last_number_Set() const{
    return m_last_number_isSet;
}

bool OAIDiscountCodeDto::is_last_number_Valid() const{
    return m_last_number_isValid;
}

bool OAIDiscountCodeDto::isManual() const {
    return m_manual;
}
void OAIDiscountCodeDto::setManual(const bool &manual) {
    m_manual = manual;
    m_manual_isSet = true;
}

bool OAIDiscountCodeDto::is_manual_Set() const{
    return m_manual_isSet;
}

bool OAIDiscountCodeDto::is_manual_Valid() const{
    return m_manual_isValid;
}

OAIMetadataDto OAIDiscountCodeDto::getMetadata() const {
    return m_metadata;
}
void OAIDiscountCodeDto::setMetadata(const OAIMetadataDto &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIDiscountCodeDto::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIDiscountCodeDto::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIDiscountCodeDto::isSkipDocumentDiscounts() const {
    return m_skip_document_discounts;
}
void OAIDiscountCodeDto::setSkipDocumentDiscounts(const bool &skip_document_discounts) {
    m_skip_document_discounts = skip_document_discounts;
    m_skip_document_discounts_isSet = true;
}

bool OAIDiscountCodeDto::is_skip_document_discounts_Set() const{
    return m_skip_document_discounts_isSet;
}

bool OAIDiscountCodeDto::is_skip_document_discounts_Valid() const{
    return m_skip_document_discounts_isValid;
}

bool OAIDiscountCodeDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applicable_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_apply_to_deferred_revenue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_numbering_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_from_discountable_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_manual_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_document_discounts_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscountCodeDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
