/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerSalesPriceDto.h
 *
 * This class represents a CustomerSalesPrice in CustomerSalesPriceController.
 */

#ifndef OAICustomerSalesPriceDto_H
#define OAICustomerSalesPriceDto_H

#include <QJsonObject>

#include "OAIMetadataDto.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetadataDto;

class OAICustomerSalesPriceDto : public OAIObject {
public:
    OAICustomerSalesPriceDto();
    OAICustomerSalesPriceDto(QString json);
    ~OAICustomerSalesPriceDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBreakQty() const;
    void setBreakQty(const double &break_qty);
    bool is_break_qty_Set() const;
    bool is_break_qty_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEffectiveDate() const;
    void setEffectiveDate(const QDateTime &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getInventoryId() const;
    void setInventoryId(const QString &inventory_id);
    bool is_inventory_id_Set() const;
    bool is_inventory_id_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    QString getPriceCode() const;
    void setPriceCode(const QString &price_code);
    bool is_price_code_Set() const;
    bool is_price_code_Valid() const;

    QString getPriceType() const;
    void setPriceType(const QString &price_type);
    bool is_price_type_Set() const;
    bool is_price_type_Valid() const;

    bool isPromotion() const;
    void setPromotion(const bool &promotion);
    bool is_promotion_Set() const;
    bool is_promotion_Valid() const;

    qint32 getRecordId() const;
    void setRecordId(const qint32 &record_id);
    bool is_record_id_Set() const;
    bool is_record_id_Valid() const;

    QString getUoM() const;
    void setUoM(const QString &uo_m);
    bool is_uo_m_Set() const;
    bool is_uo_m_Valid() const;

    QString getVat() const;
    void setVat(const QString &vat);
    bool is_vat_Set() const;
    bool is_vat_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_break_qty;
    bool m_break_qty_isSet;
    bool m_break_qty_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_inventory_id;
    bool m_inventory_id_isSet;
    bool m_inventory_id_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    QString m_price_code;
    bool m_price_code_isSet;
    bool m_price_code_isValid;

    QString m_price_type;
    bool m_price_type_isSet;
    bool m_price_type_isValid;

    bool m_promotion;
    bool m_promotion_isSet;
    bool m_promotion_isValid;

    qint32 m_record_id;
    bool m_record_id_isSet;
    bool m_record_id_isValid;

    QString m_uo_m;
    bool m_uo_m_isSet;
    bool m_uo_m_isValid;

    QString m_vat;
    bool m_vat_isSet;
    bool m_vat_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerSalesPriceDto)

#endif // OAICustomerSalesPriceDto_H
