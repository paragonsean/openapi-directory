/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContactDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContactDto::OAIContactDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContactDto::OAIContactDto() {
    this->initializeModel();
}

OAIContactDto::~OAIContactDto() {}

void OAIContactDto::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_address_isSet = false;
    m_address_isValid = false;

    m_business_account_isSet = false;
    m_business_account_isValid = false;

    m_business_account_type_isSet = false;
    m_business_account_type_isValid = false;

    m_contact_id_isSet = false;
    m_contact_id_isValid = false;

    m_contact_method_isSet = false;
    m_contact_method_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_do_not_call_isSet = false;
    m_do_not_call_isValid = false;

    m_do_not_email_isSet = false;
    m_do_not_email_isValid = false;

    m_do_not_fax_isSet = false;
    m_do_not_fax_isValid = false;

    m_do_not_mail_isSet = false;
    m_do_not_mail_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_no_marketing_isSet = false;
    m_no_marketing_isValid = false;

    m_no_mass_mail_isSet = false;
    m_no_mass_mail_isValid = false;

    m_phone1_isSet = false;
    m_phone1_isValid = false;

    m_phone2_isSet = false;
    m_phone2_isValid = false;

    m_phone3_isSet = false;
    m_phone3_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_same_as_account_isSet = false;
    m_same_as_account_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_web_isSet = false;
    m_web_isValid = false;
}

void OAIContactDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContactDto::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_business_account_isValid = ::OpenAPI::fromJsonValue(m_business_account, json[QString("businessAccount")]);
    m_business_account_isSet = !json[QString("businessAccount")].isNull() && m_business_account_isValid;

    m_business_account_type_isValid = ::OpenAPI::fromJsonValue(m_business_account_type, json[QString("businessAccountType")]);
    m_business_account_type_isSet = !json[QString("businessAccountType")].isNull() && m_business_account_type_isValid;

    m_contact_id_isValid = ::OpenAPI::fromJsonValue(m_contact_id, json[QString("contactId")]);
    m_contact_id_isSet = !json[QString("contactId")].isNull() && m_contact_id_isValid;

    m_contact_method_isValid = ::OpenAPI::fromJsonValue(m_contact_method, json[QString("contactMethod")]);
    m_contact_method_isSet = !json[QString("contactMethod")].isNull() && m_contact_method_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_do_not_call_isValid = ::OpenAPI::fromJsonValue(m_do_not_call, json[QString("doNotCall")]);
    m_do_not_call_isSet = !json[QString("doNotCall")].isNull() && m_do_not_call_isValid;

    m_do_not_email_isValid = ::OpenAPI::fromJsonValue(m_do_not_email, json[QString("doNotEmail")]);
    m_do_not_email_isSet = !json[QString("doNotEmail")].isNull() && m_do_not_email_isValid;

    m_do_not_fax_isValid = ::OpenAPI::fromJsonValue(m_do_not_fax, json[QString("doNotFax")]);
    m_do_not_fax_isSet = !json[QString("doNotFax")].isNull() && m_do_not_fax_isValid;

    m_do_not_mail_isValid = ::OpenAPI::fromJsonValue(m_do_not_mail, json[QString("doNotMail")]);
    m_do_not_mail_isSet = !json[QString("doNotMail")].isNull() && m_do_not_mail_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_no_marketing_isValid = ::OpenAPI::fromJsonValue(m_no_marketing, json[QString("noMarketing")]);
    m_no_marketing_isSet = !json[QString("noMarketing")].isNull() && m_no_marketing_isValid;

    m_no_mass_mail_isValid = ::OpenAPI::fromJsonValue(m_no_mass_mail, json[QString("noMassMail")]);
    m_no_mass_mail_isSet = !json[QString("noMassMail")].isNull() && m_no_mass_mail_isValid;

    m_phone1_isValid = ::OpenAPI::fromJsonValue(m_phone1, json[QString("phone1")]);
    m_phone1_isSet = !json[QString("phone1")].isNull() && m_phone1_isValid;

    m_phone2_isValid = ::OpenAPI::fromJsonValue(m_phone2, json[QString("phone2")]);
    m_phone2_isSet = !json[QString("phone2")].isNull() && m_phone2_isValid;

    m_phone3_isValid = ::OpenAPI::fromJsonValue(m_phone3, json[QString("phone3")]);
    m_phone3_isSet = !json[QString("phone3")].isNull() && m_phone3_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_same_as_account_isValid = ::OpenAPI::fromJsonValue(m_same_as_account, json[QString("sameAsAccount")]);
    m_same_as_account_isSet = !json[QString("sameAsAccount")].isNull() && m_same_as_account_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_web_isValid = ::OpenAPI::fromJsonValue(m_web, json[QString("web")]);
    m_web_isSet = !json[QString("web")].isNull() && m_web_isValid;
}

QString OAIContactDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContactDto::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_business_account_isSet) {
        obj.insert(QString("businessAccount"), ::OpenAPI::toJsonValue(m_business_account));
    }
    if (m_business_account_type_isSet) {
        obj.insert(QString("businessAccountType"), ::OpenAPI::toJsonValue(m_business_account_type));
    }
    if (m_contact_id_isSet) {
        obj.insert(QString("contactId"), ::OpenAPI::toJsonValue(m_contact_id));
    }
    if (m_contact_method_isSet) {
        obj.insert(QString("contactMethod"), ::OpenAPI::toJsonValue(m_contact_method));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_do_not_call_isSet) {
        obj.insert(QString("doNotCall"), ::OpenAPI::toJsonValue(m_do_not_call));
    }
    if (m_do_not_email_isSet) {
        obj.insert(QString("doNotEmail"), ::OpenAPI::toJsonValue(m_do_not_email));
    }
    if (m_do_not_fax_isSet) {
        obj.insert(QString("doNotFax"), ::OpenAPI::toJsonValue(m_do_not_fax));
    }
    if (m_do_not_mail_isSet) {
        obj.insert(QString("doNotMail"), ::OpenAPI::toJsonValue(m_do_not_mail));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fax_isSet) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_no_marketing_isSet) {
        obj.insert(QString("noMarketing"), ::OpenAPI::toJsonValue(m_no_marketing));
    }
    if (m_no_mass_mail_isSet) {
        obj.insert(QString("noMassMail"), ::OpenAPI::toJsonValue(m_no_mass_mail));
    }
    if (m_phone1_isSet) {
        obj.insert(QString("phone1"), ::OpenAPI::toJsonValue(m_phone1));
    }
    if (m_phone2_isSet) {
        obj.insert(QString("phone2"), ::OpenAPI::toJsonValue(m_phone2));
    }
    if (m_phone3_isSet) {
        obj.insert(QString("phone3"), ::OpenAPI::toJsonValue(m_phone3));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_same_as_account_isSet) {
        obj.insert(QString("sameAsAccount"), ::OpenAPI::toJsonValue(m_same_as_account));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_web_isSet) {
        obj.insert(QString("web"), ::OpenAPI::toJsonValue(m_web));
    }
    return obj;
}

bool OAIContactDto::isActive() const {
    return m_active;
}
void OAIContactDto::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIContactDto::is_active_Set() const{
    return m_active_isSet;
}

bool OAIContactDto::is_active_Valid() const{
    return m_active_isValid;
}

OAIAddressInContactDto OAIContactDto::getAddress() const {
    return m_address;
}
void OAIContactDto::setAddress(const OAIAddressInContactDto &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIContactDto::is_address_Set() const{
    return m_address_isSet;
}

bool OAIContactDto::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIContactDto::getBusinessAccount() const {
    return m_business_account;
}
void OAIContactDto::setBusinessAccount(const QString &business_account) {
    m_business_account = business_account;
    m_business_account_isSet = true;
}

bool OAIContactDto::is_business_account_Set() const{
    return m_business_account_isSet;
}

bool OAIContactDto::is_business_account_Valid() const{
    return m_business_account_isValid;
}

QString OAIContactDto::getBusinessAccountType() const {
    return m_business_account_type;
}
void OAIContactDto::setBusinessAccountType(const QString &business_account_type) {
    m_business_account_type = business_account_type;
    m_business_account_type_isSet = true;
}

bool OAIContactDto::is_business_account_type_Set() const{
    return m_business_account_type_isSet;
}

bool OAIContactDto::is_business_account_type_Valid() const{
    return m_business_account_type_isValid;
}

qint32 OAIContactDto::getContactId() const {
    return m_contact_id;
}
void OAIContactDto::setContactId(const qint32 &contact_id) {
    m_contact_id = contact_id;
    m_contact_id_isSet = true;
}

bool OAIContactDto::is_contact_id_Set() const{
    return m_contact_id_isSet;
}

bool OAIContactDto::is_contact_id_Valid() const{
    return m_contact_id_isValid;
}

QString OAIContactDto::getContactMethod() const {
    return m_contact_method;
}
void OAIContactDto::setContactMethod(const QString &contact_method) {
    m_contact_method = contact_method;
    m_contact_method_isSet = true;
}

bool OAIContactDto::is_contact_method_Set() const{
    return m_contact_method_isSet;
}

bool OAIContactDto::is_contact_method_Valid() const{
    return m_contact_method_isValid;
}

QString OAIContactDto::getDisplayName() const {
    return m_display_name;
}
void OAIContactDto::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIContactDto::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIContactDto::is_display_name_Valid() const{
    return m_display_name_isValid;
}

bool OAIContactDto::isDoNotCall() const {
    return m_do_not_call;
}
void OAIContactDto::setDoNotCall(const bool &do_not_call) {
    m_do_not_call = do_not_call;
    m_do_not_call_isSet = true;
}

bool OAIContactDto::is_do_not_call_Set() const{
    return m_do_not_call_isSet;
}

bool OAIContactDto::is_do_not_call_Valid() const{
    return m_do_not_call_isValid;
}

bool OAIContactDto::isDoNotEmail() const {
    return m_do_not_email;
}
void OAIContactDto::setDoNotEmail(const bool &do_not_email) {
    m_do_not_email = do_not_email;
    m_do_not_email_isSet = true;
}

bool OAIContactDto::is_do_not_email_Set() const{
    return m_do_not_email_isSet;
}

bool OAIContactDto::is_do_not_email_Valid() const{
    return m_do_not_email_isValid;
}

bool OAIContactDto::isDoNotFax() const {
    return m_do_not_fax;
}
void OAIContactDto::setDoNotFax(const bool &do_not_fax) {
    m_do_not_fax = do_not_fax;
    m_do_not_fax_isSet = true;
}

bool OAIContactDto::is_do_not_fax_Set() const{
    return m_do_not_fax_isSet;
}

bool OAIContactDto::is_do_not_fax_Valid() const{
    return m_do_not_fax_isValid;
}

bool OAIContactDto::isDoNotMail() const {
    return m_do_not_mail;
}
void OAIContactDto::setDoNotMail(const bool &do_not_mail) {
    m_do_not_mail = do_not_mail;
    m_do_not_mail_isSet = true;
}

bool OAIContactDto::is_do_not_mail_Set() const{
    return m_do_not_mail_isSet;
}

bool OAIContactDto::is_do_not_mail_Valid() const{
    return m_do_not_mail_isValid;
}

QString OAIContactDto::getEmail() const {
    return m_email;
}
void OAIContactDto::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIContactDto::is_email_Set() const{
    return m_email_isSet;
}

bool OAIContactDto::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIContactDto::getFax() const {
    return m_fax;
}
void OAIContactDto::setFax(const QString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAIContactDto::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAIContactDto::is_fax_Valid() const{
    return m_fax_isValid;
}

QString OAIContactDto::getFirstName() const {
    return m_first_name;
}
void OAIContactDto::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIContactDto::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIContactDto::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QDateTime OAIContactDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIContactDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIContactDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIContactDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIContactDto::getLastName() const {
    return m_last_name;
}
void OAIContactDto::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIContactDto::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIContactDto::is_last_name_Valid() const{
    return m_last_name_isValid;
}

bool OAIContactDto::isNoMarketing() const {
    return m_no_marketing;
}
void OAIContactDto::setNoMarketing(const bool &no_marketing) {
    m_no_marketing = no_marketing;
    m_no_marketing_isSet = true;
}

bool OAIContactDto::is_no_marketing_Set() const{
    return m_no_marketing_isSet;
}

bool OAIContactDto::is_no_marketing_Valid() const{
    return m_no_marketing_isValid;
}

bool OAIContactDto::isNoMassMail() const {
    return m_no_mass_mail;
}
void OAIContactDto::setNoMassMail(const bool &no_mass_mail) {
    m_no_mass_mail = no_mass_mail;
    m_no_mass_mail_isSet = true;
}

bool OAIContactDto::is_no_mass_mail_Set() const{
    return m_no_mass_mail_isSet;
}

bool OAIContactDto::is_no_mass_mail_Valid() const{
    return m_no_mass_mail_isValid;
}

QString OAIContactDto::getPhone1() const {
    return m_phone1;
}
void OAIContactDto::setPhone1(const QString &phone1) {
    m_phone1 = phone1;
    m_phone1_isSet = true;
}

bool OAIContactDto::is_phone1_Set() const{
    return m_phone1_isSet;
}

bool OAIContactDto::is_phone1_Valid() const{
    return m_phone1_isValid;
}

QString OAIContactDto::getPhone2() const {
    return m_phone2;
}
void OAIContactDto::setPhone2(const QString &phone2) {
    m_phone2 = phone2;
    m_phone2_isSet = true;
}

bool OAIContactDto::is_phone2_Set() const{
    return m_phone2_isSet;
}

bool OAIContactDto::is_phone2_Valid() const{
    return m_phone2_isValid;
}

QString OAIContactDto::getPhone3() const {
    return m_phone3;
}
void OAIContactDto::setPhone3(const QString &phone3) {
    m_phone3 = phone3;
    m_phone3_isSet = true;
}

bool OAIContactDto::is_phone3_Set() const{
    return m_phone3_isSet;
}

bool OAIContactDto::is_phone3_Valid() const{
    return m_phone3_isValid;
}

QString OAIContactDto::getPosition() const {
    return m_position;
}
void OAIContactDto::setPosition(const QString &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIContactDto::is_position_Set() const{
    return m_position_isSet;
}

bool OAIContactDto::is_position_Valid() const{
    return m_position_isValid;
}

bool OAIContactDto::isSameAsAccount() const {
    return m_same_as_account;
}
void OAIContactDto::setSameAsAccount(const bool &same_as_account) {
    m_same_as_account = same_as_account;
    m_same_as_account_isSet = true;
}

bool OAIContactDto::is_same_as_account_Set() const{
    return m_same_as_account_isSet;
}

bool OAIContactDto::is_same_as_account_Valid() const{
    return m_same_as_account_isValid;
}

QString OAIContactDto::getTitle() const {
    return m_title;
}
void OAIContactDto::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIContactDto::is_title_Set() const{
    return m_title_isSet;
}

bool OAIContactDto::is_title_Valid() const{
    return m_title_isValid;
}

QString OAIContactDto::getWeb() const {
    return m_web;
}
void OAIContactDto::setWeb(const QString &web) {
    m_web = web;
    m_web_isSet = true;
}

bool OAIContactDto::is_web_Set() const{
    return m_web_isSet;
}

bool OAIContactDto::is_web_Valid() const{
    return m_web_isValid;
}

bool OAIContactDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_account_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_do_not_call_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_do_not_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_do_not_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_do_not_mail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_marketing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_no_mass_mail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_same_as_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_web_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContactDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
