/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDunningLetterActionDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDunningLetterActionDto::OAICreateDunningLetterActionDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDunningLetterActionDto::OAICreateDunningLetterActionDto() {
    this->initializeModel();
}

OAICreateDunningLetterActionDto::~OAICreateDunningLetterActionDto() {}

void OAICreateDunningLetterActionDto::initializeModel() {

    m_dunning_letter_date_isSet = false;
    m_dunning_letter_date_isValid = false;

    m_level_from_isSet = false;
    m_level_from_isValid = false;

    m_level_to_isSet = false;
    m_level_to_isValid = false;
}

void OAICreateDunningLetterActionDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDunningLetterActionDto::fromJsonObject(QJsonObject json) {

    m_dunning_letter_date_isValid = ::OpenAPI::fromJsonValue(m_dunning_letter_date, json[QString("dunningLetterDate")]);
    m_dunning_letter_date_isSet = !json[QString("dunningLetterDate")].isNull() && m_dunning_letter_date_isValid;

    m_level_from_isValid = ::OpenAPI::fromJsonValue(m_level_from, json[QString("levelFrom")]);
    m_level_from_isSet = !json[QString("levelFrom")].isNull() && m_level_from_isValid;

    m_level_to_isValid = ::OpenAPI::fromJsonValue(m_level_to, json[QString("levelTo")]);
    m_level_to_isSet = !json[QString("levelTo")].isNull() && m_level_to_isValid;
}

QString OAICreateDunningLetterActionDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDunningLetterActionDto::asJsonObject() const {
    QJsonObject obj;
    if (m_dunning_letter_date_isSet) {
        obj.insert(QString("dunningLetterDate"), ::OpenAPI::toJsonValue(m_dunning_letter_date));
    }
    if (m_level_from_isSet) {
        obj.insert(QString("levelFrom"), ::OpenAPI::toJsonValue(m_level_from));
    }
    if (m_level_to_isSet) {
        obj.insert(QString("levelTo"), ::OpenAPI::toJsonValue(m_level_to));
    }
    return obj;
}

QDateTime OAICreateDunningLetterActionDto::getDunningLetterDate() const {
    return m_dunning_letter_date;
}
void OAICreateDunningLetterActionDto::setDunningLetterDate(const QDateTime &dunning_letter_date) {
    m_dunning_letter_date = dunning_letter_date;
    m_dunning_letter_date_isSet = true;
}

bool OAICreateDunningLetterActionDto::is_dunning_letter_date_Set() const{
    return m_dunning_letter_date_isSet;
}

bool OAICreateDunningLetterActionDto::is_dunning_letter_date_Valid() const{
    return m_dunning_letter_date_isValid;
}

qint32 OAICreateDunningLetterActionDto::getLevelFrom() const {
    return m_level_from;
}
void OAICreateDunningLetterActionDto::setLevelFrom(const qint32 &level_from) {
    m_level_from = level_from;
    m_level_from_isSet = true;
}

bool OAICreateDunningLetterActionDto::is_level_from_Set() const{
    return m_level_from_isSet;
}

bool OAICreateDunningLetterActionDto::is_level_from_Valid() const{
    return m_level_from_isValid;
}

qint32 OAICreateDunningLetterActionDto::getLevelTo() const {
    return m_level_to;
}
void OAICreateDunningLetterActionDto::setLevelTo(const qint32 &level_to) {
    m_level_to = level_to;
    m_level_to_isSet = true;
}

bool OAICreateDunningLetterActionDto::is_level_to_Set() const{
    return m_level_to_isSet;
}

bool OAICreateDunningLetterActionDto::is_level_to_Valid() const{
    return m_level_to_isValid;
}

bool OAICreateDunningLetterActionDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dunning_letter_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level_to_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDunningLetterActionDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
