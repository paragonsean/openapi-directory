/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISalesOrderLineDto.h
 *
 * 
 */

#ifndef OAISalesOrderLineDto_H
#define OAISalesOrderLineDto_H

#include <QJsonObject>

#include "OAIAttachmentDto.h"
#include "OAIBranchNumberDto.h"
#include "OAIInventoryNumberDescriptionDto.h"
#include "OAISalesPersonInSalesOrderLineDto.h"
#include "OAISubaccountInSalesOrderLineDto.h"
#include "OAIWarehouseIdDescriptionDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachmentDto;
class OAIBranchNumberDto;
class OAIInventoryNumberDescriptionDto;
class OAISalesPersonInSalesOrderLineDto;
class OAISubaccountInSalesOrderLineDto;
class OAIWarehouseIdDescriptionDto;

class OAISalesOrderLineDto : public OAIObject {
public:
    OAISalesOrderLineDto();
    OAISalesOrderLineDto(QString json);
    ~OAISalesOrderLineDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAlternateId() const;
    void setAlternateId(const QString &alternate_id);
    bool is_alternate_id_Set() const;
    bool is_alternate_id_Valid() const;

    QList<OAIAttachmentDto> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentDto> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    OAIBranchNumberDto getBranchNumber() const;
    void setBranchNumber(const OAIBranchNumberDto &branch_number);
    bool is_branch_number_Set() const;
    bool is_branch_number_Valid() const;

    bool isCommissionable() const;
    void setCommissionable(const bool &commissionable);
    bool is_commissionable_Set() const;
    bool is_commissionable_Valid() const;

    bool isCompleted() const;
    void setCompleted(const bool &completed);
    bool is_completed_Set() const;
    bool is_completed_Valid() const;

    double getDiscUnitPrice() const;
    void setDiscUnitPrice(const double &disc_unit_price);
    bool is_disc_unit_price_Set() const;
    bool is_disc_unit_price_Valid() const;

    double getDiscountAmount() const;
    void setDiscountAmount(const double &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    QString getDiscountCode() const;
    void setDiscountCode(const QString &discount_code);
    bool is_discount_code_Set() const;
    bool is_discount_code_Valid() const;

    double getDiscountPercent() const;
    void setDiscountPercent(const double &discount_percent);
    bool is_discount_percent_Set() const;
    bool is_discount_percent_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    double getExtPrice() const;
    void setExtPrice(const double &ext_price);
    bool is_ext_price_Set() const;
    bool is_ext_price_Valid() const;

    QString getExternalLink() const;
    void setExternalLink(const QString &external_link);
    bool is_external_link_Set() const;
    bool is_external_link_Valid() const;

    bool isFreeItem() const;
    void setFreeItem(const bool &free_item);
    bool is_free_item_Set() const;
    bool is_free_item_Valid() const;

    OAIInventoryNumberDescriptionDto getInventory() const;
    void setInventory(const OAIInventoryNumberDescriptionDto &inventory);
    bool is_inventory_Set() const;
    bool is_inventory_Valid() const;

    QString getInvoiceNbr() const;
    void setInvoiceNbr(const QString &invoice_nbr);
    bool is_invoice_nbr_Set() const;
    bool is_invoice_nbr_Valid() const;

    bool isIsRotRutDeductible() const;
    void setIsRotRutDeductible(const bool &is_rot_rut_deductible);
    bool is_is_rot_rut_deductible_Set() const;
    bool is_is_rot_rut_deductible_Valid() const;

    QString getLineDescription() const;
    void setLineDescription(const QString &line_description);
    bool is_line_description_Set() const;
    bool is_line_description_Valid() const;

    qint32 getLineNbr() const;
    void setLineNbr(const qint32 &line_nbr);
    bool is_line_nbr_Set() const;
    bool is_line_nbr_Valid() const;

    QString getLotSerialNbr() const;
    void setLotSerialNbr(const QString &lot_serial_nbr);
    bool is_lot_serial_nbr_Set() const;
    bool is_lot_serial_nbr_Valid() const;

    bool isManualDiscount() const;
    void setManualDiscount(const bool &manual_discount);
    bool is_manual_discount_Set() const;
    bool is_manual_discount_Valid() const;

    bool isMarkForPo() const;
    void setMarkForPo(const bool &mark_for_po);
    bool is_mark_for_po_Set() const;
    bool is_mark_for_po_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    double getOpenQty() const;
    void setOpenQty(const double &open_qty);
    bool is_open_qty_Set() const;
    bool is_open_qty_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    double getOvershipThreshold() const;
    void setOvershipThreshold(const double &overship_threshold);
    bool is_overship_threshold_Set() const;
    bool is_overship_threshold_Valid() const;

    QString getPoSource() const;
    void setPoSource(const QString &po_source);
    bool is_po_source_Set() const;
    bool is_po_source_Valid() const;

    qint32 getProjectTask() const;
    void setProjectTask(const qint32 &project_task);
    bool is_project_task_Set() const;
    bool is_project_task_Valid() const;

    QString getProjectTaskCd() const;
    void setProjectTaskCd(const QString &project_task_cd);
    bool is_project_task_cd_Set() const;
    bool is_project_task_cd_Valid() const;

    double getQtyOnShipments() const;
    void setQtyOnShipments(const double &qty_on_shipments);
    bool is_qty_on_shipments_Set() const;
    bool is_qty_on_shipments_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getReasonCode() const;
    void setReasonCode(const QString &reason_code);
    bool is_reason_code_Set() const;
    bool is_reason_code_Valid() const;

    QDateTime getRequestedOn() const;
    void setRequestedOn(const QDateTime &requested_on);
    bool is_requested_on_Set() const;
    bool is_requested_on_Valid() const;

    OAISalesPersonInSalesOrderLineDto getSalesPerson() const;
    void setSalesPerson(const OAISalesPersonInSalesOrderLineDto &sales_person);
    bool is_sales_person_Set() const;
    bool is_sales_person_Valid() const;

    QString getShipComplete() const;
    void setShipComplete(const QString &ship_complete);
    bool is_ship_complete_Set() const;
    bool is_ship_complete_Valid() const;

    QDateTime getShipOn() const;
    void setShipOn(const QDateTime &ship_on);
    bool is_ship_on_Set() const;
    bool is_ship_on_Valid() const;

    qint32 getSortOrder() const;
    void setSortOrder(const qint32 &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    OAISubaccountInSalesOrderLineDto getSubaccount() const;
    void setSubaccount(const OAISubaccountInSalesOrderLineDto &subaccount);
    bool is_subaccount_Set() const;
    bool is_subaccount_Valid() const;

    QString getTaxCategory() const;
    void setTaxCategory(const QString &tax_category);
    bool is_tax_category_Set() const;
    bool is_tax_category_Valid() const;

    double getUnbilledAmount() const;
    void setUnbilledAmount(const double &unbilled_amount);
    bool is_unbilled_amount_Set() const;
    bool is_unbilled_amount_Valid() const;

    double getUndershipThreshold() const;
    void setUndershipThreshold(const double &undership_threshold);
    bool is_undership_threshold_Set() const;
    bool is_undership_threshold_Valid() const;

    double getUnitCost() const;
    void setUnitCost(const double &unit_cost);
    bool is_unit_cost_Set() const;
    bool is_unit_cost_Valid() const;

    double getUnitPrice() const;
    void setUnitPrice(const double &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    double getUnitPriceInBaseCurrency() const;
    void setUnitPriceInBaseCurrency(const double &unit_price_in_base_currency);
    bool is_unit_price_in_base_currency_Set() const;
    bool is_unit_price_in_base_currency_Valid() const;

    QString getUom() const;
    void setUom(const QString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    OAIWarehouseIdDescriptionDto getWarehouse() const;
    void setWarehouse(const OAIWarehouseIdDescriptionDto &warehouse);
    bool is_warehouse_Set() const;
    bool is_warehouse_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_alternate_id;
    bool m_alternate_id_isSet;
    bool m_alternate_id_isValid;

    QList<OAIAttachmentDto> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    OAIBranchNumberDto m_branch_number;
    bool m_branch_number_isSet;
    bool m_branch_number_isValid;

    bool m_commissionable;
    bool m_commissionable_isSet;
    bool m_commissionable_isValid;

    bool m_completed;
    bool m_completed_isSet;
    bool m_completed_isValid;

    double m_disc_unit_price;
    bool m_disc_unit_price_isSet;
    bool m_disc_unit_price_isValid;

    double m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    QString m_discount_code;
    bool m_discount_code_isSet;
    bool m_discount_code_isValid;

    double m_discount_percent;
    bool m_discount_percent_isSet;
    bool m_discount_percent_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    double m_ext_price;
    bool m_ext_price_isSet;
    bool m_ext_price_isValid;

    QString m_external_link;
    bool m_external_link_isSet;
    bool m_external_link_isValid;

    bool m_free_item;
    bool m_free_item_isSet;
    bool m_free_item_isValid;

    OAIInventoryNumberDescriptionDto m_inventory;
    bool m_inventory_isSet;
    bool m_inventory_isValid;

    QString m_invoice_nbr;
    bool m_invoice_nbr_isSet;
    bool m_invoice_nbr_isValid;

    bool m_is_rot_rut_deductible;
    bool m_is_rot_rut_deductible_isSet;
    bool m_is_rot_rut_deductible_isValid;

    QString m_line_description;
    bool m_line_description_isSet;
    bool m_line_description_isValid;

    qint32 m_line_nbr;
    bool m_line_nbr_isSet;
    bool m_line_nbr_isValid;

    QString m_lot_serial_nbr;
    bool m_lot_serial_nbr_isSet;
    bool m_lot_serial_nbr_isValid;

    bool m_manual_discount;
    bool m_manual_discount_isSet;
    bool m_manual_discount_isValid;

    bool m_mark_for_po;
    bool m_mark_for_po_isSet;
    bool m_mark_for_po_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    double m_open_qty;
    bool m_open_qty_isSet;
    bool m_open_qty_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    double m_overship_threshold;
    bool m_overship_threshold_isSet;
    bool m_overship_threshold_isValid;

    QString m_po_source;
    bool m_po_source_isSet;
    bool m_po_source_isValid;

    qint32 m_project_task;
    bool m_project_task_isSet;
    bool m_project_task_isValid;

    QString m_project_task_cd;
    bool m_project_task_cd_isSet;
    bool m_project_task_cd_isValid;

    double m_qty_on_shipments;
    bool m_qty_on_shipments_isSet;
    bool m_qty_on_shipments_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_reason_code;
    bool m_reason_code_isSet;
    bool m_reason_code_isValid;

    QDateTime m_requested_on;
    bool m_requested_on_isSet;
    bool m_requested_on_isValid;

    OAISalesPersonInSalesOrderLineDto m_sales_person;
    bool m_sales_person_isSet;
    bool m_sales_person_isValid;

    QString m_ship_complete;
    bool m_ship_complete_isSet;
    bool m_ship_complete_isValid;

    QDateTime m_ship_on;
    bool m_ship_on_isSet;
    bool m_ship_on_isValid;

    qint32 m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    OAISubaccountInSalesOrderLineDto m_subaccount;
    bool m_subaccount_isSet;
    bool m_subaccount_isValid;

    QString m_tax_category;
    bool m_tax_category_isSet;
    bool m_tax_category_isValid;

    double m_unbilled_amount;
    bool m_unbilled_amount_isSet;
    bool m_unbilled_amount_isValid;

    double m_undership_threshold;
    bool m_undership_threshold_isSet;
    bool m_undership_threshold_isValid;

    double m_unit_cost;
    bool m_unit_cost_isSet;
    bool m_unit_cost_isValid;

    double m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;

    double m_unit_price_in_base_currency;
    bool m_unit_price_in_base_currency_isSet;
    bool m_unit_price_in_base_currency_isValid;

    QString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;

    OAIWarehouseIdDescriptionDto m_warehouse;
    bool m_warehouse_isSet;
    bool m_warehouse_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISalesOrderLineDto)

#endif // OAISalesOrderLineDto_H
