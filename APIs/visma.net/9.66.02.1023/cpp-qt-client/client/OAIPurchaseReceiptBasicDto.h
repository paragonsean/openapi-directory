/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPurchaseReceiptBasicDto.h
 *
 * This class represents a Purchase Receipt in PurchaseReceiptController. Used for getting data.
 */

#ifndef OAIPurchaseReceiptBasicDto_H
#define OAIPurchaseReceiptBasicDto_H

#include <QJsonObject>

#include "OAIBranchNumberInPurchaseReceiptBasicDto.h"
#include "OAILocationInPurchaseReceiptBasicDto.h"
#include "OAIMetadataDto.h"
#include "OAIPurchaseReceiptLineDto.h"
#include "OAISupplierInPurchaseReceiptBasicDto.h"
#include "OAIWarehouseInPurchaseReceiptBasicDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBranchNumberInPurchaseReceiptBasicDto;
class OAIPurchaseReceiptLineDto;
class OAILocationInPurchaseReceiptBasicDto;
class OAIMetadataDto;
class OAISupplierInPurchaseReceiptBasicDto;
class OAIWarehouseInPurchaseReceiptBasicDto;

class OAIPurchaseReceiptBasicDto : public OAIObject {
public:
    OAIPurchaseReceiptBasicDto();
    OAIPurchaseReceiptBasicDto(QString json);
    ~OAIPurchaseReceiptBasicDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBranchNumberInPurchaseReceiptBasicDto getBranchNumber() const;
    void setBranchNumber(const OAIBranchNumberInPurchaseReceiptBasicDto &branch_number);
    bool is_branch_number_Set() const;
    bool is_branch_number_Valid() const;

    double getControlQty() const;
    void setControlQty(const double &control_qty);
    bool is_control_qty_Set() const;
    bool is_control_qty_Valid() const;

    double getControlTotal() const;
    void setControlTotal(const double &control_total);
    bool is_control_total_Set() const;
    bool is_control_total_Valid() const;

    bool isCreateBill() const;
    void setCreateBill(const bool &create_bill);
    bool is_create_bill_Set() const;
    bool is_create_bill_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    double getExchangeRate() const;
    void setExchangeRate(const double &exchange_rate);
    bool is_exchange_rate_Set() const;
    bool is_exchange_rate_Valid() const;

    bool isHold() const;
    void setHold(const bool &hold);
    bool is_hold_Set() const;
    bool is_hold_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QList<OAIPurchaseReceiptLineDto> getLines() const;
    void setLines(const QList<OAIPurchaseReceiptLineDto> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    OAILocationInPurchaseReceiptBasicDto getLocation() const;
    void setLocation(const OAILocationInPurchaseReceiptBasicDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getPostPeriod() const;
    void setPostPeriod(const QString &post_period);
    bool is_post_period_Set() const;
    bool is_post_period_Valid() const;

    QString getReceiptNbr() const;
    void setReceiptNbr(const QString &receipt_nbr);
    bool is_receipt_nbr_Set() const;
    bool is_receipt_nbr_Valid() const;

    QString getReceiptType() const;
    void setReceiptType(const QString &receipt_type);
    bool is_receipt_type_Set() const;
    bool is_receipt_type_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAISupplierInPurchaseReceiptBasicDto getSupplier() const;
    void setSupplier(const OAISupplierInPurchaseReceiptBasicDto &supplier);
    bool is_supplier_Set() const;
    bool is_supplier_Valid() const;

    QString getSupplierRef() const;
    void setSupplierRef(const QString &supplier_ref);
    bool is_supplier_ref_Set() const;
    bool is_supplier_ref_Valid() const;

    double getTotalAmt() const;
    void setTotalAmt(const double &total_amt);
    bool is_total_amt_Set() const;
    bool is_total_amt_Valid() const;

    double getTotalQty() const;
    void setTotalQty(const double &total_qty);
    bool is_total_qty_Set() const;
    bool is_total_qty_Valid() const;

    double getVatExemptTotal() const;
    void setVatExemptTotal(const double &vat_exempt_total);
    bool is_vat_exempt_total_Set() const;
    bool is_vat_exempt_total_Valid() const;

    double getVatTaxableTotal() const;
    void setVatTaxableTotal(const double &vat_taxable_total);
    bool is_vat_taxable_total_Set() const;
    bool is_vat_taxable_total_Valid() const;

    OAIWarehouseInPurchaseReceiptBasicDto getWarehouse() const;
    void setWarehouse(const OAIWarehouseInPurchaseReceiptBasicDto &warehouse);
    bool is_warehouse_Set() const;
    bool is_warehouse_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBranchNumberInPurchaseReceiptBasicDto m_branch_number;
    bool m_branch_number_isSet;
    bool m_branch_number_isValid;

    double m_control_qty;
    bool m_control_qty_isSet;
    bool m_control_qty_isValid;

    double m_control_total;
    bool m_control_total_isSet;
    bool m_control_total_isValid;

    bool m_create_bill;
    bool m_create_bill_isSet;
    bool m_create_bill_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    double m_exchange_rate;
    bool m_exchange_rate_isSet;
    bool m_exchange_rate_isValid;

    bool m_hold;
    bool m_hold_isSet;
    bool m_hold_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QList<OAIPurchaseReceiptLineDto> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    OAILocationInPurchaseReceiptBasicDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_post_period;
    bool m_post_period_isSet;
    bool m_post_period_isValid;

    QString m_receipt_nbr;
    bool m_receipt_nbr_isSet;
    bool m_receipt_nbr_isValid;

    QString m_receipt_type;
    bool m_receipt_type_isSet;
    bool m_receipt_type_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAISupplierInPurchaseReceiptBasicDto m_supplier;
    bool m_supplier_isSet;
    bool m_supplier_isValid;

    QString m_supplier_ref;
    bool m_supplier_ref_isSet;
    bool m_supplier_ref_isValid;

    double m_total_amt;
    bool m_total_amt_isSet;
    bool m_total_amt_isValid;

    double m_total_qty;
    bool m_total_qty_isSet;
    bool m_total_qty_isValid;

    double m_vat_exempt_total;
    bool m_vat_exempt_total_isSet;
    bool m_vat_exempt_total_isValid;

    double m_vat_taxable_total;
    bool m_vat_taxable_total_isSet;
    bool m_vat_taxable_total_isValid;

    OAIWarehouseInPurchaseReceiptBasicDto m_warehouse;
    bool m_warehouse_isSet;
    bool m_warehouse_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPurchaseReceiptBasicDto)

#endif // OAIPurchaseReceiptBasicDto_H
