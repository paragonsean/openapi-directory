/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustSalesPeopleDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustSalesPeopleDto::OAICustSalesPeopleDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustSalesPeopleDto::OAICustSalesPeopleDto() {
    this->initializeModel();
}

OAICustSalesPeopleDto::~OAICustSalesPeopleDto() {}

void OAICustSalesPeopleDto::initializeModel() {

    m_b_account_id_isSet = false;
    m_b_account_id_isValid = false;

    m_commision_pct_isSet = false;
    m_commision_pct_isValid = false;

    m_created_date_time_isSet = false;
    m_created_date_time_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_error_info_isSet = false;
    m_error_info_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_location_name_isSet = false;
    m_location_name_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;
}

void OAICustSalesPeopleDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustSalesPeopleDto::fromJsonObject(QJsonObject json) {

    m_b_account_id_isValid = ::OpenAPI::fromJsonValue(m_b_account_id, json[QString("bAccountID")]);
    m_b_account_id_isSet = !json[QString("bAccountID")].isNull() && m_b_account_id_isValid;

    m_commision_pct_isValid = ::OpenAPI::fromJsonValue(m_commision_pct, json[QString("commisionPct")]);
    m_commision_pct_isSet = !json[QString("commisionPct")].isNull() && m_commision_pct_isValid;

    m_created_date_time_isValid = ::OpenAPI::fromJsonValue(m_created_date_time, json[QString("createdDateTime")]);
    m_created_date_time_isSet = !json[QString("createdDateTime")].isNull() && m_created_date_time_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customerName")]);
    m_customer_name_isSet = !json[QString("customerName")].isNull() && m_customer_name_isValid;

    m_error_info_isValid = ::OpenAPI::fromJsonValue(m_error_info, json[QString("errorInfo")]);
    m_error_info_isSet = !json[QString("errorInfo")].isNull() && m_error_info_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("isDefault")]);
    m_is_default_isSet = !json[QString("isDefault")].isNull() && m_is_default_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationID")]);
    m_location_id_isSet = !json[QString("locationID")].isNull() && m_location_id_isValid;

    m_location_name_isValid = ::OpenAPI::fromJsonValue(m_location_name, json[QString("locationName")]);
    m_location_name_isSet = !json[QString("locationName")].isNull() && m_location_name_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;
}

QString OAICustSalesPeopleDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustSalesPeopleDto::asJsonObject() const {
    QJsonObject obj;
    if (m_b_account_id_isSet) {
        obj.insert(QString("bAccountID"), ::OpenAPI::toJsonValue(m_b_account_id));
    }
    if (m_commision_pct_isSet) {
        obj.insert(QString("commisionPct"), ::OpenAPI::toJsonValue(m_commision_pct));
    }
    if (m_created_date_time_isSet) {
        obj.insert(QString("createdDateTime"), ::OpenAPI::toJsonValue(m_created_date_time));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customerName"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_error_info_isSet) {
        obj.insert(QString("errorInfo"), ::OpenAPI::toJsonValue(m_error_info));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("isDefault"), ::OpenAPI::toJsonValue(m_is_default));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("locationID"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_location_name_isSet) {
        obj.insert(QString("locationName"), ::OpenAPI::toJsonValue(m_location_name));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    return obj;
}

qint32 OAICustSalesPeopleDto::getBAccountId() const {
    return m_b_account_id;
}
void OAICustSalesPeopleDto::setBAccountId(const qint32 &b_account_id) {
    m_b_account_id = b_account_id;
    m_b_account_id_isSet = true;
}

bool OAICustSalesPeopleDto::is_b_account_id_Set() const{
    return m_b_account_id_isSet;
}

bool OAICustSalesPeopleDto::is_b_account_id_Valid() const{
    return m_b_account_id_isValid;
}

double OAICustSalesPeopleDto::getCommisionPct() const {
    return m_commision_pct;
}
void OAICustSalesPeopleDto::setCommisionPct(const double &commision_pct) {
    m_commision_pct = commision_pct;
    m_commision_pct_isSet = true;
}

bool OAICustSalesPeopleDto::is_commision_pct_Set() const{
    return m_commision_pct_isSet;
}

bool OAICustSalesPeopleDto::is_commision_pct_Valid() const{
    return m_commision_pct_isValid;
}

QDateTime OAICustSalesPeopleDto::getCreatedDateTime() const {
    return m_created_date_time;
}
void OAICustSalesPeopleDto::setCreatedDateTime(const QDateTime &created_date_time) {
    m_created_date_time = created_date_time;
    m_created_date_time_isSet = true;
}

bool OAICustSalesPeopleDto::is_created_date_time_Set() const{
    return m_created_date_time_isSet;
}

bool OAICustSalesPeopleDto::is_created_date_time_Valid() const{
    return m_created_date_time_isValid;
}

QString OAICustSalesPeopleDto::getCustomerName() const {
    return m_customer_name;
}
void OAICustSalesPeopleDto::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAICustSalesPeopleDto::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAICustSalesPeopleDto::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

QString OAICustSalesPeopleDto::getErrorInfo() const {
    return m_error_info;
}
void OAICustSalesPeopleDto::setErrorInfo(const QString &error_info) {
    m_error_info = error_info;
    m_error_info_isSet = true;
}

bool OAICustSalesPeopleDto::is_error_info_Set() const{
    return m_error_info_isSet;
}

bool OAICustSalesPeopleDto::is_error_info_Valid() const{
    return m_error_info_isValid;
}

bool OAICustSalesPeopleDto::isIsDefault() const {
    return m_is_default;
}
void OAICustSalesPeopleDto::setIsDefault(const bool &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAICustSalesPeopleDto::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAICustSalesPeopleDto::is_is_default_Valid() const{
    return m_is_default_isValid;
}

QDateTime OAICustSalesPeopleDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAICustSalesPeopleDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAICustSalesPeopleDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAICustSalesPeopleDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

qint32 OAICustSalesPeopleDto::getLocationId() const {
    return m_location_id;
}
void OAICustSalesPeopleDto::setLocationId(const qint32 &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAICustSalesPeopleDto::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAICustSalesPeopleDto::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAICustSalesPeopleDto::getLocationName() const {
    return m_location_name;
}
void OAICustSalesPeopleDto::setLocationName(const QString &location_name) {
    m_location_name = location_name;
    m_location_name_isSet = true;
}

bool OAICustSalesPeopleDto::is_location_name_Set() const{
    return m_location_name_isSet;
}

bool OAICustSalesPeopleDto::is_location_name_Valid() const{
    return m_location_name_isValid;
}

OAIMetadataDto OAICustSalesPeopleDto::getMetadata() const {
    return m_metadata;
}
void OAICustSalesPeopleDto::setMetadata(const OAIMetadataDto &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAICustSalesPeopleDto::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAICustSalesPeopleDto::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAICustSalesPeopleDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_b_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commision_pct_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustSalesPeopleDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
