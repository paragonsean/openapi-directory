/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJournalTransactionDto.h
 *
 * This class represents a journal transaction in JournalTransactionController. Used by getting data.
 */

#ifndef OAIJournalTransactionDto_H
#define OAIJournalTransactionDto_H

#include <QJsonObject>

#include "OAIAttachmentDto.h"
#include "OAIJournalTransactionLineDto.h"
#include "OAIMetadataDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachmentDto;
class OAIJournalTransactionLineDto;
class OAIMetadataDto;

class OAIJournalTransactionDto : public OAIObject {
public:
    OAIJournalTransactionDto();
    OAIJournalTransactionDto(QString json);
    ~OAIJournalTransactionDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttachmentDto> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentDto> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    bool isAutoReversing() const;
    void setAutoReversing(const bool &auto_reversing);
    bool is_auto_reversing_Set() const;
    bool is_auto_reversing_Valid() const;

    QString getBatchNumber() const;
    void setBatchNumber(const QString &batch_number);
    bool is_batch_number_Set() const;
    bool is_batch_number_Valid() const;

    QString getBranch() const;
    void setBranch(const QString &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    double getControlTotal() const;
    void setControlTotal(const double &control_total);
    bool is_control_total_Set() const;
    bool is_control_total_Valid() const;

    double getControlTotalInCurrency() const;
    void setControlTotalInCurrency(const double &control_total_in_currency);
    bool is_control_total_in_currency_Set() const;
    bool is_control_total_in_currency_Valid() const;

    bool isCreateVatTransaction() const;
    void setCreateVatTransaction(const bool &create_vat_transaction);
    bool is_create_vat_transaction_Set() const;
    bool is_create_vat_transaction_Valid() const;

    double getCreditTotal() const;
    void setCreditTotal(const double &credit_total);
    bool is_credit_total_Set() const;
    bool is_credit_total_Valid() const;

    double getCreditTotalInCurrency() const;
    void setCreditTotalInCurrency(const double &credit_total_in_currency);
    bool is_credit_total_in_currency_Set() const;
    bool is_credit_total_in_currency_Valid() const;

    QString getCurrencyId() const;
    void setCurrencyId(const QString &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    double getDebitTotal() const;
    void setDebitTotal(const double &debit_total);
    bool is_debit_total_Set() const;
    bool is_debit_total_Valid() const;

    double getDebitTotalInCurrency() const;
    void setDebitTotalInCurrency(const double &debit_total_in_currency);
    bool is_debit_total_in_currency_Set() const;
    bool is_debit_total_in_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    double getExchangeRate() const;
    void setExchangeRate(const double &exchange_rate);
    bool is_exchange_rate_Set() const;
    bool is_exchange_rate_Valid() const;

    QString getFinancialPeriod() const;
    void setFinancialPeriod(const QString &financial_period);
    bool is_financial_period_Set() const;
    bool is_financial_period_Valid() const;

    bool isHold() const;
    void setHold(const bool &hold);
    bool is_hold_Set() const;
    bool is_hold_Valid() const;

    QList<OAIJournalTransactionLineDto> getJournalTransactionLines() const;
    void setJournalTransactionLines(const QList<OAIJournalTransactionLineDto> &journal_transaction_lines);
    bool is_journal_transaction_lines_Set() const;
    bool is_journal_transaction_lines_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QString getLedger() const;
    void setLedger(const QString &ledger);
    bool is_ledger_Set() const;
    bool is_ledger_Valid() const;

    QString getLedgerDescription() const;
    void setLedgerDescription(const QString &ledger_description);
    bool is_ledger_description_Set() const;
    bool is_ledger_description_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getModule() const;
    void setModule(const QString &module);
    bool is_module_Set() const;
    bool is_module_Valid() const;

    QString getOriginalBatchNumber() const;
    void setOriginalBatchNumber(const QString &original_batch_number);
    bool is_original_batch_number_Set() const;
    bool is_original_batch_number_Valid() const;

    QString getPostPeriod() const;
    void setPostPeriod(const QString &post_period);
    bool is_post_period_Set() const;
    bool is_post_period_Valid() const;

    bool isReversingEntry() const;
    void setReversingEntry(const bool &reversing_entry);
    bool is_reversing_entry_Set() const;
    bool is_reversing_entry_Valid() const;

    bool isSkipVatAmountValidation() const;
    void setSkipVatAmountValidation(const bool &skip_vat_amount_validation);
    bool is_skip_vat_amount_validation_Set() const;
    bool is_skip_vat_amount_validation_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTransactionCode() const;
    void setTransactionCode(const QString &transaction_code);
    bool is_transaction_code_Set() const;
    bool is_transaction_code_Valid() const;

    QString getTransactionCodeDescription() const;
    void setTransactionCodeDescription(const QString &transaction_code_description);
    bool is_transaction_code_description_Set() const;
    bool is_transaction_code_description_Valid() const;

    QDateTime getTransactionDate() const;
    void setTransactionDate(const QDateTime &transaction_date);
    bool is_transaction_date_Set() const;
    bool is_transaction_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttachmentDto> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    bool m_auto_reversing;
    bool m_auto_reversing_isSet;
    bool m_auto_reversing_isValid;

    QString m_batch_number;
    bool m_batch_number_isSet;
    bool m_batch_number_isValid;

    QString m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    double m_control_total;
    bool m_control_total_isSet;
    bool m_control_total_isValid;

    double m_control_total_in_currency;
    bool m_control_total_in_currency_isSet;
    bool m_control_total_in_currency_isValid;

    bool m_create_vat_transaction;
    bool m_create_vat_transaction_isSet;
    bool m_create_vat_transaction_isValid;

    double m_credit_total;
    bool m_credit_total_isSet;
    bool m_credit_total_isValid;

    double m_credit_total_in_currency;
    bool m_credit_total_in_currency_isSet;
    bool m_credit_total_in_currency_isValid;

    QString m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    double m_debit_total;
    bool m_debit_total_isSet;
    bool m_debit_total_isValid;

    double m_debit_total_in_currency;
    bool m_debit_total_in_currency_isSet;
    bool m_debit_total_in_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    double m_exchange_rate;
    bool m_exchange_rate_isSet;
    bool m_exchange_rate_isValid;

    QString m_financial_period;
    bool m_financial_period_isSet;
    bool m_financial_period_isValid;

    bool m_hold;
    bool m_hold_isSet;
    bool m_hold_isValid;

    QList<OAIJournalTransactionLineDto> m_journal_transaction_lines;
    bool m_journal_transaction_lines_isSet;
    bool m_journal_transaction_lines_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QString m_ledger;
    bool m_ledger_isSet;
    bool m_ledger_isValid;

    QString m_ledger_description;
    bool m_ledger_description_isSet;
    bool m_ledger_description_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_module;
    bool m_module_isSet;
    bool m_module_isValid;

    QString m_original_batch_number;
    bool m_original_batch_number_isSet;
    bool m_original_batch_number_isValid;

    QString m_post_period;
    bool m_post_period_isSet;
    bool m_post_period_isValid;

    bool m_reversing_entry;
    bool m_reversing_entry_isSet;
    bool m_reversing_entry_isValid;

    bool m_skip_vat_amount_validation;
    bool m_skip_vat_amount_validation_isSet;
    bool m_skip_vat_amount_validation_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_transaction_code;
    bool m_transaction_code_isSet;
    bool m_transaction_code_isValid;

    QString m_transaction_code_description;
    bool m_transaction_code_description_isSet;
    bool m_transaction_code_description_isValid;

    QDateTime m_transaction_date;
    bool m_transaction_date_isSet;
    bool m_transaction_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJournalTransactionDto)

#endif // OAIJournalTransactionDto_H
