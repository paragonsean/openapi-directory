/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGeneralLedgerBalanceDto.h
 *
 * This class represents a General Ledger Balance in GeneralLedgerBalanceController. Used by getting data.
 */

#ifndef OAIGeneralLedgerBalanceDto_H
#define OAIGeneralLedgerBalanceDto_H

#include <QJsonObject>

#include "OAIAccountNumberDescriptionDto.h"
#include "OAIBranchNumberDto.h"
#include "OAILedgerDescriptionDto.h"
#include "OAIMetadataDto.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccountNumberDescriptionDto;
class OAIBranchNumberDto;
class OAILedgerDescriptionDto;
class OAIMetadataDto;

class OAIGeneralLedgerBalanceDto : public OAIObject {
public:
    OAIGeneralLedgerBalanceDto();
    OAIGeneralLedgerBalanceDto(QString json);
    ~OAIGeneralLedgerBalanceDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountNumberDescriptionDto getAccount() const;
    void setAccount(const OAIAccountNumberDescriptionDto &account);
    bool is_account_Set() const;
    bool is_account_Valid() const;

    QString getBalanceType() const;
    void setBalanceType(const QString &balance_type);
    bool is_balance_type_Set() const;
    bool is_balance_type_Valid() const;

    double getBeginningBalance() const;
    void setBeginningBalance(const double &beginning_balance);
    bool is_beginning_balance_Set() const;
    bool is_beginning_balance_Valid() const;

    double getBeginningBalanceInCurrency() const;
    void setBeginningBalanceInCurrency(const double &beginning_balance_in_currency);
    bool is_beginning_balance_in_currency_Set() const;
    bool is_beginning_balance_in_currency_Valid() const;

    OAIBranchNumberDto getBranch() const;
    void setBranch(const OAIBranchNumberDto &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    QString getCurrencyId() const;
    void setCurrencyId(const QString &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QString getFinancialPeriod() const;
    void setFinancialPeriod(const QString &financial_period);
    bool is_financial_period_Set() const;
    bool is_financial_period_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    OAILedgerDescriptionDto getLedger() const;
    void setLedger(const OAILedgerDescriptionDto &ledger);
    bool is_ledger_Set() const;
    bool is_ledger_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    double getPeriodToDateCredit() const;
    void setPeriodToDateCredit(const double &period_to_date_credit);
    bool is_period_to_date_credit_Set() const;
    bool is_period_to_date_credit_Valid() const;

    double getPeriodToDateCreditInCurrency() const;
    void setPeriodToDateCreditInCurrency(const double &period_to_date_credit_in_currency);
    bool is_period_to_date_credit_in_currency_Set() const;
    bool is_period_to_date_credit_in_currency_Valid() const;

    double getPeriodToDateDebit() const;
    void setPeriodToDateDebit(const double &period_to_date_debit);
    bool is_period_to_date_debit_Set() const;
    bool is_period_to_date_debit_Valid() const;

    double getPeriodToDateDebitInCurrency() const;
    void setPeriodToDateDebitInCurrency(const double &period_to_date_debit_in_currency);
    bool is_period_to_date_debit_in_currency_Set() const;
    bool is_period_to_date_debit_in_currency_Valid() const;

    QString getSubAccountCd() const;
    void setSubAccountCd(const QString &sub_account_cd);
    bool is_sub_account_cd_Set() const;
    bool is_sub_account_cd_Valid() const;

    QString getSubaccountId() const;
    void setSubaccountId(const QString &subaccount_id);
    bool is_subaccount_id_Set() const;
    bool is_subaccount_id_Valid() const;

    bool isYearClosed() const;
    void setYearClosed(const bool &year_closed);
    bool is_year_closed_Set() const;
    bool is_year_closed_Valid() const;

    double getYearToDateBalance() const;
    void setYearToDateBalance(const double &year_to_date_balance);
    bool is_year_to_date_balance_Set() const;
    bool is_year_to_date_balance_Valid() const;

    double getYearToDateBalanceInCurrency() const;
    void setYearToDateBalanceInCurrency(const double &year_to_date_balance_in_currency);
    bool is_year_to_date_balance_in_currency_Set() const;
    bool is_year_to_date_balance_in_currency_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountNumberDescriptionDto m_account;
    bool m_account_isSet;
    bool m_account_isValid;

    QString m_balance_type;
    bool m_balance_type_isSet;
    bool m_balance_type_isValid;

    double m_beginning_balance;
    bool m_beginning_balance_isSet;
    bool m_beginning_balance_isValid;

    double m_beginning_balance_in_currency;
    bool m_beginning_balance_in_currency_isSet;
    bool m_beginning_balance_in_currency_isValid;

    OAIBranchNumberDto m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    QString m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QString m_financial_period;
    bool m_financial_period_isSet;
    bool m_financial_period_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    OAILedgerDescriptionDto m_ledger;
    bool m_ledger_isSet;
    bool m_ledger_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    double m_period_to_date_credit;
    bool m_period_to_date_credit_isSet;
    bool m_period_to_date_credit_isValid;

    double m_period_to_date_credit_in_currency;
    bool m_period_to_date_credit_in_currency_isSet;
    bool m_period_to_date_credit_in_currency_isValid;

    double m_period_to_date_debit;
    bool m_period_to_date_debit_isSet;
    bool m_period_to_date_debit_isValid;

    double m_period_to_date_debit_in_currency;
    bool m_period_to_date_debit_in_currency_isSet;
    bool m_period_to_date_debit_in_currency_isValid;

    QString m_sub_account_cd;
    bool m_sub_account_cd_isSet;
    bool m_sub_account_cd_isValid;

    QString m_subaccount_id;
    bool m_subaccount_id_isSet;
    bool m_subaccount_id_isValid;

    bool m_year_closed;
    bool m_year_closed_isSet;
    bool m_year_closed_isValid;

    double m_year_to_date_balance;
    bool m_year_to_date_balance_isSet;
    bool m_year_to_date_balance_isValid;

    double m_year_to_date_balance_in_currency;
    bool m_year_to_date_balance_in_currency_isSet;
    bool m_year_to_date_balance_in_currency_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGeneralLedgerBalanceDto)

#endif // OAIGeneralLedgerBalanceDto_H
