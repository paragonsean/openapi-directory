/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVatRateLineDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVatRateLineDto::OAIVatRateLineDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVatRateLineDto::OAIVatRateLineDto() {
    this->initializeModel();
}

OAIVatRateLineDto::~OAIVatRateLineDto() {}

void OAIVatRateLineDto::initializeModel() {

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_vat_rate_isSet = false;
    m_vat_rate_isValid = false;
}

void OAIVatRateLineDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVatRateLineDto::fromJsonObject(QJsonObject json) {

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionID")]);
    m_revision_id_isSet = !json[QString("revisionID")].isNull() && m_revision_id_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_vat_rate_isValid = ::OpenAPI::fromJsonValue(m_vat_rate, json[QString("vatRate")]);
    m_vat_rate_isSet = !json[QString("vatRate")].isNull() && m_vat_rate_isValid;
}

QString OAIVatRateLineDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVatRateLineDto::asJsonObject() const {
    QJsonObject obj;
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionID"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_vat_rate_isSet) {
        obj.insert(QString("vatRate"), ::OpenAPI::toJsonValue(m_vat_rate));
    }
    return obj;
}

QString OAIVatRateLineDto::getRevisionId() const {
    return m_revision_id;
}
void OAIVatRateLineDto::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIVatRateLineDto::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIVatRateLineDto::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

QDateTime OAIVatRateLineDto::getStartDate() const {
    return m_start_date;
}
void OAIVatRateLineDto::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIVatRateLineDto::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIVatRateLineDto::is_start_date_Valid() const{
    return m_start_date_isValid;
}

double OAIVatRateLineDto::getVatRate() const {
    return m_vat_rate;
}
void OAIVatRateLineDto::setVatRate(const double &vat_rate) {
    m_vat_rate = vat_rate;
    m_vat_rate_isSet = true;
}

bool OAIVatRateLineDto::is_vat_rate_Set() const{
    return m_vat_rate_isSet;
}

bool OAIVatRateLineDto::is_vat_rate_Valid() const{
    return m_vat_rate_isValid;
}

bool OAIVatRateLineDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_rate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVatRateLineDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
