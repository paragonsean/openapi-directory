/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAttributeLineUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAttributeLineUpdateDto::OAIAttributeLineUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAttributeLineUpdateDto::OAIAttributeLineUpdateDto() {
    this->initializeModel();
}

OAIAttributeLineUpdateDto::~OAIAttributeLineUpdateDto() {}

void OAIAttributeLineUpdateDto::initializeModel() {

    m_attribute_id_isSet = false;
    m_attribute_id_isValid = false;

    m_attribute_value_isSet = false;
    m_attribute_value_isValid = false;
}

void OAIAttributeLineUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAttributeLineUpdateDto::fromJsonObject(QJsonObject json) {

    m_attribute_id_isValid = ::OpenAPI::fromJsonValue(m_attribute_id, json[QString("attributeId")]);
    m_attribute_id_isSet = !json[QString("attributeId")].isNull() && m_attribute_id_isValid;

    m_attribute_value_isValid = ::OpenAPI::fromJsonValue(m_attribute_value, json[QString("attributeValue")]);
    m_attribute_value_isSet = !json[QString("attributeValue")].isNull() && m_attribute_value_isValid;
}

QString OAIAttributeLineUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAttributeLineUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_id.isSet()) {
        obj.insert(QString("attributeId"), ::OpenAPI::toJsonValue(m_attribute_id));
    }
    if (m_attribute_value.isSet()) {
        obj.insert(QString("attributeValue"), ::OpenAPI::toJsonValue(m_attribute_value));
    }
    return obj;
}

OAIAttributeIdInAttributeLineUpdateDto OAIAttributeLineUpdateDto::getAttributeId() const {
    return m_attribute_id;
}
void OAIAttributeLineUpdateDto::setAttributeId(const OAIAttributeIdInAttributeLineUpdateDto &attribute_id) {
    m_attribute_id = attribute_id;
    m_attribute_id_isSet = true;
}

bool OAIAttributeLineUpdateDto::is_attribute_id_Set() const{
    return m_attribute_id_isSet;
}

bool OAIAttributeLineUpdateDto::is_attribute_id_Valid() const{
    return m_attribute_id_isValid;
}

OAIDtoValueOfString OAIAttributeLineUpdateDto::getAttributeValue() const {
    return m_attribute_value;
}
void OAIAttributeLineUpdateDto::setAttributeValue(const OAIDtoValueOfString &attribute_value) {
    m_attribute_value = attribute_value;
    m_attribute_value_isSet = true;
}

bool OAIAttributeLineUpdateDto::is_attribute_value_Set() const{
    return m_attribute_value_isSet;
}

bool OAIAttributeLineUpdateDto::is_attribute_value_Valid() const{
    return m_attribute_value_isValid;
}

bool OAIAttributeLineUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_value.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAttributeLineUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
