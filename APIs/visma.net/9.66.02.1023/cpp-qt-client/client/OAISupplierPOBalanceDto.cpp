/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISupplierPOBalanceDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISupplierPOBalanceDto::OAISupplierPOBalanceDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISupplierPOBalanceDto::OAISupplierPOBalanceDto() {
    this->initializeModel();
}

OAISupplierPOBalanceDto::~OAISupplierPOBalanceDto() {}

void OAISupplierPOBalanceDto::initializeModel() {

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_supplier_isSet = false;
    m_supplier_isValid = false;

    m_total_closed_po_line_total_isSet = false;
    m_total_closed_po_line_total_isValid = false;

    m_total_closed_po_order_total_isSet = false;
    m_total_closed_po_order_total_isValid = false;

    m_total_open_po_line_total_isSet = false;
    m_total_open_po_line_total_isValid = false;

    m_total_open_po_order_total_isSet = false;
    m_total_open_po_order_total_isValid = false;

    m_total_poon_hold_line_total_isSet = false;
    m_total_poon_hold_line_total_isValid = false;

    m_total_poon_hold_order_total_isSet = false;
    m_total_poon_hold_order_total_isValid = false;
}

void OAISupplierPOBalanceDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISupplierPOBalanceDto::fromJsonObject(QJsonObject json) {

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_supplier_isValid = ::OpenAPI::fromJsonValue(m_supplier, json[QString("supplier")]);
    m_supplier_isSet = !json[QString("supplier")].isNull() && m_supplier_isValid;

    m_total_closed_po_line_total_isValid = ::OpenAPI::fromJsonValue(m_total_closed_po_line_total, json[QString("totalClosedPOLineTotal")]);
    m_total_closed_po_line_total_isSet = !json[QString("totalClosedPOLineTotal")].isNull() && m_total_closed_po_line_total_isValid;

    m_total_closed_po_order_total_isValid = ::OpenAPI::fromJsonValue(m_total_closed_po_order_total, json[QString("totalClosedPOOrderTotal")]);
    m_total_closed_po_order_total_isSet = !json[QString("totalClosedPOOrderTotal")].isNull() && m_total_closed_po_order_total_isValid;

    m_total_open_po_line_total_isValid = ::OpenAPI::fromJsonValue(m_total_open_po_line_total, json[QString("totalOpenPOLineTotal")]);
    m_total_open_po_line_total_isSet = !json[QString("totalOpenPOLineTotal")].isNull() && m_total_open_po_line_total_isValid;

    m_total_open_po_order_total_isValid = ::OpenAPI::fromJsonValue(m_total_open_po_order_total, json[QString("totalOpenPOOrderTotal")]);
    m_total_open_po_order_total_isSet = !json[QString("totalOpenPOOrderTotal")].isNull() && m_total_open_po_order_total_isValid;

    m_total_poon_hold_line_total_isValid = ::OpenAPI::fromJsonValue(m_total_poon_hold_line_total, json[QString("totalPOOnHoldLineTotal")]);
    m_total_poon_hold_line_total_isSet = !json[QString("totalPOOnHoldLineTotal")].isNull() && m_total_poon_hold_line_total_isValid;

    m_total_poon_hold_order_total_isValid = ::OpenAPI::fromJsonValue(m_total_poon_hold_order_total, json[QString("totalPOOnHoldOrderTotal")]);
    m_total_poon_hold_order_total_isSet = !json[QString("totalPOOnHoldOrderTotal")].isNull() && m_total_poon_hold_order_total_isValid;
}

QString OAISupplierPOBalanceDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISupplierPOBalanceDto::asJsonObject() const {
    QJsonObject obj;
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_supplier.isSet()) {
        obj.insert(QString("supplier"), ::OpenAPI::toJsonValue(m_supplier));
    }
    if (m_total_closed_po_line_total_isSet) {
        obj.insert(QString("totalClosedPOLineTotal"), ::OpenAPI::toJsonValue(m_total_closed_po_line_total));
    }
    if (m_total_closed_po_order_total_isSet) {
        obj.insert(QString("totalClosedPOOrderTotal"), ::OpenAPI::toJsonValue(m_total_closed_po_order_total));
    }
    if (m_total_open_po_line_total_isSet) {
        obj.insert(QString("totalOpenPOLineTotal"), ::OpenAPI::toJsonValue(m_total_open_po_line_total));
    }
    if (m_total_open_po_order_total_isSet) {
        obj.insert(QString("totalOpenPOOrderTotal"), ::OpenAPI::toJsonValue(m_total_open_po_order_total));
    }
    if (m_total_poon_hold_line_total_isSet) {
        obj.insert(QString("totalPOOnHoldLineTotal"), ::OpenAPI::toJsonValue(m_total_poon_hold_line_total));
    }
    if (m_total_poon_hold_order_total_isSet) {
        obj.insert(QString("totalPOOnHoldOrderTotal"), ::OpenAPI::toJsonValue(m_total_poon_hold_order_total));
    }
    return obj;
}

QDateTime OAISupplierPOBalanceDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAISupplierPOBalanceDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAISupplierPOBalanceDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAISupplierPOBalanceDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

OAISupplierInSupplierPOBalanceDto OAISupplierPOBalanceDto::getSupplier() const {
    return m_supplier;
}
void OAISupplierPOBalanceDto::setSupplier(const OAISupplierInSupplierPOBalanceDto &supplier) {
    m_supplier = supplier;
    m_supplier_isSet = true;
}

bool OAISupplierPOBalanceDto::is_supplier_Set() const{
    return m_supplier_isSet;
}

bool OAISupplierPOBalanceDto::is_supplier_Valid() const{
    return m_supplier_isValid;
}

double OAISupplierPOBalanceDto::getTotalClosedPoLineTotal() const {
    return m_total_closed_po_line_total;
}
void OAISupplierPOBalanceDto::setTotalClosedPoLineTotal(const double &total_closed_po_line_total) {
    m_total_closed_po_line_total = total_closed_po_line_total;
    m_total_closed_po_line_total_isSet = true;
}

bool OAISupplierPOBalanceDto::is_total_closed_po_line_total_Set() const{
    return m_total_closed_po_line_total_isSet;
}

bool OAISupplierPOBalanceDto::is_total_closed_po_line_total_Valid() const{
    return m_total_closed_po_line_total_isValid;
}

double OAISupplierPOBalanceDto::getTotalClosedPoOrderTotal() const {
    return m_total_closed_po_order_total;
}
void OAISupplierPOBalanceDto::setTotalClosedPoOrderTotal(const double &total_closed_po_order_total) {
    m_total_closed_po_order_total = total_closed_po_order_total;
    m_total_closed_po_order_total_isSet = true;
}

bool OAISupplierPOBalanceDto::is_total_closed_po_order_total_Set() const{
    return m_total_closed_po_order_total_isSet;
}

bool OAISupplierPOBalanceDto::is_total_closed_po_order_total_Valid() const{
    return m_total_closed_po_order_total_isValid;
}

double OAISupplierPOBalanceDto::getTotalOpenPoLineTotal() const {
    return m_total_open_po_line_total;
}
void OAISupplierPOBalanceDto::setTotalOpenPoLineTotal(const double &total_open_po_line_total) {
    m_total_open_po_line_total = total_open_po_line_total;
    m_total_open_po_line_total_isSet = true;
}

bool OAISupplierPOBalanceDto::is_total_open_po_line_total_Set() const{
    return m_total_open_po_line_total_isSet;
}

bool OAISupplierPOBalanceDto::is_total_open_po_line_total_Valid() const{
    return m_total_open_po_line_total_isValid;
}

double OAISupplierPOBalanceDto::getTotalOpenPoOrderTotal() const {
    return m_total_open_po_order_total;
}
void OAISupplierPOBalanceDto::setTotalOpenPoOrderTotal(const double &total_open_po_order_total) {
    m_total_open_po_order_total = total_open_po_order_total;
    m_total_open_po_order_total_isSet = true;
}

bool OAISupplierPOBalanceDto::is_total_open_po_order_total_Set() const{
    return m_total_open_po_order_total_isSet;
}

bool OAISupplierPOBalanceDto::is_total_open_po_order_total_Valid() const{
    return m_total_open_po_order_total_isValid;
}

double OAISupplierPOBalanceDto::getTotalPoonHoldLineTotal() const {
    return m_total_poon_hold_line_total;
}
void OAISupplierPOBalanceDto::setTotalPoonHoldLineTotal(const double &total_poon_hold_line_total) {
    m_total_poon_hold_line_total = total_poon_hold_line_total;
    m_total_poon_hold_line_total_isSet = true;
}

bool OAISupplierPOBalanceDto::is_total_poon_hold_line_total_Set() const{
    return m_total_poon_hold_line_total_isSet;
}

bool OAISupplierPOBalanceDto::is_total_poon_hold_line_total_Valid() const{
    return m_total_poon_hold_line_total_isValid;
}

double OAISupplierPOBalanceDto::getTotalPoonHoldOrderTotal() const {
    return m_total_poon_hold_order_total;
}
void OAISupplierPOBalanceDto::setTotalPoonHoldOrderTotal(const double &total_poon_hold_order_total) {
    m_total_poon_hold_order_total = total_poon_hold_order_total;
    m_total_poon_hold_order_total_isSet = true;
}

bool OAISupplierPOBalanceDto::is_total_poon_hold_order_total_Set() const{
    return m_total_poon_hold_order_total_isSet;
}

bool OAISupplierPOBalanceDto::is_total_poon_hold_order_total_Valid() const{
    return m_total_poon_hold_order_total_isValid;
}

bool OAISupplierPOBalanceDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_supplier.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_closed_po_line_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_closed_po_order_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_open_po_line_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_open_po_order_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_poon_hold_line_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_poon_hold_order_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISupplierPOBalanceDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
