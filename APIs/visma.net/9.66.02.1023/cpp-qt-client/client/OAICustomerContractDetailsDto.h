/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICustomerContractDetailsDto.h
 *
 * This class represents the CustomerContractDetails in CustomerContractController. Used for getting data.
 */

#ifndef OAICustomerContractDetailsDto_H
#define OAICustomerContractDetailsDto_H

#include <QJsonObject>

#include "OAICustomerContractDetailsLineDto.h"
#include "OAIPromoCodeIdDescriptionDto.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerContractDetailsLineDto;
class OAIPromoCodeIdDescriptionDto;

class OAICustomerContractDetailsDto : public OAIObject {
public:
    OAICustomerContractDetailsDto();
    OAICustomerContractDetailsDto(QString json);
    ~OAICustomerContractDetailsDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCurrentRecurring() const;
    void setCurrentRecurring(const double &current_recurring);
    bool is_current_recurring_Set() const;
    bool is_current_recurring_Valid() const;

    double getCurrentRenewal() const;
    void setCurrentRenewal(const double &current_renewal);
    bool is_current_renewal_Set() const;
    bool is_current_renewal_Valid() const;

    double getCurrentSetup() const;
    void setCurrentSetup(const double &current_setup);
    bool is_current_setup_Set() const;
    bool is_current_setup_Valid() const;

    QDateTime getEffectiveFrom() const;
    void setEffectiveFrom(const QDateTime &effective_from);
    bool is_effective_from_Set() const;
    bool is_effective_from_Valid() const;

    QList<OAICustomerContractDetailsLineDto> getLines() const;
    void setLines(const QList<OAICustomerContractDetailsLineDto> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    double getPendingRecurring() const;
    void setPendingRecurring(const double &pending_recurring);
    bool is_pending_recurring_Set() const;
    bool is_pending_recurring_Valid() const;

    double getPendingRenewal() const;
    void setPendingRenewal(const double &pending_renewal);
    bool is_pending_renewal_Set() const;
    bool is_pending_renewal_Valid() const;

    double getPendingSetup() const;
    void setPendingSetup(const double &pending_setup);
    bool is_pending_setup_Set() const;
    bool is_pending_setup_Valid() const;

    OAIPromoCodeIdDescriptionDto getPromoCode() const;
    void setPromoCode(const OAIPromoCodeIdDescriptionDto &promo_code);
    bool is_promo_code_Set() const;
    bool is_promo_code_Valid() const;

    double getTotalPending() const;
    void setTotalPending(const double &total_pending);
    bool is_total_pending_Set() const;
    bool is_total_pending_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_current_recurring;
    bool m_current_recurring_isSet;
    bool m_current_recurring_isValid;

    double m_current_renewal;
    bool m_current_renewal_isSet;
    bool m_current_renewal_isValid;

    double m_current_setup;
    bool m_current_setup_isSet;
    bool m_current_setup_isValid;

    QDateTime m_effective_from;
    bool m_effective_from_isSet;
    bool m_effective_from_isValid;

    QList<OAICustomerContractDetailsLineDto> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    double m_pending_recurring;
    bool m_pending_recurring_isSet;
    bool m_pending_recurring_isValid;

    double m_pending_renewal;
    bool m_pending_renewal_isSet;
    bool m_pending_renewal_isValid;

    double m_pending_setup;
    bool m_pending_setup_isSet;
    bool m_pending_setup_isValid;

    OAIPromoCodeIdDescriptionDto m_promo_code;
    bool m_promo_code_isSet;
    bool m_promo_code_isValid;

    double m_total_pending;
    bool m_total_pending_isSet;
    bool m_total_pending_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICustomerContractDetailsDto)

#endif // OAICustomerContractDetailsDto_H
