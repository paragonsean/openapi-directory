/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentDto.h
 *
 * This class represents a Payment in PaymentController. Used by getting data.
 */

#ifndef OAIPaymentDto_H
#define OAIPaymentDto_H

#include <QJsonObject>

#include "OAICustomerInPaymentDto.h"
#include "OAIFinancialDetailsInPaymentDto.h"
#include "OAILocationInPaymentDto.h"
#include "OAIMetadataDto.h"
#include "OAIOrderToApplyDto.h"
#include "OAIPaymentLineDto.h"
#include "OAIPaymentMethodInPaymentDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerInPaymentDto;
class OAIFinancialDetailsInPaymentDto;
class OAILocationInPaymentDto;
class OAIMetadataDto;
class OAIOrderToApplyDto;
class OAIPaymentLineDto;
class OAIPaymentMethodInPaymentDto;

class OAIPaymentDto : public OAIObject {
public:
    OAIPaymentDto();
    OAIPaymentDto(QString json);
    ~OAIPaymentDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApplicationDate() const;
    void setApplicationDate(const QDateTime &application_date);
    bool is_application_date_Set() const;
    bool is_application_date_Valid() const;

    QString getApplicationPeriod() const;
    void setApplicationPeriod(const QString &application_period);
    bool is_application_period_Set() const;
    bool is_application_period_Valid() const;

    double getAppliedToDocuments() const;
    void setAppliedToDocuments(const double &applied_to_documents);
    bool is_applied_to_documents_Set() const;
    bool is_applied_to_documents_Valid() const;

    double getAppliedToOrders() const;
    void setAppliedToOrders(const double &applied_to_orders);
    bool is_applied_to_orders_Set() const;
    bool is_applied_to_orders_Valid() const;

    double getAvailableBalance() const;
    void setAvailableBalance(const double &available_balance);
    bool is_available_balance_Set() const;
    bool is_available_balance_Valid() const;

    double getAvailableBalanceInCurrency() const;
    void setAvailableBalanceInCurrency(const double &available_balance_in_currency);
    bool is_available_balance_in_currency_Set() const;
    bool is_available_balance_in_currency_Valid() const;

    QString getBranch() const;
    void setBranch(const QString &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    QString getCashAccount() const;
    void setCashAccount(const QString &cash_account);
    bool is_cash_account_Set() const;
    bool is_cash_account_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAICustomerInPaymentDto getCustomer() const;
    void setCustomer(const OAICustomerInPaymentDto &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    double getDeductedCharges() const;
    void setDeductedCharges(const double &deducted_charges);
    bool is_deducted_charges_Set() const;
    bool is_deducted_charges_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    double getFinanceCharges() const;
    void setFinanceCharges(const double &finance_charges);
    bool is_finance_charges_Set() const;
    bool is_finance_charges_Valid() const;

    OAIFinancialDetailsInPaymentDto getFinancialDetails() const;
    void setFinancialDetails(const OAIFinancialDetailsInPaymentDto &financial_details);
    bool is_financial_details_Set() const;
    bool is_financial_details_Valid() const;

    bool isHold() const;
    void setHold(const bool &hold);
    bool is_hold_Set() const;
    bool is_hold_Valid() const;

    QString getInvoiceText() const;
    void setInvoiceText(const QString &invoice_text);
    bool is_invoice_text_Set() const;
    bool is_invoice_text_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    OAILocationInPaymentDto getLocation() const;
    void setLocation(const OAILocationInPaymentDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<OAIOrderToApplyDto> getOrdersToApply() const;
    void setOrdersToApply(const QList<OAIOrderToApplyDto> &orders_to_apply);
    bool is_orders_to_apply_Set() const;
    bool is_orders_to_apply_Valid() const;

    double getPaymentAmount() const;
    void setPaymentAmount(const double &payment_amount);
    bool is_payment_amount_Set() const;
    bool is_payment_amount_Valid() const;

    double getPaymentAmountInCurrency() const;
    void setPaymentAmountInCurrency(const double &payment_amount_in_currency);
    bool is_payment_amount_in_currency_Set() const;
    bool is_payment_amount_in_currency_Valid() const;

    QList<OAIPaymentLineDto> getPaymentLines() const;
    void setPaymentLines(const QList<OAIPaymentLineDto> &payment_lines);
    bool is_payment_lines_Set() const;
    bool is_payment_lines_Valid() const;

    OAIPaymentMethodInPaymentDto getPaymentMethod() const;
    void setPaymentMethod(const OAIPaymentMethodInPaymentDto &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getPaymentRef() const;
    void setPaymentRef(const QString &payment_ref);
    bool is_payment_ref_Set() const;
    bool is_payment_ref_Valid() const;

    QString getRefNbr() const;
    void setRefNbr(const QString &ref_nbr);
    bool is_ref_nbr_Set() const;
    bool is_ref_nbr_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    double getWriteOffAmount() const;
    void setWriteOffAmount(const double &write_off_amount);
    bool is_write_off_amount_Set() const;
    bool is_write_off_amount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_application_date;
    bool m_application_date_isSet;
    bool m_application_date_isValid;

    QString m_application_period;
    bool m_application_period_isSet;
    bool m_application_period_isValid;

    double m_applied_to_documents;
    bool m_applied_to_documents_isSet;
    bool m_applied_to_documents_isValid;

    double m_applied_to_orders;
    bool m_applied_to_orders_isSet;
    bool m_applied_to_orders_isValid;

    double m_available_balance;
    bool m_available_balance_isSet;
    bool m_available_balance_isValid;

    double m_available_balance_in_currency;
    bool m_available_balance_in_currency_isSet;
    bool m_available_balance_in_currency_isValid;

    QString m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    QString m_cash_account;
    bool m_cash_account_isSet;
    bool m_cash_account_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAICustomerInPaymentDto m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    double m_deducted_charges;
    bool m_deducted_charges_isSet;
    bool m_deducted_charges_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    double m_finance_charges;
    bool m_finance_charges_isSet;
    bool m_finance_charges_isValid;

    OAIFinancialDetailsInPaymentDto m_financial_details;
    bool m_financial_details_isSet;
    bool m_financial_details_isValid;

    bool m_hold;
    bool m_hold_isSet;
    bool m_hold_isValid;

    QString m_invoice_text;
    bool m_invoice_text_isSet;
    bool m_invoice_text_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    OAILocationInPaymentDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<OAIOrderToApplyDto> m_orders_to_apply;
    bool m_orders_to_apply_isSet;
    bool m_orders_to_apply_isValid;

    double m_payment_amount;
    bool m_payment_amount_isSet;
    bool m_payment_amount_isValid;

    double m_payment_amount_in_currency;
    bool m_payment_amount_in_currency_isSet;
    bool m_payment_amount_in_currency_isValid;

    QList<OAIPaymentLineDto> m_payment_lines;
    bool m_payment_lines_isSet;
    bool m_payment_lines_isValid;

    OAIPaymentMethodInPaymentDto m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_payment_ref;
    bool m_payment_ref_isSet;
    bool m_payment_ref_isValid;

    QString m_ref_nbr;
    bool m_ref_nbr_isSet;
    bool m_ref_nbr_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    double m_write_off_amount;
    bool m_write_off_amount_isSet;
    bool m_write_off_amount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentDto)

#endif // OAIPaymentDto_H
