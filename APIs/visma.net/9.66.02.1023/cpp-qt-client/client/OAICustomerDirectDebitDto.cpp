/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerDirectDebitDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerDirectDebitDto::OAICustomerDirectDebitDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerDirectDebitDto::OAICustomerDirectDebitDto() {
    this->initializeModel();
}

OAICustomerDirectDebitDto::~OAICustomerDirectDebitDto() {}

void OAICustomerDirectDebitDto::initializeModel() {

    m_bic_isSet = false;
    m_bic_isValid = false;

    m_date_of_signature_isSet = false;
    m_date_of_signature_isValid = false;

    m_expiration_date_isSet = false;
    m_expiration_date_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;

    m_last_collection_date_isSet = false;
    m_last_collection_date_isValid = false;

    m_mandate_description_isSet = false;
    m_mandate_description_isValid = false;

    m_mandate_id_isSet = false;
    m_mandate_id_isValid = false;

    m_max_amount_isSet = false;
    m_max_amount_isValid = false;

    m_one_time_isSet = false;
    m_one_time_isValid = false;
}

void OAICustomerDirectDebitDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerDirectDebitDto::fromJsonObject(QJsonObject json) {

    m_bic_isValid = ::OpenAPI::fromJsonValue(m_bic, json[QString("bic")]);
    m_bic_isSet = !json[QString("bic")].isNull() && m_bic_isValid;

    m_date_of_signature_isValid = ::OpenAPI::fromJsonValue(m_date_of_signature, json[QString("dateOfSignature")]);
    m_date_of_signature_isSet = !json[QString("dateOfSignature")].isNull() && m_date_of_signature_isValid;

    m_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_date, json[QString("expirationDate")]);
    m_expiration_date_isSet = !json[QString("expirationDate")].isNull() && m_expiration_date_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("isDefault")]);
    m_is_default_isSet = !json[QString("isDefault")].isNull() && m_is_default_isValid;

    m_last_collection_date_isValid = ::OpenAPI::fromJsonValue(m_last_collection_date, json[QString("lastCollectionDate")]);
    m_last_collection_date_isSet = !json[QString("lastCollectionDate")].isNull() && m_last_collection_date_isValid;

    m_mandate_description_isValid = ::OpenAPI::fromJsonValue(m_mandate_description, json[QString("mandateDescription")]);
    m_mandate_description_isSet = !json[QString("mandateDescription")].isNull() && m_mandate_description_isValid;

    m_mandate_id_isValid = ::OpenAPI::fromJsonValue(m_mandate_id, json[QString("mandateId")]);
    m_mandate_id_isSet = !json[QString("mandateId")].isNull() && m_mandate_id_isValid;

    m_max_amount_isValid = ::OpenAPI::fromJsonValue(m_max_amount, json[QString("maxAmount")]);
    m_max_amount_isSet = !json[QString("maxAmount")].isNull() && m_max_amount_isValid;

    m_one_time_isValid = ::OpenAPI::fromJsonValue(m_one_time, json[QString("oneTime")]);
    m_one_time_isSet = !json[QString("oneTime")].isNull() && m_one_time_isValid;
}

QString OAICustomerDirectDebitDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerDirectDebitDto::asJsonObject() const {
    QJsonObject obj;
    if (m_bic_isSet) {
        obj.insert(QString("bic"), ::OpenAPI::toJsonValue(m_bic));
    }
    if (m_date_of_signature_isSet) {
        obj.insert(QString("dateOfSignature"), ::OpenAPI::toJsonValue(m_date_of_signature));
    }
    if (m_expiration_date_isSet) {
        obj.insert(QString("expirationDate"), ::OpenAPI::toJsonValue(m_expiration_date));
    }
    if (m_iban_isSet) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("isDefault"), ::OpenAPI::toJsonValue(m_is_default));
    }
    if (m_last_collection_date_isSet) {
        obj.insert(QString("lastCollectionDate"), ::OpenAPI::toJsonValue(m_last_collection_date));
    }
    if (m_mandate_description_isSet) {
        obj.insert(QString("mandateDescription"), ::OpenAPI::toJsonValue(m_mandate_description));
    }
    if (m_mandate_id_isSet) {
        obj.insert(QString("mandateId"), ::OpenAPI::toJsonValue(m_mandate_id));
    }
    if (m_max_amount_isSet) {
        obj.insert(QString("maxAmount"), ::OpenAPI::toJsonValue(m_max_amount));
    }
    if (m_one_time_isSet) {
        obj.insert(QString("oneTime"), ::OpenAPI::toJsonValue(m_one_time));
    }
    return obj;
}

QString OAICustomerDirectDebitDto::getBic() const {
    return m_bic;
}
void OAICustomerDirectDebitDto::setBic(const QString &bic) {
    m_bic = bic;
    m_bic_isSet = true;
}

bool OAICustomerDirectDebitDto::is_bic_Set() const{
    return m_bic_isSet;
}

bool OAICustomerDirectDebitDto::is_bic_Valid() const{
    return m_bic_isValid;
}

QDateTime OAICustomerDirectDebitDto::getDateOfSignature() const {
    return m_date_of_signature;
}
void OAICustomerDirectDebitDto::setDateOfSignature(const QDateTime &date_of_signature) {
    m_date_of_signature = date_of_signature;
    m_date_of_signature_isSet = true;
}

bool OAICustomerDirectDebitDto::is_date_of_signature_Set() const{
    return m_date_of_signature_isSet;
}

bool OAICustomerDirectDebitDto::is_date_of_signature_Valid() const{
    return m_date_of_signature_isValid;
}

QDateTime OAICustomerDirectDebitDto::getExpirationDate() const {
    return m_expiration_date;
}
void OAICustomerDirectDebitDto::setExpirationDate(const QDateTime &expiration_date) {
    m_expiration_date = expiration_date;
    m_expiration_date_isSet = true;
}

bool OAICustomerDirectDebitDto::is_expiration_date_Set() const{
    return m_expiration_date_isSet;
}

bool OAICustomerDirectDebitDto::is_expiration_date_Valid() const{
    return m_expiration_date_isValid;
}

QString OAICustomerDirectDebitDto::getIban() const {
    return m_iban;
}
void OAICustomerDirectDebitDto::setIban(const QString &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAICustomerDirectDebitDto::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAICustomerDirectDebitDto::is_iban_Valid() const{
    return m_iban_isValid;
}

QString OAICustomerDirectDebitDto::getId() const {
    return m_id;
}
void OAICustomerDirectDebitDto::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomerDirectDebitDto::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomerDirectDebitDto::is_id_Valid() const{
    return m_id_isValid;
}

bool OAICustomerDirectDebitDto::isIsDefault() const {
    return m_is_default;
}
void OAICustomerDirectDebitDto::setIsDefault(const bool &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAICustomerDirectDebitDto::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAICustomerDirectDebitDto::is_is_default_Valid() const{
    return m_is_default_isValid;
}

QDateTime OAICustomerDirectDebitDto::getLastCollectionDate() const {
    return m_last_collection_date;
}
void OAICustomerDirectDebitDto::setLastCollectionDate(const QDateTime &last_collection_date) {
    m_last_collection_date = last_collection_date;
    m_last_collection_date_isSet = true;
}

bool OAICustomerDirectDebitDto::is_last_collection_date_Set() const{
    return m_last_collection_date_isSet;
}

bool OAICustomerDirectDebitDto::is_last_collection_date_Valid() const{
    return m_last_collection_date_isValid;
}

QString OAICustomerDirectDebitDto::getMandateDescription() const {
    return m_mandate_description;
}
void OAICustomerDirectDebitDto::setMandateDescription(const QString &mandate_description) {
    m_mandate_description = mandate_description;
    m_mandate_description_isSet = true;
}

bool OAICustomerDirectDebitDto::is_mandate_description_Set() const{
    return m_mandate_description_isSet;
}

bool OAICustomerDirectDebitDto::is_mandate_description_Valid() const{
    return m_mandate_description_isValid;
}

QString OAICustomerDirectDebitDto::getMandateId() const {
    return m_mandate_id;
}
void OAICustomerDirectDebitDto::setMandateId(const QString &mandate_id) {
    m_mandate_id = mandate_id;
    m_mandate_id_isSet = true;
}

bool OAICustomerDirectDebitDto::is_mandate_id_Set() const{
    return m_mandate_id_isSet;
}

bool OAICustomerDirectDebitDto::is_mandate_id_Valid() const{
    return m_mandate_id_isValid;
}

double OAICustomerDirectDebitDto::getMaxAmount() const {
    return m_max_amount;
}
void OAICustomerDirectDebitDto::setMaxAmount(const double &max_amount) {
    m_max_amount = max_amount;
    m_max_amount_isSet = true;
}

bool OAICustomerDirectDebitDto::is_max_amount_Set() const{
    return m_max_amount_isSet;
}

bool OAICustomerDirectDebitDto::is_max_amount_Valid() const{
    return m_max_amount_isValid;
}

bool OAICustomerDirectDebitDto::isOneTime() const {
    return m_one_time;
}
void OAICustomerDirectDebitDto::setOneTime(const bool &one_time) {
    m_one_time = one_time;
    m_one_time_isSet = true;
}

bool OAICustomerDirectDebitDto::is_one_time_Set() const{
    return m_one_time_isSet;
}

bool OAICustomerDirectDebitDto::is_one_time_Valid() const{
    return m_one_time_isValid;
}

bool OAICustomerDirectDebitDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bic_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_of_signature_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_collection_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mandate_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mandate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_one_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerDirectDebitDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
