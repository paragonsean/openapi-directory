/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAIShipmentApi_H
#define OAI_OAIShipmentApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBackgroundApiAcceptedDto.h"
#include "OAIConfirmShipmentActionResultDto.h"
#include "OAIObject.h"
#include "OAIShipmentCreateDto.h"
#include "OAIShipmentDetailLineAddDto.h"
#include "OAIShipmentDto.h"
#include "OAIShipmentSOLine.h"
#include "OAIShipmentSOOrder.h"
#include "OAIShipmentUpdateDeleteLineDto.h"
#include "OAIShipmentUpdateDto.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAIShipmentApi : public QObject {
    Q_OBJECT

public:
    OAIShipmentApi(const int timeOut = 0);
    ~OAIShipmentApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  shipment_number QString [required]
    * @param[in]  oai_shipment_detail_line_add_dto OAIShipmentDetailLineAddDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void controllerApiV1ShipmentShipmentNumberActionAddLinePost(const QString &shipment_number, const OAIShipmentDetailLineAddDto &oai_shipment_detail_line_add_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_number QString [required]
    * @param[in]  oai_shipment_so_order OAIShipmentSOOrder [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPost(const QString &shipment_number, const OAIShipmentSOOrder &oai_shipment_so_order, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentConfirmShipmentByshipmentNumber(const QString &shipment_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentCorrectShipmentByshipmentNumber(const QString &shipment_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  customer_id qint32 [optional]
    * @param[in]  customer_number QString [optional]
    * @param[in]  greater_than_value QString [optional]
    * @param[in]  number_to_read qint32 [optional]
    * @param[in]  skip_records qint32 [optional]
    * @param[in]  order_by QString [optional]
    * @param[in]  last_modified_date_time QString [optional]
    * @param[in]  last_modified_date_time_condition QString [optional]
    * @param[in]  status QString [optional]
    * @param[in]  page_size qint32 [optional]
    * @param[in]  page_number qint32 [optional]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentGetAllShipments(const ::OpenAPI::OptionalParam<qint32> &customer_id = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &customer_number = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &greater_than_value = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &number_to_read = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &skip_records = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &order_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_modified_date_time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_modified_date_time_condition = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &status = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &page_size = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &page_number = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_nbr QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentGetByshipmentNbr(const QString &shipment_nbr, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  oai_shipment_create_dto OAIShipmentCreateDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentPost(const OAIShipmentCreateDto &oai_shipment_create_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_number QString [required]
    * @param[in]  oai_shipment_so_line OAIShipmentSOLine [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentPostByshipmentNumber(const QString &shipment_number, const OAIShipmentSOLine &oai_shipment_so_line, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_number QString [required]
    * @param[in]  line_number qint32 [required]
    * @param[in]  oai_shipment_update_delete_line_dto OAIShipmentUpdateDeleteLineDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentPostByshipmentNumberlineNumber(const QString &shipment_number, const qint32 &line_number, const OAIShipmentUpdateDeleteLineDto &oai_shipment_update_delete_line_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_nbr QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentPrintPickListByshipmentNbr(const QString &shipment_nbr, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_nbr QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentPrintShipmentConfirmationByshipmentNbr(const QString &shipment_nbr, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  shipment_nbr QString [required]
    * @param[in]  oai_shipment_update_dto OAIShipmentUpdateDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    virtual void shipmentPutByshipmentNbr(const QString &shipment_nbr, const OAIShipmentUpdateDto &oai_shipment_update_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void controllerApiV1ShipmentShipmentNumberActionAddLinePostCallback(OAIHttpRequestWorker *worker);
    void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostCallback(OAIHttpRequestWorker *worker);
    void shipmentConfirmShipmentByshipmentNumberCallback(OAIHttpRequestWorker *worker);
    void shipmentCorrectShipmentByshipmentNumberCallback(OAIHttpRequestWorker *worker);
    void shipmentGetAllShipmentsCallback(OAIHttpRequestWorker *worker);
    void shipmentGetByshipmentNbrCallback(OAIHttpRequestWorker *worker);
    void shipmentPostCallback(OAIHttpRequestWorker *worker);
    void shipmentPostByshipmentNumberCallback(OAIHttpRequestWorker *worker);
    void shipmentPostByshipmentNumberlineNumberCallback(OAIHttpRequestWorker *worker);
    void shipmentPrintPickListByshipmentNbrCallback(OAIHttpRequestWorker *worker);
    void shipmentPrintShipmentConfirmationByshipmentNbrCallback(OAIHttpRequestWorker *worker);
    void shipmentPutByshipmentNbrCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void controllerApiV1ShipmentShipmentNumberActionAddLinePostSignal(OAIBackgroundApiAcceptedDto summary);
    void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignal(OAIBackgroundApiAcceptedDto summary);
    void shipmentConfirmShipmentByshipmentNumberSignal(OAIConfirmShipmentActionResultDto summary);
    void shipmentCorrectShipmentByshipmentNumberSignal(OAIObject summary);
    void shipmentGetAllShipmentsSignal(QList<OAIShipmentDto> summary);
    void shipmentGetByshipmentNbrSignal(OAIShipmentDto summary);
    void shipmentPostSignal(OAIObject summary);
    void shipmentPostByshipmentNumberSignal(OAIBackgroundApiAcceptedDto summary);
    void shipmentPostByshipmentNumberlineNumberSignal(OAIBackgroundApiAcceptedDto summary);
    void shipmentPrintPickListByshipmentNbrSignal(OAIObject summary);
    void shipmentPrintShipmentConfirmationByshipmentNbrSignal(OAIObject summary);
    void shipmentPutByshipmentNbrSignal(OAIBackgroundApiAcceptedDto summary);


    void controllerApiV1ShipmentShipmentNumberActionAddLinePostSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);
    void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);
    void shipmentConfirmShipmentByshipmentNumberSignalFull(OAIHttpRequestWorker *worker, OAIConfirmShipmentActionResultDto summary);
    void shipmentCorrectShipmentByshipmentNumberSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void shipmentGetAllShipmentsSignalFull(OAIHttpRequestWorker *worker, QList<OAIShipmentDto> summary);
    void shipmentGetByshipmentNbrSignalFull(OAIHttpRequestWorker *worker, OAIShipmentDto summary);
    void shipmentPostSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void shipmentPostByshipmentNumberSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);
    void shipmentPostByshipmentNumberlineNumberSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);
    void shipmentPrintPickListByshipmentNbrSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void shipmentPrintShipmentConfirmationByshipmentNbrSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void shipmentPutByshipmentNbrSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);

    Q_DECL_DEPRECATED_X("Use controllerApiV1ShipmentShipmentNumberActionAddLinePostSignalError() instead")
    void controllerApiV1ShipmentShipmentNumberActionAddLinePostSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void controllerApiV1ShipmentShipmentNumberActionAddLinePostSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignalError() instead")
    void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentConfirmShipmentByshipmentNumberSignalError() instead")
    void shipmentConfirmShipmentByshipmentNumberSignalE(OAIConfirmShipmentActionResultDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentConfirmShipmentByshipmentNumberSignalError(OAIConfirmShipmentActionResultDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentCorrectShipmentByshipmentNumberSignalError() instead")
    void shipmentCorrectShipmentByshipmentNumberSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentCorrectShipmentByshipmentNumberSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentGetAllShipmentsSignalError() instead")
    void shipmentGetAllShipmentsSignalE(QList<OAIShipmentDto> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentGetAllShipmentsSignalError(QList<OAIShipmentDto> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentGetByshipmentNbrSignalError() instead")
    void shipmentGetByshipmentNbrSignalE(OAIShipmentDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentGetByshipmentNbrSignalError(OAIShipmentDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPostSignalError() instead")
    void shipmentPostSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPostSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPostByshipmentNumberSignalError() instead")
    void shipmentPostByshipmentNumberSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPostByshipmentNumberSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPostByshipmentNumberlineNumberSignalError() instead")
    void shipmentPostByshipmentNumberlineNumberSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPostByshipmentNumberlineNumberSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPrintPickListByshipmentNbrSignalError() instead")
    void shipmentPrintPickListByshipmentNbrSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPrintPickListByshipmentNbrSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPrintShipmentConfirmationByshipmentNbrSignalError() instead")
    void shipmentPrintShipmentConfirmationByshipmentNbrSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPrintShipmentConfirmationByshipmentNbrSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPutByshipmentNbrSignalError() instead")
    void shipmentPutByshipmentNbrSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPutByshipmentNbrSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use controllerApiV1ShipmentShipmentNumberActionAddLinePostSignalErrorFull() instead")
    void controllerApiV1ShipmentShipmentNumberActionAddLinePostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void controllerApiV1ShipmentShipmentNumberActionAddLinePostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignalErrorFull() instead")
    void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void controllerApiV1ShipmentShipmentNumberActionAddSOOrderPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentConfirmShipmentByshipmentNumberSignalErrorFull() instead")
    void shipmentConfirmShipmentByshipmentNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentConfirmShipmentByshipmentNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentCorrectShipmentByshipmentNumberSignalErrorFull() instead")
    void shipmentCorrectShipmentByshipmentNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentCorrectShipmentByshipmentNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentGetAllShipmentsSignalErrorFull() instead")
    void shipmentGetAllShipmentsSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentGetAllShipmentsSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentGetByshipmentNbrSignalErrorFull() instead")
    void shipmentGetByshipmentNbrSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentGetByshipmentNbrSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPostSignalErrorFull() instead")
    void shipmentPostSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPostSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPostByshipmentNumberSignalErrorFull() instead")
    void shipmentPostByshipmentNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPostByshipmentNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPostByshipmentNumberlineNumberSignalErrorFull() instead")
    void shipmentPostByshipmentNumberlineNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPostByshipmentNumberlineNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPrintPickListByshipmentNbrSignalErrorFull() instead")
    void shipmentPrintPickListByshipmentNbrSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPrintPickListByshipmentNbrSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPrintShipmentConfirmationByshipmentNbrSignalErrorFull() instead")
    void shipmentPrintShipmentConfirmationByshipmentNbrSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPrintShipmentConfirmationByshipmentNbrSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use shipmentPutByshipmentNbrSignalErrorFull() instead")
    void shipmentPutByshipmentNbrSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void shipmentPutByshipmentNbrSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
