/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesOrderV2QueryParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesOrderV2QueryParameters::OAISalesOrderV2QueryParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesOrderV2QueryParameters::OAISalesOrderV2QueryParameters() {
    this->initializeModel();
}

OAISalesOrderV2QueryParameters::~OAISalesOrderV2QueryParameters() {}

void OAISalesOrderV2QueryParameters::initializeModel() {

    m_greater_than_value_isSet = false;
    m_greater_than_value_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_modified_date_time_condition_isSet = false;
    m_last_modified_date_time_condition_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_show_notes_isSet = false;
    m_show_notes_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISalesOrderV2QueryParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesOrderV2QueryParameters::fromJsonObject(QJsonObject json) {

    m_greater_than_value_isValid = ::OpenAPI::fromJsonValue(m_greater_than_value, json[QString("greaterThanValue")]);
    m_greater_than_value_isSet = !json[QString("greaterThanValue")].isNull() && m_greater_than_value_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_modified_date_time_condition_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time_condition, json[QString("lastModifiedDateTimeCondition")]);
    m_last_modified_date_time_condition_isSet = !json[QString("lastModifiedDateTimeCondition")].isNull() && m_last_modified_date_time_condition_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("pageNumber")]);
    m_page_number_isSet = !json[QString("pageNumber")].isNull() && m_page_number_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_show_notes_isValid = ::OpenAPI::fromJsonValue(m_show_notes, json[QString("showNotes")]);
    m_show_notes_isSet = !json[QString("showNotes")].isNull() && m_show_notes_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAISalesOrderV2QueryParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesOrderV2QueryParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_greater_than_value_isSet) {
        obj.insert(QString("greaterThanValue"), ::OpenAPI::toJsonValue(m_greater_than_value));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_modified_date_time_condition_isSet) {
        obj.insert(QString("lastModifiedDateTimeCondition"), ::OpenAPI::toJsonValue(m_last_modified_date_time_condition));
    }
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("pageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_show_notes_isSet) {
        obj.insert(QString("showNotes"), ::OpenAPI::toJsonValue(m_show_notes));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAISalesOrderV2QueryParameters::getGreaterThanValue() const {
    return m_greater_than_value;
}
void OAISalesOrderV2QueryParameters::setGreaterThanValue(const QString &greater_than_value) {
    m_greater_than_value = greater_than_value;
    m_greater_than_value_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_greater_than_value_Set() const{
    return m_greater_than_value_isSet;
}

bool OAISalesOrderV2QueryParameters::is_greater_than_value_Valid() const{
    return m_greater_than_value_isValid;
}

QString OAISalesOrderV2QueryParameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAISalesOrderV2QueryParameters::setLastModifiedDateTime(const QString &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAISalesOrderV2QueryParameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAISalesOrderV2QueryParameters::getLastModifiedDateTimeCondition() const {
    return m_last_modified_date_time_condition;
}
void OAISalesOrderV2QueryParameters::setLastModifiedDateTimeCondition(const QString &last_modified_date_time_condition) {
    m_last_modified_date_time_condition = last_modified_date_time_condition;
    m_last_modified_date_time_condition_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_last_modified_date_time_condition_Set() const{
    return m_last_modified_date_time_condition_isSet;
}

bool OAISalesOrderV2QueryParameters::is_last_modified_date_time_condition_Valid() const{
    return m_last_modified_date_time_condition_isValid;
}

QString OAISalesOrderV2QueryParameters::getOrderType() const {
    return m_order_type;
}
void OAISalesOrderV2QueryParameters::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAISalesOrderV2QueryParameters::is_order_type_Valid() const{
    return m_order_type_isValid;
}

qint32 OAISalesOrderV2QueryParameters::getPageNumber() const {
    return m_page_number;
}
void OAISalesOrderV2QueryParameters::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAISalesOrderV2QueryParameters::is_page_number_Valid() const{
    return m_page_number_isValid;
}

qint32 OAISalesOrderV2QueryParameters::getPageSize() const {
    return m_page_size;
}
void OAISalesOrderV2QueryParameters::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAISalesOrderV2QueryParameters::is_page_size_Valid() const{
    return m_page_size_isValid;
}

bool OAISalesOrderV2QueryParameters::isShowNotes() const {
    return m_show_notes;
}
void OAISalesOrderV2QueryParameters::setShowNotes(const bool &show_notes) {
    m_show_notes = show_notes;
    m_show_notes_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_show_notes_Set() const{
    return m_show_notes_isSet;
}

bool OAISalesOrderV2QueryParameters::is_show_notes_Valid() const{
    return m_show_notes_isValid;
}

QString OAISalesOrderV2QueryParameters::getStatus() const {
    return m_status;
}
void OAISalesOrderV2QueryParameters::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISalesOrderV2QueryParameters::is_status_Set() const{
    return m_status_isSet;
}

bool OAISalesOrderV2QueryParameters::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISalesOrderV2QueryParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_greater_than_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_show_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesOrderV2QueryParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
