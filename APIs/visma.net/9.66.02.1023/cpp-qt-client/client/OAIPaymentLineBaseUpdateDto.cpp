/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentLineBaseUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentLineBaseUpdateDto::OAIPaymentLineBaseUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentLineBaseUpdateDto::OAIPaymentLineBaseUpdateDto() {
    this->initializeModel();
}

OAIPaymentLineBaseUpdateDto::~OAIPaymentLineBaseUpdateDto() {}

void OAIPaymentLineBaseUpdateDto::initializeModel() {

    m_amount_paid_isSet = false;
    m_amount_paid_isValid = false;

    m_document_type_isSet = false;
    m_document_type_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_ref_nbr_isSet = false;
    m_ref_nbr_isValid = false;
}

void OAIPaymentLineBaseUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentLineBaseUpdateDto::fromJsonObject(QJsonObject json) {

    m_amount_paid_isValid = ::OpenAPI::fromJsonValue(m_amount_paid, json[QString("amountPaid")]);
    m_amount_paid_isSet = !json[QString("amountPaid")].isNull() && m_amount_paid_isValid;

    m_document_type_isValid = ::OpenAPI::fromJsonValue(m_document_type, json[QString("documentType")]);
    m_document_type_isSet = !json[QString("documentType")].isNull() && m_document_type_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_ref_nbr_isValid = ::OpenAPI::fromJsonValue(m_ref_nbr, json[QString("refNbr")]);
    m_ref_nbr_isSet = !json[QString("refNbr")].isNull() && m_ref_nbr_isValid;
}

QString OAIPaymentLineBaseUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentLineBaseUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_paid.isSet()) {
        obj.insert(QString("amountPaid"), ::OpenAPI::toJsonValue(m_amount_paid));
    }
    if (m_document_type.isSet()) {
        obj.insert(QString("documentType"), ::OpenAPI::toJsonValue(m_document_type));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_ref_nbr.isSet()) {
        obj.insert(QString("refNbr"), ::OpenAPI::toJsonValue(m_ref_nbr));
    }
    return obj;
}

OAIDtoValueOfDecimal OAIPaymentLineBaseUpdateDto::getAmountPaid() const {
    return m_amount_paid;
}
void OAIPaymentLineBaseUpdateDto::setAmountPaid(const OAIDtoValueOfDecimal &amount_paid) {
    m_amount_paid = amount_paid;
    m_amount_paid_isSet = true;
}

bool OAIPaymentLineBaseUpdateDto::is_amount_paid_Set() const{
    return m_amount_paid_isSet;
}

bool OAIPaymentLineBaseUpdateDto::is_amount_paid_Valid() const{
    return m_amount_paid_isValid;
}

OAIDtoValueOfCustomerDocumentTypes OAIPaymentLineBaseUpdateDto::getDocumentType() const {
    return m_document_type;
}
void OAIPaymentLineBaseUpdateDto::setDocumentType(const OAIDtoValueOfCustomerDocumentTypes &document_type) {
    m_document_type = document_type;
    m_document_type_isSet = true;
}

bool OAIPaymentLineBaseUpdateDto::is_document_type_Set() const{
    return m_document_type_isSet;
}

bool OAIPaymentLineBaseUpdateDto::is_document_type_Valid() const{
    return m_document_type_isValid;
}

QString OAIPaymentLineBaseUpdateDto::getOperation() const {
    return m_operation;
}
void OAIPaymentLineBaseUpdateDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIPaymentLineBaseUpdateDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIPaymentLineBaseUpdateDto::is_operation_Valid() const{
    return m_operation_isValid;
}

OAIDtoValueOfString OAIPaymentLineBaseUpdateDto::getRefNbr() const {
    return m_ref_nbr;
}
void OAIPaymentLineBaseUpdateDto::setRefNbr(const OAIDtoValueOfString &ref_nbr) {
    m_ref_nbr = ref_nbr;
    m_ref_nbr_isSet = true;
}

bool OAIPaymentLineBaseUpdateDto::is_ref_nbr_Set() const{
    return m_ref_nbr_isSet;
}

bool OAIPaymentLineBaseUpdateDto::is_ref_nbr_Valid() const{
    return m_ref_nbr_isValid;
}

bool OAIPaymentLineBaseUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_paid.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_nbr.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentLineBaseUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
