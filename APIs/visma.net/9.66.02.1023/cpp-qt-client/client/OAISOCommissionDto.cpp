/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISOCommissionDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISOCommissionDto::OAISOCommissionDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISOCommissionDto::OAISOCommissionDto() {
    this->initializeModel();
}

OAISOCommissionDto::~OAISOCommissionDto() {}

void OAISOCommissionDto::initializeModel() {

    m_commission_amount_isSet = false;
    m_commission_amount_isValid = false;

    m_commission_percent_isSet = false;
    m_commission_percent_isValid = false;

    m_commissionable_amount_isSet = false;
    m_commissionable_amount_isValid = false;

    m_sales_person_id_isSet = false;
    m_sales_person_id_isValid = false;
}

void OAISOCommissionDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISOCommissionDto::fromJsonObject(QJsonObject json) {

    m_commission_amount_isValid = ::OpenAPI::fromJsonValue(m_commission_amount, json[QString("commissionAmount")]);
    m_commission_amount_isSet = !json[QString("commissionAmount")].isNull() && m_commission_amount_isValid;

    m_commission_percent_isValid = ::OpenAPI::fromJsonValue(m_commission_percent, json[QString("commissionPercent")]);
    m_commission_percent_isSet = !json[QString("commissionPercent")].isNull() && m_commission_percent_isValid;

    m_commissionable_amount_isValid = ::OpenAPI::fromJsonValue(m_commissionable_amount, json[QString("commissionableAmount")]);
    m_commissionable_amount_isSet = !json[QString("commissionableAmount")].isNull() && m_commissionable_amount_isValid;

    m_sales_person_id_isValid = ::OpenAPI::fromJsonValue(m_sales_person_id, json[QString("salesPersonId")]);
    m_sales_person_id_isSet = !json[QString("salesPersonId")].isNull() && m_sales_person_id_isValid;
}

QString OAISOCommissionDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISOCommissionDto::asJsonObject() const {
    QJsonObject obj;
    if (m_commission_amount_isSet) {
        obj.insert(QString("commissionAmount"), ::OpenAPI::toJsonValue(m_commission_amount));
    }
    if (m_commission_percent_isSet) {
        obj.insert(QString("commissionPercent"), ::OpenAPI::toJsonValue(m_commission_percent));
    }
    if (m_commissionable_amount_isSet) {
        obj.insert(QString("commissionableAmount"), ::OpenAPI::toJsonValue(m_commissionable_amount));
    }
    if (m_sales_person_id_isSet) {
        obj.insert(QString("salesPersonId"), ::OpenAPI::toJsonValue(m_sales_person_id));
    }
    return obj;
}

double OAISOCommissionDto::getCommissionAmount() const {
    return m_commission_amount;
}
void OAISOCommissionDto::setCommissionAmount(const double &commission_amount) {
    m_commission_amount = commission_amount;
    m_commission_amount_isSet = true;
}

bool OAISOCommissionDto::is_commission_amount_Set() const{
    return m_commission_amount_isSet;
}

bool OAISOCommissionDto::is_commission_amount_Valid() const{
    return m_commission_amount_isValid;
}

double OAISOCommissionDto::getCommissionPercent() const {
    return m_commission_percent;
}
void OAISOCommissionDto::setCommissionPercent(const double &commission_percent) {
    m_commission_percent = commission_percent;
    m_commission_percent_isSet = true;
}

bool OAISOCommissionDto::is_commission_percent_Set() const{
    return m_commission_percent_isSet;
}

bool OAISOCommissionDto::is_commission_percent_Valid() const{
    return m_commission_percent_isValid;
}

double OAISOCommissionDto::getCommissionableAmount() const {
    return m_commissionable_amount;
}
void OAISOCommissionDto::setCommissionableAmount(const double &commissionable_amount) {
    m_commissionable_amount = commissionable_amount;
    m_commissionable_amount_isSet = true;
}

bool OAISOCommissionDto::is_commissionable_amount_Set() const{
    return m_commissionable_amount_isSet;
}

bool OAISOCommissionDto::is_commissionable_amount_Valid() const{
    return m_commissionable_amount_isValid;
}

QString OAISOCommissionDto::getSalesPersonId() const {
    return m_sales_person_id;
}
void OAISOCommissionDto::setSalesPersonId(const QString &sales_person_id) {
    m_sales_person_id = sales_person_id;
    m_sales_person_id_isSet = true;
}

bool OAISOCommissionDto::is_sales_person_id_Set() const{
    return m_sales_person_id_isSet;
}

bool OAISOCommissionDto::is_sales_person_id_Valid() const{
    return m_sales_person_id_isValid;
}

bool OAISOCommissionDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commission_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commission_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commissionable_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_person_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISOCommissionDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
