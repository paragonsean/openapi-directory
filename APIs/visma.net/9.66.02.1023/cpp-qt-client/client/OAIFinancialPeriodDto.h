/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFinancialPeriodDto.h
 *
 * This class represents a Financial Period in FinancialPeriodController. Used by getting data.
 */

#ifndef OAIFinancialPeriodDto_H
#define OAIFinancialPeriodDto_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFinancialPeriodDto : public OAIObject {
public:
    OAIFinancialPeriodDto();
    OAIFinancialPeriodDto(QString json);
    ~OAIFinancialPeriodDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    bool isClosedInCashManagement() const;
    void setClosedInCashManagement(const bool &closed_in_cash_management);
    bool is_closed_in_cash_management_Set() const;
    bool is_closed_in_cash_management_Valid() const;

    bool isClosedInCustomerLedger() const;
    void setClosedInCustomerLedger(const bool &closed_in_customer_ledger);
    bool is_closed_in_customer_ledger_Set() const;
    bool is_closed_in_customer_ledger_Valid() const;

    bool isClosedInFixedAssets() const;
    void setClosedInFixedAssets(const bool &closed_in_fixed_assets);
    bool is_closed_in_fixed_assets_Set() const;
    bool is_closed_in_fixed_assets_Valid() const;

    bool isClosedInGeneralLedger() const;
    void setClosedInGeneralLedger(const bool &closed_in_general_ledger);
    bool is_closed_in_general_ledger_Set() const;
    bool is_closed_in_general_ledger_Valid() const;

    bool isClosedInInventoryManagement() const;
    void setClosedInInventoryManagement(const bool &closed_in_inventory_management);
    bool is_closed_in_inventory_management_Set() const;
    bool is_closed_in_inventory_management_Valid() const;

    bool isClosedInSupplierLedger() const;
    void setClosedInSupplierLedger(const bool &closed_in_supplier_ledger);
    bool is_closed_in_supplier_ledger_Set() const;
    bool is_closed_in_supplier_ledger_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getPeriod() const;
    void setPeriod(const QString &period);
    bool is_period_Set() const;
    bool is_period_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    bool m_closed_in_cash_management;
    bool m_closed_in_cash_management_isSet;
    bool m_closed_in_cash_management_isValid;

    bool m_closed_in_customer_ledger;
    bool m_closed_in_customer_ledger_isSet;
    bool m_closed_in_customer_ledger_isValid;

    bool m_closed_in_fixed_assets;
    bool m_closed_in_fixed_assets_isSet;
    bool m_closed_in_fixed_assets_isValid;

    bool m_closed_in_general_ledger;
    bool m_closed_in_general_ledger_isSet;
    bool m_closed_in_general_ledger_isValid;

    bool m_closed_in_inventory_management;
    bool m_closed_in_inventory_management_isSet;
    bool m_closed_in_inventory_management_isValid;

    bool m_closed_in_supplier_ledger;
    bool m_closed_in_supplier_ledger_isSet;
    bool m_closed_in_supplier_ledger_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_period;
    bool m_period_isSet;
    bool m_period_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFinancialPeriodDto)

#endif // OAIFinancialPeriodDto_H
