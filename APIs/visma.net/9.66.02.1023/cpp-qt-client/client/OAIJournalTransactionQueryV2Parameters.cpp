/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJournalTransactionQueryV2Parameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJournalTransactionQueryV2Parameters::OAIJournalTransactionQueryV2Parameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJournalTransactionQueryV2Parameters::OAIJournalTransactionQueryV2Parameters() {
    this->initializeModel();
}

OAIJournalTransactionQueryV2Parameters::~OAIJournalTransactionQueryV2Parameters() {}

void OAIJournalTransactionQueryV2Parameters::initializeModel() {

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_expand_attachments_isSet = false;
    m_expand_attachments_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_module_isSet = false;
    m_module_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_period_id_isSet = false;
    m_period_id_isValid = false;

    m_released_batch_isSet = false;
    m_released_batch_isValid = false;
}

void OAIJournalTransactionQueryV2Parameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJournalTransactionQueryV2Parameters::fromJsonObject(QJsonObject json) {

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_expand_attachments_isValid = ::OpenAPI::fromJsonValue(m_expand_attachments, json[QString("expandAttachments")]);
    m_expand_attachments_isSet = !json[QString("expandAttachments")].isNull() && m_expand_attachments_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_module_isValid = ::OpenAPI::fromJsonValue(m_module, json[QString("module")]);
    m_module_isSet = !json[QString("module")].isNull() && m_module_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("pageNumber")]);
    m_page_number_isSet = !json[QString("pageNumber")].isNull() && m_page_number_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_period_id_isValid = ::OpenAPI::fromJsonValue(m_period_id, json[QString("periodId")]);
    m_period_id_isSet = !json[QString("periodId")].isNull() && m_period_id_isValid;

    m_released_batch_isValid = ::OpenAPI::fromJsonValue(m_released_batch, json[QString("releasedBatch")]);
    m_released_batch_isSet = !json[QString("releasedBatch")].isNull() && m_released_batch_isValid;
}

QString OAIJournalTransactionQueryV2Parameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJournalTransactionQueryV2Parameters::asJsonObject() const {
    QJsonObject obj;
    if (m_branch_isSet) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_expand_attachments_isSet) {
        obj.insert(QString("expandAttachments"), ::OpenAPI::toJsonValue(m_expand_attachments));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_module_isSet) {
        obj.insert(QString("module"), ::OpenAPI::toJsonValue(m_module));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("pageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_period_id_isSet) {
        obj.insert(QString("periodId"), ::OpenAPI::toJsonValue(m_period_id));
    }
    if (m_released_batch_isSet) {
        obj.insert(QString("releasedBatch"), ::OpenAPI::toJsonValue(m_released_batch));
    }
    return obj;
}

QString OAIJournalTransactionQueryV2Parameters::getBranch() const {
    return m_branch;
}
void OAIJournalTransactionQueryV2Parameters::setBranch(const QString &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_branch_Valid() const{
    return m_branch_isValid;
}

bool OAIJournalTransactionQueryV2Parameters::isExpandAttachments() const {
    return m_expand_attachments;
}
void OAIJournalTransactionQueryV2Parameters::setExpandAttachments(const bool &expand_attachments) {
    m_expand_attachments = expand_attachments;
    m_expand_attachments_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_expand_attachments_Set() const{
    return m_expand_attachments_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_expand_attachments_Valid() const{
    return m_expand_attachments_isValid;
}

QString OAIJournalTransactionQueryV2Parameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIJournalTransactionQueryV2Parameters::setLastModifiedDateTime(const QString &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIJournalTransactionQueryV2Parameters::getModule() const {
    return m_module;
}
void OAIJournalTransactionQueryV2Parameters::setModule(const QString &module) {
    m_module = module;
    m_module_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_module_Set() const{
    return m_module_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_module_Valid() const{
    return m_module_isValid;
}

qint32 OAIJournalTransactionQueryV2Parameters::getPageNumber() const {
    return m_page_number;
}
void OAIJournalTransactionQueryV2Parameters::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_page_number_Valid() const{
    return m_page_number_isValid;
}

qint32 OAIJournalTransactionQueryV2Parameters::getPageSize() const {
    return m_page_size;
}
void OAIJournalTransactionQueryV2Parameters::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIJournalTransactionQueryV2Parameters::getPeriodId() const {
    return m_period_id;
}
void OAIJournalTransactionQueryV2Parameters::setPeriodId(const QString &period_id) {
    m_period_id = period_id;
    m_period_id_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_period_id_Set() const{
    return m_period_id_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_period_id_Valid() const{
    return m_period_id_isValid;
}

bool OAIJournalTransactionQueryV2Parameters::isReleasedBatch() const {
    return m_released_batch;
}
void OAIJournalTransactionQueryV2Parameters::setReleasedBatch(const bool &released_batch) {
    m_released_batch = released_batch;
    m_released_batch_isSet = true;
}

bool OAIJournalTransactionQueryV2Parameters::is_released_batch_Set() const{
    return m_released_batch_isSet;
}

bool OAIJournalTransactionQueryV2Parameters::is_released_batch_Valid() const{
    return m_released_batch_isValid;
}

bool OAIJournalTransactionQueryV2Parameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_branch_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_attachments_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_module_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_released_batch_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJournalTransactionQueryV2Parameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
