/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIExtendedOrganizationDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIExtendedOrganizationDto::OAIExtendedOrganizationDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIExtendedOrganizationDto::OAIExtendedOrganizationDto() {
    this->initializeModel();
}

OAIExtendedOrganizationDto::~OAIExtendedOrganizationDto() {}

void OAIExtendedOrganizationDto::initializeModel() {

    m_bank_settings_isSet = false;
    m_bank_settings_isValid = false;

    m_base_currency_isSet = false;
    m_base_currency_isValid = false;

    m_branches_isSet = false;
    m_branches_isValid = false;

    m_corporate_id_isSet = false;
    m_corporate_id_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_default_country_isSet = false;
    m_default_country_isValid = false;

    m_delivery_address_isSet = false;
    m_delivery_address_isValid = false;

    m_delivery_contact_isSet = false;
    m_delivery_contact_isValid = false;

    m_file_tax_by_branches_isSet = false;
    m_file_tax_by_branches_isValid = false;

    m_industry_code_isSet = false;
    m_industry_code_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_ledger_isSet = false;
    m_ledger_isValid = false;

    m_main_address_isSet = false;
    m_main_address_isValid = false;

    m_main_contact_isSet = false;
    m_main_contact_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_organization_cd_isSet = false;
    m_organization_cd_isValid = false;

    m_organization_type_isSet = false;
    m_organization_type_isValid = false;

    m_vat_registration_id_isSet = false;
    m_vat_registration_id_isValid = false;

    m_vat_zone_isSet = false;
    m_vat_zone_isValid = false;
}

void OAIExtendedOrganizationDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIExtendedOrganizationDto::fromJsonObject(QJsonObject json) {

    m_bank_settings_isValid = ::OpenAPI::fromJsonValue(m_bank_settings, json[QString("bankSettings")]);
    m_bank_settings_isSet = !json[QString("bankSettings")].isNull() && m_bank_settings_isValid;

    m_base_currency_isValid = ::OpenAPI::fromJsonValue(m_base_currency, json[QString("baseCurrency")]);
    m_base_currency_isSet = !json[QString("baseCurrency")].isNull() && m_base_currency_isValid;

    m_branches_isValid = ::OpenAPI::fromJsonValue(m_branches, json[QString("branches")]);
    m_branches_isSet = !json[QString("branches")].isNull() && m_branches_isValid;

    m_corporate_id_isValid = ::OpenAPI::fromJsonValue(m_corporate_id, json[QString("corporateId")]);
    m_corporate_id_isSet = !json[QString("corporateId")].isNull() && m_corporate_id_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_default_country_isValid = ::OpenAPI::fromJsonValue(m_default_country, json[QString("defaultCountry")]);
    m_default_country_isSet = !json[QString("defaultCountry")].isNull() && m_default_country_isValid;

    m_delivery_address_isValid = ::OpenAPI::fromJsonValue(m_delivery_address, json[QString("deliveryAddress")]);
    m_delivery_address_isSet = !json[QString("deliveryAddress")].isNull() && m_delivery_address_isValid;

    m_delivery_contact_isValid = ::OpenAPI::fromJsonValue(m_delivery_contact, json[QString("deliveryContact")]);
    m_delivery_contact_isSet = !json[QString("deliveryContact")].isNull() && m_delivery_contact_isValid;

    m_file_tax_by_branches_isValid = ::OpenAPI::fromJsonValue(m_file_tax_by_branches, json[QString("fileTaxByBranches")]);
    m_file_tax_by_branches_isSet = !json[QString("fileTaxByBranches")].isNull() && m_file_tax_by_branches_isValid;

    m_industry_code_isValid = ::OpenAPI::fromJsonValue(m_industry_code, json[QString("industryCode")]);
    m_industry_code_isSet = !json[QString("industryCode")].isNull() && m_industry_code_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_ledger_isValid = ::OpenAPI::fromJsonValue(m_ledger, json[QString("ledger")]);
    m_ledger_isSet = !json[QString("ledger")].isNull() && m_ledger_isValid;

    m_main_address_isValid = ::OpenAPI::fromJsonValue(m_main_address, json[QString("mainAddress")]);
    m_main_address_isSet = !json[QString("mainAddress")].isNull() && m_main_address_isValid;

    m_main_contact_isValid = ::OpenAPI::fromJsonValue(m_main_contact, json[QString("mainContact")]);
    m_main_contact_isSet = !json[QString("mainContact")].isNull() && m_main_contact_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_organization_cd_isValid = ::OpenAPI::fromJsonValue(m_organization_cd, json[QString("organizationCd")]);
    m_organization_cd_isSet = !json[QString("organizationCd")].isNull() && m_organization_cd_isValid;

    m_organization_type_isValid = ::OpenAPI::fromJsonValue(m_organization_type, json[QString("organizationType")]);
    m_organization_type_isSet = !json[QString("organizationType")].isNull() && m_organization_type_isValid;

    m_vat_registration_id_isValid = ::OpenAPI::fromJsonValue(m_vat_registration_id, json[QString("vatRegistrationId")]);
    m_vat_registration_id_isSet = !json[QString("vatRegistrationId")].isNull() && m_vat_registration_id_isValid;

    m_vat_zone_isValid = ::OpenAPI::fromJsonValue(m_vat_zone, json[QString("vatZone")]);
    m_vat_zone_isSet = !json[QString("vatZone")].isNull() && m_vat_zone_isValid;
}

QString OAIExtendedOrganizationDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIExtendedOrganizationDto::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_settings.isSet()) {
        obj.insert(QString("bankSettings"), ::OpenAPI::toJsonValue(m_bank_settings));
    }
    if (m_base_currency_isSet) {
        obj.insert(QString("baseCurrency"), ::OpenAPI::toJsonValue(m_base_currency));
    }
    if (m_branches.size() > 0) {
        obj.insert(QString("branches"), ::OpenAPI::toJsonValue(m_branches));
    }
    if (m_corporate_id_isSet) {
        obj.insert(QString("corporateId"), ::OpenAPI::toJsonValue(m_corporate_id));
    }
    if (m_currency.isSet()) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_default_country.isSet()) {
        obj.insert(QString("defaultCountry"), ::OpenAPI::toJsonValue(m_default_country));
    }
    if (m_delivery_address.isSet()) {
        obj.insert(QString("deliveryAddress"), ::OpenAPI::toJsonValue(m_delivery_address));
    }
    if (m_delivery_contact.isSet()) {
        obj.insert(QString("deliveryContact"), ::OpenAPI::toJsonValue(m_delivery_contact));
    }
    if (m_file_tax_by_branches_isSet) {
        obj.insert(QString("fileTaxByBranches"), ::OpenAPI::toJsonValue(m_file_tax_by_branches));
    }
    if (m_industry_code.isSet()) {
        obj.insert(QString("industryCode"), ::OpenAPI::toJsonValue(m_industry_code));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_ledger.isSet()) {
        obj.insert(QString("ledger"), ::OpenAPI::toJsonValue(m_ledger));
    }
    if (m_main_address.isSet()) {
        obj.insert(QString("mainAddress"), ::OpenAPI::toJsonValue(m_main_address));
    }
    if (m_main_contact.isSet()) {
        obj.insert(QString("mainContact"), ::OpenAPI::toJsonValue(m_main_contact));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_organization_cd_isSet) {
        obj.insert(QString("organizationCd"), ::OpenAPI::toJsonValue(m_organization_cd));
    }
    if (m_organization_type_isSet) {
        obj.insert(QString("organizationType"), ::OpenAPI::toJsonValue(m_organization_type));
    }
    if (m_vat_registration_id_isSet) {
        obj.insert(QString("vatRegistrationId"), ::OpenAPI::toJsonValue(m_vat_registration_id));
    }
    if (m_vat_zone.isSet()) {
        obj.insert(QString("vatZone"), ::OpenAPI::toJsonValue(m_vat_zone));
    }
    return obj;
}

OAIBankSettingsInExtendedOrganizationDto OAIExtendedOrganizationDto::getBankSettings() const {
    return m_bank_settings;
}
void OAIExtendedOrganizationDto::setBankSettings(const OAIBankSettingsInExtendedOrganizationDto &bank_settings) {
    m_bank_settings = bank_settings;
    m_bank_settings_isSet = true;
}

bool OAIExtendedOrganizationDto::is_bank_settings_Set() const{
    return m_bank_settings_isSet;
}

bool OAIExtendedOrganizationDto::is_bank_settings_Valid() const{
    return m_bank_settings_isValid;
}

QString OAIExtendedOrganizationDto::getBaseCurrency() const {
    return m_base_currency;
}
void OAIExtendedOrganizationDto::setBaseCurrency(const QString &base_currency) {
    m_base_currency = base_currency;
    m_base_currency_isSet = true;
}

bool OAIExtendedOrganizationDto::is_base_currency_Set() const{
    return m_base_currency_isSet;
}

bool OAIExtendedOrganizationDto::is_base_currency_Valid() const{
    return m_base_currency_isValid;
}

QList<OAIBranchNumberDto> OAIExtendedOrganizationDto::getBranches() const {
    return m_branches;
}
void OAIExtendedOrganizationDto::setBranches(const QList<OAIBranchNumberDto> &branches) {
    m_branches = branches;
    m_branches_isSet = true;
}

bool OAIExtendedOrganizationDto::is_branches_Set() const{
    return m_branches_isSet;
}

bool OAIExtendedOrganizationDto::is_branches_Valid() const{
    return m_branches_isValid;
}

QString OAIExtendedOrganizationDto::getCorporateId() const {
    return m_corporate_id;
}
void OAIExtendedOrganizationDto::setCorporateId(const QString &corporate_id) {
    m_corporate_id = corporate_id;
    m_corporate_id_isSet = true;
}

bool OAIExtendedOrganizationDto::is_corporate_id_Set() const{
    return m_corporate_id_isSet;
}

bool OAIExtendedOrganizationDto::is_corporate_id_Valid() const{
    return m_corporate_id_isValid;
}

OAICurrencyInExtendedOrganizationDto OAIExtendedOrganizationDto::getCurrency() const {
    return m_currency;
}
void OAIExtendedOrganizationDto::setCurrency(const OAICurrencyInExtendedOrganizationDto &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIExtendedOrganizationDto::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIExtendedOrganizationDto::is_currency_Valid() const{
    return m_currency_isValid;
}

OAIDefaultCountryInExtendedOrganizationDto OAIExtendedOrganizationDto::getDefaultCountry() const {
    return m_default_country;
}
void OAIExtendedOrganizationDto::setDefaultCountry(const OAIDefaultCountryInExtendedOrganizationDto &default_country) {
    m_default_country = default_country;
    m_default_country_isSet = true;
}

bool OAIExtendedOrganizationDto::is_default_country_Set() const{
    return m_default_country_isSet;
}

bool OAIExtendedOrganizationDto::is_default_country_Valid() const{
    return m_default_country_isValid;
}

OAIDeliveryAddressInExtendedOrganizationDto OAIExtendedOrganizationDto::getDeliveryAddress() const {
    return m_delivery_address;
}
void OAIExtendedOrganizationDto::setDeliveryAddress(const OAIDeliveryAddressInExtendedOrganizationDto &delivery_address) {
    m_delivery_address = delivery_address;
    m_delivery_address_isSet = true;
}

bool OAIExtendedOrganizationDto::is_delivery_address_Set() const{
    return m_delivery_address_isSet;
}

bool OAIExtendedOrganizationDto::is_delivery_address_Valid() const{
    return m_delivery_address_isValid;
}

OAIDeliveryContactInExtendedOrganizationDto OAIExtendedOrganizationDto::getDeliveryContact() const {
    return m_delivery_contact;
}
void OAIExtendedOrganizationDto::setDeliveryContact(const OAIDeliveryContactInExtendedOrganizationDto &delivery_contact) {
    m_delivery_contact = delivery_contact;
    m_delivery_contact_isSet = true;
}

bool OAIExtendedOrganizationDto::is_delivery_contact_Set() const{
    return m_delivery_contact_isSet;
}

bool OAIExtendedOrganizationDto::is_delivery_contact_Valid() const{
    return m_delivery_contact_isValid;
}

bool OAIExtendedOrganizationDto::isFileTaxByBranches() const {
    return m_file_tax_by_branches;
}
void OAIExtendedOrganizationDto::setFileTaxByBranches(const bool &file_tax_by_branches) {
    m_file_tax_by_branches = file_tax_by_branches;
    m_file_tax_by_branches_isSet = true;
}

bool OAIExtendedOrganizationDto::is_file_tax_by_branches_Set() const{
    return m_file_tax_by_branches_isSet;
}

bool OAIExtendedOrganizationDto::is_file_tax_by_branches_Valid() const{
    return m_file_tax_by_branches_isValid;
}

OAIIndustryCodeInExtendedOrganizationDto OAIExtendedOrganizationDto::getIndustryCode() const {
    return m_industry_code;
}
void OAIExtendedOrganizationDto::setIndustryCode(const OAIIndustryCodeInExtendedOrganizationDto &industry_code) {
    m_industry_code = industry_code;
    m_industry_code_isSet = true;
}

bool OAIExtendedOrganizationDto::is_industry_code_Set() const{
    return m_industry_code_isSet;
}

bool OAIExtendedOrganizationDto::is_industry_code_Valid() const{
    return m_industry_code_isValid;
}

QDateTime OAIExtendedOrganizationDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIExtendedOrganizationDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIExtendedOrganizationDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIExtendedOrganizationDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

OAILedgerInExtendedOrganizationDto OAIExtendedOrganizationDto::getLedger() const {
    return m_ledger;
}
void OAIExtendedOrganizationDto::setLedger(const OAILedgerInExtendedOrganizationDto &ledger) {
    m_ledger = ledger;
    m_ledger_isSet = true;
}

bool OAIExtendedOrganizationDto::is_ledger_Set() const{
    return m_ledger_isSet;
}

bool OAIExtendedOrganizationDto::is_ledger_Valid() const{
    return m_ledger_isValid;
}

OAIMainAddressInExtendedOrganizationDto OAIExtendedOrganizationDto::getMainAddress() const {
    return m_main_address;
}
void OAIExtendedOrganizationDto::setMainAddress(const OAIMainAddressInExtendedOrganizationDto &main_address) {
    m_main_address = main_address;
    m_main_address_isSet = true;
}

bool OAIExtendedOrganizationDto::is_main_address_Set() const{
    return m_main_address_isSet;
}

bool OAIExtendedOrganizationDto::is_main_address_Valid() const{
    return m_main_address_isValid;
}

OAIMainContactInExtendedOrganizationDto OAIExtendedOrganizationDto::getMainContact() const {
    return m_main_contact;
}
void OAIExtendedOrganizationDto::setMainContact(const OAIMainContactInExtendedOrganizationDto &main_contact) {
    m_main_contact = main_contact;
    m_main_contact_isSet = true;
}

bool OAIExtendedOrganizationDto::is_main_contact_Set() const{
    return m_main_contact_isSet;
}

bool OAIExtendedOrganizationDto::is_main_contact_Valid() const{
    return m_main_contact_isValid;
}

QString OAIExtendedOrganizationDto::getName() const {
    return m_name;
}
void OAIExtendedOrganizationDto::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIExtendedOrganizationDto::is_name_Set() const{
    return m_name_isSet;
}

bool OAIExtendedOrganizationDto::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIExtendedOrganizationDto::getOrganizationCd() const {
    return m_organization_cd;
}
void OAIExtendedOrganizationDto::setOrganizationCd(const QString &organization_cd) {
    m_organization_cd = organization_cd;
    m_organization_cd_isSet = true;
}

bool OAIExtendedOrganizationDto::is_organization_cd_Set() const{
    return m_organization_cd_isSet;
}

bool OAIExtendedOrganizationDto::is_organization_cd_Valid() const{
    return m_organization_cd_isValid;
}

QString OAIExtendedOrganizationDto::getOrganizationType() const {
    return m_organization_type;
}
void OAIExtendedOrganizationDto::setOrganizationType(const QString &organization_type) {
    m_organization_type = organization_type;
    m_organization_type_isSet = true;
}

bool OAIExtendedOrganizationDto::is_organization_type_Set() const{
    return m_organization_type_isSet;
}

bool OAIExtendedOrganizationDto::is_organization_type_Valid() const{
    return m_organization_type_isValid;
}

QString OAIExtendedOrganizationDto::getVatRegistrationId() const {
    return m_vat_registration_id;
}
void OAIExtendedOrganizationDto::setVatRegistrationId(const QString &vat_registration_id) {
    m_vat_registration_id = vat_registration_id;
    m_vat_registration_id_isSet = true;
}

bool OAIExtendedOrganizationDto::is_vat_registration_id_Set() const{
    return m_vat_registration_id_isSet;
}

bool OAIExtendedOrganizationDto::is_vat_registration_id_Valid() const{
    return m_vat_registration_id_isValid;
}

OAIVatZoneInExtendedOrganizationDto OAIExtendedOrganizationDto::getVatZone() const {
    return m_vat_zone;
}
void OAIExtendedOrganizationDto::setVatZone(const OAIVatZoneInExtendedOrganizationDto &vat_zone) {
    m_vat_zone = vat_zone;
    m_vat_zone_isSet = true;
}

bool OAIExtendedOrganizationDto::is_vat_zone_Set() const{
    return m_vat_zone_isSet;
}

bool OAIExtendedOrganizationDto::is_vat_zone_Valid() const{
    return m_vat_zone_isValid;
}

bool OAIExtendedOrganizationDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_settings.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branches.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_country.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_file_tax_by_branches_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_industry_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ledger.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_cd_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_registration_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_zone.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIExtendedOrganizationDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
