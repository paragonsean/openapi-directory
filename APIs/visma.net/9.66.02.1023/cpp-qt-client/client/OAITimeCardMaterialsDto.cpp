/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeCardMaterialsDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeCardMaterialsDto::OAITimeCardMaterialsDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeCardMaterialsDto::OAITimeCardMaterialsDto() {
    this->initializeModel();
}

OAITimeCardMaterialsDto::~OAITimeCardMaterialsDto() {}

void OAITimeCardMaterialsDto::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_fri_isSet = false;
    m_fri_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_line_number_isSet = false;
    m_line_number_isValid = false;

    m_mon_isSet = false;
    m_mon_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_project_task_isSet = false;
    m_project_task_isValid = false;

    m_sat_isSet = false;
    m_sat_isValid = false;

    m_sun_isSet = false;
    m_sun_isValid = false;

    m_thu_isSet = false;
    m_thu_isValid = false;

    m_total_qty_isSet = false;
    m_total_qty_isValid = false;

    m_tue_isSet = false;
    m_tue_isValid = false;

    m_uo_m_isSet = false;
    m_uo_m_isValid = false;

    m_wed_isSet = false;
    m_wed_isValid = false;
}

void OAITimeCardMaterialsDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeCardMaterialsDto::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_fri_isValid = ::OpenAPI::fromJsonValue(m_fri, json[QString("fri")]);
    m_fri_isSet = !json[QString("fri")].isNull() && m_fri_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("itemId")]);
    m_item_id_isSet = !json[QString("itemId")].isNull() && m_item_id_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_line_number_isValid = ::OpenAPI::fromJsonValue(m_line_number, json[QString("lineNumber")]);
    m_line_number_isSet = !json[QString("lineNumber")].isNull() && m_line_number_isValid;

    m_mon_isValid = ::OpenAPI::fromJsonValue(m_mon, json[QString("mon")]);
    m_mon_isSet = !json[QString("mon")].isNull() && m_mon_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_project_task_isValid = ::OpenAPI::fromJsonValue(m_project_task, json[QString("projectTask")]);
    m_project_task_isSet = !json[QString("projectTask")].isNull() && m_project_task_isValid;

    m_sat_isValid = ::OpenAPI::fromJsonValue(m_sat, json[QString("sat")]);
    m_sat_isSet = !json[QString("sat")].isNull() && m_sat_isValid;

    m_sun_isValid = ::OpenAPI::fromJsonValue(m_sun, json[QString("sun")]);
    m_sun_isSet = !json[QString("sun")].isNull() && m_sun_isValid;

    m_thu_isValid = ::OpenAPI::fromJsonValue(m_thu, json[QString("thu")]);
    m_thu_isSet = !json[QString("thu")].isNull() && m_thu_isValid;

    m_total_qty_isValid = ::OpenAPI::fromJsonValue(m_total_qty, json[QString("totalQty")]);
    m_total_qty_isSet = !json[QString("totalQty")].isNull() && m_total_qty_isValid;

    m_tue_isValid = ::OpenAPI::fromJsonValue(m_tue, json[QString("tue")]);
    m_tue_isSet = !json[QString("tue")].isNull() && m_tue_isValid;

    m_uo_m_isValid = ::OpenAPI::fromJsonValue(m_uo_m, json[QString("uoM")]);
    m_uo_m_isSet = !json[QString("uoM")].isNull() && m_uo_m_isValid;

    m_wed_isValid = ::OpenAPI::fromJsonValue(m_wed, json[QString("wed")]);
    m_wed_isSet = !json[QString("wed")].isNull() && m_wed_isValid;
}

QString OAITimeCardMaterialsDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeCardMaterialsDto::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_fri_isSet) {
        obj.insert(QString("fri"), ::OpenAPI::toJsonValue(m_fri));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("itemId"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_line_number_isSet) {
        obj.insert(QString("lineNumber"), ::OpenAPI::toJsonValue(m_line_number));
    }
    if (m_mon_isSet) {
        obj.insert(QString("mon"), ::OpenAPI::toJsonValue(m_mon));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_project_task.isSet()) {
        obj.insert(QString("projectTask"), ::OpenAPI::toJsonValue(m_project_task));
    }
    if (m_sat_isSet) {
        obj.insert(QString("sat"), ::OpenAPI::toJsonValue(m_sat));
    }
    if (m_sun_isSet) {
        obj.insert(QString("sun"), ::OpenAPI::toJsonValue(m_sun));
    }
    if (m_thu_isSet) {
        obj.insert(QString("thu"), ::OpenAPI::toJsonValue(m_thu));
    }
    if (m_total_qty_isSet) {
        obj.insert(QString("totalQty"), ::OpenAPI::toJsonValue(m_total_qty));
    }
    if (m_tue_isSet) {
        obj.insert(QString("tue"), ::OpenAPI::toJsonValue(m_tue));
    }
    if (m_uo_m_isSet) {
        obj.insert(QString("uoM"), ::OpenAPI::toJsonValue(m_uo_m));
    }
    if (m_wed_isSet) {
        obj.insert(QString("wed"), ::OpenAPI::toJsonValue(m_wed));
    }
    return obj;
}

QString OAITimeCardMaterialsDto::getDescription() const {
    return m_description;
}
void OAITimeCardMaterialsDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITimeCardMaterialsDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAITimeCardMaterialsDto::is_description_Valid() const{
    return m_description_isValid;
}

double OAITimeCardMaterialsDto::getFri() const {
    return m_fri;
}
void OAITimeCardMaterialsDto::setFri(const double &fri) {
    m_fri = fri;
    m_fri_isSet = true;
}

bool OAITimeCardMaterialsDto::is_fri_Set() const{
    return m_fri_isSet;
}

bool OAITimeCardMaterialsDto::is_fri_Valid() const{
    return m_fri_isValid;
}

QString OAITimeCardMaterialsDto::getItemId() const {
    return m_item_id;
}
void OAITimeCardMaterialsDto::setItemId(const QString &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAITimeCardMaterialsDto::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAITimeCardMaterialsDto::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QDateTime OAITimeCardMaterialsDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAITimeCardMaterialsDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAITimeCardMaterialsDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAITimeCardMaterialsDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

qint32 OAITimeCardMaterialsDto::getLineNumber() const {
    return m_line_number;
}
void OAITimeCardMaterialsDto::setLineNumber(const qint32 &line_number) {
    m_line_number = line_number;
    m_line_number_isSet = true;
}

bool OAITimeCardMaterialsDto::is_line_number_Set() const{
    return m_line_number_isSet;
}

bool OAITimeCardMaterialsDto::is_line_number_Valid() const{
    return m_line_number_isValid;
}

double OAITimeCardMaterialsDto::getMon() const {
    return m_mon;
}
void OAITimeCardMaterialsDto::setMon(const double &mon) {
    m_mon = mon;
    m_mon_isSet = true;
}

bool OAITimeCardMaterialsDto::is_mon_Set() const{
    return m_mon_isSet;
}

bool OAITimeCardMaterialsDto::is_mon_Valid() const{
    return m_mon_isValid;
}

OAIProjectInTimeCardMaterialsDto OAITimeCardMaterialsDto::getProject() const {
    return m_project;
}
void OAITimeCardMaterialsDto::setProject(const OAIProjectInTimeCardMaterialsDto &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAITimeCardMaterialsDto::is_project_Set() const{
    return m_project_isSet;
}

bool OAITimeCardMaterialsDto::is_project_Valid() const{
    return m_project_isValid;
}

OAIProjectTaskInTimeCardMaterialsDto OAITimeCardMaterialsDto::getProjectTask() const {
    return m_project_task;
}
void OAITimeCardMaterialsDto::setProjectTask(const OAIProjectTaskInTimeCardMaterialsDto &project_task) {
    m_project_task = project_task;
    m_project_task_isSet = true;
}

bool OAITimeCardMaterialsDto::is_project_task_Set() const{
    return m_project_task_isSet;
}

bool OAITimeCardMaterialsDto::is_project_task_Valid() const{
    return m_project_task_isValid;
}

double OAITimeCardMaterialsDto::getSat() const {
    return m_sat;
}
void OAITimeCardMaterialsDto::setSat(const double &sat) {
    m_sat = sat;
    m_sat_isSet = true;
}

bool OAITimeCardMaterialsDto::is_sat_Set() const{
    return m_sat_isSet;
}

bool OAITimeCardMaterialsDto::is_sat_Valid() const{
    return m_sat_isValid;
}

double OAITimeCardMaterialsDto::getSun() const {
    return m_sun;
}
void OAITimeCardMaterialsDto::setSun(const double &sun) {
    m_sun = sun;
    m_sun_isSet = true;
}

bool OAITimeCardMaterialsDto::is_sun_Set() const{
    return m_sun_isSet;
}

bool OAITimeCardMaterialsDto::is_sun_Valid() const{
    return m_sun_isValid;
}

double OAITimeCardMaterialsDto::getThu() const {
    return m_thu;
}
void OAITimeCardMaterialsDto::setThu(const double &thu) {
    m_thu = thu;
    m_thu_isSet = true;
}

bool OAITimeCardMaterialsDto::is_thu_Set() const{
    return m_thu_isSet;
}

bool OAITimeCardMaterialsDto::is_thu_Valid() const{
    return m_thu_isValid;
}

double OAITimeCardMaterialsDto::getTotalQty() const {
    return m_total_qty;
}
void OAITimeCardMaterialsDto::setTotalQty(const double &total_qty) {
    m_total_qty = total_qty;
    m_total_qty_isSet = true;
}

bool OAITimeCardMaterialsDto::is_total_qty_Set() const{
    return m_total_qty_isSet;
}

bool OAITimeCardMaterialsDto::is_total_qty_Valid() const{
    return m_total_qty_isValid;
}

double OAITimeCardMaterialsDto::getTue() const {
    return m_tue;
}
void OAITimeCardMaterialsDto::setTue(const double &tue) {
    m_tue = tue;
    m_tue_isSet = true;
}

bool OAITimeCardMaterialsDto::is_tue_Set() const{
    return m_tue_isSet;
}

bool OAITimeCardMaterialsDto::is_tue_Valid() const{
    return m_tue_isValid;
}

QString OAITimeCardMaterialsDto::getUoM() const {
    return m_uo_m;
}
void OAITimeCardMaterialsDto::setUoM(const QString &uo_m) {
    m_uo_m = uo_m;
    m_uo_m_isSet = true;
}

bool OAITimeCardMaterialsDto::is_uo_m_Set() const{
    return m_uo_m_isSet;
}

bool OAITimeCardMaterialsDto::is_uo_m_Valid() const{
    return m_uo_m_isValid;
}

double OAITimeCardMaterialsDto::getWed() const {
    return m_wed;
}
void OAITimeCardMaterialsDto::setWed(const double &wed) {
    m_wed = wed;
    m_wed_isSet = true;
}

bool OAITimeCardMaterialsDto::is_wed_Set() const{
    return m_wed_isSet;
}

bool OAITimeCardMaterialsDto::is_wed_Valid() const{
    return m_wed_isValid;
}

bool OAITimeCardMaterialsDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_task.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sat_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sun_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_thu_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tue_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uo_m_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeCardMaterialsDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
