/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISalesOrderBasicDto.h
 *
 * This class represents a SOOrder in SOOrderController. Used by getting data.
 */

#ifndef OAISalesOrderBasicDto_H
#define OAISalesOrderBasicDto_H

#include <QJsonObject>

#include "OAIAttachmentDto.h"
#include "OAIBranchNumberInSalesOrderBasicDto.h"
#include "OAICustomerInSalesOrderBasicDto.h"
#include "OAILocationInSalesOrderBasicDto.h"
#include "OAIMetadataDto.h"
#include "OAISalesOrderDocumentLineDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAttachmentDto;
class OAIBranchNumberInSalesOrderBasicDto;
class OAICustomerInSalesOrderBasicDto;
class OAISalesOrderDocumentLineDto;
class OAILocationInSalesOrderBasicDto;
class OAIMetadataDto;

class OAISalesOrderBasicDto : public OAIObject {
public:
    OAISalesOrderBasicDto();
    OAISalesOrderBasicDto(QString json);
    ~OAISalesOrderBasicDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIAttachmentDto> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentDto> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    OAIBranchNumberInSalesOrderBasicDto getBranchNumber() const;
    void setBranchNumber(const OAIBranchNumberInSalesOrderBasicDto &branch_number);
    bool is_branch_number_Set() const;
    bool is_branch_number_Valid() const;

    qint32 getContactId() const;
    void setContactId(const qint32 &contact_id);
    bool is_contact_id_Set() const;
    bool is_contact_id_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAICustomerInSalesOrderBasicDto getCustomer() const;
    void setCustomer(const OAICustomerInSalesOrderBasicDto &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QString getCustomerOrder() const;
    void setCustomerOrder(const QString &customer_order);
    bool is_customer_order_Set() const;
    bool is_customer_order_Valid() const;

    QString getCustomerRefNo() const;
    void setCustomerRefNo(const QString &customer_ref_no);
    bool is_customer_ref_no_Set() const;
    bool is_customer_ref_no_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getDiscountTotal() const;
    void setDiscountTotal(const double &discount_total);
    bool is_discount_total_Set() const;
    bool is_discount_total_Valid() const;

    double getDiscountTotalInBaseCurrency() const;
    void setDiscountTotalInBaseCurrency(const double &discount_total_in_base_currency);
    bool is_discount_total_in_base_currency_Set() const;
    bool is_discount_total_in_base_currency_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    double getExchangeRate() const;
    void setExchangeRate(const double &exchange_rate);
    bool is_exchange_rate_Set() const;
    bool is_exchange_rate_Valid() const;

    bool isHold() const;
    void setHold(const bool &hold);
    bool is_hold_Set() const;
    bool is_hold_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QList<OAISalesOrderDocumentLineDto> getLines() const;
    void setLines(const QList<OAISalesOrderDocumentLineDto> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    OAILocationInSalesOrderBasicDto getLocation() const;
    void setLocation(const OAILocationInSalesOrderBasicDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getOrderNo() const;
    void setOrderNo(const QString &order_no);
    bool is_order_no_Set() const;
    bool is_order_no_Valid() const;

    double getOrderTotal() const;
    void setOrderTotal(const double &order_total);
    bool is_order_total_Set() const;
    bool is_order_total_Valid() const;

    double getOrderTotalInBaseCurrency() const;
    void setOrderTotalInBaseCurrency(const double &order_total_in_base_currency);
    bool is_order_total_in_base_currency_Set() const;
    bool is_order_total_in_base_currency_Valid() const;

    QString getOrderType() const;
    void setOrderType(const QString &order_type);
    bool is_order_type_Set() const;
    bool is_order_type_Valid() const;

    QDateTime getRequestOn() const;
    void setRequestOn(const QDateTime &request_on);
    bool is_request_on_Set() const;
    bool is_request_on_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getTaxTotal() const;
    void setTaxTotal(const double &tax_total);
    bool is_tax_total_Set() const;
    bool is_tax_total_Valid() const;

    double getTaxTotalInBaseCurrency() const;
    void setTaxTotalInBaseCurrency(const double &tax_total_in_base_currency);
    bool is_tax_total_in_base_currency_Set() const;
    bool is_tax_total_in_base_currency_Valid() const;

    double getVatExemptTotal() const;
    void setVatExemptTotal(const double &vat_exempt_total);
    bool is_vat_exempt_total_Set() const;
    bool is_vat_exempt_total_Valid() const;

    double getVatExemptTotalInBaseCurrency() const;
    void setVatExemptTotalInBaseCurrency(const double &vat_exempt_total_in_base_currency);
    bool is_vat_exempt_total_in_base_currency_Set() const;
    bool is_vat_exempt_total_in_base_currency_Valid() const;

    double getVatTaxableTotal() const;
    void setVatTaxableTotal(const double &vat_taxable_total);
    bool is_vat_taxable_total_Set() const;
    bool is_vat_taxable_total_Valid() const;

    double getVatTaxableTotalInBaseCurrency() const;
    void setVatTaxableTotalInBaseCurrency(const double &vat_taxable_total_in_base_currency);
    bool is_vat_taxable_total_in_base_currency_Set() const;
    bool is_vat_taxable_total_in_base_currency_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIAttachmentDto> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    OAIBranchNumberInSalesOrderBasicDto m_branch_number;
    bool m_branch_number_isSet;
    bool m_branch_number_isValid;

    qint32 m_contact_id;
    bool m_contact_id_isSet;
    bool m_contact_id_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAICustomerInSalesOrderBasicDto m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QString m_customer_order;
    bool m_customer_order_isSet;
    bool m_customer_order_isValid;

    QString m_customer_ref_no;
    bool m_customer_ref_no_isSet;
    bool m_customer_ref_no_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_discount_total;
    bool m_discount_total_isSet;
    bool m_discount_total_isValid;

    double m_discount_total_in_base_currency;
    bool m_discount_total_in_base_currency_isSet;
    bool m_discount_total_in_base_currency_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    double m_exchange_rate;
    bool m_exchange_rate_isSet;
    bool m_exchange_rate_isValid;

    bool m_hold;
    bool m_hold_isSet;
    bool m_hold_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QList<OAISalesOrderDocumentLineDto> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    OAILocationInSalesOrderBasicDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_order_no;
    bool m_order_no_isSet;
    bool m_order_no_isValid;

    double m_order_total;
    bool m_order_total_isSet;
    bool m_order_total_isValid;

    double m_order_total_in_base_currency;
    bool m_order_total_in_base_currency_isSet;
    bool m_order_total_in_base_currency_isValid;

    QString m_order_type;
    bool m_order_type_isSet;
    bool m_order_type_isValid;

    QDateTime m_request_on;
    bool m_request_on_isSet;
    bool m_request_on_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_tax_total;
    bool m_tax_total_isSet;
    bool m_tax_total_isValid;

    double m_tax_total_in_base_currency;
    bool m_tax_total_in_base_currency_isSet;
    bool m_tax_total_in_base_currency_isValid;

    double m_vat_exempt_total;
    bool m_vat_exempt_total_isSet;
    bool m_vat_exempt_total_isValid;

    double m_vat_exempt_total_in_base_currency;
    bool m_vat_exempt_total_in_base_currency_isSet;
    bool m_vat_exempt_total_in_base_currency_isValid;

    double m_vat_taxable_total;
    bool m_vat_taxable_total_isSet;
    bool m_vat_taxable_total_isValid;

    double m_vat_taxable_total_in_base_currency;
    bool m_vat_taxable_total_in_base_currency_isSet;
    bool m_vat_taxable_total_in_base_currency_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISalesOrderBasicDto)

#endif // OAISalesOrderBasicDto_H
