/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEmployeeContactUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEmployeeContactUpdateDto::OAIEmployeeContactUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEmployeeContactUpdateDto::OAIEmployeeContactUpdateDto() {
    this->initializeModel();
}

OAIEmployeeContactUpdateDto::~OAIEmployeeContactUpdateDto() {}

void OAIEmployeeContactUpdateDto::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_fax_isSet = false;
    m_fax_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_phone1_isSet = false;
    m_phone1_isValid = false;

    m_phone2_isSet = false;
    m_phone2_isValid = false;

    m_phone3_isSet = false;
    m_phone3_isValid = false;
}

void OAIEmployeeContactUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEmployeeContactUpdateDto::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_fax_isValid = ::OpenAPI::fromJsonValue(m_fax, json[QString("fax")]);
    m_fax_isSet = !json[QString("fax")].isNull() && m_fax_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("middleName")]);
    m_middle_name_isSet = !json[QString("middleName")].isNull() && m_middle_name_isValid;

    m_phone1_isValid = ::OpenAPI::fromJsonValue(m_phone1, json[QString("phone1")]);
    m_phone1_isSet = !json[QString("phone1")].isNull() && m_phone1_isValid;

    m_phone2_isValid = ::OpenAPI::fromJsonValue(m_phone2, json[QString("phone2")]);
    m_phone2_isSet = !json[QString("phone2")].isNull() && m_phone2_isValid;

    m_phone3_isValid = ::OpenAPI::fromJsonValue(m_phone3, json[QString("phone3")]);
    m_phone3_isSet = !json[QString("phone3")].isNull() && m_phone3_isValid;
}

QString OAIEmployeeContactUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEmployeeContactUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_email.isSet()) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_fax.isSet()) {
        obj.insert(QString("fax"), ::OpenAPI::toJsonValue(m_fax));
    }
    if (m_first_name.isSet()) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name.isSet()) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_middle_name.isSet()) {
        obj.insert(QString("middleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_phone1.isSet()) {
        obj.insert(QString("phone1"), ::OpenAPI::toJsonValue(m_phone1));
    }
    if (m_phone2.isSet()) {
        obj.insert(QString("phone2"), ::OpenAPI::toJsonValue(m_phone2));
    }
    if (m_phone3.isSet()) {
        obj.insert(QString("phone3"), ::OpenAPI::toJsonValue(m_phone3));
    }
    return obj;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getEmail() const {
    return m_email;
}
void OAIEmployeeContactUpdateDto::setEmail(const OAIDtoValueOfString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_email_Set() const{
    return m_email_isSet;
}

bool OAIEmployeeContactUpdateDto::is_email_Valid() const{
    return m_email_isValid;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getFax() const {
    return m_fax;
}
void OAIEmployeeContactUpdateDto::setFax(const OAIDtoValueOfString &fax) {
    m_fax = fax;
    m_fax_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_fax_Set() const{
    return m_fax_isSet;
}

bool OAIEmployeeContactUpdateDto::is_fax_Valid() const{
    return m_fax_isValid;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getFirstName() const {
    return m_first_name;
}
void OAIEmployeeContactUpdateDto::setFirstName(const OAIDtoValueOfString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIEmployeeContactUpdateDto::is_first_name_Valid() const{
    return m_first_name_isValid;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getLastName() const {
    return m_last_name;
}
void OAIEmployeeContactUpdateDto::setLastName(const OAIDtoValueOfString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIEmployeeContactUpdateDto::is_last_name_Valid() const{
    return m_last_name_isValid;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getMiddleName() const {
    return m_middle_name;
}
void OAIEmployeeContactUpdateDto::setMiddleName(const OAIDtoValueOfString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAIEmployeeContactUpdateDto::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getPhone1() const {
    return m_phone1;
}
void OAIEmployeeContactUpdateDto::setPhone1(const OAIDtoValueOfString &phone1) {
    m_phone1 = phone1;
    m_phone1_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_phone1_Set() const{
    return m_phone1_isSet;
}

bool OAIEmployeeContactUpdateDto::is_phone1_Valid() const{
    return m_phone1_isValid;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getPhone2() const {
    return m_phone2;
}
void OAIEmployeeContactUpdateDto::setPhone2(const OAIDtoValueOfString &phone2) {
    m_phone2 = phone2;
    m_phone2_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_phone2_Set() const{
    return m_phone2_isSet;
}

bool OAIEmployeeContactUpdateDto::is_phone2_Valid() const{
    return m_phone2_isValid;
}

OAIDtoValueOfString OAIEmployeeContactUpdateDto::getPhone3() const {
    return m_phone3;
}
void OAIEmployeeContactUpdateDto::setPhone3(const OAIDtoValueOfString &phone3) {
    m_phone3 = phone3;
    m_phone3_isSet = true;
}

bool OAIEmployeeContactUpdateDto::is_phone3_Set() const{
    return m_phone3_isSet;
}

bool OAIEmployeeContactUpdateDto::is_phone3_Valid() const{
    return m_phone3_isValid;
}

bool OAIEmployeeContactUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fax.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone3.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEmployeeContactUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_last_name_isValid && true;
}

} // namespace OpenAPI
