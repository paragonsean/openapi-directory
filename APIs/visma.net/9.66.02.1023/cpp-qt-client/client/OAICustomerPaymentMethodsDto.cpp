/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerPaymentMethodsDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerPaymentMethodsDto::OAICustomerPaymentMethodsDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerPaymentMethodsDto::OAICustomerPaymentMethodsDto() {
    this->initializeModel();
}

OAICustomerPaymentMethodsDto::~OAICustomerPaymentMethodsDto() {}

void OAICustomerPaymentMethodsDto::initializeModel() {

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_payment_methods_isSet = false;
    m_payment_methods_isValid = false;
}

void OAICustomerPaymentMethodsDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerPaymentMethodsDto::fromJsonObject(QJsonObject json) {

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customerId")]);
    m_customer_id_isSet = !json[QString("customerId")].isNull() && m_customer_id_isValid;

    m_payment_methods_isValid = ::OpenAPI::fromJsonValue(m_payment_methods, json[QString("paymentMethods")]);
    m_payment_methods_isSet = !json[QString("paymentMethods")].isNull() && m_payment_methods_isValid;
}

QString OAICustomerPaymentMethodsDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerPaymentMethodsDto::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_id_isSet) {
        obj.insert(QString("customerId"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_payment_methods.size() > 0) {
        obj.insert(QString("paymentMethods"), ::OpenAPI::toJsonValue(m_payment_methods));
    }
    return obj;
}

QString OAICustomerPaymentMethodsDto::getCustomerId() const {
    return m_customer_id;
}
void OAICustomerPaymentMethodsDto::setCustomerId(const QString &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAICustomerPaymentMethodsDto::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAICustomerPaymentMethodsDto::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

QList<OAICustomerPaymentMethodDto> OAICustomerPaymentMethodsDto::getPaymentMethods() const {
    return m_payment_methods;
}
void OAICustomerPaymentMethodsDto::setPaymentMethods(const QList<OAICustomerPaymentMethodDto> &payment_methods) {
    m_payment_methods = payment_methods;
    m_payment_methods_isSet = true;
}

bool OAICustomerPaymentMethodsDto::is_payment_methods_Set() const{
    return m_payment_methods_isSet;
}

bool OAICustomerPaymentMethodsDto::is_payment_methods_Valid() const{
    return m_payment_methods_isValid;
}

bool OAICustomerPaymentMethodsDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerPaymentMethodsDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
