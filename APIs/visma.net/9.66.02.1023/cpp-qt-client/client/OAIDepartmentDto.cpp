/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDepartmentDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDepartmentDto::OAIDepartmentDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDepartmentDto::OAIDepartmentDto() {
    this->initializeModel();
}

OAIDepartmentDto::~OAIDepartmentDto() {}

void OAIDepartmentDto::initializeModel() {

    m_department_id_isSet = false;
    m_department_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_expense_account_isSet = false;
    m_expense_account_isValid = false;

    m_expense_subaccount_isSet = false;
    m_expense_subaccount_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_public_id_isSet = false;
    m_public_id_isValid = false;
}

void OAIDepartmentDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDepartmentDto::fromJsonObject(QJsonObject json) {

    m_department_id_isValid = ::OpenAPI::fromJsonValue(m_department_id, json[QString("departmentId")]);
    m_department_id_isSet = !json[QString("departmentId")].isNull() && m_department_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_expense_account_isValid = ::OpenAPI::fromJsonValue(m_expense_account, json[QString("expenseAccount")]);
    m_expense_account_isSet = !json[QString("expenseAccount")].isNull() && m_expense_account_isValid;

    m_expense_subaccount_isValid = ::OpenAPI::fromJsonValue(m_expense_subaccount, json[QString("expenseSubaccount")]);
    m_expense_subaccount_isSet = !json[QString("expenseSubaccount")].isNull() && m_expense_subaccount_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_public_id_isValid = ::OpenAPI::fromJsonValue(m_public_id, json[QString("publicId")]);
    m_public_id_isSet = !json[QString("publicId")].isNull() && m_public_id_isValid;
}

QString OAIDepartmentDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDepartmentDto::asJsonObject() const {
    QJsonObject obj;
    if (m_department_id_isSet) {
        obj.insert(QString("departmentId"), ::OpenAPI::toJsonValue(m_department_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_expense_account.isSet()) {
        obj.insert(QString("expenseAccount"), ::OpenAPI::toJsonValue(m_expense_account));
    }
    if (m_expense_subaccount.isSet()) {
        obj.insert(QString("expenseSubaccount"), ::OpenAPI::toJsonValue(m_expense_subaccount));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_public_id_isSet) {
        obj.insert(QString("publicId"), ::OpenAPI::toJsonValue(m_public_id));
    }
    return obj;
}

QString OAIDepartmentDto::getDepartmentId() const {
    return m_department_id;
}
void OAIDepartmentDto::setDepartmentId(const QString &department_id) {
    m_department_id = department_id;
    m_department_id_isSet = true;
}

bool OAIDepartmentDto::is_department_id_Set() const{
    return m_department_id_isSet;
}

bool OAIDepartmentDto::is_department_id_Valid() const{
    return m_department_id_isValid;
}

QString OAIDepartmentDto::getDescription() const {
    return m_description;
}
void OAIDepartmentDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDepartmentDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDepartmentDto::is_description_Valid() const{
    return m_description_isValid;
}

OAIExpenseAccountInDepartmentDto OAIDepartmentDto::getExpenseAccount() const {
    return m_expense_account;
}
void OAIDepartmentDto::setExpenseAccount(const OAIExpenseAccountInDepartmentDto &expense_account) {
    m_expense_account = expense_account;
    m_expense_account_isSet = true;
}

bool OAIDepartmentDto::is_expense_account_Set() const{
    return m_expense_account_isSet;
}

bool OAIDepartmentDto::is_expense_account_Valid() const{
    return m_expense_account_isValid;
}

OAIExpenseSubaccountInDepartmentDto OAIDepartmentDto::getExpenseSubaccount() const {
    return m_expense_subaccount;
}
void OAIDepartmentDto::setExpenseSubaccount(const OAIExpenseSubaccountInDepartmentDto &expense_subaccount) {
    m_expense_subaccount = expense_subaccount;
    m_expense_subaccount_isSet = true;
}

bool OAIDepartmentDto::is_expense_subaccount_Set() const{
    return m_expense_subaccount_isSet;
}

bool OAIDepartmentDto::is_expense_subaccount_Valid() const{
    return m_expense_subaccount_isValid;
}

QDateTime OAIDepartmentDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIDepartmentDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIDepartmentDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIDepartmentDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIDepartmentDto::getPublicId() const {
    return m_public_id;
}
void OAIDepartmentDto::setPublicId(const QString &public_id) {
    m_public_id = public_id;
    m_public_id_isSet = true;
}

bool OAIDepartmentDto::is_public_id_Set() const{
    return m_public_id_isSet;
}

bool OAIDepartmentDto::is_public_id_Valid() const{
    return m_public_id_isValid;
}

bool OAIDepartmentDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_department_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expense_account.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_expense_subaccount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDepartmentDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
