/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITimeCardMaterialsUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITimeCardMaterialsUpdateDto::OAITimeCardMaterialsUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITimeCardMaterialsUpdateDto::OAITimeCardMaterialsUpdateDto() {
    this->initializeModel();
}

OAITimeCardMaterialsUpdateDto::~OAITimeCardMaterialsUpdateDto() {}

void OAITimeCardMaterialsUpdateDto::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_fri_isSet = false;
    m_fri_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_line_number_isSet = false;
    m_line_number_isValid = false;

    m_mon_isSet = false;
    m_mon_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_project_task_isSet = false;
    m_project_task_isValid = false;

    m_sat_isSet = false;
    m_sat_isValid = false;

    m_sun_isSet = false;
    m_sun_isValid = false;

    m_thu_isSet = false;
    m_thu_isValid = false;

    m_tue_isSet = false;
    m_tue_isValid = false;

    m_uo_m_isSet = false;
    m_uo_m_isValid = false;

    m_wed_isSet = false;
    m_wed_isValid = false;
}

void OAITimeCardMaterialsUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITimeCardMaterialsUpdateDto::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_fri_isValid = ::OpenAPI::fromJsonValue(m_fri, json[QString("fri")]);
    m_fri_isSet = !json[QString("fri")].isNull() && m_fri_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("itemId")]);
    m_item_id_isSet = !json[QString("itemId")].isNull() && m_item_id_isValid;

    m_line_number_isValid = ::OpenAPI::fromJsonValue(m_line_number, json[QString("lineNumber")]);
    m_line_number_isSet = !json[QString("lineNumber")].isNull() && m_line_number_isValid;

    m_mon_isValid = ::OpenAPI::fromJsonValue(m_mon, json[QString("mon")]);
    m_mon_isSet = !json[QString("mon")].isNull() && m_mon_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_project_task_isValid = ::OpenAPI::fromJsonValue(m_project_task, json[QString("projectTask")]);
    m_project_task_isSet = !json[QString("projectTask")].isNull() && m_project_task_isValid;

    m_sat_isValid = ::OpenAPI::fromJsonValue(m_sat, json[QString("sat")]);
    m_sat_isSet = !json[QString("sat")].isNull() && m_sat_isValid;

    m_sun_isValid = ::OpenAPI::fromJsonValue(m_sun, json[QString("sun")]);
    m_sun_isSet = !json[QString("sun")].isNull() && m_sun_isValid;

    m_thu_isValid = ::OpenAPI::fromJsonValue(m_thu, json[QString("thu")]);
    m_thu_isSet = !json[QString("thu")].isNull() && m_thu_isValid;

    m_tue_isValid = ::OpenAPI::fromJsonValue(m_tue, json[QString("tue")]);
    m_tue_isSet = !json[QString("tue")].isNull() && m_tue_isValid;

    m_uo_m_isValid = ::OpenAPI::fromJsonValue(m_uo_m, json[QString("uoM")]);
    m_uo_m_isSet = !json[QString("uoM")].isNull() && m_uo_m_isValid;

    m_wed_isValid = ::OpenAPI::fromJsonValue(m_wed, json[QString("wed")]);
    m_wed_isSet = !json[QString("wed")].isNull() && m_wed_isValid;
}

QString OAITimeCardMaterialsUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITimeCardMaterialsUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_description.isSet()) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_fri.isSet()) {
        obj.insert(QString("fri"), ::OpenAPI::toJsonValue(m_fri));
    }
    if (m_item_id.isSet()) {
        obj.insert(QString("itemId"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_line_number.isSet()) {
        obj.insert(QString("lineNumber"), ::OpenAPI::toJsonValue(m_line_number));
    }
    if (m_mon.isSet()) {
        obj.insert(QString("mon"), ::OpenAPI::toJsonValue(m_mon));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_project_task.isSet()) {
        obj.insert(QString("projectTask"), ::OpenAPI::toJsonValue(m_project_task));
    }
    if (m_sat.isSet()) {
        obj.insert(QString("sat"), ::OpenAPI::toJsonValue(m_sat));
    }
    if (m_sun.isSet()) {
        obj.insert(QString("sun"), ::OpenAPI::toJsonValue(m_sun));
    }
    if (m_thu.isSet()) {
        obj.insert(QString("thu"), ::OpenAPI::toJsonValue(m_thu));
    }
    if (m_tue.isSet()) {
        obj.insert(QString("tue"), ::OpenAPI::toJsonValue(m_tue));
    }
    if (m_uo_m.isSet()) {
        obj.insert(QString("uoM"), ::OpenAPI::toJsonValue(m_uo_m));
    }
    if (m_wed.isSet()) {
        obj.insert(QString("wed"), ::OpenAPI::toJsonValue(m_wed));
    }
    return obj;
}

OAIDescriptionInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getDescription() const {
    return m_description;
}
void OAITimeCardMaterialsUpdateDto::setDescription(const OAIDescriptionInTimeCardMaterialsUpdateDto &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_description_Valid() const{
    return m_description_isValid;
}

OAIFriInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getFri() const {
    return m_fri;
}
void OAITimeCardMaterialsUpdateDto::setFri(const OAIFriInTimeCardMaterialsUpdateDto &fri) {
    m_fri = fri;
    m_fri_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_fri_Set() const{
    return m_fri_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_fri_Valid() const{
    return m_fri_isValid;
}

OAIItemIdInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getItemId() const {
    return m_item_id;
}
void OAITimeCardMaterialsUpdateDto::setItemId(const OAIItemIdInTimeCardMaterialsUpdateDto &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_item_id_Valid() const{
    return m_item_id_isValid;
}

OAIDtoValueOfInt32 OAITimeCardMaterialsUpdateDto::getLineNumber() const {
    return m_line_number;
}
void OAITimeCardMaterialsUpdateDto::setLineNumber(const OAIDtoValueOfInt32 &line_number) {
    m_line_number = line_number;
    m_line_number_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_line_number_Set() const{
    return m_line_number_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_line_number_Valid() const{
    return m_line_number_isValid;
}

OAIMonInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getMon() const {
    return m_mon;
}
void OAITimeCardMaterialsUpdateDto::setMon(const OAIMonInTimeCardMaterialsUpdateDto &mon) {
    m_mon = mon;
    m_mon_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_mon_Set() const{
    return m_mon_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_mon_Valid() const{
    return m_mon_isValid;
}

QString OAITimeCardMaterialsUpdateDto::getOperation() const {
    return m_operation;
}
void OAITimeCardMaterialsUpdateDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_operation_Valid() const{
    return m_operation_isValid;
}

OAIProjectInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getProject() const {
    return m_project;
}
void OAITimeCardMaterialsUpdateDto::setProject(const OAIProjectInTimeCardMaterialsUpdateDto &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_project_Set() const{
    return m_project_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_project_Valid() const{
    return m_project_isValid;
}

OAIProjectTaskInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getProjectTask() const {
    return m_project_task;
}
void OAITimeCardMaterialsUpdateDto::setProjectTask(const OAIProjectTaskInTimeCardMaterialsUpdateDto &project_task) {
    m_project_task = project_task;
    m_project_task_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_project_task_Set() const{
    return m_project_task_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_project_task_Valid() const{
    return m_project_task_isValid;
}

OAISatInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getSat() const {
    return m_sat;
}
void OAITimeCardMaterialsUpdateDto::setSat(const OAISatInTimeCardMaterialsUpdateDto &sat) {
    m_sat = sat;
    m_sat_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_sat_Set() const{
    return m_sat_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_sat_Valid() const{
    return m_sat_isValid;
}

OAISunInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getSun() const {
    return m_sun;
}
void OAITimeCardMaterialsUpdateDto::setSun(const OAISunInTimeCardMaterialsUpdateDto &sun) {
    m_sun = sun;
    m_sun_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_sun_Set() const{
    return m_sun_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_sun_Valid() const{
    return m_sun_isValid;
}

OAIThuInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getThu() const {
    return m_thu;
}
void OAITimeCardMaterialsUpdateDto::setThu(const OAIThuInTimeCardMaterialsUpdateDto &thu) {
    m_thu = thu;
    m_thu_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_thu_Set() const{
    return m_thu_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_thu_Valid() const{
    return m_thu_isValid;
}

OAITueInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getTue() const {
    return m_tue;
}
void OAITimeCardMaterialsUpdateDto::setTue(const OAITueInTimeCardMaterialsUpdateDto &tue) {
    m_tue = tue;
    m_tue_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_tue_Set() const{
    return m_tue_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_tue_Valid() const{
    return m_tue_isValid;
}

OAIUoMInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getUoM() const {
    return m_uo_m;
}
void OAITimeCardMaterialsUpdateDto::setUoM(const OAIUoMInTimeCardMaterialsUpdateDto &uo_m) {
    m_uo_m = uo_m;
    m_uo_m_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_uo_m_Set() const{
    return m_uo_m_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_uo_m_Valid() const{
    return m_uo_m_isValid;
}

OAIWedInTimeCardMaterialsUpdateDto OAITimeCardMaterialsUpdateDto::getWed() const {
    return m_wed;
}
void OAITimeCardMaterialsUpdateDto::setWed(const OAIWedInTimeCardMaterialsUpdateDto &wed) {
    m_wed = wed;
    m_wed_isSet = true;
}

bool OAITimeCardMaterialsUpdateDto::is_wed_Set() const{
    return m_wed_isSet;
}

bool OAITimeCardMaterialsUpdateDto::is_wed_Valid() const{
    return m_wed_isValid;
}

bool OAITimeCardMaterialsUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fri.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_mon.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_task.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sat.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sun.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_thu.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tue.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_uo_m.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_wed.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITimeCardMaterialsUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
