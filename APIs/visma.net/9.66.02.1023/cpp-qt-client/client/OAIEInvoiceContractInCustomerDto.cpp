/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEInvoiceContractInCustomerDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEInvoiceContractInCustomerDto::OAIEInvoiceContractInCustomerDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEInvoiceContractInCustomerDto::OAIEInvoiceContractInCustomerDto() {
    this->initializeModel();
}

OAIEInvoiceContractInCustomerDto::~OAIEInvoiceContractInCustomerDto() {}

void OAIEInvoiceContractInCustomerDto::initializeModel() {

    m_f_invoice_contract_id_isSet = false;
    m_f_invoice_contract_id_isValid = false;

    m_f_invoice_intermediator_id_isSet = false;
    m_f_invoice_intermediator_id_isValid = false;
}

void OAIEInvoiceContractInCustomerDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEInvoiceContractInCustomerDto::fromJsonObject(QJsonObject json) {

    m_f_invoice_contract_id_isValid = ::OpenAPI::fromJsonValue(m_f_invoice_contract_id, json[QString("fInvoiceContractID")]);
    m_f_invoice_contract_id_isSet = !json[QString("fInvoiceContractID")].isNull() && m_f_invoice_contract_id_isValid;

    m_f_invoice_intermediator_id_isValid = ::OpenAPI::fromJsonValue(m_f_invoice_intermediator_id, json[QString("fInvoiceIntermediatorID")]);
    m_f_invoice_intermediator_id_isSet = !json[QString("fInvoiceIntermediatorID")].isNull() && m_f_invoice_intermediator_id_isValid;
}

QString OAIEInvoiceContractInCustomerDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEInvoiceContractInCustomerDto::asJsonObject() const {
    QJsonObject obj;
    if (m_f_invoice_contract_id_isSet) {
        obj.insert(QString("fInvoiceContractID"), ::OpenAPI::toJsonValue(m_f_invoice_contract_id));
    }
    if (m_f_invoice_intermediator_id_isSet) {
        obj.insert(QString("fInvoiceIntermediatorID"), ::OpenAPI::toJsonValue(m_f_invoice_intermediator_id));
    }
    return obj;
}

QString OAIEInvoiceContractInCustomerDto::getFInvoiceContractId() const {
    return m_f_invoice_contract_id;
}
void OAIEInvoiceContractInCustomerDto::setFInvoiceContractId(const QString &f_invoice_contract_id) {
    m_f_invoice_contract_id = f_invoice_contract_id;
    m_f_invoice_contract_id_isSet = true;
}

bool OAIEInvoiceContractInCustomerDto::is_f_invoice_contract_id_Set() const{
    return m_f_invoice_contract_id_isSet;
}

bool OAIEInvoiceContractInCustomerDto::is_f_invoice_contract_id_Valid() const{
    return m_f_invoice_contract_id_isValid;
}

QString OAIEInvoiceContractInCustomerDto::getFInvoiceIntermediatorId() const {
    return m_f_invoice_intermediator_id;
}
void OAIEInvoiceContractInCustomerDto::setFInvoiceIntermediatorId(const QString &f_invoice_intermediator_id) {
    m_f_invoice_intermediator_id = f_invoice_intermediator_id;
    m_f_invoice_intermediator_id_isSet = true;
}

bool OAIEInvoiceContractInCustomerDto::is_f_invoice_intermediator_id_Set() const{
    return m_f_invoice_intermediator_id_isSet;
}

bool OAIEInvoiceContractInCustomerDto::is_f_invoice_intermediator_id_Valid() const{
    return m_f_invoice_intermediator_id_isValid;
}

bool OAIEInvoiceContractInCustomerDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_f_invoice_contract_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_f_invoice_intermediator_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEInvoiceContractInCustomerDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
