/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventoryAccountInformationDto.h
 *
 * 
 */

#ifndef OAIInventoryAccountInformationDto_H
#define OAIInventoryAccountInformationDto_H

#include <QJsonObject>

#include "OAICogsAccountInInventoryAccountInformationDto.h"
#include "OAICogsSubaccountInInventoryAccountInformationDto.h"
#include "OAIExpenseAccountInInventoryAccountInformationDto.h"
#include "OAIExpenseAccrualAccountInInventoryAccountInformationDto.h"
#include "OAIExpenseEuAccountInInventoryAccountInformationDto.h"
#include "OAIExpenseImportAccountInInventoryAccountInformationDto.h"
#include "OAIExpenseNonTaxableAccountInInventoryAccountInformationDto.h"
#include "OAIExpenseSubaccountInInventoryAccountInformationDto.h"
#include "OAIInventoryAccountInInventoryAccountInformationDto.h"
#include "OAISalesAccountInInventoryAccountInformationDto.h"
#include "OAISalesEuAccountInInventoryAccountInformationDto.h"
#include "OAISalesExportAccountInInventoryAccountInformationDto.h"
#include "OAISalesNonTaxableAccountInInventoryAccountInformationDto.h"
#include "OAISalesSubaccountInInventoryAccountInformationDto.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICogsAccountInInventoryAccountInformationDto;
class OAICogsSubaccountInInventoryAccountInformationDto;
class OAIExpenseAccountInInventoryAccountInformationDto;
class OAIExpenseAccrualAccountInInventoryAccountInformationDto;
class OAIExpenseEuAccountInInventoryAccountInformationDto;
class OAIExpenseImportAccountInInventoryAccountInformationDto;
class OAIExpenseNonTaxableAccountInInventoryAccountInformationDto;
class OAIExpenseSubaccountInInventoryAccountInformationDto;
class OAIInventoryAccountInInventoryAccountInformationDto;
class OAISalesAccountInInventoryAccountInformationDto;
class OAISalesEuAccountInInventoryAccountInformationDto;
class OAISalesExportAccountInInventoryAccountInformationDto;
class OAISalesNonTaxableAccountInInventoryAccountInformationDto;
class OAISalesSubaccountInInventoryAccountInformationDto;

class OAIInventoryAccountInformationDto : public OAIObject {
public:
    OAIInventoryAccountInformationDto();
    OAIInventoryAccountInformationDto(QString json);
    ~OAIInventoryAccountInformationDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICogsAccountInInventoryAccountInformationDto getCogsAccount() const;
    void setCogsAccount(const OAICogsAccountInInventoryAccountInformationDto &cogs_account);
    bool is_cogs_account_Set() const;
    bool is_cogs_account_Valid() const;

    OAICogsSubaccountInInventoryAccountInformationDto getCogsSubaccount() const;
    void setCogsSubaccount(const OAICogsSubaccountInInventoryAccountInformationDto &cogs_subaccount);
    bool is_cogs_subaccount_Set() const;
    bool is_cogs_subaccount_Valid() const;

    OAIExpenseAccountInInventoryAccountInformationDto getExpenseAccount() const;
    void setExpenseAccount(const OAIExpenseAccountInInventoryAccountInformationDto &expense_account);
    bool is_expense_account_Set() const;
    bool is_expense_account_Valid() const;

    OAIExpenseAccrualAccountInInventoryAccountInformationDto getExpenseAccrualAccount() const;
    void setExpenseAccrualAccount(const OAIExpenseAccrualAccountInInventoryAccountInformationDto &expense_accrual_account);
    bool is_expense_accrual_account_Set() const;
    bool is_expense_accrual_account_Valid() const;

    OAIExpenseEuAccountInInventoryAccountInformationDto getExpenseEuAccount() const;
    void setExpenseEuAccount(const OAIExpenseEuAccountInInventoryAccountInformationDto &expense_eu_account);
    bool is_expense_eu_account_Set() const;
    bool is_expense_eu_account_Valid() const;

    OAIExpenseImportAccountInInventoryAccountInformationDto getExpenseImportAccount() const;
    void setExpenseImportAccount(const OAIExpenseImportAccountInInventoryAccountInformationDto &expense_import_account);
    bool is_expense_import_account_Set() const;
    bool is_expense_import_account_Valid() const;

    OAIExpenseNonTaxableAccountInInventoryAccountInformationDto getExpenseNonTaxableAccount() const;
    void setExpenseNonTaxableAccount(const OAIExpenseNonTaxableAccountInInventoryAccountInformationDto &expense_non_taxable_account);
    bool is_expense_non_taxable_account_Set() const;
    bool is_expense_non_taxable_account_Valid() const;

    OAIExpenseSubaccountInInventoryAccountInformationDto getExpenseSubaccount() const;
    void setExpenseSubaccount(const OAIExpenseSubaccountInInventoryAccountInformationDto &expense_subaccount);
    bool is_expense_subaccount_Set() const;
    bool is_expense_subaccount_Valid() const;

    OAIInventoryAccountInInventoryAccountInformationDto getInventoryAccount() const;
    void setInventoryAccount(const OAIInventoryAccountInInventoryAccountInformationDto &inventory_account);
    bool is_inventory_account_Set() const;
    bool is_inventory_account_Valid() const;

    OAISalesAccountInInventoryAccountInformationDto getSalesAccount() const;
    void setSalesAccount(const OAISalesAccountInInventoryAccountInformationDto &sales_account);
    bool is_sales_account_Set() const;
    bool is_sales_account_Valid() const;

    OAISalesEuAccountInInventoryAccountInformationDto getSalesEuAccount() const;
    void setSalesEuAccount(const OAISalesEuAccountInInventoryAccountInformationDto &sales_eu_account);
    bool is_sales_eu_account_Set() const;
    bool is_sales_eu_account_Valid() const;

    OAISalesExportAccountInInventoryAccountInformationDto getSalesExportAccount() const;
    void setSalesExportAccount(const OAISalesExportAccountInInventoryAccountInformationDto &sales_export_account);
    bool is_sales_export_account_Set() const;
    bool is_sales_export_account_Valid() const;

    OAISalesNonTaxableAccountInInventoryAccountInformationDto getSalesNonTaxableAccount() const;
    void setSalesNonTaxableAccount(const OAISalesNonTaxableAccountInInventoryAccountInformationDto &sales_non_taxable_account);
    bool is_sales_non_taxable_account_Set() const;
    bool is_sales_non_taxable_account_Valid() const;

    OAISalesSubaccountInInventoryAccountInformationDto getSalesSubaccount() const;
    void setSalesSubaccount(const OAISalesSubaccountInInventoryAccountInformationDto &sales_subaccount);
    bool is_sales_subaccount_Set() const;
    bool is_sales_subaccount_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICogsAccountInInventoryAccountInformationDto m_cogs_account;
    bool m_cogs_account_isSet;
    bool m_cogs_account_isValid;

    OAICogsSubaccountInInventoryAccountInformationDto m_cogs_subaccount;
    bool m_cogs_subaccount_isSet;
    bool m_cogs_subaccount_isValid;

    OAIExpenseAccountInInventoryAccountInformationDto m_expense_account;
    bool m_expense_account_isSet;
    bool m_expense_account_isValid;

    OAIExpenseAccrualAccountInInventoryAccountInformationDto m_expense_accrual_account;
    bool m_expense_accrual_account_isSet;
    bool m_expense_accrual_account_isValid;

    OAIExpenseEuAccountInInventoryAccountInformationDto m_expense_eu_account;
    bool m_expense_eu_account_isSet;
    bool m_expense_eu_account_isValid;

    OAIExpenseImportAccountInInventoryAccountInformationDto m_expense_import_account;
    bool m_expense_import_account_isSet;
    bool m_expense_import_account_isValid;

    OAIExpenseNonTaxableAccountInInventoryAccountInformationDto m_expense_non_taxable_account;
    bool m_expense_non_taxable_account_isSet;
    bool m_expense_non_taxable_account_isValid;

    OAIExpenseSubaccountInInventoryAccountInformationDto m_expense_subaccount;
    bool m_expense_subaccount_isSet;
    bool m_expense_subaccount_isValid;

    OAIInventoryAccountInInventoryAccountInformationDto m_inventory_account;
    bool m_inventory_account_isSet;
    bool m_inventory_account_isValid;

    OAISalesAccountInInventoryAccountInformationDto m_sales_account;
    bool m_sales_account_isSet;
    bool m_sales_account_isValid;

    OAISalesEuAccountInInventoryAccountInformationDto m_sales_eu_account;
    bool m_sales_eu_account_isSet;
    bool m_sales_eu_account_isValid;

    OAISalesExportAccountInInventoryAccountInformationDto m_sales_export_account;
    bool m_sales_export_account_isSet;
    bool m_sales_export_account_isValid;

    OAISalesNonTaxableAccountInInventoryAccountInformationDto m_sales_non_taxable_account;
    bool m_sales_non_taxable_account_isSet;
    bool m_sales_non_taxable_account_isValid;

    OAISalesSubaccountInInventoryAccountInformationDto m_sales_subaccount;
    bool m_sales_subaccount_isSet;
    bool m_sales_subaccount_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventoryAccountInformationDto)

#endif // OAIInventoryAccountInformationDto_H
