/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentDto::OAISegmentDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentDto::OAISegmentDto() {
    this->initializeModel();
}

OAISegmentDto::~OAISegmentDto() {}

void OAISegmentDto::initializeModel() {

    m_segment_description_isSet = false;
    m_segment_description_isValid = false;

    m_segment_id_isSet = false;
    m_segment_id_isValid = false;

    m_segment_value_isSet = false;
    m_segment_value_isValid = false;

    m_segment_value_description_isSet = false;
    m_segment_value_description_isValid = false;
}

void OAISegmentDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentDto::fromJsonObject(QJsonObject json) {

    m_segment_description_isValid = ::OpenAPI::fromJsonValue(m_segment_description, json[QString("segmentDescription")]);
    m_segment_description_isSet = !json[QString("segmentDescription")].isNull() && m_segment_description_isValid;

    m_segment_id_isValid = ::OpenAPI::fromJsonValue(m_segment_id, json[QString("segmentId")]);
    m_segment_id_isSet = !json[QString("segmentId")].isNull() && m_segment_id_isValid;

    m_segment_value_isValid = ::OpenAPI::fromJsonValue(m_segment_value, json[QString("segmentValue")]);
    m_segment_value_isSet = !json[QString("segmentValue")].isNull() && m_segment_value_isValid;

    m_segment_value_description_isValid = ::OpenAPI::fromJsonValue(m_segment_value_description, json[QString("segmentValueDescription")]);
    m_segment_value_description_isSet = !json[QString("segmentValueDescription")].isNull() && m_segment_value_description_isValid;
}

QString OAISegmentDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentDto::asJsonObject() const {
    QJsonObject obj;
    if (m_segment_description_isSet) {
        obj.insert(QString("segmentDescription"), ::OpenAPI::toJsonValue(m_segment_description));
    }
    if (m_segment_id_isSet) {
        obj.insert(QString("segmentId"), ::OpenAPI::toJsonValue(m_segment_id));
    }
    if (m_segment_value_isSet) {
        obj.insert(QString("segmentValue"), ::OpenAPI::toJsonValue(m_segment_value));
    }
    if (m_segment_value_description_isSet) {
        obj.insert(QString("segmentValueDescription"), ::OpenAPI::toJsonValue(m_segment_value_description));
    }
    return obj;
}

QString OAISegmentDto::getSegmentDescription() const {
    return m_segment_description;
}
void OAISegmentDto::setSegmentDescription(const QString &segment_description) {
    m_segment_description = segment_description;
    m_segment_description_isSet = true;
}

bool OAISegmentDto::is_segment_description_Set() const{
    return m_segment_description_isSet;
}

bool OAISegmentDto::is_segment_description_Valid() const{
    return m_segment_description_isValid;
}

qint32 OAISegmentDto::getSegmentId() const {
    return m_segment_id;
}
void OAISegmentDto::setSegmentId(const qint32 &segment_id) {
    m_segment_id = segment_id;
    m_segment_id_isSet = true;
}

bool OAISegmentDto::is_segment_id_Set() const{
    return m_segment_id_isSet;
}

bool OAISegmentDto::is_segment_id_Valid() const{
    return m_segment_id_isValid;
}

QString OAISegmentDto::getSegmentValue() const {
    return m_segment_value;
}
void OAISegmentDto::setSegmentValue(const QString &segment_value) {
    m_segment_value = segment_value;
    m_segment_value_isSet = true;
}

bool OAISegmentDto::is_segment_value_Set() const{
    return m_segment_value_isSet;
}

bool OAISegmentDto::is_segment_value_Valid() const{
    return m_segment_value_isValid;
}

QString OAISegmentDto::getSegmentValueDescription() const {
    return m_segment_value_description;
}
void OAISegmentDto::setSegmentValueDescription(const QString &segment_value_description) {
    m_segment_value_description = segment_value_description;
    m_segment_value_description_isSet = true;
}

bool OAISegmentDto::is_segment_value_description_Set() const{
    return m_segment_value_description_isSet;
}

bool OAISegmentDto::is_segment_value_description_Valid() const{
    return m_segment_value_description_isValid;
}

bool OAISegmentDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_segment_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segment_value_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
