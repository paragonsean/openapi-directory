/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExpenseClaimDto.h
 *
 * This class represents a Expense Claim in ExpenseClaimController. Used for getting data.
 */

#ifndef OAIExpenseClaimDto_H
#define OAIExpenseClaimDto_H

#include <QJsonObject>

#include "OAIClaimedByInExpenseClaimDto.h"
#include "OAICustomerInExpenseClaimDto.h"
#include "OAIDepartmentInExpenseClaimDto.h"
#include "OAIExpenseClaimDetailDto.h"
#include "OAILocationInExpenseClaimDto.h"
#include "OAIMetadataDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIClaimedByInExpenseClaimDto;
class OAICustomerInExpenseClaimDto;
class OAIDepartmentInExpenseClaimDto;
class OAIExpenseClaimDetailDto;
class OAILocationInExpenseClaimDto;
class OAIMetadataDto;

class OAIExpenseClaimDto : public OAIObject {
public:
    OAIExpenseClaimDto();
    OAIExpenseClaimDto(QString json);
    ~OAIExpenseClaimDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApprovalDate() const;
    void setApprovalDate(const QDateTime &approval_date);
    bool is_approval_date_Set() const;
    bool is_approval_date_Valid() const;

    QString getApprovalStatus() const;
    void setApprovalStatus(const QString &approval_status);
    bool is_approval_status_Set() const;
    bool is_approval_status_Valid() const;

    QString getApprovalStatusText() const;
    void setApprovalStatusText(const QString &approval_status_text);
    bool is_approval_status_text_Set() const;
    bool is_approval_status_text_Valid() const;

    double getClaimTotal() const;
    void setClaimTotal(const double &claim_total);
    bool is_claim_total_Set() const;
    bool is_claim_total_Valid() const;

    OAIClaimedByInExpenseClaimDto getClaimedBy() const;
    void setClaimedBy(const OAIClaimedByInExpenseClaimDto &claimed_by);
    bool is_claimed_by_Set() const;
    bool is_claimed_by_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAICustomerInExpenseClaimDto getCustomer() const;
    void setCustomer(const OAICustomerInExpenseClaimDto &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    OAIDepartmentInExpenseClaimDto getDepartment() const;
    void setDepartment(const OAIDepartmentInExpenseClaimDto &department);
    bool is_department_Set() const;
    bool is_department_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<OAIExpenseClaimDetailDto> getDetails() const;
    void setDetails(const QList<OAIExpenseClaimDetailDto> &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    OAILocationInExpenseClaimDto getLocation() const;
    void setLocation(const OAILocationInExpenseClaimDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getRefNbr() const;
    void setRefNbr(const QString &ref_nbr);
    bool is_ref_nbr_Set() const;
    bool is_ref_nbr_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    double getVatExemptTotal() const;
    void setVatExemptTotal(const double &vat_exempt_total);
    bool is_vat_exempt_total_Set() const;
    bool is_vat_exempt_total_Valid() const;

    double getVatTaxableTotal() const;
    void setVatTaxableTotal(const double &vat_taxable_total);
    bool is_vat_taxable_total_Set() const;
    bool is_vat_taxable_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_approval_date;
    bool m_approval_date_isSet;
    bool m_approval_date_isValid;

    QString m_approval_status;
    bool m_approval_status_isSet;
    bool m_approval_status_isValid;

    QString m_approval_status_text;
    bool m_approval_status_text_isSet;
    bool m_approval_status_text_isValid;

    double m_claim_total;
    bool m_claim_total_isSet;
    bool m_claim_total_isValid;

    OAIClaimedByInExpenseClaimDto m_claimed_by;
    bool m_claimed_by_isSet;
    bool m_claimed_by_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAICustomerInExpenseClaimDto m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    OAIDepartmentInExpenseClaimDto m_department;
    bool m_department_isSet;
    bool m_department_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<OAIExpenseClaimDetailDto> m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    OAILocationInExpenseClaimDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_ref_nbr;
    bool m_ref_nbr_isSet;
    bool m_ref_nbr_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    double m_vat_exempt_total;
    bool m_vat_exempt_total_isSet;
    bool m_vat_exempt_total_isValid;

    double m_vat_taxable_total;
    bool m_vat_taxable_total_isSet;
    bool m_vat_taxable_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExpenseClaimDto)

#endif // OAIExpenseClaimDto_H
