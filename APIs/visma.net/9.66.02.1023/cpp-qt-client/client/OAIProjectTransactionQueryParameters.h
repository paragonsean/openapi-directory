/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectTransactionQueryParameters.h
 *
 * 
 */

#ifndef OAIProjectTransactionQueryParameters_H
#define OAIProjectTransactionQueryParameters_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProjectTransactionQueryParameters : public OAIObject {
public:
    OAIProjectTransactionQueryParameters();
    OAIProjectTransactionQueryParameters(QString json);
    ~OAIProjectTransactionQueryParameters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBillable() const;
    void setBillable(const bool &billable);
    bool is_billable_Set() const;
    bool is_billable_Valid() const;

    QString getBranch() const;
    void setBranch(const QString &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    QString getCreatedDateTime() const;
    void setCreatedDateTime(const QString &created_date_time);
    bool is_created_date_time_Set() const;
    bool is_created_date_time_Valid() const;

    QString getCreatedDateTimeCondition() const;
    void setCreatedDateTimeCondition(const QString &created_date_time_condition);
    bool is_created_date_time_condition_Set() const;
    bool is_created_date_time_condition_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    bool isExpandNote() const;
    void setExpandNote(const bool &expand_note);
    bool is_expand_note_Set() const;
    bool is_expand_note_Valid() const;

    QString getFromPeriod() const;
    void setFromPeriod(const QString &from_period);
    bool is_from_period_Set() const;
    bool is_from_period_Valid() const;

    QString getGreaterThanValue() const;
    void setGreaterThanValue(const QString &greater_than_value);
    bool is_greater_than_value_Set() const;
    bool is_greater_than_value_Valid() const;

    QString getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QString &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    QString getLastModifiedDateTimeCondition() const;
    void setLastModifiedDateTimeCondition(const QString &last_modified_date_time_condition);
    bool is_last_modified_date_time_condition_Set() const;
    bool is_last_modified_date_time_condition_Valid() const;

    QString getModule() const;
    void setModule(const QString &module);
    bool is_module_Set() const;
    bool is_module_Valid() const;

    qint32 getNumberToRead() const;
    void setNumberToRead(const qint32 &number_to_read);
    bool is_number_to_read_Set() const;
    bool is_number_to_read_Valid() const;

    qint32 getPageNumber() const;
    void setPageNumber(const qint32 &page_number);
    bool is_page_number_Set() const;
    bool is_page_number_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getProject() const;
    void setProject(const QString &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    QString getProjectTask() const;
    void setProjectTask(const QString &project_task);
    bool is_project_task_Set() const;
    bool is_project_task_Valid() const;

    qint32 getSkipRecords() const;
    void setSkipRecords(const qint32 &skip_records);
    bool is_skip_records_Set() const;
    bool is_skip_records_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getToPeriod() const;
    void setToPeriod(const QString &to_period);
    bool is_to_period_Set() const;
    bool is_to_period_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_billable;
    bool m_billable_isSet;
    bool m_billable_isValid;

    QString m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    QString m_created_date_time;
    bool m_created_date_time_isSet;
    bool m_created_date_time_isValid;

    QString m_created_date_time_condition;
    bool m_created_date_time_condition_isSet;
    bool m_created_date_time_condition_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    bool m_expand_note;
    bool m_expand_note_isSet;
    bool m_expand_note_isValid;

    QString m_from_period;
    bool m_from_period_isSet;
    bool m_from_period_isValid;

    QString m_greater_than_value;
    bool m_greater_than_value_isSet;
    bool m_greater_than_value_isValid;

    QString m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    QString m_last_modified_date_time_condition;
    bool m_last_modified_date_time_condition_isSet;
    bool m_last_modified_date_time_condition_isValid;

    QString m_module;
    bool m_module_isSet;
    bool m_module_isValid;

    qint32 m_number_to_read;
    bool m_number_to_read_isSet;
    bool m_number_to_read_isValid;

    qint32 m_page_number;
    bool m_page_number_isSet;
    bool m_page_number_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    QString m_project_task;
    bool m_project_task_isSet;
    bool m_project_task_isValid;

    qint32 m_skip_records;
    bool m_skip_records_isSet;
    bool m_skip_records_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_to_period;
    bool m_to_period_isSet;
    bool m_to_period_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectTransactionQueryParameters)

#endif // OAIProjectTransactionQueryParameters_H
