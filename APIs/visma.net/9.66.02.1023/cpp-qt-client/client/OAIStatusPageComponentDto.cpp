/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStatusPageComponentDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStatusPageComponentDto::OAIStatusPageComponentDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStatusPageComponentDto::OAIStatusPageComponentDto() {
    this->initializeModel();
}

OAIStatusPageComponentDto::~OAIStatusPageComponentDto() {}

void OAIStatusPageComponentDto::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_page_id_isSet = false;
    m_page_id_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;

    m_showcase_isSet = false;
    m_showcase_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIStatusPageComponentDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStatusPageComponentDto::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_page_id_isValid = ::OpenAPI::fromJsonValue(m_page_id, json[QString("page_id")]);
    m_page_id_isSet = !json[QString("page_id")].isNull() && m_page_id_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("position")]);
    m_position_isSet = !json[QString("position")].isNull() && m_position_isValid;

    m_showcase_isValid = ::OpenAPI::fromJsonValue(m_showcase, json[QString("showcase")]);
    m_showcase_isSet = !json[QString("showcase")].isNull() && m_showcase_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAIStatusPageComponentDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStatusPageComponentDto::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_page_id_isSet) {
        obj.insert(QString("page_id"), ::OpenAPI::toJsonValue(m_page_id));
    }
    if (m_position_isSet) {
        obj.insert(QString("position"), ::OpenAPI::toJsonValue(m_position));
    }
    if (m_showcase_isSet) {
        obj.insert(QString("showcase"), ::OpenAPI::toJsonValue(m_showcase));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAIStatusPageComponentDto::getCreatedAt() const {
    return m_created_at;
}
void OAIStatusPageComponentDto::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIStatusPageComponentDto::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIStatusPageComponentDto::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIStatusPageComponentDto::getDescription() const {
    return m_description;
}
void OAIStatusPageComponentDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIStatusPageComponentDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIStatusPageComponentDto::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIStatusPageComponentDto::getGroupId() const {
    return m_group_id;
}
void OAIStatusPageComponentDto::setGroupId(const QString &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAIStatusPageComponentDto::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAIStatusPageComponentDto::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QString OAIStatusPageComponentDto::getId() const {
    return m_id;
}
void OAIStatusPageComponentDto::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIStatusPageComponentDto::is_id_Set() const{
    return m_id_isSet;
}

bool OAIStatusPageComponentDto::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIStatusPageComponentDto::getName() const {
    return m_name;
}
void OAIStatusPageComponentDto::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStatusPageComponentDto::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStatusPageComponentDto::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIStatusPageComponentDto::getPageId() const {
    return m_page_id;
}
void OAIStatusPageComponentDto::setPageId(const QString &page_id) {
    m_page_id = page_id;
    m_page_id_isSet = true;
}

bool OAIStatusPageComponentDto::is_page_id_Set() const{
    return m_page_id_isSet;
}

bool OAIStatusPageComponentDto::is_page_id_Valid() const{
    return m_page_id_isValid;
}

qint64 OAIStatusPageComponentDto::getPosition() const {
    return m_position;
}
void OAIStatusPageComponentDto::setPosition(const qint64 &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAIStatusPageComponentDto::is_position_Set() const{
    return m_position_isSet;
}

bool OAIStatusPageComponentDto::is_position_Valid() const{
    return m_position_isValid;
}

bool OAIStatusPageComponentDto::isShowcase() const {
    return m_showcase;
}
void OAIStatusPageComponentDto::setShowcase(const bool &showcase) {
    m_showcase = showcase;
    m_showcase_isSet = true;
}

bool OAIStatusPageComponentDto::is_showcase_Set() const{
    return m_showcase_isSet;
}

bool OAIStatusPageComponentDto::is_showcase_Valid() const{
    return m_showcase_isValid;
}

QString OAIStatusPageComponentDto::getStatus() const {
    return m_status;
}
void OAIStatusPageComponentDto::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIStatusPageComponentDto::is_status_Set() const{
    return m_status_isSet;
}

bool OAIStatusPageComponentDto::is_status_Valid() const{
    return m_status_isValid;
}

QString OAIStatusPageComponentDto::getUpdatedAt() const {
    return m_updated_at;
}
void OAIStatusPageComponentDto::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIStatusPageComponentDto::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIStatusPageComponentDto::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIStatusPageComponentDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_showcase_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStatusPageComponentDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
