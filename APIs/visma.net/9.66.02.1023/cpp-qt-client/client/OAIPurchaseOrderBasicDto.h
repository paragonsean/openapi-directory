/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPurchaseOrderBasicDto.h
 *
 * This class represents a Purchase Order in PurchaseOrderController. Used for getting data.
 */

#ifndef OAIPurchaseOrderBasicDto_H
#define OAIPurchaseOrderBasicDto_H

#include <QJsonObject>

#include "OAIBranchInPurchaseOrderBasicDto.h"
#include "OAILocationInPurchaseOrderBasicDto.h"
#include "OAIMetadataDto.h"
#include "OAIOwnerInPurchaseOrderBasicDto.h"
#include "OAIPurchaseOrderLineDto.h"
#include "OAIPurchaseReceiptsDto.h"
#include "OAISupplierInPurchaseOrderBasicDto.h"
#include "OAITaxDetailDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBranchInPurchaseOrderBasicDto;
class OAIPurchaseOrderLineDto;
class OAILocationInPurchaseOrderBasicDto;
class OAIMetadataDto;
class OAIOwnerInPurchaseOrderBasicDto;
class OAIPurchaseReceiptsDto;
class OAISupplierInPurchaseOrderBasicDto;
class OAITaxDetailDto;

class OAIPurchaseOrderBasicDto : public OAIObject {
public:
    OAIPurchaseOrderBasicDto();
    OAIPurchaseOrderBasicDto(QString json);
    ~OAIPurchaseOrderBasicDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBranchInPurchaseOrderBasicDto getBranch() const;
    void setBranch(const OAIBranchInPurchaseOrderBasicDto &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    double getControlTotal() const;
    void setControlTotal(const double &control_total);
    bool is_control_total_Set() const;
    bool is_control_total_Valid() const;

    double getControlTotalInBaseCurrency() const;
    void setControlTotalInBaseCurrency(const double &control_total_in_base_currency);
    bool is_control_total_in_base_currency_Set() const;
    bool is_control_total_in_base_currency_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QDateTime getDate() const;
    void setDate(const QDateTime &date);
    bool is_date_Set() const;
    bool is_date_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    double getExchangeRate() const;
    void setExchangeRate(const double &exchange_rate);
    bool is_exchange_rate_Set() const;
    bool is_exchange_rate_Valid() const;

    bool isHold() const;
    void setHold(const bool &hold);
    bool is_hold_Set() const;
    bool is_hold_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    double getLineTotal() const;
    void setLineTotal(const double &line_total);
    bool is_line_total_Set() const;
    bool is_line_total_Valid() const;

    double getLineTotalInBaseCurrency() const;
    void setLineTotalInBaseCurrency(const double &line_total_in_base_currency);
    bool is_line_total_in_base_currency_Set() const;
    bool is_line_total_in_base_currency_Valid() const;

    QList<OAIPurchaseOrderLineDto> getLines() const;
    void setLines(const QList<OAIPurchaseOrderLineDto> &lines);
    bool is_lines_Set() const;
    bool is_lines_Valid() const;

    OAILocationInPurchaseOrderBasicDto getLocation() const;
    void setLocation(const OAILocationInPurchaseOrderBasicDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getOrderNbr() const;
    void setOrderNbr(const QString &order_nbr);
    bool is_order_nbr_Set() const;
    bool is_order_nbr_Valid() const;

    double getOrderTotal() const;
    void setOrderTotal(const double &order_total);
    bool is_order_total_Set() const;
    bool is_order_total_Valid() const;

    double getOrderTotalInBaseCurrency() const;
    void setOrderTotalInBaseCurrency(const double &order_total_in_base_currency);
    bool is_order_total_in_base_currency_Set() const;
    bool is_order_total_in_base_currency_Valid() const;

    QString getOrderType() const;
    void setOrderType(const QString &order_type);
    bool is_order_type_Set() const;
    bool is_order_type_Valid() const;

    OAIOwnerInPurchaseOrderBasicDto getOwner() const;
    void setOwner(const OAIOwnerInPurchaseOrderBasicDto &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QDateTime getPromisedOn() const;
    void setPromisedOn(const QDateTime &promised_on);
    bool is_promised_on_Set() const;
    bool is_promised_on_Valid() const;

    QList<OAIPurchaseReceiptsDto> getPurchaseReceipts() const;
    void setPurchaseReceipts(const QList<OAIPurchaseReceiptsDto> &purchase_receipts);
    bool is_purchase_receipts_Set() const;
    bool is_purchase_receipts_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAISupplierInPurchaseOrderBasicDto getSupplier() const;
    void setSupplier(const OAISupplierInPurchaseOrderBasicDto &supplier);
    bool is_supplier_Set() const;
    bool is_supplier_Valid() const;

    QString getSupplierRef() const;
    void setSupplierRef(const QString &supplier_ref);
    bool is_supplier_ref_Set() const;
    bool is_supplier_ref_Valid() const;

    QList<OAITaxDetailDto> getTaxDetails() const;
    void setTaxDetails(const QList<OAITaxDetailDto> &tax_details);
    bool is_tax_details_Set() const;
    bool is_tax_details_Valid() const;

    double getTaxTotal() const;
    void setTaxTotal(const double &tax_total);
    bool is_tax_total_Set() const;
    bool is_tax_total_Valid() const;

    double getTaxTotalInBaseCurrency() const;
    void setTaxTotalInBaseCurrency(const double &tax_total_in_base_currency);
    bool is_tax_total_in_base_currency_Set() const;
    bool is_tax_total_in_base_currency_Valid() const;

    double getVatExemptTotal() const;
    void setVatExemptTotal(const double &vat_exempt_total);
    bool is_vat_exempt_total_Set() const;
    bool is_vat_exempt_total_Valid() const;

    double getVatExemptTotalInBaseCurrency() const;
    void setVatExemptTotalInBaseCurrency(const double &vat_exempt_total_in_base_currency);
    bool is_vat_exempt_total_in_base_currency_Set() const;
    bool is_vat_exempt_total_in_base_currency_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBranchInPurchaseOrderBasicDto m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    double m_control_total;
    bool m_control_total_isSet;
    bool m_control_total_isValid;

    double m_control_total_in_base_currency;
    bool m_control_total_in_base_currency_isSet;
    bool m_control_total_in_base_currency_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QDateTime m_date;
    bool m_date_isSet;
    bool m_date_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    double m_exchange_rate;
    bool m_exchange_rate_isSet;
    bool m_exchange_rate_isValid;

    bool m_hold;
    bool m_hold_isSet;
    bool m_hold_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    double m_line_total;
    bool m_line_total_isSet;
    bool m_line_total_isValid;

    double m_line_total_in_base_currency;
    bool m_line_total_in_base_currency_isSet;
    bool m_line_total_in_base_currency_isValid;

    QList<OAIPurchaseOrderLineDto> m_lines;
    bool m_lines_isSet;
    bool m_lines_isValid;

    OAILocationInPurchaseOrderBasicDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_order_nbr;
    bool m_order_nbr_isSet;
    bool m_order_nbr_isValid;

    double m_order_total;
    bool m_order_total_isSet;
    bool m_order_total_isValid;

    double m_order_total_in_base_currency;
    bool m_order_total_in_base_currency_isSet;
    bool m_order_total_in_base_currency_isValid;

    QString m_order_type;
    bool m_order_type_isSet;
    bool m_order_type_isValid;

    OAIOwnerInPurchaseOrderBasicDto m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QDateTime m_promised_on;
    bool m_promised_on_isSet;
    bool m_promised_on_isValid;

    QList<OAIPurchaseReceiptsDto> m_purchase_receipts;
    bool m_purchase_receipts_isSet;
    bool m_purchase_receipts_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAISupplierInPurchaseOrderBasicDto m_supplier;
    bool m_supplier_isSet;
    bool m_supplier_isValid;

    QString m_supplier_ref;
    bool m_supplier_ref_isSet;
    bool m_supplier_ref_isValid;

    QList<OAITaxDetailDto> m_tax_details;
    bool m_tax_details_isSet;
    bool m_tax_details_isValid;

    double m_tax_total;
    bool m_tax_total_isSet;
    bool m_tax_total_isValid;

    double m_tax_total_in_base_currency;
    bool m_tax_total_in_base_currency_isSet;
    bool m_tax_total_in_base_currency_isValid;

    double m_vat_exempt_total;
    bool m_vat_exempt_total_isSet;
    bool m_vat_exempt_total_isValid;

    double m_vat_exempt_total_in_base_currency;
    bool m_vat_exempt_total_in_base_currency_isSet;
    bool m_vat_exempt_total_in_base_currency_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPurchaseOrderBasicDto)

#endif // OAIPurchaseOrderBasicDto_H
