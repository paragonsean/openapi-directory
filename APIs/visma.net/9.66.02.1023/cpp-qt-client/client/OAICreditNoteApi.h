/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAICreditNoteApi_H
#define OAI_OAICreditNoteApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIBackgroundApiAcceptedDto.h"
#include "OAICreditNoteDto.h"
#include "OAICreditNoteUpdateDto.h"
#include "OAIObject.h"
#include "OAIReleaseInvoiceActionResultDto.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAICreditNoteApi : public QObject {
    Q_OBJECT

public:
    OAICreditNoteApi(const int timeOut = 0);
    ~OAICreditNoteApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  oai_credit_note_update_dto OAICreditNoteUpdateDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void creditNoteCreateCreditNote(const OAICreditNoteUpdateDto &oai_credit_note_update_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  credit_note_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void creditNoteCreateHeaderAttachmentBycreditNoteNumber(const QString &credit_note_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  credit_note_number QString [required]
    * @param[in]  line_number qint32 [required]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumber(const QString &credit_note_number, const qint32 &line_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  document_type QString [optional]
    * @param[in]  released qint32 [optional]
    * @param[in]  dunning_level qint32 [optional]
    * @param[in]  closed_financial_period QString [optional]
    * @param[in]  dunning_letter_date_time QString [optional]
    * @param[in]  dunning_letter_date_time_condition QString [optional]
    * @param[in]  project QString [optional]
    * @param[in]  expand_applications bool [optional]
    * @param[in]  expand_dunning_information bool [optional]
    * @param[in]  expand_attachments bool [optional]
    * @param[in]  expand_tax_details bool [optional]
    * @param[in]  expand_invoice_address bool [optional]
    * @param[in]  financial_period QString [optional]
    * @param[in]  document_due_date QDateTime [optional]
    * @param[in]  status QString [optional]
    * @param[in]  number_to_read qint32 [optional]
    * @param[in]  skip_records qint32 [optional]
    * @param[in]  external_reference QString [optional]
    * @param[in]  payment_reference QString [optional]
    * @param[in]  customer_ref_number QString [optional]
    * @param[in]  greater_than_value QString [optional]
    * @param[in]  last_modified_date_time QString [optional]
    * @param[in]  last_modified_date_time_condition QString [optional]
    * @param[in]  created_date_time QString [optional]
    * @param[in]  created_date_time_condition QString [optional]
    * @param[in]  page_number qint32 [optional]
    * @param[in]  page_size qint32 [optional]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void creditNoteGetAllCreditNotesDto(const ::OpenAPI::OptionalParam<QString> &document_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &released = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &dunning_level = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &closed_financial_period = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dunning_letter_date_time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dunning_letter_date_time_condition = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &project = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &expand_applications = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_dunning_information = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_attachments = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_tax_details = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &expand_invoice_address = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &financial_period = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QDateTime> &document_due_date = ::OpenAPI::OptionalParam<QDateTime>(), const ::OpenAPI::OptionalParam<QString> &status = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &number_to_read = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &skip_records = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &external_reference = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &payment_reference = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &customer_ref_number = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &greater_than_value = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_modified_date_time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_modified_date_time_condition = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_date_time = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &created_date_time_condition = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &page_number = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &page_size = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  credit_note_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void creditNoteGetBycreditNoteNumber(const QString &credit_note_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  credit_note_number QString [required]
    * @param[in]  oai_credit_note_update_dto OAICreditNoteUpdateDto [required]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void creditNotePutBycreditNoteNumber(const QString &credit_note_number, const OAICreditNoteUpdateDto &oai_credit_note_update_dto, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  credit_note_number QString [required]
    * @param[in]  erp_api_background QString [optional]
    */
    Q_DECL_DEPRECATED virtual void creditNoteReleaseInvoiceBycreditNoteNumber(const QString &credit_note_number, const ::OpenAPI::OptionalParam<QString> &erp_api_background = ::OpenAPI::OptionalParam<QString>());


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void creditNoteCreateCreditNoteCallback(OAIHttpRequestWorker *worker);
    void creditNoteCreateHeaderAttachmentBycreditNoteNumberCallback(OAIHttpRequestWorker *worker);
    void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberCallback(OAIHttpRequestWorker *worker);
    void creditNoteGetAllCreditNotesDtoCallback(OAIHttpRequestWorker *worker);
    void creditNoteGetBycreditNoteNumberCallback(OAIHttpRequestWorker *worker);
    void creditNotePutBycreditNoteNumberCallback(OAIHttpRequestWorker *worker);
    void creditNoteReleaseInvoiceBycreditNoteNumberCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void creditNoteCreateCreditNoteSignal(OAIObject summary);
    void creditNoteCreateHeaderAttachmentBycreditNoteNumberSignal(OAIObject summary);
    void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignal(OAIObject summary);
    void creditNoteGetAllCreditNotesDtoSignal(QList<OAICreditNoteDto> summary);
    void creditNoteGetBycreditNoteNumberSignal(OAICreditNoteDto summary);
    void creditNotePutBycreditNoteNumberSignal(OAIBackgroundApiAcceptedDto summary);
    void creditNoteReleaseInvoiceBycreditNoteNumberSignal(OAIReleaseInvoiceActionResultDto summary);


    void creditNoteCreateCreditNoteSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void creditNoteCreateHeaderAttachmentBycreditNoteNumberSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignalFull(OAIHttpRequestWorker *worker, OAIObject summary);
    void creditNoteGetAllCreditNotesDtoSignalFull(OAIHttpRequestWorker *worker, QList<OAICreditNoteDto> summary);
    void creditNoteGetBycreditNoteNumberSignalFull(OAIHttpRequestWorker *worker, OAICreditNoteDto summary);
    void creditNotePutBycreditNoteNumberSignalFull(OAIHttpRequestWorker *worker, OAIBackgroundApiAcceptedDto summary);
    void creditNoteReleaseInvoiceBycreditNoteNumberSignalFull(OAIHttpRequestWorker *worker, OAIReleaseInvoiceActionResultDto summary);

    Q_DECL_DEPRECATED_X("Use creditNoteCreateCreditNoteSignalError() instead")
    void creditNoteCreateCreditNoteSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteCreateCreditNoteSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteCreateHeaderAttachmentBycreditNoteNumberSignalError() instead")
    void creditNoteCreateHeaderAttachmentBycreditNoteNumberSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteCreateHeaderAttachmentBycreditNoteNumberSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignalError() instead")
    void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignalE(OAIObject summary, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignalError(OAIObject summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteGetAllCreditNotesDtoSignalError() instead")
    void creditNoteGetAllCreditNotesDtoSignalE(QList<OAICreditNoteDto> summary, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteGetAllCreditNotesDtoSignalError(QList<OAICreditNoteDto> summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteGetBycreditNoteNumberSignalError() instead")
    void creditNoteGetBycreditNoteNumberSignalE(OAICreditNoteDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteGetBycreditNoteNumberSignalError(OAICreditNoteDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNotePutBycreditNoteNumberSignalError() instead")
    void creditNotePutBycreditNoteNumberSignalE(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNotePutBycreditNoteNumberSignalError(OAIBackgroundApiAcceptedDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteReleaseInvoiceBycreditNoteNumberSignalError() instead")
    void creditNoteReleaseInvoiceBycreditNoteNumberSignalE(OAIReleaseInvoiceActionResultDto summary, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteReleaseInvoiceBycreditNoteNumberSignalError(OAIReleaseInvoiceActionResultDto summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use creditNoteCreateCreditNoteSignalErrorFull() instead")
    void creditNoteCreateCreditNoteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteCreateCreditNoteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteCreateHeaderAttachmentBycreditNoteNumberSignalErrorFull() instead")
    void creditNoteCreateHeaderAttachmentBycreditNoteNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteCreateHeaderAttachmentBycreditNoteNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignalErrorFull() instead")
    void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteCreateLineAttachmentBycreditNoteNumberlineNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteGetAllCreditNotesDtoSignalErrorFull() instead")
    void creditNoteGetAllCreditNotesDtoSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteGetAllCreditNotesDtoSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteGetBycreditNoteNumberSignalErrorFull() instead")
    void creditNoteGetBycreditNoteNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteGetBycreditNoteNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNotePutBycreditNoteNumberSignalErrorFull() instead")
    void creditNotePutBycreditNoteNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNotePutBycreditNoteNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use creditNoteReleaseInvoiceBycreditNoteNumberSignalErrorFull() instead")
    void creditNoteReleaseInvoiceBycreditNoteNumberSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void creditNoteReleaseInvoiceBycreditNoteNumberSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
