/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaxDetailUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaxDetailUpdateDto::OAITaxDetailUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaxDetailUpdateDto::OAITaxDetailUpdateDto() {
    this->initializeModel();
}

OAITaxDetailUpdateDto::~OAITaxDetailUpdateDto() {}

void OAITaxDetailUpdateDto::initializeModel() {

    m_tax_id_isSet = false;
    m_tax_id_isValid = false;

    m_taxable_amount_isSet = false;
    m_taxable_amount_isValid = false;

    m_vat_amount_isSet = false;
    m_vat_amount_isValid = false;
}

void OAITaxDetailUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaxDetailUpdateDto::fromJsonObject(QJsonObject json) {

    m_tax_id_isValid = ::OpenAPI::fromJsonValue(m_tax_id, json[QString("taxId")]);
    m_tax_id_isSet = !json[QString("taxId")].isNull() && m_tax_id_isValid;

    m_taxable_amount_isValid = ::OpenAPI::fromJsonValue(m_taxable_amount, json[QString("taxableAmount")]);
    m_taxable_amount_isSet = !json[QString("taxableAmount")].isNull() && m_taxable_amount_isValid;

    m_vat_amount_isValid = ::OpenAPI::fromJsonValue(m_vat_amount, json[QString("vatAmount")]);
    m_vat_amount_isSet = !json[QString("vatAmount")].isNull() && m_vat_amount_isValid;
}

QString OAITaxDetailUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaxDetailUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_tax_id.isSet()) {
        obj.insert(QString("taxId"), ::OpenAPI::toJsonValue(m_tax_id));
    }
    if (m_taxable_amount.isSet()) {
        obj.insert(QString("taxableAmount"), ::OpenAPI::toJsonValue(m_taxable_amount));
    }
    if (m_vat_amount.isSet()) {
        obj.insert(QString("vatAmount"), ::OpenAPI::toJsonValue(m_vat_amount));
    }
    return obj;
}

OAIDtoValueOfString OAITaxDetailUpdateDto::getTaxId() const {
    return m_tax_id;
}
void OAITaxDetailUpdateDto::setTaxId(const OAIDtoValueOfString &tax_id) {
    m_tax_id = tax_id;
    m_tax_id_isSet = true;
}

bool OAITaxDetailUpdateDto::is_tax_id_Set() const{
    return m_tax_id_isSet;
}

bool OAITaxDetailUpdateDto::is_tax_id_Valid() const{
    return m_tax_id_isValid;
}

OAIDtoValueOfNullableOfDecimal OAITaxDetailUpdateDto::getTaxableAmount() const {
    return m_taxable_amount;
}
void OAITaxDetailUpdateDto::setTaxableAmount(const OAIDtoValueOfNullableOfDecimal &taxable_amount) {
    m_taxable_amount = taxable_amount;
    m_taxable_amount_isSet = true;
}

bool OAITaxDetailUpdateDto::is_taxable_amount_Set() const{
    return m_taxable_amount_isSet;
}

bool OAITaxDetailUpdateDto::is_taxable_amount_Valid() const{
    return m_taxable_amount_isValid;
}

OAIDtoValueOfNullableOfDecimal OAITaxDetailUpdateDto::getVatAmount() const {
    return m_vat_amount;
}
void OAITaxDetailUpdateDto::setVatAmount(const OAIDtoValueOfNullableOfDecimal &vat_amount) {
    m_vat_amount = vat_amount;
    m_vat_amount_isSet = true;
}

bool OAITaxDetailUpdateDto::is_vat_amount_Set() const{
    return m_vat_amount_isSet;
}

bool OAITaxDetailUpdateDto::is_vat_amount_Valid() const{
    return m_vat_amount_isValid;
}

bool OAITaxDetailUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_tax_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxable_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaxDetailUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
