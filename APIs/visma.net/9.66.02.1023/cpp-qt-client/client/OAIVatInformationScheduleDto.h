/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVatInformationScheduleDto.h
 *
 * 
 */

#ifndef OAIVatInformationScheduleDto_H
#define OAIVatInformationScheduleDto_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVatInformationScheduleDto : public OAIObject {
public:
    OAIVatInformationScheduleDto();
    OAIVatInformationScheduleDto(QString json);
    ~OAIVatInformationScheduleDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getDeductibleVatRate() const;
    void setDeductibleVatRate(const double &deductible_vat_rate);
    bool is_deductible_vat_rate_Set() const;
    bool is_deductible_vat_rate_Valid() const;

    QString getGroupType() const;
    void setGroupType(const QString &group_type);
    bool is_group_type_Set() const;
    bool is_group_type_Valid() const;

    double getMaxTaxableAmt() const;
    void setMaxTaxableAmt(const double &max_taxable_amt);
    bool is_max_taxable_amt_Set() const;
    bool is_max_taxable_amt_Valid() const;

    double getMinTaxableAmt() const;
    void setMinTaxableAmt(const double &min_taxable_amt);
    bool is_min_taxable_amt_Set() const;
    bool is_min_taxable_amt_Valid() const;

    QString getReportingGroup() const;
    void setReportingGroup(const QString &reporting_group);
    bool is_reporting_group_Set() const;
    bool is_reporting_group_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    double getVatRate() const;
    void setVatRate(const double &vat_rate);
    bool is_vat_rate_Set() const;
    bool is_vat_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_deductible_vat_rate;
    bool m_deductible_vat_rate_isSet;
    bool m_deductible_vat_rate_isValid;

    QString m_group_type;
    bool m_group_type_isSet;
    bool m_group_type_isValid;

    double m_max_taxable_amt;
    bool m_max_taxable_amt_isSet;
    bool m_max_taxable_amt_isValid;

    double m_min_taxable_amt;
    bool m_min_taxable_amt_isSet;
    bool m_min_taxable_amt_isValid;

    QString m_reporting_group;
    bool m_reporting_group_isSet;
    bool m_reporting_group_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    double m_vat_rate;
    bool m_vat_rate_isSet;
    bool m_vat_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVatInformationScheduleDto)

#endif // OAIVatInformationScheduleDto_H
