/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBookSettingsInFixedAssetClassDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBookSettingsInFixedAssetClassDto::OAIBookSettingsInFixedAssetClassDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBookSettingsInFixedAssetClassDto::OAIBookSettingsInFixedAssetClassDto() {
    this->initializeModel();
}

OAIBookSettingsInFixedAssetClassDto::~OAIBookSettingsInFixedAssetClassDto() {}

void OAIBookSettingsInFixedAssetClassDto::initializeModel() {

    m_book_id_isSet = false;
    m_book_id_isValid = false;

    m_depreciation_method_id_isSet = false;
    m_depreciation_method_id_isValid = false;
}

void OAIBookSettingsInFixedAssetClassDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBookSettingsInFixedAssetClassDto::fromJsonObject(QJsonObject json) {

    m_book_id_isValid = ::OpenAPI::fromJsonValue(m_book_id, json[QString("bookID")]);
    m_book_id_isSet = !json[QString("bookID")].isNull() && m_book_id_isValid;

    m_depreciation_method_id_isValid = ::OpenAPI::fromJsonValue(m_depreciation_method_id, json[QString("depreciationMethodID")]);
    m_depreciation_method_id_isSet = !json[QString("depreciationMethodID")].isNull() && m_depreciation_method_id_isValid;
}

QString OAIBookSettingsInFixedAssetClassDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBookSettingsInFixedAssetClassDto::asJsonObject() const {
    QJsonObject obj;
    if (m_book_id_isSet) {
        obj.insert(QString("bookID"), ::OpenAPI::toJsonValue(m_book_id));
    }
    if (m_depreciation_method_id_isSet) {
        obj.insert(QString("depreciationMethodID"), ::OpenAPI::toJsonValue(m_depreciation_method_id));
    }
    return obj;
}

QString OAIBookSettingsInFixedAssetClassDto::getBookId() const {
    return m_book_id;
}
void OAIBookSettingsInFixedAssetClassDto::setBookId(const QString &book_id) {
    m_book_id = book_id;
    m_book_id_isSet = true;
}

bool OAIBookSettingsInFixedAssetClassDto::is_book_id_Set() const{
    return m_book_id_isSet;
}

bool OAIBookSettingsInFixedAssetClassDto::is_book_id_Valid() const{
    return m_book_id_isValid;
}

QString OAIBookSettingsInFixedAssetClassDto::getDepreciationMethodId() const {
    return m_depreciation_method_id;
}
void OAIBookSettingsInFixedAssetClassDto::setDepreciationMethodId(const QString &depreciation_method_id) {
    m_depreciation_method_id = depreciation_method_id;
    m_depreciation_method_id_isSet = true;
}

bool OAIBookSettingsInFixedAssetClassDto::is_depreciation_method_id_Set() const{
    return m_depreciation_method_id_isSet;
}

bool OAIBookSettingsInFixedAssetClassDto::is_depreciation_method_id_Valid() const{
    return m_depreciation_method_id_isValid;
}

bool OAIBookSettingsInFixedAssetClassDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_book_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_depreciation_method_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBookSettingsInFixedAssetClassDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
