/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIKitSpecificationsQueryParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIKitSpecificationsQueryParameters::OAIKitSpecificationsQueryParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIKitSpecificationsQueryParameters::OAIKitSpecificationsQueryParameters() {
    this->initializeModel();
}

OAIKitSpecificationsQueryParameters::~OAIKitSpecificationsQueryParameters() {}

void OAIKitSpecificationsQueryParameters::initializeModel() {

    m_created_date_time_isSet = false;
    m_created_date_time_isValid = false;

    m_created_date_time_condition_isSet = false;
    m_created_date_time_condition_isValid = false;

    m_kit_inventory_id_isSet = false;
    m_kit_inventory_id_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_modified_date_time_condition_isSet = false;
    m_last_modified_date_time_condition_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_revision_id_isSet = false;
    m_revision_id_isValid = false;
}

void OAIKitSpecificationsQueryParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIKitSpecificationsQueryParameters::fromJsonObject(QJsonObject json) {

    m_created_date_time_isValid = ::OpenAPI::fromJsonValue(m_created_date_time, json[QString("createdDateTime")]);
    m_created_date_time_isSet = !json[QString("createdDateTime")].isNull() && m_created_date_time_isValid;

    m_created_date_time_condition_isValid = ::OpenAPI::fromJsonValue(m_created_date_time_condition, json[QString("createdDateTimeCondition")]);
    m_created_date_time_condition_isSet = !json[QString("createdDateTimeCondition")].isNull() && m_created_date_time_condition_isValid;

    m_kit_inventory_id_isValid = ::OpenAPI::fromJsonValue(m_kit_inventory_id, json[QString("kitInventoryID")]);
    m_kit_inventory_id_isSet = !json[QString("kitInventoryID")].isNull() && m_kit_inventory_id_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_modified_date_time_condition_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time_condition, json[QString("lastModifiedDateTimeCondition")]);
    m_last_modified_date_time_condition_isSet = !json[QString("lastModifiedDateTimeCondition")].isNull() && m_last_modified_date_time_condition_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("pageNumber")]);
    m_page_number_isSet = !json[QString("pageNumber")].isNull() && m_page_number_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_revision_id_isValid = ::OpenAPI::fromJsonValue(m_revision_id, json[QString("revisionID")]);
    m_revision_id_isSet = !json[QString("revisionID")].isNull() && m_revision_id_isValid;
}

QString OAIKitSpecificationsQueryParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIKitSpecificationsQueryParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_time_isSet) {
        obj.insert(QString("createdDateTime"), ::OpenAPI::toJsonValue(m_created_date_time));
    }
    if (m_created_date_time_condition_isSet) {
        obj.insert(QString("createdDateTimeCondition"), ::OpenAPI::toJsonValue(m_created_date_time_condition));
    }
    if (m_kit_inventory_id_isSet) {
        obj.insert(QString("kitInventoryID"), ::OpenAPI::toJsonValue(m_kit_inventory_id));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_modified_date_time_condition_isSet) {
        obj.insert(QString("lastModifiedDateTimeCondition"), ::OpenAPI::toJsonValue(m_last_modified_date_time_condition));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("pageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_revision_id_isSet) {
        obj.insert(QString("revisionID"), ::OpenAPI::toJsonValue(m_revision_id));
    }
    return obj;
}

QString OAIKitSpecificationsQueryParameters::getCreatedDateTime() const {
    return m_created_date_time;
}
void OAIKitSpecificationsQueryParameters::setCreatedDateTime(const QString &created_date_time) {
    m_created_date_time = created_date_time;
    m_created_date_time_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_created_date_time_Set() const{
    return m_created_date_time_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_created_date_time_Valid() const{
    return m_created_date_time_isValid;
}

QString OAIKitSpecificationsQueryParameters::getCreatedDateTimeCondition() const {
    return m_created_date_time_condition;
}
void OAIKitSpecificationsQueryParameters::setCreatedDateTimeCondition(const QString &created_date_time_condition) {
    m_created_date_time_condition = created_date_time_condition;
    m_created_date_time_condition_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_created_date_time_condition_Set() const{
    return m_created_date_time_condition_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_created_date_time_condition_Valid() const{
    return m_created_date_time_condition_isValid;
}

QString OAIKitSpecificationsQueryParameters::getKitInventoryId() const {
    return m_kit_inventory_id;
}
void OAIKitSpecificationsQueryParameters::setKitInventoryId(const QString &kit_inventory_id) {
    m_kit_inventory_id = kit_inventory_id;
    m_kit_inventory_id_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_kit_inventory_id_Set() const{
    return m_kit_inventory_id_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_kit_inventory_id_Valid() const{
    return m_kit_inventory_id_isValid;
}

QString OAIKitSpecificationsQueryParameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIKitSpecificationsQueryParameters::setLastModifiedDateTime(const QString &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIKitSpecificationsQueryParameters::getLastModifiedDateTimeCondition() const {
    return m_last_modified_date_time_condition;
}
void OAIKitSpecificationsQueryParameters::setLastModifiedDateTimeCondition(const QString &last_modified_date_time_condition) {
    m_last_modified_date_time_condition = last_modified_date_time_condition;
    m_last_modified_date_time_condition_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_last_modified_date_time_condition_Set() const{
    return m_last_modified_date_time_condition_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_last_modified_date_time_condition_Valid() const{
    return m_last_modified_date_time_condition_isValid;
}

qint32 OAIKitSpecificationsQueryParameters::getPageNumber() const {
    return m_page_number;
}
void OAIKitSpecificationsQueryParameters::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_page_number_Valid() const{
    return m_page_number_isValid;
}

qint32 OAIKitSpecificationsQueryParameters::getPageSize() const {
    return m_page_size;
}
void OAIKitSpecificationsQueryParameters::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIKitSpecificationsQueryParameters::getRevisionId() const {
    return m_revision_id;
}
void OAIKitSpecificationsQueryParameters::setRevisionId(const QString &revision_id) {
    m_revision_id = revision_id;
    m_revision_id_isSet = true;
}

bool OAIKitSpecificationsQueryParameters::is_revision_id_Set() const{
    return m_revision_id_isSet;
}

bool OAIKitSpecificationsQueryParameters::is_revision_id_Valid() const{
    return m_revision_id_isValid;
}

bool OAIKitSpecificationsQueryParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_time_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_kit_inventory_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_revision_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIKitSpecificationsQueryParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
