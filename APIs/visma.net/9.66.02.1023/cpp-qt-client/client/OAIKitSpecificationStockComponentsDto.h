/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIKitSpecificationStockComponentsDto.h
 *
 * 
 */

#ifndef OAIKitSpecificationStockComponentsDto_H
#define OAIKitSpecificationStockComponentsDto_H

#include <QJsonObject>

#include "OAIMetadataDto.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetadataDto;

class OAIKitSpecificationStockComponentsDto : public OAIObject {
public:
    OAIKitSpecificationStockComponentsDto();
    OAIKitSpecificationStockComponentsDto(QString json);
    ~OAIKitSpecificationStockComponentsDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAllowComponentQtyVariance() const;
    void setAllowComponentQtyVariance(const bool &allow_component_qty_variance);
    bool is_allow_component_qty_variance_Set() const;
    bool is_allow_component_qty_variance_Valid() const;

    bool isAllowComponentSubstitution() const;
    void setAllowComponentSubstitution(const bool &allow_component_substitution);
    bool is_allow_component_substitution_Set() const;
    bool is_allow_component_substitution_Valid() const;

    QString getComponentId() const;
    void setComponentId(const QString &component_id);
    bool is_component_id_Set() const;
    bool is_component_id_Valid() const;

    double getComponentQty() const;
    void setComponentQty(const double &component_qty);
    bool is_component_qty_Set() const;
    bool is_component_qty_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getDisassemblyCoeff() const;
    void setDisassemblyCoeff(const double &disassembly_coeff);
    bool is_disassembly_coeff_Set() const;
    bool is_disassembly_coeff_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    qint32 getLineNbr() const;
    void setLineNbr(const qint32 &line_nbr);
    bool is_line_nbr_Set() const;
    bool is_line_nbr_Valid() const;

    double getMaxComponentQty() const;
    void setMaxComponentQty(const double &max_component_qty);
    bool is_max_component_qty_Set() const;
    bool is_max_component_qty_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    double getMinComponentQty() const;
    void setMinComponentQty(const double &min_component_qty);
    bool is_min_component_qty_Set() const;
    bool is_min_component_qty_Valid() const;

    QString getUom() const;
    void setUom(const QString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_allow_component_qty_variance;
    bool m_allow_component_qty_variance_isSet;
    bool m_allow_component_qty_variance_isValid;

    bool m_allow_component_substitution;
    bool m_allow_component_substitution_isSet;
    bool m_allow_component_substitution_isValid;

    QString m_component_id;
    bool m_component_id_isSet;
    bool m_component_id_isValid;

    double m_component_qty;
    bool m_component_qty_isSet;
    bool m_component_qty_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_disassembly_coeff;
    bool m_disassembly_coeff_isSet;
    bool m_disassembly_coeff_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    qint32 m_line_nbr;
    bool m_line_nbr_isSet;
    bool m_line_nbr_isValid;

    double m_max_component_qty;
    bool m_max_component_qty_isSet;
    bool m_max_component_qty_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    double m_min_component_qty;
    bool m_min_component_qty_isSet;
    bool m_min_component_qty_isValid;

    QString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIKitSpecificationStockComponentsDto)

#endif // OAIKitSpecificationStockComponentsDto_H
