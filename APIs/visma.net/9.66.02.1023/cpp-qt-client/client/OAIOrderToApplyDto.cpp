/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderToApplyDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderToApplyDto::OAIOrderToApplyDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderToApplyDto::OAIOrderToApplyDto() {
    this->initializeModel();
}

OAIOrderToApplyDto::~OAIOrderToApplyDto() {}

void OAIOrderToApplyDto::initializeModel() {

    m_applied_to_order_isSet = false;
    m_applied_to_order_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_cash_discount_date_isSet = false;
    m_cash_discount_date_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_due_date_isSet = false;
    m_due_date_isValid = false;

    m_invoice_date_isSet = false;
    m_invoice_date_isValid = false;

    m_invoice_nbr_isSet = false;
    m_invoice_nbr_isValid = false;

    m_order_no_isSet = false;
    m_order_no_isValid = false;

    m_order_total_isSet = false;
    m_order_total_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_transferred_to_invoice_isSet = false;
    m_transferred_to_invoice_isValid = false;
}

void OAIOrderToApplyDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderToApplyDto::fromJsonObject(QJsonObject json) {

    m_applied_to_order_isValid = ::OpenAPI::fromJsonValue(m_applied_to_order, json[QString("appliedToOrder")]);
    m_applied_to_order_isSet = !json[QString("appliedToOrder")].isNull() && m_applied_to_order_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_cash_discount_date_isValid = ::OpenAPI::fromJsonValue(m_cash_discount_date, json[QString("cashDiscountDate")]);
    m_cash_discount_date_isSet = !json[QString("cashDiscountDate")].isNull() && m_cash_discount_date_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_due_date_isValid = ::OpenAPI::fromJsonValue(m_due_date, json[QString("dueDate")]);
    m_due_date_isSet = !json[QString("dueDate")].isNull() && m_due_date_isValid;

    m_invoice_date_isValid = ::OpenAPI::fromJsonValue(m_invoice_date, json[QString("invoiceDate")]);
    m_invoice_date_isSet = !json[QString("invoiceDate")].isNull() && m_invoice_date_isValid;

    m_invoice_nbr_isValid = ::OpenAPI::fromJsonValue(m_invoice_nbr, json[QString("invoiceNbr")]);
    m_invoice_nbr_isSet = !json[QString("invoiceNbr")].isNull() && m_invoice_nbr_isValid;

    m_order_no_isValid = ::OpenAPI::fromJsonValue(m_order_no, json[QString("orderNo")]);
    m_order_no_isSet = !json[QString("orderNo")].isNull() && m_order_no_isValid;

    m_order_total_isValid = ::OpenAPI::fromJsonValue(m_order_total, json[QString("orderTotal")]);
    m_order_total_isSet = !json[QString("orderTotal")].isNull() && m_order_total_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_transferred_to_invoice_isValid = ::OpenAPI::fromJsonValue(m_transferred_to_invoice, json[QString("transferredToInvoice")]);
    m_transferred_to_invoice_isSet = !json[QString("transferredToInvoice")].isNull() && m_transferred_to_invoice_isValid;
}

QString OAIOrderToApplyDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderToApplyDto::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_to_order_isSet) {
        obj.insert(QString("appliedToOrder"), ::OpenAPI::toJsonValue(m_applied_to_order));
    }
    if (m_balance_isSet) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_cash_discount_date_isSet) {
        obj.insert(QString("cashDiscountDate"), ::OpenAPI::toJsonValue(m_cash_discount_date));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_due_date_isSet) {
        obj.insert(QString("dueDate"), ::OpenAPI::toJsonValue(m_due_date));
    }
    if (m_invoice_date_isSet) {
        obj.insert(QString("invoiceDate"), ::OpenAPI::toJsonValue(m_invoice_date));
    }
    if (m_invoice_nbr_isSet) {
        obj.insert(QString("invoiceNbr"), ::OpenAPI::toJsonValue(m_invoice_nbr));
    }
    if (m_order_no_isSet) {
        obj.insert(QString("orderNo"), ::OpenAPI::toJsonValue(m_order_no));
    }
    if (m_order_total_isSet) {
        obj.insert(QString("orderTotal"), ::OpenAPI::toJsonValue(m_order_total));
    }
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_transferred_to_invoice_isSet) {
        obj.insert(QString("transferredToInvoice"), ::OpenAPI::toJsonValue(m_transferred_to_invoice));
    }
    return obj;
}

double OAIOrderToApplyDto::getAppliedToOrder() const {
    return m_applied_to_order;
}
void OAIOrderToApplyDto::setAppliedToOrder(const double &applied_to_order) {
    m_applied_to_order = applied_to_order;
    m_applied_to_order_isSet = true;
}

bool OAIOrderToApplyDto::is_applied_to_order_Set() const{
    return m_applied_to_order_isSet;
}

bool OAIOrderToApplyDto::is_applied_to_order_Valid() const{
    return m_applied_to_order_isValid;
}

double OAIOrderToApplyDto::getBalance() const {
    return m_balance;
}
void OAIOrderToApplyDto::setBalance(const double &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIOrderToApplyDto::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIOrderToApplyDto::is_balance_Valid() const{
    return m_balance_isValid;
}

QDateTime OAIOrderToApplyDto::getCashDiscountDate() const {
    return m_cash_discount_date;
}
void OAIOrderToApplyDto::setCashDiscountDate(const QDateTime &cash_discount_date) {
    m_cash_discount_date = cash_discount_date;
    m_cash_discount_date_isSet = true;
}

bool OAIOrderToApplyDto::is_cash_discount_date_Set() const{
    return m_cash_discount_date_isSet;
}

bool OAIOrderToApplyDto::is_cash_discount_date_Valid() const{
    return m_cash_discount_date_isValid;
}

QString OAIOrderToApplyDto::getCurrency() const {
    return m_currency;
}
void OAIOrderToApplyDto::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIOrderToApplyDto::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIOrderToApplyDto::is_currency_Valid() const{
    return m_currency_isValid;
}

QDateTime OAIOrderToApplyDto::getDate() const {
    return m_date;
}
void OAIOrderToApplyDto::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIOrderToApplyDto::is_date_Set() const{
    return m_date_isSet;
}

bool OAIOrderToApplyDto::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIOrderToApplyDto::getDescription() const {
    return m_description;
}
void OAIOrderToApplyDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIOrderToApplyDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIOrderToApplyDto::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIOrderToApplyDto::getDueDate() const {
    return m_due_date;
}
void OAIOrderToApplyDto::setDueDate(const QDateTime &due_date) {
    m_due_date = due_date;
    m_due_date_isSet = true;
}

bool OAIOrderToApplyDto::is_due_date_Set() const{
    return m_due_date_isSet;
}

bool OAIOrderToApplyDto::is_due_date_Valid() const{
    return m_due_date_isValid;
}

QDateTime OAIOrderToApplyDto::getInvoiceDate() const {
    return m_invoice_date;
}
void OAIOrderToApplyDto::setInvoiceDate(const QDateTime &invoice_date) {
    m_invoice_date = invoice_date;
    m_invoice_date_isSet = true;
}

bool OAIOrderToApplyDto::is_invoice_date_Set() const{
    return m_invoice_date_isSet;
}

bool OAIOrderToApplyDto::is_invoice_date_Valid() const{
    return m_invoice_date_isValid;
}

QString OAIOrderToApplyDto::getInvoiceNbr() const {
    return m_invoice_nbr;
}
void OAIOrderToApplyDto::setInvoiceNbr(const QString &invoice_nbr) {
    m_invoice_nbr = invoice_nbr;
    m_invoice_nbr_isSet = true;
}

bool OAIOrderToApplyDto::is_invoice_nbr_Set() const{
    return m_invoice_nbr_isSet;
}

bool OAIOrderToApplyDto::is_invoice_nbr_Valid() const{
    return m_invoice_nbr_isValid;
}

QString OAIOrderToApplyDto::getOrderNo() const {
    return m_order_no;
}
void OAIOrderToApplyDto::setOrderNo(const QString &order_no) {
    m_order_no = order_no;
    m_order_no_isSet = true;
}

bool OAIOrderToApplyDto::is_order_no_Set() const{
    return m_order_no_isSet;
}

bool OAIOrderToApplyDto::is_order_no_Valid() const{
    return m_order_no_isValid;
}

double OAIOrderToApplyDto::getOrderTotal() const {
    return m_order_total;
}
void OAIOrderToApplyDto::setOrderTotal(const double &order_total) {
    m_order_total = order_total;
    m_order_total_isSet = true;
}

bool OAIOrderToApplyDto::is_order_total_Set() const{
    return m_order_total_isSet;
}

bool OAIOrderToApplyDto::is_order_total_Valid() const{
    return m_order_total_isValid;
}

QString OAIOrderToApplyDto::getOrderType() const {
    return m_order_type;
}
void OAIOrderToApplyDto::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAIOrderToApplyDto::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAIOrderToApplyDto::is_order_type_Valid() const{
    return m_order_type_isValid;
}

QString OAIOrderToApplyDto::getStatus() const {
    return m_status;
}
void OAIOrderToApplyDto::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrderToApplyDto::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrderToApplyDto::is_status_Valid() const{
    return m_status_isValid;
}

double OAIOrderToApplyDto::getTransferredToInvoice() const {
    return m_transferred_to_invoice;
}
void OAIOrderToApplyDto::setTransferredToInvoice(const double &transferred_to_invoice) {
    m_transferred_to_invoice = transferred_to_invoice;
    m_transferred_to_invoice_isSet = true;
}

bool OAIOrderToApplyDto::is_transferred_to_invoice_Set() const{
    return m_transferred_to_invoice_isSet;
}

bool OAIOrderToApplyDto::is_transferred_to_invoice_Valid() const{
    return m_transferred_to_invoice_isValid;
}

bool OAIOrderToApplyDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_to_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_discount_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_due_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transferred_to_invoice_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderToApplyDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
