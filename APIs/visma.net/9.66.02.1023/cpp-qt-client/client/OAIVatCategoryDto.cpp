/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVatCategoryDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVatCategoryDto::OAIVatCategoryDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVatCategoryDto::OAIVatCategoryDto() {
    this->initializeModel();
}

OAIVatCategoryDto::~OAIVatCategoryDto() {}

void OAIVatCategoryDto::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_exclude_listed_taxes_isSet = false;
    m_exclude_listed_taxes_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_vat_category_id_isSet = false;
    m_vat_category_id_isValid = false;

    m_vat_category_lines_isSet = false;
    m_vat_category_lines_isValid = false;
}

void OAIVatCategoryDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVatCategoryDto::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_exclude_listed_taxes_isValid = ::OpenAPI::fromJsonValue(m_exclude_listed_taxes, json[QString("excludeListedTaxes")]);
    m_exclude_listed_taxes_isSet = !json[QString("excludeListedTaxes")].isNull() && m_exclude_listed_taxes_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_vat_category_id_isValid = ::OpenAPI::fromJsonValue(m_vat_category_id, json[QString("vatCategoryId")]);
    m_vat_category_id_isSet = !json[QString("vatCategoryId")].isNull() && m_vat_category_id_isValid;

    m_vat_category_lines_isValid = ::OpenAPI::fromJsonValue(m_vat_category_lines, json[QString("vatCategoryLines")]);
    m_vat_category_lines_isSet = !json[QString("vatCategoryLines")].isNull() && m_vat_category_lines_isValid;
}

QString OAIVatCategoryDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVatCategoryDto::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_exclude_listed_taxes_isSet) {
        obj.insert(QString("excludeListedTaxes"), ::OpenAPI::toJsonValue(m_exclude_listed_taxes));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_vat_category_id_isSet) {
        obj.insert(QString("vatCategoryId"), ::OpenAPI::toJsonValue(m_vat_category_id));
    }
    if (m_vat_category_lines.size() > 0) {
        obj.insert(QString("vatCategoryLines"), ::OpenAPI::toJsonValue(m_vat_category_lines));
    }
    return obj;
}

bool OAIVatCategoryDto::isActive() const {
    return m_active;
}
void OAIVatCategoryDto::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIVatCategoryDto::is_active_Set() const{
    return m_active_isSet;
}

bool OAIVatCategoryDto::is_active_Valid() const{
    return m_active_isValid;
}

QString OAIVatCategoryDto::getDescription() const {
    return m_description;
}
void OAIVatCategoryDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIVatCategoryDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIVatCategoryDto::is_description_Valid() const{
    return m_description_isValid;
}

bool OAIVatCategoryDto::isExcludeListedTaxes() const {
    return m_exclude_listed_taxes;
}
void OAIVatCategoryDto::setExcludeListedTaxes(const bool &exclude_listed_taxes) {
    m_exclude_listed_taxes = exclude_listed_taxes;
    m_exclude_listed_taxes_isSet = true;
}

bool OAIVatCategoryDto::is_exclude_listed_taxes_Set() const{
    return m_exclude_listed_taxes_isSet;
}

bool OAIVatCategoryDto::is_exclude_listed_taxes_Valid() const{
    return m_exclude_listed_taxes_isValid;
}

QDateTime OAIVatCategoryDto::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIVatCategoryDto::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIVatCategoryDto::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIVatCategoryDto::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIVatCategoryDto::getVatCategoryId() const {
    return m_vat_category_id;
}
void OAIVatCategoryDto::setVatCategoryId(const QString &vat_category_id) {
    m_vat_category_id = vat_category_id;
    m_vat_category_id_isSet = true;
}

bool OAIVatCategoryDto::is_vat_category_id_Set() const{
    return m_vat_category_id_isSet;
}

bool OAIVatCategoryDto::is_vat_category_id_Valid() const{
    return m_vat_category_id_isValid;
}

QList<OAIVatCategoryLineDto> OAIVatCategoryDto::getVatCategoryLines() const {
    return m_vat_category_lines;
}
void OAIVatCategoryDto::setVatCategoryLines(const QList<OAIVatCategoryLineDto> &vat_category_lines) {
    m_vat_category_lines = vat_category_lines;
    m_vat_category_lines_isSet = true;
}

bool OAIVatCategoryDto::is_vat_category_lines_Set() const{
    return m_vat_category_lines_isSet;
}

bool OAIVatCategoryDto::is_vat_category_lines_Valid() const{
    return m_vat_category_lines_isValid;
}

bool OAIVatCategoryDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exclude_listed_taxes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_category_lines.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVatCategoryDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
