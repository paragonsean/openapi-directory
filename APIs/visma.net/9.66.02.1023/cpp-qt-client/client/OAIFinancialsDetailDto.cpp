/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFinancialsDetailDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFinancialsDetailDto::OAIFinancialsDetailDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFinancialsDetailDto::OAIFinancialsDetailDto() {
    this->initializeModel();
}

OAIFinancialsDetailDto::~OAIFinancialsDetailDto() {}

void OAIFinancialsDetailDto::initializeModel() {

    m_batch_number_isSet = false;
    m_batch_number_isValid = false;

    m_branch_isSet = false;
    m_branch_isValid = false;

    m_clear_date_isSet = false;
    m_clear_date_isValid = false;

    m_cleared_isSet = false;
    m_cleared_isValid = false;

    m_tax_calc_mode_isSet = false;
    m_tax_calc_mode_isValid = false;

    m_tax_zone_isSet = false;
    m_tax_zone_isValid = false;
}

void OAIFinancialsDetailDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFinancialsDetailDto::fromJsonObject(QJsonObject json) {

    m_batch_number_isValid = ::OpenAPI::fromJsonValue(m_batch_number, json[QString("batchNumber")]);
    m_batch_number_isSet = !json[QString("batchNumber")].isNull() && m_batch_number_isValid;

    m_branch_isValid = ::OpenAPI::fromJsonValue(m_branch, json[QString("branch")]);
    m_branch_isSet = !json[QString("branch")].isNull() && m_branch_isValid;

    m_clear_date_isValid = ::OpenAPI::fromJsonValue(m_clear_date, json[QString("clearDate")]);
    m_clear_date_isSet = !json[QString("clearDate")].isNull() && m_clear_date_isValid;

    m_cleared_isValid = ::OpenAPI::fromJsonValue(m_cleared, json[QString("cleared")]);
    m_cleared_isSet = !json[QString("cleared")].isNull() && m_cleared_isValid;

    m_tax_calc_mode_isValid = ::OpenAPI::fromJsonValue(m_tax_calc_mode, json[QString("taxCalcMode")]);
    m_tax_calc_mode_isSet = !json[QString("taxCalcMode")].isNull() && m_tax_calc_mode_isValid;

    m_tax_zone_isValid = ::OpenAPI::fromJsonValue(m_tax_zone, json[QString("taxZone")]);
    m_tax_zone_isSet = !json[QString("taxZone")].isNull() && m_tax_zone_isValid;
}

QString OAIFinancialsDetailDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFinancialsDetailDto::asJsonObject() const {
    QJsonObject obj;
    if (m_batch_number_isSet) {
        obj.insert(QString("batchNumber"), ::OpenAPI::toJsonValue(m_batch_number));
    }
    if (m_branch.isSet()) {
        obj.insert(QString("branch"), ::OpenAPI::toJsonValue(m_branch));
    }
    if (m_clear_date_isSet) {
        obj.insert(QString("clearDate"), ::OpenAPI::toJsonValue(m_clear_date));
    }
    if (m_cleared_isSet) {
        obj.insert(QString("cleared"), ::OpenAPI::toJsonValue(m_cleared));
    }
    if (m_tax_calc_mode_isSet) {
        obj.insert(QString("taxCalcMode"), ::OpenAPI::toJsonValue(m_tax_calc_mode));
    }
    if (m_tax_zone.isSet()) {
        obj.insert(QString("taxZone"), ::OpenAPI::toJsonValue(m_tax_zone));
    }
    return obj;
}

QString OAIFinancialsDetailDto::getBatchNumber() const {
    return m_batch_number;
}
void OAIFinancialsDetailDto::setBatchNumber(const QString &batch_number) {
    m_batch_number = batch_number;
    m_batch_number_isSet = true;
}

bool OAIFinancialsDetailDto::is_batch_number_Set() const{
    return m_batch_number_isSet;
}

bool OAIFinancialsDetailDto::is_batch_number_Valid() const{
    return m_batch_number_isValid;
}

OAIBranchInFinancialsDetailDto OAIFinancialsDetailDto::getBranch() const {
    return m_branch;
}
void OAIFinancialsDetailDto::setBranch(const OAIBranchInFinancialsDetailDto &branch) {
    m_branch = branch;
    m_branch_isSet = true;
}

bool OAIFinancialsDetailDto::is_branch_Set() const{
    return m_branch_isSet;
}

bool OAIFinancialsDetailDto::is_branch_Valid() const{
    return m_branch_isValid;
}

QDateTime OAIFinancialsDetailDto::getClearDate() const {
    return m_clear_date;
}
void OAIFinancialsDetailDto::setClearDate(const QDateTime &clear_date) {
    m_clear_date = clear_date;
    m_clear_date_isSet = true;
}

bool OAIFinancialsDetailDto::is_clear_date_Set() const{
    return m_clear_date_isSet;
}

bool OAIFinancialsDetailDto::is_clear_date_Valid() const{
    return m_clear_date_isValid;
}

bool OAIFinancialsDetailDto::isCleared() const {
    return m_cleared;
}
void OAIFinancialsDetailDto::setCleared(const bool &cleared) {
    m_cleared = cleared;
    m_cleared_isSet = true;
}

bool OAIFinancialsDetailDto::is_cleared_Set() const{
    return m_cleared_isSet;
}

bool OAIFinancialsDetailDto::is_cleared_Valid() const{
    return m_cleared_isValid;
}

QString OAIFinancialsDetailDto::getTaxCalcMode() const {
    return m_tax_calc_mode;
}
void OAIFinancialsDetailDto::setTaxCalcMode(const QString &tax_calc_mode) {
    m_tax_calc_mode = tax_calc_mode;
    m_tax_calc_mode_isSet = true;
}

bool OAIFinancialsDetailDto::is_tax_calc_mode_Set() const{
    return m_tax_calc_mode_isSet;
}

bool OAIFinancialsDetailDto::is_tax_calc_mode_Valid() const{
    return m_tax_calc_mode_isValid;
}

OAITaxZoneInFinancialsDetailDto OAIFinancialsDetailDto::getTaxZone() const {
    return m_tax_zone;
}
void OAIFinancialsDetailDto::setTaxZone(const OAITaxZoneInFinancialsDetailDto &tax_zone) {
    m_tax_zone = tax_zone;
    m_tax_zone_isSet = true;
}

bool OAIFinancialsDetailDto::is_tax_zone_Set() const{
    return m_tax_zone_isSet;
}

bool OAIFinancialsDetailDto::is_tax_zone_Valid() const{
    return m_tax_zone_isValid;
}

bool OAIFinancialsDetailDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_batch_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_branch.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_clear_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cleared_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_calc_mode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_zone.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFinancialsDetailDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
