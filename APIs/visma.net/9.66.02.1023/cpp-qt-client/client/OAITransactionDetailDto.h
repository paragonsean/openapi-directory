/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITransactionDetailDto.h
 *
 * 
 */

#ifndef OAITransactionDetailDto_H
#define OAITransactionDetailDto_H

#include <QJsonObject>

#include "OAIAccountNumberTypeDescriptionDto.h"
#include "OAIBranchInTransactionDetailDto.h"
#include "OAIItemInTransactionDetailDto.h"
#include "OAIOffsetSubAccountInTransactionDetailDto.h"
#include "OAIProjectInTransactionDetailDto.h"
#include "OAIProjectTaskInTransactionDetailDto.h"
#include "OAITaxCategoryInTransactionDetailDto.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBranchInTransactionDetailDto;
class OAIItemInTransactionDetailDto;
class OAIAccountNumberTypeDescriptionDto;
class OAIOffsetSubAccountInTransactionDetailDto;
class OAIProjectInTransactionDetailDto;
class OAIProjectTaskInTransactionDetailDto;
class OAITaxCategoryInTransactionDetailDto;

class OAITransactionDetailDto : public OAIObject {
public:
    OAITransactionDetailDto();
    OAITransactionDetailDto(QString json);
    ~OAITransactionDetailDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    OAIBranchInTransactionDetailDto getBranch() const;
    void setBranch(const OAIBranchInTransactionDetailDto &branch);
    bool is_branch_Set() const;
    bool is_branch_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIItemInTransactionDetailDto getItem() const;
    void setItem(const OAIItemInTransactionDetailDto &item);
    bool is_item_Set() const;
    bool is_item_Valid() const;

    qint32 getLineNumber() const;
    void setLineNumber(const qint32 &line_number);
    bool is_line_number_Set() const;
    bool is_line_number_Valid() const;

    bool isNonBillable() const;
    void setNonBillable(const bool &non_billable);
    bool is_non_billable_Set() const;
    bool is_non_billable_Valid() const;

    OAIAccountNumberTypeDescriptionDto getOffsetAccount() const;
    void setOffsetAccount(const OAIAccountNumberTypeDescriptionDto &offset_account);
    bool is_offset_account_Set() const;
    bool is_offset_account_Valid() const;

    OAIAccountNumberTypeDescriptionDto getOffsetCashAccount() const;
    void setOffsetCashAccount(const OAIAccountNumberTypeDescriptionDto &offset_cash_account);
    bool is_offset_cash_account_Set() const;
    bool is_offset_cash_account_Valid() const;

    OAIOffsetSubAccountInTransactionDetailDto getOffsetSubAccount() const;
    void setOffsetSubAccount(const OAIOffsetSubAccountInTransactionDetailDto &offset_sub_account);
    bool is_offset_sub_account_Set() const;
    bool is_offset_sub_account_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    OAIProjectInTransactionDetailDto getProject() const;
    void setProject(const OAIProjectInTransactionDetailDto &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    OAIProjectTaskInTransactionDetailDto getProjectTask() const;
    void setProjectTask(const OAIProjectTaskInTransactionDetailDto &project_task);
    bool is_project_task_Set() const;
    bool is_project_task_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    OAITaxCategoryInTransactionDetailDto getTaxCategory() const;
    void setTaxCategory(const OAITaxCategoryInTransactionDetailDto &tax_category);
    bool is_tax_category_Set() const;
    bool is_tax_category_Valid() const;

    QString getUom() const;
    void setUom(const QString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    OAIBranchInTransactionDetailDto m_branch;
    bool m_branch_isSet;
    bool m_branch_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIItemInTransactionDetailDto m_item;
    bool m_item_isSet;
    bool m_item_isValid;

    qint32 m_line_number;
    bool m_line_number_isSet;
    bool m_line_number_isValid;

    bool m_non_billable;
    bool m_non_billable_isSet;
    bool m_non_billable_isValid;

    OAIAccountNumberTypeDescriptionDto m_offset_account;
    bool m_offset_account_isSet;
    bool m_offset_account_isValid;

    OAIAccountNumberTypeDescriptionDto m_offset_cash_account;
    bool m_offset_cash_account_isSet;
    bool m_offset_cash_account_isValid;

    OAIOffsetSubAccountInTransactionDetailDto m_offset_sub_account;
    bool m_offset_sub_account_isSet;
    bool m_offset_sub_account_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    OAIProjectInTransactionDetailDto m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    OAIProjectTaskInTransactionDetailDto m_project_task;
    bool m_project_task_isSet;
    bool m_project_task_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    OAITaxCategoryInTransactionDetailDto m_tax_category;
    bool m_tax_category_isSet;
    bool m_tax_category_isValid;

    QString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITransactionDetailDto)

#endif // OAITransactionDetailDto_H
