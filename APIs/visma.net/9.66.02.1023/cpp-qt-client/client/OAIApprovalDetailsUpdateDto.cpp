/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIApprovalDetailsUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIApprovalDetailsUpdateDto::OAIApprovalDetailsUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIApprovalDetailsUpdateDto::OAIApprovalDetailsUpdateDto() {
    this->initializeModel();
}

OAIApprovalDetailsUpdateDto::~OAIApprovalDetailsUpdateDto() {}

void OAIApprovalDetailsUpdateDto::initializeModel() {

    m_attachment_id_isSet = false;
    m_attachment_id_isValid = false;

    m_comment_isSet = false;
    m_comment_isValid = false;
}

void OAIApprovalDetailsUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIApprovalDetailsUpdateDto::fromJsonObject(QJsonObject json) {

    m_attachment_id_isValid = ::OpenAPI::fromJsonValue(m_attachment_id, json[QString("attachmentID")]);
    m_attachment_id_isSet = !json[QString("attachmentID")].isNull() && m_attachment_id_isValid;

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;
}

QString OAIApprovalDetailsUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIApprovalDetailsUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_attachment_id.isSet()) {
        obj.insert(QString("attachmentID"), ::OpenAPI::toJsonValue(m_attachment_id));
    }
    if (m_comment.isSet()) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    return obj;
}

OAIDtoValueOfString OAIApprovalDetailsUpdateDto::getAttachmentId() const {
    return m_attachment_id;
}
void OAIApprovalDetailsUpdateDto::setAttachmentId(const OAIDtoValueOfString &attachment_id) {
    m_attachment_id = attachment_id;
    m_attachment_id_isSet = true;
}

bool OAIApprovalDetailsUpdateDto::is_attachment_id_Set() const{
    return m_attachment_id_isSet;
}

bool OAIApprovalDetailsUpdateDto::is_attachment_id_Valid() const{
    return m_attachment_id_isValid;
}

OAIDtoValueOfString OAIApprovalDetailsUpdateDto::getComment() const {
    return m_comment;
}
void OAIApprovalDetailsUpdateDto::setComment(const OAIDtoValueOfString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAIApprovalDetailsUpdateDto::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAIApprovalDetailsUpdateDto::is_comment_Valid() const{
    return m_comment_isValid;
}

bool OAIApprovalDetailsUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attachment_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_comment.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIApprovalDetailsUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
