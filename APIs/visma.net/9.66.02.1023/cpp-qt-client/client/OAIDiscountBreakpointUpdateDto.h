/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDiscountBreakpointUpdateDto.h
 *
 * 
 */

#ifndef OAIDiscountBreakpointUpdateDto_H
#define OAIDiscountBreakpointUpdateDto_H

#include <QJsonObject>

#include "OAIDtoValueOfInt32.h"
#include "OAIDtoValueOfNullableOfDateTime.h"
#include "OAIDtoValueOfNullableOfDecimal.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDtoValueOfNullableOfDecimal;
class OAIDtoValueOfInt32;
class OAIDtoValueOfNullableOfDateTime;

class OAIDiscountBreakpointUpdateDto : public OAIObject {
public:
    OAIDiscountBreakpointUpdateDto();
    OAIDiscountBreakpointUpdateDto(QString json);
    ~OAIDiscountBreakpointUpdateDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDtoValueOfNullableOfDecimal getBreakAmount() const;
    void setBreakAmount(const OAIDtoValueOfNullableOfDecimal &break_amount);
    bool is_break_amount_Set() const;
    bool is_break_amount_Valid() const;

    OAIDtoValueOfNullableOfDecimal getDiscountAmount() const;
    void setDiscountAmount(const OAIDtoValueOfNullableOfDecimal &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    OAIDtoValueOfNullableOfDecimal getDiscountPercent() const;
    void setDiscountPercent(const OAIDtoValueOfNullableOfDecimal &discount_percent);
    bool is_discount_percent_Set() const;
    bool is_discount_percent_Valid() const;

    OAIDtoValueOfInt32 getLineNbr() const;
    void setLineNbr(const OAIDtoValueOfInt32 &line_nbr);
    bool is_line_nbr_Set() const;
    bool is_line_nbr_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    OAIDtoValueOfNullableOfDecimal getPendingBreakAmount() const;
    void setPendingBreakAmount(const OAIDtoValueOfNullableOfDecimal &pending_break_amount);
    bool is_pending_break_amount_Set() const;
    bool is_pending_break_amount_Valid() const;

    OAIDtoValueOfNullableOfDecimal getPendingBreakQuantity() const;
    void setPendingBreakQuantity(const OAIDtoValueOfNullableOfDecimal &pending_break_quantity);
    bool is_pending_break_quantity_Set() const;
    bool is_pending_break_quantity_Valid() const;

    OAIDtoValueOfNullableOfDateTime getPendingDate() const;
    void setPendingDate(const OAIDtoValueOfNullableOfDateTime &pending_date);
    bool is_pending_date_Set() const;
    bool is_pending_date_Valid() const;

    OAIDtoValueOfNullableOfDecimal getPendingDiscountAmount() const;
    void setPendingDiscountAmount(const OAIDtoValueOfNullableOfDecimal &pending_discount_amount);
    bool is_pending_discount_amount_Set() const;
    bool is_pending_discount_amount_Valid() const;

    OAIDtoValueOfNullableOfDecimal getPendingDiscountPercent() const;
    void setPendingDiscountPercent(const OAIDtoValueOfNullableOfDecimal &pending_discount_percent);
    bool is_pending_discount_percent_Set() const;
    bool is_pending_discount_percent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDtoValueOfNullableOfDecimal m_break_amount;
    bool m_break_amount_isSet;
    bool m_break_amount_isValid;

    OAIDtoValueOfNullableOfDecimal m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    OAIDtoValueOfNullableOfDecimal m_discount_percent;
    bool m_discount_percent_isSet;
    bool m_discount_percent_isValid;

    OAIDtoValueOfInt32 m_line_nbr;
    bool m_line_nbr_isSet;
    bool m_line_nbr_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    OAIDtoValueOfNullableOfDecimal m_pending_break_amount;
    bool m_pending_break_amount_isSet;
    bool m_pending_break_amount_isValid;

    OAIDtoValueOfNullableOfDecimal m_pending_break_quantity;
    bool m_pending_break_quantity_isSet;
    bool m_pending_break_quantity_isValid;

    OAIDtoValueOfNullableOfDateTime m_pending_date;
    bool m_pending_date_isSet;
    bool m_pending_date_isValid;

    OAIDtoValueOfNullableOfDecimal m_pending_discount_amount;
    bool m_pending_discount_amount_isSet;
    bool m_pending_discount_amount_isValid;

    OAIDtoValueOfNullableOfDecimal m_pending_discount_percent;
    bool m_pending_discount_percent_isSet;
    bool m_pending_discount_percent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDiscountBreakpointUpdateDto)

#endif // OAIDiscountBreakpointUpdateDto_H
