/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFixedAssetQueryParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFixedAssetQueryParameters::OAIFixedAssetQueryParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFixedAssetQueryParameters::OAIFixedAssetQueryParameters() {
    this->initializeModel();
}

OAIFixedAssetQueryParameters::~OAIFixedAssetQueryParameters() {}

void OAIFixedAssetQueryParameters::initializeModel() {

    m_asset_id_isSet = false;
    m_asset_id_isValid = false;

    m_class_id_isSet = false;
    m_class_id_isValid = false;

    m_expand_accounts_isSet = false;
    m_expand_accounts_isValid = false;

    m_from_date_isSet = false;
    m_from_date_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_modified_date_time_condition_isSet = false;
    m_last_modified_date_time_condition_isValid = false;

    m_page_number_isSet = false;
    m_page_number_isValid = false;

    m_page_size_isSet = false;
    m_page_size_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_to_date_isSet = false;
    m_to_date_isValid = false;
}

void OAIFixedAssetQueryParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFixedAssetQueryParameters::fromJsonObject(QJsonObject json) {

    m_asset_id_isValid = ::OpenAPI::fromJsonValue(m_asset_id, json[QString("assetID")]);
    m_asset_id_isSet = !json[QString("assetID")].isNull() && m_asset_id_isValid;

    m_class_id_isValid = ::OpenAPI::fromJsonValue(m_class_id, json[QString("classID")]);
    m_class_id_isSet = !json[QString("classID")].isNull() && m_class_id_isValid;

    m_expand_accounts_isValid = ::OpenAPI::fromJsonValue(m_expand_accounts, json[QString("expandAccounts")]);
    m_expand_accounts_isSet = !json[QString("expandAccounts")].isNull() && m_expand_accounts_isValid;

    m_from_date_isValid = ::OpenAPI::fromJsonValue(m_from_date, json[QString("fromDate")]);
    m_from_date_isSet = !json[QString("fromDate")].isNull() && m_from_date_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_modified_date_time_condition_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time_condition, json[QString("lastModifiedDateTimeCondition")]);
    m_last_modified_date_time_condition_isSet = !json[QString("lastModifiedDateTimeCondition")].isNull() && m_last_modified_date_time_condition_isValid;

    m_page_number_isValid = ::OpenAPI::fromJsonValue(m_page_number, json[QString("pageNumber")]);
    m_page_number_isSet = !json[QString("pageNumber")].isNull() && m_page_number_isValid;

    m_page_size_isValid = ::OpenAPI::fromJsonValue(m_page_size, json[QString("pageSize")]);
    m_page_size_isSet = !json[QString("pageSize")].isNull() && m_page_size_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_to_date_isValid = ::OpenAPI::fromJsonValue(m_to_date, json[QString("toDate")]);
    m_to_date_isSet = !json[QString("toDate")].isNull() && m_to_date_isValid;
}

QString OAIFixedAssetQueryParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFixedAssetQueryParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_id_isSet) {
        obj.insert(QString("assetID"), ::OpenAPI::toJsonValue(m_asset_id));
    }
    if (m_class_id_isSet) {
        obj.insert(QString("classID"), ::OpenAPI::toJsonValue(m_class_id));
    }
    if (m_expand_accounts_isSet) {
        obj.insert(QString("expandAccounts"), ::OpenAPI::toJsonValue(m_expand_accounts));
    }
    if (m_from_date_isSet) {
        obj.insert(QString("fromDate"), ::OpenAPI::toJsonValue(m_from_date));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_modified_date_time_condition_isSet) {
        obj.insert(QString("lastModifiedDateTimeCondition"), ::OpenAPI::toJsonValue(m_last_modified_date_time_condition));
    }
    if (m_page_number_isSet) {
        obj.insert(QString("pageNumber"), ::OpenAPI::toJsonValue(m_page_number));
    }
    if (m_page_size_isSet) {
        obj.insert(QString("pageSize"), ::OpenAPI::toJsonValue(m_page_size));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_to_date_isSet) {
        obj.insert(QString("toDate"), ::OpenAPI::toJsonValue(m_to_date));
    }
    return obj;
}

QString OAIFixedAssetQueryParameters::getAssetId() const {
    return m_asset_id;
}
void OAIFixedAssetQueryParameters::setAssetId(const QString &asset_id) {
    m_asset_id = asset_id;
    m_asset_id_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_asset_id_Set() const{
    return m_asset_id_isSet;
}

bool OAIFixedAssetQueryParameters::is_asset_id_Valid() const{
    return m_asset_id_isValid;
}

QString OAIFixedAssetQueryParameters::getClassId() const {
    return m_class_id;
}
void OAIFixedAssetQueryParameters::setClassId(const QString &class_id) {
    m_class_id = class_id;
    m_class_id_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_class_id_Set() const{
    return m_class_id_isSet;
}

bool OAIFixedAssetQueryParameters::is_class_id_Valid() const{
    return m_class_id_isValid;
}

bool OAIFixedAssetQueryParameters::isExpandAccounts() const {
    return m_expand_accounts;
}
void OAIFixedAssetQueryParameters::setExpandAccounts(const bool &expand_accounts) {
    m_expand_accounts = expand_accounts;
    m_expand_accounts_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_expand_accounts_Set() const{
    return m_expand_accounts_isSet;
}

bool OAIFixedAssetQueryParameters::is_expand_accounts_Valid() const{
    return m_expand_accounts_isValid;
}

QDateTime OAIFixedAssetQueryParameters::getFromDate() const {
    return m_from_date;
}
void OAIFixedAssetQueryParameters::setFromDate(const QDateTime &from_date) {
    m_from_date = from_date;
    m_from_date_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_from_date_Set() const{
    return m_from_date_isSet;
}

bool OAIFixedAssetQueryParameters::is_from_date_Valid() const{
    return m_from_date_isValid;
}

QString OAIFixedAssetQueryParameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIFixedAssetQueryParameters::setLastModifiedDateTime(const QString &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIFixedAssetQueryParameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIFixedAssetQueryParameters::getLastModifiedDateTimeCondition() const {
    return m_last_modified_date_time_condition;
}
void OAIFixedAssetQueryParameters::setLastModifiedDateTimeCondition(const QString &last_modified_date_time_condition) {
    m_last_modified_date_time_condition = last_modified_date_time_condition;
    m_last_modified_date_time_condition_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_last_modified_date_time_condition_Set() const{
    return m_last_modified_date_time_condition_isSet;
}

bool OAIFixedAssetQueryParameters::is_last_modified_date_time_condition_Valid() const{
    return m_last_modified_date_time_condition_isValid;
}

qint32 OAIFixedAssetQueryParameters::getPageNumber() const {
    return m_page_number;
}
void OAIFixedAssetQueryParameters::setPageNumber(const qint32 &page_number) {
    m_page_number = page_number;
    m_page_number_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_page_number_Set() const{
    return m_page_number_isSet;
}

bool OAIFixedAssetQueryParameters::is_page_number_Valid() const{
    return m_page_number_isValid;
}

qint32 OAIFixedAssetQueryParameters::getPageSize() const {
    return m_page_size;
}
void OAIFixedAssetQueryParameters::setPageSize(const qint32 &page_size) {
    m_page_size = page_size;
    m_page_size_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_page_size_Set() const{
    return m_page_size_isSet;
}

bool OAIFixedAssetQueryParameters::is_page_size_Valid() const{
    return m_page_size_isValid;
}

QString OAIFixedAssetQueryParameters::getStatus() const {
    return m_status;
}
void OAIFixedAssetQueryParameters::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_status_Set() const{
    return m_status_isSet;
}

bool OAIFixedAssetQueryParameters::is_status_Valid() const{
    return m_status_isValid;
}

QDateTime OAIFixedAssetQueryParameters::getToDate() const {
    return m_to_date;
}
void OAIFixedAssetQueryParameters::setToDate(const QDateTime &to_date) {
    m_to_date = to_date;
    m_to_date_isSet = true;
}

bool OAIFixedAssetQueryParameters::is_to_date_Set() const{
    return m_to_date_isSet;
}

bool OAIFixedAssetQueryParameters::is_to_date_Valid() const{
    return m_to_date_isValid;
}

bool OAIFixedAssetQueryParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_class_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_accounts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_page_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFixedAssetQueryParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
