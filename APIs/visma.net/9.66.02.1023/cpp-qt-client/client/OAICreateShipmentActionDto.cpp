/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateShipmentActionDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateShipmentActionDto::OAICreateShipmentActionDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateShipmentActionDto::OAICreateShipmentActionDto() {
    this->initializeModel();
}

OAICreateShipmentActionDto::~OAICreateShipmentActionDto() {}

void OAICreateShipmentActionDto::initializeModel() {

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;

    m_return_shipment_dto_isSet = false;
    m_return_shipment_dto_isValid = false;

    m_shipment_date_isSet = false;
    m_shipment_date_isValid = false;

    m_shipment_warehouse_isSet = false;
    m_shipment_warehouse_isValid = false;
}

void OAICreateShipmentActionDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateShipmentActionDto::fromJsonObject(QJsonObject json) {

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;

    m_return_shipment_dto_isValid = ::OpenAPI::fromJsonValue(m_return_shipment_dto, json[QString("returnShipmentDto")]);
    m_return_shipment_dto_isSet = !json[QString("returnShipmentDto")].isNull() && m_return_shipment_dto_isValid;

    m_shipment_date_isValid = ::OpenAPI::fromJsonValue(m_shipment_date, json[QString("shipmentDate")]);
    m_shipment_date_isSet = !json[QString("shipmentDate")].isNull() && m_shipment_date_isValid;

    m_shipment_warehouse_isValid = ::OpenAPI::fromJsonValue(m_shipment_warehouse, json[QString("shipmentWarehouse")]);
    m_shipment_warehouse_isSet = !json[QString("shipmentWarehouse")].isNull() && m_shipment_warehouse_isValid;
}

QString OAICreateShipmentActionDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateShipmentActionDto::asJsonObject() const {
    QJsonObject obj;
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    if (m_return_shipment_dto_isSet) {
        obj.insert(QString("returnShipmentDto"), ::OpenAPI::toJsonValue(m_return_shipment_dto));
    }
    if (m_shipment_date_isSet) {
        obj.insert(QString("shipmentDate"), ::OpenAPI::toJsonValue(m_shipment_date));
    }
    if (m_shipment_warehouse_isSet) {
        obj.insert(QString("shipmentWarehouse"), ::OpenAPI::toJsonValue(m_shipment_warehouse));
    }
    return obj;
}

QString OAICreateShipmentActionDto::getOperation() const {
    return m_operation;
}
void OAICreateShipmentActionDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAICreateShipmentActionDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAICreateShipmentActionDto::is_operation_Valid() const{
    return m_operation_isValid;
}

QString OAICreateShipmentActionDto::getOrderType() const {
    return m_order_type;
}
void OAICreateShipmentActionDto::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAICreateShipmentActionDto::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAICreateShipmentActionDto::is_order_type_Valid() const{
    return m_order_type_isValid;
}

bool OAICreateShipmentActionDto::isReturnShipmentDto() const {
    return m_return_shipment_dto;
}
void OAICreateShipmentActionDto::setReturnShipmentDto(const bool &return_shipment_dto) {
    m_return_shipment_dto = return_shipment_dto;
    m_return_shipment_dto_isSet = true;
}

bool OAICreateShipmentActionDto::is_return_shipment_dto_Set() const{
    return m_return_shipment_dto_isSet;
}

bool OAICreateShipmentActionDto::is_return_shipment_dto_Valid() const{
    return m_return_shipment_dto_isValid;
}

QDateTime OAICreateShipmentActionDto::getShipmentDate() const {
    return m_shipment_date;
}
void OAICreateShipmentActionDto::setShipmentDate(const QDateTime &shipment_date) {
    m_shipment_date = shipment_date;
    m_shipment_date_isSet = true;
}

bool OAICreateShipmentActionDto::is_shipment_date_Set() const{
    return m_shipment_date_isSet;
}

bool OAICreateShipmentActionDto::is_shipment_date_Valid() const{
    return m_shipment_date_isValid;
}

QString OAICreateShipmentActionDto::getShipmentWarehouse() const {
    return m_shipment_warehouse;
}
void OAICreateShipmentActionDto::setShipmentWarehouse(const QString &shipment_warehouse) {
    m_shipment_warehouse = shipment_warehouse;
    m_shipment_warehouse_isSet = true;
}

bool OAICreateShipmentActionDto::is_shipment_warehouse_Set() const{
    return m_shipment_warehouse_isSet;
}

bool OAICreateShipmentActionDto::is_shipment_warehouse_Valid() const{
    return m_shipment_warehouse_isValid;
}

bool OAICreateShipmentActionDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_return_shipment_dto_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipment_warehouse_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateShipmentActionDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_order_type_isValid && m_shipment_date_isValid && m_shipment_warehouse_isValid && true;
}

} // namespace OpenAPI
