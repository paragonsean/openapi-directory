/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBranchQueryParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBranchQueryParameters::OAIBranchQueryParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBranchQueryParameters::OAIBranchQueryParameters() {
    this->initializeModel();
}

OAIBranchQueryParameters::~OAIBranchQueryParameters() {}

void OAIBranchQueryParameters::initializeModel() {

    m_expand_address_isSet = false;
    m_expand_address_isValid = false;

    m_expand_bank_settings_isSet = false;
    m_expand_bank_settings_isValid = false;

    m_expand_contact_isSet = false;
    m_expand_contact_isValid = false;

    m_expand_currency_isSet = false;
    m_expand_currency_isValid = false;

    m_expand_default_country_isSet = false;
    m_expand_default_country_isValid = false;

    m_expand_delivery_address_isSet = false;
    m_expand_delivery_address_isValid = false;

    m_expand_delivery_contact_isSet = false;
    m_expand_delivery_contact_isValid = false;

    m_expand_industry_code_isSet = false;
    m_expand_industry_code_isValid = false;

    m_expand_ledger_isSet = false;
    m_expand_ledger_isValid = false;

    m_expand_vat_zone_isSet = false;
    m_expand_vat_zone_isValid = false;

    m_greater_than_value_isSet = false;
    m_greater_than_value_isValid = false;

    m_last_modified_date_time_isSet = false;
    m_last_modified_date_time_isValid = false;

    m_last_modified_date_time_condition_isSet = false;
    m_last_modified_date_time_condition_isValid = false;

    m_order_by_isSet = false;
    m_order_by_isValid = false;
}

void OAIBranchQueryParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBranchQueryParameters::fromJsonObject(QJsonObject json) {

    m_expand_address_isValid = ::OpenAPI::fromJsonValue(m_expand_address, json[QString("expandAddress")]);
    m_expand_address_isSet = !json[QString("expandAddress")].isNull() && m_expand_address_isValid;

    m_expand_bank_settings_isValid = ::OpenAPI::fromJsonValue(m_expand_bank_settings, json[QString("expandBankSettings")]);
    m_expand_bank_settings_isSet = !json[QString("expandBankSettings")].isNull() && m_expand_bank_settings_isValid;

    m_expand_contact_isValid = ::OpenAPI::fromJsonValue(m_expand_contact, json[QString("expandContact")]);
    m_expand_contact_isSet = !json[QString("expandContact")].isNull() && m_expand_contact_isValid;

    m_expand_currency_isValid = ::OpenAPI::fromJsonValue(m_expand_currency, json[QString("expandCurrency")]);
    m_expand_currency_isSet = !json[QString("expandCurrency")].isNull() && m_expand_currency_isValid;

    m_expand_default_country_isValid = ::OpenAPI::fromJsonValue(m_expand_default_country, json[QString("expandDefaultCountry")]);
    m_expand_default_country_isSet = !json[QString("expandDefaultCountry")].isNull() && m_expand_default_country_isValid;

    m_expand_delivery_address_isValid = ::OpenAPI::fromJsonValue(m_expand_delivery_address, json[QString("expandDeliveryAddress")]);
    m_expand_delivery_address_isSet = !json[QString("expandDeliveryAddress")].isNull() && m_expand_delivery_address_isValid;

    m_expand_delivery_contact_isValid = ::OpenAPI::fromJsonValue(m_expand_delivery_contact, json[QString("expandDeliveryContact")]);
    m_expand_delivery_contact_isSet = !json[QString("expandDeliveryContact")].isNull() && m_expand_delivery_contact_isValid;

    m_expand_industry_code_isValid = ::OpenAPI::fromJsonValue(m_expand_industry_code, json[QString("expandIndustryCode")]);
    m_expand_industry_code_isSet = !json[QString("expandIndustryCode")].isNull() && m_expand_industry_code_isValid;

    m_expand_ledger_isValid = ::OpenAPI::fromJsonValue(m_expand_ledger, json[QString("expandLedger")]);
    m_expand_ledger_isSet = !json[QString("expandLedger")].isNull() && m_expand_ledger_isValid;

    m_expand_vat_zone_isValid = ::OpenAPI::fromJsonValue(m_expand_vat_zone, json[QString("expandVatZone")]);
    m_expand_vat_zone_isSet = !json[QString("expandVatZone")].isNull() && m_expand_vat_zone_isValid;

    m_greater_than_value_isValid = ::OpenAPI::fromJsonValue(m_greater_than_value, json[QString("greaterThanValue")]);
    m_greater_than_value_isSet = !json[QString("greaterThanValue")].isNull() && m_greater_than_value_isValid;

    m_last_modified_date_time_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time, json[QString("lastModifiedDateTime")]);
    m_last_modified_date_time_isSet = !json[QString("lastModifiedDateTime")].isNull() && m_last_modified_date_time_isValid;

    m_last_modified_date_time_condition_isValid = ::OpenAPI::fromJsonValue(m_last_modified_date_time_condition, json[QString("lastModifiedDateTimeCondition")]);
    m_last_modified_date_time_condition_isSet = !json[QString("lastModifiedDateTimeCondition")].isNull() && m_last_modified_date_time_condition_isValid;

    m_order_by_isValid = ::OpenAPI::fromJsonValue(m_order_by, json[QString("orderBy")]);
    m_order_by_isSet = !json[QString("orderBy")].isNull() && m_order_by_isValid;
}

QString OAIBranchQueryParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBranchQueryParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_expand_address_isSet) {
        obj.insert(QString("expandAddress"), ::OpenAPI::toJsonValue(m_expand_address));
    }
    if (m_expand_bank_settings_isSet) {
        obj.insert(QString("expandBankSettings"), ::OpenAPI::toJsonValue(m_expand_bank_settings));
    }
    if (m_expand_contact_isSet) {
        obj.insert(QString("expandContact"), ::OpenAPI::toJsonValue(m_expand_contact));
    }
    if (m_expand_currency_isSet) {
        obj.insert(QString("expandCurrency"), ::OpenAPI::toJsonValue(m_expand_currency));
    }
    if (m_expand_default_country_isSet) {
        obj.insert(QString("expandDefaultCountry"), ::OpenAPI::toJsonValue(m_expand_default_country));
    }
    if (m_expand_delivery_address_isSet) {
        obj.insert(QString("expandDeliveryAddress"), ::OpenAPI::toJsonValue(m_expand_delivery_address));
    }
    if (m_expand_delivery_contact_isSet) {
        obj.insert(QString("expandDeliveryContact"), ::OpenAPI::toJsonValue(m_expand_delivery_contact));
    }
    if (m_expand_industry_code_isSet) {
        obj.insert(QString("expandIndustryCode"), ::OpenAPI::toJsonValue(m_expand_industry_code));
    }
    if (m_expand_ledger_isSet) {
        obj.insert(QString("expandLedger"), ::OpenAPI::toJsonValue(m_expand_ledger));
    }
    if (m_expand_vat_zone_isSet) {
        obj.insert(QString("expandVatZone"), ::OpenAPI::toJsonValue(m_expand_vat_zone));
    }
    if (m_greater_than_value_isSet) {
        obj.insert(QString("greaterThanValue"), ::OpenAPI::toJsonValue(m_greater_than_value));
    }
    if (m_last_modified_date_time_isSet) {
        obj.insert(QString("lastModifiedDateTime"), ::OpenAPI::toJsonValue(m_last_modified_date_time));
    }
    if (m_last_modified_date_time_condition_isSet) {
        obj.insert(QString("lastModifiedDateTimeCondition"), ::OpenAPI::toJsonValue(m_last_modified_date_time_condition));
    }
    if (m_order_by_isSet) {
        obj.insert(QString("orderBy"), ::OpenAPI::toJsonValue(m_order_by));
    }
    return obj;
}

bool OAIBranchQueryParameters::isExpandAddress() const {
    return m_expand_address;
}
void OAIBranchQueryParameters::setExpandAddress(const bool &expand_address) {
    m_expand_address = expand_address;
    m_expand_address_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_address_Set() const{
    return m_expand_address_isSet;
}

bool OAIBranchQueryParameters::is_expand_address_Valid() const{
    return m_expand_address_isValid;
}

bool OAIBranchQueryParameters::isExpandBankSettings() const {
    return m_expand_bank_settings;
}
void OAIBranchQueryParameters::setExpandBankSettings(const bool &expand_bank_settings) {
    m_expand_bank_settings = expand_bank_settings;
    m_expand_bank_settings_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_bank_settings_Set() const{
    return m_expand_bank_settings_isSet;
}

bool OAIBranchQueryParameters::is_expand_bank_settings_Valid() const{
    return m_expand_bank_settings_isValid;
}

bool OAIBranchQueryParameters::isExpandContact() const {
    return m_expand_contact;
}
void OAIBranchQueryParameters::setExpandContact(const bool &expand_contact) {
    m_expand_contact = expand_contact;
    m_expand_contact_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_contact_Set() const{
    return m_expand_contact_isSet;
}

bool OAIBranchQueryParameters::is_expand_contact_Valid() const{
    return m_expand_contact_isValid;
}

bool OAIBranchQueryParameters::isExpandCurrency() const {
    return m_expand_currency;
}
void OAIBranchQueryParameters::setExpandCurrency(const bool &expand_currency) {
    m_expand_currency = expand_currency;
    m_expand_currency_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_currency_Set() const{
    return m_expand_currency_isSet;
}

bool OAIBranchQueryParameters::is_expand_currency_Valid() const{
    return m_expand_currency_isValid;
}

bool OAIBranchQueryParameters::isExpandDefaultCountry() const {
    return m_expand_default_country;
}
void OAIBranchQueryParameters::setExpandDefaultCountry(const bool &expand_default_country) {
    m_expand_default_country = expand_default_country;
    m_expand_default_country_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_default_country_Set() const{
    return m_expand_default_country_isSet;
}

bool OAIBranchQueryParameters::is_expand_default_country_Valid() const{
    return m_expand_default_country_isValid;
}

bool OAIBranchQueryParameters::isExpandDeliveryAddress() const {
    return m_expand_delivery_address;
}
void OAIBranchQueryParameters::setExpandDeliveryAddress(const bool &expand_delivery_address) {
    m_expand_delivery_address = expand_delivery_address;
    m_expand_delivery_address_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_delivery_address_Set() const{
    return m_expand_delivery_address_isSet;
}

bool OAIBranchQueryParameters::is_expand_delivery_address_Valid() const{
    return m_expand_delivery_address_isValid;
}

bool OAIBranchQueryParameters::isExpandDeliveryContact() const {
    return m_expand_delivery_contact;
}
void OAIBranchQueryParameters::setExpandDeliveryContact(const bool &expand_delivery_contact) {
    m_expand_delivery_contact = expand_delivery_contact;
    m_expand_delivery_contact_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_delivery_contact_Set() const{
    return m_expand_delivery_contact_isSet;
}

bool OAIBranchQueryParameters::is_expand_delivery_contact_Valid() const{
    return m_expand_delivery_contact_isValid;
}

bool OAIBranchQueryParameters::isExpandIndustryCode() const {
    return m_expand_industry_code;
}
void OAIBranchQueryParameters::setExpandIndustryCode(const bool &expand_industry_code) {
    m_expand_industry_code = expand_industry_code;
    m_expand_industry_code_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_industry_code_Set() const{
    return m_expand_industry_code_isSet;
}

bool OAIBranchQueryParameters::is_expand_industry_code_Valid() const{
    return m_expand_industry_code_isValid;
}

bool OAIBranchQueryParameters::isExpandLedger() const {
    return m_expand_ledger;
}
void OAIBranchQueryParameters::setExpandLedger(const bool &expand_ledger) {
    m_expand_ledger = expand_ledger;
    m_expand_ledger_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_ledger_Set() const{
    return m_expand_ledger_isSet;
}

bool OAIBranchQueryParameters::is_expand_ledger_Valid() const{
    return m_expand_ledger_isValid;
}

bool OAIBranchQueryParameters::isExpandVatZone() const {
    return m_expand_vat_zone;
}
void OAIBranchQueryParameters::setExpandVatZone(const bool &expand_vat_zone) {
    m_expand_vat_zone = expand_vat_zone;
    m_expand_vat_zone_isSet = true;
}

bool OAIBranchQueryParameters::is_expand_vat_zone_Set() const{
    return m_expand_vat_zone_isSet;
}

bool OAIBranchQueryParameters::is_expand_vat_zone_Valid() const{
    return m_expand_vat_zone_isValid;
}

QString OAIBranchQueryParameters::getGreaterThanValue() const {
    return m_greater_than_value;
}
void OAIBranchQueryParameters::setGreaterThanValue(const QString &greater_than_value) {
    m_greater_than_value = greater_than_value;
    m_greater_than_value_isSet = true;
}

bool OAIBranchQueryParameters::is_greater_than_value_Set() const{
    return m_greater_than_value_isSet;
}

bool OAIBranchQueryParameters::is_greater_than_value_Valid() const{
    return m_greater_than_value_isValid;
}

QDateTime OAIBranchQueryParameters::getLastModifiedDateTime() const {
    return m_last_modified_date_time;
}
void OAIBranchQueryParameters::setLastModifiedDateTime(const QDateTime &last_modified_date_time) {
    m_last_modified_date_time = last_modified_date_time;
    m_last_modified_date_time_isSet = true;
}

bool OAIBranchQueryParameters::is_last_modified_date_time_Set() const{
    return m_last_modified_date_time_isSet;
}

bool OAIBranchQueryParameters::is_last_modified_date_time_Valid() const{
    return m_last_modified_date_time_isValid;
}

QString OAIBranchQueryParameters::getLastModifiedDateTimeCondition() const {
    return m_last_modified_date_time_condition;
}
void OAIBranchQueryParameters::setLastModifiedDateTimeCondition(const QString &last_modified_date_time_condition) {
    m_last_modified_date_time_condition = last_modified_date_time_condition;
    m_last_modified_date_time_condition_isSet = true;
}

bool OAIBranchQueryParameters::is_last_modified_date_time_condition_Set() const{
    return m_last_modified_date_time_condition_isSet;
}

bool OAIBranchQueryParameters::is_last_modified_date_time_condition_Valid() const{
    return m_last_modified_date_time_condition_isValid;
}

QString OAIBranchQueryParameters::getOrderBy() const {
    return m_order_by;
}
void OAIBranchQueryParameters::setOrderBy(const QString &order_by) {
    m_order_by = order_by;
    m_order_by_isSet = true;
}

bool OAIBranchQueryParameters::is_order_by_Set() const{
    return m_order_by_isSet;
}

bool OAIBranchQueryParameters::is_order_by_Valid() const{
    return m_order_by_isValid;
}

bool OAIBranchQueryParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expand_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_bank_settings_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_default_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_delivery_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_delivery_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_industry_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_ledger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expand_vat_zone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_greater_than_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_date_time_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBranchQueryParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
