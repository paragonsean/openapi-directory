/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscountDetailUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscountDetailUpdateDto::OAIDiscountDetailUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscountDetailUpdateDto::OAIDiscountDetailUpdateDto() {
    this->initializeModel();
}

OAIDiscountDetailUpdateDto::~OAIDiscountDetailUpdateDto() {}

void OAIDiscountDetailUpdateDto::initializeModel() {

    m_discount_code_isSet = false;
    m_discount_code_isValid = false;

    m_line_nbr_isSet = false;
    m_line_nbr_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_sequance_id_isSet = false;
    m_sequance_id_isValid = false;

    m_skip_discount_isSet = false;
    m_skip_discount_isValid = false;
}

void OAIDiscountDetailUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscountDetailUpdateDto::fromJsonObject(QJsonObject json) {

    m_discount_code_isValid = ::OpenAPI::fromJsonValue(m_discount_code, json[QString("discountCode")]);
    m_discount_code_isSet = !json[QString("discountCode")].isNull() && m_discount_code_isValid;

    m_line_nbr_isValid = ::OpenAPI::fromJsonValue(m_line_nbr, json[QString("lineNbr")]);
    m_line_nbr_isSet = !json[QString("lineNbr")].isNull() && m_line_nbr_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_sequance_id_isValid = ::OpenAPI::fromJsonValue(m_sequance_id, json[QString("sequanceID")]);
    m_sequance_id_isSet = !json[QString("sequanceID")].isNull() && m_sequance_id_isValid;

    m_skip_discount_isValid = ::OpenAPI::fromJsonValue(m_skip_discount, json[QString("skipDiscount")]);
    m_skip_discount_isSet = !json[QString("skipDiscount")].isNull() && m_skip_discount_isValid;
}

QString OAIDiscountDetailUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscountDetailUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_discount_code.isSet()) {
        obj.insert(QString("discountCode"), ::OpenAPI::toJsonValue(m_discount_code));
    }
    if (m_line_nbr.isSet()) {
        obj.insert(QString("lineNbr"), ::OpenAPI::toJsonValue(m_line_nbr));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_sequance_id.isSet()) {
        obj.insert(QString("sequanceID"), ::OpenAPI::toJsonValue(m_sequance_id));
    }
    if (m_skip_discount.isSet()) {
        obj.insert(QString("skipDiscount"), ::OpenAPI::toJsonValue(m_skip_discount));
    }
    return obj;
}

OAIDtoValueOfString OAIDiscountDetailUpdateDto::getDiscountCode() const {
    return m_discount_code;
}
void OAIDiscountDetailUpdateDto::setDiscountCode(const OAIDtoValueOfString &discount_code) {
    m_discount_code = discount_code;
    m_discount_code_isSet = true;
}

bool OAIDiscountDetailUpdateDto::is_discount_code_Set() const{
    return m_discount_code_isSet;
}

bool OAIDiscountDetailUpdateDto::is_discount_code_Valid() const{
    return m_discount_code_isValid;
}

OAIDtoValueOfNullableOfInt32 OAIDiscountDetailUpdateDto::getLineNbr() const {
    return m_line_nbr;
}
void OAIDiscountDetailUpdateDto::setLineNbr(const OAIDtoValueOfNullableOfInt32 &line_nbr) {
    m_line_nbr = line_nbr;
    m_line_nbr_isSet = true;
}

bool OAIDiscountDetailUpdateDto::is_line_nbr_Set() const{
    return m_line_nbr_isSet;
}

bool OAIDiscountDetailUpdateDto::is_line_nbr_Valid() const{
    return m_line_nbr_isValid;
}

QString OAIDiscountDetailUpdateDto::getOperation() const {
    return m_operation;
}
void OAIDiscountDetailUpdateDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIDiscountDetailUpdateDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIDiscountDetailUpdateDto::is_operation_Valid() const{
    return m_operation_isValid;
}

OAIDtoValueOfString OAIDiscountDetailUpdateDto::getSequanceId() const {
    return m_sequance_id;
}
void OAIDiscountDetailUpdateDto::setSequanceId(const OAIDtoValueOfString &sequance_id) {
    m_sequance_id = sequance_id;
    m_sequance_id_isSet = true;
}

bool OAIDiscountDetailUpdateDto::is_sequance_id_Set() const{
    return m_sequance_id_isSet;
}

bool OAIDiscountDetailUpdateDto::is_sequance_id_Valid() const{
    return m_sequance_id_isValid;
}

OAIDtoValueOfNullableOfBoolean OAIDiscountDetailUpdateDto::getSkipDiscount() const {
    return m_skip_discount;
}
void OAIDiscountDetailUpdateDto::setSkipDiscount(const OAIDtoValueOfNullableOfBoolean &skip_discount) {
    m_skip_discount = skip_discount;
    m_skip_discount_isSet = true;
}

bool OAIDiscountDetailUpdateDto::is_skip_discount_Set() const{
    return m_skip_discount_isSet;
}

bool OAIDiscountDetailUpdateDto::is_skip_discount_Valid() const{
    return m_skip_discount_isValid;
}

bool OAIDiscountDetailUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_discount_code.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_nbr.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sequance_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_discount.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscountDetailUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
