/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPackagingTypeDto.h
 *
 * This class represents a PackagingType in PackagingTypeController. Used by getting data.
 */

#ifndef OAIPackagingTypeDto_H
#define OAIPackagingTypeDto_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPackagingTypeDto : public OAIObject {
public:
    OAIPackagingTypeDto();
    OAIPackagingTypeDto(QString json);
    ~OAIPackagingTypeDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActiveByDefault() const;
    void setActiveByDefault(const bool &active_by_default);
    bool is_active_by_default_Set() const;
    bool is_active_by_default_Valid() const;

    QString getBoxId() const;
    void setBoxId(const QString &box_id);
    bool is_box_id_Set() const;
    bool is_box_id_Valid() const;

    double getBoxWeight() const;
    void setBoxWeight(const double &box_weight);
    bool is_box_weight_Set() const;
    bool is_box_weight_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    qint32 getHeight() const;
    void setHeight(const qint32 &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    qint32 getLength() const;
    void setLength(const qint32 &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    double getMaxVolume() const;
    void setMaxVolume(const double &max_volume);
    bool is_max_volume_Set() const;
    bool is_max_volume_Valid() const;

    double getMaxWeight() const;
    void setMaxWeight(const double &max_weight);
    bool is_max_weight_Set() const;
    bool is_max_weight_Valid() const;

    QString getVolumeUoM() const;
    void setVolumeUoM(const QString &volume_uo_m);
    bool is_volume_uo_m_Set() const;
    bool is_volume_uo_m_Valid() const;

    QString getWeightUoM() const;
    void setWeightUoM(const QString &weight_uo_m);
    bool is_weight_uo_m_Set() const;
    bool is_weight_uo_m_Valid() const;

    qint32 getWidth() const;
    void setWidth(const qint32 &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active_by_default;
    bool m_active_by_default_isSet;
    bool m_active_by_default_isValid;

    QString m_box_id;
    bool m_box_id_isSet;
    bool m_box_id_isValid;

    double m_box_weight;
    bool m_box_weight_isSet;
    bool m_box_weight_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    qint32 m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    qint32 m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    double m_max_volume;
    bool m_max_volume_isSet;
    bool m_max_volume_isValid;

    double m_max_weight;
    bool m_max_weight_isSet;
    bool m_max_weight_isValid;

    QString m_volume_uo_m;
    bool m_volume_uo_m_isSet;
    bool m_volume_uo_m_isValid;

    QString m_weight_uo_m;
    bool m_weight_uo_m_isSet;
    bool m_weight_uo_m_isValid;

    qint32 m_width;
    bool m_width_isSet;
    bool m_width_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPackagingTypeDto)

#endif // OAIPackagingTypeDto_H
