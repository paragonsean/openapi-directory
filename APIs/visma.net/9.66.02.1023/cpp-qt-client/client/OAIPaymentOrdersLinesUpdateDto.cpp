/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentOrdersLinesUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentOrdersLinesUpdateDto::OAIPaymentOrdersLinesUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentOrdersLinesUpdateDto::OAIPaymentOrdersLinesUpdateDto() {
    this->initializeModel();
}

OAIPaymentOrdersLinesUpdateDto::~OAIPaymentOrdersLinesUpdateDto() {}

void OAIPaymentOrdersLinesUpdateDto::initializeModel() {

    m_applied_to_order_isSet = false;
    m_applied_to_order_isValid = false;

    m_operation_isSet = false;
    m_operation_isValid = false;

    m_order_number_isSet = false;
    m_order_number_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;
}

void OAIPaymentOrdersLinesUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentOrdersLinesUpdateDto::fromJsonObject(QJsonObject json) {

    m_applied_to_order_isValid = ::OpenAPI::fromJsonValue(m_applied_to_order, json[QString("appliedToOrder")]);
    m_applied_to_order_isSet = !json[QString("appliedToOrder")].isNull() && m_applied_to_order_isValid;

    m_operation_isValid = ::OpenAPI::fromJsonValue(m_operation, json[QString("operation")]);
    m_operation_isSet = !json[QString("operation")].isNull() && m_operation_isValid;

    m_order_number_isValid = ::OpenAPI::fromJsonValue(m_order_number, json[QString("orderNumber")]);
    m_order_number_isSet = !json[QString("orderNumber")].isNull() && m_order_number_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;
}

QString OAIPaymentOrdersLinesUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentOrdersLinesUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_to_order.isSet()) {
        obj.insert(QString("appliedToOrder"), ::OpenAPI::toJsonValue(m_applied_to_order));
    }
    if (m_operation_isSet) {
        obj.insert(QString("operation"), ::OpenAPI::toJsonValue(m_operation));
    }
    if (m_order_number.isSet()) {
        obj.insert(QString("orderNumber"), ::OpenAPI::toJsonValue(m_order_number));
    }
    if (m_order_type.isSet()) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    return obj;
}

OAIDtoValueOfDecimal OAIPaymentOrdersLinesUpdateDto::getAppliedToOrder() const {
    return m_applied_to_order;
}
void OAIPaymentOrdersLinesUpdateDto::setAppliedToOrder(const OAIDtoValueOfDecimal &applied_to_order) {
    m_applied_to_order = applied_to_order;
    m_applied_to_order_isSet = true;
}

bool OAIPaymentOrdersLinesUpdateDto::is_applied_to_order_Set() const{
    return m_applied_to_order_isSet;
}

bool OAIPaymentOrdersLinesUpdateDto::is_applied_to_order_Valid() const{
    return m_applied_to_order_isValid;
}

QString OAIPaymentOrdersLinesUpdateDto::getOperation() const {
    return m_operation;
}
void OAIPaymentOrdersLinesUpdateDto::setOperation(const QString &operation) {
    m_operation = operation;
    m_operation_isSet = true;
}

bool OAIPaymentOrdersLinesUpdateDto::is_operation_Set() const{
    return m_operation_isSet;
}

bool OAIPaymentOrdersLinesUpdateDto::is_operation_Valid() const{
    return m_operation_isValid;
}

OAIDtoValueOfString OAIPaymentOrdersLinesUpdateDto::getOrderNumber() const {
    return m_order_number;
}
void OAIPaymentOrdersLinesUpdateDto::setOrderNumber(const OAIDtoValueOfString &order_number) {
    m_order_number = order_number;
    m_order_number_isSet = true;
}

bool OAIPaymentOrdersLinesUpdateDto::is_order_number_Set() const{
    return m_order_number_isSet;
}

bool OAIPaymentOrdersLinesUpdateDto::is_order_number_Valid() const{
    return m_order_number_isValid;
}

OAIDtoValueOfString OAIPaymentOrdersLinesUpdateDto::getOrderType() const {
    return m_order_type;
}
void OAIPaymentOrdersLinesUpdateDto::setOrderType(const OAIDtoValueOfString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAIPaymentOrdersLinesUpdateDto::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAIPaymentOrdersLinesUpdateDto::is_order_type_Valid() const{
    return m_order_type_isValid;
}

bool OAIPaymentOrdersLinesUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_to_order.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_operation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentOrdersLinesUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
