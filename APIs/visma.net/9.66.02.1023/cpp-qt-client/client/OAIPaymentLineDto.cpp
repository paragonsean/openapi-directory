/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentLineDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentLineDto::OAIPaymentLineDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentLineDto::OAIPaymentLineDto() {
    this->initializeModel();
}

OAIPaymentLineDto::~OAIPaymentLineDto() {}

void OAIPaymentLineDto::initializeModel() {

    m_amount_paid_isSet = false;
    m_amount_paid_isValid = false;

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_balance_write_off_isSet = false;
    m_balance_write_off_isValid = false;

    m_cash_discount_balance_isSet = false;
    m_cash_discount_balance_isValid = false;

    m_cash_discount_date_isSet = false;
    m_cash_discount_date_isValid = false;

    m_cash_discount_taken_isSet = false;
    m_cash_discount_taken_isValid = false;

    m_cross_rate_isSet = false;
    m_cross_rate_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_customer_order_isSet = false;
    m_customer_order_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_document_type_isSet = false;
    m_document_type_isValid = false;

    m_due_date_isSet = false;
    m_due_date_isValid = false;

    m_post_period_isSet = false;
    m_post_period_isValid = false;

    m_ref_nbr_isSet = false;
    m_ref_nbr_isValid = false;

    m_write_off_reason_code_isSet = false;
    m_write_off_reason_code_isValid = false;
}

void OAIPaymentLineDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentLineDto::fromJsonObject(QJsonObject json) {

    m_amount_paid_isValid = ::OpenAPI::fromJsonValue(m_amount_paid, json[QString("amountPaid")]);
    m_amount_paid_isSet = !json[QString("amountPaid")].isNull() && m_amount_paid_isValid;

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_balance_write_off_isValid = ::OpenAPI::fromJsonValue(m_balance_write_off, json[QString("balanceWriteOff")]);
    m_balance_write_off_isSet = !json[QString("balanceWriteOff")].isNull() && m_balance_write_off_isValid;

    m_cash_discount_balance_isValid = ::OpenAPI::fromJsonValue(m_cash_discount_balance, json[QString("cashDiscountBalance")]);
    m_cash_discount_balance_isSet = !json[QString("cashDiscountBalance")].isNull() && m_cash_discount_balance_isValid;

    m_cash_discount_date_isValid = ::OpenAPI::fromJsonValue(m_cash_discount_date, json[QString("cashDiscountDate")]);
    m_cash_discount_date_isSet = !json[QString("cashDiscountDate")].isNull() && m_cash_discount_date_isValid;

    m_cash_discount_taken_isValid = ::OpenAPI::fromJsonValue(m_cash_discount_taken, json[QString("cashDiscountTaken")]);
    m_cash_discount_taken_isSet = !json[QString("cashDiscountTaken")].isNull() && m_cash_discount_taken_isValid;

    m_cross_rate_isValid = ::OpenAPI::fromJsonValue(m_cross_rate, json[QString("crossRate")]);
    m_cross_rate_isSet = !json[QString("crossRate")].isNull() && m_cross_rate_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_customer_order_isValid = ::OpenAPI::fromJsonValue(m_customer_order, json[QString("customerOrder")]);
    m_customer_order_isSet = !json[QString("customerOrder")].isNull() && m_customer_order_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_document_type_isValid = ::OpenAPI::fromJsonValue(m_document_type, json[QString("documentType")]);
    m_document_type_isSet = !json[QString("documentType")].isNull() && m_document_type_isValid;

    m_due_date_isValid = ::OpenAPI::fromJsonValue(m_due_date, json[QString("dueDate")]);
    m_due_date_isSet = !json[QString("dueDate")].isNull() && m_due_date_isValid;

    m_post_period_isValid = ::OpenAPI::fromJsonValue(m_post_period, json[QString("postPeriod")]);
    m_post_period_isSet = !json[QString("postPeriod")].isNull() && m_post_period_isValid;

    m_ref_nbr_isValid = ::OpenAPI::fromJsonValue(m_ref_nbr, json[QString("refNbr")]);
    m_ref_nbr_isSet = !json[QString("refNbr")].isNull() && m_ref_nbr_isValid;

    m_write_off_reason_code_isValid = ::OpenAPI::fromJsonValue(m_write_off_reason_code, json[QString("writeOffReasonCode")]);
    m_write_off_reason_code_isSet = !json[QString("writeOffReasonCode")].isNull() && m_write_off_reason_code_isValid;
}

QString OAIPaymentLineDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentLineDto::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_paid_isSet) {
        obj.insert(QString("amountPaid"), ::OpenAPI::toJsonValue(m_amount_paid));
    }
    if (m_balance_isSet) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_balance_write_off_isSet) {
        obj.insert(QString("balanceWriteOff"), ::OpenAPI::toJsonValue(m_balance_write_off));
    }
    if (m_cash_discount_balance_isSet) {
        obj.insert(QString("cashDiscountBalance"), ::OpenAPI::toJsonValue(m_cash_discount_balance));
    }
    if (m_cash_discount_date_isSet) {
        obj.insert(QString("cashDiscountDate"), ::OpenAPI::toJsonValue(m_cash_discount_date));
    }
    if (m_cash_discount_taken_isSet) {
        obj.insert(QString("cashDiscountTaken"), ::OpenAPI::toJsonValue(m_cash_discount_taken));
    }
    if (m_cross_rate_isSet) {
        obj.insert(QString("crossRate"), ::OpenAPI::toJsonValue(m_cross_rate));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_customer_order_isSet) {
        obj.insert(QString("customerOrder"), ::OpenAPI::toJsonValue(m_customer_order));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_document_type_isSet) {
        obj.insert(QString("documentType"), ::OpenAPI::toJsonValue(m_document_type));
    }
    if (m_due_date_isSet) {
        obj.insert(QString("dueDate"), ::OpenAPI::toJsonValue(m_due_date));
    }
    if (m_post_period_isSet) {
        obj.insert(QString("postPeriod"), ::OpenAPI::toJsonValue(m_post_period));
    }
    if (m_ref_nbr_isSet) {
        obj.insert(QString("refNbr"), ::OpenAPI::toJsonValue(m_ref_nbr));
    }
    if (m_write_off_reason_code.isSet()) {
        obj.insert(QString("writeOffReasonCode"), ::OpenAPI::toJsonValue(m_write_off_reason_code));
    }
    return obj;
}

double OAIPaymentLineDto::getAmountPaid() const {
    return m_amount_paid;
}
void OAIPaymentLineDto::setAmountPaid(const double &amount_paid) {
    m_amount_paid = amount_paid;
    m_amount_paid_isSet = true;
}

bool OAIPaymentLineDto::is_amount_paid_Set() const{
    return m_amount_paid_isSet;
}

bool OAIPaymentLineDto::is_amount_paid_Valid() const{
    return m_amount_paid_isValid;
}

double OAIPaymentLineDto::getBalance() const {
    return m_balance;
}
void OAIPaymentLineDto::setBalance(const double &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAIPaymentLineDto::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAIPaymentLineDto::is_balance_Valid() const{
    return m_balance_isValid;
}

double OAIPaymentLineDto::getBalanceWriteOff() const {
    return m_balance_write_off;
}
void OAIPaymentLineDto::setBalanceWriteOff(const double &balance_write_off) {
    m_balance_write_off = balance_write_off;
    m_balance_write_off_isSet = true;
}

bool OAIPaymentLineDto::is_balance_write_off_Set() const{
    return m_balance_write_off_isSet;
}

bool OAIPaymentLineDto::is_balance_write_off_Valid() const{
    return m_balance_write_off_isValid;
}

double OAIPaymentLineDto::getCashDiscountBalance() const {
    return m_cash_discount_balance;
}
void OAIPaymentLineDto::setCashDiscountBalance(const double &cash_discount_balance) {
    m_cash_discount_balance = cash_discount_balance;
    m_cash_discount_balance_isSet = true;
}

bool OAIPaymentLineDto::is_cash_discount_balance_Set() const{
    return m_cash_discount_balance_isSet;
}

bool OAIPaymentLineDto::is_cash_discount_balance_Valid() const{
    return m_cash_discount_balance_isValid;
}

QDateTime OAIPaymentLineDto::getCashDiscountDate() const {
    return m_cash_discount_date;
}
void OAIPaymentLineDto::setCashDiscountDate(const QDateTime &cash_discount_date) {
    m_cash_discount_date = cash_discount_date;
    m_cash_discount_date_isSet = true;
}

bool OAIPaymentLineDto::is_cash_discount_date_Set() const{
    return m_cash_discount_date_isSet;
}

bool OAIPaymentLineDto::is_cash_discount_date_Valid() const{
    return m_cash_discount_date_isValid;
}

double OAIPaymentLineDto::getCashDiscountTaken() const {
    return m_cash_discount_taken;
}
void OAIPaymentLineDto::setCashDiscountTaken(const double &cash_discount_taken) {
    m_cash_discount_taken = cash_discount_taken;
    m_cash_discount_taken_isSet = true;
}

bool OAIPaymentLineDto::is_cash_discount_taken_Set() const{
    return m_cash_discount_taken_isSet;
}

bool OAIPaymentLineDto::is_cash_discount_taken_Valid() const{
    return m_cash_discount_taken_isValid;
}

double OAIPaymentLineDto::getCrossRate() const {
    return m_cross_rate;
}
void OAIPaymentLineDto::setCrossRate(const double &cross_rate) {
    m_cross_rate = cross_rate;
    m_cross_rate_isSet = true;
}

bool OAIPaymentLineDto::is_cross_rate_Set() const{
    return m_cross_rate_isSet;
}

bool OAIPaymentLineDto::is_cross_rate_Valid() const{
    return m_cross_rate_isValid;
}

QString OAIPaymentLineDto::getCurrency() const {
    return m_currency;
}
void OAIPaymentLineDto::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIPaymentLineDto::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIPaymentLineDto::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIPaymentLineDto::getCustomerOrder() const {
    return m_customer_order;
}
void OAIPaymentLineDto::setCustomerOrder(const QString &customer_order) {
    m_customer_order = customer_order;
    m_customer_order_isSet = true;
}

bool OAIPaymentLineDto::is_customer_order_Set() const{
    return m_customer_order_isSet;
}

bool OAIPaymentLineDto::is_customer_order_Valid() const{
    return m_customer_order_isValid;
}

QDateTime OAIPaymentLineDto::getDate() const {
    return m_date;
}
void OAIPaymentLineDto::setDate(const QDateTime &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIPaymentLineDto::is_date_Set() const{
    return m_date_isSet;
}

bool OAIPaymentLineDto::is_date_Valid() const{
    return m_date_isValid;
}

QString OAIPaymentLineDto::getDescription() const {
    return m_description;
}
void OAIPaymentLineDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIPaymentLineDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIPaymentLineDto::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIPaymentLineDto::getDocumentType() const {
    return m_document_type;
}
void OAIPaymentLineDto::setDocumentType(const QString &document_type) {
    m_document_type = document_type;
    m_document_type_isSet = true;
}

bool OAIPaymentLineDto::is_document_type_Set() const{
    return m_document_type_isSet;
}

bool OAIPaymentLineDto::is_document_type_Valid() const{
    return m_document_type_isValid;
}

QDateTime OAIPaymentLineDto::getDueDate() const {
    return m_due_date;
}
void OAIPaymentLineDto::setDueDate(const QDateTime &due_date) {
    m_due_date = due_date;
    m_due_date_isSet = true;
}

bool OAIPaymentLineDto::is_due_date_Set() const{
    return m_due_date_isSet;
}

bool OAIPaymentLineDto::is_due_date_Valid() const{
    return m_due_date_isValid;
}

QString OAIPaymentLineDto::getPostPeriod() const {
    return m_post_period;
}
void OAIPaymentLineDto::setPostPeriod(const QString &post_period) {
    m_post_period = post_period;
    m_post_period_isSet = true;
}

bool OAIPaymentLineDto::is_post_period_Set() const{
    return m_post_period_isSet;
}

bool OAIPaymentLineDto::is_post_period_Valid() const{
    return m_post_period_isValid;
}

QString OAIPaymentLineDto::getRefNbr() const {
    return m_ref_nbr;
}
void OAIPaymentLineDto::setRefNbr(const QString &ref_nbr) {
    m_ref_nbr = ref_nbr;
    m_ref_nbr_isSet = true;
}

bool OAIPaymentLineDto::is_ref_nbr_Set() const{
    return m_ref_nbr_isSet;
}

bool OAIPaymentLineDto::is_ref_nbr_Valid() const{
    return m_ref_nbr_isValid;
}

OAIWriteOffReasonCodeInPaymentLineDto OAIPaymentLineDto::getWriteOffReasonCode() const {
    return m_write_off_reason_code;
}
void OAIPaymentLineDto::setWriteOffReasonCode(const OAIWriteOffReasonCodeInPaymentLineDto &write_off_reason_code) {
    m_write_off_reason_code = write_off_reason_code;
    m_write_off_reason_code_isSet = true;
}

bool OAIPaymentLineDto::is_write_off_reason_code_Set() const{
    return m_write_off_reason_code_isSet;
}

bool OAIPaymentLineDto::is_write_off_reason_code_Valid() const{
    return m_write_off_reason_code_isValid;
}

bool OAIPaymentLineDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_paid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_balance_write_off_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_discount_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_discount_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cash_discount_taken_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cross_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_document_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_due_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_write_off_reason_code.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentLineDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
