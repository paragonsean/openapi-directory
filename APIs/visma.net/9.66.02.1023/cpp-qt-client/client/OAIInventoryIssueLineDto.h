/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventoryIssueLineDto.h
 *
 * 
 */

#ifndef OAIInventoryIssueLineDto_H
#define OAIInventoryIssueLineDto_H

#include <QJsonObject>

#include "OAIAttachmentDto.h"
#include "OAIBranchNumberDto.h"
#include "OAIINAllocationsDto.h"
#include "OAIInventoryItemInInventoryIssueLineDto.h"
#include "OAILocationInInventoryIssueLineDto.h"
#include "OAIProjectInInventoryIssueLineDto.h"
#include "OAIProjectTaskInInventoryIssueLineDto.h"
#include "OAIReasonCodeInInventoryIssueLineDto.h"
#include "OAIWarehouseInInventoryIssueLineDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIINAllocationsDto;
class OAIAttachmentDto;
class OAIBranchNumberDto;
class OAIInventoryItemInInventoryIssueLineDto;
class OAILocationInInventoryIssueLineDto;
class OAIProjectInInventoryIssueLineDto;
class OAIProjectTaskInInventoryIssueLineDto;
class OAIReasonCodeInInventoryIssueLineDto;
class OAIWarehouseInInventoryIssueLineDto;

class OAIInventoryIssueLineDto : public OAIObject {
public:
    OAIInventoryIssueLineDto();
    OAIInventoryIssueLineDto(QString json);
    ~OAIInventoryIssueLineDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIINAllocationsDto> getAllocations() const;
    void setAllocations(const QList<OAIINAllocationsDto> &allocations);
    bool is_allocations_Set() const;
    bool is_allocations_Valid() const;

    QList<OAIAttachmentDto> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentDto> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    OAIBranchNumberDto getBranchNumber() const;
    void setBranchNumber(const OAIBranchNumberDto &branch_number);
    bool is_branch_number_Set() const;
    bool is_branch_number_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    double getExtCost() const;
    void setExtCost(const double &ext_cost);
    bool is_ext_cost_Set() const;
    bool is_ext_cost_Valid() const;

    double getExtPrice() const;
    void setExtPrice(const double &ext_price);
    bool is_ext_price_Set() const;
    bool is_ext_price_Valid() const;

    OAIInventoryItemInInventoryIssueLineDto getInventoryItem() const;
    void setInventoryItem(const OAIInventoryItemInInventoryIssueLineDto &inventory_item);
    bool is_inventory_item_Set() const;
    bool is_inventory_item_Valid() const;

    qint32 getLineNumber() const;
    void setLineNumber(const qint32 &line_number);
    bool is_line_number_Set() const;
    bool is_line_number_Valid() const;

    OAILocationInInventoryIssueLineDto getLocation() const;
    void setLocation(const OAILocationInInventoryIssueLineDto &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getLotSerialNumber() const;
    void setLotSerialNumber(const QString &lot_serial_number);
    bool is_lot_serial_number_Set() const;
    bool is_lot_serial_number_Valid() const;

    OAIProjectInInventoryIssueLineDto getProject() const;
    void setProject(const OAIProjectInInventoryIssueLineDto &project);
    bool is_project_Set() const;
    bool is_project_Valid() const;

    OAIProjectTaskInInventoryIssueLineDto getProjectTask() const;
    void setProjectTask(const OAIProjectTaskInInventoryIssueLineDto &project_task);
    bool is_project_task_Set() const;
    bool is_project_task_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    OAIReasonCodeInInventoryIssueLineDto getReasonCode() const;
    void setReasonCode(const OAIReasonCodeInInventoryIssueLineDto &reason_code);
    bool is_reason_code_Set() const;
    bool is_reason_code_Valid() const;

    QString getTransactionType() const;
    void setTransactionType(const QString &transaction_type);
    bool is_transaction_type_Set() const;
    bool is_transaction_type_Valid() const;

    double getUnitCost() const;
    void setUnitCost(const double &unit_cost);
    bool is_unit_cost_Set() const;
    bool is_unit_cost_Valid() const;

    double getUnitPrice() const;
    void setUnitPrice(const double &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    QString getUom() const;
    void setUom(const QString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    OAIWarehouseInInventoryIssueLineDto getWarehouse() const;
    void setWarehouse(const OAIWarehouseInInventoryIssueLineDto &warehouse);
    bool is_warehouse_Set() const;
    bool is_warehouse_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIINAllocationsDto> m_allocations;
    bool m_allocations_isSet;
    bool m_allocations_isValid;

    QList<OAIAttachmentDto> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    OAIBranchNumberDto m_branch_number;
    bool m_branch_number_isSet;
    bool m_branch_number_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    double m_ext_cost;
    bool m_ext_cost_isSet;
    bool m_ext_cost_isValid;

    double m_ext_price;
    bool m_ext_price_isSet;
    bool m_ext_price_isValid;

    OAIInventoryItemInInventoryIssueLineDto m_inventory_item;
    bool m_inventory_item_isSet;
    bool m_inventory_item_isValid;

    qint32 m_line_number;
    bool m_line_number_isSet;
    bool m_line_number_isValid;

    OAILocationInInventoryIssueLineDto m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_lot_serial_number;
    bool m_lot_serial_number_isSet;
    bool m_lot_serial_number_isValid;

    OAIProjectInInventoryIssueLineDto m_project;
    bool m_project_isSet;
    bool m_project_isValid;

    OAIProjectTaskInInventoryIssueLineDto m_project_task;
    bool m_project_task_isSet;
    bool m_project_task_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    OAIReasonCodeInInventoryIssueLineDto m_reason_code;
    bool m_reason_code_isSet;
    bool m_reason_code_isValid;

    QString m_transaction_type;
    bool m_transaction_type_isSet;
    bool m_transaction_type_isValid;

    double m_unit_cost;
    bool m_unit_cost_isSet;
    bool m_unit_cost_isValid;

    double m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;

    QString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;

    OAIWarehouseInInventoryIssueLineDto m_warehouse;
    bool m_warehouse_isSet;
    bool m_warehouse_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventoryIssueLineDto)

#endif // OAIInventoryIssueLineDto_H
