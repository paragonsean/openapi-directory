/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISupplierDetailsLineDto.h
 *
 * 
 */

#ifndef OAISupplierDetailsLineDto_H
#define OAISupplierDetailsLineDto_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISupplierDetailsLineDto : public OAIObject {
public:
    OAISupplierDetailsLineDto();
    OAISupplierDetailsLineDto(QString json);
    ~OAISupplierDetailsLineDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActive() const;
    void setActive(const bool &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    QString getCurrencyId() const;
    void setCurrencyId(const QString &currency_id);
    bool is_currency_id_Set() const;
    bool is_currency_id_Valid() const;

    bool isRDefault() const;
    void setRDefault(const bool &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    double getEoq() const;
    void setEoq(const double &eoq);
    bool is_eoq_Set() const;
    bool is_eoq_Valid() const;

    double getLastSupplierPrice() const;
    void setLastSupplierPrice(const double &last_supplier_price);
    bool is_last_supplier_price_Set() const;
    bool is_last_supplier_price_Valid() const;

    qint32 getLeadTime() const;
    void setLeadTime(const qint32 &lead_time);
    bool is_lead_time_Set() const;
    bool is_lead_time_Valid() const;

    QString getLocation() const;
    void setLocation(const QString &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    double getLotSize() const;
    void setLotSize(const double &lot_size);
    bool is_lot_size_Set() const;
    bool is_lot_size_Valid() const;

    double getMaxOrderQty() const;
    void setMaxOrderQty(const double &max_order_qty);
    bool is_max_order_qty_Set() const;
    bool is_max_order_qty_Valid() const;

    qint32 getMinOrderFreq() const;
    void setMinOrderFreq(const qint32 &min_order_freq);
    bool is_min_order_freq_Set() const;
    bool is_min_order_freq_Valid() const;

    double getMinOrderQty() const;
    void setMinOrderQty(const double &min_order_qty);
    bool is_min_order_qty_Set() const;
    bool is_min_order_qty_Valid() const;

    bool isOverride() const;
    void setOverride(const bool &override);
    bool is_override_Set() const;
    bool is_override_Valid() const;

    QString getPurchaseUnit() const;
    void setPurchaseUnit(const QString &purchase_unit);
    bool is_purchase_unit_Set() const;
    bool is_purchase_unit_Valid() const;

    qint32 getShipmentLeadTime() const;
    void setShipmentLeadTime(const qint32 &shipment_lead_time);
    bool is_shipment_lead_time_Set() const;
    bool is_shipment_lead_time_Valid() const;

    QString getSupplierId() const;
    void setSupplierId(const QString &supplier_id);
    bool is_supplier_id_Set() const;
    bool is_supplier_id_Valid() const;

    QString getSupplierItemId() const;
    void setSupplierItemId(const QString &supplier_item_id);
    bool is_supplier_item_id_Set() const;
    bool is_supplier_item_id_Valid() const;

    QString getSupplierName() const;
    void setSupplierName(const QString &supplier_name);
    bool is_supplier_name_Set() const;
    bool is_supplier_name_Valid() const;

    QString getWarehouse() const;
    void setWarehouse(const QString &warehouse);
    bool is_warehouse_Set() const;
    bool is_warehouse_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    QString m_currency_id;
    bool m_currency_id_isSet;
    bool m_currency_id_isValid;

    bool m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    double m_eoq;
    bool m_eoq_isSet;
    bool m_eoq_isValid;

    double m_last_supplier_price;
    bool m_last_supplier_price_isSet;
    bool m_last_supplier_price_isValid;

    qint32 m_lead_time;
    bool m_lead_time_isSet;
    bool m_lead_time_isValid;

    QString m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    double m_lot_size;
    bool m_lot_size_isSet;
    bool m_lot_size_isValid;

    double m_max_order_qty;
    bool m_max_order_qty_isSet;
    bool m_max_order_qty_isValid;

    qint32 m_min_order_freq;
    bool m_min_order_freq_isSet;
    bool m_min_order_freq_isValid;

    double m_min_order_qty;
    bool m_min_order_qty_isSet;
    bool m_min_order_qty_isValid;

    bool m_override;
    bool m_override_isSet;
    bool m_override_isValid;

    QString m_purchase_unit;
    bool m_purchase_unit_isSet;
    bool m_purchase_unit_isValid;

    qint32 m_shipment_lead_time;
    bool m_shipment_lead_time_isSet;
    bool m_shipment_lead_time_isValid;

    QString m_supplier_id;
    bool m_supplier_id_isSet;
    bool m_supplier_id_isValid;

    QString m_supplier_item_id;
    bool m_supplier_item_id_isSet;
    bool m_supplier_item_id_isValid;

    QString m_supplier_name;
    bool m_supplier_name_isSet;
    bool m_supplier_name_isValid;

    QString m_warehouse;
    bool m_warehouse_isSet;
    bool m_warehouse_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISupplierDetailsLineDto)

#endif // OAISupplierDetailsLineDto_H
