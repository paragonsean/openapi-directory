/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerUpdateDto::OAICustomerUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerUpdateDto::OAICustomerUpdateDto() {
    this->initializeModel();
}

OAICustomerUpdateDto::~OAICustomerUpdateDto() {}

void OAICustomerUpdateDto::initializeModel() {

    m_accept_auto_invoices_isSet = false;
    m_accept_auto_invoices_isValid = false;

    m_account_reference_isSet = false;
    m_account_reference_isValid = false;

    m_attribute_lines_isSet = false;
    m_attribute_lines_isValid = false;

    m_corporate_id_isSet = false;
    m_corporate_id_isValid = false;

    m_credit_days_past_due_isSet = false;
    m_credit_days_past_due_isValid = false;

    m_credit_limit_isSet = false;
    m_credit_limit_isValid = false;

    m_credit_terms_id_isSet = false;
    m_credit_terms_id_isValid = false;

    m_credit_verification_isSet = false;
    m_credit_verification_isValid = false;

    m_currency_id_isSet = false;
    m_currency_id_isValid = false;

    m_customer_class_id_isSet = false;
    m_customer_class_id_isValid = false;

    m_default_payment_method_isSet = false;
    m_default_payment_method_isValid = false;

    m_delivery_address_isSet = false;
    m_delivery_address_isValid = false;

    m_delivery_contact_isSet = false;
    m_delivery_contact_isValid = false;

    m_direct_debit_lines_isSet = false;
    m_direct_debit_lines_isValid = false;

    m_e_invoice_contract_isSet = false;
    m_e_invoice_contract_isValid = false;

    m_gl_accounts_isSet = false;
    m_gl_accounts_isValid = false;

    m_gln_isSet = false;
    m_gln_isValid = false;

    m_invoice_address_isSet = false;
    m_invoice_address_isValid = false;

    m_invoice_contact_isSet = false;
    m_invoice_contact_isValid = false;

    m_invoice_to_default_location_isSet = false;
    m_invoice_to_default_location_isValid = false;

    m_main_address_isSet = false;
    m_main_address_isValid = false;

    m_main_contact_isSet = false;
    m_main_contact_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_number_isSet = false;
    m_number_isValid = false;

    m_override_number_series_isSet = false;
    m_override_number_series_isValid = false;

    m_override_with_class_values_isSet = false;
    m_override_with_class_values_isValid = false;

    m_parent_record_number_isSet = false;
    m_parent_record_number_isValid = false;

    m_price_class_id_isSet = false;
    m_price_class_id_isValid = false;

    m_print_invoices_isSet = false;
    m_print_invoices_isValid = false;

    m_print_multi_currency_statements_isSet = false;
    m_print_multi_currency_statements_isValid = false;

    m_print_statements_isSet = false;
    m_print_statements_isValid = false;

    m_send_invoices_by_email_isSet = false;
    m_send_invoices_by_email_isValid = false;

    m_send_statements_by_email_isSet = false;
    m_send_statements_by_email_isValid = false;

    m_statement_type_isSet = false;
    m_statement_type_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_vat_registration_id_isSet = false;
    m_vat_registration_id_isValid = false;

    m_vat_zone_id_isSet = false;
    m_vat_zone_id_isValid = false;
}

void OAICustomerUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerUpdateDto::fromJsonObject(QJsonObject json) {

    m_accept_auto_invoices_isValid = ::OpenAPI::fromJsonValue(m_accept_auto_invoices, json[QString("acceptAutoInvoices")]);
    m_accept_auto_invoices_isSet = !json[QString("acceptAutoInvoices")].isNull() && m_accept_auto_invoices_isValid;

    m_account_reference_isValid = ::OpenAPI::fromJsonValue(m_account_reference, json[QString("accountReference")]);
    m_account_reference_isSet = !json[QString("accountReference")].isNull() && m_account_reference_isValid;

    m_attribute_lines_isValid = ::OpenAPI::fromJsonValue(m_attribute_lines, json[QString("attributeLines")]);
    m_attribute_lines_isSet = !json[QString("attributeLines")].isNull() && m_attribute_lines_isValid;

    m_corporate_id_isValid = ::OpenAPI::fromJsonValue(m_corporate_id, json[QString("corporateId")]);
    m_corporate_id_isSet = !json[QString("corporateId")].isNull() && m_corporate_id_isValid;

    m_credit_days_past_due_isValid = ::OpenAPI::fromJsonValue(m_credit_days_past_due, json[QString("creditDaysPastDue")]);
    m_credit_days_past_due_isSet = !json[QString("creditDaysPastDue")].isNull() && m_credit_days_past_due_isValid;

    m_credit_limit_isValid = ::OpenAPI::fromJsonValue(m_credit_limit, json[QString("creditLimit")]);
    m_credit_limit_isSet = !json[QString("creditLimit")].isNull() && m_credit_limit_isValid;

    m_credit_terms_id_isValid = ::OpenAPI::fromJsonValue(m_credit_terms_id, json[QString("creditTermsId")]);
    m_credit_terms_id_isSet = !json[QString("creditTermsId")].isNull() && m_credit_terms_id_isValid;

    m_credit_verification_isValid = ::OpenAPI::fromJsonValue(m_credit_verification, json[QString("creditVerification")]);
    m_credit_verification_isSet = !json[QString("creditVerification")].isNull() && m_credit_verification_isValid;

    m_currency_id_isValid = ::OpenAPI::fromJsonValue(m_currency_id, json[QString("currencyId")]);
    m_currency_id_isSet = !json[QString("currencyId")].isNull() && m_currency_id_isValid;

    m_customer_class_id_isValid = ::OpenAPI::fromJsonValue(m_customer_class_id, json[QString("customerClassId")]);
    m_customer_class_id_isSet = !json[QString("customerClassId")].isNull() && m_customer_class_id_isValid;

    m_default_payment_method_isValid = ::OpenAPI::fromJsonValue(m_default_payment_method, json[QString("defaultPaymentMethod")]);
    m_default_payment_method_isSet = !json[QString("defaultPaymentMethod")].isNull() && m_default_payment_method_isValid;

    m_delivery_address_isValid = ::OpenAPI::fromJsonValue(m_delivery_address, json[QString("deliveryAddress")]);
    m_delivery_address_isSet = !json[QString("deliveryAddress")].isNull() && m_delivery_address_isValid;

    m_delivery_contact_isValid = ::OpenAPI::fromJsonValue(m_delivery_contact, json[QString("deliveryContact")]);
    m_delivery_contact_isSet = !json[QString("deliveryContact")].isNull() && m_delivery_contact_isValid;

    m_direct_debit_lines_isValid = ::OpenAPI::fromJsonValue(m_direct_debit_lines, json[QString("directDebitLines")]);
    m_direct_debit_lines_isSet = !json[QString("directDebitLines")].isNull() && m_direct_debit_lines_isValid;

    m_e_invoice_contract_isValid = ::OpenAPI::fromJsonValue(m_e_invoice_contract, json[QString("eInvoiceContract")]);
    m_e_invoice_contract_isSet = !json[QString("eInvoiceContract")].isNull() && m_e_invoice_contract_isValid;

    m_gl_accounts_isValid = ::OpenAPI::fromJsonValue(m_gl_accounts, json[QString("glAccounts")]);
    m_gl_accounts_isSet = !json[QString("glAccounts")].isNull() && m_gl_accounts_isValid;

    m_gln_isValid = ::OpenAPI::fromJsonValue(m_gln, json[QString("gln")]);
    m_gln_isSet = !json[QString("gln")].isNull() && m_gln_isValid;

    m_invoice_address_isValid = ::OpenAPI::fromJsonValue(m_invoice_address, json[QString("invoiceAddress")]);
    m_invoice_address_isSet = !json[QString("invoiceAddress")].isNull() && m_invoice_address_isValid;

    m_invoice_contact_isValid = ::OpenAPI::fromJsonValue(m_invoice_contact, json[QString("invoiceContact")]);
    m_invoice_contact_isSet = !json[QString("invoiceContact")].isNull() && m_invoice_contact_isValid;

    m_invoice_to_default_location_isValid = ::OpenAPI::fromJsonValue(m_invoice_to_default_location, json[QString("invoiceToDefaultLocation")]);
    m_invoice_to_default_location_isSet = !json[QString("invoiceToDefaultLocation")].isNull() && m_invoice_to_default_location_isValid;

    m_main_address_isValid = ::OpenAPI::fromJsonValue(m_main_address, json[QString("mainAddress")]);
    m_main_address_isSet = !json[QString("mainAddress")].isNull() && m_main_address_isValid;

    m_main_contact_isValid = ::OpenAPI::fromJsonValue(m_main_contact, json[QString("mainContact")]);
    m_main_contact_isSet = !json[QString("mainContact")].isNull() && m_main_contact_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_number_isValid = ::OpenAPI::fromJsonValue(m_number, json[QString("number")]);
    m_number_isSet = !json[QString("number")].isNull() && m_number_isValid;

    m_override_number_series_isValid = ::OpenAPI::fromJsonValue(m_override_number_series, json[QString("overrideNumberSeries")]);
    m_override_number_series_isSet = !json[QString("overrideNumberSeries")].isNull() && m_override_number_series_isValid;

    m_override_with_class_values_isValid = ::OpenAPI::fromJsonValue(m_override_with_class_values, json[QString("overrideWithClassValues")]);
    m_override_with_class_values_isSet = !json[QString("overrideWithClassValues")].isNull() && m_override_with_class_values_isValid;

    m_parent_record_number_isValid = ::OpenAPI::fromJsonValue(m_parent_record_number, json[QString("parentRecordNumber")]);
    m_parent_record_number_isSet = !json[QString("parentRecordNumber")].isNull() && m_parent_record_number_isValid;

    m_price_class_id_isValid = ::OpenAPI::fromJsonValue(m_price_class_id, json[QString("priceClassId")]);
    m_price_class_id_isSet = !json[QString("priceClassId")].isNull() && m_price_class_id_isValid;

    m_print_invoices_isValid = ::OpenAPI::fromJsonValue(m_print_invoices, json[QString("printInvoices")]);
    m_print_invoices_isSet = !json[QString("printInvoices")].isNull() && m_print_invoices_isValid;

    m_print_multi_currency_statements_isValid = ::OpenAPI::fromJsonValue(m_print_multi_currency_statements, json[QString("printMultiCurrencyStatements")]);
    m_print_multi_currency_statements_isSet = !json[QString("printMultiCurrencyStatements")].isNull() && m_print_multi_currency_statements_isValid;

    m_print_statements_isValid = ::OpenAPI::fromJsonValue(m_print_statements, json[QString("printStatements")]);
    m_print_statements_isSet = !json[QString("printStatements")].isNull() && m_print_statements_isValid;

    m_send_invoices_by_email_isValid = ::OpenAPI::fromJsonValue(m_send_invoices_by_email, json[QString("sendInvoicesByEmail")]);
    m_send_invoices_by_email_isSet = !json[QString("sendInvoicesByEmail")].isNull() && m_send_invoices_by_email_isValid;

    m_send_statements_by_email_isValid = ::OpenAPI::fromJsonValue(m_send_statements_by_email, json[QString("sendStatementsByEmail")]);
    m_send_statements_by_email_isSet = !json[QString("sendStatementsByEmail")].isNull() && m_send_statements_by_email_isValid;

    m_statement_type_isValid = ::OpenAPI::fromJsonValue(m_statement_type, json[QString("statementType")]);
    m_statement_type_isSet = !json[QString("statementType")].isNull() && m_statement_type_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_vat_registration_id_isValid = ::OpenAPI::fromJsonValue(m_vat_registration_id, json[QString("vatRegistrationId")]);
    m_vat_registration_id_isSet = !json[QString("vatRegistrationId")].isNull() && m_vat_registration_id_isValid;

    m_vat_zone_id_isValid = ::OpenAPI::fromJsonValue(m_vat_zone_id, json[QString("vatZoneId")]);
    m_vat_zone_id_isSet = !json[QString("vatZoneId")].isNull() && m_vat_zone_id_isValid;
}

QString OAICustomerUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_accept_auto_invoices.isSet()) {
        obj.insert(QString("acceptAutoInvoices"), ::OpenAPI::toJsonValue(m_accept_auto_invoices));
    }
    if (m_account_reference.isSet()) {
        obj.insert(QString("accountReference"), ::OpenAPI::toJsonValue(m_account_reference));
    }
    if (m_attribute_lines.size() > 0) {
        obj.insert(QString("attributeLines"), ::OpenAPI::toJsonValue(m_attribute_lines));
    }
    if (m_corporate_id.isSet()) {
        obj.insert(QString("corporateId"), ::OpenAPI::toJsonValue(m_corporate_id));
    }
    if (m_credit_days_past_due.isSet()) {
        obj.insert(QString("creditDaysPastDue"), ::OpenAPI::toJsonValue(m_credit_days_past_due));
    }
    if (m_credit_limit.isSet()) {
        obj.insert(QString("creditLimit"), ::OpenAPI::toJsonValue(m_credit_limit));
    }
    if (m_credit_terms_id.isSet()) {
        obj.insert(QString("creditTermsId"), ::OpenAPI::toJsonValue(m_credit_terms_id));
    }
    if (m_credit_verification.isSet()) {
        obj.insert(QString("creditVerification"), ::OpenAPI::toJsonValue(m_credit_verification));
    }
    if (m_currency_id.isSet()) {
        obj.insert(QString("currencyId"), ::OpenAPI::toJsonValue(m_currency_id));
    }
    if (m_customer_class_id.isSet()) {
        obj.insert(QString("customerClassId"), ::OpenAPI::toJsonValue(m_customer_class_id));
    }
    if (m_default_payment_method.isSet()) {
        obj.insert(QString("defaultPaymentMethod"), ::OpenAPI::toJsonValue(m_default_payment_method));
    }
    if (m_delivery_address.isSet()) {
        obj.insert(QString("deliveryAddress"), ::OpenAPI::toJsonValue(m_delivery_address));
    }
    if (m_delivery_contact.isSet()) {
        obj.insert(QString("deliveryContact"), ::OpenAPI::toJsonValue(m_delivery_contact));
    }
    if (m_direct_debit_lines.size() > 0) {
        obj.insert(QString("directDebitLines"), ::OpenAPI::toJsonValue(m_direct_debit_lines));
    }
    if (m_e_invoice_contract.isSet()) {
        obj.insert(QString("eInvoiceContract"), ::OpenAPI::toJsonValue(m_e_invoice_contract));
    }
    if (m_gl_accounts.isSet()) {
        obj.insert(QString("glAccounts"), ::OpenAPI::toJsonValue(m_gl_accounts));
    }
    if (m_gln.isSet()) {
        obj.insert(QString("gln"), ::OpenAPI::toJsonValue(m_gln));
    }
    if (m_invoice_address.isSet()) {
        obj.insert(QString("invoiceAddress"), ::OpenAPI::toJsonValue(m_invoice_address));
    }
    if (m_invoice_contact.isSet()) {
        obj.insert(QString("invoiceContact"), ::OpenAPI::toJsonValue(m_invoice_contact));
    }
    if (m_invoice_to_default_location.isSet()) {
        obj.insert(QString("invoiceToDefaultLocation"), ::OpenAPI::toJsonValue(m_invoice_to_default_location));
    }
    if (m_main_address.isSet()) {
        obj.insert(QString("mainAddress"), ::OpenAPI::toJsonValue(m_main_address));
    }
    if (m_main_contact.isSet()) {
        obj.insert(QString("mainContact"), ::OpenAPI::toJsonValue(m_main_contact));
    }
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_note.isSet()) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_number.isSet()) {
        obj.insert(QString("number"), ::OpenAPI::toJsonValue(m_number));
    }
    if (m_override_number_series.isSet()) {
        obj.insert(QString("overrideNumberSeries"), ::OpenAPI::toJsonValue(m_override_number_series));
    }
    if (m_override_with_class_values_isSet) {
        obj.insert(QString("overrideWithClassValues"), ::OpenAPI::toJsonValue(m_override_with_class_values));
    }
    if (m_parent_record_number.isSet()) {
        obj.insert(QString("parentRecordNumber"), ::OpenAPI::toJsonValue(m_parent_record_number));
    }
    if (m_price_class_id.isSet()) {
        obj.insert(QString("priceClassId"), ::OpenAPI::toJsonValue(m_price_class_id));
    }
    if (m_print_invoices.isSet()) {
        obj.insert(QString("printInvoices"), ::OpenAPI::toJsonValue(m_print_invoices));
    }
    if (m_print_multi_currency_statements.isSet()) {
        obj.insert(QString("printMultiCurrencyStatements"), ::OpenAPI::toJsonValue(m_print_multi_currency_statements));
    }
    if (m_print_statements.isSet()) {
        obj.insert(QString("printStatements"), ::OpenAPI::toJsonValue(m_print_statements));
    }
    if (m_send_invoices_by_email.isSet()) {
        obj.insert(QString("sendInvoicesByEmail"), ::OpenAPI::toJsonValue(m_send_invoices_by_email));
    }
    if (m_send_statements_by_email.isSet()) {
        obj.insert(QString("sendStatementsByEmail"), ::OpenAPI::toJsonValue(m_send_statements_by_email));
    }
    if (m_statement_type.isSet()) {
        obj.insert(QString("statementType"), ::OpenAPI::toJsonValue(m_statement_type));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_vat_registration_id.isSet()) {
        obj.insert(QString("vatRegistrationId"), ::OpenAPI::toJsonValue(m_vat_registration_id));
    }
    if (m_vat_zone_id.isSet()) {
        obj.insert(QString("vatZoneId"), ::OpenAPI::toJsonValue(m_vat_zone_id));
    }
    return obj;
}

OAIDtoValueOfBoolean OAICustomerUpdateDto::getAcceptAutoInvoices() const {
    return m_accept_auto_invoices;
}
void OAICustomerUpdateDto::setAcceptAutoInvoices(const OAIDtoValueOfBoolean &accept_auto_invoices) {
    m_accept_auto_invoices = accept_auto_invoices;
    m_accept_auto_invoices_isSet = true;
}

bool OAICustomerUpdateDto::is_accept_auto_invoices_Set() const{
    return m_accept_auto_invoices_isSet;
}

bool OAICustomerUpdateDto::is_accept_auto_invoices_Valid() const{
    return m_accept_auto_invoices_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getAccountReference() const {
    return m_account_reference;
}
void OAICustomerUpdateDto::setAccountReference(const OAIDtoValueOfString &account_reference) {
    m_account_reference = account_reference;
    m_account_reference_isSet = true;
}

bool OAICustomerUpdateDto::is_account_reference_Set() const{
    return m_account_reference_isSet;
}

bool OAICustomerUpdateDto::is_account_reference_Valid() const{
    return m_account_reference_isValid;
}

QList<OAIAttributeLineUpdateDto> OAICustomerUpdateDto::getAttributeLines() const {
    return m_attribute_lines;
}
void OAICustomerUpdateDto::setAttributeLines(const QList<OAIAttributeLineUpdateDto> &attribute_lines) {
    m_attribute_lines = attribute_lines;
    m_attribute_lines_isSet = true;
}

bool OAICustomerUpdateDto::is_attribute_lines_Set() const{
    return m_attribute_lines_isSet;
}

bool OAICustomerUpdateDto::is_attribute_lines_Valid() const{
    return m_attribute_lines_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getCorporateId() const {
    return m_corporate_id;
}
void OAICustomerUpdateDto::setCorporateId(const OAIDtoValueOfString &corporate_id) {
    m_corporate_id = corporate_id;
    m_corporate_id_isSet = true;
}

bool OAICustomerUpdateDto::is_corporate_id_Set() const{
    return m_corporate_id_isSet;
}

bool OAICustomerUpdateDto::is_corporate_id_Valid() const{
    return m_corporate_id_isValid;
}

OAIDtoValueOfNullableOfInt16 OAICustomerUpdateDto::getCreditDaysPastDue() const {
    return m_credit_days_past_due;
}
void OAICustomerUpdateDto::setCreditDaysPastDue(const OAIDtoValueOfNullableOfInt16 &credit_days_past_due) {
    m_credit_days_past_due = credit_days_past_due;
    m_credit_days_past_due_isSet = true;
}

bool OAICustomerUpdateDto::is_credit_days_past_due_Set() const{
    return m_credit_days_past_due_isSet;
}

bool OAICustomerUpdateDto::is_credit_days_past_due_Valid() const{
    return m_credit_days_past_due_isValid;
}

OAIDtoValueOfDecimal OAICustomerUpdateDto::getCreditLimit() const {
    return m_credit_limit;
}
void OAICustomerUpdateDto::setCreditLimit(const OAIDtoValueOfDecimal &credit_limit) {
    m_credit_limit = credit_limit;
    m_credit_limit_isSet = true;
}

bool OAICustomerUpdateDto::is_credit_limit_Set() const{
    return m_credit_limit_isSet;
}

bool OAICustomerUpdateDto::is_credit_limit_Valid() const{
    return m_credit_limit_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getCreditTermsId() const {
    return m_credit_terms_id;
}
void OAICustomerUpdateDto::setCreditTermsId(const OAIDtoValueOfString &credit_terms_id) {
    m_credit_terms_id = credit_terms_id;
    m_credit_terms_id_isSet = true;
}

bool OAICustomerUpdateDto::is_credit_terms_id_Set() const{
    return m_credit_terms_id_isSet;
}

bool OAICustomerUpdateDto::is_credit_terms_id_Valid() const{
    return m_credit_terms_id_isValid;
}

OAIDtoValueOfCreditRule OAICustomerUpdateDto::getCreditVerification() const {
    return m_credit_verification;
}
void OAICustomerUpdateDto::setCreditVerification(const OAIDtoValueOfCreditRule &credit_verification) {
    m_credit_verification = credit_verification;
    m_credit_verification_isSet = true;
}

bool OAICustomerUpdateDto::is_credit_verification_Set() const{
    return m_credit_verification_isSet;
}

bool OAICustomerUpdateDto::is_credit_verification_Valid() const{
    return m_credit_verification_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getCurrencyId() const {
    return m_currency_id;
}
void OAICustomerUpdateDto::setCurrencyId(const OAIDtoValueOfString &currency_id) {
    m_currency_id = currency_id;
    m_currency_id_isSet = true;
}

bool OAICustomerUpdateDto::is_currency_id_Set() const{
    return m_currency_id_isSet;
}

bool OAICustomerUpdateDto::is_currency_id_Valid() const{
    return m_currency_id_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getCustomerClassId() const {
    return m_customer_class_id;
}
void OAICustomerUpdateDto::setCustomerClassId(const OAIDtoValueOfString &customer_class_id) {
    m_customer_class_id = customer_class_id;
    m_customer_class_id_isSet = true;
}

bool OAICustomerUpdateDto::is_customer_class_id_Set() const{
    return m_customer_class_id_isSet;
}

bool OAICustomerUpdateDto::is_customer_class_id_Valid() const{
    return m_customer_class_id_isValid;
}

OAIDtoValueOfCustomerDefaultPaymentMethodUpdateDto OAICustomerUpdateDto::getDefaultPaymentMethod() const {
    return m_default_payment_method;
}
void OAICustomerUpdateDto::setDefaultPaymentMethod(const OAIDtoValueOfCustomerDefaultPaymentMethodUpdateDto &default_payment_method) {
    m_default_payment_method = default_payment_method;
    m_default_payment_method_isSet = true;
}

bool OAICustomerUpdateDto::is_default_payment_method_Set() const{
    return m_default_payment_method_isSet;
}

bool OAICustomerUpdateDto::is_default_payment_method_Valid() const{
    return m_default_payment_method_isValid;
}

OAIDtoValueOfAddressUpdateDto OAICustomerUpdateDto::getDeliveryAddress() const {
    return m_delivery_address;
}
void OAICustomerUpdateDto::setDeliveryAddress(const OAIDtoValueOfAddressUpdateDto &delivery_address) {
    m_delivery_address = delivery_address;
    m_delivery_address_isSet = true;
}

bool OAICustomerUpdateDto::is_delivery_address_Set() const{
    return m_delivery_address_isSet;
}

bool OAICustomerUpdateDto::is_delivery_address_Valid() const{
    return m_delivery_address_isValid;
}

OAIDtoValueOfContactInfoUpdateDto OAICustomerUpdateDto::getDeliveryContact() const {
    return m_delivery_contact;
}
void OAICustomerUpdateDto::setDeliveryContact(const OAIDtoValueOfContactInfoUpdateDto &delivery_contact) {
    m_delivery_contact = delivery_contact;
    m_delivery_contact_isSet = true;
}

bool OAICustomerUpdateDto::is_delivery_contact_Set() const{
    return m_delivery_contact_isSet;
}

bool OAICustomerUpdateDto::is_delivery_contact_Valid() const{
    return m_delivery_contact_isValid;
}

QList<OAICustomerDirectDebitUpdateDto> OAICustomerUpdateDto::getDirectDebitLines() const {
    return m_direct_debit_lines;
}
void OAICustomerUpdateDto::setDirectDebitLines(const QList<OAICustomerDirectDebitUpdateDto> &direct_debit_lines) {
    m_direct_debit_lines = direct_debit_lines;
    m_direct_debit_lines_isSet = true;
}

bool OAICustomerUpdateDto::is_direct_debit_lines_Set() const{
    return m_direct_debit_lines_isSet;
}

bool OAICustomerUpdateDto::is_direct_debit_lines_Valid() const{
    return m_direct_debit_lines_isValid;
}

OAIDtoValueOfEInvoiceContractUpdateDto OAICustomerUpdateDto::getEInvoiceContract() const {
    return m_e_invoice_contract;
}
void OAICustomerUpdateDto::setEInvoiceContract(const OAIDtoValueOfEInvoiceContractUpdateDto &e_invoice_contract) {
    m_e_invoice_contract = e_invoice_contract;
    m_e_invoice_contract_isSet = true;
}

bool OAICustomerUpdateDto::is_e_invoice_contract_Set() const{
    return m_e_invoice_contract_isSet;
}

bool OAICustomerUpdateDto::is_e_invoice_contract_Valid() const{
    return m_e_invoice_contract_isValid;
}

OAIDtoValueOfCustomerGlAccountsUpdateDto OAICustomerUpdateDto::getGlAccounts() const {
    return m_gl_accounts;
}
void OAICustomerUpdateDto::setGlAccounts(const OAIDtoValueOfCustomerGlAccountsUpdateDto &gl_accounts) {
    m_gl_accounts = gl_accounts;
    m_gl_accounts_isSet = true;
}

bool OAICustomerUpdateDto::is_gl_accounts_Set() const{
    return m_gl_accounts_isSet;
}

bool OAICustomerUpdateDto::is_gl_accounts_Valid() const{
    return m_gl_accounts_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getGln() const {
    return m_gln;
}
void OAICustomerUpdateDto::setGln(const OAIDtoValueOfString &gln) {
    m_gln = gln;
    m_gln_isSet = true;
}

bool OAICustomerUpdateDto::is_gln_Set() const{
    return m_gln_isSet;
}

bool OAICustomerUpdateDto::is_gln_Valid() const{
    return m_gln_isValid;
}

OAIDtoValueOfAddressUpdateDto OAICustomerUpdateDto::getInvoiceAddress() const {
    return m_invoice_address;
}
void OAICustomerUpdateDto::setInvoiceAddress(const OAIDtoValueOfAddressUpdateDto &invoice_address) {
    m_invoice_address = invoice_address;
    m_invoice_address_isSet = true;
}

bool OAICustomerUpdateDto::is_invoice_address_Set() const{
    return m_invoice_address_isSet;
}

bool OAICustomerUpdateDto::is_invoice_address_Valid() const{
    return m_invoice_address_isValid;
}

OAIDtoValueOfContactInfoUpdateDto OAICustomerUpdateDto::getInvoiceContact() const {
    return m_invoice_contact;
}
void OAICustomerUpdateDto::setInvoiceContact(const OAIDtoValueOfContactInfoUpdateDto &invoice_contact) {
    m_invoice_contact = invoice_contact;
    m_invoice_contact_isSet = true;
}

bool OAICustomerUpdateDto::is_invoice_contact_Set() const{
    return m_invoice_contact_isSet;
}

bool OAICustomerUpdateDto::is_invoice_contact_Valid() const{
    return m_invoice_contact_isValid;
}

OAIDtoValueOfNullableOfBoolean OAICustomerUpdateDto::getInvoiceToDefaultLocation() const {
    return m_invoice_to_default_location;
}
void OAICustomerUpdateDto::setInvoiceToDefaultLocation(const OAIDtoValueOfNullableOfBoolean &invoice_to_default_location) {
    m_invoice_to_default_location = invoice_to_default_location;
    m_invoice_to_default_location_isSet = true;
}

bool OAICustomerUpdateDto::is_invoice_to_default_location_Set() const{
    return m_invoice_to_default_location_isSet;
}

bool OAICustomerUpdateDto::is_invoice_to_default_location_Valid() const{
    return m_invoice_to_default_location_isValid;
}

OAIDtoValueOfAddressUpdateDto OAICustomerUpdateDto::getMainAddress() const {
    return m_main_address;
}
void OAICustomerUpdateDto::setMainAddress(const OAIDtoValueOfAddressUpdateDto &main_address) {
    m_main_address = main_address;
    m_main_address_isSet = true;
}

bool OAICustomerUpdateDto::is_main_address_Set() const{
    return m_main_address_isSet;
}

bool OAICustomerUpdateDto::is_main_address_Valid() const{
    return m_main_address_isValid;
}

OAIDtoValueOfContactInfoUpdateDto OAICustomerUpdateDto::getMainContact() const {
    return m_main_contact;
}
void OAICustomerUpdateDto::setMainContact(const OAIDtoValueOfContactInfoUpdateDto &main_contact) {
    m_main_contact = main_contact;
    m_main_contact_isSet = true;
}

bool OAICustomerUpdateDto::is_main_contact_Set() const{
    return m_main_contact_isSet;
}

bool OAICustomerUpdateDto::is_main_contact_Valid() const{
    return m_main_contact_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getName() const {
    return m_name;
}
void OAICustomerUpdateDto::setName(const OAIDtoValueOfString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICustomerUpdateDto::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomerUpdateDto::is_name_Valid() const{
    return m_name_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getNote() const {
    return m_note;
}
void OAICustomerUpdateDto::setNote(const OAIDtoValueOfString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAICustomerUpdateDto::is_note_Set() const{
    return m_note_isSet;
}

bool OAICustomerUpdateDto::is_note_Valid() const{
    return m_note_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getNumber() const {
    return m_number;
}
void OAICustomerUpdateDto::setNumber(const OAIDtoValueOfString &number) {
    m_number = number;
    m_number_isSet = true;
}

bool OAICustomerUpdateDto::is_number_Set() const{
    return m_number_isSet;
}

bool OAICustomerUpdateDto::is_number_Valid() const{
    return m_number_isValid;
}

OAIDtoValueOfBoolean OAICustomerUpdateDto::getOverrideNumberSeries() const {
    return m_override_number_series;
}
void OAICustomerUpdateDto::setOverrideNumberSeries(const OAIDtoValueOfBoolean &override_number_series) {
    m_override_number_series = override_number_series;
    m_override_number_series_isSet = true;
}

bool OAICustomerUpdateDto::is_override_number_series_Set() const{
    return m_override_number_series_isSet;
}

bool OAICustomerUpdateDto::is_override_number_series_Valid() const{
    return m_override_number_series_isValid;
}

bool OAICustomerUpdateDto::isOverrideWithClassValues() const {
    return m_override_with_class_values;
}
void OAICustomerUpdateDto::setOverrideWithClassValues(const bool &override_with_class_values) {
    m_override_with_class_values = override_with_class_values;
    m_override_with_class_values_isSet = true;
}

bool OAICustomerUpdateDto::is_override_with_class_values_Set() const{
    return m_override_with_class_values_isSet;
}

bool OAICustomerUpdateDto::is_override_with_class_values_Valid() const{
    return m_override_with_class_values_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getParentRecordNumber() const {
    return m_parent_record_number;
}
void OAICustomerUpdateDto::setParentRecordNumber(const OAIDtoValueOfString &parent_record_number) {
    m_parent_record_number = parent_record_number;
    m_parent_record_number_isSet = true;
}

bool OAICustomerUpdateDto::is_parent_record_number_Set() const{
    return m_parent_record_number_isSet;
}

bool OAICustomerUpdateDto::is_parent_record_number_Valid() const{
    return m_parent_record_number_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getPriceClassId() const {
    return m_price_class_id;
}
void OAICustomerUpdateDto::setPriceClassId(const OAIDtoValueOfString &price_class_id) {
    m_price_class_id = price_class_id;
    m_price_class_id_isSet = true;
}

bool OAICustomerUpdateDto::is_price_class_id_Set() const{
    return m_price_class_id_isSet;
}

bool OAICustomerUpdateDto::is_price_class_id_Valid() const{
    return m_price_class_id_isValid;
}

OAIDtoValueOfBoolean OAICustomerUpdateDto::getPrintInvoices() const {
    return m_print_invoices;
}
void OAICustomerUpdateDto::setPrintInvoices(const OAIDtoValueOfBoolean &print_invoices) {
    m_print_invoices = print_invoices;
    m_print_invoices_isSet = true;
}

bool OAICustomerUpdateDto::is_print_invoices_Set() const{
    return m_print_invoices_isSet;
}

bool OAICustomerUpdateDto::is_print_invoices_Valid() const{
    return m_print_invoices_isValid;
}

OAIDtoValueOfBoolean OAICustomerUpdateDto::getPrintMultiCurrencyStatements() const {
    return m_print_multi_currency_statements;
}
void OAICustomerUpdateDto::setPrintMultiCurrencyStatements(const OAIDtoValueOfBoolean &print_multi_currency_statements) {
    m_print_multi_currency_statements = print_multi_currency_statements;
    m_print_multi_currency_statements_isSet = true;
}

bool OAICustomerUpdateDto::is_print_multi_currency_statements_Set() const{
    return m_print_multi_currency_statements_isSet;
}

bool OAICustomerUpdateDto::is_print_multi_currency_statements_Valid() const{
    return m_print_multi_currency_statements_isValid;
}

OAIDtoValueOfBoolean OAICustomerUpdateDto::getPrintStatements() const {
    return m_print_statements;
}
void OAICustomerUpdateDto::setPrintStatements(const OAIDtoValueOfBoolean &print_statements) {
    m_print_statements = print_statements;
    m_print_statements_isSet = true;
}

bool OAICustomerUpdateDto::is_print_statements_Set() const{
    return m_print_statements_isSet;
}

bool OAICustomerUpdateDto::is_print_statements_Valid() const{
    return m_print_statements_isValid;
}

OAIDtoValueOfBoolean OAICustomerUpdateDto::getSendInvoicesByEmail() const {
    return m_send_invoices_by_email;
}
void OAICustomerUpdateDto::setSendInvoicesByEmail(const OAIDtoValueOfBoolean &send_invoices_by_email) {
    m_send_invoices_by_email = send_invoices_by_email;
    m_send_invoices_by_email_isSet = true;
}

bool OAICustomerUpdateDto::is_send_invoices_by_email_Set() const{
    return m_send_invoices_by_email_isSet;
}

bool OAICustomerUpdateDto::is_send_invoices_by_email_Valid() const{
    return m_send_invoices_by_email_isValid;
}

OAIDtoValueOfBoolean OAICustomerUpdateDto::getSendStatementsByEmail() const {
    return m_send_statements_by_email;
}
void OAICustomerUpdateDto::setSendStatementsByEmail(const OAIDtoValueOfBoolean &send_statements_by_email) {
    m_send_statements_by_email = send_statements_by_email;
    m_send_statements_by_email_isSet = true;
}

bool OAICustomerUpdateDto::is_send_statements_by_email_Set() const{
    return m_send_statements_by_email_isSet;
}

bool OAICustomerUpdateDto::is_send_statements_by_email_Valid() const{
    return m_send_statements_by_email_isValid;
}

OAIDtoValueOfStatementTypes OAICustomerUpdateDto::getStatementType() const {
    return m_statement_type;
}
void OAICustomerUpdateDto::setStatementType(const OAIDtoValueOfStatementTypes &statement_type) {
    m_statement_type = statement_type;
    m_statement_type_isSet = true;
}

bool OAICustomerUpdateDto::is_statement_type_Set() const{
    return m_statement_type_isSet;
}

bool OAICustomerUpdateDto::is_statement_type_Valid() const{
    return m_statement_type_isValid;
}

OAIDtoValueOfCustomerStatus OAICustomerUpdateDto::getStatus() const {
    return m_status;
}
void OAICustomerUpdateDto::setStatus(const OAIDtoValueOfCustomerStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAICustomerUpdateDto::is_status_Set() const{
    return m_status_isSet;
}

bool OAICustomerUpdateDto::is_status_Valid() const{
    return m_status_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getVatRegistrationId() const {
    return m_vat_registration_id;
}
void OAICustomerUpdateDto::setVatRegistrationId(const OAIDtoValueOfString &vat_registration_id) {
    m_vat_registration_id = vat_registration_id;
    m_vat_registration_id_isSet = true;
}

bool OAICustomerUpdateDto::is_vat_registration_id_Set() const{
    return m_vat_registration_id_isSet;
}

bool OAICustomerUpdateDto::is_vat_registration_id_Valid() const{
    return m_vat_registration_id_isValid;
}

OAIDtoValueOfString OAICustomerUpdateDto::getVatZoneId() const {
    return m_vat_zone_id;
}
void OAICustomerUpdateDto::setVatZoneId(const OAIDtoValueOfString &vat_zone_id) {
    m_vat_zone_id = vat_zone_id;
    m_vat_zone_id_isSet = true;
}

bool OAICustomerUpdateDto::is_vat_zone_id_Set() const{
    return m_vat_zone_id_isSet;
}

bool OAICustomerUpdateDto::is_vat_zone_id_Valid() const{
    return m_vat_zone_id_isValid;
}

bool OAICustomerUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accept_auto_invoices.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_reference.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_lines.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporate_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_days_past_due.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_limit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_terms_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_credit_verification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_class_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_payment_method.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_delivery_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_direct_debit_lines.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_invoice_contract.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gl_accounts.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gln.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_to_default_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_note.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_number_series.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_override_with_class_values_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_record_number.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_class_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_print_invoices.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_print_multi_currency_statements.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_print_statements.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_invoices_by_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_statements_by_email.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_statement_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_registration_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_zone_id.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
