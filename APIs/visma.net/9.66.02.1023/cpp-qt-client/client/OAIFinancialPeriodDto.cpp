/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFinancialPeriodDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFinancialPeriodDto::OAIFinancialPeriodDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFinancialPeriodDto::OAIFinancialPeriodDto() {
    this->initializeModel();
}

OAIFinancialPeriodDto::~OAIFinancialPeriodDto() {}

void OAIFinancialPeriodDto::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_closed_in_cash_management_isSet = false;
    m_closed_in_cash_management_isValid = false;

    m_closed_in_customer_ledger_isSet = false;
    m_closed_in_customer_ledger_isValid = false;

    m_closed_in_fixed_assets_isSet = false;
    m_closed_in_fixed_assets_isValid = false;

    m_closed_in_general_ledger_isSet = false;
    m_closed_in_general_ledger_isValid = false;

    m_closed_in_inventory_management_isSet = false;
    m_closed_in_inventory_management_isValid = false;

    m_closed_in_supplier_ledger_isSet = false;
    m_closed_in_supplier_ledger_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_end_date_isSet = false;
    m_end_date_isValid = false;

    m_period_isSet = false;
    m_period_isValid = false;

    m_start_date_isSet = false;
    m_start_date_isValid = false;

    m_year_isSet = false;
    m_year_isValid = false;
}

void OAIFinancialPeriodDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFinancialPeriodDto::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("active")]);
    m_active_isSet = !json[QString("active")].isNull() && m_active_isValid;

    m_closed_in_cash_management_isValid = ::OpenAPI::fromJsonValue(m_closed_in_cash_management, json[QString("closedInCashManagement")]);
    m_closed_in_cash_management_isSet = !json[QString("closedInCashManagement")].isNull() && m_closed_in_cash_management_isValid;

    m_closed_in_customer_ledger_isValid = ::OpenAPI::fromJsonValue(m_closed_in_customer_ledger, json[QString("closedInCustomerLedger")]);
    m_closed_in_customer_ledger_isSet = !json[QString("closedInCustomerLedger")].isNull() && m_closed_in_customer_ledger_isValid;

    m_closed_in_fixed_assets_isValid = ::OpenAPI::fromJsonValue(m_closed_in_fixed_assets, json[QString("closedInFixedAssets")]);
    m_closed_in_fixed_assets_isSet = !json[QString("closedInFixedAssets")].isNull() && m_closed_in_fixed_assets_isValid;

    m_closed_in_general_ledger_isValid = ::OpenAPI::fromJsonValue(m_closed_in_general_ledger, json[QString("closedInGeneralLedger")]);
    m_closed_in_general_ledger_isSet = !json[QString("closedInGeneralLedger")].isNull() && m_closed_in_general_ledger_isValid;

    m_closed_in_inventory_management_isValid = ::OpenAPI::fromJsonValue(m_closed_in_inventory_management, json[QString("closedInInventoryManagement")]);
    m_closed_in_inventory_management_isSet = !json[QString("closedInInventoryManagement")].isNull() && m_closed_in_inventory_management_isValid;

    m_closed_in_supplier_ledger_isValid = ::OpenAPI::fromJsonValue(m_closed_in_supplier_ledger, json[QString("closedInSupplierLedger")]);
    m_closed_in_supplier_ledger_isSet = !json[QString("closedInSupplierLedger")].isNull() && m_closed_in_supplier_ledger_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_end_date_isValid = ::OpenAPI::fromJsonValue(m_end_date, json[QString("endDate")]);
    m_end_date_isSet = !json[QString("endDate")].isNull() && m_end_date_isValid;

    m_period_isValid = ::OpenAPI::fromJsonValue(m_period, json[QString("period")]);
    m_period_isSet = !json[QString("period")].isNull() && m_period_isValid;

    m_start_date_isValid = ::OpenAPI::fromJsonValue(m_start_date, json[QString("startDate")]);
    m_start_date_isSet = !json[QString("startDate")].isNull() && m_start_date_isValid;

    m_year_isValid = ::OpenAPI::fromJsonValue(m_year, json[QString("year")]);
    m_year_isSet = !json[QString("year")].isNull() && m_year_isValid;
}

QString OAIFinancialPeriodDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFinancialPeriodDto::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_closed_in_cash_management_isSet) {
        obj.insert(QString("closedInCashManagement"), ::OpenAPI::toJsonValue(m_closed_in_cash_management));
    }
    if (m_closed_in_customer_ledger_isSet) {
        obj.insert(QString("closedInCustomerLedger"), ::OpenAPI::toJsonValue(m_closed_in_customer_ledger));
    }
    if (m_closed_in_fixed_assets_isSet) {
        obj.insert(QString("closedInFixedAssets"), ::OpenAPI::toJsonValue(m_closed_in_fixed_assets));
    }
    if (m_closed_in_general_ledger_isSet) {
        obj.insert(QString("closedInGeneralLedger"), ::OpenAPI::toJsonValue(m_closed_in_general_ledger));
    }
    if (m_closed_in_inventory_management_isSet) {
        obj.insert(QString("closedInInventoryManagement"), ::OpenAPI::toJsonValue(m_closed_in_inventory_management));
    }
    if (m_closed_in_supplier_ledger_isSet) {
        obj.insert(QString("closedInSupplierLedger"), ::OpenAPI::toJsonValue(m_closed_in_supplier_ledger));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_end_date_isSet) {
        obj.insert(QString("endDate"), ::OpenAPI::toJsonValue(m_end_date));
    }
    if (m_period_isSet) {
        obj.insert(QString("period"), ::OpenAPI::toJsonValue(m_period));
    }
    if (m_start_date_isSet) {
        obj.insert(QString("startDate"), ::OpenAPI::toJsonValue(m_start_date));
    }
    if (m_year_isSet) {
        obj.insert(QString("year"), ::OpenAPI::toJsonValue(m_year));
    }
    return obj;
}

bool OAIFinancialPeriodDto::isActive() const {
    return m_active;
}
void OAIFinancialPeriodDto::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIFinancialPeriodDto::is_active_Set() const{
    return m_active_isSet;
}

bool OAIFinancialPeriodDto::is_active_Valid() const{
    return m_active_isValid;
}

bool OAIFinancialPeriodDto::isClosedInCashManagement() const {
    return m_closed_in_cash_management;
}
void OAIFinancialPeriodDto::setClosedInCashManagement(const bool &closed_in_cash_management) {
    m_closed_in_cash_management = closed_in_cash_management;
    m_closed_in_cash_management_isSet = true;
}

bool OAIFinancialPeriodDto::is_closed_in_cash_management_Set() const{
    return m_closed_in_cash_management_isSet;
}

bool OAIFinancialPeriodDto::is_closed_in_cash_management_Valid() const{
    return m_closed_in_cash_management_isValid;
}

bool OAIFinancialPeriodDto::isClosedInCustomerLedger() const {
    return m_closed_in_customer_ledger;
}
void OAIFinancialPeriodDto::setClosedInCustomerLedger(const bool &closed_in_customer_ledger) {
    m_closed_in_customer_ledger = closed_in_customer_ledger;
    m_closed_in_customer_ledger_isSet = true;
}

bool OAIFinancialPeriodDto::is_closed_in_customer_ledger_Set() const{
    return m_closed_in_customer_ledger_isSet;
}

bool OAIFinancialPeriodDto::is_closed_in_customer_ledger_Valid() const{
    return m_closed_in_customer_ledger_isValid;
}

bool OAIFinancialPeriodDto::isClosedInFixedAssets() const {
    return m_closed_in_fixed_assets;
}
void OAIFinancialPeriodDto::setClosedInFixedAssets(const bool &closed_in_fixed_assets) {
    m_closed_in_fixed_assets = closed_in_fixed_assets;
    m_closed_in_fixed_assets_isSet = true;
}

bool OAIFinancialPeriodDto::is_closed_in_fixed_assets_Set() const{
    return m_closed_in_fixed_assets_isSet;
}

bool OAIFinancialPeriodDto::is_closed_in_fixed_assets_Valid() const{
    return m_closed_in_fixed_assets_isValid;
}

bool OAIFinancialPeriodDto::isClosedInGeneralLedger() const {
    return m_closed_in_general_ledger;
}
void OAIFinancialPeriodDto::setClosedInGeneralLedger(const bool &closed_in_general_ledger) {
    m_closed_in_general_ledger = closed_in_general_ledger;
    m_closed_in_general_ledger_isSet = true;
}

bool OAIFinancialPeriodDto::is_closed_in_general_ledger_Set() const{
    return m_closed_in_general_ledger_isSet;
}

bool OAIFinancialPeriodDto::is_closed_in_general_ledger_Valid() const{
    return m_closed_in_general_ledger_isValid;
}

bool OAIFinancialPeriodDto::isClosedInInventoryManagement() const {
    return m_closed_in_inventory_management;
}
void OAIFinancialPeriodDto::setClosedInInventoryManagement(const bool &closed_in_inventory_management) {
    m_closed_in_inventory_management = closed_in_inventory_management;
    m_closed_in_inventory_management_isSet = true;
}

bool OAIFinancialPeriodDto::is_closed_in_inventory_management_Set() const{
    return m_closed_in_inventory_management_isSet;
}

bool OAIFinancialPeriodDto::is_closed_in_inventory_management_Valid() const{
    return m_closed_in_inventory_management_isValid;
}

bool OAIFinancialPeriodDto::isClosedInSupplierLedger() const {
    return m_closed_in_supplier_ledger;
}
void OAIFinancialPeriodDto::setClosedInSupplierLedger(const bool &closed_in_supplier_ledger) {
    m_closed_in_supplier_ledger = closed_in_supplier_ledger;
    m_closed_in_supplier_ledger_isSet = true;
}

bool OAIFinancialPeriodDto::is_closed_in_supplier_ledger_Set() const{
    return m_closed_in_supplier_ledger_isSet;
}

bool OAIFinancialPeriodDto::is_closed_in_supplier_ledger_Valid() const{
    return m_closed_in_supplier_ledger_isValid;
}

QString OAIFinancialPeriodDto::getDescription() const {
    return m_description;
}
void OAIFinancialPeriodDto::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIFinancialPeriodDto::is_description_Set() const{
    return m_description_isSet;
}

bool OAIFinancialPeriodDto::is_description_Valid() const{
    return m_description_isValid;
}

QDateTime OAIFinancialPeriodDto::getEndDate() const {
    return m_end_date;
}
void OAIFinancialPeriodDto::setEndDate(const QDateTime &end_date) {
    m_end_date = end_date;
    m_end_date_isSet = true;
}

bool OAIFinancialPeriodDto::is_end_date_Set() const{
    return m_end_date_isSet;
}

bool OAIFinancialPeriodDto::is_end_date_Valid() const{
    return m_end_date_isValid;
}

QString OAIFinancialPeriodDto::getPeriod() const {
    return m_period;
}
void OAIFinancialPeriodDto::setPeriod(const QString &period) {
    m_period = period;
    m_period_isSet = true;
}

bool OAIFinancialPeriodDto::is_period_Set() const{
    return m_period_isSet;
}

bool OAIFinancialPeriodDto::is_period_Valid() const{
    return m_period_isValid;
}

QDateTime OAIFinancialPeriodDto::getStartDate() const {
    return m_start_date;
}
void OAIFinancialPeriodDto::setStartDate(const QDateTime &start_date) {
    m_start_date = start_date;
    m_start_date_isSet = true;
}

bool OAIFinancialPeriodDto::is_start_date_Set() const{
    return m_start_date_isSet;
}

bool OAIFinancialPeriodDto::is_start_date_Valid() const{
    return m_start_date_isValid;
}

qint32 OAIFinancialPeriodDto::getYear() const {
    return m_year;
}
void OAIFinancialPeriodDto::setYear(const qint32 &year) {
    m_year = year;
    m_year_isSet = true;
}

bool OAIFinancialPeriodDto::is_year_Set() const{
    return m_year_isSet;
}

bool OAIFinancialPeriodDto::is_year_Valid() const{
    return m_year_isValid;
}

bool OAIFinancialPeriodDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_closed_in_cash_management_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_closed_in_customer_ledger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_closed_in_fixed_assets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_closed_in_general_ledger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_closed_in_inventory_management_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_closed_in_supplier_ledger_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_year_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFinancialPeriodDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
