/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetailsInFixedAssetDto.h
 *
 * The details of this fixed asset
 */

#ifndef OAIDetailsInFixedAssetDto_H
#define OAIDetailsInFixedAssetDto_H

#include <QJsonObject>

#include "OAIDisposalMethodInDetailsDto.h"
#include "OAILeaseAndRentInfoInDetailsDto.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDisposalMethodInDetailsDto;
class OAILeaseAndRentInfoInDetailsDto;

class OAIDetailsInFixedAssetDto : public OAIObject {
public:
    OAIDetailsInFixedAssetDto();
    OAIDetailsInFixedAssetDto(QString json);
    ~OAIDetailsInFixedAssetDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAcquisitionCost() const;
    void setAcquisitionCost(const double &acquisition_cost);
    bool is_acquisition_cost_Set() const;
    bool is_acquisition_cost_Valid() const;

    QString getBillNumber() const;
    void setBillNumber(const QString &bill_number);
    bool is_bill_number_Set() const;
    bool is_bill_number_Valid() const;

    QDateTime getDepreciateFromDate() const;
    void setDepreciateFromDate(const QDateTime &depreciate_from_date);
    bool is_depreciate_from_date_Set() const;
    bool is_depreciate_from_date_Valid() const;

    QDateTime getDisposalDate() const;
    void setDisposalDate(const QDateTime &disposal_date);
    bool is_disposal_date_Set() const;
    bool is_disposal_date_Valid() const;

    OAIDisposalMethodInDetailsDto getDisposalMethod() const;
    void setDisposalMethod(const OAIDisposalMethodInDetailsDto &disposal_method);
    bool is_disposal_method_Set() const;
    bool is_disposal_method_Valid() const;

    qint32 getDisposalMethodId() const;
    void setDisposalMethodId(const qint32 &disposal_method_id);
    bool is_disposal_method_id_Set() const;
    bool is_disposal_method_id_Valid() const;

    QString getDisposalPeriodId() const;
    void setDisposalPeriodId(const QString &disposal_period_id);
    bool is_disposal_period_id_Set() const;
    bool is_disposal_period_id_Valid() const;

    OAILeaseAndRentInfoInDetailsDto getLeaseAndRentInfo() const;
    void setLeaseAndRentInfo(const OAILeaseAndRentInfoInDetailsDto &lease_and_rent_info);
    bool is_lease_and_rent_info_Set() const;
    bool is_lease_and_rent_info_Valid() const;

    QString getPropertyType() const;
    void setPropertyType(const QString &property_type);
    bool is_property_type_Set() const;
    bool is_property_type_Valid() const;

    QDateTime getReceiptDate() const;
    void setReceiptDate(const QDateTime &receipt_date);
    bool is_receipt_date_Set() const;
    bool is_receipt_date_Valid() const;

    double getSaleAmount() const;
    void setSaleAmount(const double &sale_amount);
    bool is_sale_amount_Set() const;
    bool is_sale_amount_Valid() const;

    double getSalvageAmount() const;
    void setSalvageAmount(const double &salvage_amount);
    bool is_salvage_amount_Set() const;
    bool is_salvage_amount_Valid() const;

    QString getSerialNumber() const;
    void setSerialNumber(const QString &serial_number);
    bool is_serial_number_Set() const;
    bool is_serial_number_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_acquisition_cost;
    bool m_acquisition_cost_isSet;
    bool m_acquisition_cost_isValid;

    QString m_bill_number;
    bool m_bill_number_isSet;
    bool m_bill_number_isValid;

    QDateTime m_depreciate_from_date;
    bool m_depreciate_from_date_isSet;
    bool m_depreciate_from_date_isValid;

    QDateTime m_disposal_date;
    bool m_disposal_date_isSet;
    bool m_disposal_date_isValid;

    OAIDisposalMethodInDetailsDto m_disposal_method;
    bool m_disposal_method_isSet;
    bool m_disposal_method_isValid;

    qint32 m_disposal_method_id;
    bool m_disposal_method_id_isSet;
    bool m_disposal_method_id_isValid;

    QString m_disposal_period_id;
    bool m_disposal_period_id_isSet;
    bool m_disposal_period_id_isValid;

    OAILeaseAndRentInfoInDetailsDto m_lease_and_rent_info;
    bool m_lease_and_rent_info_isSet;
    bool m_lease_and_rent_info_isValid;

    QString m_property_type;
    bool m_property_type_isSet;
    bool m_property_type_isValid;

    QDateTime m_receipt_date;
    bool m_receipt_date_isSet;
    bool m_receipt_date_isValid;

    double m_sale_amount;
    bool m_sale_amount_isSet;
    bool m_sale_amount_isValid;

    double m_salvage_amount;
    bool m_salvage_amount_isSet;
    bool m_salvage_amount_isValid;

    QString m_serial_number;
    bool m_serial_number_isSet;
    bool m_serial_number_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetailsInFixedAssetDto)

#endif // OAIDetailsInFixedAssetDto_H
