/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventoryCrossReferenceUpdateDto.h
 *
 * 
 */

#ifndef OAIInventoryCrossReferenceUpdateDto_H
#define OAIInventoryCrossReferenceUpdateDto_H

#include <QJsonObject>

#include "OAIAlternateTypeInInventoryCrossReferenceUpdateDto.h"
#include "OAIDtoValueOfString.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDtoValueOfString;
class OAIAlternateTypeInInventoryCrossReferenceUpdateDto;

class OAIInventoryCrossReferenceUpdateDto : public OAIObject {
public:
    OAIInventoryCrossReferenceUpdateDto();
    OAIInventoryCrossReferenceUpdateDto(QString json);
    ~OAIInventoryCrossReferenceUpdateDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDtoValueOfString getAlternateId() const;
    void setAlternateId(const OAIDtoValueOfString &alternate_id);
    bool is_alternate_id_Set() const;
    bool is_alternate_id_Valid() const;

    OAIAlternateTypeInInventoryCrossReferenceUpdateDto getAlternateType() const;
    void setAlternateType(const OAIAlternateTypeInInventoryCrossReferenceUpdateDto &alternate_type);
    bool is_alternate_type_Set() const;
    bool is_alternate_type_Valid() const;

    OAIDtoValueOfString getBAccount() const;
    void setBAccount(const OAIDtoValueOfString &b_account);
    bool is_b_account_Set() const;
    bool is_b_account_Valid() const;

    OAIDtoValueOfString getDescription() const;
    void setDescription(const OAIDtoValueOfString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    OAIDtoValueOfString getUom() const;
    void setUom(const OAIDtoValueOfString &uom);
    bool is_uom_Set() const;
    bool is_uom_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDtoValueOfString m_alternate_id;
    bool m_alternate_id_isSet;
    bool m_alternate_id_isValid;

    OAIAlternateTypeInInventoryCrossReferenceUpdateDto m_alternate_type;
    bool m_alternate_type_isSet;
    bool m_alternate_type_isValid;

    OAIDtoValueOfString m_b_account;
    bool m_b_account_isSet;
    bool m_b_account_isValid;

    OAIDtoValueOfString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    OAIDtoValueOfString m_uom;
    bool m_uom_isSet;
    bool m_uom_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventoryCrossReferenceUpdateDto)

#endif // OAIInventoryCrossReferenceUpdateDto_H
