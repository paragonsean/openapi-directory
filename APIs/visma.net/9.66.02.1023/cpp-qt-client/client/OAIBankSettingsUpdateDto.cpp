/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBankSettingsUpdateDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBankSettingsUpdateDto::OAIBankSettingsUpdateDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBankSettingsUpdateDto::OAIBankSettingsUpdateDto() {
    this->initializeModel();
}

OAIBankSettingsUpdateDto::~OAIBankSettingsUpdateDto() {}

void OAIBankSettingsUpdateDto::initializeModel() {

    m_bank_address1_isSet = false;
    m_bank_address1_isValid = false;

    m_bank_address2_isSet = false;
    m_bank_address2_isValid = false;

    m_bank_address3_isSet = false;
    m_bank_address3_isValid = false;

    m_bank_country_isSet = false;
    m_bank_country_isValid = false;

    m_bank_name_isSet = false;
    m_bank_name_isValid = false;

    m_bba_n2_isSet = false;
    m_bba_n2_isValid = false;

    m_bba_n3_isSet = false;
    m_bba_n3_isValid = false;

    m_bban_isSet = false;
    m_bban_isValid = false;

    m_bic_isSet = false;
    m_bic_isValid = false;

    m_creditor_id_isSet = false;
    m_creditor_id_isValid = false;

    m_iban_isSet = false;
    m_iban_isValid = false;
}

void OAIBankSettingsUpdateDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBankSettingsUpdateDto::fromJsonObject(QJsonObject json) {

    m_bank_address1_isValid = ::OpenAPI::fromJsonValue(m_bank_address1, json[QString("bankAddress1")]);
    m_bank_address1_isSet = !json[QString("bankAddress1")].isNull() && m_bank_address1_isValid;

    m_bank_address2_isValid = ::OpenAPI::fromJsonValue(m_bank_address2, json[QString("bankAddress2")]);
    m_bank_address2_isSet = !json[QString("bankAddress2")].isNull() && m_bank_address2_isValid;

    m_bank_address3_isValid = ::OpenAPI::fromJsonValue(m_bank_address3, json[QString("bankAddress3")]);
    m_bank_address3_isSet = !json[QString("bankAddress3")].isNull() && m_bank_address3_isValid;

    m_bank_country_isValid = ::OpenAPI::fromJsonValue(m_bank_country, json[QString("bankCountry")]);
    m_bank_country_isSet = !json[QString("bankCountry")].isNull() && m_bank_country_isValid;

    m_bank_name_isValid = ::OpenAPI::fromJsonValue(m_bank_name, json[QString("bankName")]);
    m_bank_name_isSet = !json[QString("bankName")].isNull() && m_bank_name_isValid;

    m_bba_n2_isValid = ::OpenAPI::fromJsonValue(m_bba_n2, json[QString("bbaN2")]);
    m_bba_n2_isSet = !json[QString("bbaN2")].isNull() && m_bba_n2_isValid;

    m_bba_n3_isValid = ::OpenAPI::fromJsonValue(m_bba_n3, json[QString("bbaN3")]);
    m_bba_n3_isSet = !json[QString("bbaN3")].isNull() && m_bba_n3_isValid;

    m_bban_isValid = ::OpenAPI::fromJsonValue(m_bban, json[QString("bban")]);
    m_bban_isSet = !json[QString("bban")].isNull() && m_bban_isValid;

    m_bic_isValid = ::OpenAPI::fromJsonValue(m_bic, json[QString("bic")]);
    m_bic_isSet = !json[QString("bic")].isNull() && m_bic_isValid;

    m_creditor_id_isValid = ::OpenAPI::fromJsonValue(m_creditor_id, json[QString("creditorId")]);
    m_creditor_id_isSet = !json[QString("creditorId")].isNull() && m_creditor_id_isValid;

    m_iban_isValid = ::OpenAPI::fromJsonValue(m_iban, json[QString("iban")]);
    m_iban_isSet = !json[QString("iban")].isNull() && m_iban_isValid;
}

QString OAIBankSettingsUpdateDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBankSettingsUpdateDto::asJsonObject() const {
    QJsonObject obj;
    if (m_bank_address1.isSet()) {
        obj.insert(QString("bankAddress1"), ::OpenAPI::toJsonValue(m_bank_address1));
    }
    if (m_bank_address2.isSet()) {
        obj.insert(QString("bankAddress2"), ::OpenAPI::toJsonValue(m_bank_address2));
    }
    if (m_bank_address3.isSet()) {
        obj.insert(QString("bankAddress3"), ::OpenAPI::toJsonValue(m_bank_address3));
    }
    if (m_bank_country.isSet()) {
        obj.insert(QString("bankCountry"), ::OpenAPI::toJsonValue(m_bank_country));
    }
    if (m_bank_name.isSet()) {
        obj.insert(QString("bankName"), ::OpenAPI::toJsonValue(m_bank_name));
    }
    if (m_bba_n2.isSet()) {
        obj.insert(QString("bbaN2"), ::OpenAPI::toJsonValue(m_bba_n2));
    }
    if (m_bba_n3.isSet()) {
        obj.insert(QString("bbaN3"), ::OpenAPI::toJsonValue(m_bba_n3));
    }
    if (m_bban.isSet()) {
        obj.insert(QString("bban"), ::OpenAPI::toJsonValue(m_bban));
    }
    if (m_bic.isSet()) {
        obj.insert(QString("bic"), ::OpenAPI::toJsonValue(m_bic));
    }
    if (m_creditor_id.isSet()) {
        obj.insert(QString("creditorId"), ::OpenAPI::toJsonValue(m_creditor_id));
    }
    if (m_iban.isSet()) {
        obj.insert(QString("iban"), ::OpenAPI::toJsonValue(m_iban));
    }
    return obj;
}

OAIBankAddress1InBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBankAddress1() const {
    return m_bank_address1;
}
void OAIBankSettingsUpdateDto::setBankAddress1(const OAIBankAddress1InBankSettingsUpdateDto &bank_address1) {
    m_bank_address1 = bank_address1;
    m_bank_address1_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bank_address1_Set() const{
    return m_bank_address1_isSet;
}

bool OAIBankSettingsUpdateDto::is_bank_address1_Valid() const{
    return m_bank_address1_isValid;
}

OAIBankAddress2InBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBankAddress2() const {
    return m_bank_address2;
}
void OAIBankSettingsUpdateDto::setBankAddress2(const OAIBankAddress2InBankSettingsUpdateDto &bank_address2) {
    m_bank_address2 = bank_address2;
    m_bank_address2_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bank_address2_Set() const{
    return m_bank_address2_isSet;
}

bool OAIBankSettingsUpdateDto::is_bank_address2_Valid() const{
    return m_bank_address2_isValid;
}

OAIBankAddress3InBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBankAddress3() const {
    return m_bank_address3;
}
void OAIBankSettingsUpdateDto::setBankAddress3(const OAIBankAddress3InBankSettingsUpdateDto &bank_address3) {
    m_bank_address3 = bank_address3;
    m_bank_address3_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bank_address3_Set() const{
    return m_bank_address3_isSet;
}

bool OAIBankSettingsUpdateDto::is_bank_address3_Valid() const{
    return m_bank_address3_isValid;
}

OAIBankCountryInBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBankCountry() const {
    return m_bank_country;
}
void OAIBankSettingsUpdateDto::setBankCountry(const OAIBankCountryInBankSettingsUpdateDto &bank_country) {
    m_bank_country = bank_country;
    m_bank_country_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bank_country_Set() const{
    return m_bank_country_isSet;
}

bool OAIBankSettingsUpdateDto::is_bank_country_Valid() const{
    return m_bank_country_isValid;
}

OAIBankNameInBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBankName() const {
    return m_bank_name;
}
void OAIBankSettingsUpdateDto::setBankName(const OAIBankNameInBankSettingsUpdateDto &bank_name) {
    m_bank_name = bank_name;
    m_bank_name_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bank_name_Set() const{
    return m_bank_name_isSet;
}

bool OAIBankSettingsUpdateDto::is_bank_name_Valid() const{
    return m_bank_name_isValid;
}

OAIBbaN2InBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBbaN2() const {
    return m_bba_n2;
}
void OAIBankSettingsUpdateDto::setBbaN2(const OAIBbaN2InBankSettingsUpdateDto &bba_n2) {
    m_bba_n2 = bba_n2;
    m_bba_n2_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bba_n2_Set() const{
    return m_bba_n2_isSet;
}

bool OAIBankSettingsUpdateDto::is_bba_n2_Valid() const{
    return m_bba_n2_isValid;
}

OAIBbaN3InBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBbaN3() const {
    return m_bba_n3;
}
void OAIBankSettingsUpdateDto::setBbaN3(const OAIBbaN3InBankSettingsUpdateDto &bba_n3) {
    m_bba_n3 = bba_n3;
    m_bba_n3_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bba_n3_Set() const{
    return m_bba_n3_isSet;
}

bool OAIBankSettingsUpdateDto::is_bba_n3_Valid() const{
    return m_bba_n3_isValid;
}

OAIBbanInBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBban() const {
    return m_bban;
}
void OAIBankSettingsUpdateDto::setBban(const OAIBbanInBankSettingsUpdateDto &bban) {
    m_bban = bban;
    m_bban_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bban_Set() const{
    return m_bban_isSet;
}

bool OAIBankSettingsUpdateDto::is_bban_Valid() const{
    return m_bban_isValid;
}

OAIBicInBankSettingsUpdateDto OAIBankSettingsUpdateDto::getBic() const {
    return m_bic;
}
void OAIBankSettingsUpdateDto::setBic(const OAIBicInBankSettingsUpdateDto &bic) {
    m_bic = bic;
    m_bic_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_bic_Set() const{
    return m_bic_isSet;
}

bool OAIBankSettingsUpdateDto::is_bic_Valid() const{
    return m_bic_isValid;
}

OAICreditorIdInBankSettingsUpdateDto OAIBankSettingsUpdateDto::getCreditorId() const {
    return m_creditor_id;
}
void OAIBankSettingsUpdateDto::setCreditorId(const OAICreditorIdInBankSettingsUpdateDto &creditor_id) {
    m_creditor_id = creditor_id;
    m_creditor_id_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_creditor_id_Set() const{
    return m_creditor_id_isSet;
}

bool OAIBankSettingsUpdateDto::is_creditor_id_Valid() const{
    return m_creditor_id_isValid;
}

OAIIbanInBankSettingsUpdateDto OAIBankSettingsUpdateDto::getIban() const {
    return m_iban;
}
void OAIBankSettingsUpdateDto::setIban(const OAIIbanInBankSettingsUpdateDto &iban) {
    m_iban = iban;
    m_iban_isSet = true;
}

bool OAIBankSettingsUpdateDto::is_iban_Set() const{
    return m_iban_isSet;
}

bool OAIBankSettingsUpdateDto::is_iban_Valid() const{
    return m_iban_isValid;
}

bool OAIBankSettingsUpdateDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bank_address1.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_address2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_address3.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_country.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bank_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bba_n2.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bba_n3.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bban.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_bic.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_creditor_id.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_iban.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBankSettingsUpdateDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
