/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRotRutDistributionDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRotRutDistributionDto::OAIRotRutDistributionDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRotRutDistributionDto::OAIRotRutDistributionDto() {
    this->initializeModel();
}

OAIRotRutDistributionDto::~OAIRotRutDistributionDto() {}

void OAIRotRutDistributionDto::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_extra_isSet = false;
    m_extra_isValid = false;

    m_line_nbr_isSet = false;
    m_line_nbr_isValid = false;

    m_personal_id_isSet = false;
    m_personal_id_isValid = false;
}

void OAIRotRutDistributionDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRotRutDistributionDto::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_extra_isValid = ::OpenAPI::fromJsonValue(m_extra, json[QString("extra")]);
    m_extra_isSet = !json[QString("extra")].isNull() && m_extra_isValid;

    m_line_nbr_isValid = ::OpenAPI::fromJsonValue(m_line_nbr, json[QString("lineNbr")]);
    m_line_nbr_isSet = !json[QString("lineNbr")].isNull() && m_line_nbr_isValid;

    m_personal_id_isValid = ::OpenAPI::fromJsonValue(m_personal_id, json[QString("personalId")]);
    m_personal_id_isSet = !json[QString("personalId")].isNull() && m_personal_id_isValid;
}

QString OAIRotRutDistributionDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRotRutDistributionDto::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_extra_isSet) {
        obj.insert(QString("extra"), ::OpenAPI::toJsonValue(m_extra));
    }
    if (m_line_nbr_isSet) {
        obj.insert(QString("lineNbr"), ::OpenAPI::toJsonValue(m_line_nbr));
    }
    if (m_personal_id_isSet) {
        obj.insert(QString("personalId"), ::OpenAPI::toJsonValue(m_personal_id));
    }
    return obj;
}

double OAIRotRutDistributionDto::getAmount() const {
    return m_amount;
}
void OAIRotRutDistributionDto::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIRotRutDistributionDto::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIRotRutDistributionDto::is_amount_Valid() const{
    return m_amount_isValid;
}

bool OAIRotRutDistributionDto::isExtra() const {
    return m_extra;
}
void OAIRotRutDistributionDto::setExtra(const bool &extra) {
    m_extra = extra;
    m_extra_isSet = true;
}

bool OAIRotRutDistributionDto::is_extra_Set() const{
    return m_extra_isSet;
}

bool OAIRotRutDistributionDto::is_extra_Valid() const{
    return m_extra_isValid;
}

qint32 OAIRotRutDistributionDto::getLineNbr() const {
    return m_line_nbr;
}
void OAIRotRutDistributionDto::setLineNbr(const qint32 &line_nbr) {
    m_line_nbr = line_nbr;
    m_line_nbr_isSet = true;
}

bool OAIRotRutDistributionDto::is_line_nbr_Set() const{
    return m_line_nbr_isSet;
}

bool OAIRotRutDistributionDto::is_line_nbr_Valid() const{
    return m_line_nbr_isValid;
}

QString OAIRotRutDistributionDto::getPersonalId() const {
    return m_personal_id;
}
void OAIRotRutDistributionDto::setPersonalId(const QString &personal_id) {
    m_personal_id = personal_id;
    m_personal_id_isSet = true;
}

bool OAIRotRutDistributionDto::is_personal_id_Set() const{
    return m_personal_id_isSet;
}

bool OAIRotRutDistributionDto::is_personal_id_Valid() const{
    return m_personal_id_isValid;
}

bool OAIRotRutDistributionDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extra_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_line_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_personal_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRotRutDistributionDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
