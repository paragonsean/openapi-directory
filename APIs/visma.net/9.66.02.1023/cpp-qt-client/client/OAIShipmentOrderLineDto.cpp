/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipmentOrderLineDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipmentOrderLineDto::OAIShipmentOrderLineDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipmentOrderLineDto::OAIShipmentOrderLineDto() {
    this->initializeModel();
}

OAIShipmentOrderLineDto::~OAIShipmentOrderLineDto() {}

void OAIShipmentOrderLineDto::initializeModel() {

    m_inventory_doc_type_isSet = false;
    m_inventory_doc_type_isValid = false;

    m_inventory_ref_nbr_isSet = false;
    m_inventory_ref_nbr_isValid = false;

    m_invoice_nbr_isSet = false;
    m_invoice_nbr_isValid = false;

    m_invoice_type_isSet = false;
    m_invoice_type_isValid = false;

    m_note_isSet = false;
    m_note_isValid = false;

    m_order_nbr_isSet = false;
    m_order_nbr_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;

    m_shipped_qty_isSet = false;
    m_shipped_qty_isValid = false;

    m_shipped_volume_isSet = false;
    m_shipped_volume_isValid = false;

    m_shipped_weight_isSet = false;
    m_shipped_weight_isValid = false;
}

void OAIShipmentOrderLineDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipmentOrderLineDto::fromJsonObject(QJsonObject json) {

    m_inventory_doc_type_isValid = ::OpenAPI::fromJsonValue(m_inventory_doc_type, json[QString("inventoryDocType")]);
    m_inventory_doc_type_isSet = !json[QString("inventoryDocType")].isNull() && m_inventory_doc_type_isValid;

    m_inventory_ref_nbr_isValid = ::OpenAPI::fromJsonValue(m_inventory_ref_nbr, json[QString("inventoryRefNbr")]);
    m_inventory_ref_nbr_isSet = !json[QString("inventoryRefNbr")].isNull() && m_inventory_ref_nbr_isValid;

    m_invoice_nbr_isValid = ::OpenAPI::fromJsonValue(m_invoice_nbr, json[QString("invoiceNbr")]);
    m_invoice_nbr_isSet = !json[QString("invoiceNbr")].isNull() && m_invoice_nbr_isValid;

    m_invoice_type_isValid = ::OpenAPI::fromJsonValue(m_invoice_type, json[QString("invoiceType")]);
    m_invoice_type_isSet = !json[QString("invoiceType")].isNull() && m_invoice_type_isValid;

    m_note_isValid = ::OpenAPI::fromJsonValue(m_note, json[QString("note")]);
    m_note_isSet = !json[QString("note")].isNull() && m_note_isValid;

    m_order_nbr_isValid = ::OpenAPI::fromJsonValue(m_order_nbr, json[QString("orderNbr")]);
    m_order_nbr_isSet = !json[QString("orderNbr")].isNull() && m_order_nbr_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;

    m_shipped_qty_isValid = ::OpenAPI::fromJsonValue(m_shipped_qty, json[QString("shippedQty")]);
    m_shipped_qty_isSet = !json[QString("shippedQty")].isNull() && m_shipped_qty_isValid;

    m_shipped_volume_isValid = ::OpenAPI::fromJsonValue(m_shipped_volume, json[QString("shippedVolume")]);
    m_shipped_volume_isSet = !json[QString("shippedVolume")].isNull() && m_shipped_volume_isValid;

    m_shipped_weight_isValid = ::OpenAPI::fromJsonValue(m_shipped_weight, json[QString("shippedWeight")]);
    m_shipped_weight_isSet = !json[QString("shippedWeight")].isNull() && m_shipped_weight_isValid;
}

QString OAIShipmentOrderLineDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipmentOrderLineDto::asJsonObject() const {
    QJsonObject obj;
    if (m_inventory_doc_type_isSet) {
        obj.insert(QString("inventoryDocType"), ::OpenAPI::toJsonValue(m_inventory_doc_type));
    }
    if (m_inventory_ref_nbr_isSet) {
        obj.insert(QString("inventoryRefNbr"), ::OpenAPI::toJsonValue(m_inventory_ref_nbr));
    }
    if (m_invoice_nbr_isSet) {
        obj.insert(QString("invoiceNbr"), ::OpenAPI::toJsonValue(m_invoice_nbr));
    }
    if (m_invoice_type_isSet) {
        obj.insert(QString("invoiceType"), ::OpenAPI::toJsonValue(m_invoice_type));
    }
    if (m_note_isSet) {
        obj.insert(QString("note"), ::OpenAPI::toJsonValue(m_note));
    }
    if (m_order_nbr_isSet) {
        obj.insert(QString("orderNbr"), ::OpenAPI::toJsonValue(m_order_nbr));
    }
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    if (m_shipped_qty_isSet) {
        obj.insert(QString("shippedQty"), ::OpenAPI::toJsonValue(m_shipped_qty));
    }
    if (m_shipped_volume_isSet) {
        obj.insert(QString("shippedVolume"), ::OpenAPI::toJsonValue(m_shipped_volume));
    }
    if (m_shipped_weight_isSet) {
        obj.insert(QString("shippedWeight"), ::OpenAPI::toJsonValue(m_shipped_weight));
    }
    return obj;
}

QString OAIShipmentOrderLineDto::getInventoryDocType() const {
    return m_inventory_doc_type;
}
void OAIShipmentOrderLineDto::setInventoryDocType(const QString &inventory_doc_type) {
    m_inventory_doc_type = inventory_doc_type;
    m_inventory_doc_type_isSet = true;
}

bool OAIShipmentOrderLineDto::is_inventory_doc_type_Set() const{
    return m_inventory_doc_type_isSet;
}

bool OAIShipmentOrderLineDto::is_inventory_doc_type_Valid() const{
    return m_inventory_doc_type_isValid;
}

QString OAIShipmentOrderLineDto::getInventoryRefNbr() const {
    return m_inventory_ref_nbr;
}
void OAIShipmentOrderLineDto::setInventoryRefNbr(const QString &inventory_ref_nbr) {
    m_inventory_ref_nbr = inventory_ref_nbr;
    m_inventory_ref_nbr_isSet = true;
}

bool OAIShipmentOrderLineDto::is_inventory_ref_nbr_Set() const{
    return m_inventory_ref_nbr_isSet;
}

bool OAIShipmentOrderLineDto::is_inventory_ref_nbr_Valid() const{
    return m_inventory_ref_nbr_isValid;
}

QString OAIShipmentOrderLineDto::getInvoiceNbr() const {
    return m_invoice_nbr;
}
void OAIShipmentOrderLineDto::setInvoiceNbr(const QString &invoice_nbr) {
    m_invoice_nbr = invoice_nbr;
    m_invoice_nbr_isSet = true;
}

bool OAIShipmentOrderLineDto::is_invoice_nbr_Set() const{
    return m_invoice_nbr_isSet;
}

bool OAIShipmentOrderLineDto::is_invoice_nbr_Valid() const{
    return m_invoice_nbr_isValid;
}

QString OAIShipmentOrderLineDto::getInvoiceType() const {
    return m_invoice_type;
}
void OAIShipmentOrderLineDto::setInvoiceType(const QString &invoice_type) {
    m_invoice_type = invoice_type;
    m_invoice_type_isSet = true;
}

bool OAIShipmentOrderLineDto::is_invoice_type_Set() const{
    return m_invoice_type_isSet;
}

bool OAIShipmentOrderLineDto::is_invoice_type_Valid() const{
    return m_invoice_type_isValid;
}

QString OAIShipmentOrderLineDto::getNote() const {
    return m_note;
}
void OAIShipmentOrderLineDto::setNote(const QString &note) {
    m_note = note;
    m_note_isSet = true;
}

bool OAIShipmentOrderLineDto::is_note_Set() const{
    return m_note_isSet;
}

bool OAIShipmentOrderLineDto::is_note_Valid() const{
    return m_note_isValid;
}

QString OAIShipmentOrderLineDto::getOrderNbr() const {
    return m_order_nbr;
}
void OAIShipmentOrderLineDto::setOrderNbr(const QString &order_nbr) {
    m_order_nbr = order_nbr;
    m_order_nbr_isSet = true;
}

bool OAIShipmentOrderLineDto::is_order_nbr_Set() const{
    return m_order_nbr_isSet;
}

bool OAIShipmentOrderLineDto::is_order_nbr_Valid() const{
    return m_order_nbr_isValid;
}

QString OAIShipmentOrderLineDto::getOrderType() const {
    return m_order_type;
}
void OAIShipmentOrderLineDto::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAIShipmentOrderLineDto::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAIShipmentOrderLineDto::is_order_type_Valid() const{
    return m_order_type_isValid;
}

double OAIShipmentOrderLineDto::getShippedQty() const {
    return m_shipped_qty;
}
void OAIShipmentOrderLineDto::setShippedQty(const double &shipped_qty) {
    m_shipped_qty = shipped_qty;
    m_shipped_qty_isSet = true;
}

bool OAIShipmentOrderLineDto::is_shipped_qty_Set() const{
    return m_shipped_qty_isSet;
}

bool OAIShipmentOrderLineDto::is_shipped_qty_Valid() const{
    return m_shipped_qty_isValid;
}

double OAIShipmentOrderLineDto::getShippedVolume() const {
    return m_shipped_volume;
}
void OAIShipmentOrderLineDto::setShippedVolume(const double &shipped_volume) {
    m_shipped_volume = shipped_volume;
    m_shipped_volume_isSet = true;
}

bool OAIShipmentOrderLineDto::is_shipped_volume_Set() const{
    return m_shipped_volume_isSet;
}

bool OAIShipmentOrderLineDto::is_shipped_volume_Valid() const{
    return m_shipped_volume_isValid;
}

double OAIShipmentOrderLineDto::getShippedWeight() const {
    return m_shipped_weight;
}
void OAIShipmentOrderLineDto::setShippedWeight(const double &shipped_weight) {
    m_shipped_weight = shipped_weight;
    m_shipped_weight_isSet = true;
}

bool OAIShipmentOrderLineDto::is_shipped_weight_Set() const{
    return m_shipped_weight_isSet;
}

bool OAIShipmentOrderLineDto::is_shipped_weight_Valid() const{
    return m_shipped_weight_isValid;
}

bool OAIShipmentOrderLineDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inventory_doc_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_ref_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_note_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_nbr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_volume_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipped_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipmentOrderLineDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
