/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInventoryDto.h
 *
 * 
 */

#ifndef OAIInventoryDto_H
#define OAIInventoryDto_H

#include <QJsonObject>

#include "OAIAccountInformationInInventoryDto.h"
#include "OAIAttachmentDto.h"
#include "OAIAttributeIdValueDto.h"
#include "OAICostPriceStatisticsInInventoryDto.h"
#include "OAIDefaultIssueFromInInventoryDto.h"
#include "OAIDefaultReceiptToInInventoryDto.h"
#include "OAIDefaultWarehouseInInventoryDto.h"
#include "OAIIntrastatInInventoryDto.h"
#include "OAIInventoryCrossReferenceDto.h"
#include "OAIInventoryUnitDto.h"
#include "OAIItemClassInInventoryDto.h"
#include "OAILotSerialClassInInventoryDto.h"
#include "OAIMetadataDto.h"
#include "OAIPackagingInInventoryDto.h"
#include "OAIPostingClassInInventoryDto.h"
#include "OAIPriceClassInInventoryDto.h"
#include "OAIPriceManagerInInventoryDto.h"
#include "OAISalesCategoryLineDto.h"
#include "OAISupplierDetailsLineDto.h"
#include "OAIVatCodeInInventoryDto.h"
#include "OAIWarehouseDetailDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAccountInformationInInventoryDto;
class OAIAttachmentDto;
class OAIAttributeIdValueDto;
class OAICostPriceStatisticsInInventoryDto;
class OAIInventoryCrossReferenceDto;
class OAIDefaultIssueFromInInventoryDto;
class OAIDefaultReceiptToInInventoryDto;
class OAIDefaultWarehouseInInventoryDto;
class OAIIntrastatInInventoryDto;
class OAIInventoryUnitDto;
class OAIItemClassInInventoryDto;
class OAILotSerialClassInInventoryDto;
class OAIMetadataDto;
class OAIPackagingInInventoryDto;
class OAIPostingClassInInventoryDto;
class OAIPriceClassInInventoryDto;
class OAIPriceManagerInInventoryDto;
class OAISalesCategoryLineDto;
class OAISupplierDetailsLineDto;
class OAIVatCodeInInventoryDto;
class OAIWarehouseDetailDto;

class OAIInventoryDto : public OAIObject {
public:
    OAIInventoryDto();
    OAIInventoryDto(QString json);
    ~OAIInventoryDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAccountInformationInInventoryDto getAccountInformation() const;
    void setAccountInformation(const OAIAccountInformationInInventoryDto &account_information);
    bool is_account_information_Set() const;
    bool is_account_information_Valid() const;

    QList<OAIAttachmentDto> getAttachments() const;
    void setAttachments(const QList<OAIAttachmentDto> &attachments);
    bool is_attachments_Set() const;
    bool is_attachments_Valid() const;

    QList<OAIAttributeIdValueDto> getAttributes() const;
    void setAttributes(const QList<OAIAttributeIdValueDto> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getBaseUnit() const;
    void setBaseUnit(const QString &base_unit);
    bool is_base_unit_Set() const;
    bool is_base_unit_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    OAICostPriceStatisticsInInventoryDto getCostPriceStatistics() const;
    void setCostPriceStatistics(const OAICostPriceStatisticsInInventoryDto &cost_price_statistics);
    bool is_cost_price_statistics_Set() const;
    bool is_cost_price_statistics_Valid() const;

    QList<OAIInventoryCrossReferenceDto> getCrossReferences() const;
    void setCrossReferences(const QList<OAIInventoryCrossReferenceDto> &cross_references);
    bool is_cross_references_Set() const;
    bool is_cross_references_Valid() const;

    double getCurrentCost() const;
    void setCurrentCost(const double &current_cost);
    bool is_current_cost_Set() const;
    bool is_current_cost_Valid() const;

    OAIDefaultIssueFromInInventoryDto getDefaultIssueFrom() const;
    void setDefaultIssueFrom(const OAIDefaultIssueFromInInventoryDto &default_issue_from);
    bool is_default_issue_from_Set() const;
    bool is_default_issue_from_Valid() const;

    double getDefaultPrice() const;
    void setDefaultPrice(const double &default_price);
    bool is_default_price_Set() const;
    bool is_default_price_Valid() const;

    OAIDefaultReceiptToInInventoryDto getDefaultReceiptTo() const;
    void setDefaultReceiptTo(const OAIDefaultReceiptToInInventoryDto &default_receipt_to);
    bool is_default_receipt_to_Set() const;
    bool is_default_receipt_to_Valid() const;

    OAIDefaultWarehouseInInventoryDto getDefaultWarehouse() const;
    void setDefaultWarehouse(const OAIDefaultWarehouseInInventoryDto &default_warehouse);
    bool is_default_warehouse_Set() const;
    bool is_default_warehouse_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QDateTime getEffectiveDate() const;
    void setEffectiveDate(const QDateTime &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    QString getErrorInfo() const;
    void setErrorInfo(const QString &error_info);
    bool is_error_info_Set() const;
    bool is_error_info_Valid() const;

    OAIIntrastatInInventoryDto getIntrastat() const;
    void setIntrastat(const OAIIntrastatInInventoryDto &intrastat);
    bool is_intrastat_Set() const;
    bool is_intrastat_Valid() const;

    qint32 getInventoryId() const;
    void setInventoryId(const qint32 &inventory_id);
    bool is_inventory_id_Set() const;
    bool is_inventory_id_Valid() const;

    QString getInventoryNumber() const;
    void setInventoryNumber(const QString &inventory_number);
    bool is_inventory_number_Set() const;
    bool is_inventory_number_Valid() const;

    QList<OAIInventoryUnitDto> getInventoryUnits() const;
    void setInventoryUnits(const QList<OAIInventoryUnitDto> &inventory_units);
    bool is_inventory_units_Set() const;
    bool is_inventory_units_Valid() const;

    OAIItemClassInInventoryDto getItemClass() const;
    void setItemClass(const OAIItemClassInInventoryDto &item_class);
    bool is_item_class_Set() const;
    bool is_item_class_Valid() const;

    bool isKitItem() const;
    void setKitItem(const bool &kit_item);
    bool is_kit_item_Set() const;
    bool is_kit_item_Valid() const;

    double getLastCost() const;
    void setLastCost(const double &last_cost);
    bool is_last_cost_Set() const;
    bool is_last_cost_Valid() const;

    QDateTime getLastModifiedDateTime() const;
    void setLastModifiedDateTime(const QDateTime &last_modified_date_time);
    bool is_last_modified_date_time_Set() const;
    bool is_last_modified_date_time_Valid() const;

    OAILotSerialClassInInventoryDto getLotSerialClass() const;
    void setLotSerialClass(const OAILotSerialClassInInventoryDto &lot_serial_class);
    bool is_lot_serial_class_Set() const;
    bool is_lot_serial_class_Valid() const;

    OAIMetadataDto getMetadata() const;
    void setMetadata(const OAIMetadataDto &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    OAIPackagingInInventoryDto getPackaging() const;
    void setPackaging(const OAIPackagingInInventoryDto &packaging);
    bool is_packaging_Set() const;
    bool is_packaging_Valid() const;

    double getPendingCost() const;
    void setPendingCost(const double &pending_cost);
    bool is_pending_cost_Set() const;
    bool is_pending_cost_Valid() const;

    QDateTime getPendingCostDate() const;
    void setPendingCostDate(const QDateTime &pending_cost_date);
    bool is_pending_cost_date_Set() const;
    bool is_pending_cost_date_Valid() const;

    OAIPostingClassInInventoryDto getPostingClass() const;
    void setPostingClass(const OAIPostingClassInInventoryDto &posting_class);
    bool is_posting_class_Set() const;
    bool is_posting_class_Valid() const;

    OAIPriceClassInInventoryDto getPriceClass() const;
    void setPriceClass(const OAIPriceClassInInventoryDto &price_class);
    bool is_price_class_Set() const;
    bool is_price_class_Valid() const;

    QString getPriceClassId() const;
    void setPriceClassId(const QString &price_class_id);
    bool is_price_class_id_Set() const;
    bool is_price_class_id_Valid() const;

    OAIPriceManagerInInventoryDto getPriceManager() const;
    void setPriceManager(const OAIPriceManagerInInventoryDto &price_manager);
    bool is_price_manager_Set() const;
    bool is_price_manager_Valid() const;

    QString getPriceManagerId() const;
    void setPriceManagerId(const QString &price_manager_id);
    bool is_price_manager_id_Set() const;
    bool is_price_manager_id_Valid() const;

    qint32 getPriceWorkgroupId() const;
    void setPriceWorkgroupId(const qint32 &price_workgroup_id);
    bool is_price_workgroup_id_Set() const;
    bool is_price_workgroup_id_Valid() const;

    QString getPurchaseUnit() const;
    void setPurchaseUnit(const QString &purchase_unit);
    bool is_purchase_unit_Set() const;
    bool is_purchase_unit_Valid() const;

    double getRecommendedPrice() const;
    void setRecommendedPrice(const double &recommended_price);
    bool is_recommended_price_Set() const;
    bool is_recommended_price_Valid() const;

    QList<OAISalesCategoryLineDto> getSalesCategories() const;
    void setSalesCategories(const QList<OAISalesCategoryLineDto> &sales_categories);
    bool is_sales_categories_Set() const;
    bool is_sales_categories_Valid() const;

    QString getSalesUnit() const;
    void setSalesUnit(const QString &sales_unit);
    bool is_sales_unit_Set() const;
    bool is_sales_unit_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    bool isStockItem() const;
    void setStockItem(const bool &stock_item);
    bool is_stock_item_Set() const;
    bool is_stock_item_Valid() const;

    QList<OAISupplierDetailsLineDto> getSupplierDetails() const;
    void setSupplierDetails(const QList<OAISupplierDetailsLineDto> &supplier_details);
    bool is_supplier_details_Set() const;
    bool is_supplier_details_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIVatCodeInInventoryDto getVatCode() const;
    void setVatCode(const OAIVatCodeInInventoryDto &vat_code);
    bool is_vat_code_Set() const;
    bool is_vat_code_Valid() const;

    QList<OAIWarehouseDetailDto> getWarehouseDetails() const;
    void setWarehouseDetails(const QList<OAIWarehouseDetailDto> &warehouse_details);
    bool is_warehouse_details_Set() const;
    bool is_warehouse_details_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAccountInformationInInventoryDto m_account_information;
    bool m_account_information_isSet;
    bool m_account_information_isValid;

    QList<OAIAttachmentDto> m_attachments;
    bool m_attachments_isSet;
    bool m_attachments_isValid;

    QList<OAIAttributeIdValueDto> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_base_unit;
    bool m_base_unit_isSet;
    bool m_base_unit_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    OAICostPriceStatisticsInInventoryDto m_cost_price_statistics;
    bool m_cost_price_statistics_isSet;
    bool m_cost_price_statistics_isValid;

    QList<OAIInventoryCrossReferenceDto> m_cross_references;
    bool m_cross_references_isSet;
    bool m_cross_references_isValid;

    double m_current_cost;
    bool m_current_cost_isSet;
    bool m_current_cost_isValid;

    OAIDefaultIssueFromInInventoryDto m_default_issue_from;
    bool m_default_issue_from_isSet;
    bool m_default_issue_from_isValid;

    double m_default_price;
    bool m_default_price_isSet;
    bool m_default_price_isValid;

    OAIDefaultReceiptToInInventoryDto m_default_receipt_to;
    bool m_default_receipt_to_isSet;
    bool m_default_receipt_to_isValid;

    OAIDefaultWarehouseInInventoryDto m_default_warehouse;
    bool m_default_warehouse_isSet;
    bool m_default_warehouse_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QDateTime m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    QString m_error_info;
    bool m_error_info_isSet;
    bool m_error_info_isValid;

    OAIIntrastatInInventoryDto m_intrastat;
    bool m_intrastat_isSet;
    bool m_intrastat_isValid;

    qint32 m_inventory_id;
    bool m_inventory_id_isSet;
    bool m_inventory_id_isValid;

    QString m_inventory_number;
    bool m_inventory_number_isSet;
    bool m_inventory_number_isValid;

    QList<OAIInventoryUnitDto> m_inventory_units;
    bool m_inventory_units_isSet;
    bool m_inventory_units_isValid;

    OAIItemClassInInventoryDto m_item_class;
    bool m_item_class_isSet;
    bool m_item_class_isValid;

    bool m_kit_item;
    bool m_kit_item_isSet;
    bool m_kit_item_isValid;

    double m_last_cost;
    bool m_last_cost_isSet;
    bool m_last_cost_isValid;

    QDateTime m_last_modified_date_time;
    bool m_last_modified_date_time_isSet;
    bool m_last_modified_date_time_isValid;

    OAILotSerialClassInInventoryDto m_lot_serial_class;
    bool m_lot_serial_class_isSet;
    bool m_lot_serial_class_isValid;

    OAIMetadataDto m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    OAIPackagingInInventoryDto m_packaging;
    bool m_packaging_isSet;
    bool m_packaging_isValid;

    double m_pending_cost;
    bool m_pending_cost_isSet;
    bool m_pending_cost_isValid;

    QDateTime m_pending_cost_date;
    bool m_pending_cost_date_isSet;
    bool m_pending_cost_date_isValid;

    OAIPostingClassInInventoryDto m_posting_class;
    bool m_posting_class_isSet;
    bool m_posting_class_isValid;

    OAIPriceClassInInventoryDto m_price_class;
    bool m_price_class_isSet;
    bool m_price_class_isValid;

    QString m_price_class_id;
    bool m_price_class_id_isSet;
    bool m_price_class_id_isValid;

    OAIPriceManagerInInventoryDto m_price_manager;
    bool m_price_manager_isSet;
    bool m_price_manager_isValid;

    QString m_price_manager_id;
    bool m_price_manager_id_isSet;
    bool m_price_manager_id_isValid;

    qint32 m_price_workgroup_id;
    bool m_price_workgroup_id_isSet;
    bool m_price_workgroup_id_isValid;

    QString m_purchase_unit;
    bool m_purchase_unit_isSet;
    bool m_purchase_unit_isValid;

    double m_recommended_price;
    bool m_recommended_price_isSet;
    bool m_recommended_price_isValid;

    QList<OAISalesCategoryLineDto> m_sales_categories;
    bool m_sales_categories_isSet;
    bool m_sales_categories_isValid;

    QString m_sales_unit;
    bool m_sales_unit_isSet;
    bool m_sales_unit_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    bool m_stock_item;
    bool m_stock_item_isSet;
    bool m_stock_item_isValid;

    QList<OAISupplierDetailsLineDto> m_supplier_details;
    bool m_supplier_details_isSet;
    bool m_supplier_details_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIVatCodeInInventoryDto m_vat_code;
    bool m_vat_code_isSet;
    bool m_vat_code_isValid;

    QList<OAIWarehouseDetailDto> m_warehouse_details;
    bool m_warehouse_details_isSet;
    bool m_warehouse_details_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInventoryDto)

#endif // OAIInventoryDto_H
