/**
 * Visma Net API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 9.66.02.1023
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICountryInCustomerDocumentAddressDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICountryInCustomerDocumentAddressDto::OAICountryInCustomerDocumentAddressDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICountryInCustomerDocumentAddressDto::OAICountryInCustomerDocumentAddressDto() {
    this->initializeModel();
}

OAICountryInCustomerDocumentAddressDto::~OAICountryInCustomerDocumentAddressDto() {}

void OAICountryInCustomerDocumentAddressDto::initializeModel() {

    m_error_info_isSet = false;
    m_error_info_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAICountryInCustomerDocumentAddressDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICountryInCustomerDocumentAddressDto::fromJsonObject(QJsonObject json) {

    m_error_info_isValid = ::OpenAPI::fromJsonValue(m_error_info, json[QString("errorInfo")]);
    m_error_info_isSet = !json[QString("errorInfo")].isNull() && m_error_info_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAICountryInCustomerDocumentAddressDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICountryInCustomerDocumentAddressDto::asJsonObject() const {
    QJsonObject obj;
    if (m_error_info_isSet) {
        obj.insert(QString("errorInfo"), ::OpenAPI::toJsonValue(m_error_info));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_metadata.isSet()) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAICountryInCustomerDocumentAddressDto::getErrorInfo() const {
    return m_error_info;
}
void OAICountryInCustomerDocumentAddressDto::setErrorInfo(const QString &error_info) {
    m_error_info = error_info;
    m_error_info_isSet = true;
}

bool OAICountryInCustomerDocumentAddressDto::is_error_info_Set() const{
    return m_error_info_isSet;
}

bool OAICountryInCustomerDocumentAddressDto::is_error_info_Valid() const{
    return m_error_info_isValid;
}

QString OAICountryInCustomerDocumentAddressDto::getId() const {
    return m_id;
}
void OAICountryInCustomerDocumentAddressDto::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICountryInCustomerDocumentAddressDto::is_id_Set() const{
    return m_id_isSet;
}

bool OAICountryInCustomerDocumentAddressDto::is_id_Valid() const{
    return m_id_isValid;
}

OAIMetadataDto OAICountryInCustomerDocumentAddressDto::getMetadata() const {
    return m_metadata;
}
void OAICountryInCustomerDocumentAddressDto::setMetadata(const OAIMetadataDto &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAICountryInCustomerDocumentAddressDto::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAICountryInCustomerDocumentAddressDto::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAICountryInCustomerDocumentAddressDto::getName() const {
    return m_name;
}
void OAICountryInCustomerDocumentAddressDto::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICountryInCustomerDocumentAddressDto::is_name_Set() const{
    return m_name_isSet;
}

bool OAICountryInCustomerDocumentAddressDto::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICountryInCustomerDocumentAddressDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICountryInCustomerDocumentAddressDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
