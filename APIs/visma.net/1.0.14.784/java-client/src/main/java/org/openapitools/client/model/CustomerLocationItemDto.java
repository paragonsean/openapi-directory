/*
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AddressDto;
import org.openapitools.client.model.ContactDto;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CustomerLocationItemDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:18:31.300103-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CustomerLocationItemDto {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private AddressDto address;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private ContactDto contact;

  public static final String SERIALIZED_NAME_CORPORATE_ID = "corporateId";
  @SerializedName(SERIALIZED_NAME_CORPORATE_ID)
  private String corporateId;

  public static final String SERIALIZED_NAME_COUNTRY_ID = "countryId";
  @SerializedName(SERIALIZED_NAME_COUNTRY_ID)
  private String countryId;

  public static final String SERIALIZED_NAME_FOB_POINT_ID = "fobPointId";
  @SerializedName(SERIALIZED_NAME_FOB_POINT_ID)
  private String fobPointId;

  public static final String SERIALIZED_NAME_GLN = "gln";
  @SerializedName(SERIALIZED_NAME_GLN)
  private String gln;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INSURANCE = "insurance";
  @SerializedName(SERIALIZED_NAME_INSURANCE)
  private Boolean insurance;

  public static final String SERIALIZED_NAME_INTERNAL_ID = "internalId";
  @SerializedName(SERIALIZED_NAME_INTERNAL_ID)
  private Integer internalId;

  public static final String SERIALIZED_NAME_LEAD_TIME = "leadTime";
  @SerializedName(SERIALIZED_NAME_LEAD_TIME)
  private Integer leadTime;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PREFERRED_WAREHOUSE_ID = "preferredWarehouseId";
  @SerializedName(SERIALIZED_NAME_PREFERRED_WAREHOUSE_ID)
  private String preferredWarehouseId;

  public static final String SERIALIZED_NAME_PRICE_CLASS_ID = "priceClassId";
  @SerializedName(SERIALIZED_NAME_PRICE_CLASS_ID)
  private String priceClassId;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_RESEDENTIAL_DELIVERY = "resedentialDelivery";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_RESEDENTIAL_DELIVERY)
  private Boolean resedentialDelivery;

  public static final String SERIALIZED_NAME_RESIDENTIAL_DELIVERY = "residentialDelivery";
  @SerializedName(SERIALIZED_NAME_RESIDENTIAL_DELIVERY)
  private Boolean residentialDelivery;

  public static final String SERIALIZED_NAME_SATURDAY_DELIVERY = "saturdayDelivery";
  @SerializedName(SERIALIZED_NAME_SATURDAY_DELIVERY)
  private Boolean saturdayDelivery;

  public static final String SERIALIZED_NAME_SHIP_TERMS_ID = "shipTermsId";
  @SerializedName(SERIALIZED_NAME_SHIP_TERMS_ID)
  private String shipTermsId;

  public static final String SERIALIZED_NAME_SHIP_VIA_ID = "shipViaId";
  @SerializedName(SERIALIZED_NAME_SHIP_VIA_ID)
  private String shipViaId;

  public static final String SERIALIZED_NAME_SHIP_ZONE_ID = "shipZoneId";
  @SerializedName(SERIALIZED_NAME_SHIP_ZONE_ID)
  private String shipZoneId;

  public static final String SERIALIZED_NAME_SHIPPING_RULE = "shippingRule";
  @SerializedName(SERIALIZED_NAME_SHIPPING_RULE)
  private String shippingRule;

  public static final String SERIALIZED_NAME_TAX_REGISTRATION_ID = "taxRegistrationId";
  @SerializedName(SERIALIZED_NAME_TAX_REGISTRATION_ID)
  private String taxRegistrationId;

  public static final String SERIALIZED_NAME_TAX_ZONE_ID = "taxZoneId";
  @SerializedName(SERIALIZED_NAME_TAX_ZONE_ID)
  private String taxZoneId;

  public static final String SERIALIZED_NAME_WAREHOUSE_ID = "warehouseId";
  @SerializedName(SERIALIZED_NAME_WAREHOUSE_ID)
  private String warehouseId;

  public CustomerLocationItemDto() {
  }

  public CustomerLocationItemDto address(AddressDto address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public AddressDto getAddress() {
    return address;
  }

  public void setAddress(AddressDto address) {
    this.address = address;
  }


  public CustomerLocationItemDto contact(ContactDto contact) {
    this.contact = contact;
    return this;
  }

  /**
   * Get contact
   * @return contact
   */
  @javax.annotation.Nullable
  public ContactDto getContact() {
    return contact;
  }

  public void setContact(ContactDto contact) {
    this.contact = contact;
  }


  public CustomerLocationItemDto corporateId(String corporateId) {
    this.corporateId = corporateId;
    return this;
  }

  /**
   * The corporate id of the location
   * @return corporateId
   */
  @javax.annotation.Nullable
  public String getCorporateId() {
    return corporateId;
  }

  public void setCorporateId(String corporateId) {
    this.corporateId = corporateId;
  }


  public CustomerLocationItemDto countryId(String countryId) {
    this.countryId = countryId;
    return this;
  }

  /**
   * The country code of the location
   * @return countryId
   */
  @javax.annotation.Nullable
  public String getCountryId() {
    return countryId;
  }

  public void setCountryId(String countryId) {
    this.countryId = countryId;
  }


  public CustomerLocationItemDto fobPointId(String fobPointId) {
    this.fobPointId = fobPointId;
    return this;
  }

  /**
   * Default FobPointId
   * @return fobPointId
   */
  @javax.annotation.Nullable
  public String getFobPointId() {
    return fobPointId;
  }

  public void setFobPointId(String fobPointId) {
    this.fobPointId = fobPointId;
  }


  public CustomerLocationItemDto gln(String gln) {
    this.gln = gln;
    return this;
  }

  /**
   * The global localization number of the location
   * @return gln
   */
  @javax.annotation.Nullable
  public String getGln() {
    return gln;
  }

  public void setGln(String gln) {
    this.gln = gln;
  }


  public CustomerLocationItemDto id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Location id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CustomerLocationItemDto insurance(Boolean insurance) {
    this.insurance = insurance;
    return this;
  }

  /**
   * Default Insurance
   * @return insurance
   */
  @javax.annotation.Nullable
  public Boolean getInsurance() {
    return insurance;
  }

  public void setInsurance(Boolean insurance) {
    this.insurance = insurance;
  }


  public CustomerLocationItemDto internalId(Integer internalId) {
    this.internalId = internalId;
    return this;
  }

  /**
   * An internal id of the customer location
   * @return internalId
   */
  @javax.annotation.Nullable
  public Integer getInternalId() {
    return internalId;
  }

  public void setInternalId(Integer internalId) {
    this.internalId = internalId;
  }


  public CustomerLocationItemDto leadTime(Integer leadTime) {
    this.leadTime = leadTime;
    return this;
  }

  /**
   * The number of days required for the shipped goods to reach the customer.  Used in the calculation of the scheduled shipment date
   * @return leadTime
   */
  @javax.annotation.Nullable
  public Integer getLeadTime() {
    return leadTime;
  }

  public void setLeadTime(Integer leadTime) {
    this.leadTime = leadTime;
  }


  public CustomerLocationItemDto name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Location description
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CustomerLocationItemDto preferredWarehouseId(String preferredWarehouseId) {
    this.preferredWarehouseId = preferredWarehouseId;
    return this;
  }

  /**
   * The preferred shipping warehouse of the customer set default for the order
   * @return preferredWarehouseId
   */
  @javax.annotation.Nullable
  public String getPreferredWarehouseId() {
    return preferredWarehouseId;
  }

  public void setPreferredWarehouseId(String preferredWarehouseId) {
    this.preferredWarehouseId = preferredWarehouseId;
  }


  public CustomerLocationItemDto priceClassId(String priceClassId) {
    this.priceClassId = priceClassId;
    return this;
  }

  /**
   * Price class
   * @return priceClassId
   */
  @javax.annotation.Nullable
  public String getPriceClassId() {
    return priceClassId;
  }

  public void setPriceClassId(String priceClassId) {
    this.priceClassId = priceClassId;
  }


  public CustomerLocationItemDto priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Default Priority
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  @Deprecated
  public CustomerLocationItemDto resedentialDelivery(Boolean resedentialDelivery) {
    this.resedentialDelivery = resedentialDelivery;
    return this;
  }

  /**
   * Default ResidentialDelivery.&lt;br /&gt;  This field will be removed with due date 1.12.2023. It is recommended to use &lt;see cref&#x3D;\&quot;P:Visma.net.ERP.SalesOrders.Api.Dto.CustomerLocationItemDto.ResidentialDelivery\&quot;&gt;ResidentialDelivery&lt;/see&gt; instead.
   * @return resedentialDelivery
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getResedentialDelivery() {
    return resedentialDelivery;
  }

  @Deprecated
  public void setResedentialDelivery(Boolean resedentialDelivery) {
    this.resedentialDelivery = resedentialDelivery;
  }


  public CustomerLocationItemDto residentialDelivery(Boolean residentialDelivery) {
    this.residentialDelivery = residentialDelivery;
    return this;
  }

  /**
   * Default ResidentialDelivery
   * @return residentialDelivery
   */
  @javax.annotation.Nullable
  public Boolean getResidentialDelivery() {
    return residentialDelivery;
  }

  public void setResidentialDelivery(Boolean residentialDelivery) {
    this.residentialDelivery = residentialDelivery;
  }


  public CustomerLocationItemDto saturdayDelivery(Boolean saturdayDelivery) {
    this.saturdayDelivery = saturdayDelivery;
    return this;
  }

  /**
   * Default SaturdayDelivery
   * @return saturdayDelivery
   */
  @javax.annotation.Nullable
  public Boolean getSaturdayDelivery() {
    return saturdayDelivery;
  }

  public void setSaturdayDelivery(Boolean saturdayDelivery) {
    this.saturdayDelivery = saturdayDelivery;
  }


  public CustomerLocationItemDto shipTermsId(String shipTermsId) {
    this.shipTermsId = shipTermsId;
    return this;
  }

  /**
   * Default ShipTermsId
   * @return shipTermsId
   */
  @javax.annotation.Nullable
  public String getShipTermsId() {
    return shipTermsId;
  }

  public void setShipTermsId(String shipTermsId) {
    this.shipTermsId = shipTermsId;
  }


  public CustomerLocationItemDto shipViaId(String shipViaId) {
    this.shipViaId = shipViaId;
    return this;
  }

  /**
   * The ship via id that represents the carrier and its service to be used for shipping the ordered goods
   * @return shipViaId
   */
  @javax.annotation.Nullable
  public String getShipViaId() {
    return shipViaId;
  }

  public void setShipViaId(String shipViaId) {
    this.shipViaId = shipViaId;
  }


  public CustomerLocationItemDto shipZoneId(String shipZoneId) {
    this.shipZoneId = shipZoneId;
    return this;
  }

  /**
   * Default ShipZoneId
   * @return shipZoneId
   */
  @javax.annotation.Nullable
  public String getShipZoneId() {
    return shipZoneId;
  }

  public void setShipZoneId(String shipZoneId) {
    this.shipZoneId = shipZoneId;
  }


  public CustomerLocationItemDto shippingRule(String shippingRule) {
    this.shippingRule = shippingRule;
    return this;
  }

  /**
   * Shipping rule of the customer set default for the order  &lt;br&gt;Is one of the following options:&lt;br&gt;&lt;list type&#x3D;\&quot;bullet\&quot;&gt;&lt;item&gt;&lt;term&gt;CancelRemainder: &lt;/term&gt;&lt;description&gt;The ordered quantity should be delivered in one shipment&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;BackOrderAllowed: &lt;/term&gt;&lt;description&gt;The ordered quantity can be delivered in multiple shipments.&lt;/description&gt;&lt;/item&gt;&lt;item&gt;&lt;term&gt;ShipComplete: &lt;/term&gt;&lt;description&gt;The ordered quantity should be delivered in one shipment.&lt;/description&gt;&lt;/item&gt;&lt;/list&gt;
   * @return shippingRule
   */
  @javax.annotation.Nullable
  public String getShippingRule() {
    return shippingRule;
  }

  public void setShippingRule(String shippingRule) {
    this.shippingRule = shippingRule;
  }


  public CustomerLocationItemDto taxRegistrationId(String taxRegistrationId) {
    this.taxRegistrationId = taxRegistrationId;
    return this;
  }

  /**
   * The tax registration id of the location
   * @return taxRegistrationId
   */
  @javax.annotation.Nullable
  public String getTaxRegistrationId() {
    return taxRegistrationId;
  }

  public void setTaxRegistrationId(String taxRegistrationId) {
    this.taxRegistrationId = taxRegistrationId;
  }


  public CustomerLocationItemDto taxZoneId(String taxZoneId) {
    this.taxZoneId = taxZoneId;
    return this;
  }

  /**
   * The location tax/VAT zone id
   * @return taxZoneId
   */
  @javax.annotation.Nullable
  public String getTaxZoneId() {
    return taxZoneId;
  }

  public void setTaxZoneId(String taxZoneId) {
    this.taxZoneId = taxZoneId;
  }


  public CustomerLocationItemDto warehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
    return this;
  }

  /**
   * The site id of the location
   * @return warehouseId
   */
  @javax.annotation.Nullable
  public String getWarehouseId() {
    return warehouseId;
  }

  public void setWarehouseId(String warehouseId) {
    this.warehouseId = warehouseId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerLocationItemDto customerLocationItemDto = (CustomerLocationItemDto) o;
    return Objects.equals(this.address, customerLocationItemDto.address) &&
        Objects.equals(this.contact, customerLocationItemDto.contact) &&
        Objects.equals(this.corporateId, customerLocationItemDto.corporateId) &&
        Objects.equals(this.countryId, customerLocationItemDto.countryId) &&
        Objects.equals(this.fobPointId, customerLocationItemDto.fobPointId) &&
        Objects.equals(this.gln, customerLocationItemDto.gln) &&
        Objects.equals(this.id, customerLocationItemDto.id) &&
        Objects.equals(this.insurance, customerLocationItemDto.insurance) &&
        Objects.equals(this.internalId, customerLocationItemDto.internalId) &&
        Objects.equals(this.leadTime, customerLocationItemDto.leadTime) &&
        Objects.equals(this.name, customerLocationItemDto.name) &&
        Objects.equals(this.preferredWarehouseId, customerLocationItemDto.preferredWarehouseId) &&
        Objects.equals(this.priceClassId, customerLocationItemDto.priceClassId) &&
        Objects.equals(this.priority, customerLocationItemDto.priority) &&
        Objects.equals(this.resedentialDelivery, customerLocationItemDto.resedentialDelivery) &&
        Objects.equals(this.residentialDelivery, customerLocationItemDto.residentialDelivery) &&
        Objects.equals(this.saturdayDelivery, customerLocationItemDto.saturdayDelivery) &&
        Objects.equals(this.shipTermsId, customerLocationItemDto.shipTermsId) &&
        Objects.equals(this.shipViaId, customerLocationItemDto.shipViaId) &&
        Objects.equals(this.shipZoneId, customerLocationItemDto.shipZoneId) &&
        Objects.equals(this.shippingRule, customerLocationItemDto.shippingRule) &&
        Objects.equals(this.taxRegistrationId, customerLocationItemDto.taxRegistrationId) &&
        Objects.equals(this.taxZoneId, customerLocationItemDto.taxZoneId) &&
        Objects.equals(this.warehouseId, customerLocationItemDto.warehouseId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, contact, corporateId, countryId, fobPointId, gln, id, insurance, internalId, leadTime, name, preferredWarehouseId, priceClassId, priority, resedentialDelivery, residentialDelivery, saturdayDelivery, shipTermsId, shipViaId, shipZoneId, shippingRule, taxRegistrationId, taxZoneId, warehouseId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerLocationItemDto {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    corporateId: ").append(toIndentedString(corporateId)).append("\n");
    sb.append("    countryId: ").append(toIndentedString(countryId)).append("\n");
    sb.append("    fobPointId: ").append(toIndentedString(fobPointId)).append("\n");
    sb.append("    gln: ").append(toIndentedString(gln)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    insurance: ").append(toIndentedString(insurance)).append("\n");
    sb.append("    internalId: ").append(toIndentedString(internalId)).append("\n");
    sb.append("    leadTime: ").append(toIndentedString(leadTime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    preferredWarehouseId: ").append(toIndentedString(preferredWarehouseId)).append("\n");
    sb.append("    priceClassId: ").append(toIndentedString(priceClassId)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    resedentialDelivery: ").append(toIndentedString(resedentialDelivery)).append("\n");
    sb.append("    residentialDelivery: ").append(toIndentedString(residentialDelivery)).append("\n");
    sb.append("    saturdayDelivery: ").append(toIndentedString(saturdayDelivery)).append("\n");
    sb.append("    shipTermsId: ").append(toIndentedString(shipTermsId)).append("\n");
    sb.append("    shipViaId: ").append(toIndentedString(shipViaId)).append("\n");
    sb.append("    shipZoneId: ").append(toIndentedString(shipZoneId)).append("\n");
    sb.append("    shippingRule: ").append(toIndentedString(shippingRule)).append("\n");
    sb.append("    taxRegistrationId: ").append(toIndentedString(taxRegistrationId)).append("\n");
    sb.append("    taxZoneId: ").append(toIndentedString(taxZoneId)).append("\n");
    sb.append("    warehouseId: ").append(toIndentedString(warehouseId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("contact");
    openapiFields.add("corporateId");
    openapiFields.add("countryId");
    openapiFields.add("fobPointId");
    openapiFields.add("gln");
    openapiFields.add("id");
    openapiFields.add("insurance");
    openapiFields.add("internalId");
    openapiFields.add("leadTime");
    openapiFields.add("name");
    openapiFields.add("preferredWarehouseId");
    openapiFields.add("priceClassId");
    openapiFields.add("priority");
    openapiFields.add("resedentialDelivery");
    openapiFields.add("residentialDelivery");
    openapiFields.add("saturdayDelivery");
    openapiFields.add("shipTermsId");
    openapiFields.add("shipViaId");
    openapiFields.add("shipZoneId");
    openapiFields.add("shippingRule");
    openapiFields.add("taxRegistrationId");
    openapiFields.add("taxZoneId");
    openapiFields.add("warehouseId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CustomerLocationItemDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CustomerLocationItemDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CustomerLocationItemDto is not found in the empty JSON string", CustomerLocationItemDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CustomerLocationItemDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CustomerLocationItemDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        AddressDto.validateJsonElement(jsonObj.get("address"));
      }
      // validate the optional field `contact`
      if (jsonObj.get("contact") != null && !jsonObj.get("contact").isJsonNull()) {
        ContactDto.validateJsonElement(jsonObj.get("contact"));
      }
      if ((jsonObj.get("corporateId") != null && !jsonObj.get("corporateId").isJsonNull()) && !jsonObj.get("corporateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `corporateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("corporateId").toString()));
      }
      if ((jsonObj.get("countryId") != null && !jsonObj.get("countryId").isJsonNull()) && !jsonObj.get("countryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryId").toString()));
      }
      if ((jsonObj.get("fobPointId") != null && !jsonObj.get("fobPointId").isJsonNull()) && !jsonObj.get("fobPointId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fobPointId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fobPointId").toString()));
      }
      if ((jsonObj.get("gln") != null && !jsonObj.get("gln").isJsonNull()) && !jsonObj.get("gln").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gln` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gln").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("preferredWarehouseId") != null && !jsonObj.get("preferredWarehouseId").isJsonNull()) && !jsonObj.get("preferredWarehouseId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preferredWarehouseId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preferredWarehouseId").toString()));
      }
      if ((jsonObj.get("priceClassId") != null && !jsonObj.get("priceClassId").isJsonNull()) && !jsonObj.get("priceClassId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `priceClassId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("priceClassId").toString()));
      }
      if ((jsonObj.get("shipTermsId") != null && !jsonObj.get("shipTermsId").isJsonNull()) && !jsonObj.get("shipTermsId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipTermsId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipTermsId").toString()));
      }
      if ((jsonObj.get("shipViaId") != null && !jsonObj.get("shipViaId").isJsonNull()) && !jsonObj.get("shipViaId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipViaId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipViaId").toString()));
      }
      if ((jsonObj.get("shipZoneId") != null && !jsonObj.get("shipZoneId").isJsonNull()) && !jsonObj.get("shipZoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shipZoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shipZoneId").toString()));
      }
      if ((jsonObj.get("shippingRule") != null && !jsonObj.get("shippingRule").isJsonNull()) && !jsonObj.get("shippingRule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shippingRule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shippingRule").toString()));
      }
      if ((jsonObj.get("taxRegistrationId") != null && !jsonObj.get("taxRegistrationId").isJsonNull()) && !jsonObj.get("taxRegistrationId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxRegistrationId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxRegistrationId").toString()));
      }
      if ((jsonObj.get("taxZoneId") != null && !jsonObj.get("taxZoneId").isJsonNull()) && !jsonObj.get("taxZoneId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxZoneId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxZoneId").toString()));
      }
      if ((jsonObj.get("warehouseId") != null && !jsonObj.get("warehouseId").isJsonNull()) && !jsonObj.get("warehouseId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `warehouseId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("warehouseId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerLocationItemDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerLocationItemDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerLocationItemDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerLocationItemDto.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerLocationItemDto>() {
           @Override
           public void write(JsonWriter out, CustomerLocationItemDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerLocationItemDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CustomerLocationItemDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CustomerLocationItemDto
   * @throws IOException if the JSON string is invalid with respect to CustomerLocationItemDto
   */
  public static CustomerLocationItemDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerLocationItemDto.class);
  }

  /**
   * Convert an instance of CustomerLocationItemDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

