/*
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.InventoryAvailabilityExpansions;
import org.openapitools.client.model.InventoryItemAvailabilityDtoPagedResult;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ProblemDetails;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class InventoryApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public InventoryApi() {
        this(Configuration.getDefaultApiClient());
    }

    public InventoryApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for inventoryGetList
     * @param inventoryId A list of zero or more inventory items to get a summary for. If no inventoryId is passed, all inventory items will be included in the response. (optional)
     * @param warehouseId A list of zero or more warehouses to get a summary for. If no warehouse is supplied, all warehouses will be included in the response. (optional)
     * @param locationId A list of zero or more locations to get a summary for. If no location is supplied, all locations will be included in the response. (optional)
     * @param expand An additional option to include location detail information with the warehouse summary, or attribute details for the inventory item. If this is not supplied, location information or attributes will not be included in the response. (optional)
     * @param modifiedSince A date/time value for filtering when an inventory item&#39;s warehouse or location availability last changed  Unless a specific time zone offset is included (e.g. &#39;2012-12-24T12:15:14+02:00&#39;), the date is considered to be in the UTC time zone. (optional)
     * @param attributeFilter One or more attribute filter values specified as attribute-id:attribute-value. For example \&quot;attributeFilter&#x3D;WEBSHOP:1&amp;attributeFilter&#x3D;AnotherAttribute:someValue\&quot;  If two attributeFilter values have the same attribute-Id either one need to match. (optional)
     * @param pageSize The number of inventory items retrieved per page. If not specified the default pagesize is 10000 items per page (optional)
     * @param pageIndex Gets or sets the zero based page index to get (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns list of inventory items found </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> If modifiedSince is an invalid date, if expand contains an invalid value, or if any of the supplied attributeFilter(s) are invalid </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call inventoryGetListCall(List<String> inventoryId, List<String> warehouseId, List<String> locationId, List<InventoryAvailabilityExpansions> expand, OffsetDateTime modifiedSince, List<String> attributeFilter, Integer pageSize, Integer pageIndex, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v3/Inventory";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (inventoryId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "inventoryId", inventoryId));
        }

        if (warehouseId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "warehouseId", warehouseId));
        }

        if (locationId != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "locationId", locationId));
        }

        if (expand != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "expand", expand));
        }

        if (modifiedSince != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("modifiedSince", modifiedSince));
        }

        if (attributeFilter != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("multi", "attributeFilter", attributeFilter));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (pageIndex != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageIndex", pageIndex));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json",
            "text/plain"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call inventoryGetListValidateBeforeCall(List<String> inventoryId, List<String> warehouseId, List<String> locationId, List<InventoryAvailabilityExpansions> expand, OffsetDateTime modifiedSince, List<String> attributeFilter, Integer pageSize, Integer pageIndex, final ApiCallback _callback) throws ApiException {
        return inventoryGetListCall(inventoryId, warehouseId, locationId, expand, modifiedSince, attributeFilter, pageSize, pageIndex, _callback);

    }

    /**
     * Gets an inventory summary for inventory items.
     * Sample request:                GET /inventory?inventoryId&#x3D;Item1                GET /inventory?warehouseId&#x3D;MAIN&amp;modifiedSince&#x3D;2021-08-01T12:00:00&amp;pageSize&#x3D;1000                GET /inventory?inventoryId&#x3D;Item1&amp;InventoryId&#x3D;Item2&amp;expand&#x3D;location,attribute                GET /inventory?expand&#x3D;location&amp;attributeFilter&#x3D;WEBSHOP:1
     * @param inventoryId A list of zero or more inventory items to get a summary for. If no inventoryId is passed, all inventory items will be included in the response. (optional)
     * @param warehouseId A list of zero or more warehouses to get a summary for. If no warehouse is supplied, all warehouses will be included in the response. (optional)
     * @param locationId A list of zero or more locations to get a summary for. If no location is supplied, all locations will be included in the response. (optional)
     * @param expand An additional option to include location detail information with the warehouse summary, or attribute details for the inventory item. If this is not supplied, location information or attributes will not be included in the response. (optional)
     * @param modifiedSince A date/time value for filtering when an inventory item&#39;s warehouse or location availability last changed  Unless a specific time zone offset is included (e.g. &#39;2012-12-24T12:15:14+02:00&#39;), the date is considered to be in the UTC time zone. (optional)
     * @param attributeFilter One or more attribute filter values specified as attribute-id:attribute-value. For example \&quot;attributeFilter&#x3D;WEBSHOP:1&amp;attributeFilter&#x3D;AnotherAttribute:someValue\&quot;  If two attributeFilter values have the same attribute-Id either one need to match. (optional)
     * @param pageSize The number of inventory items retrieved per page. If not specified the default pagesize is 10000 items per page (optional)
     * @param pageIndex Gets or sets the zero based page index to get (optional)
     * @return InventoryItemAvailabilityDtoPagedResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns list of inventory items found </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> If modifiedSince is an invalid date, if expand contains an invalid value, or if any of the supplied attributeFilter(s) are invalid </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
     </table>
     */
    public InventoryItemAvailabilityDtoPagedResult inventoryGetList(List<String> inventoryId, List<String> warehouseId, List<String> locationId, List<InventoryAvailabilityExpansions> expand, OffsetDateTime modifiedSince, List<String> attributeFilter, Integer pageSize, Integer pageIndex) throws ApiException {
        ApiResponse<InventoryItemAvailabilityDtoPagedResult> localVarResp = inventoryGetListWithHttpInfo(inventoryId, warehouseId, locationId, expand, modifiedSince, attributeFilter, pageSize, pageIndex);
        return localVarResp.getData();
    }

    /**
     * Gets an inventory summary for inventory items.
     * Sample request:                GET /inventory?inventoryId&#x3D;Item1                GET /inventory?warehouseId&#x3D;MAIN&amp;modifiedSince&#x3D;2021-08-01T12:00:00&amp;pageSize&#x3D;1000                GET /inventory?inventoryId&#x3D;Item1&amp;InventoryId&#x3D;Item2&amp;expand&#x3D;location,attribute                GET /inventory?expand&#x3D;location&amp;attributeFilter&#x3D;WEBSHOP:1
     * @param inventoryId A list of zero or more inventory items to get a summary for. If no inventoryId is passed, all inventory items will be included in the response. (optional)
     * @param warehouseId A list of zero or more warehouses to get a summary for. If no warehouse is supplied, all warehouses will be included in the response. (optional)
     * @param locationId A list of zero or more locations to get a summary for. If no location is supplied, all locations will be included in the response. (optional)
     * @param expand An additional option to include location detail information with the warehouse summary, or attribute details for the inventory item. If this is not supplied, location information or attributes will not be included in the response. (optional)
     * @param modifiedSince A date/time value for filtering when an inventory item&#39;s warehouse or location availability last changed  Unless a specific time zone offset is included (e.g. &#39;2012-12-24T12:15:14+02:00&#39;), the date is considered to be in the UTC time zone. (optional)
     * @param attributeFilter One or more attribute filter values specified as attribute-id:attribute-value. For example \&quot;attributeFilter&#x3D;WEBSHOP:1&amp;attributeFilter&#x3D;AnotherAttribute:someValue\&quot;  If two attributeFilter values have the same attribute-Id either one need to match. (optional)
     * @param pageSize The number of inventory items retrieved per page. If not specified the default pagesize is 10000 items per page (optional)
     * @param pageIndex Gets or sets the zero based page index to get (optional)
     * @return ApiResponse&lt;InventoryItemAvailabilityDtoPagedResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns list of inventory items found </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> If modifiedSince is an invalid date, if expand contains an invalid value, or if any of the supplied attributeFilter(s) are invalid </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<InventoryItemAvailabilityDtoPagedResult> inventoryGetListWithHttpInfo(List<String> inventoryId, List<String> warehouseId, List<String> locationId, List<InventoryAvailabilityExpansions> expand, OffsetDateTime modifiedSince, List<String> attributeFilter, Integer pageSize, Integer pageIndex) throws ApiException {
        okhttp3.Call localVarCall = inventoryGetListValidateBeforeCall(inventoryId, warehouseId, locationId, expand, modifiedSince, attributeFilter, pageSize, pageIndex, null);
        Type localVarReturnType = new TypeToken<InventoryItemAvailabilityDtoPagedResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets an inventory summary for inventory items. (asynchronously)
     * Sample request:                GET /inventory?inventoryId&#x3D;Item1                GET /inventory?warehouseId&#x3D;MAIN&amp;modifiedSince&#x3D;2021-08-01T12:00:00&amp;pageSize&#x3D;1000                GET /inventory?inventoryId&#x3D;Item1&amp;InventoryId&#x3D;Item2&amp;expand&#x3D;location,attribute                GET /inventory?expand&#x3D;location&amp;attributeFilter&#x3D;WEBSHOP:1
     * @param inventoryId A list of zero or more inventory items to get a summary for. If no inventoryId is passed, all inventory items will be included in the response. (optional)
     * @param warehouseId A list of zero or more warehouses to get a summary for. If no warehouse is supplied, all warehouses will be included in the response. (optional)
     * @param locationId A list of zero or more locations to get a summary for. If no location is supplied, all locations will be included in the response. (optional)
     * @param expand An additional option to include location detail information with the warehouse summary, or attribute details for the inventory item. If this is not supplied, location information or attributes will not be included in the response. (optional)
     * @param modifiedSince A date/time value for filtering when an inventory item&#39;s warehouse or location availability last changed  Unless a specific time zone offset is included (e.g. &#39;2012-12-24T12:15:14+02:00&#39;), the date is considered to be in the UTC time zone. (optional)
     * @param attributeFilter One or more attribute filter values specified as attribute-id:attribute-value. For example \&quot;attributeFilter&#x3D;WEBSHOP:1&amp;attributeFilter&#x3D;AnotherAttribute:someValue\&quot;  If two attributeFilter values have the same attribute-Id either one need to match. (optional)
     * @param pageSize The number of inventory items retrieved per page. If not specified the default pagesize is 10000 items per page (optional)
     * @param pageIndex Gets or sets the zero based page index to get (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Returns list of inventory items found </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> If modifiedSince is an invalid date, if expand contains an invalid value, or if any of the supplied attributeFilter(s) are invalid </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Forbidden </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call inventoryGetListAsync(List<String> inventoryId, List<String> warehouseId, List<String> locationId, List<InventoryAvailabilityExpansions> expand, OffsetDateTime modifiedSince, List<String> attributeFilter, Integer pageSize, Integer pageIndex, final ApiCallback<InventoryItemAvailabilityDtoPagedResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = inventoryGetListValidateBeforeCall(inventoryId, warehouseId, locationId, expand, modifiedSince, attributeFilter, pageSize, pageIndex, _callback);
        Type localVarReturnType = new TypeToken<InventoryItemAvailabilityDtoPagedResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
