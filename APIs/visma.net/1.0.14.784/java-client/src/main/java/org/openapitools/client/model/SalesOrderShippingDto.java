/*
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.AddressDto;
import org.openapitools.client.model.CdDescriptionPairDto;
import org.openapitools.client.model.ContactDto;
import org.openapitools.client.model.IdDescriptionPairDto;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SalesOrderShippingDto
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:18:31.300103-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SalesOrderShippingDto {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private AddressDto address;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private ContactDto contact;

  public static final String SERIALIZED_NAME_FOB_POINT = "fobPoint";
  @SerializedName(SERIALIZED_NAME_FOB_POINT)
  private CdDescriptionPairDto fobPoint;

  public static final String SERIALIZED_NAME_INSURANCE = "insurance";
  @SerializedName(SERIALIZED_NAME_INSURANCE)
  private Boolean insurance;

  public static final String SERIALIZED_NAME_INTRASTAT_TRANSACTION_TYPE = "intrastatTransactionType";
  @SerializedName(SERIALIZED_NAME_INTRASTAT_TRANSACTION_TYPE)
  private IdDescriptionPairDto intrastatTransactionType;

  public static final String SERIALIZED_NAME_PREFERRED_WAREHOUSE = "preferredWarehouse";
  @SerializedName(SERIALIZED_NAME_PREFERRED_WAREHOUSE)
  private CdDescriptionPairDto preferredWarehouse;

  public static final String SERIALIZED_NAME_PRIORITY = "priority";
  @SerializedName(SERIALIZED_NAME_PRIORITY)
  private Integer priority;

  public static final String SERIALIZED_NAME_RESIDENTIAL_DELIVERY = "residentialDelivery";
  @SerializedName(SERIALIZED_NAME_RESIDENTIAL_DELIVERY)
  private Boolean residentialDelivery;

  public static final String SERIALIZED_NAME_RULE = "rule";
  @SerializedName(SERIALIZED_NAME_RULE)
  private String rule;

  public static final String SERIALIZED_NAME_SATURDAY_DELIVERY = "saturdayDelivery";
  @SerializedName(SERIALIZED_NAME_SATURDAY_DELIVERY)
  private Boolean saturdayDelivery;

  public static final String SERIALIZED_NAME_SCHEDULED_DATE = "scheduledDate";
  @SerializedName(SERIALIZED_NAME_SCHEDULED_DATE)
  private OffsetDateTime scheduledDate;

  public static final String SERIALIZED_NAME_SHIP_SEPARATELY = "shipSeparately";
  @SerializedName(SERIALIZED_NAME_SHIP_SEPARATELY)
  private Boolean shipSeparately;

  public static final String SERIALIZED_NAME_SHIP_VIA = "shipVia";
  @SerializedName(SERIALIZED_NAME_SHIP_VIA)
  private CdDescriptionPairDto shipVia;

  public static final String SERIALIZED_NAME_TERMS = "terms";
  @SerializedName(SERIALIZED_NAME_TERMS)
  private CdDescriptionPairDto terms;

  public static final String SERIALIZED_NAME_ZONE = "zone";
  @SerializedName(SERIALIZED_NAME_ZONE)
  private CdDescriptionPairDto zone;

  public SalesOrderShippingDto() {
  }

  public SalesOrderShippingDto address(AddressDto address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public AddressDto getAddress() {
    return address;
  }

  public void setAddress(AddressDto address) {
    this.address = address;
  }


  public SalesOrderShippingDto contact(ContactDto contact) {
    this.contact = contact;
    return this;
  }

  /**
   * Get contact
   * @return contact
   */
  @javax.annotation.Nullable
  public ContactDto getContact() {
    return contact;
  }

  public void setContact(ContactDto contact) {
    this.contact = contact;
  }


  public SalesOrderShippingDto fobPoint(CdDescriptionPairDto fobPoint) {
    this.fobPoint = fobPoint;
    return this;
  }

  /**
   * Get fobPoint
   * @return fobPoint
   */
  @javax.annotation.Nullable
  public CdDescriptionPairDto getFobPoint() {
    return fobPoint;
  }

  public void setFobPoint(CdDescriptionPairDto fobPoint) {
    this.fobPoint = fobPoint;
  }


  public SalesOrderShippingDto insurance(Boolean insurance) {
    this.insurance = insurance;
    return this;
  }

  /**
   * Whether insurance applies to this shipping
   * @return insurance
   */
  @javax.annotation.Nullable
  public Boolean getInsurance() {
    return insurance;
  }

  public void setInsurance(Boolean insurance) {
    this.insurance = insurance;
  }


  public SalesOrderShippingDto intrastatTransactionType(IdDescriptionPairDto intrastatTransactionType) {
    this.intrastatTransactionType = intrastatTransactionType;
    return this;
  }

  /**
   * Get intrastatTransactionType
   * @return intrastatTransactionType
   */
  @javax.annotation.Nullable
  public IdDescriptionPairDto getIntrastatTransactionType() {
    return intrastatTransactionType;
  }

  public void setIntrastatTransactionType(IdDescriptionPairDto intrastatTransactionType) {
    this.intrastatTransactionType = intrastatTransactionType;
  }


  public SalesOrderShippingDto preferredWarehouse(CdDescriptionPairDto preferredWarehouse) {
    this.preferredWarehouse = preferredWarehouse;
    return this;
  }

  /**
   * Get preferredWarehouse
   * @return preferredWarehouse
   */
  @javax.annotation.Nullable
  public CdDescriptionPairDto getPreferredWarehouse() {
    return preferredWarehouse;
  }

  public void setPreferredWarehouse(CdDescriptionPairDto preferredWarehouse) {
    this.preferredWarehouse = preferredWarehouse;
  }


  public SalesOrderShippingDto priority(Integer priority) {
    this.priority = priority;
    return this;
  }

  /**
   * Priority of the order
   * @return priority
   */
  @javax.annotation.Nullable
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }


  public SalesOrderShippingDto residentialDelivery(Boolean residentialDelivery) {
    this.residentialDelivery = residentialDelivery;
    return this;
  }

  /**
   * Whether this is residential delivery
   * @return residentialDelivery
   */
  @javax.annotation.Nullable
  public Boolean getResidentialDelivery() {
    return residentialDelivery;
  }

  public void setResidentialDelivery(Boolean residentialDelivery) {
    this.residentialDelivery = residentialDelivery;
  }


  public SalesOrderShippingDto rule(String rule) {
    this.rule = rule;
    return this;
  }

  /**
   * The shipping rule
   * @return rule
   */
  @javax.annotation.Nullable
  public String getRule() {
    return rule;
  }

  public void setRule(String rule) {
    this.rule = rule;
  }


  public SalesOrderShippingDto saturdayDelivery(Boolean saturdayDelivery) {
    this.saturdayDelivery = saturdayDelivery;
    return this;
  }

  /**
   * Whether this is a saturday delivery
   * @return saturdayDelivery
   */
  @javax.annotation.Nullable
  public Boolean getSaturdayDelivery() {
    return saturdayDelivery;
  }

  public void setSaturdayDelivery(Boolean saturdayDelivery) {
    this.saturdayDelivery = saturdayDelivery;
  }


  public SalesOrderShippingDto scheduledDate(OffsetDateTime scheduledDate) {
    this.scheduledDate = scheduledDate;
    return this;
  }

  /**
   * The shipping scheduled date  Unless a specific time zone offset is included (e.g. &#39;2012-12-24T00:00:00+02:00&#39;), the passed date is considered to be in the UTC time zone.
   * @return scheduledDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getScheduledDate() {
    return scheduledDate;
  }

  public void setScheduledDate(OffsetDateTime scheduledDate) {
    this.scheduledDate = scheduledDate;
  }


  public SalesOrderShippingDto shipSeparately(Boolean shipSeparately) {
    this.shipSeparately = shipSeparately;
    return this;
  }

  /**
   * Whether this order can/is shipped separately
   * @return shipSeparately
   */
  @javax.annotation.Nullable
  public Boolean getShipSeparately() {
    return shipSeparately;
  }

  public void setShipSeparately(Boolean shipSeparately) {
    this.shipSeparately = shipSeparately;
  }


  public SalesOrderShippingDto shipVia(CdDescriptionPairDto shipVia) {
    this.shipVia = shipVia;
    return this;
  }

  /**
   * Get shipVia
   * @return shipVia
   */
  @javax.annotation.Nullable
  public CdDescriptionPairDto getShipVia() {
    return shipVia;
  }

  public void setShipVia(CdDescriptionPairDto shipVia) {
    this.shipVia = shipVia;
  }


  public SalesOrderShippingDto terms(CdDescriptionPairDto terms) {
    this.terms = terms;
    return this;
  }

  /**
   * Get terms
   * @return terms
   */
  @javax.annotation.Nullable
  public CdDescriptionPairDto getTerms() {
    return terms;
  }

  public void setTerms(CdDescriptionPairDto terms) {
    this.terms = terms;
  }


  public SalesOrderShippingDto zone(CdDescriptionPairDto zone) {
    this.zone = zone;
    return this;
  }

  /**
   * Get zone
   * @return zone
   */
  @javax.annotation.Nullable
  public CdDescriptionPairDto getZone() {
    return zone;
  }

  public void setZone(CdDescriptionPairDto zone) {
    this.zone = zone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SalesOrderShippingDto salesOrderShippingDto = (SalesOrderShippingDto) o;
    return Objects.equals(this.address, salesOrderShippingDto.address) &&
        Objects.equals(this.contact, salesOrderShippingDto.contact) &&
        Objects.equals(this.fobPoint, salesOrderShippingDto.fobPoint) &&
        Objects.equals(this.insurance, salesOrderShippingDto.insurance) &&
        Objects.equals(this.intrastatTransactionType, salesOrderShippingDto.intrastatTransactionType) &&
        Objects.equals(this.preferredWarehouse, salesOrderShippingDto.preferredWarehouse) &&
        Objects.equals(this.priority, salesOrderShippingDto.priority) &&
        Objects.equals(this.residentialDelivery, salesOrderShippingDto.residentialDelivery) &&
        Objects.equals(this.rule, salesOrderShippingDto.rule) &&
        Objects.equals(this.saturdayDelivery, salesOrderShippingDto.saturdayDelivery) &&
        Objects.equals(this.scheduledDate, salesOrderShippingDto.scheduledDate) &&
        Objects.equals(this.shipSeparately, salesOrderShippingDto.shipSeparately) &&
        Objects.equals(this.shipVia, salesOrderShippingDto.shipVia) &&
        Objects.equals(this.terms, salesOrderShippingDto.terms) &&
        Objects.equals(this.zone, salesOrderShippingDto.zone);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, contact, fobPoint, insurance, intrastatTransactionType, preferredWarehouse, priority, residentialDelivery, rule, saturdayDelivery, scheduledDate, shipSeparately, shipVia, terms, zone);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SalesOrderShippingDto {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    fobPoint: ").append(toIndentedString(fobPoint)).append("\n");
    sb.append("    insurance: ").append(toIndentedString(insurance)).append("\n");
    sb.append("    intrastatTransactionType: ").append(toIndentedString(intrastatTransactionType)).append("\n");
    sb.append("    preferredWarehouse: ").append(toIndentedString(preferredWarehouse)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    residentialDelivery: ").append(toIndentedString(residentialDelivery)).append("\n");
    sb.append("    rule: ").append(toIndentedString(rule)).append("\n");
    sb.append("    saturdayDelivery: ").append(toIndentedString(saturdayDelivery)).append("\n");
    sb.append("    scheduledDate: ").append(toIndentedString(scheduledDate)).append("\n");
    sb.append("    shipSeparately: ").append(toIndentedString(shipSeparately)).append("\n");
    sb.append("    shipVia: ").append(toIndentedString(shipVia)).append("\n");
    sb.append("    terms: ").append(toIndentedString(terms)).append("\n");
    sb.append("    zone: ").append(toIndentedString(zone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("contact");
    openapiFields.add("fobPoint");
    openapiFields.add("insurance");
    openapiFields.add("intrastatTransactionType");
    openapiFields.add("preferredWarehouse");
    openapiFields.add("priority");
    openapiFields.add("residentialDelivery");
    openapiFields.add("rule");
    openapiFields.add("saturdayDelivery");
    openapiFields.add("scheduledDate");
    openapiFields.add("shipSeparately");
    openapiFields.add("shipVia");
    openapiFields.add("terms");
    openapiFields.add("zone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SalesOrderShippingDto
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SalesOrderShippingDto.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SalesOrderShippingDto is not found in the empty JSON string", SalesOrderShippingDto.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SalesOrderShippingDto.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SalesOrderShippingDto` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        AddressDto.validateJsonElement(jsonObj.get("address"));
      }
      // validate the optional field `contact`
      if (jsonObj.get("contact") != null && !jsonObj.get("contact").isJsonNull()) {
        ContactDto.validateJsonElement(jsonObj.get("contact"));
      }
      // validate the optional field `fobPoint`
      if (jsonObj.get("fobPoint") != null && !jsonObj.get("fobPoint").isJsonNull()) {
        CdDescriptionPairDto.validateJsonElement(jsonObj.get("fobPoint"));
      }
      // validate the optional field `intrastatTransactionType`
      if (jsonObj.get("intrastatTransactionType") != null && !jsonObj.get("intrastatTransactionType").isJsonNull()) {
        IdDescriptionPairDto.validateJsonElement(jsonObj.get("intrastatTransactionType"));
      }
      // validate the optional field `preferredWarehouse`
      if (jsonObj.get("preferredWarehouse") != null && !jsonObj.get("preferredWarehouse").isJsonNull()) {
        CdDescriptionPairDto.validateJsonElement(jsonObj.get("preferredWarehouse"));
      }
      if ((jsonObj.get("rule") != null && !jsonObj.get("rule").isJsonNull()) && !jsonObj.get("rule").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rule` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rule").toString()));
      }
      // validate the optional field `shipVia`
      if (jsonObj.get("shipVia") != null && !jsonObj.get("shipVia").isJsonNull()) {
        CdDescriptionPairDto.validateJsonElement(jsonObj.get("shipVia"));
      }
      // validate the optional field `terms`
      if (jsonObj.get("terms") != null && !jsonObj.get("terms").isJsonNull()) {
        CdDescriptionPairDto.validateJsonElement(jsonObj.get("terms"));
      }
      // validate the optional field `zone`
      if (jsonObj.get("zone") != null && !jsonObj.get("zone").isJsonNull()) {
        CdDescriptionPairDto.validateJsonElement(jsonObj.get("zone"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SalesOrderShippingDto.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SalesOrderShippingDto' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SalesOrderShippingDto> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SalesOrderShippingDto.class));

       return (TypeAdapter<T>) new TypeAdapter<SalesOrderShippingDto>() {
           @Override
           public void write(JsonWriter out, SalesOrderShippingDto value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SalesOrderShippingDto read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SalesOrderShippingDto given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SalesOrderShippingDto
   * @throws IOException if the JSON string is invalid with respect to SalesOrderShippingDto
   */
  public static SalesOrderShippingDto fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SalesOrderShippingDto.class);
  }

  /**
   * Convert an instance of SalesOrderShippingDto to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

