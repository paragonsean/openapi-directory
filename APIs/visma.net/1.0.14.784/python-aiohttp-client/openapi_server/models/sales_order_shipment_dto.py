# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesOrderShipmentDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, id: str=None, inventory_document_type: str=None, inventory_reference_id: str=None, invoice_id: str=None, invoice_type: str=None, quantity: float=None, type: str=None, volume: float=None, weight: float=None):
        """SalesOrderShipmentDto - a model defined in OpenAPI

        :param _date: The _date of this SalesOrderShipmentDto.
        :param id: The id of this SalesOrderShipmentDto.
        :param inventory_document_type: The inventory_document_type of this SalesOrderShipmentDto.
        :param inventory_reference_id: The inventory_reference_id of this SalesOrderShipmentDto.
        :param invoice_id: The invoice_id of this SalesOrderShipmentDto.
        :param invoice_type: The invoice_type of this SalesOrderShipmentDto.
        :param quantity: The quantity of this SalesOrderShipmentDto.
        :param type: The type of this SalesOrderShipmentDto.
        :param volume: The volume of this SalesOrderShipmentDto.
        :param weight: The weight of this SalesOrderShipmentDto.
        """
        self.openapi_types = {
            '_date': datetime,
            'id': str,
            'inventory_document_type': str,
            'inventory_reference_id': str,
            'invoice_id': str,
            'invoice_type': str,
            'quantity': float,
            'type': str,
            'volume': float,
            'weight': float
        }

        self.attribute_map = {
            '_date': 'date',
            'id': 'id',
            'inventory_document_type': 'inventoryDocumentType',
            'inventory_reference_id': 'inventoryReferenceId',
            'invoice_id': 'invoiceId',
            'invoice_type': 'invoiceType',
            'quantity': 'quantity',
            'type': 'type',
            'volume': 'volume',
            'weight': 'weight'
        }

        self.__date = _date
        self._id = id
        self._inventory_document_type = inventory_document_type
        self._inventory_reference_id = inventory_reference_id
        self._invoice_id = invoice_id
        self._invoice_type = invoice_type
        self._quantity = quantity
        self._type = type
        self._volume = volume
        self._weight = weight

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesOrderShipmentDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SalesOrderShipmentDto of this SalesOrderShipmentDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this SalesOrderShipmentDto.

        The date of the shipment

        :return: The _date of this SalesOrderShipmentDto.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this SalesOrderShipmentDto.

        The date of the shipment

        :param _date: The _date of this SalesOrderShipmentDto.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def id(self):
        """Gets the id of this SalesOrderShipmentDto.

        The id of a shipments created for the order

        :return: The id of this SalesOrderShipmentDto.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SalesOrderShipmentDto.

        The id of a shipments created for the order

        :param id: The id of this SalesOrderShipmentDto.
        :type id: str
        """

        self._id = id

    @property
    def inventory_document_type(self):
        """Gets the inventory_document_type of this SalesOrderShipmentDto.

        The type of inventory document created for the shipment

        :return: The inventory_document_type of this SalesOrderShipmentDto.
        :rtype: str
        """
        return self._inventory_document_type

    @inventory_document_type.setter
    def inventory_document_type(self, inventory_document_type):
        """Sets the inventory_document_type of this SalesOrderShipmentDto.

        The type of inventory document created for the shipment

        :param inventory_document_type: The inventory_document_type of this SalesOrderShipmentDto.
        :type inventory_document_type: str
        """

        self._inventory_document_type = inventory_document_type

    @property
    def inventory_reference_id(self):
        """Gets the inventory_reference_id of this SalesOrderShipmentDto.

        The id of the inventory document created for the shipment

        :return: The inventory_reference_id of this SalesOrderShipmentDto.
        :rtype: str
        """
        return self._inventory_reference_id

    @inventory_reference_id.setter
    def inventory_reference_id(self, inventory_reference_id):
        """Sets the inventory_reference_id of this SalesOrderShipmentDto.

        The id of the inventory document created for the shipment

        :param inventory_reference_id: The inventory_reference_id of this SalesOrderShipmentDto.
        :type inventory_reference_id: str
        """

        self._inventory_reference_id = inventory_reference_id

    @property
    def invoice_id(self):
        """Gets the invoice_id of this SalesOrderShipmentDto.

        The id of the invoice

        :return: The invoice_id of this SalesOrderShipmentDto.
        :rtype: str
        """
        return self._invoice_id

    @invoice_id.setter
    def invoice_id(self, invoice_id):
        """Sets the invoice_id of this SalesOrderShipmentDto.

        The id of the invoice

        :param invoice_id: The invoice_id of this SalesOrderShipmentDto.
        :type invoice_id: str
        """

        self._invoice_id = invoice_id

    @property
    def invoice_type(self):
        """Gets the invoice_type of this SalesOrderShipmentDto.

        The type of invoice

        :return: The invoice_type of this SalesOrderShipmentDto.
        :rtype: str
        """
        return self._invoice_type

    @invoice_type.setter
    def invoice_type(self, invoice_type):
        """Sets the invoice_type of this SalesOrderShipmentDto.

        The type of invoice

        :param invoice_type: The invoice_type of this SalesOrderShipmentDto.
        :type invoice_type: str
        """

        self._invoice_type = invoice_type

    @property
    def quantity(self):
        """Gets the quantity of this SalesOrderShipmentDto.

        The quantity of goods on the shipment

        :return: The quantity of this SalesOrderShipmentDto.
        :rtype: float
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this SalesOrderShipmentDto.

        The quantity of goods on the shipment

        :param quantity: The quantity of this SalesOrderShipmentDto.
        :type quantity: float
        """

        self._quantity = quantity

    @property
    def type(self):
        """Gets the type of this SalesOrderShipmentDto.

        The type of the shipment

        :return: The type of this SalesOrderShipmentDto.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SalesOrderShipmentDto.

        The type of the shipment

        :param type: The type of this SalesOrderShipmentDto.
        :type type: str
        """

        self._type = type

    @property
    def volume(self):
        """Gets the volume of this SalesOrderShipmentDto.

        The volume of the shipped goods

        :return: The volume of this SalesOrderShipmentDto.
        :rtype: float
        """
        return self._volume

    @volume.setter
    def volume(self, volume):
        """Sets the volume of this SalesOrderShipmentDto.

        The volume of the shipped goods

        :param volume: The volume of this SalesOrderShipmentDto.
        :type volume: float
        """

        self._volume = volume

    @property
    def weight(self):
        """Gets the weight of this SalesOrderShipmentDto.

        The weight of the shipped goods

        :return: The weight of this SalesOrderShipmentDto.
        :rtype: float
        """
        return self._weight

    @weight.setter
    def weight(self, weight):
        """Sets the weight of this SalesOrderShipmentDto.

        The weight of the shipped goods

        :param weight: The weight of this SalesOrderShipmentDto.
        :type weight: float
        """

        self._weight = weight
