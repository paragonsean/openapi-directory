# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.new_sales_order_address_dto import NewSalesOrderAddressDto
from openapi_server.models.new_sales_order_contact_dto import NewSalesOrderContactDto
from openapi_server import util


class NewSalesOrderBillingDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: NewSalesOrderAddressDto=None, contact: NewSalesOrderContactDto=None):
        """NewSalesOrderBillingDto - a model defined in OpenAPI

        :param address: The address of this NewSalesOrderBillingDto.
        :param contact: The contact of this NewSalesOrderBillingDto.
        """
        self.openapi_types = {
            'address': NewSalesOrderAddressDto,
            'contact': NewSalesOrderContactDto
        }

        self.attribute_map = {
            'address': 'address',
            'contact': 'contact'
        }

        self._address = address
        self._contact = contact

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewSalesOrderBillingDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewSalesOrderBillingDto of this NewSalesOrderBillingDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this NewSalesOrderBillingDto.


        :return: The address of this NewSalesOrderBillingDto.
        :rtype: NewSalesOrderAddressDto
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this NewSalesOrderBillingDto.


        :param address: The address of this NewSalesOrderBillingDto.
        :type address: NewSalesOrderAddressDto
        """

        self._address = address

    @property
    def contact(self):
        """Gets the contact of this NewSalesOrderBillingDto.


        :return: The contact of this NewSalesOrderBillingDto.
        :rtype: NewSalesOrderContactDto
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this NewSalesOrderBillingDto.


        :param contact: The contact of this NewSalesOrderBillingDto.
        :type contact: NewSalesOrderContactDto
        """

        self._contact = contact
