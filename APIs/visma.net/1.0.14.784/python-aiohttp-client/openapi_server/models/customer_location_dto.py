# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomerLocationDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, corporate_id: str=None, country_id: str=None, gln: str=None, id: str=None, internal_id: int=None, name: str=None, tax_registration_id: str=None, warehouse_id: str=None):
        """CustomerLocationDto - a model defined in OpenAPI

        :param corporate_id: The corporate_id of this CustomerLocationDto.
        :param country_id: The country_id of this CustomerLocationDto.
        :param gln: The gln of this CustomerLocationDto.
        :param id: The id of this CustomerLocationDto.
        :param internal_id: The internal_id of this CustomerLocationDto.
        :param name: The name of this CustomerLocationDto.
        :param tax_registration_id: The tax_registration_id of this CustomerLocationDto.
        :param warehouse_id: The warehouse_id of this CustomerLocationDto.
        """
        self.openapi_types = {
            'corporate_id': str,
            'country_id': str,
            'gln': str,
            'id': str,
            'internal_id': int,
            'name': str,
            'tax_registration_id': str,
            'warehouse_id': str
        }

        self.attribute_map = {
            'corporate_id': 'corporateId',
            'country_id': 'countryId',
            'gln': 'gln',
            'id': 'id',
            'internal_id': 'internalId',
            'name': 'name',
            'tax_registration_id': 'taxRegistrationId',
            'warehouse_id': 'warehouseId'
        }

        self._corporate_id = corporate_id
        self._country_id = country_id
        self._gln = gln
        self._id = id
        self._internal_id = internal_id
        self._name = name
        self._tax_registration_id = tax_registration_id
        self._warehouse_id = warehouse_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerLocationDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerLocationDto of this CustomerLocationDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def corporate_id(self):
        """Gets the corporate_id of this CustomerLocationDto.

        The corporate id of the location

        :return: The corporate_id of this CustomerLocationDto.
        :rtype: str
        """
        return self._corporate_id

    @corporate_id.setter
    def corporate_id(self, corporate_id):
        """Sets the corporate_id of this CustomerLocationDto.

        The corporate id of the location

        :param corporate_id: The corporate_id of this CustomerLocationDto.
        :type corporate_id: str
        """

        self._corporate_id = corporate_id

    @property
    def country_id(self):
        """Gets the country_id of this CustomerLocationDto.

        The country code of the location

        :return: The country_id of this CustomerLocationDto.
        :rtype: str
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """Sets the country_id of this CustomerLocationDto.

        The country code of the location

        :param country_id: The country_id of this CustomerLocationDto.
        :type country_id: str
        """

        self._country_id = country_id

    @property
    def gln(self):
        """Gets the gln of this CustomerLocationDto.

        The global localization number of the location

        :return: The gln of this CustomerLocationDto.
        :rtype: str
        """
        return self._gln

    @gln.setter
    def gln(self, gln):
        """Sets the gln of this CustomerLocationDto.

        The global localization number of the location

        :param gln: The gln of this CustomerLocationDto.
        :type gln: str
        """

        self._gln = gln

    @property
    def id(self):
        """Gets the id of this CustomerLocationDto.

        Location id

        :return: The id of this CustomerLocationDto.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerLocationDto.

        Location id

        :param id: The id of this CustomerLocationDto.
        :type id: str
        """

        self._id = id

    @property
    def internal_id(self):
        """Gets the internal_id of this CustomerLocationDto.

        An internal id of the customer location

        :return: The internal_id of this CustomerLocationDto.
        :rtype: int
        """
        return self._internal_id

    @internal_id.setter
    def internal_id(self, internal_id):
        """Sets the internal_id of this CustomerLocationDto.

        An internal id of the customer location

        :param internal_id: The internal_id of this CustomerLocationDto.
        :type internal_id: int
        """

        self._internal_id = internal_id

    @property
    def name(self):
        """Gets the name of this CustomerLocationDto.

        Location description

        :return: The name of this CustomerLocationDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomerLocationDto.

        Location description

        :param name: The name of this CustomerLocationDto.
        :type name: str
        """

        self._name = name

    @property
    def tax_registration_id(self):
        """Gets the tax_registration_id of this CustomerLocationDto.

        The tax registration id of the location

        :return: The tax_registration_id of this CustomerLocationDto.
        :rtype: str
        """
        return self._tax_registration_id

    @tax_registration_id.setter
    def tax_registration_id(self, tax_registration_id):
        """Sets the tax_registration_id of this CustomerLocationDto.

        The tax registration id of the location

        :param tax_registration_id: The tax_registration_id of this CustomerLocationDto.
        :type tax_registration_id: str
        """

        self._tax_registration_id = tax_registration_id

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this CustomerLocationDto.

        The site id of the location

        :return: The warehouse_id of this CustomerLocationDto.
        :rtype: str
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this CustomerLocationDto.

        The site id of the location

        :param warehouse_id: The warehouse_id of this CustomerLocationDto.
        :type warehouse_id: str
        """

        self._warehouse_id = warehouse_id
