# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.warehouse_availability_dto import WarehouseAvailabilityDto
from openapi_server import util


class InventoryItemAvailabilityDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: Dict[str, str]=None, availability: List[WarehouseAvailabilityDto]=None, base_unit: str=None, description: str=None, internal_id: int=None, inventory_id: str=None):
        """InventoryItemAvailabilityDto - a model defined in OpenAPI

        :param attributes: The attributes of this InventoryItemAvailabilityDto.
        :param availability: The availability of this InventoryItemAvailabilityDto.
        :param base_unit: The base_unit of this InventoryItemAvailabilityDto.
        :param description: The description of this InventoryItemAvailabilityDto.
        :param internal_id: The internal_id of this InventoryItemAvailabilityDto.
        :param inventory_id: The inventory_id of this InventoryItemAvailabilityDto.
        """
        self.openapi_types = {
            'attributes': Dict[str, str],
            'availability': List[WarehouseAvailabilityDto],
            'base_unit': str,
            'description': str,
            'internal_id': int,
            'inventory_id': str
        }

        self.attribute_map = {
            'attributes': 'attributes',
            'availability': 'availability',
            'base_unit': 'baseUnit',
            'description': 'description',
            'internal_id': 'internalId',
            'inventory_id': 'inventoryId'
        }

        self._attributes = attributes
        self._availability = availability
        self._base_unit = base_unit
        self._description = description
        self._internal_id = internal_id
        self._inventory_id = inventory_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InventoryItemAvailabilityDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InventoryItemAvailabilityDto of this InventoryItemAvailabilityDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this InventoryItemAvailabilityDto.

        Attributes applied to the inventory item

        :return: The attributes of this InventoryItemAvailabilityDto.
        :rtype: Dict[str, str]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this InventoryItemAvailabilityDto.

        Attributes applied to the inventory item

        :param attributes: The attributes of this InventoryItemAvailabilityDto.
        :type attributes: Dict[str, str]
        """

        self._attributes = attributes

    @property
    def availability(self):
        """Gets the availability of this InventoryItemAvailabilityDto.

        Warehouse information for the inventory item

        :return: The availability of this InventoryItemAvailabilityDto.
        :rtype: List[WarehouseAvailabilityDto]
        """
        return self._availability

    @availability.setter
    def availability(self, availability):
        """Sets the availability of this InventoryItemAvailabilityDto.

        Warehouse information for the inventory item

        :param availability: The availability of this InventoryItemAvailabilityDto.
        :type availability: List[WarehouseAvailabilityDto]
        """

        self._availability = availability

    @property
    def base_unit(self):
        """Gets the base_unit of this InventoryItemAvailabilityDto.

        The base unit for the inventory item

        :return: The base_unit of this InventoryItemAvailabilityDto.
        :rtype: str
        """
        return self._base_unit

    @base_unit.setter
    def base_unit(self, base_unit):
        """Sets the base_unit of this InventoryItemAvailabilityDto.

        The base unit for the inventory item

        :param base_unit: The base_unit of this InventoryItemAvailabilityDto.
        :type base_unit: str
        """

        self._base_unit = base_unit

    @property
    def description(self):
        """Gets the description of this InventoryItemAvailabilityDto.

        The description of the inventory item

        :return: The description of this InventoryItemAvailabilityDto.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this InventoryItemAvailabilityDto.

        The description of the inventory item

        :param description: The description of this InventoryItemAvailabilityDto.
        :type description: str
        """

        self._description = description

    @property
    def internal_id(self):
        """Gets the internal_id of this InventoryItemAvailabilityDto.

        The internal Id used by the system to identify the inventory item

        :return: The internal_id of this InventoryItemAvailabilityDto.
        :rtype: int
        """
        return self._internal_id

    @internal_id.setter
    def internal_id(self, internal_id):
        """Sets the internal_id of this InventoryItemAvailabilityDto.

        The internal Id used by the system to identify the inventory item

        :param internal_id: The internal_id of this InventoryItemAvailabilityDto.
        :type internal_id: int
        """

        self._internal_id = internal_id

    @property
    def inventory_id(self):
        """Gets the inventory_id of this InventoryItemAvailabilityDto.

        The inventory id (InventoryCd)

        :return: The inventory_id of this InventoryItemAvailabilityDto.
        :rtype: str
        """
        return self._inventory_id

    @inventory_id.setter
    def inventory_id(self, inventory_id):
        """Sets the inventory_id of this InventoryItemAvailabilityDto.

        The inventory id (InventoryCd)

        :param inventory_id: The inventory_id of this InventoryItemAvailabilityDto.
        :type inventory_id: str
        """

        self._inventory_id = inventory_id
