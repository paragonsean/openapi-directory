# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.cd_description_pair_dto import CdDescriptionPairDto
from openapi_server import util


class SalesOrderPaymentDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cash_account_id: str=None, payment_method: CdDescriptionPairDto=None, payment_reference: str=None):
        """SalesOrderPaymentDto - a model defined in OpenAPI

        :param cash_account_id: The cash_account_id of this SalesOrderPaymentDto.
        :param payment_method: The payment_method of this SalesOrderPaymentDto.
        :param payment_reference: The payment_reference of this SalesOrderPaymentDto.
        """
        self.openapi_types = {
            'cash_account_id': str,
            'payment_method': CdDescriptionPairDto,
            'payment_reference': str
        }

        self.attribute_map = {
            'cash_account_id': 'cashAccountId',
            'payment_method': 'paymentMethod',
            'payment_reference': 'paymentReference'
        }

        self._cash_account_id = cash_account_id
        self._payment_method = payment_method
        self._payment_reference = payment_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesOrderPaymentDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SalesOrderPaymentDto of this SalesOrderPaymentDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cash_account_id(self):
        """Gets the cash_account_id of this SalesOrderPaymentDto.

        The cash account to use

        :return: The cash_account_id of this SalesOrderPaymentDto.
        :rtype: str
        """
        return self._cash_account_id

    @cash_account_id.setter
    def cash_account_id(self, cash_account_id):
        """Sets the cash_account_id of this SalesOrderPaymentDto.

        The cash account to use

        :param cash_account_id: The cash_account_id of this SalesOrderPaymentDto.
        :type cash_account_id: str
        """

        self._cash_account_id = cash_account_id

    @property
    def payment_method(self):
        """Gets the payment_method of this SalesOrderPaymentDto.


        :return: The payment_method of this SalesOrderPaymentDto.
        :rtype: CdDescriptionPairDto
        """
        return self._payment_method

    @payment_method.setter
    def payment_method(self, payment_method):
        """Sets the payment_method of this SalesOrderPaymentDto.


        :param payment_method: The payment_method of this SalesOrderPaymentDto.
        :type payment_method: CdDescriptionPairDto
        """

        self._payment_method = payment_method

    @property
    def payment_reference(self):
        """Gets the payment_reference of this SalesOrderPaymentDto.

        The payment reference

        :return: The payment_reference of this SalesOrderPaymentDto.
        :rtype: str
        """
        return self._payment_reference

    @payment_reference.setter
    def payment_reference(self, payment_reference):
        """Sets the payment_reference of this SalesOrderPaymentDto.

        The payment reference

        :param payment_reference: The payment_reference of this SalesOrderPaymentDto.
        :type payment_reference: str
        """

        self._payment_reference = payment_reference
