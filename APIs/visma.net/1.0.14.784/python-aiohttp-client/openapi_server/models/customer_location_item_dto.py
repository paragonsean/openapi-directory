# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address_dto import AddressDto
from openapi_server.models.contact_dto import ContactDto
from openapi_server import util


class CustomerLocationItemDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: AddressDto=None, contact: ContactDto=None, corporate_id: str=None, country_id: str=None, fob_point_id: str=None, gln: str=None, id: str=None, insurance: bool=None, internal_id: int=None, lead_time: int=None, name: str=None, preferred_warehouse_id: str=None, price_class_id: str=None, priority: int=None, resedential_delivery: bool=None, residential_delivery: bool=None, saturday_delivery: bool=None, ship_terms_id: str=None, ship_via_id: str=None, ship_zone_id: str=None, shipping_rule: str=None, tax_registration_id: str=None, tax_zone_id: str=None, warehouse_id: str=None):
        """CustomerLocationItemDto - a model defined in OpenAPI

        :param address: The address of this CustomerLocationItemDto.
        :param contact: The contact of this CustomerLocationItemDto.
        :param corporate_id: The corporate_id of this CustomerLocationItemDto.
        :param country_id: The country_id of this CustomerLocationItemDto.
        :param fob_point_id: The fob_point_id of this CustomerLocationItemDto.
        :param gln: The gln of this CustomerLocationItemDto.
        :param id: The id of this CustomerLocationItemDto.
        :param insurance: The insurance of this CustomerLocationItemDto.
        :param internal_id: The internal_id of this CustomerLocationItemDto.
        :param lead_time: The lead_time of this CustomerLocationItemDto.
        :param name: The name of this CustomerLocationItemDto.
        :param preferred_warehouse_id: The preferred_warehouse_id of this CustomerLocationItemDto.
        :param price_class_id: The price_class_id of this CustomerLocationItemDto.
        :param priority: The priority of this CustomerLocationItemDto.
        :param resedential_delivery: The resedential_delivery of this CustomerLocationItemDto.
        :param residential_delivery: The residential_delivery of this CustomerLocationItemDto.
        :param saturday_delivery: The saturday_delivery of this CustomerLocationItemDto.
        :param ship_terms_id: The ship_terms_id of this CustomerLocationItemDto.
        :param ship_via_id: The ship_via_id of this CustomerLocationItemDto.
        :param ship_zone_id: The ship_zone_id of this CustomerLocationItemDto.
        :param shipping_rule: The shipping_rule of this CustomerLocationItemDto.
        :param tax_registration_id: The tax_registration_id of this CustomerLocationItemDto.
        :param tax_zone_id: The tax_zone_id of this CustomerLocationItemDto.
        :param warehouse_id: The warehouse_id of this CustomerLocationItemDto.
        """
        self.openapi_types = {
            'address': AddressDto,
            'contact': ContactDto,
            'corporate_id': str,
            'country_id': str,
            'fob_point_id': str,
            'gln': str,
            'id': str,
            'insurance': bool,
            'internal_id': int,
            'lead_time': int,
            'name': str,
            'preferred_warehouse_id': str,
            'price_class_id': str,
            'priority': int,
            'resedential_delivery': bool,
            'residential_delivery': bool,
            'saturday_delivery': bool,
            'ship_terms_id': str,
            'ship_via_id': str,
            'ship_zone_id': str,
            'shipping_rule': str,
            'tax_registration_id': str,
            'tax_zone_id': str,
            'warehouse_id': str
        }

        self.attribute_map = {
            'address': 'address',
            'contact': 'contact',
            'corporate_id': 'corporateId',
            'country_id': 'countryId',
            'fob_point_id': 'fobPointId',
            'gln': 'gln',
            'id': 'id',
            'insurance': 'insurance',
            'internal_id': 'internalId',
            'lead_time': 'leadTime',
            'name': 'name',
            'preferred_warehouse_id': 'preferredWarehouseId',
            'price_class_id': 'priceClassId',
            'priority': 'priority',
            'resedential_delivery': 'resedentialDelivery',
            'residential_delivery': 'residentialDelivery',
            'saturday_delivery': 'saturdayDelivery',
            'ship_terms_id': 'shipTermsId',
            'ship_via_id': 'shipViaId',
            'ship_zone_id': 'shipZoneId',
            'shipping_rule': 'shippingRule',
            'tax_registration_id': 'taxRegistrationId',
            'tax_zone_id': 'taxZoneId',
            'warehouse_id': 'warehouseId'
        }

        self._address = address
        self._contact = contact
        self._corporate_id = corporate_id
        self._country_id = country_id
        self._fob_point_id = fob_point_id
        self._gln = gln
        self._id = id
        self._insurance = insurance
        self._internal_id = internal_id
        self._lead_time = lead_time
        self._name = name
        self._preferred_warehouse_id = preferred_warehouse_id
        self._price_class_id = price_class_id
        self._priority = priority
        self._resedential_delivery = resedential_delivery
        self._residential_delivery = residential_delivery
        self._saturday_delivery = saturday_delivery
        self._ship_terms_id = ship_terms_id
        self._ship_via_id = ship_via_id
        self._ship_zone_id = ship_zone_id
        self._shipping_rule = shipping_rule
        self._tax_registration_id = tax_registration_id
        self._tax_zone_id = tax_zone_id
        self._warehouse_id = warehouse_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomerLocationItemDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomerLocationItemDto of this CustomerLocationItemDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this CustomerLocationItemDto.


        :return: The address of this CustomerLocationItemDto.
        :rtype: AddressDto
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this CustomerLocationItemDto.


        :param address: The address of this CustomerLocationItemDto.
        :type address: AddressDto
        """

        self._address = address

    @property
    def contact(self):
        """Gets the contact of this CustomerLocationItemDto.


        :return: The contact of this CustomerLocationItemDto.
        :rtype: ContactDto
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this CustomerLocationItemDto.


        :param contact: The contact of this CustomerLocationItemDto.
        :type contact: ContactDto
        """

        self._contact = contact

    @property
    def corporate_id(self):
        """Gets the corporate_id of this CustomerLocationItemDto.

        The corporate id of the location

        :return: The corporate_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._corporate_id

    @corporate_id.setter
    def corporate_id(self, corporate_id):
        """Sets the corporate_id of this CustomerLocationItemDto.

        The corporate id of the location

        :param corporate_id: The corporate_id of this CustomerLocationItemDto.
        :type corporate_id: str
        """

        self._corporate_id = corporate_id

    @property
    def country_id(self):
        """Gets the country_id of this CustomerLocationItemDto.

        The country code of the location

        :return: The country_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._country_id

    @country_id.setter
    def country_id(self, country_id):
        """Sets the country_id of this CustomerLocationItemDto.

        The country code of the location

        :param country_id: The country_id of this CustomerLocationItemDto.
        :type country_id: str
        """

        self._country_id = country_id

    @property
    def fob_point_id(self):
        """Gets the fob_point_id of this CustomerLocationItemDto.

        Default FobPointId

        :return: The fob_point_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._fob_point_id

    @fob_point_id.setter
    def fob_point_id(self, fob_point_id):
        """Sets the fob_point_id of this CustomerLocationItemDto.

        Default FobPointId

        :param fob_point_id: The fob_point_id of this CustomerLocationItemDto.
        :type fob_point_id: str
        """

        self._fob_point_id = fob_point_id

    @property
    def gln(self):
        """Gets the gln of this CustomerLocationItemDto.

        The global localization number of the location

        :return: The gln of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._gln

    @gln.setter
    def gln(self, gln):
        """Sets the gln of this CustomerLocationItemDto.

        The global localization number of the location

        :param gln: The gln of this CustomerLocationItemDto.
        :type gln: str
        """

        self._gln = gln

    @property
    def id(self):
        """Gets the id of this CustomerLocationItemDto.

        Location id

        :return: The id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomerLocationItemDto.

        Location id

        :param id: The id of this CustomerLocationItemDto.
        :type id: str
        """

        self._id = id

    @property
    def insurance(self):
        """Gets the insurance of this CustomerLocationItemDto.

        Default Insurance

        :return: The insurance of this CustomerLocationItemDto.
        :rtype: bool
        """
        return self._insurance

    @insurance.setter
    def insurance(self, insurance):
        """Sets the insurance of this CustomerLocationItemDto.

        Default Insurance

        :param insurance: The insurance of this CustomerLocationItemDto.
        :type insurance: bool
        """

        self._insurance = insurance

    @property
    def internal_id(self):
        """Gets the internal_id of this CustomerLocationItemDto.

        An internal id of the customer location

        :return: The internal_id of this CustomerLocationItemDto.
        :rtype: int
        """
        return self._internal_id

    @internal_id.setter
    def internal_id(self, internal_id):
        """Sets the internal_id of this CustomerLocationItemDto.

        An internal id of the customer location

        :param internal_id: The internal_id of this CustomerLocationItemDto.
        :type internal_id: int
        """

        self._internal_id = internal_id

    @property
    def lead_time(self):
        """Gets the lead_time of this CustomerLocationItemDto.

        The number of days required for the shipped goods to reach the customer.  Used in the calculation of the scheduled shipment date

        :return: The lead_time of this CustomerLocationItemDto.
        :rtype: int
        """
        return self._lead_time

    @lead_time.setter
    def lead_time(self, lead_time):
        """Sets the lead_time of this CustomerLocationItemDto.

        The number of days required for the shipped goods to reach the customer.  Used in the calculation of the scheduled shipment date

        :param lead_time: The lead_time of this CustomerLocationItemDto.
        :type lead_time: int
        """

        self._lead_time = lead_time

    @property
    def name(self):
        """Gets the name of this CustomerLocationItemDto.

        Location description

        :return: The name of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CustomerLocationItemDto.

        Location description

        :param name: The name of this CustomerLocationItemDto.
        :type name: str
        """

        self._name = name

    @property
    def preferred_warehouse_id(self):
        """Gets the preferred_warehouse_id of this CustomerLocationItemDto.

        The preferred shipping warehouse of the customer set default for the order

        :return: The preferred_warehouse_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._preferred_warehouse_id

    @preferred_warehouse_id.setter
    def preferred_warehouse_id(self, preferred_warehouse_id):
        """Sets the preferred_warehouse_id of this CustomerLocationItemDto.

        The preferred shipping warehouse of the customer set default for the order

        :param preferred_warehouse_id: The preferred_warehouse_id of this CustomerLocationItemDto.
        :type preferred_warehouse_id: str
        """

        self._preferred_warehouse_id = preferred_warehouse_id

    @property
    def price_class_id(self):
        """Gets the price_class_id of this CustomerLocationItemDto.

        Price class

        :return: The price_class_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._price_class_id

    @price_class_id.setter
    def price_class_id(self, price_class_id):
        """Sets the price_class_id of this CustomerLocationItemDto.

        Price class

        :param price_class_id: The price_class_id of this CustomerLocationItemDto.
        :type price_class_id: str
        """

        self._price_class_id = price_class_id

    @property
    def priority(self):
        """Gets the priority of this CustomerLocationItemDto.

        Default Priority

        :return: The priority of this CustomerLocationItemDto.
        :rtype: int
        """
        return self._priority

    @priority.setter
    def priority(self, priority):
        """Sets the priority of this CustomerLocationItemDto.

        Default Priority

        :param priority: The priority of this CustomerLocationItemDto.
        :type priority: int
        """

        self._priority = priority

    @property
    def resedential_delivery(self):
        """Gets the resedential_delivery of this CustomerLocationItemDto.

        Default ResidentialDelivery.<br />  This field will be removed with due date 1.12.2023. It is recommended to use <see cref=\"P:Visma.net.ERP.SalesOrders.Api.Dto.CustomerLocationItemDto.ResidentialDelivery\">ResidentialDelivery</see> instead.

        :return: The resedential_delivery of this CustomerLocationItemDto.
        :rtype: bool
        """
        return self._resedential_delivery

    @resedential_delivery.setter
    def resedential_delivery(self, resedential_delivery):
        """Sets the resedential_delivery of this CustomerLocationItemDto.

        Default ResidentialDelivery.<br />  This field will be removed with due date 1.12.2023. It is recommended to use <see cref=\"P:Visma.net.ERP.SalesOrders.Api.Dto.CustomerLocationItemDto.ResidentialDelivery\">ResidentialDelivery</see> instead.

        :param resedential_delivery: The resedential_delivery of this CustomerLocationItemDto.
        :type resedential_delivery: bool
        """

        self._resedential_delivery = resedential_delivery

    @property
    def residential_delivery(self):
        """Gets the residential_delivery of this CustomerLocationItemDto.

        Default ResidentialDelivery

        :return: The residential_delivery of this CustomerLocationItemDto.
        :rtype: bool
        """
        return self._residential_delivery

    @residential_delivery.setter
    def residential_delivery(self, residential_delivery):
        """Sets the residential_delivery of this CustomerLocationItemDto.

        Default ResidentialDelivery

        :param residential_delivery: The residential_delivery of this CustomerLocationItemDto.
        :type residential_delivery: bool
        """

        self._residential_delivery = residential_delivery

    @property
    def saturday_delivery(self):
        """Gets the saturday_delivery of this CustomerLocationItemDto.

        Default SaturdayDelivery

        :return: The saturday_delivery of this CustomerLocationItemDto.
        :rtype: bool
        """
        return self._saturday_delivery

    @saturday_delivery.setter
    def saturday_delivery(self, saturday_delivery):
        """Sets the saturday_delivery of this CustomerLocationItemDto.

        Default SaturdayDelivery

        :param saturday_delivery: The saturday_delivery of this CustomerLocationItemDto.
        :type saturday_delivery: bool
        """

        self._saturday_delivery = saturday_delivery

    @property
    def ship_terms_id(self):
        """Gets the ship_terms_id of this CustomerLocationItemDto.

        Default ShipTermsId

        :return: The ship_terms_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._ship_terms_id

    @ship_terms_id.setter
    def ship_terms_id(self, ship_terms_id):
        """Sets the ship_terms_id of this CustomerLocationItemDto.

        Default ShipTermsId

        :param ship_terms_id: The ship_terms_id of this CustomerLocationItemDto.
        :type ship_terms_id: str
        """

        self._ship_terms_id = ship_terms_id

    @property
    def ship_via_id(self):
        """Gets the ship_via_id of this CustomerLocationItemDto.

        The ship via id that represents the carrier and its service to be used for shipping the ordered goods

        :return: The ship_via_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._ship_via_id

    @ship_via_id.setter
    def ship_via_id(self, ship_via_id):
        """Sets the ship_via_id of this CustomerLocationItemDto.

        The ship via id that represents the carrier and its service to be used for shipping the ordered goods

        :param ship_via_id: The ship_via_id of this CustomerLocationItemDto.
        :type ship_via_id: str
        """

        self._ship_via_id = ship_via_id

    @property
    def ship_zone_id(self):
        """Gets the ship_zone_id of this CustomerLocationItemDto.

        Default ShipZoneId

        :return: The ship_zone_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._ship_zone_id

    @ship_zone_id.setter
    def ship_zone_id(self, ship_zone_id):
        """Sets the ship_zone_id of this CustomerLocationItemDto.

        Default ShipZoneId

        :param ship_zone_id: The ship_zone_id of this CustomerLocationItemDto.
        :type ship_zone_id: str
        """

        self._ship_zone_id = ship_zone_id

    @property
    def shipping_rule(self):
        """Gets the shipping_rule of this CustomerLocationItemDto.

        Shipping rule of the customer set default for the order  <br>Is one of the following options:<br><list type=\"bullet\"><item><term>CancelRemainder: </term><description>The ordered quantity should be delivered in one shipment</description></item><item><term>BackOrderAllowed: </term><description>The ordered quantity can be delivered in multiple shipments.</description></item><item><term>ShipComplete: </term><description>The ordered quantity should be delivered in one shipment.</description></item></list>

        :return: The shipping_rule of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._shipping_rule

    @shipping_rule.setter
    def shipping_rule(self, shipping_rule):
        """Sets the shipping_rule of this CustomerLocationItemDto.

        Shipping rule of the customer set default for the order  <br>Is one of the following options:<br><list type=\"bullet\"><item><term>CancelRemainder: </term><description>The ordered quantity should be delivered in one shipment</description></item><item><term>BackOrderAllowed: </term><description>The ordered quantity can be delivered in multiple shipments.</description></item><item><term>ShipComplete: </term><description>The ordered quantity should be delivered in one shipment.</description></item></list>

        :param shipping_rule: The shipping_rule of this CustomerLocationItemDto.
        :type shipping_rule: str
        """

        self._shipping_rule = shipping_rule

    @property
    def tax_registration_id(self):
        """Gets the tax_registration_id of this CustomerLocationItemDto.

        The tax registration id of the location

        :return: The tax_registration_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._tax_registration_id

    @tax_registration_id.setter
    def tax_registration_id(self, tax_registration_id):
        """Sets the tax_registration_id of this CustomerLocationItemDto.

        The tax registration id of the location

        :param tax_registration_id: The tax_registration_id of this CustomerLocationItemDto.
        :type tax_registration_id: str
        """

        self._tax_registration_id = tax_registration_id

    @property
    def tax_zone_id(self):
        """Gets the tax_zone_id of this CustomerLocationItemDto.

        The location tax/VAT zone id

        :return: The tax_zone_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._tax_zone_id

    @tax_zone_id.setter
    def tax_zone_id(self, tax_zone_id):
        """Sets the tax_zone_id of this CustomerLocationItemDto.

        The location tax/VAT zone id

        :param tax_zone_id: The tax_zone_id of this CustomerLocationItemDto.
        :type tax_zone_id: str
        """

        self._tax_zone_id = tax_zone_id

    @property
    def warehouse_id(self):
        """Gets the warehouse_id of this CustomerLocationItemDto.

        The site id of the location

        :return: The warehouse_id of this CustomerLocationItemDto.
        :rtype: str
        """
        return self._warehouse_id

    @warehouse_id.setter
    def warehouse_id(self, warehouse_id):
        """Sets the warehouse_id of this CustomerLocationItemDto.

        The site id of the location

        :param warehouse_id: The warehouse_id of this CustomerLocationItemDto.
        :type warehouse_id: str
        """

        self._warehouse_id = warehouse_id
