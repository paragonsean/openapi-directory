# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PatchSalesOrderPaymentSettingsDto(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cash_account_id: str=None, payment_method_id: str=None, payment_reference: str=None):
        """PatchSalesOrderPaymentSettingsDto - a model defined in OpenAPI

        :param cash_account_id: The cash_account_id of this PatchSalesOrderPaymentSettingsDto.
        :param payment_method_id: The payment_method_id of this PatchSalesOrderPaymentSettingsDto.
        :param payment_reference: The payment_reference of this PatchSalesOrderPaymentSettingsDto.
        """
        self.openapi_types = {
            'cash_account_id': str,
            'payment_method_id': str,
            'payment_reference': str
        }

        self.attribute_map = {
            'cash_account_id': 'cashAccountId',
            'payment_method_id': 'paymentMethodId',
            'payment_reference': 'paymentReference'
        }

        self._cash_account_id = cash_account_id
        self._payment_method_id = payment_method_id
        self._payment_reference = payment_reference

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PatchSalesOrderPaymentSettingsDto':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PatchSalesOrderPaymentSettingsDto of this PatchSalesOrderPaymentSettingsDto.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cash_account_id(self):
        """Gets the cash_account_id of this PatchSalesOrderPaymentSettingsDto.

        The cash account associated with the set payment method.

        :return: The cash_account_id of this PatchSalesOrderPaymentSettingsDto.
        :rtype: str
        """
        return self._cash_account_id

    @cash_account_id.setter
    def cash_account_id(self, cash_account_id):
        """Sets the cash_account_id of this PatchSalesOrderPaymentSettingsDto.

        The cash account associated with the set payment method.

        :param cash_account_id: The cash_account_id of this PatchSalesOrderPaymentSettingsDto.
        :type cash_account_id: str
        """
        if cash_account_id is not None and len(cash_account_id) > 10:
            raise ValueError("Invalid value for `cash_account_id`, length must be less than or equal to `10`")

        self._cash_account_id = cash_account_id

    @property
    def payment_method_id(self):
        """Gets the payment_method_id of this PatchSalesOrderPaymentSettingsDto.

        Overrides the default payment method set on the customer. This must be a valid and active payment method id.

        :return: The payment_method_id of this PatchSalesOrderPaymentSettingsDto.
        :rtype: str
        """
        return self._payment_method_id

    @payment_method_id.setter
    def payment_method_id(self, payment_method_id):
        """Sets the payment_method_id of this PatchSalesOrderPaymentSettingsDto.

        Overrides the default payment method set on the customer. This must be a valid and active payment method id.

        :param payment_method_id: The payment_method_id of this PatchSalesOrderPaymentSettingsDto.
        :type payment_method_id: str
        """

        self._payment_method_id = payment_method_id

    @property
    def payment_reference(self):
        """Gets the payment_reference of this PatchSalesOrderPaymentSettingsDto.

        Sets the external reference number for the order. This must be set if order type requires it.

        :return: The payment_reference of this PatchSalesOrderPaymentSettingsDto.
        :rtype: str
        """
        return self._payment_reference

    @payment_reference.setter
    def payment_reference(self, payment_reference):
        """Sets the payment_reference of this PatchSalesOrderPaymentSettingsDto.

        Sets the external reference number for the order. This must be set if order type requires it.

        :param payment_reference: The payment_reference of this PatchSalesOrderPaymentSettingsDto.
        :type payment_reference: str
        """
        if payment_reference is not None and len(payment_reference) > 40:
            raise ValueError("Invalid value for `payment_reference`, length must be less than or equal to `40`")

        self._payment_reference = payment_reference
