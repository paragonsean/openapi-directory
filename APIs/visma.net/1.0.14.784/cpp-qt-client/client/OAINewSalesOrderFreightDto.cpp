/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewSalesOrderFreightDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewSalesOrderFreightDto::OAINewSalesOrderFreightDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewSalesOrderFreightDto::OAINewSalesOrderFreightDto() {
    this->initializeModel();
}

OAINewSalesOrderFreightDto::~OAINewSalesOrderFreightDto() {}

void OAINewSalesOrderFreightDto::initializeModel() {

    m_cost_isSet = false;
    m_cost_isValid = false;

    m_premium_amount_isSet = false;
    m_premium_amount_isValid = false;

    m_tax_category_id_isSet = false;
    m_tax_category_id_isValid = false;
}

void OAINewSalesOrderFreightDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewSalesOrderFreightDto::fromJsonObject(QJsonObject json) {

    m_cost_isValid = ::OpenAPI::fromJsonValue(m_cost, json[QString("cost")]);
    m_cost_isSet = !json[QString("cost")].isNull() && m_cost_isValid;

    m_premium_amount_isValid = ::OpenAPI::fromJsonValue(m_premium_amount, json[QString("premiumAmount")]);
    m_premium_amount_isSet = !json[QString("premiumAmount")].isNull() && m_premium_amount_isValid;

    m_tax_category_id_isValid = ::OpenAPI::fromJsonValue(m_tax_category_id, json[QString("taxCategoryId")]);
    m_tax_category_id_isSet = !json[QString("taxCategoryId")].isNull() && m_tax_category_id_isValid;
}

QString OAINewSalesOrderFreightDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewSalesOrderFreightDto::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_isSet) {
        obj.insert(QString("cost"), ::OpenAPI::toJsonValue(m_cost));
    }
    if (m_premium_amount_isSet) {
        obj.insert(QString("premiumAmount"), ::OpenAPI::toJsonValue(m_premium_amount));
    }
    if (m_tax_category_id_isSet) {
        obj.insert(QString("taxCategoryId"), ::OpenAPI::toJsonValue(m_tax_category_id));
    }
    return obj;
}

double OAINewSalesOrderFreightDto::getCost() const {
    return m_cost;
}
void OAINewSalesOrderFreightDto::setCost(const double &cost) {
    m_cost = cost;
    m_cost_isSet = true;
}

bool OAINewSalesOrderFreightDto::is_cost_Set() const{
    return m_cost_isSet;
}

bool OAINewSalesOrderFreightDto::is_cost_Valid() const{
    return m_cost_isValid;
}

double OAINewSalesOrderFreightDto::getPremiumAmount() const {
    return m_premium_amount;
}
void OAINewSalesOrderFreightDto::setPremiumAmount(const double &premium_amount) {
    m_premium_amount = premium_amount;
    m_premium_amount_isSet = true;
}

bool OAINewSalesOrderFreightDto::is_premium_amount_Set() const{
    return m_premium_amount_isSet;
}

bool OAINewSalesOrderFreightDto::is_premium_amount_Valid() const{
    return m_premium_amount_isValid;
}

QString OAINewSalesOrderFreightDto::getTaxCategoryId() const {
    return m_tax_category_id;
}
void OAINewSalesOrderFreightDto::setTaxCategoryId(const QString &tax_category_id) {
    m_tax_category_id = tax_category_id;
    m_tax_category_id_isSet = true;
}

bool OAINewSalesOrderFreightDto::is_tax_category_id_Set() const{
    return m_tax_category_id_isSet;
}

bool OAINewSalesOrderFreightDto::is_tax_category_id_Valid() const{
    return m_tax_category_id_isValid;
}

bool OAINewSalesOrderFreightDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_premium_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_category_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewSalesOrderFreightDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
