/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesOrderOriginDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesOrderOriginDto::OAISalesOrderOriginDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesOrderOriginDto::OAISalesOrderOriginDto() {
    this->initializeModel();
}

OAISalesOrderOriginDto::~OAISalesOrderOriginDto() {}

void OAISalesOrderOriginDto::initializeModel() {

    m__links_isSet = false;
    m__links_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_order_type_isSet = false;
    m_order_type_isValid = false;
}

void OAISalesOrderOriginDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesOrderOriginDto::fromJsonObject(QJsonObject json) {

    m__links_isValid = ::OpenAPI::fromJsonValue(m__links, json[QString("_links")]);
    m__links_isSet = !json[QString("_links")].isNull() && m__links_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_order_type_isValid = ::OpenAPI::fromJsonValue(m_order_type, json[QString("orderType")]);
    m_order_type_isSet = !json[QString("orderType")].isNull() && m_order_type_isValid;
}

QString OAISalesOrderOriginDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesOrderOriginDto::asJsonObject() const {
    QJsonObject obj;
    if (m__links.size() > 0) {
        obj.insert(QString("_links"), ::OpenAPI::toJsonValue(m__links));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_order_type_isSet) {
        obj.insert(QString("orderType"), ::OpenAPI::toJsonValue(m_order_type));
    }
    return obj;
}

QMap<QString, OAIDtoLink> OAISalesOrderOriginDto::getLinks() const {
    return m__links;
}
void OAISalesOrderOriginDto::setLinks(const QMap<QString, OAIDtoLink> &_links) {
    m__links = _links;
    m__links_isSet = true;
}

bool OAISalesOrderOriginDto::is__links_Set() const{
    return m__links_isSet;
}

bool OAISalesOrderOriginDto::is__links_Valid() const{
    return m__links_isValid;
}

QString OAISalesOrderOriginDto::getOrderId() const {
    return m_order_id;
}
void OAISalesOrderOriginDto::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAISalesOrderOriginDto::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAISalesOrderOriginDto::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAISalesOrderOriginDto::getOrderType() const {
    return m_order_type;
}
void OAISalesOrderOriginDto::setOrderType(const QString &order_type) {
    m_order_type = order_type;
    m_order_type_isSet = true;
}

bool OAISalesOrderOriginDto::is_order_type_Set() const{
    return m_order_type_isSet;
}

bool OAISalesOrderOriginDto::is_order_type_Valid() const{
    return m_order_type_isValid;
}

bool OAISalesOrderOriginDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__links.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesOrderOriginDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
