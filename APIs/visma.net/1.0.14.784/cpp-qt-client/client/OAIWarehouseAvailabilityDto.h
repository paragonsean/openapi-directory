/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWarehouseAvailabilityDto.h
 *
 * Warehouse information for a specific inventory item
 */

#ifndef OAIWarehouseAvailabilityDto_H
#define OAIWarehouseAvailabilityDto_H

#include <QJsonObject>

#include "OAILocationAvailabilityDto.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILocationAvailabilityDto;

class OAIWarehouseAvailabilityDto : public OAIObject {
public:
    OAIWarehouseAvailabilityDto();
    OAIWarehouseAvailabilityDto(QString json);
    ~OAIWarehouseAvailabilityDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getEstimatedTotalCost() const;
    void setEstimatedTotalCost(const double &estimated_total_cost);
    bool is_estimated_total_cost_Set() const;
    bool is_estimated_total_cost_Valid() const;

    double getEstimatedUnitCost() const;
    void setEstimatedUnitCost(const double &estimated_unit_cost);
    bool is_estimated_unit_cost_Set() const;
    bool is_estimated_unit_cost_Valid() const;

    qint32 getInternalWarehouseId() const;
    void setInternalWarehouseId(const qint32 &internal_warehouse_id);
    bool is_internal_warehouse_id_Set() const;
    bool is_internal_warehouse_id_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QList<OAILocationAvailabilityDto> getLocations() const;
    void setLocations(const QList<OAILocationAvailabilityDto> &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    double getQuantityAvailable() const;
    void setQuantityAvailable(const double &quantity_available);
    bool is_quantity_available_Set() const;
    bool is_quantity_available_Valid() const;

    double getQuantityAvailableForShipment() const;
    void setQuantityAvailableForShipment(const double &quantity_available_for_shipment);
    bool is_quantity_available_for_shipment_Set() const;
    bool is_quantity_available_for_shipment_Valid() const;

    double getQuantityNotAvailable() const;
    void setQuantityNotAvailable(const double &quantity_not_available);
    bool is_quantity_not_available_Set() const;
    bool is_quantity_not_available_Valid() const;

    double getQuantityOnHand() const;
    void setQuantityOnHand(const double &quantity_on_hand);
    bool is_quantity_on_hand_Set() const;
    bool is_quantity_on_hand_Valid() const;

    double getQuantityPurchaseOrders() const;
    void setQuantityPurchaseOrders(const double &quantity_purchase_orders);
    bool is_quantity_purchase_orders_Set() const;
    bool is_quantity_purchase_orders_Valid() const;

    QString getWarehouseId() const;
    void setWarehouseId(const QString &warehouse_id);
    bool is_warehouse_id_Set() const;
    bool is_warehouse_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_estimated_total_cost;
    bool m_estimated_total_cost_isSet;
    bool m_estimated_total_cost_isValid;

    double m_estimated_unit_cost;
    bool m_estimated_unit_cost_isSet;
    bool m_estimated_unit_cost_isValid;

    qint32 m_internal_warehouse_id;
    bool m_internal_warehouse_id_isSet;
    bool m_internal_warehouse_id_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QList<OAILocationAvailabilityDto> m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    double m_quantity_available;
    bool m_quantity_available_isSet;
    bool m_quantity_available_isValid;

    double m_quantity_available_for_shipment;
    bool m_quantity_available_for_shipment_isSet;
    bool m_quantity_available_for_shipment_isValid;

    double m_quantity_not_available;
    bool m_quantity_not_available_isSet;
    bool m_quantity_not_available_isValid;

    double m_quantity_on_hand;
    bool m_quantity_on_hand_isSet;
    bool m_quantity_on_hand_isValid;

    double m_quantity_purchase_orders;
    bool m_quantity_purchase_orders_isSet;
    bool m_quantity_purchase_orders_isValid;

    QString m_warehouse_id;
    bool m_warehouse_id_isSet;
    bool m_warehouse_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWarehouseAvailabilityDto)

#endif // OAIWarehouseAvailabilityDto_H
