/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewSalesOrderCustomerDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewSalesOrderCustomerDto::OAINewSalesOrderCustomerDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewSalesOrderCustomerDto::OAINewSalesOrderCustomerDto() {
    this->initializeModel();
}

OAINewSalesOrderCustomerDto::~OAINewSalesOrderCustomerDto() {}

void OAINewSalesOrderCustomerDto::initializeModel() {

    m_contact_id_isSet = false;
    m_contact_id_isValid = false;

    m_gln_isSet = false;
    m_gln_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_location_id_isSet = false;
    m_location_id_isValid = false;

    m_order_isSet = false;
    m_order_isValid = false;

    m_ref_no_isSet = false;
    m_ref_no_isValid = false;

    m_terms_id_isSet = false;
    m_terms_id_isValid = false;
}

void OAINewSalesOrderCustomerDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewSalesOrderCustomerDto::fromJsonObject(QJsonObject json) {

    m_contact_id_isValid = ::OpenAPI::fromJsonValue(m_contact_id, json[QString("contactId")]);
    m_contact_id_isSet = !json[QString("contactId")].isNull() && m_contact_id_isValid;

    m_gln_isValid = ::OpenAPI::fromJsonValue(m_gln, json[QString("gln")]);
    m_gln_isSet = !json[QString("gln")].isNull() && m_gln_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_location_id_isValid = ::OpenAPI::fromJsonValue(m_location_id, json[QString("locationId")]);
    m_location_id_isSet = !json[QString("locationId")].isNull() && m_location_id_isValid;

    m_order_isValid = ::OpenAPI::fromJsonValue(m_order, json[QString("order")]);
    m_order_isSet = !json[QString("order")].isNull() && m_order_isValid;

    m_ref_no_isValid = ::OpenAPI::fromJsonValue(m_ref_no, json[QString("refNo")]);
    m_ref_no_isSet = !json[QString("refNo")].isNull() && m_ref_no_isValid;

    m_terms_id_isValid = ::OpenAPI::fromJsonValue(m_terms_id, json[QString("termsId")]);
    m_terms_id_isSet = !json[QString("termsId")].isNull() && m_terms_id_isValid;
}

QString OAINewSalesOrderCustomerDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewSalesOrderCustomerDto::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_id_isSet) {
        obj.insert(QString("contactId"), ::OpenAPI::toJsonValue(m_contact_id));
    }
    if (m_gln_isSet) {
        obj.insert(QString("gln"), ::OpenAPI::toJsonValue(m_gln));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_location_id_isSet) {
        obj.insert(QString("locationId"), ::OpenAPI::toJsonValue(m_location_id));
    }
    if (m_order_isSet) {
        obj.insert(QString("order"), ::OpenAPI::toJsonValue(m_order));
    }
    if (m_ref_no_isSet) {
        obj.insert(QString("refNo"), ::OpenAPI::toJsonValue(m_ref_no));
    }
    if (m_terms_id_isSet) {
        obj.insert(QString("termsId"), ::OpenAPI::toJsonValue(m_terms_id));
    }
    return obj;
}

qint32 OAINewSalesOrderCustomerDto::getContactId() const {
    return m_contact_id;
}
void OAINewSalesOrderCustomerDto::setContactId(const qint32 &contact_id) {
    m_contact_id = contact_id;
    m_contact_id_isSet = true;
}

bool OAINewSalesOrderCustomerDto::is_contact_id_Set() const{
    return m_contact_id_isSet;
}

bool OAINewSalesOrderCustomerDto::is_contact_id_Valid() const{
    return m_contact_id_isValid;
}

QString OAINewSalesOrderCustomerDto::getGln() const {
    return m_gln;
}
void OAINewSalesOrderCustomerDto::setGln(const QString &gln) {
    m_gln = gln;
    m_gln_isSet = true;
}

bool OAINewSalesOrderCustomerDto::is_gln_Set() const{
    return m_gln_isSet;
}

bool OAINewSalesOrderCustomerDto::is_gln_Valid() const{
    return m_gln_isValid;
}

QString OAINewSalesOrderCustomerDto::getId() const {
    return m_id;
}
void OAINewSalesOrderCustomerDto::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAINewSalesOrderCustomerDto::is_id_Set() const{
    return m_id_isSet;
}

bool OAINewSalesOrderCustomerDto::is_id_Valid() const{
    return m_id_isValid;
}

QString OAINewSalesOrderCustomerDto::getLocationId() const {
    return m_location_id;
}
void OAINewSalesOrderCustomerDto::setLocationId(const QString &location_id) {
    m_location_id = location_id;
    m_location_id_isSet = true;
}

bool OAINewSalesOrderCustomerDto::is_location_id_Set() const{
    return m_location_id_isSet;
}

bool OAINewSalesOrderCustomerDto::is_location_id_Valid() const{
    return m_location_id_isValid;
}

QString OAINewSalesOrderCustomerDto::getOrder() const {
    return m_order;
}
void OAINewSalesOrderCustomerDto::setOrder(const QString &order) {
    m_order = order;
    m_order_isSet = true;
}

bool OAINewSalesOrderCustomerDto::is_order_Set() const{
    return m_order_isSet;
}

bool OAINewSalesOrderCustomerDto::is_order_Valid() const{
    return m_order_isValid;
}

QString OAINewSalesOrderCustomerDto::getRefNo() const {
    return m_ref_no;
}
void OAINewSalesOrderCustomerDto::setRefNo(const QString &ref_no) {
    m_ref_no = ref_no;
    m_ref_no_isSet = true;
}

bool OAINewSalesOrderCustomerDto::is_ref_no_Set() const{
    return m_ref_no_isSet;
}

bool OAINewSalesOrderCustomerDto::is_ref_no_Valid() const{
    return m_ref_no_isValid;
}

QString OAINewSalesOrderCustomerDto::getTermsId() const {
    return m_terms_id;
}
void OAINewSalesOrderCustomerDto::setTermsId(const QString &terms_id) {
    m_terms_id = terms_id;
    m_terms_id_isSet = true;
}

bool OAINewSalesOrderCustomerDto::is_terms_id_Set() const{
    return m_terms_id_isSet;
}

bool OAINewSalesOrderCustomerDto::is_terms_id_Valid() const{
    return m_terms_id_isValid;
}

bool OAINewSalesOrderCustomerDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gln_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ref_no_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_terms_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewSalesOrderCustomerDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
