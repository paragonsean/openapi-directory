/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerLocationItemDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerLocationItemDto::OAICustomerLocationItemDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerLocationItemDto::OAICustomerLocationItemDto() {
    this->initializeModel();
}

OAICustomerLocationItemDto::~OAICustomerLocationItemDto() {}

void OAICustomerLocationItemDto::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_corporate_id_isSet = false;
    m_corporate_id_isValid = false;

    m_country_id_isSet = false;
    m_country_id_isValid = false;

    m_fob_point_id_isSet = false;
    m_fob_point_id_isValid = false;

    m_gln_isSet = false;
    m_gln_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_insurance_isSet = false;
    m_insurance_isValid = false;

    m_internal_id_isSet = false;
    m_internal_id_isValid = false;

    m_lead_time_isSet = false;
    m_lead_time_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_preferred_warehouse_id_isSet = false;
    m_preferred_warehouse_id_isValid = false;

    m_price_class_id_isSet = false;
    m_price_class_id_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_resedential_delivery_isSet = false;
    m_resedential_delivery_isValid = false;

    m_residential_delivery_isSet = false;
    m_residential_delivery_isValid = false;

    m_saturday_delivery_isSet = false;
    m_saturday_delivery_isValid = false;

    m_ship_terms_id_isSet = false;
    m_ship_terms_id_isValid = false;

    m_ship_via_id_isSet = false;
    m_ship_via_id_isValid = false;

    m_ship_zone_id_isSet = false;
    m_ship_zone_id_isValid = false;

    m_shipping_rule_isSet = false;
    m_shipping_rule_isValid = false;

    m_tax_registration_id_isSet = false;
    m_tax_registration_id_isValid = false;

    m_tax_zone_id_isSet = false;
    m_tax_zone_id_isValid = false;

    m_warehouse_id_isSet = false;
    m_warehouse_id_isValid = false;
}

void OAICustomerLocationItemDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerLocationItemDto::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("contact")]);
    m_contact_isSet = !json[QString("contact")].isNull() && m_contact_isValid;

    m_corporate_id_isValid = ::OpenAPI::fromJsonValue(m_corporate_id, json[QString("corporateId")]);
    m_corporate_id_isSet = !json[QString("corporateId")].isNull() && m_corporate_id_isValid;

    m_country_id_isValid = ::OpenAPI::fromJsonValue(m_country_id, json[QString("countryId")]);
    m_country_id_isSet = !json[QString("countryId")].isNull() && m_country_id_isValid;

    m_fob_point_id_isValid = ::OpenAPI::fromJsonValue(m_fob_point_id, json[QString("fobPointId")]);
    m_fob_point_id_isSet = !json[QString("fobPointId")].isNull() && m_fob_point_id_isValid;

    m_gln_isValid = ::OpenAPI::fromJsonValue(m_gln, json[QString("gln")]);
    m_gln_isSet = !json[QString("gln")].isNull() && m_gln_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_insurance_isValid = ::OpenAPI::fromJsonValue(m_insurance, json[QString("insurance")]);
    m_insurance_isSet = !json[QString("insurance")].isNull() && m_insurance_isValid;

    m_internal_id_isValid = ::OpenAPI::fromJsonValue(m_internal_id, json[QString("internalId")]);
    m_internal_id_isSet = !json[QString("internalId")].isNull() && m_internal_id_isValid;

    m_lead_time_isValid = ::OpenAPI::fromJsonValue(m_lead_time, json[QString("leadTime")]);
    m_lead_time_isSet = !json[QString("leadTime")].isNull() && m_lead_time_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_preferred_warehouse_id_isValid = ::OpenAPI::fromJsonValue(m_preferred_warehouse_id, json[QString("preferredWarehouseId")]);
    m_preferred_warehouse_id_isSet = !json[QString("preferredWarehouseId")].isNull() && m_preferred_warehouse_id_isValid;

    m_price_class_id_isValid = ::OpenAPI::fromJsonValue(m_price_class_id, json[QString("priceClassId")]);
    m_price_class_id_isSet = !json[QString("priceClassId")].isNull() && m_price_class_id_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_resedential_delivery_isValid = ::OpenAPI::fromJsonValue(m_resedential_delivery, json[QString("resedentialDelivery")]);
    m_resedential_delivery_isSet = !json[QString("resedentialDelivery")].isNull() && m_resedential_delivery_isValid;

    m_residential_delivery_isValid = ::OpenAPI::fromJsonValue(m_residential_delivery, json[QString("residentialDelivery")]);
    m_residential_delivery_isSet = !json[QString("residentialDelivery")].isNull() && m_residential_delivery_isValid;

    m_saturday_delivery_isValid = ::OpenAPI::fromJsonValue(m_saturday_delivery, json[QString("saturdayDelivery")]);
    m_saturday_delivery_isSet = !json[QString("saturdayDelivery")].isNull() && m_saturday_delivery_isValid;

    m_ship_terms_id_isValid = ::OpenAPI::fromJsonValue(m_ship_terms_id, json[QString("shipTermsId")]);
    m_ship_terms_id_isSet = !json[QString("shipTermsId")].isNull() && m_ship_terms_id_isValid;

    m_ship_via_id_isValid = ::OpenAPI::fromJsonValue(m_ship_via_id, json[QString("shipViaId")]);
    m_ship_via_id_isSet = !json[QString("shipViaId")].isNull() && m_ship_via_id_isValid;

    m_ship_zone_id_isValid = ::OpenAPI::fromJsonValue(m_ship_zone_id, json[QString("shipZoneId")]);
    m_ship_zone_id_isSet = !json[QString("shipZoneId")].isNull() && m_ship_zone_id_isValid;

    m_shipping_rule_isValid = ::OpenAPI::fromJsonValue(m_shipping_rule, json[QString("shippingRule")]);
    m_shipping_rule_isSet = !json[QString("shippingRule")].isNull() && m_shipping_rule_isValid;

    m_tax_registration_id_isValid = ::OpenAPI::fromJsonValue(m_tax_registration_id, json[QString("taxRegistrationId")]);
    m_tax_registration_id_isSet = !json[QString("taxRegistrationId")].isNull() && m_tax_registration_id_isValid;

    m_tax_zone_id_isValid = ::OpenAPI::fromJsonValue(m_tax_zone_id, json[QString("taxZoneId")]);
    m_tax_zone_id_isSet = !json[QString("taxZoneId")].isNull() && m_tax_zone_id_isValid;

    m_warehouse_id_isValid = ::OpenAPI::fromJsonValue(m_warehouse_id, json[QString("warehouseId")]);
    m_warehouse_id_isSet = !json[QString("warehouseId")].isNull() && m_warehouse_id_isValid;
}

QString OAICustomerLocationItemDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerLocationItemDto::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_contact.isSet()) {
        obj.insert(QString("contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_corporate_id_isSet) {
        obj.insert(QString("corporateId"), ::OpenAPI::toJsonValue(m_corporate_id));
    }
    if (m_country_id_isSet) {
        obj.insert(QString("countryId"), ::OpenAPI::toJsonValue(m_country_id));
    }
    if (m_fob_point_id_isSet) {
        obj.insert(QString("fobPointId"), ::OpenAPI::toJsonValue(m_fob_point_id));
    }
    if (m_gln_isSet) {
        obj.insert(QString("gln"), ::OpenAPI::toJsonValue(m_gln));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_insurance_isSet) {
        obj.insert(QString("insurance"), ::OpenAPI::toJsonValue(m_insurance));
    }
    if (m_internal_id_isSet) {
        obj.insert(QString("internalId"), ::OpenAPI::toJsonValue(m_internal_id));
    }
    if (m_lead_time_isSet) {
        obj.insert(QString("leadTime"), ::OpenAPI::toJsonValue(m_lead_time));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_preferred_warehouse_id_isSet) {
        obj.insert(QString("preferredWarehouseId"), ::OpenAPI::toJsonValue(m_preferred_warehouse_id));
    }
    if (m_price_class_id_isSet) {
        obj.insert(QString("priceClassId"), ::OpenAPI::toJsonValue(m_price_class_id));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_resedential_delivery_isSet) {
        obj.insert(QString("resedentialDelivery"), ::OpenAPI::toJsonValue(m_resedential_delivery));
    }
    if (m_residential_delivery_isSet) {
        obj.insert(QString("residentialDelivery"), ::OpenAPI::toJsonValue(m_residential_delivery));
    }
    if (m_saturday_delivery_isSet) {
        obj.insert(QString("saturdayDelivery"), ::OpenAPI::toJsonValue(m_saturday_delivery));
    }
    if (m_ship_terms_id_isSet) {
        obj.insert(QString("shipTermsId"), ::OpenAPI::toJsonValue(m_ship_terms_id));
    }
    if (m_ship_via_id_isSet) {
        obj.insert(QString("shipViaId"), ::OpenAPI::toJsonValue(m_ship_via_id));
    }
    if (m_ship_zone_id_isSet) {
        obj.insert(QString("shipZoneId"), ::OpenAPI::toJsonValue(m_ship_zone_id));
    }
    if (m_shipping_rule_isSet) {
        obj.insert(QString("shippingRule"), ::OpenAPI::toJsonValue(m_shipping_rule));
    }
    if (m_tax_registration_id_isSet) {
        obj.insert(QString("taxRegistrationId"), ::OpenAPI::toJsonValue(m_tax_registration_id));
    }
    if (m_tax_zone_id_isSet) {
        obj.insert(QString("taxZoneId"), ::OpenAPI::toJsonValue(m_tax_zone_id));
    }
    if (m_warehouse_id_isSet) {
        obj.insert(QString("warehouseId"), ::OpenAPI::toJsonValue(m_warehouse_id));
    }
    return obj;
}

OAIAddressDto OAICustomerLocationItemDto::getAddress() const {
    return m_address;
}
void OAICustomerLocationItemDto::setAddress(const OAIAddressDto &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAICustomerLocationItemDto::is_address_Set() const{
    return m_address_isSet;
}

bool OAICustomerLocationItemDto::is_address_Valid() const{
    return m_address_isValid;
}

OAIContactDto OAICustomerLocationItemDto::getContact() const {
    return m_contact;
}
void OAICustomerLocationItemDto::setContact(const OAIContactDto &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAICustomerLocationItemDto::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAICustomerLocationItemDto::is_contact_Valid() const{
    return m_contact_isValid;
}

QString OAICustomerLocationItemDto::getCorporateId() const {
    return m_corporate_id;
}
void OAICustomerLocationItemDto::setCorporateId(const QString &corporate_id) {
    m_corporate_id = corporate_id;
    m_corporate_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_corporate_id_Set() const{
    return m_corporate_id_isSet;
}

bool OAICustomerLocationItemDto::is_corporate_id_Valid() const{
    return m_corporate_id_isValid;
}

QString OAICustomerLocationItemDto::getCountryId() const {
    return m_country_id;
}
void OAICustomerLocationItemDto::setCountryId(const QString &country_id) {
    m_country_id = country_id;
    m_country_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_country_id_Set() const{
    return m_country_id_isSet;
}

bool OAICustomerLocationItemDto::is_country_id_Valid() const{
    return m_country_id_isValid;
}

QString OAICustomerLocationItemDto::getFobPointId() const {
    return m_fob_point_id;
}
void OAICustomerLocationItemDto::setFobPointId(const QString &fob_point_id) {
    m_fob_point_id = fob_point_id;
    m_fob_point_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_fob_point_id_Set() const{
    return m_fob_point_id_isSet;
}

bool OAICustomerLocationItemDto::is_fob_point_id_Valid() const{
    return m_fob_point_id_isValid;
}

QString OAICustomerLocationItemDto::getGln() const {
    return m_gln;
}
void OAICustomerLocationItemDto::setGln(const QString &gln) {
    m_gln = gln;
    m_gln_isSet = true;
}

bool OAICustomerLocationItemDto::is_gln_Set() const{
    return m_gln_isSet;
}

bool OAICustomerLocationItemDto::is_gln_Valid() const{
    return m_gln_isValid;
}

QString OAICustomerLocationItemDto::getId() const {
    return m_id;
}
void OAICustomerLocationItemDto::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomerLocationItemDto::is_id_Valid() const{
    return m_id_isValid;
}

bool OAICustomerLocationItemDto::isInsurance() const {
    return m_insurance;
}
void OAICustomerLocationItemDto::setInsurance(const bool &insurance) {
    m_insurance = insurance;
    m_insurance_isSet = true;
}

bool OAICustomerLocationItemDto::is_insurance_Set() const{
    return m_insurance_isSet;
}

bool OAICustomerLocationItemDto::is_insurance_Valid() const{
    return m_insurance_isValid;
}

qint32 OAICustomerLocationItemDto::getInternalId() const {
    return m_internal_id;
}
void OAICustomerLocationItemDto::setInternalId(const qint32 &internal_id) {
    m_internal_id = internal_id;
    m_internal_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_internal_id_Set() const{
    return m_internal_id_isSet;
}

bool OAICustomerLocationItemDto::is_internal_id_Valid() const{
    return m_internal_id_isValid;
}

qint32 OAICustomerLocationItemDto::getLeadTime() const {
    return m_lead_time;
}
void OAICustomerLocationItemDto::setLeadTime(const qint32 &lead_time) {
    m_lead_time = lead_time;
    m_lead_time_isSet = true;
}

bool OAICustomerLocationItemDto::is_lead_time_Set() const{
    return m_lead_time_isSet;
}

bool OAICustomerLocationItemDto::is_lead_time_Valid() const{
    return m_lead_time_isValid;
}

QString OAICustomerLocationItemDto::getName() const {
    return m_name;
}
void OAICustomerLocationItemDto::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICustomerLocationItemDto::is_name_Set() const{
    return m_name_isSet;
}

bool OAICustomerLocationItemDto::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICustomerLocationItemDto::getPreferredWarehouseId() const {
    return m_preferred_warehouse_id;
}
void OAICustomerLocationItemDto::setPreferredWarehouseId(const QString &preferred_warehouse_id) {
    m_preferred_warehouse_id = preferred_warehouse_id;
    m_preferred_warehouse_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_preferred_warehouse_id_Set() const{
    return m_preferred_warehouse_id_isSet;
}

bool OAICustomerLocationItemDto::is_preferred_warehouse_id_Valid() const{
    return m_preferred_warehouse_id_isValid;
}

QString OAICustomerLocationItemDto::getPriceClassId() const {
    return m_price_class_id;
}
void OAICustomerLocationItemDto::setPriceClassId(const QString &price_class_id) {
    m_price_class_id = price_class_id;
    m_price_class_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_price_class_id_Set() const{
    return m_price_class_id_isSet;
}

bool OAICustomerLocationItemDto::is_price_class_id_Valid() const{
    return m_price_class_id_isValid;
}

qint32 OAICustomerLocationItemDto::getPriority() const {
    return m_priority;
}
void OAICustomerLocationItemDto::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAICustomerLocationItemDto::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAICustomerLocationItemDto::is_priority_Valid() const{
    return m_priority_isValid;
}

bool OAICustomerLocationItemDto::isResedentialDelivery() const {
    return m_resedential_delivery;
}
void OAICustomerLocationItemDto::setResedentialDelivery(const bool &resedential_delivery) {
    m_resedential_delivery = resedential_delivery;
    m_resedential_delivery_isSet = true;
}

bool OAICustomerLocationItemDto::is_resedential_delivery_Set() const{
    return m_resedential_delivery_isSet;
}

bool OAICustomerLocationItemDto::is_resedential_delivery_Valid() const{
    return m_resedential_delivery_isValid;
}

bool OAICustomerLocationItemDto::isResidentialDelivery() const {
    return m_residential_delivery;
}
void OAICustomerLocationItemDto::setResidentialDelivery(const bool &residential_delivery) {
    m_residential_delivery = residential_delivery;
    m_residential_delivery_isSet = true;
}

bool OAICustomerLocationItemDto::is_residential_delivery_Set() const{
    return m_residential_delivery_isSet;
}

bool OAICustomerLocationItemDto::is_residential_delivery_Valid() const{
    return m_residential_delivery_isValid;
}

bool OAICustomerLocationItemDto::isSaturdayDelivery() const {
    return m_saturday_delivery;
}
void OAICustomerLocationItemDto::setSaturdayDelivery(const bool &saturday_delivery) {
    m_saturday_delivery = saturday_delivery;
    m_saturday_delivery_isSet = true;
}

bool OAICustomerLocationItemDto::is_saturday_delivery_Set() const{
    return m_saturday_delivery_isSet;
}

bool OAICustomerLocationItemDto::is_saturday_delivery_Valid() const{
    return m_saturday_delivery_isValid;
}

QString OAICustomerLocationItemDto::getShipTermsId() const {
    return m_ship_terms_id;
}
void OAICustomerLocationItemDto::setShipTermsId(const QString &ship_terms_id) {
    m_ship_terms_id = ship_terms_id;
    m_ship_terms_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_ship_terms_id_Set() const{
    return m_ship_terms_id_isSet;
}

bool OAICustomerLocationItemDto::is_ship_terms_id_Valid() const{
    return m_ship_terms_id_isValid;
}

QString OAICustomerLocationItemDto::getShipViaId() const {
    return m_ship_via_id;
}
void OAICustomerLocationItemDto::setShipViaId(const QString &ship_via_id) {
    m_ship_via_id = ship_via_id;
    m_ship_via_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_ship_via_id_Set() const{
    return m_ship_via_id_isSet;
}

bool OAICustomerLocationItemDto::is_ship_via_id_Valid() const{
    return m_ship_via_id_isValid;
}

QString OAICustomerLocationItemDto::getShipZoneId() const {
    return m_ship_zone_id;
}
void OAICustomerLocationItemDto::setShipZoneId(const QString &ship_zone_id) {
    m_ship_zone_id = ship_zone_id;
    m_ship_zone_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_ship_zone_id_Set() const{
    return m_ship_zone_id_isSet;
}

bool OAICustomerLocationItemDto::is_ship_zone_id_Valid() const{
    return m_ship_zone_id_isValid;
}

QString OAICustomerLocationItemDto::getShippingRule() const {
    return m_shipping_rule;
}
void OAICustomerLocationItemDto::setShippingRule(const QString &shipping_rule) {
    m_shipping_rule = shipping_rule;
    m_shipping_rule_isSet = true;
}

bool OAICustomerLocationItemDto::is_shipping_rule_Set() const{
    return m_shipping_rule_isSet;
}

bool OAICustomerLocationItemDto::is_shipping_rule_Valid() const{
    return m_shipping_rule_isValid;
}

QString OAICustomerLocationItemDto::getTaxRegistrationId() const {
    return m_tax_registration_id;
}
void OAICustomerLocationItemDto::setTaxRegistrationId(const QString &tax_registration_id) {
    m_tax_registration_id = tax_registration_id;
    m_tax_registration_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_tax_registration_id_Set() const{
    return m_tax_registration_id_isSet;
}

bool OAICustomerLocationItemDto::is_tax_registration_id_Valid() const{
    return m_tax_registration_id_isValid;
}

QString OAICustomerLocationItemDto::getTaxZoneId() const {
    return m_tax_zone_id;
}
void OAICustomerLocationItemDto::setTaxZoneId(const QString &tax_zone_id) {
    m_tax_zone_id = tax_zone_id;
    m_tax_zone_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_tax_zone_id_Set() const{
    return m_tax_zone_id_isSet;
}

bool OAICustomerLocationItemDto::is_tax_zone_id_Valid() const{
    return m_tax_zone_id_isValid;
}

QString OAICustomerLocationItemDto::getWarehouseId() const {
    return m_warehouse_id;
}
void OAICustomerLocationItemDto::setWarehouseId(const QString &warehouse_id) {
    m_warehouse_id = warehouse_id;
    m_warehouse_id_isSet = true;
}

bool OAICustomerLocationItemDto::is_warehouse_id_Set() const{
    return m_warehouse_id_isSet;
}

bool OAICustomerLocationItemDto::is_warehouse_id_Valid() const{
    return m_warehouse_id_isValid;
}

bool OAICustomerLocationItemDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporate_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fob_point_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gln_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insurance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_internal_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lead_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preferred_warehouse_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_class_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resedential_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_residential_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_saturday_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_terms_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_via_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_zone_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_rule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_registration_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_zone_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warehouse_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerLocationItemDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
