/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInventoryAvailabilityExpansions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInventoryAvailabilityExpansions::OAIInventoryAvailabilityExpansions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInventoryAvailabilityExpansions::OAIInventoryAvailabilityExpansions() {
    this->initializeModel();
}

OAIInventoryAvailabilityExpansions::~OAIInventoryAvailabilityExpansions() {}

void OAIInventoryAvailabilityExpansions::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInventoryAvailabilityExpansions::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInventoryAvailabilityExpansions::fromJson(QString jsonString) {
    
    if ( jsonString.compare("None", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInventoryAvailabilityExpansions::NONE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Location", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInventoryAvailabilityExpansions::LOCATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Attribute", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInventoryAvailabilityExpansions::ATTRIBUTE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("All", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInventoryAvailabilityExpansions::ALL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInventoryAvailabilityExpansions::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInventoryAvailabilityExpansions::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInventoryAvailabilityExpansions::NONE:
            val = "None";
            break;
        case eOAIInventoryAvailabilityExpansions::LOCATION:
            val = "Location";
            break;
        case eOAIInventoryAvailabilityExpansions::ATTRIBUTE:
            val = "Attribute";
            break;
        case eOAIInventoryAvailabilityExpansions::ALL:
            val = "All";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInventoryAvailabilityExpansions::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInventoryAvailabilityExpansions::eOAIInventoryAvailabilityExpansions OAIInventoryAvailabilityExpansions::getValue() const {
    return m_value;
}

void OAIInventoryAvailabilityExpansions::setValue(const OAIInventoryAvailabilityExpansions::eOAIInventoryAvailabilityExpansions& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInventoryAvailabilityExpansions::isSet() const {
    
    return m_value_isSet;
}

bool OAIInventoryAvailabilityExpansions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
