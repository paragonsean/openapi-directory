/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewSalesOrderShippingDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewSalesOrderShippingDto::OAINewSalesOrderShippingDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewSalesOrderShippingDto::OAINewSalesOrderShippingDto() {
    this->initializeModel();
}

OAINewSalesOrderShippingDto::~OAINewSalesOrderShippingDto() {}

void OAINewSalesOrderShippingDto::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_fob_point_id_isSet = false;
    m_fob_point_id_isValid = false;

    m_insurance_isSet = false;
    m_insurance_isValid = false;

    m_intrastat_transaction_type_id_isSet = false;
    m_intrastat_transaction_type_id_isValid = false;

    m_preferred_warehouse_id_isSet = false;
    m_preferred_warehouse_id_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_residential_delivery_isSet = false;
    m_residential_delivery_isValid = false;

    m_rule_isSet = false;
    m_rule_isValid = false;

    m_saturday_delivery_isSet = false;
    m_saturday_delivery_isValid = false;

    m_scheduled_date_isSet = false;
    m_scheduled_date_isValid = false;

    m_ship_separately_isSet = false;
    m_ship_separately_isValid = false;

    m_ship_via_id_isSet = false;
    m_ship_via_id_isValid = false;

    m_terms_id_isSet = false;
    m_terms_id_isValid = false;

    m_zone_id_isSet = false;
    m_zone_id_isValid = false;
}

void OAINewSalesOrderShippingDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewSalesOrderShippingDto::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("contact")]);
    m_contact_isSet = !json[QString("contact")].isNull() && m_contact_isValid;

    m_fob_point_id_isValid = ::OpenAPI::fromJsonValue(m_fob_point_id, json[QString("fobPointId")]);
    m_fob_point_id_isSet = !json[QString("fobPointId")].isNull() && m_fob_point_id_isValid;

    m_insurance_isValid = ::OpenAPI::fromJsonValue(m_insurance, json[QString("insurance")]);
    m_insurance_isSet = !json[QString("insurance")].isNull() && m_insurance_isValid;

    m_intrastat_transaction_type_id_isValid = ::OpenAPI::fromJsonValue(m_intrastat_transaction_type_id, json[QString("intrastatTransactionTypeId")]);
    m_intrastat_transaction_type_id_isSet = !json[QString("intrastatTransactionTypeId")].isNull() && m_intrastat_transaction_type_id_isValid;

    m_preferred_warehouse_id_isValid = ::OpenAPI::fromJsonValue(m_preferred_warehouse_id, json[QString("preferredWarehouseId")]);
    m_preferred_warehouse_id_isSet = !json[QString("preferredWarehouseId")].isNull() && m_preferred_warehouse_id_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;

    m_residential_delivery_isValid = ::OpenAPI::fromJsonValue(m_residential_delivery, json[QString("residentialDelivery")]);
    m_residential_delivery_isSet = !json[QString("residentialDelivery")].isNull() && m_residential_delivery_isValid;

    m_rule_isValid = ::OpenAPI::fromJsonValue(m_rule, json[QString("rule")]);
    m_rule_isSet = !json[QString("rule")].isNull() && m_rule_isValid;

    m_saturday_delivery_isValid = ::OpenAPI::fromJsonValue(m_saturday_delivery, json[QString("saturdayDelivery")]);
    m_saturday_delivery_isSet = !json[QString("saturdayDelivery")].isNull() && m_saturday_delivery_isValid;

    m_scheduled_date_isValid = ::OpenAPI::fromJsonValue(m_scheduled_date, json[QString("scheduledDate")]);
    m_scheduled_date_isSet = !json[QString("scheduledDate")].isNull() && m_scheduled_date_isValid;

    m_ship_separately_isValid = ::OpenAPI::fromJsonValue(m_ship_separately, json[QString("shipSeparately")]);
    m_ship_separately_isSet = !json[QString("shipSeparately")].isNull() && m_ship_separately_isValid;

    m_ship_via_id_isValid = ::OpenAPI::fromJsonValue(m_ship_via_id, json[QString("shipViaId")]);
    m_ship_via_id_isSet = !json[QString("shipViaId")].isNull() && m_ship_via_id_isValid;

    m_terms_id_isValid = ::OpenAPI::fromJsonValue(m_terms_id, json[QString("termsId")]);
    m_terms_id_isSet = !json[QString("termsId")].isNull() && m_terms_id_isValid;

    m_zone_id_isValid = ::OpenAPI::fromJsonValue(m_zone_id, json[QString("zoneId")]);
    m_zone_id_isSet = !json[QString("zoneId")].isNull() && m_zone_id_isValid;
}

QString OAINewSalesOrderShippingDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewSalesOrderShippingDto::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_contact.isSet()) {
        obj.insert(QString("contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_fob_point_id_isSet) {
        obj.insert(QString("fobPointId"), ::OpenAPI::toJsonValue(m_fob_point_id));
    }
    if (m_insurance_isSet) {
        obj.insert(QString("insurance"), ::OpenAPI::toJsonValue(m_insurance));
    }
    if (m_intrastat_transaction_type_id_isSet) {
        obj.insert(QString("intrastatTransactionTypeId"), ::OpenAPI::toJsonValue(m_intrastat_transaction_type_id));
    }
    if (m_preferred_warehouse_id_isSet) {
        obj.insert(QString("preferredWarehouseId"), ::OpenAPI::toJsonValue(m_preferred_warehouse_id));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_residential_delivery_isSet) {
        obj.insert(QString("residentialDelivery"), ::OpenAPI::toJsonValue(m_residential_delivery));
    }
    if (m_rule_isSet) {
        obj.insert(QString("rule"), ::OpenAPI::toJsonValue(m_rule));
    }
    if (m_saturday_delivery_isSet) {
        obj.insert(QString("saturdayDelivery"), ::OpenAPI::toJsonValue(m_saturday_delivery));
    }
    if (m_scheduled_date_isSet) {
        obj.insert(QString("scheduledDate"), ::OpenAPI::toJsonValue(m_scheduled_date));
    }
    if (m_ship_separately_isSet) {
        obj.insert(QString("shipSeparately"), ::OpenAPI::toJsonValue(m_ship_separately));
    }
    if (m_ship_via_id_isSet) {
        obj.insert(QString("shipViaId"), ::OpenAPI::toJsonValue(m_ship_via_id));
    }
    if (m_terms_id_isSet) {
        obj.insert(QString("termsId"), ::OpenAPI::toJsonValue(m_terms_id));
    }
    if (m_zone_id_isSet) {
        obj.insert(QString("zoneId"), ::OpenAPI::toJsonValue(m_zone_id));
    }
    return obj;
}

OAINewSalesOrderAddressDto OAINewSalesOrderShippingDto::getAddress() const {
    return m_address;
}
void OAINewSalesOrderShippingDto::setAddress(const OAINewSalesOrderAddressDto &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_address_Set() const{
    return m_address_isSet;
}

bool OAINewSalesOrderShippingDto::is_address_Valid() const{
    return m_address_isValid;
}

OAINewSalesOrderContactDto OAINewSalesOrderShippingDto::getContact() const {
    return m_contact;
}
void OAINewSalesOrderShippingDto::setContact(const OAINewSalesOrderContactDto &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAINewSalesOrderShippingDto::is_contact_Valid() const{
    return m_contact_isValid;
}

QString OAINewSalesOrderShippingDto::getFobPointId() const {
    return m_fob_point_id;
}
void OAINewSalesOrderShippingDto::setFobPointId(const QString &fob_point_id) {
    m_fob_point_id = fob_point_id;
    m_fob_point_id_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_fob_point_id_Set() const{
    return m_fob_point_id_isSet;
}

bool OAINewSalesOrderShippingDto::is_fob_point_id_Valid() const{
    return m_fob_point_id_isValid;
}

bool OAINewSalesOrderShippingDto::isInsurance() const {
    return m_insurance;
}
void OAINewSalesOrderShippingDto::setInsurance(const bool &insurance) {
    m_insurance = insurance;
    m_insurance_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_insurance_Set() const{
    return m_insurance_isSet;
}

bool OAINewSalesOrderShippingDto::is_insurance_Valid() const{
    return m_insurance_isValid;
}

qint32 OAINewSalesOrderShippingDto::getIntrastatTransactionTypeId() const {
    return m_intrastat_transaction_type_id;
}
void OAINewSalesOrderShippingDto::setIntrastatTransactionTypeId(const qint32 &intrastat_transaction_type_id) {
    m_intrastat_transaction_type_id = intrastat_transaction_type_id;
    m_intrastat_transaction_type_id_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_intrastat_transaction_type_id_Set() const{
    return m_intrastat_transaction_type_id_isSet;
}

bool OAINewSalesOrderShippingDto::is_intrastat_transaction_type_id_Valid() const{
    return m_intrastat_transaction_type_id_isValid;
}

QString OAINewSalesOrderShippingDto::getPreferredWarehouseId() const {
    return m_preferred_warehouse_id;
}
void OAINewSalesOrderShippingDto::setPreferredWarehouseId(const QString &preferred_warehouse_id) {
    m_preferred_warehouse_id = preferred_warehouse_id;
    m_preferred_warehouse_id_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_preferred_warehouse_id_Set() const{
    return m_preferred_warehouse_id_isSet;
}

bool OAINewSalesOrderShippingDto::is_preferred_warehouse_id_Valid() const{
    return m_preferred_warehouse_id_isValid;
}

qint32 OAINewSalesOrderShippingDto::getPriority() const {
    return m_priority;
}
void OAINewSalesOrderShippingDto::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAINewSalesOrderShippingDto::is_priority_Valid() const{
    return m_priority_isValid;
}

bool OAINewSalesOrderShippingDto::isResidentialDelivery() const {
    return m_residential_delivery;
}
void OAINewSalesOrderShippingDto::setResidentialDelivery(const bool &residential_delivery) {
    m_residential_delivery = residential_delivery;
    m_residential_delivery_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_residential_delivery_Set() const{
    return m_residential_delivery_isSet;
}

bool OAINewSalesOrderShippingDto::is_residential_delivery_Valid() const{
    return m_residential_delivery_isValid;
}

QString OAINewSalesOrderShippingDto::getRule() const {
    return m_rule;
}
void OAINewSalesOrderShippingDto::setRule(const QString &rule) {
    m_rule = rule;
    m_rule_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_rule_Set() const{
    return m_rule_isSet;
}

bool OAINewSalesOrderShippingDto::is_rule_Valid() const{
    return m_rule_isValid;
}

bool OAINewSalesOrderShippingDto::isSaturdayDelivery() const {
    return m_saturday_delivery;
}
void OAINewSalesOrderShippingDto::setSaturdayDelivery(const bool &saturday_delivery) {
    m_saturday_delivery = saturday_delivery;
    m_saturday_delivery_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_saturday_delivery_Set() const{
    return m_saturday_delivery_isSet;
}

bool OAINewSalesOrderShippingDto::is_saturday_delivery_Valid() const{
    return m_saturday_delivery_isValid;
}

QDateTime OAINewSalesOrderShippingDto::getScheduledDate() const {
    return m_scheduled_date;
}
void OAINewSalesOrderShippingDto::setScheduledDate(const QDateTime &scheduled_date) {
    m_scheduled_date = scheduled_date;
    m_scheduled_date_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_scheduled_date_Set() const{
    return m_scheduled_date_isSet;
}

bool OAINewSalesOrderShippingDto::is_scheduled_date_Valid() const{
    return m_scheduled_date_isValid;
}

bool OAINewSalesOrderShippingDto::isShipSeparately() const {
    return m_ship_separately;
}
void OAINewSalesOrderShippingDto::setShipSeparately(const bool &ship_separately) {
    m_ship_separately = ship_separately;
    m_ship_separately_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_ship_separately_Set() const{
    return m_ship_separately_isSet;
}

bool OAINewSalesOrderShippingDto::is_ship_separately_Valid() const{
    return m_ship_separately_isValid;
}

QString OAINewSalesOrderShippingDto::getShipViaId() const {
    return m_ship_via_id;
}
void OAINewSalesOrderShippingDto::setShipViaId(const QString &ship_via_id) {
    m_ship_via_id = ship_via_id;
    m_ship_via_id_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_ship_via_id_Set() const{
    return m_ship_via_id_isSet;
}

bool OAINewSalesOrderShippingDto::is_ship_via_id_Valid() const{
    return m_ship_via_id_isValid;
}

QString OAINewSalesOrderShippingDto::getTermsId() const {
    return m_terms_id;
}
void OAINewSalesOrderShippingDto::setTermsId(const QString &terms_id) {
    m_terms_id = terms_id;
    m_terms_id_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_terms_id_Set() const{
    return m_terms_id_isSet;
}

bool OAINewSalesOrderShippingDto::is_terms_id_Valid() const{
    return m_terms_id_isValid;
}

QString OAINewSalesOrderShippingDto::getZoneId() const {
    return m_zone_id;
}
void OAINewSalesOrderShippingDto::setZoneId(const QString &zone_id) {
    m_zone_id = zone_id;
    m_zone_id_isSet = true;
}

bool OAINewSalesOrderShippingDto::is_zone_id_Set() const{
    return m_zone_id_isSet;
}

bool OAINewSalesOrderShippingDto::is_zone_id_Valid() const{
    return m_zone_id_isValid;
}

bool OAINewSalesOrderShippingDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_fob_point_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insurance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_intrastat_transaction_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preferred_warehouse_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_residential_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rule_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_saturday_delivery_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_scheduled_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_separately_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_via_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_terms_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zone_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewSalesOrderShippingDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
