/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISalesOrderFreightDto.h
 *
 * 
 */

#ifndef OAISalesOrderFreightDto_H
#define OAISalesOrderFreightDto_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISalesOrderFreightDto : public OAIObject {
public:
    OAISalesOrderFreightDto();
    OAISalesOrderFreightDto(QString json);
    ~OAISalesOrderFreightDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    double getAmountInBaseCurrency() const;
    void setAmountInBaseCurrency(const double &amount_in_base_currency);
    bool is_amount_in_base_currency_Set() const;
    bool is_amount_in_base_currency_Valid() const;

    double getCost() const;
    void setCost(const double &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    double getCostInBaseCurrency() const;
    void setCostInBaseCurrency(const double &cost_in_base_currency);
    bool is_cost_in_base_currency_Set() const;
    bool is_cost_in_base_currency_Valid() const;

    double getPremiumAmount() const;
    void setPremiumAmount(const double &premium_amount);
    bool is_premium_amount_Set() const;
    bool is_premium_amount_Valid() const;

    double getPremiumAmountInBaseCurrency() const;
    void setPremiumAmountInBaseCurrency(const double &premium_amount_in_base_currency);
    bool is_premium_amount_in_base_currency_Set() const;
    bool is_premium_amount_in_base_currency_Valid() const;

    QString getTaxCategoryId() const;
    void setTaxCategoryId(const QString &tax_category_id);
    bool is_tax_category_id_Set() const;
    bool is_tax_category_id_Valid() const;

    double getVolume() const;
    void setVolume(const double &volume);
    bool is_volume_Set() const;
    bool is_volume_Valid() const;

    double getWeight() const;
    void setWeight(const double &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    double m_amount_in_base_currency;
    bool m_amount_in_base_currency_isSet;
    bool m_amount_in_base_currency_isValid;

    double m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    double m_cost_in_base_currency;
    bool m_cost_in_base_currency_isSet;
    bool m_cost_in_base_currency_isValid;

    double m_premium_amount;
    bool m_premium_amount_isSet;
    bool m_premium_amount_isValid;

    double m_premium_amount_in_base_currency;
    bool m_premium_amount_in_base_currency_isSet;
    bool m_premium_amount_in_base_currency_isValid;

    QString m_tax_category_id;
    bool m_tax_category_id_isSet;
    bool m_tax_category_id_isValid;

    double m_volume;
    bool m_volume_isSet;
    bool m_volume_isValid;

    double m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISalesOrderFreightDto)

#endif // OAISalesOrderFreightDto_H
