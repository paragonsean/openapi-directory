/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesOrderCommissionDto.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesOrderCommissionDto::OAISalesOrderCommissionDto(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesOrderCommissionDto::OAISalesOrderCommissionDto() {
    this->initializeModel();
}

OAISalesOrderCommissionDto::~OAISalesOrderCommissionDto() {}

void OAISalesOrderCommissionDto::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_commissionable_amount_isSet = false;
    m_commissionable_amount_isValid = false;

    m_percent_isSet = false;
    m_percent_isValid = false;

    m_sales_person_id_isSet = false;
    m_sales_person_id_isValid = false;
}

void OAISalesOrderCommissionDto::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesOrderCommissionDto::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_commissionable_amount_isValid = ::OpenAPI::fromJsonValue(m_commissionable_amount, json[QString("commissionableAmount")]);
    m_commissionable_amount_isSet = !json[QString("commissionableAmount")].isNull() && m_commissionable_amount_isValid;

    m_percent_isValid = ::OpenAPI::fromJsonValue(m_percent, json[QString("percent")]);
    m_percent_isSet = !json[QString("percent")].isNull() && m_percent_isValid;

    m_sales_person_id_isValid = ::OpenAPI::fromJsonValue(m_sales_person_id, json[QString("salesPersonId")]);
    m_sales_person_id_isSet = !json[QString("salesPersonId")].isNull() && m_sales_person_id_isValid;
}

QString OAISalesOrderCommissionDto::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesOrderCommissionDto::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_commissionable_amount_isSet) {
        obj.insert(QString("commissionableAmount"), ::OpenAPI::toJsonValue(m_commissionable_amount));
    }
    if (m_percent_isSet) {
        obj.insert(QString("percent"), ::OpenAPI::toJsonValue(m_percent));
    }
    if (m_sales_person_id_isSet) {
        obj.insert(QString("salesPersonId"), ::OpenAPI::toJsonValue(m_sales_person_id));
    }
    return obj;
}

double OAISalesOrderCommissionDto::getAmount() const {
    return m_amount;
}
void OAISalesOrderCommissionDto::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAISalesOrderCommissionDto::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAISalesOrderCommissionDto::is_amount_Valid() const{
    return m_amount_isValid;
}

double OAISalesOrderCommissionDto::getCommissionableAmount() const {
    return m_commissionable_amount;
}
void OAISalesOrderCommissionDto::setCommissionableAmount(const double &commissionable_amount) {
    m_commissionable_amount = commissionable_amount;
    m_commissionable_amount_isSet = true;
}

bool OAISalesOrderCommissionDto::is_commissionable_amount_Set() const{
    return m_commissionable_amount_isSet;
}

bool OAISalesOrderCommissionDto::is_commissionable_amount_Valid() const{
    return m_commissionable_amount_isValid;
}

double OAISalesOrderCommissionDto::getPercent() const {
    return m_percent;
}
void OAISalesOrderCommissionDto::setPercent(const double &percent) {
    m_percent = percent;
    m_percent_isSet = true;
}

bool OAISalesOrderCommissionDto::is_percent_Set() const{
    return m_percent_isSet;
}

bool OAISalesOrderCommissionDto::is_percent_Valid() const{
    return m_percent_isValid;
}

QString OAISalesOrderCommissionDto::getSalesPersonId() const {
    return m_sales_person_id;
}
void OAISalesOrderCommissionDto::setSalesPersonId(const QString &sales_person_id) {
    m_sales_person_id = sales_person_id;
    m_sales_person_id_isSet = true;
}

bool OAISalesOrderCommissionDto::is_sales_person_id_Set() const{
    return m_sales_person_id_isSet;
}

bool OAISalesOrderCommissionDto::is_sales_person_id_Valid() const{
    return m_sales_person_id_isValid;
}

bool OAISalesOrderCommissionDto::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commissionable_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sales_person_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesOrderCommissionDto::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
