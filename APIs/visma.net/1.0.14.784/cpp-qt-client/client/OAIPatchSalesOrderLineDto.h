/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPatchSalesOrderLineDto.h
 *
 * The sales order line which is set to patch
 */

#ifndef OAIPatchSalesOrderLineDto_H
#define OAIPatchSalesOrderLineDto_H

#include <QJsonObject>

#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPatchSalesOrderLineDto : public OAIObject {
public:
    OAIPatchSalesOrderLineDto();
    OAIPatchSalesOrderLineDto(QString json);
    ~OAIPatchSalesOrderLineDto() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBranchId() const;
    void setBranchId(const QString &branch_id);
    bool is_branch_id_Set() const;
    bool is_branch_id_Valid() const;

    bool isCommissionable() const;
    void setCommissionable(const bool &commissionable);
    bool is_commissionable_Set() const;
    bool is_commissionable_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getDiscountAmount() const;
    void setDiscountAmount(const double &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    QString getDiscountCode() const;
    void setDiscountCode(const QString &discount_code);
    bool is_discount_code_Set() const;
    bool is_discount_code_Valid() const;

    double getDiscountPercent() const;
    void setDiscountPercent(const double &discount_percent);
    bool is_discount_percent_Set() const;
    bool is_discount_percent_Valid() const;

    QString getExternalLink() const;
    void setExternalLink(const QString &external_link);
    bool is_external_link_Set() const;
    bool is_external_link_Valid() const;

    bool isHasManualDiscount() const;
    void setHasManualDiscount(const bool &has_manual_discount);
    bool is_has_manual_discount_Set() const;
    bool is_has_manual_discount_Valid() const;

    bool isHasManualPrice() const;
    void setHasManualPrice(const bool &has_manual_price);
    bool is_has_manual_price_Set() const;
    bool is_has_manual_price_Valid() const;

    qint32 getLineId() const;
    void setLineId(const qint32 &line_id);
    bool is_line_id_Set() const;
    bool is_line_id_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QString getOperation() const;
    void setOperation(const QString &operation);
    bool is_operation_Set() const;
    bool is_operation_Valid() const;

    double getOvershipThreshold() const;
    void setOvershipThreshold(const double &overship_threshold);
    bool is_overship_threshold_Set() const;
    bool is_overship_threshold_Valid() const;

    QString getProjectTaskId() const;
    void setProjectTaskId(const QString &project_task_id);
    bool is_project_task_id_Set() const;
    bool is_project_task_id_Valid() const;

    QString getPurchaseOrderSource() const;
    void setPurchaseOrderSource(const QString &purchase_order_source);
    bool is_purchase_order_source_Set() const;
    bool is_purchase_order_source_Valid() const;

    double getQuantity() const;
    void setQuantity(const double &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getReasonCode() const;
    void setReasonCode(const QString &reason_code);
    bool is_reason_code_Set() const;
    bool is_reason_code_Valid() const;

    QDateTime getRequestDate() const;
    void setRequestDate(const QDateTime &request_date);
    bool is_request_date_Set() const;
    bool is_request_date_Valid() const;

    QString getSalesAccountId() const;
    void setSalesAccountId(const QString &sales_account_id);
    bool is_sales_account_id_Set() const;
    bool is_sales_account_id_Valid() const;

    QString getSalesPersonId() const;
    void setSalesPersonId(const QString &sales_person_id);
    bool is_sales_person_id_Set() const;
    bool is_sales_person_id_Valid() const;

    QDateTime getShipDate() const;
    void setShipDate(const QDateTime &ship_date);
    bool is_ship_date_Set() const;
    bool is_ship_date_Valid() const;

    QString getShippingRule() const;
    void setShippingRule(const QString &shipping_rule);
    bool is_shipping_rule_Set() const;
    bool is_shipping_rule_Valid() const;

    qint32 getSortOrder() const;
    void setSortOrder(const qint32 &sort_order);
    bool is_sort_order_Set() const;
    bool is_sort_order_Valid() const;

    QMap<QString, QString> getSubaccount() const;
    void setSubaccount(const QMap<QString, QString> &subaccount);
    bool is_subaccount_Set() const;
    bool is_subaccount_Valid() const;

    QString getSupplierId() const;
    void setSupplierId(const QString &supplier_id);
    bool is_supplier_id_Set() const;
    bool is_supplier_id_Valid() const;

    double getSupplierPrice() const;
    void setSupplierPrice(const double &supplier_price);
    bool is_supplier_price_Set() const;
    bool is_supplier_price_Valid() const;

    QString getTaxCategoryId() const;
    void setTaxCategoryId(const QString &tax_category_id);
    bool is_tax_category_id_Set() const;
    bool is_tax_category_id_Valid() const;

    double getUndershipThreshold() const;
    void setUndershipThreshold(const double &undership_threshold);
    bool is_undership_threshold_Set() const;
    bool is_undership_threshold_Valid() const;

    double getUnitCost() const;
    void setUnitCost(const double &unit_cost);
    bool is_unit_cost_Set() const;
    bool is_unit_cost_Valid() const;

    QString getUnitOfMeasure() const;
    void setUnitOfMeasure(const QString &unit_of_measure);
    bool is_unit_of_measure_Set() const;
    bool is_unit_of_measure_Valid() const;

    double getUnitPrice() const;
    void setUnitPrice(const double &unit_price);
    bool is_unit_price_Set() const;
    bool is_unit_price_Valid() const;

    QString getWarehouseId() const;
    void setWarehouseId(const QString &warehouse_id);
    bool is_warehouse_id_Set() const;
    bool is_warehouse_id_Valid() const;

    QString getWarehouseLocationId() const;
    void setWarehouseLocationId(const QString &warehouse_location_id);
    bool is_warehouse_location_id_Set() const;
    bool is_warehouse_location_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_branch_id;
    bool m_branch_id_isSet;
    bool m_branch_id_isValid;

    bool m_commissionable;
    bool m_commissionable_isSet;
    bool m_commissionable_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    QString m_discount_code;
    bool m_discount_code_isSet;
    bool m_discount_code_isValid;

    double m_discount_percent;
    bool m_discount_percent_isSet;
    bool m_discount_percent_isValid;

    QString m_external_link;
    bool m_external_link_isSet;
    bool m_external_link_isValid;

    bool m_has_manual_discount;
    bool m_has_manual_discount_isSet;
    bool m_has_manual_discount_isValid;

    bool m_has_manual_price;
    bool m_has_manual_price_isSet;
    bool m_has_manual_price_isValid;

    qint32 m_line_id;
    bool m_line_id_isSet;
    bool m_line_id_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QString m_operation;
    bool m_operation_isSet;
    bool m_operation_isValid;

    double m_overship_threshold;
    bool m_overship_threshold_isSet;
    bool m_overship_threshold_isValid;

    QString m_project_task_id;
    bool m_project_task_id_isSet;
    bool m_project_task_id_isValid;

    QString m_purchase_order_source;
    bool m_purchase_order_source_isSet;
    bool m_purchase_order_source_isValid;

    double m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_reason_code;
    bool m_reason_code_isSet;
    bool m_reason_code_isValid;

    QDateTime m_request_date;
    bool m_request_date_isSet;
    bool m_request_date_isValid;

    QString m_sales_account_id;
    bool m_sales_account_id_isSet;
    bool m_sales_account_id_isValid;

    QString m_sales_person_id;
    bool m_sales_person_id_isSet;
    bool m_sales_person_id_isValid;

    QDateTime m_ship_date;
    bool m_ship_date_isSet;
    bool m_ship_date_isValid;

    QString m_shipping_rule;
    bool m_shipping_rule_isSet;
    bool m_shipping_rule_isValid;

    qint32 m_sort_order;
    bool m_sort_order_isSet;
    bool m_sort_order_isValid;

    QMap<QString, QString> m_subaccount;
    bool m_subaccount_isSet;
    bool m_subaccount_isValid;

    QString m_supplier_id;
    bool m_supplier_id_isSet;
    bool m_supplier_id_isValid;

    double m_supplier_price;
    bool m_supplier_price_isSet;
    bool m_supplier_price_isValid;

    QString m_tax_category_id;
    bool m_tax_category_id_isSet;
    bool m_tax_category_id_isValid;

    double m_undership_threshold;
    bool m_undership_threshold_isSet;
    bool m_undership_threshold_isValid;

    double m_unit_cost;
    bool m_unit_cost_isSet;
    bool m_unit_cost_isValid;

    QString m_unit_of_measure;
    bool m_unit_of_measure_isSet;
    bool m_unit_of_measure_isValid;

    double m_unit_price;
    bool m_unit_price_isSet;
    bool m_unit_price_isValid;

    QString m_warehouse_id;
    bool m_warehouse_id_isSet;
    bool m_warehouse_id_isValid;

    QString m_warehouse_location_id;
    bool m_warehouse_location_id_isSet;
    bool m_warehouse_location_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPatchSalesOrderLineDto)

#endif // OAIPatchSalesOrderLineDto_H
