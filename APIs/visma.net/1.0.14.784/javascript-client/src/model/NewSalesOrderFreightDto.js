/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewSalesOrderFreightDto model module.
 * @module model/NewSalesOrderFreightDto
 * @version 1.0.14.784
 */
class NewSalesOrderFreightDto {
    /**
     * Constructs a new <code>NewSalesOrderFreightDto</code>.
     * @alias module:model/NewSalesOrderFreightDto
     */
    constructor() { 
        
        NewSalesOrderFreightDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NewSalesOrderFreightDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewSalesOrderFreightDto} obj Optional instance to populate.
     * @return {module:model/NewSalesOrderFreightDto} The populated <code>NewSalesOrderFreightDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewSalesOrderFreightDto();

            if (data.hasOwnProperty('cost')) {
                obj['cost'] = ApiClient.convertToType(data['cost'], 'Number');
            }
            if (data.hasOwnProperty('premiumAmount')) {
                obj['premiumAmount'] = ApiClient.convertToType(data['premiumAmount'], 'Number');
            }
            if (data.hasOwnProperty('taxCategoryId')) {
                obj['taxCategoryId'] = ApiClient.convertToType(data['taxCategoryId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NewSalesOrderFreightDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NewSalesOrderFreightDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['taxCategoryId'] && !(typeof data['taxCategoryId'] === 'string' || data['taxCategoryId'] instanceof String)) {
            throw new Error("Expected the field `taxCategoryId` to be a primitive type in the JSON string but got " + data['taxCategoryId']);
        }

        return true;
    }


}



/**
 * The freight cost calculated for the sales order, can be manually set if orders Ship via code allows it.
 * @member {Number} cost
 */
NewSalesOrderFreightDto.prototype['cost'] = undefined;

/**
 * The additional freight charges for handling the order.
 * @member {Number} premiumAmount
 */
NewSalesOrderFreightDto.prototype['premiumAmount'] = undefined;

/**
 * The tax category that applies to the freight amount.  By default, it is the tax category associated with the ship via code selected for the order.
 * @member {String} taxCategoryId
 */
NewSalesOrderFreightDto.prototype['taxCategoryId'] = undefined;






export default NewSalesOrderFreightDto;

