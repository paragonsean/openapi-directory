/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewSalesOrderContactDto model module.
 * @module model/NewSalesOrderContactDto
 * @version 1.0.14.784
 */
class NewSalesOrderContactDto {
    /**
     * Constructs a new <code>NewSalesOrderContactDto</code>.
     * Defines a new contact when creating a new sales order.  When the contact information is provided, it is expected to provide all needed fields for the contact(name, attention etc).  No default values from the customer will be set for the non defined contact fields.
     * @alias module:model/NewSalesOrderContactDto
     */
    constructor() { 
        
        NewSalesOrderContactDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NewSalesOrderContactDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewSalesOrderContactDto} obj Optional instance to populate.
     * @return {module:model/NewSalesOrderContactDto} The populated <code>NewSalesOrderContactDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewSalesOrderContactDto();

            if (data.hasOwnProperty('attention')) {
                obj['attention'] = ApiClient.convertToType(data['attention'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('phone1')) {
                obj['phone1'] = ApiClient.convertToType(data['phone1'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NewSalesOrderContactDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NewSalesOrderContactDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['attention'] && !(typeof data['attention'] === 'string' || data['attention'] instanceof String)) {
            throw new Error("Expected the field `attention` to be a primitive type in the JSON string but got " + data['attention']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['phone1'] && !(typeof data['phone1'] === 'string' || data['phone1'] instanceof String)) {
            throw new Error("Expected the field `phone1` to be a primitive type in the JSON string but got " + data['phone1']);
        }

        return true;
    }


}



/**
 * Sets any attention for the contact
 * @member {String} attention
 */
NewSalesOrderContactDto.prototype['attention'] = undefined;

/**
 * Sets the e-mail address of the contact
 * @member {String} email
 */
NewSalesOrderContactDto.prototype['email'] = undefined;

/**
 * Sets the full name of the contact
 * @member {String} name
 */
NewSalesOrderContactDto.prototype['name'] = undefined;

/**
 * Sets the primary phone number of the contact
 * @member {String} phone1
 */
NewSalesOrderContactDto.prototype['phone1'] = undefined;






export default NewSalesOrderContactDto;

