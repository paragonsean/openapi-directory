/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PatchSalesOrderAddressDto model module.
 * @module model/PatchSalesOrderAddressDto
 * @version 1.0.14.784
 */
class PatchSalesOrderAddressDto {
    /**
     * Constructs a new <code>PatchSalesOrderAddressDto</code>.
     * Defines an address when updating a sales order.  Only the provided fields will be changed in address.
     * @alias module:model/PatchSalesOrderAddressDto
     */
    constructor() { 
        
        PatchSalesOrderAddressDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PatchSalesOrderAddressDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PatchSalesOrderAddressDto} obj Optional instance to populate.
     * @return {module:model/PatchSalesOrderAddressDto} The populated <code>PatchSalesOrderAddressDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PatchSalesOrderAddressDto();

            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('countryId')) {
                obj['countryId'] = ApiClient.convertToType(data['countryId'], 'String');
            }
            if (data.hasOwnProperty('line1')) {
                obj['line1'] = ApiClient.convertToType(data['line1'], 'String');
            }
            if (data.hasOwnProperty('line2')) {
                obj['line2'] = ApiClient.convertToType(data['line2'], 'String');
            }
            if (data.hasOwnProperty('line3')) {
                obj['line3'] = ApiClient.convertToType(data['line3'], 'String');
            }
            if (data.hasOwnProperty('overridesDefault')) {
                obj['overridesDefault'] = ApiClient.convertToType(data['overridesDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('postalCode')) {
                obj['postalCode'] = ApiClient.convertToType(data['postalCode'], 'String');
            }
            if (data.hasOwnProperty('stateId')) {
                obj['stateId'] = ApiClient.convertToType(data['stateId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PatchSalesOrderAddressDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PatchSalesOrderAddressDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['countryId'] && !(typeof data['countryId'] === 'string' || data['countryId'] instanceof String)) {
            throw new Error("Expected the field `countryId` to be a primitive type in the JSON string but got " + data['countryId']);
        }
        // ensure the json data is a string
        if (data['line1'] && !(typeof data['line1'] === 'string' || data['line1'] instanceof String)) {
            throw new Error("Expected the field `line1` to be a primitive type in the JSON string but got " + data['line1']);
        }
        // ensure the json data is a string
        if (data['line2'] && !(typeof data['line2'] === 'string' || data['line2'] instanceof String)) {
            throw new Error("Expected the field `line2` to be a primitive type in the JSON string but got " + data['line2']);
        }
        // ensure the json data is a string
        if (data['line3'] && !(typeof data['line3'] === 'string' || data['line3'] instanceof String)) {
            throw new Error("Expected the field `line3` to be a primitive type in the JSON string but got " + data['line3']);
        }
        // ensure the json data is a string
        if (data['postalCode'] && !(typeof data['postalCode'] === 'string' || data['postalCode'] instanceof String)) {
            throw new Error("Expected the field `postalCode` to be a primitive type in the JSON string but got " + data['postalCode']);
        }
        // ensure the json data is a string
        if (data['stateId'] && !(typeof data['stateId'] === 'string' || data['stateId'] instanceof String)) {
            throw new Error("Expected the field `stateId` to be a primitive type in the JSON string but got " + data['stateId']);
        }

        return true;
    }


}



/**
 * The city
 * @member {String} city
 */
PatchSalesOrderAddressDto.prototype['city'] = undefined;

/**
 * The country.
 * @member {String} countryId
 */
PatchSalesOrderAddressDto.prototype['countryId'] = undefined;

/**
 * Address line 1
 * @member {String} line1
 */
PatchSalesOrderAddressDto.prototype['line1'] = undefined;

/**
 * Address line 2
 * @member {String} line2
 */
PatchSalesOrderAddressDto.prototype['line2'] = undefined;

/**
 * Address line 3
 * @member {String} line3
 */
PatchSalesOrderAddressDto.prototype['line3'] = undefined;

/**
 * Whether this address overrides the default address
 * @member {Boolean} overridesDefault
 */
PatchSalesOrderAddressDto.prototype['overridesDefault'] = undefined;

/**
 * The postal code
 * @member {String} postalCode
 */
PatchSalesOrderAddressDto.prototype['postalCode'] = undefined;

/**
 * The state
 * @member {String} stateId
 */
PatchSalesOrderAddressDto.prototype['stateId'] = undefined;






export default PatchSalesOrderAddressDto;

