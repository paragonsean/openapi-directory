/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VismaNetErpSalesOrdersApi);
  }
}(this, function(expect, VismaNetErpSalesOrdersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NewSalesOrderLineDto', function() {
    it('should create an instance of NewSalesOrderLineDto', function() {
      // uncomment below and update the code to test NewSalesOrderLineDto
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be.a(VismaNetErpSalesOrdersApi.NewSalesOrderLineDto);
    });

    it('should have the property branchId (base name: "branchId")', function() {
      // uncomment below and update the code to test the property branchId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property commissionable (base name: "commissionable")', function() {
      // uncomment below and update the code to test the property commissionable
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property discountAmount (base name: "discountAmount")', function() {
      // uncomment below and update the code to test the property discountAmount
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property discountCode (base name: "discountCode")', function() {
      // uncomment below and update the code to test the property discountCode
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property discountPercent (base name: "discountPercent")', function() {
      // uncomment below and update the code to test the property discountPercent
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property externalLink (base name: "externalLink")', function() {
      // uncomment below and update the code to test the property externalLink
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property hasManualDiscount (base name: "hasManualDiscount")', function() {
      // uncomment below and update the code to test the property hasManualDiscount
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property hasManualPrice (base name: "hasManualPrice")', function() {
      // uncomment below and update the code to test the property hasManualPrice
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property inventoryId (base name: "inventoryId")', function() {
      // uncomment below and update the code to test the property inventoryId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property note (base name: "note")', function() {
      // uncomment below and update the code to test the property note
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property operation (base name: "operation")', function() {
      // uncomment below and update the code to test the property operation
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property overshipThreshold (base name: "overshipThreshold")', function() {
      // uncomment below and update the code to test the property overshipThreshold
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property projectTaskId (base name: "projectTaskId")', function() {
      // uncomment below and update the code to test the property projectTaskId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property purchaseOrderSource (base name: "purchaseOrderSource")', function() {
      // uncomment below and update the code to test the property purchaseOrderSource
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property quantity (base name: "quantity")', function() {
      // uncomment below and update the code to test the property quantity
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property reasonCode (base name: "reasonCode")', function() {
      // uncomment below and update the code to test the property reasonCode
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property requestDate (base name: "requestDate")', function() {
      // uncomment below and update the code to test the property requestDate
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property salesAccountId (base name: "salesAccountId")', function() {
      // uncomment below and update the code to test the property salesAccountId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property salesPersonId (base name: "salesPersonId")', function() {
      // uncomment below and update the code to test the property salesPersonId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property shipDate (base name: "shipDate")', function() {
      // uncomment below and update the code to test the property shipDate
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property shippingRule (base name: "shippingRule")', function() {
      // uncomment below and update the code to test the property shippingRule
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property subaccount (base name: "subaccount")', function() {
      // uncomment below and update the code to test the property subaccount
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property supplierId (base name: "supplierId")', function() {
      // uncomment below and update the code to test the property supplierId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property supplierPrice (base name: "supplierPrice")', function() {
      // uncomment below and update the code to test the property supplierPrice
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property taxCategoryId (base name: "taxCategoryId")', function() {
      // uncomment below and update the code to test the property taxCategoryId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property undershipThreshold (base name: "undershipThreshold")', function() {
      // uncomment below and update the code to test the property undershipThreshold
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property unitCost (base name: "unitCost")', function() {
      // uncomment below and update the code to test the property unitCost
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property unitOfMeasure (base name: "unitOfMeasure")', function() {
      // uncomment below and update the code to test the property unitOfMeasure
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property unitPrice (base name: "unitPrice")', function() {
      // uncomment below and update the code to test the property unitPrice
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property warehouseId (base name: "warehouseId")', function() {
      // uncomment below and update the code to test the property warehouseId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

    it('should have the property warehouseLocationId (base name: "warehouseLocationId")', function() {
      // uncomment below and update the code to test the property warehouseLocationId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderLineDto();
      //expect(instance).to.be();
    });

  });

}));
