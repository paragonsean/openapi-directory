/**
 * Visma.net.ERP.SalesOrders.Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.14.784
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VismaNetErpSalesOrdersApi);
  }
}(this, function(expect, VismaNetErpSalesOrdersApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NewSalesOrderCommand', function() {
    it('should create an instance of NewSalesOrderCommand', function() {
      // uncomment below and update the code to test NewSalesOrderCommand
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be.a(VismaNetErpSalesOrdersApi.NewSalesOrderCommand);
    });

    it('should have the property billing (base name: "billing")', function() {
      // uncomment below and update the code to test the property billing
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property branchId (base name: "branchId")', function() {
      // uncomment below and update the code to test the property branchId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property cancelBy (base name: "cancelBy")', function() {
      // uncomment below and update the code to test the property cancelBy
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property currencyId (base name: "currencyId")', function() {
      // uncomment below and update the code to test the property currencyId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property customer (base name: "customer")', function() {
      // uncomment below and update the code to test the property customer
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property date (base name: "date")', function() {
      // uncomment below and update the code to test the property date
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property financialInformation (base name: "financialInformation")', function() {
      // uncomment below and update the code to test the property financialInformation
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property freight (base name: "freight")', function() {
      // uncomment below and update the code to test the property freight
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property note (base name: "note")', function() {
      // uncomment below and update the code to test the property note
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property orderId (base name: "orderId")', function() {
      // uncomment below and update the code to test the property orderId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property orderLines (base name: "orderLines")', function() {
      // uncomment below and update the code to test the property orderLines
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property originalOrderId (base name: "originalOrderId")', function() {
      // uncomment below and update the code to test the property originalOrderId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property originalOrderType (base name: "originalOrderType")', function() {
      // uncomment below and update the code to test the property originalOrderType
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property ownerId (base name: "ownerId")', function() {
      // uncomment below and update the code to test the property ownerId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property paymentSettings (base name: "paymentSettings")', function() {
      // uncomment below and update the code to test the property paymentSettings
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property print (base name: "print")', function() {
      // uncomment below and update the code to test the property print
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property projectId (base name: "projectId")', function() {
      // uncomment below and update the code to test the property projectId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property requestOn (base name: "requestOn")', function() {
      // uncomment below and update the code to test the property requestOn
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property salesPersonId (base name: "salesPersonId")', function() {
      // uncomment below and update the code to test the property salesPersonId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property shipping (base name: "shipping")', function() {
      // uncomment below and update the code to test the property shipping
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property taxZoneId (base name: "taxZoneId")', function() {
      // uncomment below and update the code to test the property taxZoneId
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

    it('should have the property useReplacementCostForMarginAndProfit (base name: "useReplacementCostForMarginAndProfit")', function() {
      // uncomment below and update the code to test the property useReplacementCostForMarginAndProfit
      //var instance = new VismaNetErpSalesOrdersApi.NewSalesOrderCommand();
      //expect(instance).to.be();
    });

  });

}));
