/**
 * Self Service Developer API
 * Self Service Developer API documentation and demo.  ##Getting Started  You will need an API access profile user and password in order to access search endpoints. Your access profile user and password is used for authenticating all requests to our search API.  You MUST pass the user and password each time you perform a search request.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_contact_enrich_post_request_Address.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_contact_enrich_post_request_Address::OAI_contact_enrich_post_request_Address(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_contact_enrich_post_request_Address::OAI_contact_enrich_post_request_Address() {
    this->initializeModel();
}

OAI_contact_enrich_post_request_Address::~OAI_contact_enrich_post_request_Address() {}

void OAI_contact_enrich_post_request_Address::initializeModel() {

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;
}

void OAI_contact_enrich_post_request_Address::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_contact_enrich_post_request_Address::fromJsonObject(QJsonObject json) {

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("addressLine1")]);
    m_address_line1_isSet = !json[QString("addressLine1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("addressLine2")]);
    m_address_line2_isSet = !json[QString("addressLine2")].isNull() && m_address_line2_isValid;
}

QString OAI_contact_enrich_post_request_Address::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_contact_enrich_post_request_Address::asJsonObject() const {
    QJsonObject obj;
    if (m_address_line1_isSet) {
        obj.insert(QString("addressLine1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("addressLine2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    return obj;
}

QString OAI_contact_enrich_post_request_Address::getAddressLine1() const {
    return m_address_line1;
}
void OAI_contact_enrich_post_request_Address::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAI_contact_enrich_post_request_Address::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAI_contact_enrich_post_request_Address::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAI_contact_enrich_post_request_Address::getAddressLine2() const {
    return m_address_line2;
}
void OAI_contact_enrich_post_request_Address::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAI_contact_enrich_post_request_Address::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAI_contact_enrich_post_request_Address::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

bool OAI_contact_enrich_post_request_Address::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_contact_enrich_post_request_Address::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
