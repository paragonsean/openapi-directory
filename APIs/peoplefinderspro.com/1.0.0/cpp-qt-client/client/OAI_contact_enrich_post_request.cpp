/**
 * Self Service Developer API
 * Self Service Developer API documentation and demo.  ##Getting Started  You will need an API access profile user and password in order to access search endpoints. Your access profile user and password is used for authenticating all requests to our search API.  You MUST pass the user and password each time you perform a search request.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_contact_enrich_post_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_contact_enrich_post_request::OAI_contact_enrich_post_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_contact_enrich_post_request::OAI_contact_enrich_post_request() {
    this->initializeModel();
}

OAI_contact_enrich_post_request::~OAI_contact_enrich_post_request() {}

void OAI_contact_enrich_post_request::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_age_isSet = false;
    m_age_isValid = false;

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_middle_name_isSet = false;
    m_middle_name_isValid = false;

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;
}

void OAI_contact_enrich_post_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_contact_enrich_post_request::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("Address")]);
    m_address_isSet = !json[QString("Address")].isNull() && m_address_isValid;

    m_age_isValid = ::OpenAPI::fromJsonValue(m_age, json[QString("Age")]);
    m_age_isSet = !json[QString("Age")].isNull() && m_age_isValid;

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("Dob")]);
    m_dob_isSet = !json[QString("Dob")].isNull() && m_dob_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("FirstName")]);
    m_first_name_isSet = !json[QString("FirstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("LastName")]);
    m_last_name_isSet = !json[QString("LastName")].isNull() && m_last_name_isValid;

    m_middle_name_isValid = ::OpenAPI::fromJsonValue(m_middle_name, json[QString("MiddleName")]);
    m_middle_name_isSet = !json[QString("MiddleName")].isNull() && m_middle_name_isValid;

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("PhoneNumber")]);
    m_phone_number_isSet = !json[QString("PhoneNumber")].isNull() && m_phone_number_isValid;
}

QString OAI_contact_enrich_post_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_contact_enrich_post_request::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("Address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_age_isSet) {
        obj.insert(QString("Age"), ::OpenAPI::toJsonValue(m_age));
    }
    if (m_dob_isSet) {
        obj.insert(QString("Dob"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("FirstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("LastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_middle_name_isSet) {
        obj.insert(QString("MiddleName"), ::OpenAPI::toJsonValue(m_middle_name));
    }
    if (m_phone_number_isSet) {
        obj.insert(QString("PhoneNumber"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    return obj;
}

OAI_contact_enrich_post_request_Address OAI_contact_enrich_post_request::getAddress() const {
    return m_address;
}
void OAI_contact_enrich_post_request::setAddress(const OAI_contact_enrich_post_request_Address &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAI_contact_enrich_post_request::is_address_Set() const{
    return m_address_isSet;
}

bool OAI_contact_enrich_post_request::is_address_Valid() const{
    return m_address_isValid;
}

double OAI_contact_enrich_post_request::getAge() const {
    return m_age;
}
void OAI_contact_enrich_post_request::setAge(const double &age) {
    m_age = age;
    m_age_isSet = true;
}

bool OAI_contact_enrich_post_request::is_age_Set() const{
    return m_age_isSet;
}

bool OAI_contact_enrich_post_request::is_age_Valid() const{
    return m_age_isValid;
}

QString OAI_contact_enrich_post_request::getDob() const {
    return m_dob;
}
void OAI_contact_enrich_post_request::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAI_contact_enrich_post_request::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAI_contact_enrich_post_request::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAI_contact_enrich_post_request::getEmail() const {
    return m_email;
}
void OAI_contact_enrich_post_request::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAI_contact_enrich_post_request::is_email_Set() const{
    return m_email_isSet;
}

bool OAI_contact_enrich_post_request::is_email_Valid() const{
    return m_email_isValid;
}

QString OAI_contact_enrich_post_request::getFirstName() const {
    return m_first_name;
}
void OAI_contact_enrich_post_request::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAI_contact_enrich_post_request::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAI_contact_enrich_post_request::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAI_contact_enrich_post_request::getLastName() const {
    return m_last_name;
}
void OAI_contact_enrich_post_request::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAI_contact_enrich_post_request::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAI_contact_enrich_post_request::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAI_contact_enrich_post_request::getMiddleName() const {
    return m_middle_name;
}
void OAI_contact_enrich_post_request::setMiddleName(const QString &middle_name) {
    m_middle_name = middle_name;
    m_middle_name_isSet = true;
}

bool OAI_contact_enrich_post_request::is_middle_name_Set() const{
    return m_middle_name_isSet;
}

bool OAI_contact_enrich_post_request::is_middle_name_Valid() const{
    return m_middle_name_isValid;
}

QString OAI_contact_enrich_post_request::getPhoneNumber() const {
    return m_phone_number;
}
void OAI_contact_enrich_post_request::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAI_contact_enrich_post_request::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAI_contact_enrich_post_request::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

bool OAI_contact_enrich_post_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_age_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middle_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_contact_enrich_post_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
