/**
 * APIs.guru
 * Wikipedia for Web APIs. Repository of API definitions in OpenAPI format. **Warning**: If you want to be notified about changes in advance please join our [Slack channel](https://join.slack.com/t/mermade/shared_invite/zt-g78g7xir-MLE_CTCcXCdfJfG3CJe9qA). Client sample: [[Demo]](https://apis.guru/simple-ui) [[Repo]](https://github.com/APIs-guru/simple-ui) 
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMetrics.h
 *
 * List of basic metrics
 */

#ifndef OAIMetrics_H
#define OAIMetrics_H

#include <QJsonObject>

#include "OAIMetrics_thisWeek.h"
#include <QJsonValue>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetrics_thisWeek;

class OAIMetrics : public OAIObject {
public:
    OAIMetrics();
    OAIMetrics(QString json);
    ~OAIMetrics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QJsonValue> getDatasets() const;
    void setDatasets(const QList<QJsonValue> &datasets);
    bool is_datasets_Set() const;
    bool is_datasets_Valid() const;

    qint32 getFixedPct() const;
    void setFixedPct(const qint32 &fixed_pct);
    bool is_fixed_pct_Set() const;
    bool is_fixed_pct_Valid() const;

    qint32 getFixes() const;
    void setFixes(const qint32 &fixes);
    bool is_fixes_Set() const;
    bool is_fixes_Valid() const;

    qint32 getInvalid() const;
    void setInvalid(const qint32 &invalid);
    bool is_invalid_Set() const;
    bool is_invalid_Valid() const;

    qint32 getIssues() const;
    void setIssues(const qint32 &issues);
    bool is_issues_Set() const;
    bool is_issues_Valid() const;

    qint32 getNumApis() const;
    void setNumApis(const qint32 &num_apis);
    bool is_num_apis_Set() const;
    bool is_num_apis_Valid() const;

    qint32 getNumDrivers() const;
    void setNumDrivers(const qint32 &num_drivers);
    bool is_num_drivers_Set() const;
    bool is_num_drivers_Valid() const;

    qint32 getNumEndpoints() const;
    void setNumEndpoints(const qint32 &num_endpoints);
    bool is_num_endpoints_Set() const;
    bool is_num_endpoints_Valid() const;

    qint32 getNumProviders() const;
    void setNumProviders(const qint32 &num_providers);
    bool is_num_providers_Set() const;
    bool is_num_providers_Valid() const;

    qint32 getNumSpecs() const;
    void setNumSpecs(const qint32 &num_specs);
    bool is_num_specs_Set() const;
    bool is_num_specs_Valid() const;

    qint32 getStars() const;
    void setStars(const qint32 &stars);
    bool is_stars_Set() const;
    bool is_stars_Valid() const;

    OAIMetrics_thisWeek getThisWeek() const;
    void setThisWeek(const OAIMetrics_thisWeek &this_week);
    bool is_this_week_Set() const;
    bool is_this_week_Valid() const;

    qint32 getUnofficial() const;
    void setUnofficial(const qint32 &unofficial);
    bool is_unofficial_Set() const;
    bool is_unofficial_Valid() const;

    qint32 getUnreachable() const;
    void setUnreachable(const qint32 &unreachable);
    bool is_unreachable_Set() const;
    bool is_unreachable_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QJsonValue> m_datasets;
    bool m_datasets_isSet;
    bool m_datasets_isValid;

    qint32 m_fixed_pct;
    bool m_fixed_pct_isSet;
    bool m_fixed_pct_isValid;

    qint32 m_fixes;
    bool m_fixes_isSet;
    bool m_fixes_isValid;

    qint32 m_invalid;
    bool m_invalid_isSet;
    bool m_invalid_isValid;

    qint32 m_issues;
    bool m_issues_isSet;
    bool m_issues_isValid;

    qint32 m_num_apis;
    bool m_num_apis_isSet;
    bool m_num_apis_isValid;

    qint32 m_num_drivers;
    bool m_num_drivers_isSet;
    bool m_num_drivers_isValid;

    qint32 m_num_endpoints;
    bool m_num_endpoints_isSet;
    bool m_num_endpoints_isValid;

    qint32 m_num_providers;
    bool m_num_providers_isSet;
    bool m_num_providers_isValid;

    qint32 m_num_specs;
    bool m_num_specs_isSet;
    bool m_num_specs_isValid;

    qint32 m_stars;
    bool m_stars_isSet;
    bool m_stars_isValid;

    OAIMetrics_thisWeek m_this_week;
    bool m_this_week_isSet;
    bool m_this_week_isValid;

    qint32 m_unofficial;
    bool m_unofficial_isSet;
    bool m_unofficial_isValid;

    qint32 m_unreachable;
    bool m_unreachable_isSet;
    bool m_unreachable_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMetrics)

#endif // OAIMetrics_H
