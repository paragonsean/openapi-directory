/**
 * APIs.guru
 * Wikipedia for Web APIs. Repository of API definitions in OpenAPI format. **Warning**: If you want to be notified about changes in advance please join our [Slack channel](https://join.slack.com/t/mermade/shared_invite/zt-g78g7xir-MLE_CTCcXCdfJfG3CJe9qA). Client sample: [[Demo]](https://apis.guru/simple-ui) [[Repo]](https://github.com/APIs-guru/simple-ui) 
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPI.h
 *
 * Meta information about API
 */

#ifndef OAIAPI_H
#define OAIAPI_H

#include <QJsonObject>

#include "OAIApiVersion.h"
#include <QDateTime>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIApiVersion;

class OAIAPI : public OAIObject {
public:
    OAIAPI();
    OAIAPI(QString json);
    ~OAIAPI() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getAdded() const;
    void setAdded(const QDateTime &added);
    bool is_added_Set() const;
    bool is_added_Valid() const;

    QString getPreferred() const;
    void setPreferred(const QString &preferred);
    bool is_preferred_Set() const;
    bool is_preferred_Valid() const;

    QMap<QString, OAIApiVersion> getVersions() const;
    void setVersions(const QMap<QString, OAIApiVersion> &versions);
    bool is_versions_Set() const;
    bool is_versions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_added;
    bool m_added_isSet;
    bool m_added_isValid;

    QString m_preferred;
    bool m_preferred_isSet;
    bool m_preferred_isValid;

    QMap<QString, OAIApiVersion> m_versions;
    bool m_versions_isSet;
    bool m_versions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPI)

#endif // OAIAPI_H
