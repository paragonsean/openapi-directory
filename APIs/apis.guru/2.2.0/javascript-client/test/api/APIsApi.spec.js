/**
 * APIs.guru
 * Wikipedia for Web APIs. Repository of API definitions in OpenAPI format. **Warning**: If you want to be notified about changes in advance please join our [Slack channel](https://join.slack.com/t/mermade/shared_invite/zt-g78g7xir-MLE_CTCcXCdfJfG3CJe9qA). Client sample: [[Demo]](https://apis.guru/simple-ui) [[Repo]](https://github.com/APIs-guru/simple-ui) 
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ApisGuru);
  }
}(this, function(expect, ApisGuru) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ApisGuru.APIsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('APIsApi', function() {
    describe('getAPI', function() {
      it('should call getAPI successfully', function(done) {
        //uncomment below and update the code to test getAPI
        //instance.getAPI(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMetrics', function() {
      it('should call getMetrics successfully', function(done) {
        //uncomment below and update the code to test getMetrics
        //instance.getMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProvider', function() {
      it('should call getProvider successfully', function(done) {
        //uncomment below and update the code to test getProvider
        //instance.getProvider(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProviders', function() {
      it('should call getProviders successfully', function(done) {
        //uncomment below and update the code to test getProviders
        //instance.getProviders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceAPI', function() {
      it('should call getServiceAPI successfully', function(done) {
        //uncomment below and update the code to test getServiceAPI
        //instance.getServiceAPI(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServices', function() {
      it('should call getServices successfully', function(done) {
        //uncomment below and update the code to test getServices
        //instance.getServices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAPIs', function() {
      it('should call listAPIs successfully', function(done) {
        //uncomment below and update the code to test listAPIs
        //instance.listAPIs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
