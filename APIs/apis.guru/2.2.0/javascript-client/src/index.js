/**
 * APIs.guru
 * Wikipedia for Web APIs. Repository of API definitions in OpenAPI format. **Warning**: If you want to be notified about changes in advance please join our [Slack channel](https://join.slack.com/t/mermade/shared_invite/zt-g78g7xir-MLE_CTCcXCdfJfG3CJe9qA). Client sample: [[Demo]](https://apis.guru/simple-ui) [[Repo]](https://github.com/APIs-guru/simple-ui) 
 *
 * The version of the OpenAPI document: 2.2.0
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import API from './model/API';
import ApiVersion from './model/ApiVersion';
import GetProviders200Response from './model/GetProviders200Response';
import GetServices200Response from './model/GetServices200Response';
import Metrics from './model/Metrics';
import MetricsThisWeek from './model/MetricsThisWeek';
import APIsApi from './api/APIsApi';


/**
* Wikipedia for Web APIs. Repository of API definitions in OpenAPI format. **Warning**: If you want to be notified about changes in advance please join our [Slack channel](https://join.slack.com/t/mermade/shared_invite/zt-g78g7xir-MLE_CTCcXCdfJfG3CJe9qA). Client sample: [[Demo]](https://apis.guru/simple-ui) [[Repo]](https://github.com/APIs-guru/simple-ui) .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ApisGuru = require('index'); // See note below*.
* var xxxSvc = new ApisGuru.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ApisGuru.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ApisGuru.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ApisGuru.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2.2.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The API model constructor.
     * @property {module:model/API}
     */
    API,

    /**
     * The ApiVersion model constructor.
     * @property {module:model/ApiVersion}
     */
    ApiVersion,

    /**
     * The GetProviders200Response model constructor.
     * @property {module:model/GetProviders200Response}
     */
    GetProviders200Response,

    /**
     * The GetServices200Response model constructor.
     * @property {module:model/GetServices200Response}
     */
    GetServices200Response,

    /**
     * The Metrics model constructor.
     * @property {module:model/Metrics}
     */
    Metrics,

    /**
     * The MetricsThisWeek model constructor.
     * @property {module:model/MetricsThisWeek}
     */
    MetricsThisWeek,

    /**
    * The APIsApi service constructor.
    * @property {module:api/APIsApi}
    */
    APIsApi
};
