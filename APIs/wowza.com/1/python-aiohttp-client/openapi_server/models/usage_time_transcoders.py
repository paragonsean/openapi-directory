# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.usage_time_transcoder import UsageTimeTranscoder
from openapi_server import util


class UsageTimeTranscoders(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, transcoders: List[UsageTimeTranscoder]=None):
        """UsageTimeTranscoders - a model defined in OpenAPI

        :param transcoders: The transcoders of this UsageTimeTranscoders.
        """
        self.openapi_types = {
            'transcoders': List[UsageTimeTranscoder]
        }

        self.attribute_map = {
            'transcoders': 'transcoders'
        }

        self._transcoders = transcoders

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageTimeTranscoders':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usage_time_transcoders of this UsageTimeTranscoders.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def transcoders(self):
        """Gets the transcoders of this UsageTimeTranscoders.


        :return: The transcoders of this UsageTimeTranscoders.
        :rtype: List[UsageTimeTranscoder]
        """
        return self._transcoders

    @transcoders.setter
    def transcoders(self, transcoders):
        """Sets the transcoders of this UsageTimeTranscoders.


        :param transcoders: The transcoders of this UsageTimeTranscoders.
        :type transcoders: List[UsageTimeTranscoder]
        """

        self._transcoders = transcoders
