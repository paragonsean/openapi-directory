# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class HashOfPlaybackURLs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, hls: str=None, wowz: str=None, ws: str=None):
        """HashOfPlaybackURLs - a model defined in OpenAPI

        :param hls: The hls of this HashOfPlaybackURLs.
        :param wowz: The wowz of this HashOfPlaybackURLs.
        :param ws: The ws of this HashOfPlaybackURLs.
        """
        self.openapi_types = {
            'hls': str,
            'wowz': str,
            'ws': str
        }

        self.attribute_map = {
            'hls': 'hls',
            'wowz': 'wowz',
            'ws': 'ws'
        }

        self._hls = hls
        self._wowz = wowz
        self._ws = ws

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HashOfPlaybackURLs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hash_of_playback_URLs of this HashOfPlaybackURLs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def hls(self):
        """Gets the hls of this HashOfPlaybackURLs.

        The web address that the ultra low latency target can use to play the Apple HLS stream.

        :return: The hls of this HashOfPlaybackURLs.
        :rtype: str
        """
        return self._hls

    @hls.setter
    def hls(self, hls):
        """Sets the hls of this HashOfPlaybackURLs.

        The web address that the ultra low latency target can use to play the Apple HLS stream.

        :param hls: The hls of this HashOfPlaybackURLs.
        :type hls: str
        """

        self._hls = hls

    @property
    def wowz(self):
        """Gets the wowz of this HashOfPlaybackURLs.

        The **wowz** and **wowzs** web addresses that the ultra low latency target can use to play WOWZ streams.

        :return: The wowz of this HashOfPlaybackURLs.
        :rtype: str
        """
        return self._wowz

    @wowz.setter
    def wowz(self, wowz):
        """Sets the wowz of this HashOfPlaybackURLs.

        The **wowz** and **wowzs** web addresses that the ultra low latency target can use to play WOWZ streams.

        :param wowz: The wowz of this HashOfPlaybackURLs.
        :type wowz: str
        """

        self._wowz = wowz

    @property
    def ws(self):
        """Gets the ws of this HashOfPlaybackURLs.

        The **ws** and **wss** web addresses that the ultra low latency target can use to play the WebSocket stream.

        :return: The ws of this HashOfPlaybackURLs.
        :rtype: str
        """
        return self._ws

    @ws.setter
    def ws(self, ws):
        """Sets the ws of this HashOfPlaybackURLs.

        The **ws** and **wss** web addresses that the ultra low latency target can use to play the WebSocket stream.

        :param ws: The ws of this HashOfPlaybackURLs.
        :type ws: str
        """

        self._ws = ws
