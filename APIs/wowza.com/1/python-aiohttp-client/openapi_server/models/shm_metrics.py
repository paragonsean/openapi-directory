# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_codec_metric import AudioCodecMetric
from openapi_server.models.bits_in_rate_metric import BitsInRateMetric
from openapi_server.models.bits_out_rate_metric import BitsOutRateMetric
from openapi_server.models.bytes_in_rate_metric import BytesInRateMetric
from openapi_server.models.bytes_out_rate_metric import BytesOutRateMetric
from openapi_server.models.configured_bytes_out_rate_metric import ConfiguredBytesOutRateMetric
from openapi_server.models.connected_metric import ConnectedMetric
from openapi_server.models.cpu_metric import CpuMetric
from openapi_server.models.frame_rate_metric import FrameRateMetric
from openapi_server.models.frame_size_metric import FrameSizeMetric
from openapi_server.models.gpu_decoder_usage_metric import GpuDecoderUsageMetric
from openapi_server.models.gpu_driver_version_metric import GpuDriverVersionMetric
from openapi_server.models.gpu_encoder_usage_metric import GpuEncoderUsageMetric
from openapi_server.models.gpu_memory_usage_metric import GpuMemoryUsageMetric
from openapi_server.models.gpu_usage_metric import GpuUsageMetric
from openapi_server.models.height_metric import HeightMetric
from openapi_server.models.keyframe_interval_metric import KeyframeIntervalMetric
from openapi_server.models.stream_target_status_outputidxstreamtargetidx_metric import StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric
from openapi_server.models.unique_views_metric import UniqueViewsMetric
from openapi_server.models.video_codec_metric import VideoCodecMetric
from openapi_server.models.width_metric import WidthMetric
from openapi_server import util


class ShmMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_codec: AudioCodecMetric=None, bits_in_rate: BitsInRateMetric=None, bits_out_rate: BitsOutRateMetric=None, bytes_in_rate: BytesInRateMetric=None, bytes_out_rate: BytesOutRateMetric=None, configured_bytes_out_rate: ConfiguredBytesOutRateMetric=None, connected: ConnectedMetric=None, cpu: CpuMetric=None, frame_rate: FrameRateMetric=None, frame_size: FrameSizeMetric=None, gpu_decoder_usage: GpuDecoderUsageMetric=None, gpu_driver_version: GpuDriverVersionMetric=None, gpu_encoder_usage: GpuEncoderUsageMetric=None, gpu_memory_usage: GpuMemoryUsageMetric=None, gpu_usage: GpuUsageMetric=None, height: HeightMetric=None, keyframe_interval: KeyframeIntervalMetric=None, stream_target_status_outputidx_streamtargetidx: StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric=None, unique_views: UniqueViewsMetric=None, video_codec: VideoCodecMetric=None, width: WidthMetric=None):
        """ShmMetrics - a model defined in OpenAPI

        :param audio_codec: The audio_codec of this ShmMetrics.
        :param bits_in_rate: The bits_in_rate of this ShmMetrics.
        :param bits_out_rate: The bits_out_rate of this ShmMetrics.
        :param bytes_in_rate: The bytes_in_rate of this ShmMetrics.
        :param bytes_out_rate: The bytes_out_rate of this ShmMetrics.
        :param configured_bytes_out_rate: The configured_bytes_out_rate of this ShmMetrics.
        :param connected: The connected of this ShmMetrics.
        :param cpu: The cpu of this ShmMetrics.
        :param frame_rate: The frame_rate of this ShmMetrics.
        :param frame_size: The frame_size of this ShmMetrics.
        :param gpu_decoder_usage: The gpu_decoder_usage of this ShmMetrics.
        :param gpu_driver_version: The gpu_driver_version of this ShmMetrics.
        :param gpu_encoder_usage: The gpu_encoder_usage of this ShmMetrics.
        :param gpu_memory_usage: The gpu_memory_usage of this ShmMetrics.
        :param gpu_usage: The gpu_usage of this ShmMetrics.
        :param height: The height of this ShmMetrics.
        :param keyframe_interval: The keyframe_interval of this ShmMetrics.
        :param stream_target_status_outputidx_streamtargetidx: The stream_target_status_outputidx_streamtargetidx of this ShmMetrics.
        :param unique_views: The unique_views of this ShmMetrics.
        :param video_codec: The video_codec of this ShmMetrics.
        :param width: The width of this ShmMetrics.
        """
        self.openapi_types = {
            'audio_codec': AudioCodecMetric,
            'bits_in_rate': BitsInRateMetric,
            'bits_out_rate': BitsOutRateMetric,
            'bytes_in_rate': BytesInRateMetric,
            'bytes_out_rate': BytesOutRateMetric,
            'configured_bytes_out_rate': ConfiguredBytesOutRateMetric,
            'connected': ConnectedMetric,
            'cpu': CpuMetric,
            'frame_rate': FrameRateMetric,
            'frame_size': FrameSizeMetric,
            'gpu_decoder_usage': GpuDecoderUsageMetric,
            'gpu_driver_version': GpuDriverVersionMetric,
            'gpu_encoder_usage': GpuEncoderUsageMetric,
            'gpu_memory_usage': GpuMemoryUsageMetric,
            'gpu_usage': GpuUsageMetric,
            'height': HeightMetric,
            'keyframe_interval': KeyframeIntervalMetric,
            'stream_target_status_outputidx_streamtargetidx': StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric,
            'unique_views': UniqueViewsMetric,
            'video_codec': VideoCodecMetric,
            'width': WidthMetric
        }

        self.attribute_map = {
            'audio_codec': 'audio_codec',
            'bits_in_rate': 'bits_in_rate',
            'bits_out_rate': 'bits_out_rate',
            'bytes_in_rate': 'bytes_in_rate',
            'bytes_out_rate': 'bytes_out_rate',
            'configured_bytes_out_rate': 'configured_bytes_out_rate',
            'connected': 'connected',
            'cpu': 'cpu',
            'frame_rate': 'frame_rate',
            'frame_size': 'frame_size',
            'gpu_decoder_usage': 'gpu_decoder_usage',
            'gpu_driver_version': 'gpu_driver_version',
            'gpu_encoder_usage': 'gpu_encoder_usage',
            'gpu_memory_usage': 'gpu_memory_usage',
            'gpu_usage': 'gpu_usage',
            'height': 'height',
            'keyframe_interval': 'keyframe_interval',
            'stream_target_status_outputidx_streamtargetidx': 'stream_target_status_OUTPUTIDX_STREAMTARGETIDX',
            'unique_views': 'unique_views',
            'video_codec': 'video_codec',
            'width': 'width'
        }

        self._audio_codec = audio_codec
        self._bits_in_rate = bits_in_rate
        self._bits_out_rate = bits_out_rate
        self._bytes_in_rate = bytes_in_rate
        self._bytes_out_rate = bytes_out_rate
        self._configured_bytes_out_rate = configured_bytes_out_rate
        self._connected = connected
        self._cpu = cpu
        self._frame_rate = frame_rate
        self._frame_size = frame_size
        self._gpu_decoder_usage = gpu_decoder_usage
        self._gpu_driver_version = gpu_driver_version
        self._gpu_encoder_usage = gpu_encoder_usage
        self._gpu_memory_usage = gpu_memory_usage
        self._gpu_usage = gpu_usage
        self._height = height
        self._keyframe_interval = keyframe_interval
        self._stream_target_status_outputidx_streamtargetidx = stream_target_status_outputidx_streamtargetidx
        self._unique_views = unique_views
        self._video_codec = video_codec
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShmMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The shm_metrics of this ShmMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_codec(self):
        """Gets the audio_codec of this ShmMetrics.


        :return: The audio_codec of this ShmMetrics.
        :rtype: AudioCodecMetric
        """
        return self._audio_codec

    @audio_codec.setter
    def audio_codec(self, audio_codec):
        """Sets the audio_codec of this ShmMetrics.


        :param audio_codec: The audio_codec of this ShmMetrics.
        :type audio_codec: AudioCodecMetric
        """

        self._audio_codec = audio_codec

    @property
    def bits_in_rate(self):
        """Gets the bits_in_rate of this ShmMetrics.


        :return: The bits_in_rate of this ShmMetrics.
        :rtype: BitsInRateMetric
        """
        return self._bits_in_rate

    @bits_in_rate.setter
    def bits_in_rate(self, bits_in_rate):
        """Sets the bits_in_rate of this ShmMetrics.


        :param bits_in_rate: The bits_in_rate of this ShmMetrics.
        :type bits_in_rate: BitsInRateMetric
        """

        self._bits_in_rate = bits_in_rate

    @property
    def bits_out_rate(self):
        """Gets the bits_out_rate of this ShmMetrics.


        :return: The bits_out_rate of this ShmMetrics.
        :rtype: BitsOutRateMetric
        """
        return self._bits_out_rate

    @bits_out_rate.setter
    def bits_out_rate(self, bits_out_rate):
        """Sets the bits_out_rate of this ShmMetrics.


        :param bits_out_rate: The bits_out_rate of this ShmMetrics.
        :type bits_out_rate: BitsOutRateMetric
        """

        self._bits_out_rate = bits_out_rate

    @property
    def bytes_in_rate(self):
        """Gets the bytes_in_rate of this ShmMetrics.


        :return: The bytes_in_rate of this ShmMetrics.
        :rtype: BytesInRateMetric
        """
        return self._bytes_in_rate

    @bytes_in_rate.setter
    def bytes_in_rate(self, bytes_in_rate):
        """Sets the bytes_in_rate of this ShmMetrics.


        :param bytes_in_rate: The bytes_in_rate of this ShmMetrics.
        :type bytes_in_rate: BytesInRateMetric
        """

        self._bytes_in_rate = bytes_in_rate

    @property
    def bytes_out_rate(self):
        """Gets the bytes_out_rate of this ShmMetrics.


        :return: The bytes_out_rate of this ShmMetrics.
        :rtype: BytesOutRateMetric
        """
        return self._bytes_out_rate

    @bytes_out_rate.setter
    def bytes_out_rate(self, bytes_out_rate):
        """Sets the bytes_out_rate of this ShmMetrics.


        :param bytes_out_rate: The bytes_out_rate of this ShmMetrics.
        :type bytes_out_rate: BytesOutRateMetric
        """

        self._bytes_out_rate = bytes_out_rate

    @property
    def configured_bytes_out_rate(self):
        """Gets the configured_bytes_out_rate of this ShmMetrics.


        :return: The configured_bytes_out_rate of this ShmMetrics.
        :rtype: ConfiguredBytesOutRateMetric
        """
        return self._configured_bytes_out_rate

    @configured_bytes_out_rate.setter
    def configured_bytes_out_rate(self, configured_bytes_out_rate):
        """Sets the configured_bytes_out_rate of this ShmMetrics.


        :param configured_bytes_out_rate: The configured_bytes_out_rate of this ShmMetrics.
        :type configured_bytes_out_rate: ConfiguredBytesOutRateMetric
        """

        self._configured_bytes_out_rate = configured_bytes_out_rate

    @property
    def connected(self):
        """Gets the connected of this ShmMetrics.


        :return: The connected of this ShmMetrics.
        :rtype: ConnectedMetric
        """
        return self._connected

    @connected.setter
    def connected(self, connected):
        """Sets the connected of this ShmMetrics.


        :param connected: The connected of this ShmMetrics.
        :type connected: ConnectedMetric
        """

        self._connected = connected

    @property
    def cpu(self):
        """Gets the cpu of this ShmMetrics.


        :return: The cpu of this ShmMetrics.
        :rtype: CpuMetric
        """
        return self._cpu

    @cpu.setter
    def cpu(self, cpu):
        """Sets the cpu of this ShmMetrics.


        :param cpu: The cpu of this ShmMetrics.
        :type cpu: CpuMetric
        """

        self._cpu = cpu

    @property
    def frame_rate(self):
        """Gets the frame_rate of this ShmMetrics.


        :return: The frame_rate of this ShmMetrics.
        :rtype: FrameRateMetric
        """
        return self._frame_rate

    @frame_rate.setter
    def frame_rate(self, frame_rate):
        """Sets the frame_rate of this ShmMetrics.


        :param frame_rate: The frame_rate of this ShmMetrics.
        :type frame_rate: FrameRateMetric
        """

        self._frame_rate = frame_rate

    @property
    def frame_size(self):
        """Gets the frame_size of this ShmMetrics.


        :return: The frame_size of this ShmMetrics.
        :rtype: FrameSizeMetric
        """
        return self._frame_size

    @frame_size.setter
    def frame_size(self, frame_size):
        """Sets the frame_size of this ShmMetrics.


        :param frame_size: The frame_size of this ShmMetrics.
        :type frame_size: FrameSizeMetric
        """

        self._frame_size = frame_size

    @property
    def gpu_decoder_usage(self):
        """Gets the gpu_decoder_usage of this ShmMetrics.


        :return: The gpu_decoder_usage of this ShmMetrics.
        :rtype: GpuDecoderUsageMetric
        """
        return self._gpu_decoder_usage

    @gpu_decoder_usage.setter
    def gpu_decoder_usage(self, gpu_decoder_usage):
        """Sets the gpu_decoder_usage of this ShmMetrics.


        :param gpu_decoder_usage: The gpu_decoder_usage of this ShmMetrics.
        :type gpu_decoder_usage: GpuDecoderUsageMetric
        """

        self._gpu_decoder_usage = gpu_decoder_usage

    @property
    def gpu_driver_version(self):
        """Gets the gpu_driver_version of this ShmMetrics.


        :return: The gpu_driver_version of this ShmMetrics.
        :rtype: GpuDriverVersionMetric
        """
        return self._gpu_driver_version

    @gpu_driver_version.setter
    def gpu_driver_version(self, gpu_driver_version):
        """Sets the gpu_driver_version of this ShmMetrics.


        :param gpu_driver_version: The gpu_driver_version of this ShmMetrics.
        :type gpu_driver_version: GpuDriverVersionMetric
        """

        self._gpu_driver_version = gpu_driver_version

    @property
    def gpu_encoder_usage(self):
        """Gets the gpu_encoder_usage of this ShmMetrics.


        :return: The gpu_encoder_usage of this ShmMetrics.
        :rtype: GpuEncoderUsageMetric
        """
        return self._gpu_encoder_usage

    @gpu_encoder_usage.setter
    def gpu_encoder_usage(self, gpu_encoder_usage):
        """Sets the gpu_encoder_usage of this ShmMetrics.


        :param gpu_encoder_usage: The gpu_encoder_usage of this ShmMetrics.
        :type gpu_encoder_usage: GpuEncoderUsageMetric
        """

        self._gpu_encoder_usage = gpu_encoder_usage

    @property
    def gpu_memory_usage(self):
        """Gets the gpu_memory_usage of this ShmMetrics.


        :return: The gpu_memory_usage of this ShmMetrics.
        :rtype: GpuMemoryUsageMetric
        """
        return self._gpu_memory_usage

    @gpu_memory_usage.setter
    def gpu_memory_usage(self, gpu_memory_usage):
        """Sets the gpu_memory_usage of this ShmMetrics.


        :param gpu_memory_usage: The gpu_memory_usage of this ShmMetrics.
        :type gpu_memory_usage: GpuMemoryUsageMetric
        """

        self._gpu_memory_usage = gpu_memory_usage

    @property
    def gpu_usage(self):
        """Gets the gpu_usage of this ShmMetrics.


        :return: The gpu_usage of this ShmMetrics.
        :rtype: GpuUsageMetric
        """
        return self._gpu_usage

    @gpu_usage.setter
    def gpu_usage(self, gpu_usage):
        """Sets the gpu_usage of this ShmMetrics.


        :param gpu_usage: The gpu_usage of this ShmMetrics.
        :type gpu_usage: GpuUsageMetric
        """

        self._gpu_usage = gpu_usage

    @property
    def height(self):
        """Gets the height of this ShmMetrics.


        :return: The height of this ShmMetrics.
        :rtype: HeightMetric
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this ShmMetrics.


        :param height: The height of this ShmMetrics.
        :type height: HeightMetric
        """

        self._height = height

    @property
    def keyframe_interval(self):
        """Gets the keyframe_interval of this ShmMetrics.


        :return: The keyframe_interval of this ShmMetrics.
        :rtype: KeyframeIntervalMetric
        """
        return self._keyframe_interval

    @keyframe_interval.setter
    def keyframe_interval(self, keyframe_interval):
        """Sets the keyframe_interval of this ShmMetrics.


        :param keyframe_interval: The keyframe_interval of this ShmMetrics.
        :type keyframe_interval: KeyframeIntervalMetric
        """

        self._keyframe_interval = keyframe_interval

    @property
    def stream_target_status_outputidx_streamtargetidx(self):
        """Gets the stream_target_status_outputidx_streamtargetidx of this ShmMetrics.


        :return: The stream_target_status_outputidx_streamtargetidx of this ShmMetrics.
        :rtype: StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric
        """
        return self._stream_target_status_outputidx_streamtargetidx

    @stream_target_status_outputidx_streamtargetidx.setter
    def stream_target_status_outputidx_streamtargetidx(self, stream_target_status_outputidx_streamtargetidx):
        """Sets the stream_target_status_outputidx_streamtargetidx of this ShmMetrics.


        :param stream_target_status_outputidx_streamtargetidx: The stream_target_status_outputidx_streamtargetidx of this ShmMetrics.
        :type stream_target_status_outputidx_streamtargetidx: StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric
        """

        self._stream_target_status_outputidx_streamtargetidx = stream_target_status_outputidx_streamtargetidx

    @property
    def unique_views(self):
        """Gets the unique_views of this ShmMetrics.


        :return: The unique_views of this ShmMetrics.
        :rtype: UniqueViewsMetric
        """
        return self._unique_views

    @unique_views.setter
    def unique_views(self, unique_views):
        """Sets the unique_views of this ShmMetrics.


        :param unique_views: The unique_views of this ShmMetrics.
        :type unique_views: UniqueViewsMetric
        """

        self._unique_views = unique_views

    @property
    def video_codec(self):
        """Gets the video_codec of this ShmMetrics.


        :return: The video_codec of this ShmMetrics.
        :rtype: VideoCodecMetric
        """
        return self._video_codec

    @video_codec.setter
    def video_codec(self, video_codec):
        """Sets the video_codec of this ShmMetrics.


        :param video_codec: The video_codec of this ShmMetrics.
        :type video_codec: VideoCodecMetric
        """

        self._video_codec = video_codec

    @property
    def width(self):
        """Gets the width of this ShmMetrics.


        :return: The width of this ShmMetrics.
        :rtype: WidthMetric
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this ShmMetrics.


        :param width: The width of this ShmMetrics.
        :type width: WidthMetric
        """

        self._width = width
