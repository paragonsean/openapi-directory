# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UsageTimeTranscoder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted: bool=None, id: int=None, name: str=None, seconds_billed: int=None, seconds_used: int=None):
        """UsageTimeTranscoder - a model defined in OpenAPI

        :param deleted: The deleted of this UsageTimeTranscoder.
        :param id: The id of this UsageTimeTranscoder.
        :param name: The name of this UsageTimeTranscoder.
        :param seconds_billed: The seconds_billed of this UsageTimeTranscoder.
        :param seconds_used: The seconds_used of this UsageTimeTranscoder.
        """
        self.openapi_types = {
            'deleted': bool,
            'id': int,
            'name': str,
            'seconds_billed': int,
            'seconds_used': int
        }

        self.attribute_map = {
            'deleted': 'deleted',
            'id': 'id',
            'name': 'name',
            'seconds_billed': 'seconds_billed',
            'seconds_used': 'seconds_used'
        }

        self._deleted = deleted
        self._id = id
        self._name = name
        self._seconds_billed = seconds_billed
        self._seconds_used = seconds_used

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageTimeTranscoder':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usage_time_transcoder of this UsageTimeTranscoder.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted(self):
        """Gets the deleted of this UsageTimeTranscoder.

        A value of <strong>true</strong> indicates that the live stream or transcoder has been removed from Wowza Streaming Cloud.

        :return: The deleted of this UsageTimeTranscoder.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this UsageTimeTranscoder.

        A value of <strong>true</strong> indicates that the live stream or transcoder has been removed from Wowza Streaming Cloud.

        :param deleted: The deleted of this UsageTimeTranscoder.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def id(self):
        """Gets the id of this UsageTimeTranscoder.

        The unique alphanumeric string that identifies the live stream or transcoder.

        :return: The id of this UsageTimeTranscoder.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UsageTimeTranscoder.

        The unique alphanumeric string that identifies the live stream or transcoder.

        :param id: The id of this UsageTimeTranscoder.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this UsageTimeTranscoder.

        A descriptive name for the live stream or transcoder.

        :return: The name of this UsageTimeTranscoder.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UsageTimeTranscoder.

        A descriptive name for the live stream or transcoder.

        :param name: The name of this UsageTimeTranscoder.
        :type name: str
        """

        self._name = name

    @property
    def seconds_billed(self):
        """Gets the seconds_billed of this UsageTimeTranscoder.

        The amount of stream processing time, in seconds, that was billed for the live stream or transcoder.

        :return: The seconds_billed of this UsageTimeTranscoder.
        :rtype: int
        """
        return self._seconds_billed

    @seconds_billed.setter
    def seconds_billed(self, seconds_billed):
        """Sets the seconds_billed of this UsageTimeTranscoder.

        The amount of stream processing time, in seconds, that was billed for the live stream or transcoder.

        :param seconds_billed: The seconds_billed of this UsageTimeTranscoder.
        :type seconds_billed: int
        """

        self._seconds_billed = seconds_billed

    @property
    def seconds_used(self):
        """Gets the seconds_used of this UsageTimeTranscoder.

        The amount of time, in seconds, that it took for the live stream or transcoder to be processed.

        :return: The seconds_used of this UsageTimeTranscoder.
        :rtype: int
        """
        return self._seconds_used

    @seconds_used.setter
    def seconds_used(self, seconds_used):
        """Sets the seconds_used of this UsageTimeTranscoder.

        The amount of time, in seconds, that it took for the live stream or transcoder to be processed.

        :param seconds_used: The seconds_used of this UsageTimeTranscoder.
        :type seconds_used: int
        """

        self._seconds_used = seconds_used
