# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player3 import Player3
from openapi_server import util


class PlayerUpdateInput(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player: Player3=None):
        """PlayerUpdateInput - a model defined in OpenAPI

        :param player: The player of this PlayerUpdateInput.
        """
        self.openapi_types = {
            'player': Player3
        }

        self.attribute_map = {
            'player': 'player'
        }

        self._player = player

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlayerUpdateInput':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The player_update_input of this PlayerUpdateInput.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player(self):
        """Gets the player of this PlayerUpdateInput.


        :return: The player of this PlayerUpdateInput.
        :rtype: Player3
        """
        return self._player

    @player.setter
    def player(self, player):
        """Sets the player of this PlayerUpdateInput.


        :param player: The player of this PlayerUpdateInput.
        :type player: Player3
        """
        if player is None:
            raise ValueError("Invalid value for `player`, must not be `None`")

        self._player = player
