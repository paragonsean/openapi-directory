# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.array_of_stream_targets import ArrayOfStreamTargets
from openapi_server.models.hash_of_totals import HashOfTotals
from openapi_server import util


class UsageNetworkStreamTargets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_targets: ArrayOfStreamTargets=None, total: HashOfTotals=None):
        """UsageNetworkStreamTargets - a model defined in OpenAPI

        :param stream_targets: The stream_targets of this UsageNetworkStreamTargets.
        :param total: The total of this UsageNetworkStreamTargets.
        """
        self.openapi_types = {
            'stream_targets': ArrayOfStreamTargets,
            'total': HashOfTotals
        }

        self.attribute_map = {
            'stream_targets': 'stream_targets',
            'total': 'total'
        }

        self._stream_targets = stream_targets
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageNetworkStreamTargets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usage_network_stream_targets of this UsageNetworkStreamTargets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_targets(self):
        """Gets the stream_targets of this UsageNetworkStreamTargets.


        :return: The stream_targets of this UsageNetworkStreamTargets.
        :rtype: ArrayOfStreamTargets
        """
        return self._stream_targets

    @stream_targets.setter
    def stream_targets(self, stream_targets):
        """Sets the stream_targets of this UsageNetworkStreamTargets.


        :param stream_targets: The stream_targets of this UsageNetworkStreamTargets.
        :type stream_targets: ArrayOfStreamTargets
        """

        self._stream_targets = stream_targets

    @property
    def total(self):
        """Gets the total of this UsageNetworkStreamTargets.


        :return: The total of this UsageNetworkStreamTargets.
        :rtype: HashOfTotals
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this UsageNetworkStreamTargets.


        :param total: The total of this UsageNetworkStreamTargets.
        :type total: HashOfTotals
        """

        self._total = total
