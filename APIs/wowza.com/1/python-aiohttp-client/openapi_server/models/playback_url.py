# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlaybackUrl(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, output_id: str=None, url: str=None):
        """PlaybackUrl - a model defined in OpenAPI

        :param name: The name of this PlaybackUrl.
        :param output_id: The output_id of this PlaybackUrl.
        :param url: The url of this PlaybackUrl.
        """
        self.openapi_types = {
            'name': str,
            'output_id': str,
            'url': str
        }

        self.attribute_map = {
            'name': 'name',
            'output_id': 'output_id',
            'url': 'url'
        }

        self._name = name
        self._output_id = output_id
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlaybackUrl':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The playback_url of this PlaybackUrl.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this PlaybackUrl.

        The name of the playback URL: <strong>source</strong>, <strong>default</strong>, <strong>passthrough</strong>, or the output rendition's resolution.

        :return: The name of this PlaybackUrl.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this PlaybackUrl.

        The name of the playback URL: <strong>source</strong>, <strong>default</strong>, <strong>passthrough</strong>, or the output rendition's resolution.

        :param name: The name of this PlaybackUrl.
        :type name: str
        """

        self._name = name

    @property
    def output_id(self):
        """Gets the output_id of this PlaybackUrl.

        Only for output rendition-based playback URLs, not source playback URLs. The unique alphanumeric string that identifies the output rendition.

        :return: The output_id of this PlaybackUrl.
        :rtype: str
        """
        return self._output_id

    @output_id.setter
    def output_id(self, output_id):
        """Sets the output_id of this PlaybackUrl.

        Only for output rendition-based playback URLs, not source playback URLs. The unique alphanumeric string that identifies the output rendition.

        :param output_id: The output_id of this PlaybackUrl.
        :type output_id: str
        """

        self._output_id = output_id

    @property
    def url(self):
        """Gets the url of this PlaybackUrl.

        The playback URL for the source or output rendition.

        :return: The url of this PlaybackUrl.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PlaybackUrl.

        The playback URL for the source or output rendition.

        :param url: The url of this PlaybackUrl.
        :type url: str
        """

        self._url = url
