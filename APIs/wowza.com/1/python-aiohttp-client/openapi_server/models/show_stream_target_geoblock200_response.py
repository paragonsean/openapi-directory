# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.geoblock import Geoblock
from openapi_server import util


class ShowStreamTargetGeoblock200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, geoblock: Geoblock=None):
        """ShowStreamTargetGeoblock200Response - a model defined in OpenAPI

        :param geoblock: The geoblock of this ShowStreamTargetGeoblock200Response.
        """
        self.openapi_types = {
            'geoblock': Geoblock
        }

        self.attribute_map = {
            'geoblock': 'geoblock'
        }

        self._geoblock = geoblock

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShowStreamTargetGeoblock200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The showStreamTargetGeoblock_200_response of this ShowStreamTargetGeoblock200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def geoblock(self):
        """Gets the geoblock of this ShowStreamTargetGeoblock200Response.


        :return: The geoblock of this ShowStreamTargetGeoblock200Response.
        :rtype: Geoblock
        """
        return self._geoblock

    @geoblock.setter
    def geoblock(self, geoblock):
        """Sets the geoblock of this ShowStreamTargetGeoblock200Response.


        :param geoblock: The geoblock of this ShowStreamTargetGeoblock200Response.
        :type geoblock: Geoblock
        """
        if geoblock is None:
            raise ValueError("Invalid value for `geoblock`, must not be `None`")

        self._geoblock = geoblock
