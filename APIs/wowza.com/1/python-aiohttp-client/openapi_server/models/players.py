# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.player import Player
from openapi_server import util


class Players(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, players: List[Player]=None):
        """Players - a model defined in OpenAPI

        :param players: The players of this Players.
        """
        self.openapi_types = {
            'players': List[Player]
        }

        self.attribute_map = {
            'players': 'players'
        }

        self._players = players

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Players':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The players of this Players.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def players(self):
        """Gets the players of this Players.


        :return: The players of this Players.
        :rtype: List[Player]
        """
        return self._players

    @players.setter
    def players(self, players):
        """Sets the players of this Players.


        :param players: The players of this Players.
        :type players: List[Player]
        """
        if players is None:
            raise ValueError("Invalid value for `players`, must not be `None`")

        self._players = players
