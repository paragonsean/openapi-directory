# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule2 import Schedule2
from openapi_server import util


class EnableSchedule200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedule: Schedule2=None):
        """EnableSchedule200Response - a model defined in OpenAPI

        :param schedule: The schedule of this EnableSchedule200Response.
        """
        self.openapi_types = {
            'schedule': Schedule2
        }

        self.attribute_map = {
            'schedule': 'schedule'
        }

        self._schedule = schedule

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EnableSchedule200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The enableSchedule_200_response of this EnableSchedule200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedule(self):
        """Gets the schedule of this EnableSchedule200Response.


        :return: The schedule of this EnableSchedule200Response.
        :rtype: Schedule2
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this EnableSchedule200Response.


        :param schedule: The schedule of this EnableSchedule200Response.
        :type schedule: Schedule2
        """
        if schedule is None:
            raise ValueError("Invalid value for `schedule`, must not be `None`")

        self._schedule = schedule
