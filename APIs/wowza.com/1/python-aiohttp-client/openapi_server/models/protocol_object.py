# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.the_name_of_the_protocol import TheNameOfTheProtocol
from openapi_server import util


class ProtocolObject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, protocol_name: TheNameOfTheProtocol=None):
        """ProtocolObject - a model defined in OpenAPI

        :param protocol_name: The protocol_name of this ProtocolObject.
        """
        self.openapi_types = {
            'protocol_name': TheNameOfTheProtocol
        }

        self.attribute_map = {
            'protocol_name': 'protocol_name'
        }

        self._protocol_name = protocol_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtocolObject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The protocol_object of this ProtocolObject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def protocol_name(self):
        """Gets the protocol_name of this ProtocolObject.


        :return: The protocol_name of this ProtocolObject.
        :rtype: TheNameOfTheProtocol
        """
        return self._protocol_name

    @protocol_name.setter
    def protocol_name(self, protocol_name):
        """Sets the protocol_name of this ProtocolObject.


        :param protocol_name: The protocol_name of this ProtocolObject.
        :type protocol_name: TheNameOfTheProtocol
        """

        self._protocol_name = protocol_name
