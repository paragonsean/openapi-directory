# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.schedule import Schedule
from openapi_server import util


class Transcoder4(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, schedules: List[Schedule]=None):
        """Transcoder4 - a model defined in OpenAPI

        :param schedules: The schedules of this Transcoder4.
        """
        self.openapi_types = {
            'schedules': List[Schedule]
        }

        self.attribute_map = {
            'schedules': 'schedules'
        }

        self._schedules = schedules

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Transcoder4':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The transcoder_4 of this Transcoder4.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def schedules(self):
        """Gets the schedules of this Transcoder4.

        Array of schedules of this transcoder. See /schedules for more details.

        :return: The schedules of this Transcoder4.
        :rtype: List[Schedule]
        """
        return self._schedules

    @schedules.setter
    def schedules(self, schedules):
        """Sets the schedules of this Transcoder4.

        Array of schedules of this transcoder. See /schedules for more details.

        :param schedules: The schedules of this Transcoder4.
        :type schedules: List[Schedule]
        """

        self._schedules = schedules
