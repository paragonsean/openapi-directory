# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.peak_recording import PeakRecording
from openapi_server import util


class UsageStoragePeakRecording(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, peak_recording: PeakRecording=None):
        """UsageStoragePeakRecording - a model defined in OpenAPI

        :param peak_recording: The peak_recording of this UsageStoragePeakRecording.
        """
        self.openapi_types = {
            'peak_recording': PeakRecording
        }

        self.attribute_map = {
            'peak_recording': 'peak_recording'
        }

        self._peak_recording = peak_recording

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageStoragePeakRecording':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usage_storage_peak_recording of this UsageStoragePeakRecording.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def peak_recording(self):
        """Gets the peak_recording of this UsageStoragePeakRecording.


        :return: The peak_recording of this UsageStoragePeakRecording.
        :rtype: PeakRecording
        """
        return self._peak_recording

    @peak_recording.setter
    def peak_recording(self, peak_recording):
        """Sets the peak_recording of this UsageStoragePeakRecording.


        :param peak_recording: The peak_recording of this UsageStoragePeakRecording.
        :type peak_recording: PeakRecording
        """

        self._peak_recording = peak_recording
