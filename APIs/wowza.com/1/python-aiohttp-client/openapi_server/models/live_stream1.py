# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LiveStream1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, connection_code: str=None):
        """LiveStream1 - a model defined in OpenAPI

        :param connection_code: The connection_code of this LiveStream1.
        """
        self.openapi_types = {
            'connection_code': str
        }

        self.attribute_map = {
            'connection_code': 'connection_code'
        }

        self._connection_code = connection_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LiveStream1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The live_stream_1 of this LiveStream1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def connection_code(self):
        """Gets the connection_code of this LiveStream1.

        A six-character, alphanumeric string that allows certain encoders, including Wowza Streaming Engine and the Wowza GoCoder app, to connect with Wowza Streaming Cloud. The code can be used once and expires 24 hours after it's created.

        :return: The connection_code of this LiveStream1.
        :rtype: str
        """
        return self._connection_code

    @connection_code.setter
    def connection_code(self, connection_code):
        """Sets the connection_code of this LiveStream1.

        A six-character, alphanumeric string that allows certain encoders, including Wowza Streaming Engine and the Wowza GoCoder app, to connect with Wowza Streaming Cloud. The code can be used once and expires 24 hours after it's created.

        :param connection_code: The connection_code of this LiveStream1.
        :type connection_code: str
        """

        self._connection_code = connection_code
