# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.uptime import Uptime
from openapi_server import util


class Uptimes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uptimes: List[Uptime]=None):
        """Uptimes - a model defined in OpenAPI

        :param uptimes: The uptimes of this Uptimes.
        """
        self.openapi_types = {
            'uptimes': List[Uptime]
        }

        self.attribute_map = {
            'uptimes': 'uptimes'
        }

        self._uptimes = uptimes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Uptimes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The uptimes of this Uptimes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uptimes(self):
        """Gets the uptimes of this Uptimes.


        :return: The uptimes of this Uptimes.
        :rtype: List[Uptime]
        """
        return self._uptimes

    @uptimes.setter
    def uptimes(self, uptimes):
        """Sets the uptimes of this Uptimes.


        :param uptimes: The uptimes of this Uptimes.
        :type uptimes: List[Uptime]
        """
        if uptimes is None:
            raise ValueError("Invalid value for `uptimes`, must not be `None`")

        self._uptimes = uptimes
