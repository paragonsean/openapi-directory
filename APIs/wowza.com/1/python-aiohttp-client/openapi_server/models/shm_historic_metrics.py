# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.audio_codec_metric import AudioCodecMetric
from openapi_server.models.bits_in_rate_metric import BitsInRateMetric
from openapi_server.models.bits_out_rate_metric import BitsOutRateMetric
from openapi_server.models.cpu_idle_metric import CpuIdleMetric
from openapi_server.models.frame_rate_metric import FrameRateMetric
from openapi_server.models.height_metric import HeightMetric
from openapi_server.models.keyframe_interval_metric import KeyframeIntervalMetric
from openapi_server.models.video_codec_metric import VideoCodecMetric
from openapi_server.models.width_metric import WidthMetric
from openapi_server import util


class ShmHistoricMetrics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, audio_codec: AudioCodecMetric=None, bits_in_rate: BitsInRateMetric=None, bits_out_rate: BitsOutRateMetric=None, cpu_idle: CpuIdleMetric=None, created_at: str=None, frame_rate: FrameRateMetric=None, height: HeightMetric=None, keyframe_interval: KeyframeIntervalMetric=None, video_codec: VideoCodecMetric=None, width: WidthMetric=None):
        """ShmHistoricMetrics - a model defined in OpenAPI

        :param audio_codec: The audio_codec of this ShmHistoricMetrics.
        :param bits_in_rate: The bits_in_rate of this ShmHistoricMetrics.
        :param bits_out_rate: The bits_out_rate of this ShmHistoricMetrics.
        :param cpu_idle: The cpu_idle of this ShmHistoricMetrics.
        :param created_at: The created_at of this ShmHistoricMetrics.
        :param frame_rate: The frame_rate of this ShmHistoricMetrics.
        :param height: The height of this ShmHistoricMetrics.
        :param keyframe_interval: The keyframe_interval of this ShmHistoricMetrics.
        :param video_codec: The video_codec of this ShmHistoricMetrics.
        :param width: The width of this ShmHistoricMetrics.
        """
        self.openapi_types = {
            'audio_codec': AudioCodecMetric,
            'bits_in_rate': BitsInRateMetric,
            'bits_out_rate': BitsOutRateMetric,
            'cpu_idle': CpuIdleMetric,
            'created_at': str,
            'frame_rate': FrameRateMetric,
            'height': HeightMetric,
            'keyframe_interval': KeyframeIntervalMetric,
            'video_codec': VideoCodecMetric,
            'width': WidthMetric
        }

        self.attribute_map = {
            'audio_codec': 'audio_codec',
            'bits_in_rate': 'bits_in_rate',
            'bits_out_rate': 'bits_out_rate',
            'cpu_idle': 'cpu_idle',
            'created_at': 'created_at',
            'frame_rate': 'frame_rate',
            'height': 'height',
            'keyframe_interval': 'keyframe_interval',
            'video_codec': 'video_codec',
            'width': 'width'
        }

        self._audio_codec = audio_codec
        self._bits_in_rate = bits_in_rate
        self._bits_out_rate = bits_out_rate
        self._cpu_idle = cpu_idle
        self._created_at = created_at
        self._frame_rate = frame_rate
        self._height = height
        self._keyframe_interval = keyframe_interval
        self._video_codec = video_codec
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShmHistoricMetrics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The shm_historic_metrics of this ShmHistoricMetrics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def audio_codec(self):
        """Gets the audio_codec of this ShmHistoricMetrics.


        :return: The audio_codec of this ShmHistoricMetrics.
        :rtype: AudioCodecMetric
        """
        return self._audio_codec

    @audio_codec.setter
    def audio_codec(self, audio_codec):
        """Sets the audio_codec of this ShmHistoricMetrics.


        :param audio_codec: The audio_codec of this ShmHistoricMetrics.
        :type audio_codec: AudioCodecMetric
        """

        self._audio_codec = audio_codec

    @property
    def bits_in_rate(self):
        """Gets the bits_in_rate of this ShmHistoricMetrics.


        :return: The bits_in_rate of this ShmHistoricMetrics.
        :rtype: BitsInRateMetric
        """
        return self._bits_in_rate

    @bits_in_rate.setter
    def bits_in_rate(self, bits_in_rate):
        """Sets the bits_in_rate of this ShmHistoricMetrics.


        :param bits_in_rate: The bits_in_rate of this ShmHistoricMetrics.
        :type bits_in_rate: BitsInRateMetric
        """

        self._bits_in_rate = bits_in_rate

    @property
    def bits_out_rate(self):
        """Gets the bits_out_rate of this ShmHistoricMetrics.


        :return: The bits_out_rate of this ShmHistoricMetrics.
        :rtype: BitsOutRateMetric
        """
        return self._bits_out_rate

    @bits_out_rate.setter
    def bits_out_rate(self, bits_out_rate):
        """Sets the bits_out_rate of this ShmHistoricMetrics.


        :param bits_out_rate: The bits_out_rate of this ShmHistoricMetrics.
        :type bits_out_rate: BitsOutRateMetric
        """

        self._bits_out_rate = bits_out_rate

    @property
    def cpu_idle(self):
        """Gets the cpu_idle of this ShmHistoricMetrics.


        :return: The cpu_idle of this ShmHistoricMetrics.
        :rtype: CpuIdleMetric
        """
        return self._cpu_idle

    @cpu_idle.setter
    def cpu_idle(self, cpu_idle):
        """Sets the cpu_idle of this ShmHistoricMetrics.


        :param cpu_idle: The cpu_idle of this ShmHistoricMetrics.
        :type cpu_idle: CpuIdleMetric
        """

        self._cpu_idle = cpu_idle

    @property
    def created_at(self):
        """Gets the created_at of this ShmHistoricMetrics.

        The date and time that the stream health record was created.

        :return: The created_at of this ShmHistoricMetrics.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ShmHistoricMetrics.

        The date and time that the stream health record was created.

        :param created_at: The created_at of this ShmHistoricMetrics.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def frame_rate(self):
        """Gets the frame_rate of this ShmHistoricMetrics.


        :return: The frame_rate of this ShmHistoricMetrics.
        :rtype: FrameRateMetric
        """
        return self._frame_rate

    @frame_rate.setter
    def frame_rate(self, frame_rate):
        """Sets the frame_rate of this ShmHistoricMetrics.


        :param frame_rate: The frame_rate of this ShmHistoricMetrics.
        :type frame_rate: FrameRateMetric
        """

        self._frame_rate = frame_rate

    @property
    def height(self):
        """Gets the height of this ShmHistoricMetrics.


        :return: The height of this ShmHistoricMetrics.
        :rtype: HeightMetric
        """
        return self._height

    @height.setter
    def height(self, height):
        """Sets the height of this ShmHistoricMetrics.


        :param height: The height of this ShmHistoricMetrics.
        :type height: HeightMetric
        """

        self._height = height

    @property
    def keyframe_interval(self):
        """Gets the keyframe_interval of this ShmHistoricMetrics.


        :return: The keyframe_interval of this ShmHistoricMetrics.
        :rtype: KeyframeIntervalMetric
        """
        return self._keyframe_interval

    @keyframe_interval.setter
    def keyframe_interval(self, keyframe_interval):
        """Sets the keyframe_interval of this ShmHistoricMetrics.


        :param keyframe_interval: The keyframe_interval of this ShmHistoricMetrics.
        :type keyframe_interval: KeyframeIntervalMetric
        """

        self._keyframe_interval = keyframe_interval

    @property
    def video_codec(self):
        """Gets the video_codec of this ShmHistoricMetrics.


        :return: The video_codec of this ShmHistoricMetrics.
        :rtype: VideoCodecMetric
        """
        return self._video_codec

    @video_codec.setter
    def video_codec(self, video_codec):
        """Sets the video_codec of this ShmHistoricMetrics.


        :param video_codec: The video_codec of this ShmHistoricMetrics.
        :type video_codec: VideoCodecMetric
        """

        self._video_codec = video_codec

    @property
    def width(self):
        """Gets the width of this ShmHistoricMetrics.


        :return: The width of this ShmHistoricMetrics.
        :rtype: WidthMetric
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this ShmHistoricMetrics.


        :param width: The width of this ShmHistoricMetrics.
        :type width: WidthMetric
        """

        self._width = width
