# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stream_target7 import StreamTarget7
from openapi_server import util


class UsageViewerDataStreamTarget(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_target: StreamTarget7=None):
        """UsageViewerDataStreamTarget - a model defined in OpenAPI

        :param stream_target: The stream_target of this UsageViewerDataStreamTarget.
        """
        self.openapi_types = {
            'stream_target': StreamTarget7
        }

        self.attribute_map = {
            'stream_target': 'stream_target'
        }

        self._stream_target = stream_target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageViewerDataStreamTarget':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usage_viewer_data_stream_target of this UsageViewerDataStreamTarget.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_target(self):
        """Gets the stream_target of this UsageViewerDataStreamTarget.


        :return: The stream_target of this UsageViewerDataStreamTarget.
        :rtype: StreamTarget7
        """
        return self._stream_target

    @stream_target.setter
    def stream_target(self, stream_target):
        """Sets the stream_target of this UsageViewerDataStreamTarget.


        :param stream_target: The stream_target of this UsageViewerDataStreamTarget.
        :type stream_target: StreamTarget7
        """

        self._stream_target = stream_target
