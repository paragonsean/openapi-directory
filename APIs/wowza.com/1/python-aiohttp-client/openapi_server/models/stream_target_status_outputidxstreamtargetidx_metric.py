# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, status: str=None, text: str=None, units: str=None, value: str=None):
        """StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric - a model defined in OpenAPI

        :param status: The status of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :param text: The text of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :param units: The units of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :param value: The value of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        """
        self.openapi_types = {
            'status': str,
            'text': str,
            'units': str,
            'value': str
        }

        self.attribute_map = {
            'status': 'status',
            'text': 'text',
            'units': 'units',
            'value': 'value'
        }

        self._status = status
        self._text = text
        self._units = units
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The stream_target_status_OUTPUTIDX_STREAMTARGETIDX_metric of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def status(self):
        """Gets the status of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).

        :return: The status of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        The status of the current key. Possible values are <strong>normal</strong> (everything is fine), <strong>warning</strong> (something may be misconfigured), and <strong>no_data</strong> (no data was returned, perhaps because the instance isn't running).

        :param status: The status of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :type status: str
        """

        self._status = status

    @property
    def text(self):
        """Gets the text of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        A message related to the value and status of the current key. Usually blank unless there's a warning status.

        :return: The text of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        A message related to the value and status of the current key. Usually blank unless there's a warning status.

        :param text: The text of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :type text: str
        """

        self._text = text

    @property
    def units(self):
        """Gets the units of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.

        :return: The units of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :rtype: str
        """
        return self._units

    @units.setter
    def units(self, units):
        """Sets the units of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        The unit of the returned value, such as <strong>Kbps</strong>, <strong>bps</strong>, <strong>%</strong>, <strong>FPS</strong>, or <strong>GOP</strong>.

        :param units: The units of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :type units: str
        """

        self._units = units

    @property
    def value(self):
        """Gets the value of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        The value of the associated key.

        :return: The value of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.

        The value of the associated key.

        :param value: The value of this StreamTargetStatusOUTPUTIDXSTREAMTARGETIDXMetric.
        :type value: str
        """

        self._value = value
