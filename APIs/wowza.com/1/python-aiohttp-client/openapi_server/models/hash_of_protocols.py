# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.hash_of_zones import HashOfZones
from openapi_server import util


class HashOfProtocols(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, zones: HashOfZones=None):
        """HashOfProtocols - a model defined in OpenAPI

        :param zones: The zones of this HashOfProtocols.
        """
        self.openapi_types = {
            'zones': HashOfZones
        }

        self.attribute_map = {
            'zones': 'zones'
        }

        self._zones = zones

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HashOfProtocols':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hash_of_protocols of this HashOfProtocols.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def zones(self):
        """Gets the zones of this HashOfProtocols.


        :return: The zones of this HashOfProtocols.
        :rtype: HashOfZones
        """
        return self._zones

    @zones.setter
    def zones(self, zones):
        """Sets the zones of this HashOfProtocols.


        :param zones: The zones of this HashOfProtocols.
        :type zones: HashOfZones
        """

        self._zones = zones
