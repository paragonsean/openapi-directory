# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Transcoder7(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, thumbnail_url: str=None):
        """Transcoder7 - a model defined in OpenAPI

        :param thumbnail_url: The thumbnail_url of this Transcoder7.
        """
        self.openapi_types = {
            'thumbnail_url': str
        }

        self.attribute_map = {
            'thumbnail_url': 'thumbnail_url'
        }

        self._thumbnail_url = thumbnail_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Transcoder7':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The transcoder_7 of this Transcoder7.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def thumbnail_url(self):
        """Gets the thumbnail_url of this Transcoder7.

        The URL to receive the preview thumbnail.

        :return: The thumbnail_url of this Transcoder7.
        :rtype: str
        """
        return self._thumbnail_url

    @thumbnail_url.setter
    def thumbnail_url(self, thumbnail_url):
        """Sets the thumbnail_url of this Transcoder7.

        The URL to receive the preview thumbnail.

        :param thumbnail_url: The thumbnail_url of this Transcoder7.
        :type thumbnail_url: str
        """

        self._thumbnail_url = thumbnail_url
