# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PeakRecording(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bytes_total: int=None):
        """PeakRecording - a model defined in OpenAPI

        :param bytes_total: The bytes_total of this PeakRecording.
        """
        self.openapi_types = {
            'bytes_total': int
        }

        self.attribute_map = {
            'bytes_total': 'bytes_total'
        }

        self._bytes_total = bytes_total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PeakRecording':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The peak_recording of this PeakRecording.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bytes_total(self):
        """Gets the bytes_total of this PeakRecording.

        The amount, in bytes, used to store recordings during the selected time frame. If the time frame is in the past, <em>bytes_total</em> is the amount of storage that was used and billed. If the time frame includes the current billing period, <em>bytes_total</em> is the greatest amount of content stored in Wowza Streaming Cloud at any point to date in the billing period.

        :return: The bytes_total of this PeakRecording.
        :rtype: int
        """
        return self._bytes_total

    @bytes_total.setter
    def bytes_total(self, bytes_total):
        """Sets the bytes_total of this PeakRecording.

        The amount, in bytes, used to store recordings during the selected time frame. If the time frame is in the past, <em>bytes_total</em> is the amount of storage that was used and billed. If the time frame includes the current billing period, <em>bytes_total</em> is the greatest amount of content stored in Wowza Streaming Cloud at any point to date in the billing period.

        :param bytes_total: The bytes_total of this PeakRecording.
        :type bytes_total: int
        """

        self._bytes_total = bytes_total
