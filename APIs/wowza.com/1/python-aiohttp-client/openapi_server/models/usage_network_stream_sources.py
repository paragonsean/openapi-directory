# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.usage_network_stream_source import UsageNetworkStreamSource
from openapi_server import util


class UsageNetworkStreamSources(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, stream_sources: List[UsageNetworkStreamSource]=None):
        """UsageNetworkStreamSources - a model defined in OpenAPI

        :param stream_sources: The stream_sources of this UsageNetworkStreamSources.
        """
        self.openapi_types = {
            'stream_sources': List[UsageNetworkStreamSource]
        }

        self.attribute_map = {
            'stream_sources': 'stream_sources'
        }

        self._stream_sources = stream_sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsageNetworkStreamSources':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The usage_network_stream_sources of this UsageNetworkStreamSources.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def stream_sources(self):
        """Gets the stream_sources of this UsageNetworkStreamSources.


        :return: The stream_sources of this UsageNetworkStreamSources.
        :rtype: List[UsageNetworkStreamSource]
        """
        return self._stream_sources

    @stream_sources.setter
    def stream_sources(self, stream_sources):
        """Sets the stream_sources of this UsageNetworkStreamSources.


        :param stream_sources: The stream_sources of this UsageNetworkStreamSources.
        :type stream_sources: List[UsageNetworkStreamSource]
        """

        self._stream_sources = stream_sources
