# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.shm_metrics import ShmMetrics
from openapi_server import util


class ShowLiveStreamStats200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, live_stream: ShmMetrics=None):
        """ShowLiveStreamStats200Response - a model defined in OpenAPI

        :param live_stream: The live_stream of this ShowLiveStreamStats200Response.
        """
        self.openapi_types = {
            'live_stream': ShmMetrics
        }

        self.attribute_map = {
            'live_stream': 'live_stream'
        }

        self._live_stream = live_stream

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ShowLiveStreamStats200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The showLiveStreamStats_200_response of this ShowLiveStreamStats200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def live_stream(self):
        """Gets the live_stream of this ShowLiveStreamStats200Response.


        :return: The live_stream of this ShowLiveStreamStats200Response.
        :rtype: ShmMetrics
        """
        return self._live_stream

    @live_stream.setter
    def live_stream(self, live_stream):
        """Sets the live_stream of this ShowLiveStreamStats200Response.


        :param live_stream: The live_stream of this ShowLiveStreamStats200Response.
        :type live_stream: ShmMetrics
        """
        if live_stream is None:
            raise ValueError("Invalid value for `live_stream`, must not be `None`")

        self._live_stream = live_stream
