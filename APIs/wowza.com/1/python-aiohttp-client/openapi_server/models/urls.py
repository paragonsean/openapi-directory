# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.url import Url
from openapi_server import util


class Urls(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, urls: List[Url]=None):
        """Urls - a model defined in OpenAPI

        :param urls: The urls of this Urls.
        """
        self.openapi_types = {
            'urls': List[Url]
        }

        self.attribute_map = {
            'urls': 'urls'
        }

        self._urls = urls

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Urls':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The urls of this Urls.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def urls(self):
        """Gets the urls of this Urls.


        :return: The urls of this Urls.
        :rtype: List[Url]
        """
        return self._urls

    @urls.setter
    def urls(self, urls):
        """Sets the urls of this Urls.


        :param urls: The urls of this Urls.
        :type urls: List[Url]
        """
        if urls is None:
            raise ValueError("Invalid value for `urls`, must not be `None`")

        self._urls = urls
