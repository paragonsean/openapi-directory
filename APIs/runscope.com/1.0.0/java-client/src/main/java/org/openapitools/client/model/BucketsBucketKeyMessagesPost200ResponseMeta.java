/*
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * BucketsBucketKeyMessagesPost200ResponseMeta
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:05:55.705127-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class BucketsBucketKeyMessagesPost200ResponseMeta {
  public static final String SERIALIZED_NAME_ERROR_COUNT = "error_count";
  @SerializedName(SERIALIZED_NAME_ERROR_COUNT)
  private Integer errorCount;

  public static final String SERIALIZED_NAME_SUCCCESS_COUNT = "succcess_count";
  @SerializedName(SERIALIZED_NAME_SUCCCESS_COUNT)
  private Integer succcessCount;

  public static final String SERIALIZED_NAME_WARNING_COUNT = "warning_count";
  @SerializedName(SERIALIZED_NAME_WARNING_COUNT)
  private Integer warningCount;

  public BucketsBucketKeyMessagesPost200ResponseMeta() {
  }

  public BucketsBucketKeyMessagesPost200ResponseMeta errorCount(Integer errorCount) {
    this.errorCount = errorCount;
    return this;
  }

  /**
   * Get errorCount
   * @return errorCount
   */
  @javax.annotation.Nullable
  public Integer getErrorCount() {
    return errorCount;
  }

  public void setErrorCount(Integer errorCount) {
    this.errorCount = errorCount;
  }


  public BucketsBucketKeyMessagesPost200ResponseMeta succcessCount(Integer succcessCount) {
    this.succcessCount = succcessCount;
    return this;
  }

  /**
   * Get succcessCount
   * @return succcessCount
   */
  @javax.annotation.Nullable
  public Integer getSucccessCount() {
    return succcessCount;
  }

  public void setSucccessCount(Integer succcessCount) {
    this.succcessCount = succcessCount;
  }


  public BucketsBucketKeyMessagesPost200ResponseMeta warningCount(Integer warningCount) {
    this.warningCount = warningCount;
    return this;
  }

  /**
   * Get warningCount
   * @return warningCount
   */
  @javax.annotation.Nullable
  public Integer getWarningCount() {
    return warningCount;
  }

  public void setWarningCount(Integer warningCount) {
    this.warningCount = warningCount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BucketsBucketKeyMessagesPost200ResponseMeta bucketsBucketKeyMessagesPost200ResponseMeta = (BucketsBucketKeyMessagesPost200ResponseMeta) o;
    return Objects.equals(this.errorCount, bucketsBucketKeyMessagesPost200ResponseMeta.errorCount) &&
        Objects.equals(this.succcessCount, bucketsBucketKeyMessagesPost200ResponseMeta.succcessCount) &&
        Objects.equals(this.warningCount, bucketsBucketKeyMessagesPost200ResponseMeta.warningCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(errorCount, succcessCount, warningCount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BucketsBucketKeyMessagesPost200ResponseMeta {\n");
    sb.append("    errorCount: ").append(toIndentedString(errorCount)).append("\n");
    sb.append("    succcessCount: ").append(toIndentedString(succcessCount)).append("\n");
    sb.append("    warningCount: ").append(toIndentedString(warningCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("error_count");
    openapiFields.add("succcess_count");
    openapiFields.add("warning_count");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to BucketsBucketKeyMessagesPost200ResponseMeta
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BucketsBucketKeyMessagesPost200ResponseMeta.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BucketsBucketKeyMessagesPost200ResponseMeta is not found in the empty JSON string", BucketsBucketKeyMessagesPost200ResponseMeta.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BucketsBucketKeyMessagesPost200ResponseMeta.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BucketsBucketKeyMessagesPost200ResponseMeta` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BucketsBucketKeyMessagesPost200ResponseMeta.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BucketsBucketKeyMessagesPost200ResponseMeta' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BucketsBucketKeyMessagesPost200ResponseMeta> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BucketsBucketKeyMessagesPost200ResponseMeta.class));

       return (TypeAdapter<T>) new TypeAdapter<BucketsBucketKeyMessagesPost200ResponseMeta>() {
           @Override
           public void write(JsonWriter out, BucketsBucketKeyMessagesPost200ResponseMeta value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BucketsBucketKeyMessagesPost200ResponseMeta read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of BucketsBucketKeyMessagesPost200ResponseMeta given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of BucketsBucketKeyMessagesPost200ResponseMeta
   * @throws IOException if the JSON string is invalid with respect to BucketsBucketKeyMessagesPost200ResponseMeta
   */
  public static BucketsBucketKeyMessagesPost200ResponseMeta fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BucketsBucketKeyMessagesPost200ResponseMeta.class);
  }

  /**
   * Convert an instance of BucketsBucketKeyMessagesPost200ResponseMeta to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

