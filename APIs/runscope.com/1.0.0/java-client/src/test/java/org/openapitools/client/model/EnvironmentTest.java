/*
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Agent;
import org.openapitools.client.model.Integration;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Environment
 */
public class EnvironmentTest {
    private final Environment model = new Environment();

    /**
     * Model tests for Environment
     */
    @Test
    public void testEnvironment() {
        // TODO: test Environment
    }

    /**
     * Test the property 'auth'
     */
    @Test
    public void authTest() {
        // TODO: test auth
    }

    /**
     * Test the property 'clientCertificate'
     */
    @Test
    public void clientCertificateTest() {
        // TODO: test clientCertificate
    }

    /**
     * Test the property 'emails'
     */
    @Test
    public void emailsTest() {
        // TODO: test emails
    }

    /**
     * Test the property 'exportedAt'
     */
    @Test
    public void exportedAtTest() {
        // TODO: test exportedAt
    }

    /**
     * Test the property 'headers'
     */
    @Test
    public void headersTest() {
        // TODO: test headers
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'initialScriptHash'
     */
    @Test
    public void initialScriptHashTest() {
        // TODO: test initialScriptHash
    }

    /**
     * Test the property 'initialVariables'
     */
    @Test
    public void initialVariablesTest() {
        // TODO: test initialVariables
    }

    /**
     * Test the property 'integrations'
     */
    @Test
    public void integrationsTest() {
        // TODO: test integrations
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'parentEnvironmentId'
     */
    @Test
    public void parentEnvironmentIdTest() {
        // TODO: test parentEnvironmentId
    }

    /**
     * Test the property 'preserveCookies'
     */
    @Test
    public void preserveCookiesTest() {
        // TODO: test preserveCookies
    }

    /**
     * Test the property 'regions'
     */
    @Test
    public void regionsTest() {
        // TODO: test regions
    }

    /**
     * Test the property 'remoteAgents'
     */
    @Test
    public void remoteAgentsTest() {
        // TODO: test remoteAgents
    }

    /**
     * Test the property 'retryOnFailure'
     */
    @Test
    public void retryOnFailureTest() {
        // TODO: test retryOnFailure
    }

    /**
     * Test the property 'script'
     */
    @Test
    public void scriptTest() {
        // TODO: test script
    }

    /**
     * Test the property 'scriptLibrary'
     */
    @Test
    public void scriptLibraryTest() {
        // TODO: test scriptLibrary
    }

    /**
     * Test the property 'stopOnFailure'
     */
    @Test
    public void stopOnFailureTest() {
        // TODO: test stopOnFailure
    }

    /**
     * Test the property 'testId'
     */
    @Test
    public void testIdTest() {
        // TODO: test testId
    }

    /**
     * Test the property 'verifySsl'
     */
    @Test
    public void verifySslTest() {
        // TODO: test verifySsl
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'webhooks'
     */
    @Test
    public void webhooksTest() {
        // TODO: test webhooks
    }

}
