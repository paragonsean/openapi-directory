/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TestCreatedBy from './TestCreatedBy';

/**
 * The Test model module.
 * @module model/Test
 * @version 1.0.0
 */
class Test {
    /**
     * Constructs a new <code>Test</code>.
     * @alias module:model/Test
     * @param name {String} The name for the test.
     */
    constructor(name) { 
        
        Test.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Test</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Test} obj Optional instance to populate.
     * @return {module:model/Test} The populated <code>Test</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Test();

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = TestCreatedBy.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('default_environment_id')) {
                obj['default_environment_id'] = ApiClient.convertToType(data['default_environment_id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last_run')) {
                obj['last_run'] = ApiClient.convertToType(data['last_run'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('trigger_url')) {
                obj['trigger_url'] = ApiClient.convertToType(data['trigger_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Test</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Test</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Test.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `created_by`
        if (data['created_by']) { // data not null
          TestCreatedBy.validateJSON(data['created_by']);
        }
        // ensure the json data is a string
        if (data['default_environment_id'] && !(typeof data['default_environment_id'] === 'string' || data['default_environment_id'] instanceof String)) {
            throw new Error("Expected the field `default_environment_id` to be a primitive type in the JSON string but got " + data['default_environment_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['trigger_url'] && !(typeof data['trigger_url'] === 'string' || data['trigger_url'] instanceof String)) {
            throw new Error("Expected the field `trigger_url` to be a primitive type in the JSON string but got " + data['trigger_url']);
        }

        return true;
    }


}

Test.RequiredProperties = ["name"];

/**
 * The date the test was created in seconds (Unix time stamp format).
 * @member {Number} created_at
 */
Test.prototype['created_at'] = undefined;

/**
 * @member {module:model/TestCreatedBy} created_by
 */
Test.prototype['created_by'] = undefined;

/**
 * @member {String} default_environment_id
 */
Test.prototype['default_environment_id'] = undefined;

/**
 * The description for the test.
 * @member {String} description
 */
Test.prototype['description'] = undefined;

/**
 * @member {String} id
 */
Test.prototype['id'] = undefined;

/**
 * @member {Object} last_run
 */
Test.prototype['last_run'] = undefined;

/**
 * The name for the test.
 * @member {String} name
 */
Test.prototype['name'] = undefined;

/**
 * @member {String} trigger_url
 */
Test.prototype['trigger_url'] = undefined;






export default Test;

