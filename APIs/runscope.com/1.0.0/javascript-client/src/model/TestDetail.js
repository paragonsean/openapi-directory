/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Environment from './Environment';
import Schedule from './Schedule';
import Test from './Test';
import TestCreatedBy from './TestCreatedBy';

/**
 * The TestDetail model module.
 * @module model/TestDetail
 * @version 1.0.0
 */
class TestDetail {
    /**
     * Constructs a new <code>TestDetail</code>.
     * @alias module:model/TestDetail
     * @implements module:model/Test
     * @param name {String} The name for the test.
     */
    constructor(name) { 
        Test.initialize(this, name);
        TestDetail.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>TestDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestDetail} obj Optional instance to populate.
     * @return {module:model/TestDetail} The populated <code>TestDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestDetail();
            Test.constructFromObject(data, obj);

            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Number');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = TestCreatedBy.constructFromObject(data['created_by']);
            }
            if (data.hasOwnProperty('default_environment_id')) {
                obj['default_environment_id'] = ApiClient.convertToType(data['default_environment_id'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last_run')) {
                obj['last_run'] = ApiClient.convertToType(data['last_run'], Object);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('trigger_url')) {
                obj['trigger_url'] = ApiClient.convertToType(data['trigger_url'], 'String');
            }
            if (data.hasOwnProperty('environments')) {
                obj['environments'] = Environment.constructFromObject(data['environments']);
            }
            if (data.hasOwnProperty('exported_at')) {
                obj['exported_at'] = ApiClient.convertToType(data['exported_at'], 'Number');
            }
            if (data.hasOwnProperty('schedules')) {
                obj['schedules'] = ApiClient.convertToType(data['schedules'], [Schedule]);
            }
            if (data.hasOwnProperty('steps')) {
                obj['steps'] = ApiClient.convertToType(data['steps'], [Object]);
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestDetail</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TestDetail.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `created_by`
        if (data['created_by']) { // data not null
          TestCreatedBy.validateJSON(data['created_by']);
        }
        // ensure the json data is a string
        if (data['default_environment_id'] && !(typeof data['default_environment_id'] === 'string' || data['default_environment_id'] instanceof String)) {
            throw new Error("Expected the field `default_environment_id` to be a primitive type in the JSON string but got " + data['default_environment_id']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['trigger_url'] && !(typeof data['trigger_url'] === 'string' || data['trigger_url'] instanceof String)) {
            throw new Error("Expected the field `trigger_url` to be a primitive type in the JSON string but got " + data['trigger_url']);
        }
        // validate the optional field `environments`
        if (data['environments']) { // data not null
          Environment.validateJSON(data['environments']);
        }
        if (data['schedules']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['schedules'])) {
                throw new Error("Expected the field `schedules` to be an array in the JSON data but got " + data['schedules']);
            }
            // validate the optional field `schedules` (array)
            for (const item of data['schedules']) {
                Schedule.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['steps'])) {
            throw new Error("Expected the field `steps` to be an array in the JSON data but got " + data['steps']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

TestDetail.RequiredProperties = ["name"];

/**
 * The date the test was created in seconds (Unix time stamp format).
 * @member {Number} created_at
 */
TestDetail.prototype['created_at'] = undefined;

/**
 * @member {module:model/TestCreatedBy} created_by
 */
TestDetail.prototype['created_by'] = undefined;

/**
 * @member {String} default_environment_id
 */
TestDetail.prototype['default_environment_id'] = undefined;

/**
 * The description for the test.
 * @member {String} description
 */
TestDetail.prototype['description'] = undefined;

/**
 * @member {String} id
 */
TestDetail.prototype['id'] = undefined;

/**
 * @member {Object} last_run
 */
TestDetail.prototype['last_run'] = undefined;

/**
 * The name for the test.
 * @member {String} name
 */
TestDetail.prototype['name'] = undefined;

/**
 * @member {String} trigger_url
 */
TestDetail.prototype['trigger_url'] = undefined;

/**
 * @member {module:model/Environment} environments
 */
TestDetail.prototype['environments'] = undefined;

/**
 * @member {Number} exported_at
 */
TestDetail.prototype['exported_at'] = undefined;

/**
 * @member {Array.<module:model/Schedule>} schedules
 */
TestDetail.prototype['schedules'] = undefined;

/**
 * @member {Array.<Object>} steps
 */
TestDetail.prototype['steps'] = undefined;

/**
 * @member {String} version
 */
TestDetail.prototype['version'] = undefined;


// Implement Test interface:
/**
 * The date the test was created in seconds (Unix time stamp format).
 * @member {Number} created_at
 */
Test.prototype['created_at'] = undefined;
/**
 * @member {module:model/TestCreatedBy} created_by
 */
Test.prototype['created_by'] = undefined;
/**
 * @member {String} default_environment_id
 */
Test.prototype['default_environment_id'] = undefined;
/**
 * The description for the test.
 * @member {String} description
 */
Test.prototype['description'] = undefined;
/**
 * @member {String} id
 */
Test.prototype['id'] = undefined;
/**
 * @member {Object} last_run
 */
Test.prototype['last_run'] = undefined;
/**
 * The name for the test.
 * @member {String} name
 */
Test.prototype['name'] = undefined;
/**
 * @member {String} trigger_url
 */
Test.prototype['trigger_url'] = undefined;




export default TestDetail;

