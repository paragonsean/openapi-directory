/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RunscopeApi);
  }
}(this, function(expect, RunscopeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RunscopeApi.Environment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Environment', function() {
    it('should create an instance of Environment', function() {
      // uncomment below and update the code to test Environment
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be.a(RunscopeApi.Environment);
    });

    it('should have the property auth (base name: "auth")', function() {
      // uncomment below and update the code to test the property auth
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property clientCertificate (base name: "client_certificate")', function() {
      // uncomment below and update the code to test the property clientCertificate
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property emails (base name: "emails")', function() {
      // uncomment below and update the code to test the property emails
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property exportedAt (base name: "exported_at")', function() {
      // uncomment below and update the code to test the property exportedAt
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property headers (base name: "headers")', function() {
      // uncomment below and update the code to test the property headers
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property initialScriptHash (base name: "initial_script_hash")', function() {
      // uncomment below and update the code to test the property initialScriptHash
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property initialVariables (base name: "initial_variables")', function() {
      // uncomment below and update the code to test the property initialVariables
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property integrations (base name: "integrations")', function() {
      // uncomment below and update the code to test the property integrations
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property parentEnvironmentId (base name: "parent_environment_id")', function() {
      // uncomment below and update the code to test the property parentEnvironmentId
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property preserveCookies (base name: "preserve_cookies")', function() {
      // uncomment below and update the code to test the property preserveCookies
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property regions (base name: "regions")', function() {
      // uncomment below and update the code to test the property regions
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property remoteAgents (base name: "remote_agents")', function() {
      // uncomment below and update the code to test the property remoteAgents
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property retryOnFailure (base name: "retry_on_failure")', function() {
      // uncomment below and update the code to test the property retryOnFailure
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property script (base name: "script")', function() {
      // uncomment below and update the code to test the property script
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property scriptLibrary (base name: "script_library")', function() {
      // uncomment below and update the code to test the property scriptLibrary
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property stopOnFailure (base name: "stop_on_failure")', function() {
      // uncomment below and update the code to test the property stopOnFailure
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property testId (base name: "test_id")', function() {
      // uncomment below and update the code to test the property testId
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property verifySsl (base name: "verify_ssl")', function() {
      // uncomment below and update the code to test the property verifySsl
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property version (base name: "version")', function() {
      // uncomment below and update the code to test the property version
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

    it('should have the property webhooks (base name: "webhooks")', function() {
      // uncomment below and update the code to test the property webhooks
      //var instance = new RunscopeApi.Environment();
      //expect(instance).to.be();
    });

  });

}));
