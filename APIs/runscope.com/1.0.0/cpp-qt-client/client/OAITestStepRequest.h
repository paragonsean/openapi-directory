/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestStepRequest.h
 *
 * 
 */

#ifndef OAITestStepRequest_H
#define OAITestStepRequest_H

#include <QJsonObject>

#include "OAIAssertion.h"
#include "OAIObject.h"
#include "OAIVariable.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAssertion;
class OAIVariable;

class OAITestStepRequest : public OAIObject {
public:
    OAITestStepRequest();
    OAITestStepRequest(QString json);
    ~OAITestStepRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getStepType() const;
    void setStepType(const QString &step_type);
    bool is_step_type_Set() const;
    bool is_step_type_Valid() const;

    QList<OAIAssertion> getAssertions() const;
    void setAssertions(const QList<OAIAssertion> &assertions);
    bool is_assertions_Set() const;
    bool is_assertions_Valid() const;

    OAIObject getAuth() const;
    void setAuth(const OAIObject &auth);
    bool is_auth_Set() const;
    bool is_auth_Valid() const;

    QList<QString> getBeforeScripts() const;
    void setBeforeScripts(const QList<QString> &before_scripts);
    bool is_before_scripts_Set() const;
    bool is_before_scripts_Valid() const;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    OAIObject getForm() const;
    void setForm(const OAIObject &form);
    bool is_form_Set() const;
    bool is_form_Valid() const;

    OAIObject getHeaders() const;
    void setHeaders(const OAIObject &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getMethod() const;
    void setMethod(const QString &method);
    bool is_method_Set() const;
    bool is_method_Valid() const;

    QString getNote() const;
    void setNote(const QString &note);
    bool is_note_Set() const;
    bool is_note_Valid() const;

    QList<QString> getScripts() const;
    void setScripts(const QList<QString> &scripts);
    bool is_scripts_Set() const;
    bool is_scripts_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QList<OAIVariable> getVariables() const;
    void setVariables(const QList<OAIVariable> &variables);
    bool is_variables_Set() const;
    bool is_variables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_step_type;
    bool m_step_type_isSet;
    bool m_step_type_isValid;

    QList<OAIAssertion> m_assertions;
    bool m_assertions_isSet;
    bool m_assertions_isValid;

    OAIObject m_auth;
    bool m_auth_isSet;
    bool m_auth_isValid;

    QList<QString> m_before_scripts;
    bool m_before_scripts_isSet;
    bool m_before_scripts_isValid;

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    OAIObject m_form;
    bool m_form_isSet;
    bool m_form_isValid;

    OAIObject m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_method;
    bool m_method_isSet;
    bool m_method_isValid;

    QString m_note;
    bool m_note_isSet;
    bool m_note_isValid;

    QList<QString> m_scripts;
    bool m_scripts_isSet;
    bool m_scripts_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QList<OAIVariable> m_variables;
    bool m_variables_isSet;
    bool m_variables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestStepRequest)

#endif // OAITestStepRequest_H
