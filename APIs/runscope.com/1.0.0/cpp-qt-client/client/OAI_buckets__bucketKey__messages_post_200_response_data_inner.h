/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_buckets__bucketKey__messages_post_200_response_data_inner.h
 *
 * 
 */

#ifndef OAI_buckets__bucketKey__messages_post_200_response_data_inner_H
#define OAI_buckets__bucketKey__messages_post_200_response_data_inner_H

#include <QJsonObject>

#include "OAI_buckets__bucketKey__messages_post_200_response_data_inner_error.h"
#include "OAI_buckets__bucketKey__messages_post_200_response_data_inner_warning.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_buckets__bucketKey__messages_post_200_response_data_inner_error;
class OAI_buckets__bucketKey__messages_post_200_response_data_inner_warning;

class OAI_buckets__bucketKey__messages_post_200_response_data_inner : public OAIObject {
public:
    OAI_buckets__bucketKey__messages_post_200_response_data_inner();
    OAI_buckets__bucketKey__messages_post_200_response_data_inner(QString json);
    ~OAI_buckets__bucketKey__messages_post_200_response_data_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAI_buckets__bucketKey__messages_post_200_response_data_inner_error getError() const;
    void setError(const OAI_buckets__bucketKey__messages_post_200_response_data_inner_error &error);
    bool is_error_Set() const;
    bool is_error_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getUniqueIdentifier() const;
    void setUniqueIdentifier(const QString &unique_identifier);
    bool is_unique_identifier_Set() const;
    bool is_unique_identifier_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    OAI_buckets__bucketKey__messages_post_200_response_data_inner_warning getWarning() const;
    void setWarning(const OAI_buckets__bucketKey__messages_post_200_response_data_inner_warning &warning);
    bool is_warning_Set() const;
    bool is_warning_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAI_buckets__bucketKey__messages_post_200_response_data_inner_error m_error;
    bool m_error_isSet;
    bool m_error_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_unique_identifier;
    bool m_unique_identifier_isSet;
    bool m_unique_identifier_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;

    OAI_buckets__bucketKey__messages_post_200_response_data_inner_warning m_warning;
    bool m_warning_isSet;
    bool m_warning_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_buckets__bucketKey__messages_post_200_response_data_inner)

#endif // OAI_buckets__bucketKey__messages_post_200_response_data_inner_H
