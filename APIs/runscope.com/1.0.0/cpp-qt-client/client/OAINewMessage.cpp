/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewMessage.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewMessage::OAINewMessage(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewMessage::OAINewMessage() {
    this->initializeModel();
}

OAINewMessage::~OAINewMessage() {}

void OAINewMessage::initializeModel() {

    m_request_isSet = false;
    m_request_isValid = false;

    m_response_isSet = false;
    m_response_isValid = false;
}

void OAINewMessage::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewMessage::fromJsonObject(QJsonObject json) {

    m_request_isValid = ::OpenAPI::fromJsonValue(m_request, json[QString("request")]);
    m_request_isSet = !json[QString("request")].isNull() && m_request_isValid;

    m_response_isValid = ::OpenAPI::fromJsonValue(m_response, json[QString("response")]);
    m_response_isSet = !json[QString("response")].isNull() && m_response_isValid;
}

QString OAINewMessage::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewMessage::asJsonObject() const {
    QJsonObject obj;
    if (m_request.isSet()) {
        obj.insert(QString("request"), ::OpenAPI::toJsonValue(m_request));
    }
    if (m_response.isSet()) {
        obj.insert(QString("response"), ::OpenAPI::toJsonValue(m_response));
    }
    return obj;
}

OAINewMessage_request OAINewMessage::getRequest() const {
    return m_request;
}
void OAINewMessage::setRequest(const OAINewMessage_request &request) {
    m_request = request;
    m_request_isSet = true;
}

bool OAINewMessage::is_request_Set() const{
    return m_request_isSet;
}

bool OAINewMessage::is_request_Valid() const{
    return m_request_isValid;
}

OAINewMessage_response OAINewMessage::getResponse() const {
    return m_response;
}
void OAINewMessage::setResponse(const OAINewMessage_response &response) {
    m_response = response;
    m_response_isSet = true;
}

bool OAINewMessage::is_response_Set() const{
    return m_response_isSet;
}

bool OAINewMessage::is_response_Valid() const{
    return m_response_isValid;
}

bool OAINewMessage::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_request.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_response.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewMessage::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
