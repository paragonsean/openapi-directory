/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMetrics_response_times_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMetrics_response_times_inner::OAIMetrics_response_times_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMetrics_response_times_inner::OAIMetrics_response_times_inner() {
    this->initializeModel();
}

OAIMetrics_response_times_inner::~OAIMetrics_response_times_inner() {}

void OAIMetrics_response_times_inner::initializeModel() {

    m_avg_response_time_ms_isSet = false;
    m_avg_response_time_ms_isValid = false;

    m_success_ratio_isSet = false;
    m_success_ratio_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;
}

void OAIMetrics_response_times_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMetrics_response_times_inner::fromJsonObject(QJsonObject json) {

    m_avg_response_time_ms_isValid = ::OpenAPI::fromJsonValue(m_avg_response_time_ms, json[QString("avg_response_time_ms")]);
    m_avg_response_time_ms_isSet = !json[QString("avg_response_time_ms")].isNull() && m_avg_response_time_ms_isValid;

    m_success_ratio_isValid = ::OpenAPI::fromJsonValue(m_success_ratio, json[QString("success_ratio")]);
    m_success_ratio_isSet = !json[QString("success_ratio")].isNull() && m_success_ratio_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;
}

QString OAIMetrics_response_times_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMetrics_response_times_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_avg_response_time_ms_isSet) {
        obj.insert(QString("avg_response_time_ms"), ::OpenAPI::toJsonValue(m_avg_response_time_ms));
    }
    if (m_success_ratio_isSet) {
        obj.insert(QString("success_ratio"), ::OpenAPI::toJsonValue(m_success_ratio));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    return obj;
}

qint32 OAIMetrics_response_times_inner::getAvgResponseTimeMs() const {
    return m_avg_response_time_ms;
}
void OAIMetrics_response_times_inner::setAvgResponseTimeMs(const qint32 &avg_response_time_ms) {
    m_avg_response_time_ms = avg_response_time_ms;
    m_avg_response_time_ms_isSet = true;
}

bool OAIMetrics_response_times_inner::is_avg_response_time_ms_Set() const{
    return m_avg_response_time_ms_isSet;
}

bool OAIMetrics_response_times_inner::is_avg_response_time_ms_Valid() const{
    return m_avg_response_time_ms_isValid;
}

qint32 OAIMetrics_response_times_inner::getSuccessRatio() const {
    return m_success_ratio;
}
void OAIMetrics_response_times_inner::setSuccessRatio(const qint32 &success_ratio) {
    m_success_ratio = success_ratio;
    m_success_ratio_isSet = true;
}

bool OAIMetrics_response_times_inner::is_success_ratio_Set() const{
    return m_success_ratio_isSet;
}

bool OAIMetrics_response_times_inner::is_success_ratio_Valid() const{
    return m_success_ratio_isValid;
}

qint32 OAIMetrics_response_times_inner::getTimestamp() const {
    return m_timestamp;
}
void OAIMetrics_response_times_inner::setTimestamp(const qint32 &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAIMetrics_response_times_inner::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIMetrics_response_times_inner::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

bool OAIMetrics_response_times_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avg_response_time_ms_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_success_ratio_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMetrics_response_times_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
