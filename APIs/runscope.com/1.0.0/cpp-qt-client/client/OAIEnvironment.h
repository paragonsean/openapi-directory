/**
 * Runscope API
 * Manage Runscope programmatically.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEnvironment.h
 *
 * 
 */

#ifndef OAIEnvironment_H
#define OAIEnvironment_H

#include <QJsonObject>

#include "OAIAgent.h"
#include "OAIIntegration.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIntegration;
class OAIAgent;

class OAIEnvironment : public OAIObject {
public:
    OAIEnvironment();
    OAIEnvironment(QString json);
    ~OAIEnvironment() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAuth() const;
    void setAuth(const QString &auth);
    bool is_auth_Set() const;
    bool is_auth_Valid() const;

    QString getClientCertificate() const;
    void setClientCertificate(const QString &client_certificate);
    bool is_client_certificate_Set() const;
    bool is_client_certificate_Valid() const;

    OAIObject getEmails() const;
    void setEmails(const OAIObject &emails);
    bool is_emails_Set() const;
    bool is_emails_Valid() const;

    qint32 getExportedAt() const;
    void setExportedAt(const qint32 &exported_at);
    bool is_exported_at_Set() const;
    bool is_exported_at_Valid() const;

    OAIObject getHeaders() const;
    void setHeaders(const OAIObject &headers);
    bool is_headers_Set() const;
    bool is_headers_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInitialScriptHash() const;
    void setInitialScriptHash(const QString &initial_script_hash);
    bool is_initial_script_hash_Set() const;
    bool is_initial_script_hash_Valid() const;

    OAIObject getInitialVariables() const;
    void setInitialVariables(const OAIObject &initial_variables);
    bool is_initial_variables_Set() const;
    bool is_initial_variables_Valid() const;

    QList<OAIIntegration> getIntegrations() const;
    void setIntegrations(const QList<OAIIntegration> &integrations);
    bool is_integrations_Set() const;
    bool is_integrations_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParentEnvironmentId() const;
    void setParentEnvironmentId(const QString &parent_environment_id);
    bool is_parent_environment_id_Set() const;
    bool is_parent_environment_id_Valid() const;

    bool isPreserveCookies() const;
    void setPreserveCookies(const bool &preserve_cookies);
    bool is_preserve_cookies_Set() const;
    bool is_preserve_cookies_Valid() const;

    QList<QString> getRegions() const;
    void setRegions(const QList<QString> &regions);
    bool is_regions_Set() const;
    bool is_regions_Valid() const;

    QList<OAIAgent> getRemoteAgents() const;
    void setRemoteAgents(const QList<OAIAgent> &remote_agents);
    bool is_remote_agents_Set() const;
    bool is_remote_agents_Valid() const;

    bool isRetryOnFailure() const;
    void setRetryOnFailure(const bool &retry_on_failure);
    bool is_retry_on_failure_Set() const;
    bool is_retry_on_failure_Valid() const;

    QString getScript() const;
    void setScript(const QString &script);
    bool is_script_Set() const;
    bool is_script_Valid() const;

    QList<QString> getScriptLibrary() const;
    void setScriptLibrary(const QList<QString> &script_library);
    bool is_script_library_Set() const;
    bool is_script_library_Valid() const;

    bool isStopOnFailure() const;
    void setStopOnFailure(const bool &stop_on_failure);
    bool is_stop_on_failure_Set() const;
    bool is_stop_on_failure_Valid() const;

    QString getTestId() const;
    void setTestId(const QString &test_id);
    bool is_test_id_Set() const;
    bool is_test_id_Valid() const;

    bool isVerifySsl() const;
    void setVerifySsl(const bool &verify_ssl);
    bool is_verify_ssl_Set() const;
    bool is_verify_ssl_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getWebhooks() const;
    void setWebhooks(const QString &webhooks);
    bool is_webhooks_Set() const;
    bool is_webhooks_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_auth;
    bool m_auth_isSet;
    bool m_auth_isValid;

    QString m_client_certificate;
    bool m_client_certificate_isSet;
    bool m_client_certificate_isValid;

    OAIObject m_emails;
    bool m_emails_isSet;
    bool m_emails_isValid;

    qint32 m_exported_at;
    bool m_exported_at_isSet;
    bool m_exported_at_isValid;

    OAIObject m_headers;
    bool m_headers_isSet;
    bool m_headers_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_initial_script_hash;
    bool m_initial_script_hash_isSet;
    bool m_initial_script_hash_isValid;

    OAIObject m_initial_variables;
    bool m_initial_variables_isSet;
    bool m_initial_variables_isValid;

    QList<OAIIntegration> m_integrations;
    bool m_integrations_isSet;
    bool m_integrations_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parent_environment_id;
    bool m_parent_environment_id_isSet;
    bool m_parent_environment_id_isValid;

    bool m_preserve_cookies;
    bool m_preserve_cookies_isSet;
    bool m_preserve_cookies_isValid;

    QList<QString> m_regions;
    bool m_regions_isSet;
    bool m_regions_isValid;

    QList<OAIAgent> m_remote_agents;
    bool m_remote_agents_isSet;
    bool m_remote_agents_isValid;

    bool m_retry_on_failure;
    bool m_retry_on_failure_isSet;
    bool m_retry_on_failure_isValid;

    QString m_script;
    bool m_script_isSet;
    bool m_script_isValid;

    QList<QString> m_script_library;
    bool m_script_library_isSet;
    bool m_script_library_isValid;

    bool m_stop_on_failure;
    bool m_stop_on_failure_isSet;
    bool m_stop_on_failure_isValid;

    QString m_test_id;
    bool m_test_id_isSet;
    bool m_test_id_isValid;

    bool m_verify_ssl;
    bool m_verify_ssl_isSet;
    bool m_verify_ssl_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_webhooks;
    bool m_webhooks_isSet;
    bool m_webhooks_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEnvironment)

#endif // OAIEnvironment_H
