openapi: 3.0.1
info:
  description: Manage Runscope programmatically.
  title: Runscope API
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://pbs.twimg.com/profile_images/500425058955689986/zlcbgqTt.png
  x-origin:
  - format: swagger
    url: https://raw.githubusercontent.com/Runscope/runscope-api-examples/master/schemas/runscope-swagger-v2.json
    version: "2.0"
  x-providerName: runscope.com
servers:
- url: https://api.runscope.com/
security:
- runscope_auth:
  - api:read
paths:
  /account:
    get:
      description: Information about the authorized account.
      operationId: account_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_account_get_200_response'
          description: Account owner and team information.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - account:email
      summary: Account Resource
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
  /buckets:
    get:
      operationId: buckets_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_buckets_get_200_response'
          description: List of buckets associated with this authenticated account.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
      - runscope_auth:
        - api:read
        - bucket:auth_token
      summary: Returns a list of buckets.
      tags:
      - Buckets
      x-openapi-router-controller: openapi_server.controllers.buckets_controller
    post:
      operationId: buckets_post
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewBucket'
        required: true
        x-body-name: NewBucket
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: Bucket details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - bucket:write
      summary: Create a new bucket
      tags:
      - Buckets
      x-codegen-request-body-name: NewBucket
      x-openapi-router-controller: openapi_server.controllers.buckets_controller
  /buckets/{bucketKey}:
    delete:
      operationId: buckets_bucket_key_delete
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content with no body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - bucket:write
      summary: Delete a single bucket resource.
      tags:
      - Buckets
      x-openapi-router-controller: openapi_server.controllers.buckets_controller
    get:
      operationId: buckets_bucket_key_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucketKey
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: Bucket details.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Returns a single bucket resource.
      tags:
      - Buckets
      x-openapi-router-controller: openapi_server.controllers.buckets_controller
  /buckets/{bucketKey}/environments:
    get:
      operationId: buckets_bucket_key_environments_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: List of shared environments belonging to this bucket.
      security:
      - runscope_auth:
        - api:read
        - test:read
      summary: Returns list of shared environments for a specified bucket.
      tags:
      - Shared Environments
      x-openapi-router-controller: openapi_server.controllers.shared_environments_controller
    post:
      operationId: buckets_bucket_key_environments_post
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
        x-body-name: NewEnvironment
      responses:
        "201":
          content: {}
          description: Details of the new test environment.
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Create new shared environment.
      tags:
      - Shared Environments
      x-codegen-request-body-name: NewEnvironment
      x-openapi-router-controller: openapi_server.controllers.shared_environments_controller
  /buckets/{bucketKey}/environments/{environmentId}:
    put:
      operationId: buckets_bucket_key_environments_environment_id_put
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test environment
        in: path
        name: environmentId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
        x-body-name: ModifiedEnvironment
      responses:
        "201":
          content: {}
          description: Details of the modified test environment.
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Update the details of a shared environment.
      tags:
      - Shared Environments
      x-codegen-request-body-name: ModifiedEnvironment
      x-openapi-router-controller: openapi_server.controllers.shared_environments_controller
  /buckets/{bucketKey}/errors:
    get:
      operationId: buckets_bucket_key_errors_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: "Maxiumum number of messages to return. Default 50, max 1000."
        in: query
        name: count
        schema:
          type: integer
      - description: Only return messages after the given Unix timestamp
        in: query
        name: since
        schema:
          type: integer
      - description: Only return messages before the given Unix timestamp
        in: query
        name: before
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: List of error messages in a bucket
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a list of error messages in a bucket
      tags:
      - Messages
      x-openapi-router-controller: openapi_server.controllers.messages_controller
  /buckets/{bucketKey}/messages:
    delete:
      operationId: buckets_bucket_key_messages_delete
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content with no body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - message:write
      summary: Clear a bucket (remove all messages).
      tags:
      - Messages
      x-openapi-router-controller: openapi_server.controllers.messages_controller
    get:
      operationId: buckets_bucket_key_messages_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: "Maxiumum number of messages to return. Default 50, max 1000."
        in: query
        name: count
        schema:
          type: integer
      - description: Only return messages after the given Unix timestamp
        in: query
        name: since
        schema:
          type: integer
      - description: Only return messages before the given Unix timestamp
        in: query
        name: before
        schema:
          type: integer
      responses:
        "200":
          content: {}
          description: List of messages in a bucket
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve a list of messages in a bucket
      tags:
      - Messages
      x-openapi-router-controller: openapi_server.controllers.messages_controller
    post:
      operationId: buckets_bucket_key_messages_post
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/NewMessage'
        required: true
        x-body-name: NewMessage
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_buckets__bucketKey__messages_post_200_response'
          description: "The response includes a list of result objects for the message(s)\
            \ submitted. It will always return an array, even if only one message\
            \ was created. The order of the result objects corresponds to the order\
            \ of messages submitted."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - message:write
      summary: Create a message
      tags:
      - Messages
      x-codegen-request-body-name: NewMessage
      x-openapi-router-controller: openapi_server.controllers.messages_controller
  /buckets/{bucketKey}/messages/{messageId}:
    get:
      operationId: buckets_bucket_key_messages_message_id_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: The unique identifier for this message
        in: path
        name: messageId
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: List of messages in a bucket
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      summary: Retrieve the details for a single message.
      tags:
      - Messages
      x-openapi-router-controller: openapi_server.controllers.messages_controller
  /buckets/{bucketKey}/tests:
    get:
      operationId: buckets_bucket_key_tests_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_buckets__bucketKey__tests_get_200_response'
          description: List of tests for this bucket
      security:
      - runscope_auth:
        - api:read
        - test:read
      summary: Returns a list of tests.
      tags:
      - Tests
      x-openapi-router-controller: openapi_server.controllers.tests_controller
    post:
      operationId: buckets_bucket_key_tests_post
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Test'
        required: true
        x-body-name: NewTest
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_buckets__bucketKey__tests_get_200_response'
          description: List of tests for this bucket
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Create a test.
      tags:
      - Tests
      x-codegen-request-body-name: NewTest
      x-openapi-router-controller: openapi_server.controllers.tests_controller
  /buckets/{bucketKey}/tests/{testId}:
    delete:
      operationId: buckets_bucket_key_tests_test_id_delete
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content with no body.
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: "Delete a test, including all steps, schedules, test-specific environments\
        \ and results."
      tags:
      - Tests
      x-openapi-router-controller: openapi_server.controllers.tests_controller
    get:
      operationId: buckets_bucket_key_tests_test_id_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: testId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDetail'
          description: Returns an object with the details of the given test.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - test:read
      summary: Retrieve the details of a given test by ID.
      tags:
      - Tests
      x-openapi-router-controller: openapi_server.controllers.tests_controller
    put:
      operationId: buckets_bucket_key_tests_test_id_put
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestDetail'
          description: Returns 201 and the updated test's JSON description if the
            test is successfully updated.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: "Modify a test's name, description, default environment and its steps.\
        \ To modify other individual properties of a test, make requests to the steps,\
        \ environments, and schedules subresources of the test."
      tags:
      - Tests
      x-openapi-router-controller: openapi_server.controllers.tests_controller
  /buckets/{bucketKey}/tests/{testId}/environments:
    get:
      operationId: buckets_bucket_key_tests_test_id_environments_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_buckets__bucketKey__tests__testId__environments_get_200_response'
          description: List of environments belonging to this test.
      security:
      - runscope_auth:
        - api:read
        - test:read
      summary: Return details of the test's environments (only those that belong to
        the specified test)
      tags:
      - Test Environments
      x-openapi-router-controller: openapi_server.controllers.test_environments_controller
    post:
      operationId: buckets_bucket_key_tests_test_id_environments_post
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
        x-body-name: NewEnvironment
      responses:
        "201":
          content: {}
          description: Details of the new test environment.
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Create new test environment.
      tags:
      - Test Environments
      x-codegen-request-body-name: NewEnvironment
      x-openapi-router-controller: openapi_server.controllers.test_environments_controller
  /buckets/{bucketKey}/tests/{testId}/environments/{environmentId}:
    put:
      operationId: buckets_bucket_key_tests_test_id_environments_environment_id_put
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      - description: Unique identifier for a test environment
        in: path
        name: environment_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/Environment'
        required: true
        x-body-name: ModifiedEnvironment
      responses:
        "201":
          content: {}
          description: Details of the modified test environment.
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Update the details of a test environment.
      tags:
      - Test Environments
      x-codegen-request-body-name: ModifiedEnvironment
      x-openapi-router-controller: openapi_server.controllers.test_environments_controller
  /buckets/{bucketKey}/tests/{testId}/metrics:
    get:
      operationId: buckets_bucket_key_tests_test_id_metrics_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Metrics'
          description: List of average response times and additional performance metrics
            belonging to this test.
      security:
      - runscope_auth:
        - api:read
        - test:read
      summary: Return details of the test metrics for the specified timeframe.
      tags:
      - Tests
      x-openapi-router-controller: openapi_server.controllers.tests_controller
  /buckets/{bucketKey}/tests/{testId}/steps:
    get:
      operationId: buckets_bucket_key_tests_test_id_steps_get
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: List of test steps for a test
      security:
      - runscope_auth:
        - api:read
        - test:read
      summary: List test steps for a test.
      tags:
      - Test Steps
      x-openapi-router-controller: openapi_server.controllers.test_steps_controller
    post:
      operationId: buckets_bucket_key_tests_test_id_steps_post
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TestStep'
        required: true
        x-body-name: TestStep
      responses:
        "201":
          content: {}
          description: Details of the new test step.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
          description: Must send valid JSON object to create a new test step
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Add new test step.
      tags:
      - Test Steps
      x-codegen-request-body-name: TestStep
      x-openapi-router-controller: openapi_server.controllers.test_steps_controller
  /buckets/{bucketKey}/tests/{testId}/steps/{stepId}:
    delete:
      operationId: buckets_bucket_key_tests_test_id_steps_step_id_delete
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      - description: Unique identifier for a test step
        in: path
        name: step_id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: No content with no body.
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Delete a step from a test.
      tags:
      - Test Steps
      x-openapi-router-controller: openapi_server.controllers.test_steps_controller
    put:
      operationId: buckets_bucket_key_tests_test_id_steps_step_id_put
      parameters:
      - description: Unique identifier for a bucket
        in: path
        name: bucket_key
        required: true
        schema:
          type: string
      - description: Unique identifier for a test
        in: path
        name: test_id
        required: true
        schema:
          type: string
      - description: Unique identifier for a test step
        in: path
        name: stepId
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/TestStep'
        required: true
        x-body-name: TestStep
      responses:
        "200":
          content: {}
          description: List of test steps for a test
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StandardError'
          description: "Unable to update template '{stepId}' for test '{testId}'"
      security:
      - runscope_auth:
        - api:read
        - test:write
      summary: Update the details of a single test step.
      tags:
      - Test Steps
      x-codegen-request-body-name: TestStep
      x-openapi-router-controller: openapi_server.controllers.test_steps_controller
  /teams/{teamId}/agents:
    get:
      description: List currently connected agents associated with a given team.
      operationId: teams_team_id_agents_get
      parameters:
      - description: Unique identifier for team
        in: path
        name: teamId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Agent'
                type: array
          description: List of the team’s currently connected agents.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - team:read
      summary: Team agents list
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
  /teams/{teamId}/integrations:
    get:
      description: Returns a list of integrations configured for the team.
      operationId: teams_team_id_integrations_get
      parameters:
      - description: Unique identifier for team
        in: path
        name: team_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_teams__teamId__integrations_get_200_response'
          description: List of integrations associated with the team.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - team:read
      summary: Team integrations list
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
  /teams/{teamId}/people:
    get:
      description: List people and integrations associated with a given team.
      operationId: teams_team_id_people_get
      parameters:
      - description: Unique identifier for team
        in: path
        name: team_id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Account'
                type: array
          description: List of people associated with the team.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: Unexpected error
      security:
      - runscope_auth:
        - api:read
        - account:email
        - team:read
      summary: Teams Resource
      tags:
      - Account
      x-openapi-router-controller: openapi_server.controllers.account_controller
components:
  parameters:
    bucketKey:
      description: Unique identifier for a bucket
      in: path
      name: bucketKey
      required: true
      schema:
        type: string
    environmentId:
      description: Unique identifier for a test environment
      in: path
      name: environmentId
      required: true
      schema:
        type: string
    stepId:
      description: Unique identifier for a test step
      in: path
      name: stepId
      required: true
      schema:
        type: string
    teamId:
      description: Unique identifier for team
      in: path
      name: teamId
      required: true
      schema:
        type: string
    testId:
      description: Unique identifier for a test
      in: path
      name: testId
      required: true
      schema:
        type: string
  responses:
    Standard400Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardError'
      description: Invalid request.
    Standard403Response:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/StandardError'
      description: Invalid or missing Authorization header
    UnexpectedError:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
      description: Unexpected error
  schemas:
    Account:
      example:
        teams:
        - name: name
          id: id
        - name: name
          id: id
        name: name
        id: id
        email: email
      properties:
        email:
          description: The email address for this account. Only present if authorized
            with the account:email scope.
          title: email
          type: string
        id:
          description: The unique identifier for this account.
          title: id
          type: string
        name:
          description: The name of the person for this account.
          title: name
          type: string
        teams:
          items:
            $ref: '#/components/schemas/Team'
          title: teams
          type: array
      title: Account
      type: object
    Agent:
      example:
        agent_id: agent_id
        name: name
        version: version
      properties:
        agent_id:
          description: The unique identifier for this agent.
          title: agent_id
          type: string
        name:
          description: The name of the agent set in the configuration file or with
            the command line flag.
          title: name
          type: string
        version:
          description: The version for this agent.
          title: version
          type: string
      title: Agent
      type: object
    Assertion:
      properties:
        comparison:
          title: comparison
          type: string
        source:
          title: source
          type: string
        value:
          title: value
          type: string
      title: Assertion
      type: object
    Bucket:
      example:
        default: true
        collections_url: collections_url
        messages_url: messages_url
        verify_ssl: true
        trigger_url: trigger_url
        name: name
        tests_url: tests_url
        team:
          name: name
          id: id
        auth_token: auth_token
        key: key
      properties:
        auth_token:
          description: "Bucket auth token if set, otherwise this value is null."
          title: auth_token
          type: string
        collections_url:
          title: collections_url
          type: string
        default:
          description: True if this bucket is the 'default' for a team. Default buckets
            cannot be deleted.
          title: default
          type: boolean
        key:
          description: The unique identifier used to address a bucket.
          title: key
          type: string
        messages_url:
          title: messages_url
          type: string
        name:
          description: The name of this bucket as displayed in your dashboard.
          title: name
          type: string
        team:
          $ref: '#/components/schemas/Team'
        tests_url:
          title: tests_url
          type: string
        trigger_url:
          title: trigger_url
          type: string
        verify_ssl:
          description: True if this bucket is configured to verify ssl for requests
            made to it.
          title: verify_ssl
          type: boolean
      title: Bucket
      type: object
    Environment:
      example:
        headers: "{}"
        regions:
        - regions
        - regions
        auth: auth
        stop_on_failure: true
        initial_script_hash: initial_script_hash
        preserve_cookies: true
        initial_variables: "{}"
        parent_environment_id: parent_environment_id
        version: version
        exported_at: 0
        script: script
        emails: "{}"
        client_certificate: client_certificate
        verify_ssl: true
        webhooks: webhooks
        remote_agents:
        - agent_id: agent_id
          name: name
          version: version
        - agent_id: agent_id
          name: name
          version: version
        script_library:
        - script_library
        - script_library
        name: name
        id: id
        integrations:
        - description: description
          id: id
          type: type
          uuid: uuid
        - description: description
          id: id
          type: type
          uuid: uuid
        retry_on_failure: true
        test_id: test_id
      properties:
        auth:
          title: auth
          type: string
        client_certificate:
          title: client_certificate
          type: string
        emails:
          properties: {}
          title: emails
          type: object
        exported_at:
          title: exported_at
          type: integer
        headers:
          properties: {}
          title: headers
          type: object
        id:
          description: The unique identifier for this environment.
          title: id
          type: string
        initial_script_hash:
          title: initial_script_hash
          type: string
        initial_variables:
          properties: {}
          title: initial_variables
          type: object
        integrations:
          description: The list of integrations for this environment.
          items:
            $ref: '#/components/schemas/Integration'
          title: integrations
          type: array
        name:
          description: Name of this environment.
          title: name
          type: string
        parent_environment_id:
          title: parent_environment_id
          type: string
        preserve_cookies:
          title: preserve_cookies
          type: boolean
        regions:
          description: An array of the region codes that this environment is using.
          items:
            type: string
          title: regions
          type: array
        remote_agents:
          items:
            $ref: '#/components/schemas/Agent'
          title: remote_agents
          type: array
        retry_on_failure:
          title: retry_on_failure
          type: boolean
        script:
          description: ""
          title: script
          type: string
        script_library:
          description: "The list of ids for scripts, part of the script libraries,\
            \ being used for this environment."
          items:
            type: string
          title: script_library
          type: array
        stop_on_failure:
          description: Stop executing the test after the first failed step.
          title: stop_on_failure
          type: boolean
        test_id:
          description: The unique identifier for this test.
          title: test_id
          type: string
        verify_ssl:
          description: Validate all SSL certificates on any HTTPS connections.
          title: verify_ssl
          type: boolean
        version:
          title: version
          type: string
        webhooks:
          title: webhooks
          type: string
      required:
      - name
      title: Environment
      type: object
    Error:
      example:
        code: 0
        fields: fields
        message: message
      properties:
        code:
          format: int32
          title: code
          type: integer
        fields:
          title: fields
          type: string
        message:
          title: message
          type: string
      title: Error
      type: object
    Error400:
      example:
        more_info: more_info
        error: error
        message: message
        status: 0
      properties:
        error:
          title: error
          type: string
        message:
          title: message
          type: string
        more_info:
          title: more_info
          type: string
        status:
          format: int32
          title: status
          type: integer
      title: Error400
      type: object
    Integration:
      example:
        description: description
        id: id
        type: type
        uuid: uuid
      properties:
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        type:
          title: type
          type: string
        uuid:
          title: uuid
          type: string
      title: Integration
      type: object
    Meta:
      example:
        status: status
      properties:
        status:
          description: Success or failure status of call.
          title: status
          type: string
      title: Meta
      type: object
    Metrics:
      example:
        timeframe: timeframe
        response_times:
        - success_ratio: 6
          avg_response_time_ms: 0
          timestamp: 1
        - success_ratio: 6
          avg_response_time_ms: 0
          timestamp: 1
        changes_from_last_period: "{}"
        this_time_period: "{}"
        environment_uuid: environment_uuid
        region: region
      properties:
        changes_from_last_period:
          description: The changes in average response time compared to the last period.
          properties: {}
          title: changes_from_last_period
          type: object
        environment_uuid:
          description: The environment_uuid that filters this request.
          title: environment_uuid
          type: string
        region:
          description: The region that filters this request.
          title: region
          type: string
        response_times:
          description: The list of response times based on the timeframe of the request.
          items:
            $ref: '#/components/schemas/Metrics_response_times_inner'
          title: response_times
          type: array
        this_time_period:
          description: The average response time for different percentiles for the
            request in the requested timeframe.
          properties: {}
          title: this_time_period
          type: object
        timeframe:
          description: The timeframe that filters this request.
          title: timeframe
          type: string
      title: Metrics
      type: object
    NewBucket:
      example:
        name: name
        team_id: team_id
      properties:
        name:
          description: Name of this bucket
          title: name
          type: string
        team_id:
          description: Unique identifier for the team to create this bucket for.
          title: team_id
          type: string
      required:
      - name
      - team_id
      title: NewBucket
      type: object
    NewMessage:
      example:
        request:
          headers: headers
          form: form
          method: method
          body: body
          url: url
          body_encoding: body_encoding
          timestamp: 0.8008282
        response:
          headers: headers
          reason: reason
          response_time: 6.0274563
          body: body
          body_encoding: body_encoding
          status: 1
          timestamp: 5.962134
      properties:
        request:
          $ref: '#/components/schemas/NewMessage_request'
        response:
          $ref: '#/components/schemas/NewMessage_response'
      title: NewMessage
      type: object
    Schedule:
      example:
        note: note
        environment_id: environment_id
        interval: interval
        id: id
        version: version
        exported_at: 6
      properties:
        environment_id:
          title: environment_id
          type: string
        exported_at:
          title: exported_at
          type: integer
        id:
          title: id
          type: string
        interval:
          title: interval
          type: string
        note:
          title: note
          type: string
        version:
          title: version
          type: string
      title: Schedule
      type: object
    StandardError:
      example:
        data: "{}"
        meta:
          status: status
        error:
          more_info: more_info
          error: error
          message: message
          status: 0
      properties:
        data:
          properties: {}
          title: data
          type: object
        error:
          $ref: '#/components/schemas/Error400'
        meta:
          $ref: '#/components/schemas/Meta'
      title: StandardError
      type: object
    Team:
      example:
        name: name
        id: id
      properties:
        id:
          description: The unique identifier for this team.
          title: id
          type: string
        name:
          description: The name of this team.
          title: name
          type: string
      title: Team
      type: object
    Test:
      example:
        trigger_url: trigger_url
        name: name
        created_at: 0
        description: description
        last_run: "{}"
        default_environment_id: default_environment_id
        id: id
        created_by:
          name: name
          id: id
          email: email
      properties:
        created_at:
          description: The date the test was created in seconds (Unix time stamp format).
          title: created_at
          type: integer
        created_by:
          $ref: '#/components/schemas/Test_created_by'
        default_environment_id:
          title: default_environment_id
          type: string
        description:
          description: The description for the test.
          title: description
          type: string
        id:
          title: id
          type: string
        last_run:
          properties: {}
          title: last_run
          type: object
        name:
          description: The name for the test.
          title: name
          type: string
        trigger_url:
          title: trigger_url
          type: string
      required:
      - name
      title: Test
      type: object
    TestDetail:
      allOf:
      - properties:
          environments:
            $ref: '#/components/schemas/Environment'
          exported_at:
            type: integer
          last_run:
            $ref: '#/components/schemas/TestDetail_allOf_last_run'
          schedules:
            items:
              $ref: '#/components/schemas/Schedule'
            type: array
          steps:
            items:
              properties: {}
              type: object
            type: array
          version:
            type: string
        type: object
      - $ref: '#/components/schemas/Test'
      example:
        environments:
          headers: "{}"
          regions:
          - regions
          - regions
          auth: auth
          stop_on_failure: true
          initial_script_hash: initial_script_hash
          preserve_cookies: true
          initial_variables: "{}"
          parent_environment_id: parent_environment_id
          version: version
          exported_at: 0
          script: script
          emails: "{}"
          client_certificate: client_certificate
          verify_ssl: true
          webhooks: webhooks
          remote_agents:
          - agent_id: agent_id
            name: name
            version: version
          - agent_id: agent_id
            name: name
            version: version
          script_library:
          - script_library
          - script_library
          name: name
          id: id
          integrations:
          - description: description
            id: id
            type: type
            uuid: uuid
          - description: description
            id: id
            type: type
            uuid: uuid
          retry_on_failure: true
          test_id: test_id
        trigger_url: trigger_url
        created_at: 1
        description: description
        last_run: "{}"
        steps:
        - "{}"
        - "{}"
        version: version
        created_by:
          name: name
          id: id
          email: email
        exported_at: 0
        schedules:
        - note: note
          environment_id: environment_id
          interval: interval
          id: id
          version: version
          exported_at: 6
        - note: note
          environment_id: environment_id
          interval: interval
          id: id
          version: version
          exported_at: 6
        name: name
        default_environment_id: default_environment_id
        id: id
      title: TestDetail
    TestStep:
      example:
        step_type: step_type
      properties:
        step_type:
          description: "Type of test step -- request, pause, condition, ghost-inspector,\
            \ or subtest."
          title: step_type
          type: string
      title: TestStep
      type: object
    TestStepRequest:
      allOf:
      - properties:
          assertions:
            description: A list of assertions to apply to the HTTP response from this
              request.
            items:
              $ref: '#/components/schemas/Assertion'
            type: array
          auth:
            $ref: '#/components/schemas/TestStepRequest_allOf_auth'
          before_scripts:
            description: A list of pre-request scripts to run before this request.
            items:
              type: string
            type: array
          body:
            description: A string to use as the body of the request.
            type: string
          form:
            $ref: '#/components/schemas/TestStepRequest_allOf_form'
          headers:
            $ref: '#/components/schemas/TestStepRequest_allOf_headers'
          method:
            description: "The HTTP method for this request step. E.g. GET, POST, PUT,\
              \ DELETE, etc."
            type: string
          note:
            description: A description or note for this request step.
            type: string
          scripts:
            description: A list of post-response scripts to run after this request.
            items:
              type: string
            type: array
          url:
            description: The URL to make a request to for this step. This may contain
              both query string parameters and variables.
            type: string
          variables:
            description: A list of variables to extract out of the HTTP response from
              this request.
            items:
              $ref: '#/components/schemas/Variable'
            type: array
        type: object
      - $ref: '#/components/schemas/TestStep'
    Variable:
      properties:
        name:
          title: name
          type: string
        property:
          title: property
          type: string
        source:
          title: source
          type: string
      title: Variable
      type: object
    _account_get_200_response:
      example:
        data:
          teams:
          - name: name
            id: id
          - name: name
            id: id
          name: name
          id: id
          email: email
        meta:
          status: status
      properties:
        data:
          $ref: '#/components/schemas/Account'
        meta:
          $ref: '#/components/schemas/Meta'
      title: _account_get_200_response
      type: object
    _buckets_get_200_response:
      example:
        data:
        - default: true
          collections_url: collections_url
          messages_url: messages_url
          verify_ssl: true
          trigger_url: trigger_url
          name: name
          tests_url: tests_url
          team:
            name: name
            id: id
          auth_token: auth_token
          key: key
        - default: true
          collections_url: collections_url
          messages_url: messages_url
          verify_ssl: true
          trigger_url: trigger_url
          name: name
          tests_url: tests_url
          team:
            name: name
            id: id
          auth_token: auth_token
          key: key
        meta:
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/Bucket'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      title: _buckets_get_200_response
      type: object
    _buckets__bucketKey__messages_post_200_response_data_inner_error:
      description: "An object representing errors for this item. Only present if status\
        \ is error, otherwise this will be null."
      example:
        code: 0
        more_info: more_info
        message: message
      properties:
        code:
          description: A numeric error code for the specific problem we encountered
            with this message. (error status only)
          title: code
          type: integer
        message:
          description: A description of the problem we encountered with this message.
            (error status only)
          title: message
          type: string
        more_info:
          description: A link to more help about the warning. (error status only)
          title: more_info
          type: string
      title: _buckets__bucketKey__messages_post_200_response_data_inner_error
      type: object
    _buckets__bucketKey__messages_post_200_response_data_inner_warning:
      description: "An object representing warnings (non-fatal warnings) for this\
        \ item. Only present if status is warning, otherwise this will be null."
      example:
        code: 6
        more_info: more_info
        message: message
      properties:
        code:
          description: A numeric error code for the specific problem we encountered
            with this message. (warning status only)
          title: code
          type: integer
        message:
          description: A description of the problem we encountered with this message.
            (warning status only)
          title: message
          type: string
        more_info:
          description: A link to more help about the warning. (warning status only)
          title: more_info
          type: string
      title: _buckets__bucketKey__messages_post_200_response_data_inner_warning
      type: object
    _buckets__bucketKey__messages_post_200_response_data_inner:
      example:
        unique_identifier: unique_identifier
        warning:
          code: 6
          more_info: more_info
          message: message
        error:
          code: 0
          more_info: more_info
          message: message
        uuid: uuid
        status: status
      properties:
        error:
          $ref: '#/components/schemas/_buckets__bucketKey__messages_post_200_response_data_inner_error'
        status:
          description: "One of the following: success, error, or warning."
          title: status
          type: string
        unique_identifier:
          description: "If the message had a unique_identifier, it will be returned\
            \ in this field, to help match the responses to the messages that were\
            \ submitted."
          title: unique_identifier
          type: string
        uuid:
          description: This message's Runscope-generated ID.
          title: uuid
          type: string
        warning:
          $ref: '#/components/schemas/_buckets__bucketKey__messages_post_200_response_data_inner_warning'
      title: _buckets__bucketKey__messages_post_200_response_data_inner
      type: object
    _buckets__bucketKey__messages_post_200_response_meta:
      example:
        succcess_count: 5
        warning_count: 5
        error_count: 1
      properties:
        error_count:
          title: error_count
          type: integer
        succcess_count:
          title: succcess_count
          type: integer
        warning_count:
          title: warning_count
          type: integer
      title: _buckets__bucketKey__messages_post_200_response_meta
      type: object
    _buckets__bucketKey__messages_post_200_response:
      example:
        data:
        - unique_identifier: unique_identifier
          warning:
            code: 6
            more_info: more_info
            message: message
          error:
            code: 0
            more_info: more_info
            message: message
          uuid: uuid
          status: status
        - unique_identifier: unique_identifier
          warning:
            code: 6
            more_info: more_info
            message: message
          error:
            code: 0
            more_info: more_info
            message: message
          uuid: uuid
          status: status
        meta:
          succcess_count: 5
          warning_count: 5
          error_count: 1
      properties:
        data:
          items:
            $ref: '#/components/schemas/_buckets__bucketKey__messages_post_200_response_data_inner'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/_buckets__bucketKey__messages_post_200_response_meta'
      title: _buckets__bucketKey__messages_post_200_response
      type: object
    _buckets__bucketKey__tests_get_200_response:
      example:
        data:
        - trigger_url: trigger_url
          name: name
          created_at: 0
          description: description
          last_run: "{}"
          default_environment_id: default_environment_id
          id: id
          created_by:
            name: name
            id: id
            email: email
        - trigger_url: trigger_url
          name: name
          created_at: 0
          description: description
          last_run: "{}"
          default_environment_id: default_environment_id
          id: id
          created_by:
            name: name
            id: id
            email: email
        meta:
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/Test'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      title: _buckets__bucketKey__tests_get_200_response
      type: object
    _buckets__bucketKey__tests__testId__environments_get_200_response:
      example:
        data:
        - headers: "{}"
          regions:
          - regions
          - regions
          auth: auth
          stop_on_failure: true
          initial_script_hash: initial_script_hash
          preserve_cookies: true
          initial_variables: "{}"
          parent_environment_id: parent_environment_id
          version: version
          exported_at: 0
          script: script
          emails: "{}"
          client_certificate: client_certificate
          verify_ssl: true
          webhooks: webhooks
          remote_agents:
          - agent_id: agent_id
            name: name
            version: version
          - agent_id: agent_id
            name: name
            version: version
          script_library:
          - script_library
          - script_library
          name: name
          id: id
          integrations:
          - description: description
            id: id
            type: type
            uuid: uuid
          - description: description
            id: id
            type: type
            uuid: uuid
          retry_on_failure: true
          test_id: test_id
        - headers: "{}"
          regions:
          - regions
          - regions
          auth: auth
          stop_on_failure: true
          initial_script_hash: initial_script_hash
          preserve_cookies: true
          initial_variables: "{}"
          parent_environment_id: parent_environment_id
          version: version
          exported_at: 0
          script: script
          emails: "{}"
          client_certificate: client_certificate
          verify_ssl: true
          webhooks: webhooks
          remote_agents:
          - agent_id: agent_id
            name: name
            version: version
          - agent_id: agent_id
            name: name
            version: version
          script_library:
          - script_library
          - script_library
          name: name
          id: id
          integrations:
          - description: description
            id: id
            type: type
            uuid: uuid
          - description: description
            id: id
            type: type
            uuid: uuid
          retry_on_failure: true
          test_id: test_id
        meta:
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/Environment'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      title: _buckets__bucketKey__tests__testId__environments_get_200_response
      type: object
    _teams__teamId__integrations_get_200_response:
      example:
        data:
        - description: description
          id: id
          type: type
          uuid: uuid
        - description: description
          id: id
          type: type
          uuid: uuid
        meta:
          status: status
      properties:
        data:
          items:
            $ref: '#/components/schemas/Integration'
          title: data
          type: array
        meta:
          $ref: '#/components/schemas/Meta'
      title: _teams__teamId__integrations_get_200_response
      type: object
    Metrics_response_times_inner:
      example:
        success_ratio: 6
        avg_response_time_ms: 0
        timestamp: 1
      properties:
        avg_response_time_ms:
          description: The average response time in miliseconds for all the requests
            for this test in this time interval.
          title: avg_response_time_ms
          type: integer
        success_ratio:
          description: "1 if there's a successful request in this time interval, or\
            \ 0 if there isn't."
          title: success_ratio
          type: integer
        timestamp:
          description: The timestamp in Unix format for the specified timeframe.
          title: timestamp
          type: integer
      title: Metrics_response_times_inner
      type: object
    NewMessage_request:
      example:
        headers: headers
        form: form
        method: method
        body: body
        url: url
        body_encoding: body_encoding
        timestamp: 0.8008282
      properties:
        body:
          description: "HTTP request body (most commonly used for POST and PUT requests).\
            \ If the\nrequest body contains binary data that cannot be included directly\
            \ in the \nJSON, encode the content with Base64 and include the body_encoding\
            \ attribute accordingly.\n"
          title: body
          type: string
        body_encoding:
          description: "If the request body was encoded with Base64, this field should\
            \ be present and set to \n\"base64\". If not specified, defaults to \"\
            plaintext\"\n"
          title: body_encoding
          type: string
        form:
          description: "JSON object of set of form fields included in a POST request.\
            \ \nValues can either be represented as a string or as an array of strings.\n"
          title: form
          type: string
        headers:
          description: JSON object of header keys and values -- with values as a string
            or an array of strings.
          title: headers
          type: string
        method:
          description: "HTTP method name (GET, POST, PUT, HEAD, OPTIONS, PATCH, DELETE,\
            \ etc.)"
          title: method
          type: string
        timestamp:
          description: Unix timestamp indicating when the request was made.
          format: float
          title: timestamp
          type: number
        url:
          description: "Full URL of the request, including URL querystring parameters."
          title: url
          type: string
      title: NewMessage_request
      type: object
    NewMessage_response:
      example:
        headers: headers
        reason: reason
        response_time: 6.0274563
        body: body
        body_encoding: body_encoding
        status: 1
        timestamp: 5.962134
      properties:
        body:
          description: |
            HTTP response body. If the response body contains binary data that cannot be
            included directly in the JSON, you should encode the content with Base64.
          title: body
          type: string
        body_encoding:
          description: "If the request body was encoded with Base64, this field should\
            \ be present and set to \n\"base64\". If not specified, defaults to \"\
            plaintext\"\n"
          title: body_encoding
          type: string
        headers:
          description: JSON object of header keys and values -- with values as a string
            or an array of strings.
          title: headers
          type: string
        reason:
          description: "Textual description of HTTP status code. This will be set\
            \ automatically if not \nprovided in the API call. For example, if the\
            \ status code is 404, this will be \nset to \"Not Found\" unless you explicitly\
            \ specify a different reason.\n"
          title: reason
          type: string
        response_time:
          description: "Length of time it took to receive the response, in seconds."
          format: float
          title: response_time
          type: number
        status:
          description: HTTP status code returned in the response.
          title: status
          type: integer
        timestamp:
          description: Unix timestamp indicating when the request was made.
          format: float
          title: timestamp
          type: number
      title: NewMessage_response
      type: object
    Test_created_by:
      example:
        name: name
        id: id
        email: email
      properties:
        email:
          title: email
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
      title: Test_created_by
      type: object
    TestDetail_allOf_last_run:
      example: {}
      properties: {}
      type: object
    TestStepRequest_allOf_auth:
      description: "An authentication object with either basic, oauth1, or client_certificate\
        \ credentials for authenticating this request."
      properties: {}
      type: object
    TestStepRequest_allOf_form:
      description: An object with keys as form post parameter names matched to their
        values. Values can either be a single string or an array of strings.
      properties: {}
      type: object
    TestStepRequest_allOf_headers:
      description: An object with keys as header names matched to their values. Values
        can either be a single string or an array of strings.
      properties: {}
      type: object
  securitySchemes:
    runscope_auth:
      flows:
        authorizationCode:
          authorizationUrl: https://www.runscope.com/signin/oauth/authorize
          scopes:
            account:email: Allows you to read the email addresses of user accounts.
            api:read: Default read access.
            bucket:auth_token: "Allows you to read all bucket information, including\
              \ Authenticated Buckets."
            bucket:write: Allows you to create new buckets on behalf of the user (up
              to their plan limit).
            message:write: Allows you to create new messages on behalf of the user
              (up to their plan limit).
            team:read: Allows you to read team details such as lists of team members
              and external service integrations.
            test:read: Allows you to read the details of API tests.
            test:write: "Allows you to create, update and delete details of API tests."
          tokenUrl: https://www.runscope.com/signin/oauth/access_token
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_runscope_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_runscope_auth
x-original-swagger-version: "2.0"
