# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestStep(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, step_type: str=None):
        """TestStep - a model defined in OpenAPI

        :param step_type: The step_type of this TestStep.
        """
        self.openapi_types = {
            'step_type': str
        }

        self.attribute_map = {
            'step_type': 'step_type'
        }

        self._step_type = step_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestStep':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestStep of this TestStep.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def step_type(self):
        """Gets the step_type of this TestStep.

        Type of test step -- request, pause, condition, ghost-inspector, or subtest.

        :return: The step_type of this TestStep.
        :rtype: str
        """
        return self._step_type

    @step_type.setter
    def step_type(self, step_type):
        """Sets the step_type of this TestStep.

        Type of test step -- request, pause, condition, ghost-inspector, or subtest.

        :param step_type: The step_type of this TestStep.
        :type step_type: str
        """

        self._step_type = step_type
