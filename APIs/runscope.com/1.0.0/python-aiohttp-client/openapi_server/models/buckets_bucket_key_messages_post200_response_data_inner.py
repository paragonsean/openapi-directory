# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.buckets_bucket_key_messages_post200_response_data_inner_error import BucketsBucketKeyMessagesPost200ResponseDataInnerError
from openapi_server.models.buckets_bucket_key_messages_post200_response_data_inner_warning import BucketsBucketKeyMessagesPost200ResponseDataInnerWarning
from openapi_server import util


class BucketsBucketKeyMessagesPost200ResponseDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, error: BucketsBucketKeyMessagesPost200ResponseDataInnerError=None, status: str=None, unique_identifier: str=None, uuid: str=None, warning: BucketsBucketKeyMessagesPost200ResponseDataInnerWarning=None):
        """BucketsBucketKeyMessagesPost200ResponseDataInner - a model defined in OpenAPI

        :param error: The error of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :param status: The status of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :param unique_identifier: The unique_identifier of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :param uuid: The uuid of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :param warning: The warning of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        """
        self.openapi_types = {
            'error': BucketsBucketKeyMessagesPost200ResponseDataInnerError,
            'status': str,
            'unique_identifier': str,
            'uuid': str,
            'warning': BucketsBucketKeyMessagesPost200ResponseDataInnerWarning
        }

        self.attribute_map = {
            'error': 'error',
            'status': 'status',
            'unique_identifier': 'unique_identifier',
            'uuid': 'uuid',
            'warning': 'warning'
        }

        self._error = error
        self._status = status
        self._unique_identifier = unique_identifier
        self._uuid = uuid
        self._warning = warning

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BucketsBucketKeyMessagesPost200ResponseDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _buckets__bucketKey__messages_post_200_response_data_inner of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def error(self):
        """Gets the error of this BucketsBucketKeyMessagesPost200ResponseDataInner.


        :return: The error of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :rtype: BucketsBucketKeyMessagesPost200ResponseDataInnerError
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this BucketsBucketKeyMessagesPost200ResponseDataInner.


        :param error: The error of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :type error: BucketsBucketKeyMessagesPost200ResponseDataInnerError
        """

        self._error = error

    @property
    def status(self):
        """Gets the status of this BucketsBucketKeyMessagesPost200ResponseDataInner.

        One of the following: success, error, or warning.

        :return: The status of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BucketsBucketKeyMessagesPost200ResponseDataInner.

        One of the following: success, error, or warning.

        :param status: The status of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :type status: str
        """

        self._status = status

    @property
    def unique_identifier(self):
        """Gets the unique_identifier of this BucketsBucketKeyMessagesPost200ResponseDataInner.

        If the message had a unique_identifier, it will be returned in this field, to help match the responses to the messages that were submitted.

        :return: The unique_identifier of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :rtype: str
        """
        return self._unique_identifier

    @unique_identifier.setter
    def unique_identifier(self, unique_identifier):
        """Sets the unique_identifier of this BucketsBucketKeyMessagesPost200ResponseDataInner.

        If the message had a unique_identifier, it will be returned in this field, to help match the responses to the messages that were submitted.

        :param unique_identifier: The unique_identifier of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :type unique_identifier: str
        """

        self._unique_identifier = unique_identifier

    @property
    def uuid(self):
        """Gets the uuid of this BucketsBucketKeyMessagesPost200ResponseDataInner.

        This message's Runscope-generated ID.

        :return: The uuid of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :rtype: str
        """
        return self._uuid

    @uuid.setter
    def uuid(self, uuid):
        """Sets the uuid of this BucketsBucketKeyMessagesPost200ResponseDataInner.

        This message's Runscope-generated ID.

        :param uuid: The uuid of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :type uuid: str
        """

        self._uuid = uuid

    @property
    def warning(self):
        """Gets the warning of this BucketsBucketKeyMessagesPost200ResponseDataInner.


        :return: The warning of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :rtype: BucketsBucketKeyMessagesPost200ResponseDataInnerWarning
        """
        return self._warning

    @warning.setter
    def warning(self, warning):
        """Sets the warning of this BucketsBucketKeyMessagesPost200ResponseDataInner.


        :param warning: The warning of this BucketsBucketKeyMessagesPost200ResponseDataInner.
        :type warning: BucketsBucketKeyMessagesPost200ResponseDataInnerWarning
        """

        self._warning = warning
