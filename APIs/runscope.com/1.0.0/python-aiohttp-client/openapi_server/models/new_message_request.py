# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NewMessageRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body: str=None, body_encoding: str=None, form: str=None, headers: str=None, method: str=None, timestamp: float=None, url: str=None):
        """NewMessageRequest - a model defined in OpenAPI

        :param body: The body of this NewMessageRequest.
        :param body_encoding: The body_encoding of this NewMessageRequest.
        :param form: The form of this NewMessageRequest.
        :param headers: The headers of this NewMessageRequest.
        :param method: The method of this NewMessageRequest.
        :param timestamp: The timestamp of this NewMessageRequest.
        :param url: The url of this NewMessageRequest.
        """
        self.openapi_types = {
            'body': str,
            'body_encoding': str,
            'form': str,
            'headers': str,
            'method': str,
            'timestamp': float,
            'url': str
        }

        self.attribute_map = {
            'body': 'body',
            'body_encoding': 'body_encoding',
            'form': 'form',
            'headers': 'headers',
            'method': 'method',
            'timestamp': 'timestamp',
            'url': 'url'
        }

        self._body = body
        self._body_encoding = body_encoding
        self._form = form
        self._headers = headers
        self._method = method
        self._timestamp = timestamp
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NewMessageRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NewMessage_request of this NewMessageRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body(self):
        """Gets the body of this NewMessageRequest.

        HTTP request body (most commonly used for POST and PUT requests). If the request body contains binary data that cannot be included directly in the  JSON, encode the content with Base64 and include the body_encoding attribute accordingly. 

        :return: The body of this NewMessageRequest.
        :rtype: str
        """
        return self._body

    @body.setter
    def body(self, body):
        """Sets the body of this NewMessageRequest.

        HTTP request body (most commonly used for POST and PUT requests). If the request body contains binary data that cannot be included directly in the  JSON, encode the content with Base64 and include the body_encoding attribute accordingly. 

        :param body: The body of this NewMessageRequest.
        :type body: str
        """

        self._body = body

    @property
    def body_encoding(self):
        """Gets the body_encoding of this NewMessageRequest.

        If the request body was encoded with Base64, this field should be present and set to  \"base64\". If not specified, defaults to \"plaintext\" 

        :return: The body_encoding of this NewMessageRequest.
        :rtype: str
        """
        return self._body_encoding

    @body_encoding.setter
    def body_encoding(self, body_encoding):
        """Sets the body_encoding of this NewMessageRequest.

        If the request body was encoded with Base64, this field should be present and set to  \"base64\". If not specified, defaults to \"plaintext\" 

        :param body_encoding: The body_encoding of this NewMessageRequest.
        :type body_encoding: str
        """

        self._body_encoding = body_encoding

    @property
    def form(self):
        """Gets the form of this NewMessageRequest.

        JSON object of set of form fields included in a POST request.  Values can either be represented as a string or as an array of strings. 

        :return: The form of this NewMessageRequest.
        :rtype: str
        """
        return self._form

    @form.setter
    def form(self, form):
        """Sets the form of this NewMessageRequest.

        JSON object of set of form fields included in a POST request.  Values can either be represented as a string or as an array of strings. 

        :param form: The form of this NewMessageRequest.
        :type form: str
        """

        self._form = form

    @property
    def headers(self):
        """Gets the headers of this NewMessageRequest.

        JSON object of header keys and values -- with values as a string or an array of strings.

        :return: The headers of this NewMessageRequest.
        :rtype: str
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this NewMessageRequest.

        JSON object of header keys and values -- with values as a string or an array of strings.

        :param headers: The headers of this NewMessageRequest.
        :type headers: str
        """

        self._headers = headers

    @property
    def method(self):
        """Gets the method of this NewMessageRequest.

        HTTP method name (GET, POST, PUT, HEAD, OPTIONS, PATCH, DELETE, etc.)

        :return: The method of this NewMessageRequest.
        :rtype: str
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this NewMessageRequest.

        HTTP method name (GET, POST, PUT, HEAD, OPTIONS, PATCH, DELETE, etc.)

        :param method: The method of this NewMessageRequest.
        :type method: str
        """

        self._method = method

    @property
    def timestamp(self):
        """Gets the timestamp of this NewMessageRequest.

        Unix timestamp indicating when the request was made.

        :return: The timestamp of this NewMessageRequest.
        :rtype: float
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this NewMessageRequest.

        Unix timestamp indicating when the request was made.

        :param timestamp: The timestamp of this NewMessageRequest.
        :type timestamp: float
        """

        self._timestamp = timestamp

    @property
    def url(self):
        """Gets the url of this NewMessageRequest.

        Full URL of the request, including URL querystring parameters.

        :return: The url of this NewMessageRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NewMessageRequest.

        Full URL of the request, including URL querystring parameters.

        :param url: The url of this NewMessageRequest.
        :type url: str
        """

        self._url = url
