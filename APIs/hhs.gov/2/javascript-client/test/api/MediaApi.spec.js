/**
 * HHS Media Services API
 * <div class=\"swagger-ui-wrap extraFooter\"><h3>Common Features / Behaviors</h3> <div class=\"features\"> <ul> <li><strong>* \"sort\" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. <br/> <strong><span>Examples:</span></strong> <ul> <li><span class=\"example\">name</span><span class=\"description\">sort results by name ascending</span></li> <li><span class=\"example\">-name</span><span class=\"description\">sort results by name descending</span></li> <li><span class=\"example\">-name,id</span><span class=\"description\">sort results by name descending and then by id ascending</span></li> <li><span class=\"example\">id,-dateContentAuthored</span><span class=\"description\">sort results by id ascending and then date descending</span></li> </ul> </li> <li><strong>Date formats:</strong> Date input format is expected to be based on <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>
 *
 * The version of the OpenAPI document: 2
 * Contact: syndicationadmin@hhs.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.HhsMediaServicesApi);
  }
}(this, function(expect, HhsMediaServicesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new HhsMediaServicesApi.MediaApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MediaApi', function() {
    describe('resourcesMediaFeaturedJsonGet', function() {
      it('should call resourcesMediaFeaturedJsonGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaFeaturedJsonGet
        //instance.resourcesMediaFeaturedJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdContentGet', function() {
      it('should call resourcesMediaIdContentGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdContentGet
        //instance.resourcesMediaIdContentGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdEmbedJsonGet', function() {
      it('should call resourcesMediaIdEmbedJsonGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdEmbedJsonGet
        //instance.resourcesMediaIdEmbedJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdJsonGet', function() {
      it('should call resourcesMediaIdJsonGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdJsonGet
        //instance.resourcesMediaIdJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdPreviewJpgGet', function() {
      it('should call resourcesMediaIdPreviewJpgGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdPreviewJpgGet
        //instance.resourcesMediaIdPreviewJpgGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdRelatedMediaFormatGet', function() {
      it('should call resourcesMediaIdRelatedMediaFormatGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdRelatedMediaFormatGet
        //instance.resourcesMediaIdRelatedMediaFormatGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdSyndicateFormatGet', function() {
      it('should call resourcesMediaIdSyndicateFormatGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdSyndicateFormatGet
        //instance.resourcesMediaIdSyndicateFormatGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdThumbnailJpgGet', function() {
      it('should call resourcesMediaIdThumbnailJpgGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdThumbnailJpgGet
        //instance.resourcesMediaIdThumbnailJpgGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaIdYoutubeMetaDataJsonGet', function() {
      it('should call resourcesMediaIdYoutubeMetaDataJsonGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaIdYoutubeMetaDataJsonGet
        //instance.resourcesMediaIdYoutubeMetaDataJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaJsonGet', function() {
      it('should call resourcesMediaJsonGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaJsonGet
        //instance.resourcesMediaJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaMostPopularMediaFormatGet', function() {
      it('should call resourcesMediaMostPopularMediaFormatGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaMostPopularMediaFormatGet
        //instance.resourcesMediaMostPopularMediaFormatGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('resourcesMediaSearchResultsJsonGet', function() {
      it('should call resourcesMediaSearchResultsJsonGet successfully', function(done) {
        //uncomment below and update the code to test resourcesMediaSearchResultsJsonGet
        //instance.resourcesMediaSearchResultsJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
