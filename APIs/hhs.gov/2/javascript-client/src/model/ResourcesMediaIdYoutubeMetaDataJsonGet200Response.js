/**
 * HHS Media Services API
 * <div class=\"swagger-ui-wrap extraFooter\"><h3>Common Features / Behaviors</h3> <div class=\"features\"> <ul> <li><strong>* \"sort\" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. <br/> <strong><span>Examples:</span></strong> <ul> <li><span class=\"example\">name</span><span class=\"description\">sort results by name ascending</span></li> <li><span class=\"example\">-name</span><span class=\"description\">sort results by name descending</span></li> <li><span class=\"example\">-name,id</span><span class=\"description\">sort results by name descending and then by id ascending</span></li> <li><span class=\"example\">id,-dateContentAuthored</span><span class=\"description\">sort results by id ascending and then date descending</span></li> </ul> </li> <li><strong>Date formats:</strong> Date input format is expected to be based on <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>
 *
 * The version of the OpenAPI document: 2
 * Contact: syndicationadmin@hhs.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Meta from './Meta';

/**
 * The ResourcesMediaIdYoutubeMetaDataJsonGet200Response model module.
 * @module model/ResourcesMediaIdYoutubeMetaDataJsonGet200Response
 * @version 2
 */
class ResourcesMediaIdYoutubeMetaDataJsonGet200Response {
    /**
     * Constructs a new <code>ResourcesMediaIdYoutubeMetaDataJsonGet200Response</code>.
     * @alias module:model/ResourcesMediaIdYoutubeMetaDataJsonGet200Response
     */
    constructor() { 
        
        ResourcesMediaIdYoutubeMetaDataJsonGet200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourcesMediaIdYoutubeMetaDataJsonGet200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourcesMediaIdYoutubeMetaDataJsonGet200Response} obj Optional instance to populate.
     * @return {module:model/ResourcesMediaIdYoutubeMetaDataJsonGet200Response} The populated <code>ResourcesMediaIdYoutubeMetaDataJsonGet200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourcesMediaIdYoutubeMetaDataJsonGet200Response();

            if (data.hasOwnProperty('callback')) {
                obj['callback'] = ApiClient.convertToType(data['callback'], 'String');
            }
            if (data.hasOwnProperty('meta')) {
                obj['meta'] = Meta.constructFromObject(data['meta']);
            }
            if (data.hasOwnProperty('results')) {
                obj['results'] = ApiClient.convertToType(data['results'], [Object]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourcesMediaIdYoutubeMetaDataJsonGet200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourcesMediaIdYoutubeMetaDataJsonGet200Response</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callback'] && !(typeof data['callback'] === 'string' || data['callback'] instanceof String)) {
            throw new Error("Expected the field `callback` to be a primitive type in the JSON string but got " + data['callback']);
        }
        // validate the optional field `meta`
        if (data['meta']) { // data not null
          Meta.validateJSON(data['meta']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['results'])) {
            throw new Error("Expected the field `results` to be an array in the JSON data but got " + data['results']);
        }

        return true;
    }


}



/**
 * @member {String} callback
 */
ResourcesMediaIdYoutubeMetaDataJsonGet200Response.prototype['callback'] = undefined;

/**
 * @member {module:model/Meta} meta
 */
ResourcesMediaIdYoutubeMetaDataJsonGet200Response.prototype['meta'] = undefined;

/**
 * @member {Array.<Object>} results
 */
ResourcesMediaIdYoutubeMetaDataJsonGet200Response.prototype['results'] = undefined;






export default ResourcesMediaIdYoutubeMetaDataJsonGet200Response;

