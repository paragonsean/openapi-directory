/**
 * HHS Media Services API
 * <div class=\"swagger-ui-wrap extraFooter\"><h3>Common Features / Behaviors</h3> <div class=\"features\"> <ul> <li><strong>* \"sort\" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. <br/> <strong><span>Examples:</span></strong> <ul> <li><span class=\"example\">name</span><span class=\"description\">sort results by name ascending</span></li> <li><span class=\"example\">-name</span><span class=\"description\">sort results by name descending</span></li> <li><span class=\"example\">-name,id</span><span class=\"description\">sort results by name descending and then by id ascending</span></li> <li><span class=\"example\">id,-dateContentAuthored</span><span class=\"description\">sort results by id ascending and then date descending</span></li> </ul> </li> <li><strong>Date formats:</strong> Date input format is expected to be based on <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>
 *
 * The version of the OpenAPI document: 2
 * Contact: syndicationadmin@hhs.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Pagination model module.
 * @module model/Pagination
 * @version 2
 */
class Pagination {
    /**
     * Constructs a new <code>Pagination</code>.
     * @alias module:model/Pagination
     */
    constructor() { 
        
        Pagination.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Pagination</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Pagination} obj Optional instance to populate.
     * @return {module:model/Pagination} The populated <code>Pagination</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Pagination();

            if (data.hasOwnProperty('count')) {
                obj['count'] = ApiClient.convertToType(data['count'], 'Number');
            }
            if (data.hasOwnProperty('currentUrl')) {
                obj['currentUrl'] = ApiClient.convertToType(data['currentUrl'], 'String');
            }
            if (data.hasOwnProperty('max')) {
                obj['max'] = ApiClient.convertToType(data['max'], 'Number');
            }
            if (data.hasOwnProperty('nextUrl')) {
                obj['nextUrl'] = ApiClient.convertToType(data['nextUrl'], 'String');
            }
            if (data.hasOwnProperty('offset')) {
                obj['offset'] = ApiClient.convertToType(data['offset'], 'Number');
            }
            if (data.hasOwnProperty('pageNum')) {
                obj['pageNum'] = ApiClient.convertToType(data['pageNum'], 'Number');
            }
            if (data.hasOwnProperty('previousUrl')) {
                obj['previousUrl'] = ApiClient.convertToType(data['previousUrl'], 'String');
            }
            if (data.hasOwnProperty('sort')) {
                obj['sort'] = ApiClient.convertToType(data['sort'], 'String');
            }
            if (data.hasOwnProperty('total')) {
                obj['total'] = ApiClient.convertToType(data['total'], 'Number');
            }
            if (data.hasOwnProperty('totalPages')) {
                obj['totalPages'] = ApiClient.convertToType(data['totalPages'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Pagination</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Pagination</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currentUrl'] && !(typeof data['currentUrl'] === 'string' || data['currentUrl'] instanceof String)) {
            throw new Error("Expected the field `currentUrl` to be a primitive type in the JSON string but got " + data['currentUrl']);
        }
        // ensure the json data is a string
        if (data['nextUrl'] && !(typeof data['nextUrl'] === 'string' || data['nextUrl'] instanceof String)) {
            throw new Error("Expected the field `nextUrl` to be a primitive type in the JSON string but got " + data['nextUrl']);
        }
        // ensure the json data is a string
        if (data['previousUrl'] && !(typeof data['previousUrl'] === 'string' || data['previousUrl'] instanceof String)) {
            throw new Error("Expected the field `previousUrl` to be a primitive type in the JSON string but got " + data['previousUrl']);
        }
        // ensure the json data is a string
        if (data['sort'] && !(typeof data['sort'] === 'string' || data['sort'] instanceof String)) {
            throw new Error("Expected the field `sort` to be a primitive type in the JSON string but got " + data['sort']);
        }

        return true;
    }


}



/**
 * @member {Number} count
 */
Pagination.prototype['count'] = undefined;

/**
 * @member {String} currentUrl
 */
Pagination.prototype['currentUrl'] = undefined;

/**
 * @member {Number} max
 */
Pagination.prototype['max'] = undefined;

/**
 * @member {String} nextUrl
 */
Pagination.prototype['nextUrl'] = undefined;

/**
 * @member {Number} offset
 */
Pagination.prototype['offset'] = undefined;

/**
 * @member {Number} pageNum
 */
Pagination.prototype['pageNum'] = undefined;

/**
 * @member {String} previousUrl
 */
Pagination.prototype['previousUrl'] = undefined;

/**
 * @member {String} sort
 */
Pagination.prototype['sort'] = undefined;

/**
 * @member {Number} total
 */
Pagination.prototype['total'] = undefined;

/**
 * @member {Number} totalPages
 */
Pagination.prototype['totalPages'] = undefined;






export default Pagination;

