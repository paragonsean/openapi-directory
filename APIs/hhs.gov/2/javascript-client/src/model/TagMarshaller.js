/**
 * HHS Media Services API
 * <div class=\"swagger-ui-wrap extraFooter\"><h3>Common Features / Behaviors</h3> <div class=\"features\"> <ul> <li><strong>* \"sort\" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. <br/> <strong><span>Examples:</span></strong> <ul> <li><span class=\"example\">name</span><span class=\"description\">sort results by name ascending</span></li> <li><span class=\"example\">-name</span><span class=\"description\">sort results by name descending</span></li> <li><span class=\"example\">-name,id</span><span class=\"description\">sort results by name descending and then by id ascending</span></li> <li><span class=\"example\">id,-dateContentAuthored</span><span class=\"description\">sort results by id ascending and then date descending</span></li> </ul> </li> <li><strong>Date formats:</strong> Date input format is expected to be based on <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>
 *
 * The version of the OpenAPI document: 2
 * Contact: syndicationadmin@hhs.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TagLanguageMarshaller from './TagLanguageMarshaller';
import TagTypeMarshaller from './TagTypeMarshaller';

/**
 * The TagMarshaller model module.
 * @module model/TagMarshaller
 * @version 2
 */
class TagMarshaller {
    /**
     * Constructs a new <code>TagMarshaller</code>.
     * @alias module:model/TagMarshaller
     */
    constructor() { 
        
        TagMarshaller.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TagMarshaller</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TagMarshaller} obj Optional instance to populate.
     * @return {module:model/TagMarshaller} The populated <code>TagMarshaller</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TagMarshaller();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = TagLanguageMarshaller.constructFromObject(data['language']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = TagTypeMarshaller.constructFromObject(data['type']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TagMarshaller</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TagMarshaller</code>.
     */
    static validateJSON(data) {
        // validate the optional field `language`
        if (data['language']) { // data not null
          TagLanguageMarshaller.validateJSON(data['language']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // validate the optional field `type`
        if (data['type']) { // data not null
          TagTypeMarshaller.validateJSON(data['type']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
TagMarshaller.prototype['id'] = undefined;

/**
 * @member {module:model/TagLanguageMarshaller} language
 */
TagMarshaller.prototype['language'] = undefined;

/**
 * @member {String} name
 */
TagMarshaller.prototype['name'] = undefined;

/**
 * @member {module:model/TagTypeMarshaller} type
 */
TagMarshaller.prototype['type'] = undefined;






export default TagMarshaller;

