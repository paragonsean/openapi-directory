openapi: 3.0.0
info:
  contact:
    email: syndicationadmin@hhs.gov
  description: "<div class=\"swagger-ui-wrap extraFooter\"><h3>Common Features / Behaviors</h3>\
    \ <div class=\"features\"> <ul> <li><strong>* \"sort\" param:</strong> supports\
    \ multi column sorting through the use of commas as delimiters, and a hyphen to\
    \ denote descending order. <br/> <strong><span>Examples:</span></strong> <ul>\
    \ <li><span class=\"example\">name</span><span class=\"description\">sort results\
    \ by name ascending</span></li> <li><span class=\"example\">-name</span><span\
    \ class=\"description\">sort results by name descending</span></li> <li><span\
    \ class=\"example\">-name,id</span><span class=\"description\">sort results by\
    \ name descending and then by id ascending</span></li> <li><span class=\"example\"\
    >id,-dateContentAuthored</span><span class=\"description\">sort results by id\
    \ ascending and then date descending</span></li> </ul> </li> <li><strong>Date\
    \ formats:</strong> Date input format is expected to be based on <a href=\"http://www.ietf.org/rfc/rfc3339.txt\"\
    >RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul>\
    \ </li> </ul> </div> </div>"
  license:
    name: GNU GENERAL PUBLIC LICENSE
    url: http://www.gnu.org/licenses/gpl.html
  termsOfService: http://www.hhs.gov/web/socialmedia/policies/tos.html#ready
  title: HHS Media Services API
  version: "2"
  x-apisguru-categories:
  - open_data
  x-logo:
    backgroundColor: '#185394'
    url: http://www.hhs.gov/sites/all/themes/project_h/css/images/hhs_logo.png
  x-origin:
  - converter:
      url: https://github.com/mermade/oas-kit
      version: 2.6.0
    format: openapi
    url: https://api.digitalmedia.hhs.gov/swagger
    version: "3.0"
  x-providerName: hhs.gov
servers:
- url: /api/v2
tags:
- description: Information about media
  name: media
- description: Information about languages
  name: languages
- description: Information about media types
  name: mediaTypes
- description: Information about tags
  name: tags
- description: Information about campaigns
  name: campaigns
- description: Information about tags
  name: sources
- description: Global Search
  name: resources
- description: Get media from user generated lists.
  name: userMediaLists
paths:
  /resources.json:
    get:
      description: Global search
      operationId: resources_json_get
      parameters:
      - allowEmptyValue: false
        description: The search query supplied by the user
        explode: false
        in: query
        name: q
        required: true
        schema:
          format: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ResourceWrapped'
                title: ArrayOfResources
                type: array
          description: '"Returns the list of Resources matching the search query ''q''.<p>The
            search query ''q'' is a Lucene query.<br>The syntax for a Lucene query
            can be found <a href="http://lucene.apache.org/core/2_9_4/queryparsersyntax.html">here</a>."'
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Resources by search query
      tags:
      - resources
      x-openapi-router-controller: openapi_server.controllers.resources_controller
  /resources/campaigns.json:
    get:
      description: Media Listings for a specific campaign
      operationId: resources_campaigns_json_get
      parameters:
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The offset of the records set to return for pagination
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: '* Set of fields to sort the records by.'
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignWrapped'
          description: Returns the list of Campaigns.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get Campaigns
      tags:
      - campaigns
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
  /resources/campaigns/{id}.json:
    get:
      description: Information about a specific campaign
      operationId: resources_campaigns_id_json_get
      parameters:
      - description: The id of the record to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CampaignWrapped'
          description: Returns the Campaign identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Campaign by ID
      tags:
      - campaigns
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
  /resources/campaigns/{id}/media.json:
    get:
      description: Campaign Listings
      operationId: resources_campaigns_id_media_json_get
      parameters:
      - description: The id of the campaign to find media items for
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The offset of the records set to return for pagination
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MediaItemWrapped'
          description: Returns the list of MediaItems for the Campaign identified
            by the 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems by Campaign ID
      tags:
      - campaigns
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
  /resources/campaigns/{id}/syndicate.{format}:
    get:
      description: MediaItem
      operationId: resources_campaigns_id_syndicate_format_get
      parameters:
      - description: The id of the record to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: "Method used to render an html request. Accepts one: [mv, list,\
          \ feed]"
        explode: false
        in: query
        name: displayMethod
        required: false
        schema:
          format: ""
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMarshallerWrapped'
          description: Renders the list of MediaItems associated with the Tag identified
            by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Campaign
      tags:
      - campaigns
      x-openapi-router-controller: openapi_server.controllers.campaigns_controller
  /resources/languages.json:
    get:
      description: Language Listings
      operationId: resources_languages_json_get
      parameters:
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return records starting at the offset index.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LanguageWrapped'
                title: ArrayOfLanguages
                type: array
          description: Returns the list Languages.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get Languages
      tags:
      - languages
      x-openapi-router-controller: openapi_server.controllers.languages_controller
  /resources/languages/{id}.json:
    get:
      description: Information about a specific language
      operationId: resources_languages_id_json_get
      parameters:
      - description: The id of the language to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/LanguageWrapped'
                title: ArrayOfLanguages
                type: array
          description: Returns the Language identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Language by ID
      tags:
      - languages
      x-openapi-router-controller: openapi_server.controllers.languages_controller
  /resources/media.json:
    get:
      description: Media Items Listings
      operationId: resources_media_json_get
      parameters:
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The offset of the records set to return for pagination.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: '* Set of fields to sort the records by.'
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: '* The ascending or descending order.'
        explode: false
        in: query
        name: order
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items belonging to the specified media type[s]."
        explode: false
        in: query
        name: mediaTypes
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items containing the provided name, case insensitive."
        explode: false
        in: query
        name: name
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Restrict filtering to media items in a specific collection.
        explode: false
        in: query
        name: collectionId
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: "Find all media items containing the partial name, case insensitive."
        explode: false
        in: query
        name: nameContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items containing the provided partial description,\
          \ case insensitive."
        explode: false
        in: query
        name: descriptionContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items which have the provided sourceUrl, case\
          \ insensitive."
        explode: false
        in: query
        name: sourceUrl
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items which contain the provided partial sourceUrl,\
          \ case insensitive."
        explode: false
        in: query
        name: sourceUrlContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items which have the provided customThumbnailUrl,\
          \ case insensitive."
        explode: false
        in: query
        name: customThumbnailUrl
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items which contain the provided partial customThumbnailUrl,\
          \ case insensitive."
        explode: false
        in: query
        name: customThumbnailUrlContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items authored on the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: dateContentAuthored
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated on the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: dateContentUpdated
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items published on the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: dateContentPublished
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items reviewed on the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: dateContentReviewed
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items syndicated on the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: dateSyndicationCaptured
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated through the syndication system\
          \ on the provided day, (RFC 3339, time ignored)."
        explode: false
        in: query
        name: dateSyndicationUpdated
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items authored since the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: contentAuthoredSinceDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items authored before the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: contentAuthoredBeforeDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items authored between the provided start and\
          \ end days (RFC 3339, comma separated, time ignored)."
        explode: false
        in: query
        name: contentAuthoredInRange
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated since the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: contentUpdatedSinceDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated before the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: contentUpdatedBeforeDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated between the provided start and\
          \ end days (RFC 3339, comma separated, time ignored)."
        explode: false
        in: query
        name: contentUpdatedInRange
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated since the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: contentPublishedSinceDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items published before the provided day (RFC\
          \ 3339, time ignored)."
        explode: false
        in: query
        name: contentPublishedBeforeDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items published between the provided start and\
          \ end days (RFC 3339, comma separated, time ignored)."
        explode: false
        in: query
        name: contentPublishedInRange
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items reviewed since the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: contentReviewedSinceDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items reviewed before the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: contentReviewedBeforeDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items reviewed between the provided start and\
          \ end days (RFC 3339, comma separated, time ignored)."
        explode: false
        in: query
        name: contentReviewedInRange
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items authored since the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: syndicationCapturedSinceDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items authored before the provided day (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: syndicationCapturedBeforeDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items authored between the provided start and\
          \ end days (RFC 3339, comma separated, time ignored)."
        explode: false
        in: query
        name: syndicationCapturedInRange
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated since the provided day, (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: syndicationUpdatedSinceDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated before the provided day, (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: syndicationUpdatedBeforeDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items updated between the provided start and\
          \ end days, (RFC 3339, comma separated, time ignored)."
        explode: false
        in: query
        name: syndicationUpdatedInRange
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items visible since the provided day, (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: syndicationVisibleSinceDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items visible before the provided day, (RFC 3339,\
          \ time ignored)."
        explode: false
        in: query
        name: syndicationVisibleBeforeDate
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items visible between the provided start and\
          \ end days, (RFC 3339, comma separated, time ignored)."
        explode: false
        in: query
        name: syndicationVisibleInRange
        required: false
        schema:
          format: date
          type: string
        style: form
      - allowEmptyValue: false
        description: Find all media items written in the language specified by Id.
        explode: false
        in: query
        name: languageId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - allowEmptyValue: false
        description: "Find all media items written in the language specified by name,\
          \ case insensitive."
        explode: false
        in: query
        name: languageName
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items written in the language specified by 639-2\
          \ isoCode , case insensitive."
        explode: false
        in: query
        name: languageIsoCode
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items which match the provided hash, case insensitive."
        explode: false
        in: query
        name: hash
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items which match the provided partial hash,\
          \ case insensitive."
        explode: false
        in: query
        name: hashContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Find all media items that belong to the source specified by Id.
        explode: false
        in: query
        name: sourceId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - allowEmptyValue: false
        description: "Find all media items that belong to the source specified by\
          \ name, case insensitive."
        explode: false
        in: query
        name: sourceName
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items that belong to the source specified by\
          \ partial name, case insensitive."
        explode: false
        in: query
        name: sourceNameContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items that belong to the source specified by\
          \ acronym, case insensitive."
        explode: false
        in: query
        name: sourceAcronym
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Find all media items that belong to the source specified by\
          \ partial acronym, case insensitive."
        explode: false
        in: query
        name: sourceAcronymContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Find only media items tagged with the specified tag Ids.
        explode: false
        in: query
        name: tagIds
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Find only media from within the supplied list of Ids.
        explode: false
        in: query
        name: restrictToSet
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Find all media items containing the createdBy value.
        explode: false
        in: query
        name: createdBy
        required: false
        schema:
          format: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems matching the specified query
            parameters.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/featured.json:
    get:
      description: Get the list of featured content in the syndication system
      operationId: resources_media_featured_json_get
      parameters:
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return records starting at the offset index.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItem'
                title: ArrayOfMediaItems
                type: array
          description: Get the list of featured content in the syndication system
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get the list of featured content in the syndication system
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/mostPopularMedia.{format}:
    get:
      description: Get the media with the highest ratings.
      operationId: resources_media_most_popular_media_format_get
      parameters:
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The offset of the records set to return for pagination.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems with the highest ratings.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems by popularity
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/searchResults.json:
    get:
      description: Full search
      operationId: resources_media_search_results_json_get
      parameters:
      - allowEmptyValue: false
        description: The search query supplied by the user
        explode: false
        in: query
        name: q
        required: true
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The offset of the records set to return for pagination.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems matching the search query 'q'.<p>Please
            enter keyword or URL in search query 'q'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems by search query
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}.json:
    get:
      description: Information about a specific media item
      operationId: resources_media_id_json_get
      parameters:
      - description: The id of the record to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfMediaItems
                type: array
          description: Returns the MediaItem identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItem by ID
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}/content:
    get:
      description: "The actual media content (html, image, etc...)"
      operationId: resources_media_id_content_get
      parameters:
      - description: The id of the media to show content for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: The method that called this method
        explode: false
        in: query
        name: calledByBuild
        required: false
        schema:
          format: ""
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: "Returns the raw content (html, image, etc...) for the MediaItem\
            \ identified by the 'id'."
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get content for MediaItem
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}/embed.json:
    get:
      description: Get the javascript or iframe embed code for this item (to embed
        it on a web page).
      operationId: resources_media_id_embed_json_get
      parameters:
      - description: The id of the media to get embed code for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: "Currently supports 'iframe', defaults to 'javascript'."
        explode: false
        in: query
        name: flavor
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: The width of the generated iframe.
        explode: false
        in: query
        name: width
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The height of the generated iframe.
        explode: false
        in: query
        name: height
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The name of the iframe element
        explode: false
        in: query
        name: iframeName
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Should a reference to the JQuery Library be omitted?
        explode: false
        in: query
        name: excludeJquery
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: Should the div to insert content into be omitted?
        explode: false
        in: query
        name: excludeDiv
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: Should the div to insert content into have a specific name?
        explode: false
        in: query
        name: divId
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Method used to render an html request. Accepts one: [mv, list,\
          \ feed]"
        explode: false
        in: query
        name: displayMethod
        required: false
        schema:
          format: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Returns the javascript or iframe embed code for the MediaItem
            identified by 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get embed code for MediaItem
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}/preview.jpg:
    get:
      description: Get the jpg preview of the content item where applicable.
      operationId: resources_media_id_preview_jpg_get
      parameters:
      - description: The id of the media to get a preview for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: "Returns the JPG preview, where applicable, for the MediaItem\
            \ identified by the 'id'."
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Tag by ID
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}/relatedMedia.{format}:
    get:
      description: Get the media related to the current media item.
      operationId: resources_media_id_related_media_format_get
      parameters:
      - description: The id of the media item to get related media for
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return records starting at the offset index.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems related to the MediaItem identified
            by the 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get related MediaItems by ID
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}/syndicate.{format}:
    get:
      description: Get syndicated content.
      operationId: resources_media_id_syndicate_format_get
      parameters:
      - description: The id of the media to show embed code for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: The css class to target for extraction.
        explode: false
        in: query
        name: cssClass
        required: false
        schema:
          default: syndicate
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Remove in-line styles from content.
        explode: false
        in: query
        name: stripStyles
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: Remove script tags from content.
        explode: false
        in: query
        name: stripScripts
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: Remove image tags from content.
        explode: false
        in: query
        name: stripImages
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: Remove break tags from content.
        explode: false
        in: query
        name: stripBreaks
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: Remove class attributes from content (except 'syndicate').
        explode: false
        in: query
        name: stripClasses
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: "Set font size (in points) of p, div, and span tags."
        explode: false
        in: query
        name: font-size
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: "Accepts valid CSS float options, such as 'left' or 'right'.\
          \ Will inject a style into the content before rendering."
        explode: false
        in: query
        name: imageFloat
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "Accepts 4 CSV values representing pixel sizes of margin similar\
          \ to CSS. Default format is 'north,east,south,west' - for example '0,10,10,0'\
          \ would put a 10 pixel margin on the right and bottom sides of an image.\
          \ Will inject a style into the content before rendering."
        explode: false
        in: query
        name: imageMargin
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: "If content is a video, the embeded video will auto play when\
          \ loaded."
        explode: false
        in: query
        name: autoplay
        required: false
        schema:
          default: true
          format: ""
          type: boolean
        style: form
      - allowEmptyValue: false
        description: "If content is a video, related items will be shown at the end\
          \ of playback."
        explode: false
        in: query
        name: rel
        required: false
        schema:
          default: false
          format: ""
          type: boolean
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyndicateMarshallerWrapped'
          description: Returns the syndicated content for a given MediaItem in the
            specified 'format' (HTML or JSON).
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get syndicated content for MediaItem
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}/thumbnail.jpg:
    get:
      description: Get the jpg thumbnail of the content item where applicable.
      operationId: resources_media_id_thumbnail_jpg_get
      parameters:
      - description: The id of the media to get a thumbnail for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: "Returns the JPG thumbnail, where applicable, for the MediaItem\
            \ identified by the 'id'."
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get JPG thumbnail for MediaItem
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/media/{id}/youtubeMetaData.json:
    get:
      description: Youtube meta-data for a video item.
      operationId: resources_media_id_youtube_meta_data_json_get
      parameters:
      - description: The id of the video to show meta data for.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/_resources_media__id__youtubeMetaData_json_get_200_response'
          description: "Returns the Youtube metadata, where applicable, for the MediaItem\
            \ identified by the 'id'."
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Youtube metadata for MediaItem
      tags:
      - media
      x-openapi-router-controller: openapi_server.controllers.media_controller
  /resources/mediaTypes.{format}:
    get:
      description: Information about media types
      operationId: resources_media_types_format_get
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaTypeHolderWrapped'
                title: ArrayOfMediaTypes
                type: array
          description: Returns the list of available MediaTypes.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaTypes
      tags:
      - mediaTypes
      x-openapi-router-controller: openapi_server.controllers.media_types_controller
  /resources/sources.json:
    get:
      description: Source Listings
      operationId: resources_sources_json_get
      parameters:
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return records starting at the offset index.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceWrapped'
                title: ArrayOfSources
                type: array
          description: Returns the list of Sources.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Sources
      tags:
      - sources
      x-openapi-router-controller: openapi_server.controllers.sources_controller
  /resources/sources/{id}.json:
    get:
      description: Information about a specific source.
      operationId: resources_sources_id_json_get
      parameters:
      - description: The id of the source to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SourceWrapped'
                title: ArrayOfSources
                type: array
          description: Returns the Source identified by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Source by ID
      tags:
      - sources
      x-openapi-router-controller: openapi_server.controllers.sources_controller
  /resources/sources/{id}/syndicate.{format}:
    get:
      description: MediaItem
      operationId: resources_sources_id_syndicate_format_get
      parameters:
      - description: The id of the record to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: "Method used to render an html request. Accepts one: [mv, list,\
          \ feed]"
        explode: false
        in: query
        name: displayMethod
        required: false
        schema:
          format: ""
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfSyndicatedItems
                type: array
          description: Renders the list of MediaItems associated with the Source identified
            by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Source
      tags:
      - sources
      x-openapi-router-controller: openapi_server.controllers.sources_controller
  /resources/tags.{format}:
    get:
      description: List of Tags
      operationId: resources_tags_format_get
      parameters:
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return records starting at the offset index.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: "Return tags[s] matching the supplied name"
        explode: false
        in: query
        name: name
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Return tags which contain the supplied partial name.
        explode: false
        in: query
        name: nameContains
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: Return tags associated with the supplied media id.
        explode: false
        in: query
        name: mediaId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return tags belonging to the supplied tag type id.
        explode: false
        in: query
        name: typeId
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return tags belonging to the supplied tag type name.
        explode: false
        in: query
        name: typeName
        required: false
        schema:
          format: ""
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagMarshallerWrapped'
                title: ArrayOfTags
                type: array
          description: Returns the list of Tags matching the specified query parameters
            in the specified 'format'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get Tags
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /resources/tags/tagLanguages.{format}:
    get:
      description: List of Tag Languages
      operationId: resources_tags_tag_languages_format_get
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagLanguageMarshallerWrapped'
                title: ArrayOfTagLanguages
                type: array
          description: Returns the list of TagLanguages
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get TagLanguages
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /resources/tags/tagTypes.{format}:
    get:
      description: List of Types
      operationId: resources_tags_tag_types_format_get
      parameters:
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagTypeMarshallerWrapped'
                title: ArrayOfTagTypes
                type: array
          description: Renders the list of MediaItems associated with the Tag identified
            by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /resources/tags/{id}.{format}:
    get:
      description: Information about a specific tag
      operationId: resources_tags_id_format_get
      parameters:
      - description: The id of the record to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagMarshallerWrapped'
                title: ArrayOfTags
                type: array
          description: Returns the Tag identified by the 'id' in the specified 'format'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get Tag by ID
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /resources/tags/{id}/media.{format}:
    get:
      description: MediaItem
      operationId: resources_tags_id_media_format_get
      parameters:
      - description: The id of the tag to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return records starting at the offset index.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfMediaItems
                type: array
          description: Returns the list of MediaItems associated with the Tag identified
            by the 'id'.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /resources/tags/{id}/related.{format}:
    get:
      description: Information about related tags to a specific tag
      operationId: resources_tags_id_related_format_get
      parameters:
      - description: The id of the tag to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: The name of the property to which sorting will be applied
        explode: false
        in: query
        name: sort
        required: false
        schema:
          format: ""
          type: string
        style: form
      - allowEmptyValue: false
        description: The maximum number of records to return
        explode: false
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - allowEmptyValue: false
        description: Return records starting at the offset index.
        explode: false
        in: query
        name: offset
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/TagMarshallerWrapped'
                title: ArrayOfTags
                type: array
          description: Returns the list of Tags related to the Tag identified by the
            'id' in the specified format.
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      summary: Get related Tags by ID
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /resources/tags/{id}/syndicate.{format}:
    get:
      description: MediaItem
      operationId: resources_tags_id_syndicate_format_get
      parameters:
      - description: The id of the record to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: "Method used to render an html request. Accepts one: [mv, list,\
          \ feed]"
        explode: false
        in: query
        name: displayMethod
        required: false
        schema:
          format: ""
          type: string
        style: form
      - description: Automatically added
        explode: false
        in: path
        name: format
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Renders the list of MediaItems associated with the Tag identified
            by the 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get MediaItems for Tag
      tags:
      - tags
      x-openapi-router-controller: openapi_server.controllers.tags_controller
  /resources/userMediaLists/{id}.json:
    get:
      description: Get a specific user media list.
      operationId: resources_user_media_lists_id_json_get
      parameters:
      - description: The id of the record to look up
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - allowEmptyValue: false
        description: "Method used to render an html request. Accepts one: [mv, list,\
          \ feed]"
        explode: false
        in: query
        name: displayMethod
        required: false
        schema:
          format: int64
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MediaItemWrapped'
                title: ArrayOfMediaItems
                type: array
          description: Get a specific user media list by 'id'.
        "400":
          description: Invalid ID
        "500":
          description: Internal Server Error
      summary: Get UserMediaList by ID
      tags:
      - userMediaLists
      x-openapi-router-controller: openapi_server.controllers.user_media_lists_controller
components:
  schemas:
    AlternateImage:
      properties:
        height:
          format: int32
          title: height
          type: integer
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        url:
          title: url
          type: string
        width:
          format: int32
          title: width
          type: integer
      title: AlternateImage
      type: object
    AlternateImageWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/AlternateImage'
          type: array
      type: object
    Campaign:
      example:
        contactEmail: contactEmail
        endDate: 2000-01-23
        name: name
        description: description
        id: 9
        source:
          acronym: acronym
          contactEmail: contactEmail
          websiteUrl: websiteUrl
          largeLogoUrl: largeLogoUrl
          name: name
          id: 3
          smallLogoUrl: smallLogoUrl
        startDate: 2000-01-23
      properties:
        contactEmail:
          title: contactEmail
          type: string
        description:
          title: description
          type: string
        endDate:
          format: date
          title: endDate
          type: string
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        startDate:
          format: date
          title: startDate
          type: string
      title: Campaign
      type: object
    CampaignWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - contactEmail: contactEmail
          endDate: 2000-01-23
          name: name
          description: description
          id: 9
          source:
            acronym: acronym
            contactEmail: contactEmail
            websiteUrl: websiteUrl
            largeLogoUrl: largeLogoUrl
            name: name
            id: 3
            smallLogoUrl: smallLogoUrl
          startDate: 2000-01-23
        - contactEmail: contactEmail
          endDate: 2000-01-23
          name: name
          description: description
          id: 9
          source:
            acronym: acronym
            contactEmail: contactEmail
            websiteUrl: websiteUrl
            largeLogoUrl: largeLogoUrl
            name: name
            id: 3
            smallLogoUrl: smallLogoUrl
          startDate: 2000-01-23
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Campaign'
          title: results
          type: array
      title: CampaignWrapped
      type: object
    Collection:
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
      title: Collection
      type: object
    CollectionWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Collection'
          type: array
      type: object
    ExtendedAttribute:
      example:
        name: name
        id: 0
        value: value
      properties:
        id:
          format: int64
          title: id
          type: integer
        name:
          title: name
          type: string
        value:
          title: value
          type: string
      title: ExtendedAttribute
      type: object
    ExtendedAttributeWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          type: array
      type: object
    Html:
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
      title: Html
      type: object
    HtmlWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Html'
          type: array
      type: object
    Image:
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        height:
          format: int32
          title: height
          type: integer
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
        width:
          format: int32
          title: width
          type: integer
      title: Image
      type: object
    ImageWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Image'
          type: array
      type: object
    Infographic:
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        height:
          format: int32
          title: height
          type: integer
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
        width:
          format: int32
          title: width
          type: integer
      title: Infographic
      type: object
    InfographicWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Infographic'
          type: array
      type: object
    Language:
      example:
        isoCode: isoCode
        name: name
        id: 1
        isActive: true
      properties:
        id:
          format: int64
          title: id
          type: integer
        isActive:
          title: isActive
          type: boolean
        isoCode:
          title: isoCode
          type: string
        name:
          title: name
          type: string
      title: Language
      type: object
    LanguageWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - isoCode: isoCode
          name: name
          id: 1
          isActive: true
        - isoCode: isoCode
          name: name
          id: 1
          isActive: true
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Language'
          title: results
          type: array
      title: LanguageWrapped
      type: object
    MediaItem:
      example:
        dateSyndicationVisible: 2000-01-23
        foreignSyndicationAPIUrl: foreignSyndicationAPIUrl
        description: description
        externalGuid: externalGuid
        language:
          isoCode: isoCode
          name: name
          id: 1
          isActive: true
        mediaType: mediaType
        source:
          acronym: acronym
          contactEmail: contactEmail
          websiteUrl: websiteUrl
          largeLogoUrl: largeLogoUrl
          name: name
          id: 3
          smallLogoUrl: smallLogoUrl
        dateContentUpdated: 2000-01-23
        extendedAttributes:
        - name: name
          id: 0
          value: value
        - name: name
          id: 0
          value: value
        customThumbnailUrl: customThumbnailUrl
        customAttributionUrl: customAttributionUrl
        sourceUrl: sourceUrl
        dateSyndicationUpdated: 2000-01-23
        dateContentReviewed: 2000-01-23
        campaigns:
        - contactEmail: contactEmail
          endDate: 2000-01-23
          name: name
          description: description
          id: 9
          source:
            acronym: acronym
            contactEmail: contactEmail
            websiteUrl: websiteUrl
            largeLogoUrl: largeLogoUrl
            name: name
            id: 3
            smallLogoUrl: smallLogoUrl
          startDate: 2000-01-23
        - contactEmail: contactEmail
          endDate: 2000-01-23
          name: name
          description: description
          id: 9
          source:
            acronym: acronym
            contactEmail: contactEmail
            websiteUrl: websiteUrl
            largeLogoUrl: largeLogoUrl
            name: name
            id: 3
            smallLogoUrl: smallLogoUrl
          startDate: 2000-01-23
        createdBy: createdBy
        customPreviewUrl: customPreviewUrl
        dateContentAuthored: 2000-01-23
        dateContentPublished: 2000-01-23
        name: name
        dateSyndicationCaptured: 2000-01-23
        id: 6
        targetUrl: targetUrl
        hash: hash
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
      title: MediaItem
      type: object
    MediaItemWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - dateSyndicationVisible: 2000-01-23
          foreignSyndicationAPIUrl: foreignSyndicationAPIUrl
          description: description
          externalGuid: externalGuid
          language:
            isoCode: isoCode
            name: name
            id: 1
            isActive: true
          mediaType: mediaType
          source:
            acronym: acronym
            contactEmail: contactEmail
            websiteUrl: websiteUrl
            largeLogoUrl: largeLogoUrl
            name: name
            id: 3
            smallLogoUrl: smallLogoUrl
          dateContentUpdated: 2000-01-23
          extendedAttributes:
          - name: name
            id: 0
            value: value
          - name: name
            id: 0
            value: value
          customThumbnailUrl: customThumbnailUrl
          customAttributionUrl: customAttributionUrl
          sourceUrl: sourceUrl
          dateSyndicationUpdated: 2000-01-23
          dateContentReviewed: 2000-01-23
          campaigns:
          - contactEmail: contactEmail
            endDate: 2000-01-23
            name: name
            description: description
            id: 9
            source:
              acronym: acronym
              contactEmail: contactEmail
              websiteUrl: websiteUrl
              largeLogoUrl: largeLogoUrl
              name: name
              id: 3
              smallLogoUrl: smallLogoUrl
            startDate: 2000-01-23
          - contactEmail: contactEmail
            endDate: 2000-01-23
            name: name
            description: description
            id: 9
            source:
              acronym: acronym
              contactEmail: contactEmail
              websiteUrl: websiteUrl
              largeLogoUrl: largeLogoUrl
              name: name
              id: 3
              smallLogoUrl: smallLogoUrl
            startDate: 2000-01-23
          createdBy: createdBy
          customPreviewUrl: customPreviewUrl
          dateContentAuthored: 2000-01-23
          dateContentPublished: 2000-01-23
          name: name
          dateSyndicationCaptured: 2000-01-23
          id: 6
          targetUrl: targetUrl
          hash: hash
        - dateSyndicationVisible: 2000-01-23
          foreignSyndicationAPIUrl: foreignSyndicationAPIUrl
          description: description
          externalGuid: externalGuid
          language:
            isoCode: isoCode
            name: name
            id: 1
            isActive: true
          mediaType: mediaType
          source:
            acronym: acronym
            contactEmail: contactEmail
            websiteUrl: websiteUrl
            largeLogoUrl: largeLogoUrl
            name: name
            id: 3
            smallLogoUrl: smallLogoUrl
          dateContentUpdated: 2000-01-23
          extendedAttributes:
          - name: name
            id: 0
            value: value
          - name: name
            id: 0
            value: value
          customThumbnailUrl: customThumbnailUrl
          customAttributionUrl: customAttributionUrl
          sourceUrl: sourceUrl
          dateSyndicationUpdated: 2000-01-23
          dateContentReviewed: 2000-01-23
          campaigns:
          - contactEmail: contactEmail
            endDate: 2000-01-23
            name: name
            description: description
            id: 9
            source:
              acronym: acronym
              contactEmail: contactEmail
              websiteUrl: websiteUrl
              largeLogoUrl: largeLogoUrl
              name: name
              id: 3
              smallLogoUrl: smallLogoUrl
            startDate: 2000-01-23
          - contactEmail: contactEmail
            endDate: 2000-01-23
            name: name
            description: description
            id: 9
            source:
              acronym: acronym
              contactEmail: contactEmail
              websiteUrl: websiteUrl
              largeLogoUrl: largeLogoUrl
              name: name
              id: 3
              smallLogoUrl: smallLogoUrl
            startDate: 2000-01-23
          createdBy: createdBy
          customPreviewUrl: customPreviewUrl
          dateContentAuthored: 2000-01-23
          dateContentPublished: 2000-01-23
          name: name
          dateSyndicationCaptured: 2000-01-23
          id: 6
          targetUrl: targetUrl
          hash: hash
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/MediaItem'
          title: results
          type: array
      title: MediaItemWrapped
      type: object
    MediaTypeHolder:
      example:
        name: name
        description: description
      properties:
        description:
          title: description
          type: string
        name:
          title: name
          type: string
      title: MediaTypeHolder
      type: object
    MediaTypeHolderWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - name: name
          description: description
        - name: name
          description: description
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/MediaTypeHolder'
          title: results
          type: array
      title: MediaTypeHolderWrapped
      type: object
    Message:
      example:
        userMessage: userMessage
        errorMessage: errorMessage
        errorCode: errorCode
        errorDetail: errorDetail
      properties:
        errorCode:
          title: errorCode
          type: string
        errorDetail:
          title: errorDetail
          type: string
        errorMessage:
          title: errorMessage
          type: string
        userMessage:
          title: userMessage
          type: string
      title: Message
      type: object
    MessageWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Message'
          type: array
      type: object
    Meta:
      example:
        pagination:
          currentUrl: currentUrl
          total: 5
          previousUrl: previousUrl
          offset: 1
          max: 6
          count: 0
          totalPages: 2
          nextUrl: nextUrl
          sort: sort
          pageNum: 5
        messages:
        - userMessage: userMessage
          errorMessage: errorMessage
          errorCode: errorCode
          errorDetail: errorDetail
        - userMessage: userMessage
          errorMessage: errorMessage
          errorCode: errorCode
          errorDetail: errorDetail
        status: 7
      properties:
        messages:
          items:
            $ref: '#/components/schemas/Message'
          title: messages
          type: array
        pagination:
          $ref: '#/components/schemas/Pagination'
        status:
          title: status
          type: integer
      title: Meta
      type: object
    MetaWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Meta'
          type: array
      type: object
    PDF:
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
      title: PDF
      type: object
    PDFWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/PDF'
          type: array
      type: object
    Pagination:
      example:
        currentUrl: currentUrl
        total: 5
        previousUrl: previousUrl
        offset: 1
        max: 6
        count: 0
        totalPages: 2
        nextUrl: nextUrl
        sort: sort
        pageNum: 5
      properties:
        count:
          title: count
          type: integer
        currentUrl:
          title: currentUrl
          type: string
        max:
          title: max
          type: integer
        nextUrl:
          title: nextUrl
          type: string
        offset:
          title: offset
          type: integer
        pageNum:
          title: pageNum
          type: integer
        previousUrl:
          title: previousUrl
          type: string
        sort:
          title: sort
          type: string
        total:
          title: total
          type: integer
        totalPages:
          title: totalPages
          type: integer
      title: Pagination
      type: object
    PaginationWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Pagination'
          type: array
      type: object
    ResourceWrapped:
      title: ResourceWrapped
    Source:
      example:
        acronym: acronym
        contactEmail: contactEmail
        websiteUrl: websiteUrl
        largeLogoUrl: largeLogoUrl
        name: name
        id: 3
        smallLogoUrl: smallLogoUrl
      properties:
        acronym:
          title: acronym
          type: string
        contactEmail:
          title: contactEmail
          type: string
        id:
          format: int64
          title: id
          type: integer
        largeLogoUrl:
          title: largeLogoUrl
          type: string
        name:
          title: name
          type: string
        smallLogoUrl:
          title: smallLogoUrl
          type: string
        websiteUrl:
          title: websiteUrl
          type: string
      title: Source
      type: object
    SourceWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - acronym: acronym
          contactEmail: contactEmail
          websiteUrl: websiteUrl
          largeLogoUrl: largeLogoUrl
          name: name
          id: 3
          smallLogoUrl: smallLogoUrl
        - acronym: acronym
          contactEmail: contactEmail
          websiteUrl: websiteUrl
          largeLogoUrl: largeLogoUrl
          name: name
          id: 3
          smallLogoUrl: smallLogoUrl
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Source'
          title: results
          type: array
      title: SourceWrapped
      type: object
    SyndicateMarshaller:
      example:
        sourceUrl: sourceUrl
        name: name
        description: description
        mediaType: mediaType
        id: 0
        content: content
      properties:
        content:
          title: content
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: integer
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        sourceUrl:
          title: sourceUrl
          type: string
      title: SyndicateMarshaller
      type: object
    SyndicateMarshallerWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - sourceUrl: sourceUrl
          name: name
          description: description
          mediaType: mediaType
          id: 0
          content: content
        - sourceUrl: sourceUrl
          name: name
          description: description
          mediaType: mediaType
          id: 0
          content: content
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/SyndicateMarshaller'
          title: results
          type: array
      title: SyndicateMarshallerWrapped
      type: object
    TagLanguageMarshaller:
      example:
        isoCode: isoCode
        name: name
        id: 6
        isActive: true
      properties:
        id:
          title: id
          type: integer
        isActive:
          title: isActive
          type: boolean
        isoCode:
          title: isoCode
          type: string
        name:
          title: name
          type: string
      title: TagLanguageMarshaller
      type: object
    TagLanguageMarshallerWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - isoCode: isoCode
          name: name
          id: 6
          isActive: true
        - isoCode: isoCode
          name: name
          id: 6
          isActive: true
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/TagLanguageMarshaller'
          title: results
          type: array
      title: TagLanguageMarshallerWrapped
      type: object
    TagMarshaller:
      example:
        name: name
        language:
          isoCode: isoCode
          name: name
          id: 6
          isActive: true
        id: 0
        type:
          name: name
          id: 1
      properties:
        id:
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/TagLanguageMarshaller'
        name:
          title: name
          type: string
        type:
          $ref: '#/components/schemas/TagTypeMarshaller'
      title: TagMarshaller
      type: object
    TagMarshallerWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - name: name
          language:
            isoCode: isoCode
            name: name
            id: 6
            isActive: true
          id: 0
          type:
            name: name
            id: 1
        - name: name
          language:
            isoCode: isoCode
            name: name
            id: 6
            isActive: true
          id: 0
          type:
            name: name
            id: 1
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/TagMarshaller'
          title: results
          type: array
      title: TagMarshallerWrapped
      type: object
    TagTypeMarshaller:
      example:
        name: name
        id: 1
      properties:
        id:
          title: id
          type: integer
        name:
          title: name
          type: string
      title: TagTypeMarshaller
      type: object
    TagTypeMarshallerWrapped:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - name: name
          id: 1
        - name: name
          id: 1
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/TagTypeMarshaller'
          title: results
          type: array
      title: TagTypeMarshallerWrapped
      type: object
    Tweet:
      properties:
        account:
          title: account
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        mediaUrl:
          title: mediaUrl
          type: string
        messageText:
          title: messageText
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
        tweetDate:
          format: date
          title: tweetDate
          type: string
        tweetId:
          format: int32
          title: tweetId
          type: integer
        videoVariantUrl:
          title: videoVariantUrl
          type: string
      title: Tweet
      type: object
    TweetWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Tweet'
          type: array
      type: object
    TwitterAccount:
      title: account
    Video:
      properties:
        campaigns:
          items:
            $ref: '#/components/schemas/Campaign'
          title: campaigns
          type: array
        createdBy:
          title: createdBy
          type: string
        customAttributionUrl:
          title: customAttributionUrl
          type: string
        customPreviewUrl:
          title: customPreviewUrl
          type: string
        customThumbnailUrl:
          title: customThumbnailUrl
          type: string
        dateContentAuthored:
          format: date
          title: dateContentAuthored
          type: string
        dateContentPublished:
          format: date
          title: dateContentPublished
          type: string
        dateContentReviewed:
          format: date
          title: dateContentReviewed
          type: string
        dateContentUpdated:
          format: date
          title: dateContentUpdated
          type: string
        dateSyndicationCaptured:
          format: date
          title: dateSyndicationCaptured
          type: string
        dateSyndicationUpdated:
          format: date
          title: dateSyndicationUpdated
          type: string
        dateSyndicationVisible:
          format: date
          title: dateSyndicationVisible
          type: string
        description:
          title: description
          type: string
        extendedAttributes:
          items:
            $ref: '#/components/schemas/ExtendedAttribute'
          title: extendedAttributes
          type: array
        externalGuid:
          title: externalGuid
          type: string
        foreignSyndicationAPIUrl:
          title: foreignSyndicationAPIUrl
          type: string
        hash:
          title: hash
          type: string
        id:
          format: int64
          title: id
          type: integer
        language:
          $ref: '#/components/schemas/Language'
        mediaType:
          title: mediaType
          type: string
        name:
          title: name
          type: string
        source:
          $ref: '#/components/schemas/Source'
        sourceUrl:
          title: sourceUrl
          type: string
        targetUrl:
          title: targetUrl
          type: string
      title: Video
      type: object
    VideoWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/Video'
          type: array
      type: object
    YoutubeMetadata:
      example: {}
      properties: {}
      title: YoutubeMetadata
      type: object
    YoutubeMetadataWrapped:
      properties:
        callback:
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/YoutubeMetadata'
          type: array
      type: object
    test: {}
    _resources_media__id__youtubeMetaData_json_get_200_response:
      example:
        meta:
          pagination:
            currentUrl: currentUrl
            total: 5
            previousUrl: previousUrl
            offset: 1
            max: 6
            count: 0
            totalPages: 2
            nextUrl: nextUrl
            sort: sort
            pageNum: 5
          messages:
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          - userMessage: userMessage
            errorMessage: errorMessage
            errorCode: errorCode
            errorDetail: errorDetail
          status: 7
        callback: callback
        results:
        - {}
        - {}
      properties:
        callback:
          title: callback
          type: string
        meta:
          $ref: '#/components/schemas/Meta'
        results:
          items:
            $ref: '#/components/schemas/YoutubeMetadata'
          title: results
          type: array
      title: _resources_media__id__youtubeMetaData_json_get_200_response
      type: object
