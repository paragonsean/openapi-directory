# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.meta import Meta
from openapi_server.models.tag_type_marshaller import TagTypeMarshaller
from openapi_server import util


class TagTypeMarshallerWrapped(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback: str=None, meta: Meta=None, results: List[TagTypeMarshaller]=None):
        """TagTypeMarshallerWrapped - a model defined in OpenAPI

        :param callback: The callback of this TagTypeMarshallerWrapped.
        :param meta: The meta of this TagTypeMarshallerWrapped.
        :param results: The results of this TagTypeMarshallerWrapped.
        """
        self.openapi_types = {
            'callback': str,
            'meta': Meta,
            'results': List[TagTypeMarshaller]
        }

        self.attribute_map = {
            'callback': 'callback',
            'meta': 'meta',
            'results': 'results'
        }

        self._callback = callback
        self._meta = meta
        self._results = results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagTypeMarshallerWrapped':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagTypeMarshallerWrapped of this TagTypeMarshallerWrapped.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback(self):
        """Gets the callback of this TagTypeMarshallerWrapped.


        :return: The callback of this TagTypeMarshallerWrapped.
        :rtype: str
        """
        return self._callback

    @callback.setter
    def callback(self, callback):
        """Sets the callback of this TagTypeMarshallerWrapped.


        :param callback: The callback of this TagTypeMarshallerWrapped.
        :type callback: str
        """

        self._callback = callback

    @property
    def meta(self):
        """Gets the meta of this TagTypeMarshallerWrapped.


        :return: The meta of this TagTypeMarshallerWrapped.
        :rtype: Meta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this TagTypeMarshallerWrapped.


        :param meta: The meta of this TagTypeMarshallerWrapped.
        :type meta: Meta
        """

        self._meta = meta

    @property
    def results(self):
        """Gets the results of this TagTypeMarshallerWrapped.


        :return: The results of this TagTypeMarshallerWrapped.
        :rtype: List[TagTypeMarshaller]
        """
        return self._results

    @results.setter
    def results(self, results):
        """Sets the results of this TagTypeMarshallerWrapped.


        :param results: The results of this TagTypeMarshallerWrapped.
        :type results: List[TagTypeMarshaller]
        """

        self._results = results
