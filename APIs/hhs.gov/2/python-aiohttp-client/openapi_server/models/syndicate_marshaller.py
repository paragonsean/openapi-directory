# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SyndicateMarshaller(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content: str=None, description: str=None, id: int=None, media_type: str=None, name: str=None, source_url: str=None):
        """SyndicateMarshaller - a model defined in OpenAPI

        :param content: The content of this SyndicateMarshaller.
        :param description: The description of this SyndicateMarshaller.
        :param id: The id of this SyndicateMarshaller.
        :param media_type: The media_type of this SyndicateMarshaller.
        :param name: The name of this SyndicateMarshaller.
        :param source_url: The source_url of this SyndicateMarshaller.
        """
        self.openapi_types = {
            'content': str,
            'description': str,
            'id': int,
            'media_type': str,
            'name': str,
            'source_url': str
        }

        self.attribute_map = {
            'content': 'content',
            'description': 'description',
            'id': 'id',
            'media_type': 'mediaType',
            'name': 'name',
            'source_url': 'sourceUrl'
        }

        self._content = content
        self._description = description
        self._id = id
        self._media_type = media_type
        self._name = name
        self._source_url = source_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SyndicateMarshaller':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SyndicateMarshaller of this SyndicateMarshaller.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content(self):
        """Gets the content of this SyndicateMarshaller.


        :return: The content of this SyndicateMarshaller.
        :rtype: str
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this SyndicateMarshaller.


        :param content: The content of this SyndicateMarshaller.
        :type content: str
        """

        self._content = content

    @property
    def description(self):
        """Gets the description of this SyndicateMarshaller.


        :return: The description of this SyndicateMarshaller.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SyndicateMarshaller.


        :param description: The description of this SyndicateMarshaller.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this SyndicateMarshaller.


        :return: The id of this SyndicateMarshaller.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SyndicateMarshaller.


        :param id: The id of this SyndicateMarshaller.
        :type id: int
        """

        self._id = id

    @property
    def media_type(self):
        """Gets the media_type of this SyndicateMarshaller.


        :return: The media_type of this SyndicateMarshaller.
        :rtype: str
        """
        return self._media_type

    @media_type.setter
    def media_type(self, media_type):
        """Sets the media_type of this SyndicateMarshaller.


        :param media_type: The media_type of this SyndicateMarshaller.
        :type media_type: str
        """

        self._media_type = media_type

    @property
    def name(self):
        """Gets the name of this SyndicateMarshaller.


        :return: The name of this SyndicateMarshaller.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SyndicateMarshaller.


        :param name: The name of this SyndicateMarshaller.
        :type name: str
        """

        self._name = name

    @property
    def source_url(self):
        """Gets the source_url of this SyndicateMarshaller.


        :return: The source_url of this SyndicateMarshaller.
        :rtype: str
        """
        return self._source_url

    @source_url.setter
    def source_url(self, source_url):
        """Sets the source_url of this SyndicateMarshaller.


        :param source_url: The source_url of this SyndicateMarshaller.
        :type source_url: str
        """

        self._source_url = source_url
