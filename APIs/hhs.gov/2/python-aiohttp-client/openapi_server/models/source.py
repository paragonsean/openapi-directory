# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Source(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acronym: str=None, contact_email: str=None, id: int=None, large_logo_url: str=None, name: str=None, small_logo_url: str=None, website_url: str=None):
        """Source - a model defined in OpenAPI

        :param acronym: The acronym of this Source.
        :param contact_email: The contact_email of this Source.
        :param id: The id of this Source.
        :param large_logo_url: The large_logo_url of this Source.
        :param name: The name of this Source.
        :param small_logo_url: The small_logo_url of this Source.
        :param website_url: The website_url of this Source.
        """
        self.openapi_types = {
            'acronym': str,
            'contact_email': str,
            'id': int,
            'large_logo_url': str,
            'name': str,
            'small_logo_url': str,
            'website_url': str
        }

        self.attribute_map = {
            'acronym': 'acronym',
            'contact_email': 'contactEmail',
            'id': 'id',
            'large_logo_url': 'largeLogoUrl',
            'name': 'name',
            'small_logo_url': 'smallLogoUrl',
            'website_url': 'websiteUrl'
        }

        self._acronym = acronym
        self._contact_email = contact_email
        self._id = id
        self._large_logo_url = large_logo_url
        self._name = name
        self._small_logo_url = small_logo_url
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Source':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Source of this Source.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acronym(self):
        """Gets the acronym of this Source.


        :return: The acronym of this Source.
        :rtype: str
        """
        return self._acronym

    @acronym.setter
    def acronym(self, acronym):
        """Sets the acronym of this Source.


        :param acronym: The acronym of this Source.
        :type acronym: str
        """

        self._acronym = acronym

    @property
    def contact_email(self):
        """Gets the contact_email of this Source.


        :return: The contact_email of this Source.
        :rtype: str
        """
        return self._contact_email

    @contact_email.setter
    def contact_email(self, contact_email):
        """Sets the contact_email of this Source.


        :param contact_email: The contact_email of this Source.
        :type contact_email: str
        """

        self._contact_email = contact_email

    @property
    def id(self):
        """Gets the id of this Source.


        :return: The id of this Source.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Source.


        :param id: The id of this Source.
        :type id: int
        """

        self._id = id

    @property
    def large_logo_url(self):
        """Gets the large_logo_url of this Source.


        :return: The large_logo_url of this Source.
        :rtype: str
        """
        return self._large_logo_url

    @large_logo_url.setter
    def large_logo_url(self, large_logo_url):
        """Sets the large_logo_url of this Source.


        :param large_logo_url: The large_logo_url of this Source.
        :type large_logo_url: str
        """

        self._large_logo_url = large_logo_url

    @property
    def name(self):
        """Gets the name of this Source.


        :return: The name of this Source.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Source.


        :param name: The name of this Source.
        :type name: str
        """

        self._name = name

    @property
    def small_logo_url(self):
        """Gets the small_logo_url of this Source.


        :return: The small_logo_url of this Source.
        :rtype: str
        """
        return self._small_logo_url

    @small_logo_url.setter
    def small_logo_url(self, small_logo_url):
        """Sets the small_logo_url of this Source.


        :param small_logo_url: The small_logo_url of this Source.
        :type small_logo_url: str
        """

        self._small_logo_url = small_logo_url

    @property
    def website_url(self):
        """Gets the website_url of this Source.


        :return: The website_url of this Source.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this Source.


        :param website_url: The website_url of this Source.
        :type website_url: str
        """

        self._website_url = website_url
