/*
 * HHS Media Services API
 * <div class=\"swagger-ui-wrap extraFooter\"><h3>Common Features / Behaviors</h3> <div class=\"features\"> <ul> <li><strong>* \"sort\" param:</strong> supports multi column sorting through the use of commas as delimiters, and a hyphen to denote descending order. <br/> <strong><span>Examples:</span></strong> <ul> <li><span class=\"example\">name</span><span class=\"description\">sort results by name ascending</span></li> <li><span class=\"example\">-name</span><span class=\"description\">sort results by name descending</span></li> <li><span class=\"example\">-name,id</span><span class=\"description\">sort results by name descending and then by id ascending</span></li> <li><span class=\"example\">id,-dateContentAuthored</span><span class=\"description\">sort results by id ascending and then date descending</span></li> </ul> </li> <li><strong>Date formats:</strong> Date input format is expected to be based on <a href=\"http://www.ietf.org/rfc/rfc3339.txt\">RFC 3339</a>. <br/> <span><strong>Example:</strong></span> <ul><li>2013-11-18T18:43:01Z</li></ul> </li> </ul> </div> </div>
 *
 * The version of the OpenAPI document: 2
 * Contact: syndicationadmin@hhs.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Campaign;
import org.openapitools.client.model.ExtendedAttribute;
import org.openapitools.client.model.Language;
import org.openapitools.client.model.Source;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Tweet
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:30:01.057032-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Tweet {
  public static final String SERIALIZED_NAME_ACCOUNT = "account";
  @SerializedName(SERIALIZED_NAME_ACCOUNT)
  private Object account = null;

  public static final String SERIALIZED_NAME_CAMPAIGNS = "campaigns";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS)
  private List<Campaign> campaigns = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_BY = "createdBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CUSTOM_ATTRIBUTION_URL = "customAttributionUrl";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ATTRIBUTION_URL)
  private String customAttributionUrl;

  public static final String SERIALIZED_NAME_CUSTOM_PREVIEW_URL = "customPreviewUrl";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PREVIEW_URL)
  private String customPreviewUrl;

  public static final String SERIALIZED_NAME_CUSTOM_THUMBNAIL_URL = "customThumbnailUrl";
  @SerializedName(SERIALIZED_NAME_CUSTOM_THUMBNAIL_URL)
  private String customThumbnailUrl;

  public static final String SERIALIZED_NAME_DATE_CONTENT_AUTHORED = "dateContentAuthored";
  @SerializedName(SERIALIZED_NAME_DATE_CONTENT_AUTHORED)
  private LocalDate dateContentAuthored;

  public static final String SERIALIZED_NAME_DATE_CONTENT_PUBLISHED = "dateContentPublished";
  @SerializedName(SERIALIZED_NAME_DATE_CONTENT_PUBLISHED)
  private LocalDate dateContentPublished;

  public static final String SERIALIZED_NAME_DATE_CONTENT_REVIEWED = "dateContentReviewed";
  @SerializedName(SERIALIZED_NAME_DATE_CONTENT_REVIEWED)
  private LocalDate dateContentReviewed;

  public static final String SERIALIZED_NAME_DATE_CONTENT_UPDATED = "dateContentUpdated";
  @SerializedName(SERIALIZED_NAME_DATE_CONTENT_UPDATED)
  private LocalDate dateContentUpdated;

  public static final String SERIALIZED_NAME_DATE_SYNDICATION_CAPTURED = "dateSyndicationCaptured";
  @SerializedName(SERIALIZED_NAME_DATE_SYNDICATION_CAPTURED)
  private LocalDate dateSyndicationCaptured;

  public static final String SERIALIZED_NAME_DATE_SYNDICATION_UPDATED = "dateSyndicationUpdated";
  @SerializedName(SERIALIZED_NAME_DATE_SYNDICATION_UPDATED)
  private LocalDate dateSyndicationUpdated;

  public static final String SERIALIZED_NAME_DATE_SYNDICATION_VISIBLE = "dateSyndicationVisible";
  @SerializedName(SERIALIZED_NAME_DATE_SYNDICATION_VISIBLE)
  private LocalDate dateSyndicationVisible;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_EXTENDED_ATTRIBUTES = "extendedAttributes";
  @SerializedName(SERIALIZED_NAME_EXTENDED_ATTRIBUTES)
  private List<ExtendedAttribute> extendedAttributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_EXTERNAL_GUID = "externalGuid";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_GUID)
  private String externalGuid;

  public static final String SERIALIZED_NAME_FOREIGN_SYNDICATION_A_P_I_URL = "foreignSyndicationAPIUrl";
  @SerializedName(SERIALIZED_NAME_FOREIGN_SYNDICATION_A_P_I_URL)
  private String foreignSyndicationAPIUrl;

  public static final String SERIALIZED_NAME_HASH = "hash";
  @SerializedName(SERIALIZED_NAME_HASH)
  private String hash;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  private Language language;

  public static final String SERIALIZED_NAME_MEDIA_TYPE = "mediaType";
  @SerializedName(SERIALIZED_NAME_MEDIA_TYPE)
  private String mediaType;

  public static final String SERIALIZED_NAME_MEDIA_URL = "mediaUrl";
  @SerializedName(SERIALIZED_NAME_MEDIA_URL)
  private String mediaUrl;

  public static final String SERIALIZED_NAME_MESSAGE_TEXT = "messageText";
  @SerializedName(SERIALIZED_NAME_MESSAGE_TEXT)
  private String messageText;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private Source source;

  public static final String SERIALIZED_NAME_SOURCE_URL = "sourceUrl";
  @SerializedName(SERIALIZED_NAME_SOURCE_URL)
  private String sourceUrl;

  public static final String SERIALIZED_NAME_TARGET_URL = "targetUrl";
  @SerializedName(SERIALIZED_NAME_TARGET_URL)
  private String targetUrl;

  public static final String SERIALIZED_NAME_TWEET_DATE = "tweetDate";
  @SerializedName(SERIALIZED_NAME_TWEET_DATE)
  private LocalDate tweetDate;

  public static final String SERIALIZED_NAME_TWEET_ID = "tweetId";
  @SerializedName(SERIALIZED_NAME_TWEET_ID)
  private Integer tweetId;

  public static final String SERIALIZED_NAME_VIDEO_VARIANT_URL = "videoVariantUrl";
  @SerializedName(SERIALIZED_NAME_VIDEO_VARIANT_URL)
  private String videoVariantUrl;

  public Tweet() {
  }

  public Tweet account(Object account) {
    this.account = account;
    return this;
  }

  /**
   * Get account
   * @return account
   */
  @javax.annotation.Nullable
  public Object getAccount() {
    return account;
  }

  public void setAccount(Object account) {
    this.account = account;
  }


  public Tweet campaigns(List<Campaign> campaigns) {
    this.campaigns = campaigns;
    return this;
  }

  public Tweet addCampaignsItem(Campaign campaignsItem) {
    if (this.campaigns == null) {
      this.campaigns = new ArrayList<>();
    }
    this.campaigns.add(campaignsItem);
    return this;
  }

  /**
   * Get campaigns
   * @return campaigns
   */
  @javax.annotation.Nullable
  public List<Campaign> getCampaigns() {
    return campaigns;
  }

  public void setCampaigns(List<Campaign> campaigns) {
    this.campaigns = campaigns;
  }


  public Tweet createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * Get createdBy
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public Tweet customAttributionUrl(String customAttributionUrl) {
    this.customAttributionUrl = customAttributionUrl;
    return this;
  }

  /**
   * Get customAttributionUrl
   * @return customAttributionUrl
   */
  @javax.annotation.Nullable
  public String getCustomAttributionUrl() {
    return customAttributionUrl;
  }

  public void setCustomAttributionUrl(String customAttributionUrl) {
    this.customAttributionUrl = customAttributionUrl;
  }


  public Tweet customPreviewUrl(String customPreviewUrl) {
    this.customPreviewUrl = customPreviewUrl;
    return this;
  }

  /**
   * Get customPreviewUrl
   * @return customPreviewUrl
   */
  @javax.annotation.Nullable
  public String getCustomPreviewUrl() {
    return customPreviewUrl;
  }

  public void setCustomPreviewUrl(String customPreviewUrl) {
    this.customPreviewUrl = customPreviewUrl;
  }


  public Tweet customThumbnailUrl(String customThumbnailUrl) {
    this.customThumbnailUrl = customThumbnailUrl;
    return this;
  }

  /**
   * Get customThumbnailUrl
   * @return customThumbnailUrl
   */
  @javax.annotation.Nullable
  public String getCustomThumbnailUrl() {
    return customThumbnailUrl;
  }

  public void setCustomThumbnailUrl(String customThumbnailUrl) {
    this.customThumbnailUrl = customThumbnailUrl;
  }


  public Tweet dateContentAuthored(LocalDate dateContentAuthored) {
    this.dateContentAuthored = dateContentAuthored;
    return this;
  }

  /**
   * Get dateContentAuthored
   * @return dateContentAuthored
   */
  @javax.annotation.Nullable
  public LocalDate getDateContentAuthored() {
    return dateContentAuthored;
  }

  public void setDateContentAuthored(LocalDate dateContentAuthored) {
    this.dateContentAuthored = dateContentAuthored;
  }


  public Tweet dateContentPublished(LocalDate dateContentPublished) {
    this.dateContentPublished = dateContentPublished;
    return this;
  }

  /**
   * Get dateContentPublished
   * @return dateContentPublished
   */
  @javax.annotation.Nullable
  public LocalDate getDateContentPublished() {
    return dateContentPublished;
  }

  public void setDateContentPublished(LocalDate dateContentPublished) {
    this.dateContentPublished = dateContentPublished;
  }


  public Tweet dateContentReviewed(LocalDate dateContentReviewed) {
    this.dateContentReviewed = dateContentReviewed;
    return this;
  }

  /**
   * Get dateContentReviewed
   * @return dateContentReviewed
   */
  @javax.annotation.Nullable
  public LocalDate getDateContentReviewed() {
    return dateContentReviewed;
  }

  public void setDateContentReviewed(LocalDate dateContentReviewed) {
    this.dateContentReviewed = dateContentReviewed;
  }


  public Tweet dateContentUpdated(LocalDate dateContentUpdated) {
    this.dateContentUpdated = dateContentUpdated;
    return this;
  }

  /**
   * Get dateContentUpdated
   * @return dateContentUpdated
   */
  @javax.annotation.Nullable
  public LocalDate getDateContentUpdated() {
    return dateContentUpdated;
  }

  public void setDateContentUpdated(LocalDate dateContentUpdated) {
    this.dateContentUpdated = dateContentUpdated;
  }


  public Tweet dateSyndicationCaptured(LocalDate dateSyndicationCaptured) {
    this.dateSyndicationCaptured = dateSyndicationCaptured;
    return this;
  }

  /**
   * Get dateSyndicationCaptured
   * @return dateSyndicationCaptured
   */
  @javax.annotation.Nullable
  public LocalDate getDateSyndicationCaptured() {
    return dateSyndicationCaptured;
  }

  public void setDateSyndicationCaptured(LocalDate dateSyndicationCaptured) {
    this.dateSyndicationCaptured = dateSyndicationCaptured;
  }


  public Tweet dateSyndicationUpdated(LocalDate dateSyndicationUpdated) {
    this.dateSyndicationUpdated = dateSyndicationUpdated;
    return this;
  }

  /**
   * Get dateSyndicationUpdated
   * @return dateSyndicationUpdated
   */
  @javax.annotation.Nullable
  public LocalDate getDateSyndicationUpdated() {
    return dateSyndicationUpdated;
  }

  public void setDateSyndicationUpdated(LocalDate dateSyndicationUpdated) {
    this.dateSyndicationUpdated = dateSyndicationUpdated;
  }


  public Tweet dateSyndicationVisible(LocalDate dateSyndicationVisible) {
    this.dateSyndicationVisible = dateSyndicationVisible;
    return this;
  }

  /**
   * Get dateSyndicationVisible
   * @return dateSyndicationVisible
   */
  @javax.annotation.Nullable
  public LocalDate getDateSyndicationVisible() {
    return dateSyndicationVisible;
  }

  public void setDateSyndicationVisible(LocalDate dateSyndicationVisible) {
    this.dateSyndicationVisible = dateSyndicationVisible;
  }


  public Tweet description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public Tweet extendedAttributes(List<ExtendedAttribute> extendedAttributes) {
    this.extendedAttributes = extendedAttributes;
    return this;
  }

  public Tweet addExtendedAttributesItem(ExtendedAttribute extendedAttributesItem) {
    if (this.extendedAttributes == null) {
      this.extendedAttributes = new ArrayList<>();
    }
    this.extendedAttributes.add(extendedAttributesItem);
    return this;
  }

  /**
   * Get extendedAttributes
   * @return extendedAttributes
   */
  @javax.annotation.Nullable
  public List<ExtendedAttribute> getExtendedAttributes() {
    return extendedAttributes;
  }

  public void setExtendedAttributes(List<ExtendedAttribute> extendedAttributes) {
    this.extendedAttributes = extendedAttributes;
  }


  public Tweet externalGuid(String externalGuid) {
    this.externalGuid = externalGuid;
    return this;
  }

  /**
   * Get externalGuid
   * @return externalGuid
   */
  @javax.annotation.Nullable
  public String getExternalGuid() {
    return externalGuid;
  }

  public void setExternalGuid(String externalGuid) {
    this.externalGuid = externalGuid;
  }


  public Tweet foreignSyndicationAPIUrl(String foreignSyndicationAPIUrl) {
    this.foreignSyndicationAPIUrl = foreignSyndicationAPIUrl;
    return this;
  }

  /**
   * Get foreignSyndicationAPIUrl
   * @return foreignSyndicationAPIUrl
   */
  @javax.annotation.Nullable
  public String getForeignSyndicationAPIUrl() {
    return foreignSyndicationAPIUrl;
  }

  public void setForeignSyndicationAPIUrl(String foreignSyndicationAPIUrl) {
    this.foreignSyndicationAPIUrl = foreignSyndicationAPIUrl;
  }


  public Tweet hash(String hash) {
    this.hash = hash;
    return this;
  }

  /**
   * Get hash
   * @return hash
   */
  @javax.annotation.Nullable
  public String getHash() {
    return hash;
  }

  public void setHash(String hash) {
    this.hash = hash;
  }


  public Tweet id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public Tweet language(Language language) {
    this.language = language;
    return this;
  }

  /**
   * Get language
   * @return language
   */
  @javax.annotation.Nullable
  public Language getLanguage() {
    return language;
  }

  public void setLanguage(Language language) {
    this.language = language;
  }


  public Tweet mediaType(String mediaType) {
    this.mediaType = mediaType;
    return this;
  }

  /**
   * Get mediaType
   * @return mediaType
   */
  @javax.annotation.Nullable
  public String getMediaType() {
    return mediaType;
  }

  public void setMediaType(String mediaType) {
    this.mediaType = mediaType;
  }


  public Tweet mediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
    return this;
  }

  /**
   * Get mediaUrl
   * @return mediaUrl
   */
  @javax.annotation.Nullable
  public String getMediaUrl() {
    return mediaUrl;
  }

  public void setMediaUrl(String mediaUrl) {
    this.mediaUrl = mediaUrl;
  }


  public Tweet messageText(String messageText) {
    this.messageText = messageText;
    return this;
  }

  /**
   * Get messageText
   * @return messageText
   */
  @javax.annotation.Nullable
  public String getMessageText() {
    return messageText;
  }

  public void setMessageText(String messageText) {
    this.messageText = messageText;
  }


  public Tweet name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Tweet source(Source source) {
    this.source = source;
    return this;
  }

  /**
   * Get source
   * @return source
   */
  @javax.annotation.Nullable
  public Source getSource() {
    return source;
  }

  public void setSource(Source source) {
    this.source = source;
  }


  public Tweet sourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
    return this;
  }

  /**
   * Get sourceUrl
   * @return sourceUrl
   */
  @javax.annotation.Nullable
  public String getSourceUrl() {
    return sourceUrl;
  }

  public void setSourceUrl(String sourceUrl) {
    this.sourceUrl = sourceUrl;
  }


  public Tweet targetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
    return this;
  }

  /**
   * Get targetUrl
   * @return targetUrl
   */
  @javax.annotation.Nullable
  public String getTargetUrl() {
    return targetUrl;
  }

  public void setTargetUrl(String targetUrl) {
    this.targetUrl = targetUrl;
  }


  public Tweet tweetDate(LocalDate tweetDate) {
    this.tweetDate = tweetDate;
    return this;
  }

  /**
   * Get tweetDate
   * @return tweetDate
   */
  @javax.annotation.Nullable
  public LocalDate getTweetDate() {
    return tweetDate;
  }

  public void setTweetDate(LocalDate tweetDate) {
    this.tweetDate = tweetDate;
  }


  public Tweet tweetId(Integer tweetId) {
    this.tweetId = tweetId;
    return this;
  }

  /**
   * Get tweetId
   * @return tweetId
   */
  @javax.annotation.Nullable
  public Integer getTweetId() {
    return tweetId;
  }

  public void setTweetId(Integer tweetId) {
    this.tweetId = tweetId;
  }


  public Tweet videoVariantUrl(String videoVariantUrl) {
    this.videoVariantUrl = videoVariantUrl;
    return this;
  }

  /**
   * Get videoVariantUrl
   * @return videoVariantUrl
   */
  @javax.annotation.Nullable
  public String getVideoVariantUrl() {
    return videoVariantUrl;
  }

  public void setVideoVariantUrl(String videoVariantUrl) {
    this.videoVariantUrl = videoVariantUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Tweet tweet = (Tweet) o;
    return Objects.equals(this.account, tweet.account) &&
        Objects.equals(this.campaigns, tweet.campaigns) &&
        Objects.equals(this.createdBy, tweet.createdBy) &&
        Objects.equals(this.customAttributionUrl, tweet.customAttributionUrl) &&
        Objects.equals(this.customPreviewUrl, tweet.customPreviewUrl) &&
        Objects.equals(this.customThumbnailUrl, tweet.customThumbnailUrl) &&
        Objects.equals(this.dateContentAuthored, tweet.dateContentAuthored) &&
        Objects.equals(this.dateContentPublished, tweet.dateContentPublished) &&
        Objects.equals(this.dateContentReviewed, tweet.dateContentReviewed) &&
        Objects.equals(this.dateContentUpdated, tweet.dateContentUpdated) &&
        Objects.equals(this.dateSyndicationCaptured, tweet.dateSyndicationCaptured) &&
        Objects.equals(this.dateSyndicationUpdated, tweet.dateSyndicationUpdated) &&
        Objects.equals(this.dateSyndicationVisible, tweet.dateSyndicationVisible) &&
        Objects.equals(this.description, tweet.description) &&
        Objects.equals(this.extendedAttributes, tweet.extendedAttributes) &&
        Objects.equals(this.externalGuid, tweet.externalGuid) &&
        Objects.equals(this.foreignSyndicationAPIUrl, tweet.foreignSyndicationAPIUrl) &&
        Objects.equals(this.hash, tweet.hash) &&
        Objects.equals(this.id, tweet.id) &&
        Objects.equals(this.language, tweet.language) &&
        Objects.equals(this.mediaType, tweet.mediaType) &&
        Objects.equals(this.mediaUrl, tweet.mediaUrl) &&
        Objects.equals(this.messageText, tweet.messageText) &&
        Objects.equals(this.name, tweet.name) &&
        Objects.equals(this.source, tweet.source) &&
        Objects.equals(this.sourceUrl, tweet.sourceUrl) &&
        Objects.equals(this.targetUrl, tweet.targetUrl) &&
        Objects.equals(this.tweetDate, tweet.tweetDate) &&
        Objects.equals(this.tweetId, tweet.tweetId) &&
        Objects.equals(this.videoVariantUrl, tweet.videoVariantUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, campaigns, createdBy, customAttributionUrl, customPreviewUrl, customThumbnailUrl, dateContentAuthored, dateContentPublished, dateContentReviewed, dateContentUpdated, dateSyndicationCaptured, dateSyndicationUpdated, dateSyndicationVisible, description, extendedAttributes, externalGuid, foreignSyndicationAPIUrl, hash, id, language, mediaType, mediaUrl, messageText, name, source, sourceUrl, targetUrl, tweetDate, tweetId, videoVariantUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Tweet {\n");
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    campaigns: ").append(toIndentedString(campaigns)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    customAttributionUrl: ").append(toIndentedString(customAttributionUrl)).append("\n");
    sb.append("    customPreviewUrl: ").append(toIndentedString(customPreviewUrl)).append("\n");
    sb.append("    customThumbnailUrl: ").append(toIndentedString(customThumbnailUrl)).append("\n");
    sb.append("    dateContentAuthored: ").append(toIndentedString(dateContentAuthored)).append("\n");
    sb.append("    dateContentPublished: ").append(toIndentedString(dateContentPublished)).append("\n");
    sb.append("    dateContentReviewed: ").append(toIndentedString(dateContentReviewed)).append("\n");
    sb.append("    dateContentUpdated: ").append(toIndentedString(dateContentUpdated)).append("\n");
    sb.append("    dateSyndicationCaptured: ").append(toIndentedString(dateSyndicationCaptured)).append("\n");
    sb.append("    dateSyndicationUpdated: ").append(toIndentedString(dateSyndicationUpdated)).append("\n");
    sb.append("    dateSyndicationVisible: ").append(toIndentedString(dateSyndicationVisible)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    extendedAttributes: ").append(toIndentedString(extendedAttributes)).append("\n");
    sb.append("    externalGuid: ").append(toIndentedString(externalGuid)).append("\n");
    sb.append("    foreignSyndicationAPIUrl: ").append(toIndentedString(foreignSyndicationAPIUrl)).append("\n");
    sb.append("    hash: ").append(toIndentedString(hash)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    mediaType: ").append(toIndentedString(mediaType)).append("\n");
    sb.append("    mediaUrl: ").append(toIndentedString(mediaUrl)).append("\n");
    sb.append("    messageText: ").append(toIndentedString(messageText)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    sourceUrl: ").append(toIndentedString(sourceUrl)).append("\n");
    sb.append("    targetUrl: ").append(toIndentedString(targetUrl)).append("\n");
    sb.append("    tweetDate: ").append(toIndentedString(tweetDate)).append("\n");
    sb.append("    tweetId: ").append(toIndentedString(tweetId)).append("\n");
    sb.append("    videoVariantUrl: ").append(toIndentedString(videoVariantUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("account");
    openapiFields.add("campaigns");
    openapiFields.add("createdBy");
    openapiFields.add("customAttributionUrl");
    openapiFields.add("customPreviewUrl");
    openapiFields.add("customThumbnailUrl");
    openapiFields.add("dateContentAuthored");
    openapiFields.add("dateContentPublished");
    openapiFields.add("dateContentReviewed");
    openapiFields.add("dateContentUpdated");
    openapiFields.add("dateSyndicationCaptured");
    openapiFields.add("dateSyndicationUpdated");
    openapiFields.add("dateSyndicationVisible");
    openapiFields.add("description");
    openapiFields.add("extendedAttributes");
    openapiFields.add("externalGuid");
    openapiFields.add("foreignSyndicationAPIUrl");
    openapiFields.add("hash");
    openapiFields.add("id");
    openapiFields.add("language");
    openapiFields.add("mediaType");
    openapiFields.add("mediaUrl");
    openapiFields.add("messageText");
    openapiFields.add("name");
    openapiFields.add("source");
    openapiFields.add("sourceUrl");
    openapiFields.add("targetUrl");
    openapiFields.add("tweetDate");
    openapiFields.add("tweetId");
    openapiFields.add("videoVariantUrl");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Tweet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Tweet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Tweet is not found in the empty JSON string", Tweet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Tweet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Tweet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("campaigns") != null && !jsonObj.get("campaigns").isJsonNull()) {
        JsonArray jsonArraycampaigns = jsonObj.getAsJsonArray("campaigns");
        if (jsonArraycampaigns != null) {
          // ensure the json data is an array
          if (!jsonObj.get("campaigns").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `campaigns` to be an array in the JSON string but got `%s`", jsonObj.get("campaigns").toString()));
          }

          // validate the optional field `campaigns` (array)
          for (int i = 0; i < jsonArraycampaigns.size(); i++) {
            Campaign.validateJsonElement(jsonArraycampaigns.get(i));
          };
        }
      }
      if ((jsonObj.get("createdBy") != null && !jsonObj.get("createdBy").isJsonNull()) && !jsonObj.get("createdBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `createdBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("createdBy").toString()));
      }
      if ((jsonObj.get("customAttributionUrl") != null && !jsonObj.get("customAttributionUrl").isJsonNull()) && !jsonObj.get("customAttributionUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customAttributionUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customAttributionUrl").toString()));
      }
      if ((jsonObj.get("customPreviewUrl") != null && !jsonObj.get("customPreviewUrl").isJsonNull()) && !jsonObj.get("customPreviewUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customPreviewUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customPreviewUrl").toString()));
      }
      if ((jsonObj.get("customThumbnailUrl") != null && !jsonObj.get("customThumbnailUrl").isJsonNull()) && !jsonObj.get("customThumbnailUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customThumbnailUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customThumbnailUrl").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      if (jsonObj.get("extendedAttributes") != null && !jsonObj.get("extendedAttributes").isJsonNull()) {
        JsonArray jsonArrayextendedAttributes = jsonObj.getAsJsonArray("extendedAttributes");
        if (jsonArrayextendedAttributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("extendedAttributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `extendedAttributes` to be an array in the JSON string but got `%s`", jsonObj.get("extendedAttributes").toString()));
          }

          // validate the optional field `extendedAttributes` (array)
          for (int i = 0; i < jsonArrayextendedAttributes.size(); i++) {
            ExtendedAttribute.validateJsonElement(jsonArrayextendedAttributes.get(i));
          };
        }
      }
      if ((jsonObj.get("externalGuid") != null && !jsonObj.get("externalGuid").isJsonNull()) && !jsonObj.get("externalGuid").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `externalGuid` to be a primitive type in the JSON string but got `%s`", jsonObj.get("externalGuid").toString()));
      }
      if ((jsonObj.get("foreignSyndicationAPIUrl") != null && !jsonObj.get("foreignSyndicationAPIUrl").isJsonNull()) && !jsonObj.get("foreignSyndicationAPIUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `foreignSyndicationAPIUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("foreignSyndicationAPIUrl").toString()));
      }
      if ((jsonObj.get("hash") != null && !jsonObj.get("hash").isJsonNull()) && !jsonObj.get("hash").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hash` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hash").toString()));
      }
      // validate the optional field `language`
      if (jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) {
        Language.validateJsonElement(jsonObj.get("language"));
      }
      if ((jsonObj.get("mediaType") != null && !jsonObj.get("mediaType").isJsonNull()) && !jsonObj.get("mediaType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mediaType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediaType").toString()));
      }
      if ((jsonObj.get("mediaUrl") != null && !jsonObj.get("mediaUrl").isJsonNull()) && !jsonObj.get("mediaUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mediaUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mediaUrl").toString()));
      }
      if ((jsonObj.get("messageText") != null && !jsonObj.get("messageText").isJsonNull()) && !jsonObj.get("messageText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `messageText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("messageText").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `source`
      if (jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) {
        Source.validateJsonElement(jsonObj.get("source"));
      }
      if ((jsonObj.get("sourceUrl") != null && !jsonObj.get("sourceUrl").isJsonNull()) && !jsonObj.get("sourceUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sourceUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sourceUrl").toString()));
      }
      if ((jsonObj.get("targetUrl") != null && !jsonObj.get("targetUrl").isJsonNull()) && !jsonObj.get("targetUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `targetUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("targetUrl").toString()));
      }
      if ((jsonObj.get("videoVariantUrl") != null && !jsonObj.get("videoVariantUrl").isJsonNull()) && !jsonObj.get("videoVariantUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `videoVariantUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("videoVariantUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Tweet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Tweet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Tweet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Tweet.class));

       return (TypeAdapter<T>) new TypeAdapter<Tweet>() {
           @Override
           public void write(JsonWriter out, Tweet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Tweet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Tweet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Tweet
   * @throws IOException if the JSON string is invalid with respect to Tweet
   */
  public static Tweet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Tweet.class);
  }

  /**
   * Convert an instance of Tweet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

