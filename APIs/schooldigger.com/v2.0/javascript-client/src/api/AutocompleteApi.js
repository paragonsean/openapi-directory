/**
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIAutocompleteSchoolResult from '../model/APIAutocompleteSchoolResult';

/**
* Autocomplete service.
* @module api/AutocompleteApi
* @version v2.0
*/
export default class AutocompleteApi {

    /**
    * Constructs a new AutocompleteApi. 
    * @alias module:api/AutocompleteApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the autocompleteGetSchools operation.
     * @callback module:api/AutocompleteApi~autocompleteGetSchoolsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIAutocompleteSchoolResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a simple and quick list of schools for use in a client-typed autocomplete
     * @param {String} appID Your API app id
     * @param {String} appKey Your API app key
     * @param {Object} opts Optional parameters
     * @param {String} [q] Search term for autocomplete (e.g. 'Lincol') (required)
     * @param {Boolean} [qSearchCityStateName] Extend the search term to include city and state (e.g. 'Lincoln el paso' matches Lincoln Middle School in El Paso) (optional)
     * @param {String} [st] Two character state (e.g. 'CA') (optional -- leave blank to search entire U.S.)
     * @param {String} [level] Search for schools at this level only. Valid values: 'Elementary', 'Middle', 'High', 'Alt', 'Private' (optional - leave blank to search for all schools)
     * @param {Number} [boxLatitudeNW] Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)
     * @param {Number} [boxLongitudeNW] Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)
     * @param {Number} [boxLatitudeSE] Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)
     * @param {Number} [boxLongitudeSE] Search within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional. Pro, Enterprise API levels only.)
     * @param {Number} [returnCount] Number of schools to return. Valid values: 1-20. (default: 10)
     * @param {module:api/AutocompleteApi~autocompleteGetSchoolsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIAutocompleteSchoolResult}
     */
    autocompleteGetSchools(appID, appKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'appID' is set
      if (appID === undefined || appID === null) {
        throw new Error("Missing the required parameter 'appID' when calling autocompleteGetSchools");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling autocompleteGetSchools");
      }

      let pathParams = {
      };
      let queryParams = {
        'q': opts['q'],
        'qSearchCityStateName': opts['qSearchCityStateName'],
        'st': opts['st'],
        'level': opts['level'],
        'boxLatitudeNW': opts['boxLatitudeNW'],
        'boxLongitudeNW': opts['boxLongitudeNW'],
        'boxLatitudeSE': opts['boxLatitudeSE'],
        'boxLongitudeSE': opts['boxLongitudeSE'],
        'returnCount': opts['returnCount'],
        'appID': appID,
        'appKey': appKey
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIAutocompleteSchoolResult;
      return this.apiClient.callApi(
        '/v2.0/autocomplete/schools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
