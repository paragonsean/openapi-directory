/**
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APISchoolAC model module.
 * @module model/APISchoolAC
 * @version v2.0
 */
class APISchoolAC {
    /**
     * Constructs a new <code>APISchoolAC</code>.
     * @alias module:model/APISchoolAC
     */
    constructor() { 
        
        APISchoolAC.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APISchoolAC</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APISchoolAC} obj Optional instance to populate.
     * @return {module:model/APISchoolAC} The populated <code>APISchoolAC</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APISchoolAC();

            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('hasBoundary')) {
                obj['hasBoundary'] = ApiClient.convertToType(data['hasBoundary'], 'Boolean');
            }
            if (data.hasOwnProperty('highGrade')) {
                obj['highGrade'] = ApiClient.convertToType(data['highGrade'], 'String');
            }
            if (data.hasOwnProperty('latitude')) {
                obj['latitude'] = ApiClient.convertToType(data['latitude'], 'Number');
            }
            if (data.hasOwnProperty('longitude')) {
                obj['longitude'] = ApiClient.convertToType(data['longitude'], 'Number');
            }
            if (data.hasOwnProperty('lowGrade')) {
                obj['lowGrade'] = ApiClient.convertToType(data['lowGrade'], 'String');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
            if (data.hasOwnProperty('rankOf')) {
                obj['rankOf'] = ApiClient.convertToType(data['rankOf'], 'Number');
            }
            if (data.hasOwnProperty('rankStars')) {
                obj['rankStars'] = ApiClient.convertToType(data['rankStars'], 'Number');
            }
            if (data.hasOwnProperty('schoolLevel')) {
                obj['schoolLevel'] = ApiClient.convertToType(data['schoolLevel'], 'String');
            }
            if (data.hasOwnProperty('schoolName')) {
                obj['schoolName'] = ApiClient.convertToType(data['schoolName'], 'String');
            }
            if (data.hasOwnProperty('schoolid')) {
                obj['schoolid'] = ApiClient.convertToType(data['schoolid'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APISchoolAC</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APISchoolAC</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['highGrade'] && !(typeof data['highGrade'] === 'string' || data['highGrade'] instanceof String)) {
            throw new Error("Expected the field `highGrade` to be a primitive type in the JSON string but got " + data['highGrade']);
        }
        // ensure the json data is a string
        if (data['lowGrade'] && !(typeof data['lowGrade'] === 'string' || data['lowGrade'] instanceof String)) {
            throw new Error("Expected the field `lowGrade` to be a primitive type in the JSON string but got " + data['lowGrade']);
        }
        // ensure the json data is a string
        if (data['schoolLevel'] && !(typeof data['schoolLevel'] === 'string' || data['schoolLevel'] instanceof String)) {
            throw new Error("Expected the field `schoolLevel` to be a primitive type in the JSON string but got " + data['schoolLevel']);
        }
        // ensure the json data is a string
        if (data['schoolName'] && !(typeof data['schoolName'] === 'string' || data['schoolName'] instanceof String)) {
            throw new Error("Expected the field `schoolName` to be a primitive type in the JSON string but got " + data['schoolName']);
        }
        // ensure the json data is a string
        if (data['schoolid'] && !(typeof data['schoolid'] === 'string' || data['schoolid'] instanceof String)) {
            throw new Error("Expected the field `schoolid` to be a primitive type in the JSON string but got " + data['schoolid']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['zip'] && !(typeof data['zip'] === 'string' || data['zip'] instanceof String)) {
            throw new Error("Expected the field `zip` to be a primitive type in the JSON string but got " + data['zip']);
        }

        return true;
    }


}



/**
 * School location city
 * @member {String} city
 */
APISchoolAC.prototype['city'] = undefined;

/**
 * States whether there is an attendance boundary available for this school
 * @member {Boolean} hasBoundary
 */
APISchoolAC.prototype['hasBoundary'] = undefined;

/**
 * The high grade served by this school
 * @member {String} highGrade
 */
APISchoolAC.prototype['highGrade'] = undefined;

/**
 * School location latitude
 * @member {Number} latitude
 */
APISchoolAC.prototype['latitude'] = undefined;

/**
 * School location longitude
 * @member {Number} longitude
 */
APISchoolAC.prototype['longitude'] = undefined;

/**
 * The low grade served by this school (PK = Prekindergarten, K = Kindergarten)
 * @member {String} lowGrade
 */
APISchoolAC.prototype['lowGrade'] = undefined;

/**
 * Statewide rank of this School
 * @member {Number} rank
 */
APISchoolAC.prototype['rank'] = undefined;

/**
 * Count of schools ranked at this state/level
 * @member {Number} rankOf
 */
APISchoolAC.prototype['rankOf'] = undefined;

/**
 * The number of stars SchoolDigger awarded in the ranking of the school (0-5, 5 is best)
 * @member {Number} rankStars
 */
APISchoolAC.prototype['rankStars'] = undefined;

/**
 * The level of school (Elementary, Middle, High, Private, Alternative)
 * @member {String} schoolLevel
 */
APISchoolAC.prototype['schoolLevel'] = undefined;

/**
 * School name
 * @member {String} schoolName
 */
APISchoolAC.prototype['schoolName'] = undefined;

/**
 * SchoolDigger School ID Number (12 digits). Use /schools/{schoolID} to retrieve the full school record
 * @member {String} schoolid
 */
APISchoolAC.prototype['schoolid'] = undefined;

/**
 * School location state
 * @member {String} state
 */
APISchoolAC.prototype['state'] = undefined;

/**
 * School location zip code
 * @member {String} zip
 */
APISchoolAC.prototype['zip'] = undefined;






export default APISchoolAC;

