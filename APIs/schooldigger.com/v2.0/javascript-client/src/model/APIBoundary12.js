/**
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import APIPolyline from './APIPolyline';

/**
 * The APIBoundary12 model module.
 * @module model/APIBoundary12
 * @version v2.0
 */
class APIBoundary12 {
    /**
     * Constructs a new <code>APIBoundary12</code>.
     * @alias module:model/APIBoundary12
     */
    constructor() { 
        
        APIBoundary12.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>APIBoundary12</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIBoundary12} obj Optional instance to populate.
     * @return {module:model/APIBoundary12} The populated <code>APIBoundary12</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIBoundary12();

            if (data.hasOwnProperty('hasBoundary')) {
                obj['hasBoundary'] = ApiClient.convertToType(data['hasBoundary'], 'Boolean');
            }
            if (data.hasOwnProperty('polylineCollection')) {
                obj['polylineCollection'] = ApiClient.convertToType(data['polylineCollection'], [APIPolyline]);
            }
            if (data.hasOwnProperty('polylines')) {
                obj['polylines'] = ApiClient.convertToType(data['polylines'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIBoundary12</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIBoundary12</code>.
     */
    static validateJSON(data) {
        if (data['polylineCollection']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['polylineCollection'])) {
                throw new Error("Expected the field `polylineCollection` to be an array in the JSON data but got " + data['polylineCollection']);
            }
            // validate the optional field `polylineCollection` (array)
            for (const item of data['polylineCollection']) {
                APIPolyline.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['polylines'] && !(typeof data['polylines'] === 'string' || data['polylines'] instanceof String)) {
            throw new Error("Expected the field `polylines` to be a primitive type in the JSON string but got " + data['polylines']);
        }

        return true;
    }


}



/**
 * States whether there is a boundary available
 * @member {Boolean} hasBoundary
 */
APIBoundary12.prototype['hasBoundary'] = undefined;

/**
 * Collection of one or more polylines that can be used to create the boundary on a map. NOTE: this value is JSON encoded. Specifically, backslashes will be returned escaped (two backslashes). Make sure to decode the polyline before you use it
 * @member {Array.<module:model/APIPolyline>} polylineCollection
 */
APIBoundary12.prototype['polylineCollection'] = undefined;

/**
 * Collection of latitude/longitude vertices to form a polygon representing the boundary
 * @member {String} polylines
 */
APIBoundary12.prototype['polylines'] = undefined;






export default APIBoundary12;

