/**
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPISchoolAC.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPISchoolAC::OAIAPISchoolAC(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPISchoolAC::OAIAPISchoolAC() {
    this->initializeModel();
}

OAIAPISchoolAC::~OAIAPISchoolAC() {}

void OAIAPISchoolAC::initializeModel() {

    m_city_isSet = false;
    m_city_isValid = false;

    m_has_boundary_isSet = false;
    m_has_boundary_isValid = false;

    m_high_grade_isSet = false;
    m_high_grade_isValid = false;

    m_latitude_isSet = false;
    m_latitude_isValid = false;

    m_longitude_isSet = false;
    m_longitude_isValid = false;

    m_low_grade_isSet = false;
    m_low_grade_isValid = false;

    m_rank_isSet = false;
    m_rank_isValid = false;

    m_rank_of_isSet = false;
    m_rank_of_isValid = false;

    m_rank_stars_isSet = false;
    m_rank_stars_isValid = false;

    m_school_level_isSet = false;
    m_school_level_isValid = false;

    m_school_name_isSet = false;
    m_school_name_isValid = false;

    m_schoolid_isSet = false;
    m_schoolid_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_zip_isSet = false;
    m_zip_isValid = false;
}

void OAIAPISchoolAC::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPISchoolAC::fromJsonObject(QJsonObject json) {

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_has_boundary_isValid = ::OpenAPI::fromJsonValue(m_has_boundary, json[QString("hasBoundary")]);
    m_has_boundary_isSet = !json[QString("hasBoundary")].isNull() && m_has_boundary_isValid;

    m_high_grade_isValid = ::OpenAPI::fromJsonValue(m_high_grade, json[QString("highGrade")]);
    m_high_grade_isSet = !json[QString("highGrade")].isNull() && m_high_grade_isValid;

    m_latitude_isValid = ::OpenAPI::fromJsonValue(m_latitude, json[QString("latitude")]);
    m_latitude_isSet = !json[QString("latitude")].isNull() && m_latitude_isValid;

    m_longitude_isValid = ::OpenAPI::fromJsonValue(m_longitude, json[QString("longitude")]);
    m_longitude_isSet = !json[QString("longitude")].isNull() && m_longitude_isValid;

    m_low_grade_isValid = ::OpenAPI::fromJsonValue(m_low_grade, json[QString("lowGrade")]);
    m_low_grade_isSet = !json[QString("lowGrade")].isNull() && m_low_grade_isValid;

    m_rank_isValid = ::OpenAPI::fromJsonValue(m_rank, json[QString("rank")]);
    m_rank_isSet = !json[QString("rank")].isNull() && m_rank_isValid;

    m_rank_of_isValid = ::OpenAPI::fromJsonValue(m_rank_of, json[QString("rankOf")]);
    m_rank_of_isSet = !json[QString("rankOf")].isNull() && m_rank_of_isValid;

    m_rank_stars_isValid = ::OpenAPI::fromJsonValue(m_rank_stars, json[QString("rankStars")]);
    m_rank_stars_isSet = !json[QString("rankStars")].isNull() && m_rank_stars_isValid;

    m_school_level_isValid = ::OpenAPI::fromJsonValue(m_school_level, json[QString("schoolLevel")]);
    m_school_level_isSet = !json[QString("schoolLevel")].isNull() && m_school_level_isValid;

    m_school_name_isValid = ::OpenAPI::fromJsonValue(m_school_name, json[QString("schoolName")]);
    m_school_name_isSet = !json[QString("schoolName")].isNull() && m_school_name_isValid;

    m_schoolid_isValid = ::OpenAPI::fromJsonValue(m_schoolid, json[QString("schoolid")]);
    m_schoolid_isSet = !json[QString("schoolid")].isNull() && m_schoolid_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_zip_isValid = ::OpenAPI::fromJsonValue(m_zip, json[QString("zip")]);
    m_zip_isSet = !json[QString("zip")].isNull() && m_zip_isValid;
}

QString OAIAPISchoolAC::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPISchoolAC::asJsonObject() const {
    QJsonObject obj;
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_has_boundary_isSet) {
        obj.insert(QString("hasBoundary"), ::OpenAPI::toJsonValue(m_has_boundary));
    }
    if (m_high_grade_isSet) {
        obj.insert(QString("highGrade"), ::OpenAPI::toJsonValue(m_high_grade));
    }
    if (m_latitude_isSet) {
        obj.insert(QString("latitude"), ::OpenAPI::toJsonValue(m_latitude));
    }
    if (m_longitude_isSet) {
        obj.insert(QString("longitude"), ::OpenAPI::toJsonValue(m_longitude));
    }
    if (m_low_grade_isSet) {
        obj.insert(QString("lowGrade"), ::OpenAPI::toJsonValue(m_low_grade));
    }
    if (m_rank_isSet) {
        obj.insert(QString("rank"), ::OpenAPI::toJsonValue(m_rank));
    }
    if (m_rank_of_isSet) {
        obj.insert(QString("rankOf"), ::OpenAPI::toJsonValue(m_rank_of));
    }
    if (m_rank_stars_isSet) {
        obj.insert(QString("rankStars"), ::OpenAPI::toJsonValue(m_rank_stars));
    }
    if (m_school_level_isSet) {
        obj.insert(QString("schoolLevel"), ::OpenAPI::toJsonValue(m_school_level));
    }
    if (m_school_name_isSet) {
        obj.insert(QString("schoolName"), ::OpenAPI::toJsonValue(m_school_name));
    }
    if (m_schoolid_isSet) {
        obj.insert(QString("schoolid"), ::OpenAPI::toJsonValue(m_schoolid));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_zip_isSet) {
        obj.insert(QString("zip"), ::OpenAPI::toJsonValue(m_zip));
    }
    return obj;
}

QString OAIAPISchoolAC::getCity() const {
    return m_city;
}
void OAIAPISchoolAC::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIAPISchoolAC::is_city_Set() const{
    return m_city_isSet;
}

bool OAIAPISchoolAC::is_city_Valid() const{
    return m_city_isValid;
}

bool OAIAPISchoolAC::isHasBoundary() const {
    return m_has_boundary;
}
void OAIAPISchoolAC::setHasBoundary(const bool &has_boundary) {
    m_has_boundary = has_boundary;
    m_has_boundary_isSet = true;
}

bool OAIAPISchoolAC::is_has_boundary_Set() const{
    return m_has_boundary_isSet;
}

bool OAIAPISchoolAC::is_has_boundary_Valid() const{
    return m_has_boundary_isValid;
}

QString OAIAPISchoolAC::getHighGrade() const {
    return m_high_grade;
}
void OAIAPISchoolAC::setHighGrade(const QString &high_grade) {
    m_high_grade = high_grade;
    m_high_grade_isSet = true;
}

bool OAIAPISchoolAC::is_high_grade_Set() const{
    return m_high_grade_isSet;
}

bool OAIAPISchoolAC::is_high_grade_Valid() const{
    return m_high_grade_isValid;
}

double OAIAPISchoolAC::getLatitude() const {
    return m_latitude;
}
void OAIAPISchoolAC::setLatitude(const double &latitude) {
    m_latitude = latitude;
    m_latitude_isSet = true;
}

bool OAIAPISchoolAC::is_latitude_Set() const{
    return m_latitude_isSet;
}

bool OAIAPISchoolAC::is_latitude_Valid() const{
    return m_latitude_isValid;
}

double OAIAPISchoolAC::getLongitude() const {
    return m_longitude;
}
void OAIAPISchoolAC::setLongitude(const double &longitude) {
    m_longitude = longitude;
    m_longitude_isSet = true;
}

bool OAIAPISchoolAC::is_longitude_Set() const{
    return m_longitude_isSet;
}

bool OAIAPISchoolAC::is_longitude_Valid() const{
    return m_longitude_isValid;
}

QString OAIAPISchoolAC::getLowGrade() const {
    return m_low_grade;
}
void OAIAPISchoolAC::setLowGrade(const QString &low_grade) {
    m_low_grade = low_grade;
    m_low_grade_isSet = true;
}

bool OAIAPISchoolAC::is_low_grade_Set() const{
    return m_low_grade_isSet;
}

bool OAIAPISchoolAC::is_low_grade_Valid() const{
    return m_low_grade_isValid;
}

qint32 OAIAPISchoolAC::getRank() const {
    return m_rank;
}
void OAIAPISchoolAC::setRank(const qint32 &rank) {
    m_rank = rank;
    m_rank_isSet = true;
}

bool OAIAPISchoolAC::is_rank_Set() const{
    return m_rank_isSet;
}

bool OAIAPISchoolAC::is_rank_Valid() const{
    return m_rank_isValid;
}

qint32 OAIAPISchoolAC::getRankOf() const {
    return m_rank_of;
}
void OAIAPISchoolAC::setRankOf(const qint32 &rank_of) {
    m_rank_of = rank_of;
    m_rank_of_isSet = true;
}

bool OAIAPISchoolAC::is_rank_of_Set() const{
    return m_rank_of_isSet;
}

bool OAIAPISchoolAC::is_rank_of_Valid() const{
    return m_rank_of_isValid;
}

qint32 OAIAPISchoolAC::getRankStars() const {
    return m_rank_stars;
}
void OAIAPISchoolAC::setRankStars(const qint32 &rank_stars) {
    m_rank_stars = rank_stars;
    m_rank_stars_isSet = true;
}

bool OAIAPISchoolAC::is_rank_stars_Set() const{
    return m_rank_stars_isSet;
}

bool OAIAPISchoolAC::is_rank_stars_Valid() const{
    return m_rank_stars_isValid;
}

QString OAIAPISchoolAC::getSchoolLevel() const {
    return m_school_level;
}
void OAIAPISchoolAC::setSchoolLevel(const QString &school_level) {
    m_school_level = school_level;
    m_school_level_isSet = true;
}

bool OAIAPISchoolAC::is_school_level_Set() const{
    return m_school_level_isSet;
}

bool OAIAPISchoolAC::is_school_level_Valid() const{
    return m_school_level_isValid;
}

QString OAIAPISchoolAC::getSchoolName() const {
    return m_school_name;
}
void OAIAPISchoolAC::setSchoolName(const QString &school_name) {
    m_school_name = school_name;
    m_school_name_isSet = true;
}

bool OAIAPISchoolAC::is_school_name_Set() const{
    return m_school_name_isSet;
}

bool OAIAPISchoolAC::is_school_name_Valid() const{
    return m_school_name_isValid;
}

QString OAIAPISchoolAC::getSchoolid() const {
    return m_schoolid;
}
void OAIAPISchoolAC::setSchoolid(const QString &schoolid) {
    m_schoolid = schoolid;
    m_schoolid_isSet = true;
}

bool OAIAPISchoolAC::is_schoolid_Set() const{
    return m_schoolid_isSet;
}

bool OAIAPISchoolAC::is_schoolid_Valid() const{
    return m_schoolid_isValid;
}

QString OAIAPISchoolAC::getState() const {
    return m_state;
}
void OAIAPISchoolAC::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAPISchoolAC::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAPISchoolAC::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIAPISchoolAC::getZip() const {
    return m_zip;
}
void OAIAPISchoolAC::setZip(const QString &zip) {
    m_zip = zip;
    m_zip_isSet = true;
}

bool OAIAPISchoolAC::is_zip_Set() const{
    return m_zip_isSet;
}

bool OAIAPISchoolAC::is_zip_Valid() const{
    return m_zip_isValid;
}

bool OAIAPISchoolAC::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_high_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_longitude_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_of_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_stars_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schoolid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPISchoolAC::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
