/**
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPIBoundary12.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPIBoundary12::OAIAPIBoundary12(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPIBoundary12::OAIAPIBoundary12() {
    this->initializeModel();
}

OAIAPIBoundary12::~OAIAPIBoundary12() {}

void OAIAPIBoundary12::initializeModel() {

    m_has_boundary_isSet = false;
    m_has_boundary_isValid = false;

    m_polyline_collection_isSet = false;
    m_polyline_collection_isValid = false;

    m_polylines_isSet = false;
    m_polylines_isValid = false;
}

void OAIAPIBoundary12::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPIBoundary12::fromJsonObject(QJsonObject json) {

    m_has_boundary_isValid = ::OpenAPI::fromJsonValue(m_has_boundary, json[QString("hasBoundary")]);
    m_has_boundary_isSet = !json[QString("hasBoundary")].isNull() && m_has_boundary_isValid;

    m_polyline_collection_isValid = ::OpenAPI::fromJsonValue(m_polyline_collection, json[QString("polylineCollection")]);
    m_polyline_collection_isSet = !json[QString("polylineCollection")].isNull() && m_polyline_collection_isValid;

    m_polylines_isValid = ::OpenAPI::fromJsonValue(m_polylines, json[QString("polylines")]);
    m_polylines_isSet = !json[QString("polylines")].isNull() && m_polylines_isValid;
}

QString OAIAPIBoundary12::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPIBoundary12::asJsonObject() const {
    QJsonObject obj;
    if (m_has_boundary_isSet) {
        obj.insert(QString("hasBoundary"), ::OpenAPI::toJsonValue(m_has_boundary));
    }
    if (m_polyline_collection.size() > 0) {
        obj.insert(QString("polylineCollection"), ::OpenAPI::toJsonValue(m_polyline_collection));
    }
    if (m_polylines_isSet) {
        obj.insert(QString("polylines"), ::OpenAPI::toJsonValue(m_polylines));
    }
    return obj;
}

bool OAIAPIBoundary12::isHasBoundary() const {
    return m_has_boundary;
}
void OAIAPIBoundary12::setHasBoundary(const bool &has_boundary) {
    m_has_boundary = has_boundary;
    m_has_boundary_isSet = true;
}

bool OAIAPIBoundary12::is_has_boundary_Set() const{
    return m_has_boundary_isSet;
}

bool OAIAPIBoundary12::is_has_boundary_Valid() const{
    return m_has_boundary_isValid;
}

QList<OAIAPIPolyline> OAIAPIBoundary12::getPolylineCollection() const {
    return m_polyline_collection;
}
void OAIAPIBoundary12::setPolylineCollection(const QList<OAIAPIPolyline> &polyline_collection) {
    m_polyline_collection = polyline_collection;
    m_polyline_collection_isSet = true;
}

bool OAIAPIBoundary12::is_polyline_collection_Set() const{
    return m_polyline_collection_isSet;
}

bool OAIAPIBoundary12::is_polyline_collection_Valid() const{
    return m_polyline_collection_isValid;
}

QString OAIAPIBoundary12::getPolylines() const {
    return m_polylines;
}
void OAIAPIBoundary12::setPolylines(const QString &polylines) {
    m_polylines = polylines;
    m_polylines_isSet = true;
}

bool OAIAPIBoundary12::is_polylines_Set() const{
    return m_polylines_isSet;
}

bool OAIAPIBoundary12::is_polylines_Valid() const{
    return m_polylines_isValid;
}

bool OAIAPIBoundary12::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_has_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_polyline_collection.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_polylines_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPIBoundary12::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
