/**
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPISchoolListRank2.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPISchoolListRank2::OAIAPISchoolListRank2(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPISchoolListRank2::OAIAPISchoolListRank2() {
    this->initializeModel();
}

OAIAPISchoolListRank2::~OAIAPISchoolListRank2() {}

void OAIAPISchoolListRank2::initializeModel() {

    m_number_of_pages_isSet = false;
    m_number_of_pages_isValid = false;

    m_number_of_schools_isSet = false;
    m_number_of_schools_isValid = false;

    m_rank_year_isSet = false;
    m_rank_year_isValid = false;

    m_rank_year_compare_isSet = false;
    m_rank_year_compare_isValid = false;

    m_rank_years_available_isSet = false;
    m_rank_years_available_isValid = false;

    m_school_list_isSet = false;
    m_school_list_isValid = false;
}

void OAIAPISchoolListRank2::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPISchoolListRank2::fromJsonObject(QJsonObject json) {

    m_number_of_pages_isValid = ::OpenAPI::fromJsonValue(m_number_of_pages, json[QString("numberOfPages")]);
    m_number_of_pages_isSet = !json[QString("numberOfPages")].isNull() && m_number_of_pages_isValid;

    m_number_of_schools_isValid = ::OpenAPI::fromJsonValue(m_number_of_schools, json[QString("numberOfSchools")]);
    m_number_of_schools_isSet = !json[QString("numberOfSchools")].isNull() && m_number_of_schools_isValid;

    m_rank_year_isValid = ::OpenAPI::fromJsonValue(m_rank_year, json[QString("rankYear")]);
    m_rank_year_isSet = !json[QString("rankYear")].isNull() && m_rank_year_isValid;

    m_rank_year_compare_isValid = ::OpenAPI::fromJsonValue(m_rank_year_compare, json[QString("rankYearCompare")]);
    m_rank_year_compare_isSet = !json[QString("rankYearCompare")].isNull() && m_rank_year_compare_isValid;

    m_rank_years_available_isValid = ::OpenAPI::fromJsonValue(m_rank_years_available, json[QString("rankYearsAvailable")]);
    m_rank_years_available_isSet = !json[QString("rankYearsAvailable")].isNull() && m_rank_years_available_isValid;

    m_school_list_isValid = ::OpenAPI::fromJsonValue(m_school_list, json[QString("schoolList")]);
    m_school_list_isSet = !json[QString("schoolList")].isNull() && m_school_list_isValid;
}

QString OAIAPISchoolListRank2::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPISchoolListRank2::asJsonObject() const {
    QJsonObject obj;
    if (m_number_of_pages_isSet) {
        obj.insert(QString("numberOfPages"), ::OpenAPI::toJsonValue(m_number_of_pages));
    }
    if (m_number_of_schools_isSet) {
        obj.insert(QString("numberOfSchools"), ::OpenAPI::toJsonValue(m_number_of_schools));
    }
    if (m_rank_year_isSet) {
        obj.insert(QString("rankYear"), ::OpenAPI::toJsonValue(m_rank_year));
    }
    if (m_rank_year_compare_isSet) {
        obj.insert(QString("rankYearCompare"), ::OpenAPI::toJsonValue(m_rank_year_compare));
    }
    if (m_rank_years_available.size() > 0) {
        obj.insert(QString("rankYearsAvailable"), ::OpenAPI::toJsonValue(m_rank_years_available));
    }
    if (m_school_list.size() > 0) {
        obj.insert(QString("schoolList"), ::OpenAPI::toJsonValue(m_school_list));
    }
    return obj;
}

qint32 OAIAPISchoolListRank2::getNumberOfPages() const {
    return m_number_of_pages;
}
void OAIAPISchoolListRank2::setNumberOfPages(const qint32 &number_of_pages) {
    m_number_of_pages = number_of_pages;
    m_number_of_pages_isSet = true;
}

bool OAIAPISchoolListRank2::is_number_of_pages_Set() const{
    return m_number_of_pages_isSet;
}

bool OAIAPISchoolListRank2::is_number_of_pages_Valid() const{
    return m_number_of_pages_isValid;
}

qint32 OAIAPISchoolListRank2::getNumberOfSchools() const {
    return m_number_of_schools;
}
void OAIAPISchoolListRank2::setNumberOfSchools(const qint32 &number_of_schools) {
    m_number_of_schools = number_of_schools;
    m_number_of_schools_isSet = true;
}

bool OAIAPISchoolListRank2::is_number_of_schools_Set() const{
    return m_number_of_schools_isSet;
}

bool OAIAPISchoolListRank2::is_number_of_schools_Valid() const{
    return m_number_of_schools_isValid;
}

qint32 OAIAPISchoolListRank2::getRankYear() const {
    return m_rank_year;
}
void OAIAPISchoolListRank2::setRankYear(const qint32 &rank_year) {
    m_rank_year = rank_year;
    m_rank_year_isSet = true;
}

bool OAIAPISchoolListRank2::is_rank_year_Set() const{
    return m_rank_year_isSet;
}

bool OAIAPISchoolListRank2::is_rank_year_Valid() const{
    return m_rank_year_isValid;
}

qint32 OAIAPISchoolListRank2::getRankYearCompare() const {
    return m_rank_year_compare;
}
void OAIAPISchoolListRank2::setRankYearCompare(const qint32 &rank_year_compare) {
    m_rank_year_compare = rank_year_compare;
    m_rank_year_compare_isSet = true;
}

bool OAIAPISchoolListRank2::is_rank_year_compare_Set() const{
    return m_rank_year_compare_isSet;
}

bool OAIAPISchoolListRank2::is_rank_year_compare_Valid() const{
    return m_rank_year_compare_isValid;
}

QList<qint32> OAIAPISchoolListRank2::getRankYearsAvailable() const {
    return m_rank_years_available;
}
void OAIAPISchoolListRank2::setRankYearsAvailable(const QList<qint32> &rank_years_available) {
    m_rank_years_available = rank_years_available;
    m_rank_years_available_isSet = true;
}

bool OAIAPISchoolListRank2::is_rank_years_available_Set() const{
    return m_rank_years_available_isSet;
}

bool OAIAPISchoolListRank2::is_rank_years_available_Valid() const{
    return m_rank_years_available_isValid;
}

QList<OAIAPISchool2Summary> OAIAPISchoolListRank2::getSchoolList() const {
    return m_school_list;
}
void OAIAPISchoolListRank2::setSchoolList(const QList<OAIAPISchool2Summary> &school_list) {
    m_school_list = school_list;
    m_school_list_isSet = true;
}

bool OAIAPISchoolListRank2::is_school_list_Set() const{
    return m_school_list_isSet;
}

bool OAIAPISchoolListRank2::is_school_list_Valid() const{
    return m_school_list_isValid;
}

bool OAIAPISchoolListRank2::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_of_pages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_schools_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_year_compare_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_years_available.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_list.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPISchoolListRank2::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
