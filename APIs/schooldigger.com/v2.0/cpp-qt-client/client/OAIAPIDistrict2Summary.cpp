/**
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPIDistrict2Summary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPIDistrict2Summary::OAIAPIDistrict2Summary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPIDistrict2Summary::OAIAPIDistrict2Summary() {
    this->initializeModel();
}

OAIAPIDistrict2Summary::~OAIAPIDistrict2Summary() {}

void OAIAPIDistrict2Summary::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_county_isSet = false;
    m_county_isValid = false;

    m_distance_isSet = false;
    m_distance_isValid = false;

    m_district_id_isSet = false;
    m_district_id_isValid = false;

    m_district_name_isSet = false;
    m_district_name_isValid = false;

    m_district_yearly_details_isSet = false;
    m_district_yearly_details_isValid = false;

    m_has_boundary_isSet = false;
    m_has_boundary_isValid = false;

    m_high_grade_isSet = false;
    m_high_grade_isValid = false;

    m_is_within_boundary_isSet = false;
    m_is_within_boundary_isValid = false;

    m_location_is_within_boundary_isSet = false;
    m_location_is_within_boundary_isValid = false;

    m_low_grade_isSet = false;
    m_low_grade_isValid = false;

    m_number_alternative_schools_isSet = false;
    m_number_alternative_schools_isValid = false;

    m_number_high_schools_isSet = false;
    m_number_high_schools_isValid = false;

    m_number_middle_schools_isSet = false;
    m_number_middle_schools_isValid = false;

    m_number_primary_schools_isSet = false;
    m_number_primary_schools_isValid = false;

    m_number_total_schools_isSet = false;
    m_number_total_schools_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_rank_history_isSet = false;
    m_rank_history_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIAPIDistrict2Summary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPIDistrict2Summary::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_county_isValid = ::OpenAPI::fromJsonValue(m_county, json[QString("county")]);
    m_county_isSet = !json[QString("county")].isNull() && m_county_isValid;

    m_distance_isValid = ::OpenAPI::fromJsonValue(m_distance, json[QString("distance")]);
    m_distance_isSet = !json[QString("distance")].isNull() && m_distance_isValid;

    m_district_id_isValid = ::OpenAPI::fromJsonValue(m_district_id, json[QString("districtID")]);
    m_district_id_isSet = !json[QString("districtID")].isNull() && m_district_id_isValid;

    m_district_name_isValid = ::OpenAPI::fromJsonValue(m_district_name, json[QString("districtName")]);
    m_district_name_isSet = !json[QString("districtName")].isNull() && m_district_name_isValid;

    m_district_yearly_details_isValid = ::OpenAPI::fromJsonValue(m_district_yearly_details, json[QString("districtYearlyDetails")]);
    m_district_yearly_details_isSet = !json[QString("districtYearlyDetails")].isNull() && m_district_yearly_details_isValid;

    m_has_boundary_isValid = ::OpenAPI::fromJsonValue(m_has_boundary, json[QString("hasBoundary")]);
    m_has_boundary_isSet = !json[QString("hasBoundary")].isNull() && m_has_boundary_isValid;

    m_high_grade_isValid = ::OpenAPI::fromJsonValue(m_high_grade, json[QString("highGrade")]);
    m_high_grade_isSet = !json[QString("highGrade")].isNull() && m_high_grade_isValid;

    m_is_within_boundary_isValid = ::OpenAPI::fromJsonValue(m_is_within_boundary, json[QString("isWithinBoundary")]);
    m_is_within_boundary_isSet = !json[QString("isWithinBoundary")].isNull() && m_is_within_boundary_isValid;

    m_location_is_within_boundary_isValid = ::OpenAPI::fromJsonValue(m_location_is_within_boundary, json[QString("locationIsWithinBoundary")]);
    m_location_is_within_boundary_isSet = !json[QString("locationIsWithinBoundary")].isNull() && m_location_is_within_boundary_isValid;

    m_low_grade_isValid = ::OpenAPI::fromJsonValue(m_low_grade, json[QString("lowGrade")]);
    m_low_grade_isSet = !json[QString("lowGrade")].isNull() && m_low_grade_isValid;

    m_number_alternative_schools_isValid = ::OpenAPI::fromJsonValue(m_number_alternative_schools, json[QString("numberAlternativeSchools")]);
    m_number_alternative_schools_isSet = !json[QString("numberAlternativeSchools")].isNull() && m_number_alternative_schools_isValid;

    m_number_high_schools_isValid = ::OpenAPI::fromJsonValue(m_number_high_schools, json[QString("numberHighSchools")]);
    m_number_high_schools_isSet = !json[QString("numberHighSchools")].isNull() && m_number_high_schools_isValid;

    m_number_middle_schools_isValid = ::OpenAPI::fromJsonValue(m_number_middle_schools, json[QString("numberMiddleSchools")]);
    m_number_middle_schools_isSet = !json[QString("numberMiddleSchools")].isNull() && m_number_middle_schools_isValid;

    m_number_primary_schools_isValid = ::OpenAPI::fromJsonValue(m_number_primary_schools, json[QString("numberPrimarySchools")]);
    m_number_primary_schools_isSet = !json[QString("numberPrimarySchools")].isNull() && m_number_primary_schools_isValid;

    m_number_total_schools_isValid = ::OpenAPI::fromJsonValue(m_number_total_schools, json[QString("numberTotalSchools")]);
    m_number_total_schools_isSet = !json[QString("numberTotalSchools")].isNull() && m_number_total_schools_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_rank_history_isValid = ::OpenAPI::fromJsonValue(m_rank_history, json[QString("rankHistory")]);
    m_rank_history_isSet = !json[QString("rankHistory")].isNull() && m_rank_history_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIAPIDistrict2Summary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPIDistrict2Summary::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_county.isSet()) {
        obj.insert(QString("county"), ::OpenAPI::toJsonValue(m_county));
    }
    if (m_distance_isSet) {
        obj.insert(QString("distance"), ::OpenAPI::toJsonValue(m_distance));
    }
    if (m_district_id_isSet) {
        obj.insert(QString("districtID"), ::OpenAPI::toJsonValue(m_district_id));
    }
    if (m_district_name_isSet) {
        obj.insert(QString("districtName"), ::OpenAPI::toJsonValue(m_district_name));
    }
    if (m_district_yearly_details.size() > 0) {
        obj.insert(QString("districtYearlyDetails"), ::OpenAPI::toJsonValue(m_district_yearly_details));
    }
    if (m_has_boundary_isSet) {
        obj.insert(QString("hasBoundary"), ::OpenAPI::toJsonValue(m_has_boundary));
    }
    if (m_high_grade_isSet) {
        obj.insert(QString("highGrade"), ::OpenAPI::toJsonValue(m_high_grade));
    }
    if (m_is_within_boundary_isSet) {
        obj.insert(QString("isWithinBoundary"), ::OpenAPI::toJsonValue(m_is_within_boundary));
    }
    if (m_location_is_within_boundary_isSet) {
        obj.insert(QString("locationIsWithinBoundary"), ::OpenAPI::toJsonValue(m_location_is_within_boundary));
    }
    if (m_low_grade_isSet) {
        obj.insert(QString("lowGrade"), ::OpenAPI::toJsonValue(m_low_grade));
    }
    if (m_number_alternative_schools_isSet) {
        obj.insert(QString("numberAlternativeSchools"), ::OpenAPI::toJsonValue(m_number_alternative_schools));
    }
    if (m_number_high_schools_isSet) {
        obj.insert(QString("numberHighSchools"), ::OpenAPI::toJsonValue(m_number_high_schools));
    }
    if (m_number_middle_schools_isSet) {
        obj.insert(QString("numberMiddleSchools"), ::OpenAPI::toJsonValue(m_number_middle_schools));
    }
    if (m_number_primary_schools_isSet) {
        obj.insert(QString("numberPrimarySchools"), ::OpenAPI::toJsonValue(m_number_primary_schools));
    }
    if (m_number_total_schools_isSet) {
        obj.insert(QString("numberTotalSchools"), ::OpenAPI::toJsonValue(m_number_total_schools));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_rank_history.size() > 0) {
        obj.insert(QString("rankHistory"), ::OpenAPI::toJsonValue(m_rank_history));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIAPILocation OAIAPIDistrict2Summary::getAddress() const {
    return m_address;
}
void OAIAPIDistrict2Summary::setAddress(const OAIAPILocation &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIAPIDistrict2Summary::is_address_Set() const{
    return m_address_isSet;
}

bool OAIAPIDistrict2Summary::is_address_Valid() const{
    return m_address_isValid;
}

OAIAPICounty OAIAPIDistrict2Summary::getCounty() const {
    return m_county;
}
void OAIAPIDistrict2Summary::setCounty(const OAIAPICounty &county) {
    m_county = county;
    m_county_isSet = true;
}

bool OAIAPIDistrict2Summary::is_county_Set() const{
    return m_county_isSet;
}

bool OAIAPIDistrict2Summary::is_county_Valid() const{
    return m_county_isValid;
}

double OAIAPIDistrict2Summary::getDistance() const {
    return m_distance;
}
void OAIAPIDistrict2Summary::setDistance(const double &distance) {
    m_distance = distance;
    m_distance_isSet = true;
}

bool OAIAPIDistrict2Summary::is_distance_Set() const{
    return m_distance_isSet;
}

bool OAIAPIDistrict2Summary::is_distance_Valid() const{
    return m_distance_isValid;
}

QString OAIAPIDistrict2Summary::getDistrictId() const {
    return m_district_id;
}
void OAIAPIDistrict2Summary::setDistrictId(const QString &district_id) {
    m_district_id = district_id;
    m_district_id_isSet = true;
}

bool OAIAPIDistrict2Summary::is_district_id_Set() const{
    return m_district_id_isSet;
}

bool OAIAPIDistrict2Summary::is_district_id_Valid() const{
    return m_district_id_isValid;
}

QString OAIAPIDistrict2Summary::getDistrictName() const {
    return m_district_name;
}
void OAIAPIDistrict2Summary::setDistrictName(const QString &district_name) {
    m_district_name = district_name;
    m_district_name_isSet = true;
}

bool OAIAPIDistrict2Summary::is_district_name_Set() const{
    return m_district_name_isSet;
}

bool OAIAPIDistrict2Summary::is_district_name_Valid() const{
    return m_district_name_isValid;
}

QList<OAIAPILEAYearlyDetail> OAIAPIDistrict2Summary::getDistrictYearlyDetails() const {
    return m_district_yearly_details;
}
void OAIAPIDistrict2Summary::setDistrictYearlyDetails(const QList<OAIAPILEAYearlyDetail> &district_yearly_details) {
    m_district_yearly_details = district_yearly_details;
    m_district_yearly_details_isSet = true;
}

bool OAIAPIDistrict2Summary::is_district_yearly_details_Set() const{
    return m_district_yearly_details_isSet;
}

bool OAIAPIDistrict2Summary::is_district_yearly_details_Valid() const{
    return m_district_yearly_details_isValid;
}

bool OAIAPIDistrict2Summary::isHasBoundary() const {
    return m_has_boundary;
}
void OAIAPIDistrict2Summary::setHasBoundary(const bool &has_boundary) {
    m_has_boundary = has_boundary;
    m_has_boundary_isSet = true;
}

bool OAIAPIDistrict2Summary::is_has_boundary_Set() const{
    return m_has_boundary_isSet;
}

bool OAIAPIDistrict2Summary::is_has_boundary_Valid() const{
    return m_has_boundary_isValid;
}

QString OAIAPIDistrict2Summary::getHighGrade() const {
    return m_high_grade;
}
void OAIAPIDistrict2Summary::setHighGrade(const QString &high_grade) {
    m_high_grade = high_grade;
    m_high_grade_isSet = true;
}

bool OAIAPIDistrict2Summary::is_high_grade_Set() const{
    return m_high_grade_isSet;
}

bool OAIAPIDistrict2Summary::is_high_grade_Valid() const{
    return m_high_grade_isValid;
}

bool OAIAPIDistrict2Summary::isIsWithinBoundary() const {
    return m_is_within_boundary;
}
void OAIAPIDistrict2Summary::setIsWithinBoundary(const bool &is_within_boundary) {
    m_is_within_boundary = is_within_boundary;
    m_is_within_boundary_isSet = true;
}

bool OAIAPIDistrict2Summary::is_is_within_boundary_Set() const{
    return m_is_within_boundary_isSet;
}

bool OAIAPIDistrict2Summary::is_is_within_boundary_Valid() const{
    return m_is_within_boundary_isValid;
}

bool OAIAPIDistrict2Summary::isLocationIsWithinBoundary() const {
    return m_location_is_within_boundary;
}
void OAIAPIDistrict2Summary::setLocationIsWithinBoundary(const bool &location_is_within_boundary) {
    m_location_is_within_boundary = location_is_within_boundary;
    m_location_is_within_boundary_isSet = true;
}

bool OAIAPIDistrict2Summary::is_location_is_within_boundary_Set() const{
    return m_location_is_within_boundary_isSet;
}

bool OAIAPIDistrict2Summary::is_location_is_within_boundary_Valid() const{
    return m_location_is_within_boundary_isValid;
}

QString OAIAPIDistrict2Summary::getLowGrade() const {
    return m_low_grade;
}
void OAIAPIDistrict2Summary::setLowGrade(const QString &low_grade) {
    m_low_grade = low_grade;
    m_low_grade_isSet = true;
}

bool OAIAPIDistrict2Summary::is_low_grade_Set() const{
    return m_low_grade_isSet;
}

bool OAIAPIDistrict2Summary::is_low_grade_Valid() const{
    return m_low_grade_isValid;
}

qint32 OAIAPIDistrict2Summary::getNumberAlternativeSchools() const {
    return m_number_alternative_schools;
}
void OAIAPIDistrict2Summary::setNumberAlternativeSchools(const qint32 &number_alternative_schools) {
    m_number_alternative_schools = number_alternative_schools;
    m_number_alternative_schools_isSet = true;
}

bool OAIAPIDistrict2Summary::is_number_alternative_schools_Set() const{
    return m_number_alternative_schools_isSet;
}

bool OAIAPIDistrict2Summary::is_number_alternative_schools_Valid() const{
    return m_number_alternative_schools_isValid;
}

qint32 OAIAPIDistrict2Summary::getNumberHighSchools() const {
    return m_number_high_schools;
}
void OAIAPIDistrict2Summary::setNumberHighSchools(const qint32 &number_high_schools) {
    m_number_high_schools = number_high_schools;
    m_number_high_schools_isSet = true;
}

bool OAIAPIDistrict2Summary::is_number_high_schools_Set() const{
    return m_number_high_schools_isSet;
}

bool OAIAPIDistrict2Summary::is_number_high_schools_Valid() const{
    return m_number_high_schools_isValid;
}

qint32 OAIAPIDistrict2Summary::getNumberMiddleSchools() const {
    return m_number_middle_schools;
}
void OAIAPIDistrict2Summary::setNumberMiddleSchools(const qint32 &number_middle_schools) {
    m_number_middle_schools = number_middle_schools;
    m_number_middle_schools_isSet = true;
}

bool OAIAPIDistrict2Summary::is_number_middle_schools_Set() const{
    return m_number_middle_schools_isSet;
}

bool OAIAPIDistrict2Summary::is_number_middle_schools_Valid() const{
    return m_number_middle_schools_isValid;
}

qint32 OAIAPIDistrict2Summary::getNumberPrimarySchools() const {
    return m_number_primary_schools;
}
void OAIAPIDistrict2Summary::setNumberPrimarySchools(const qint32 &number_primary_schools) {
    m_number_primary_schools = number_primary_schools;
    m_number_primary_schools_isSet = true;
}

bool OAIAPIDistrict2Summary::is_number_primary_schools_Set() const{
    return m_number_primary_schools_isSet;
}

bool OAIAPIDistrict2Summary::is_number_primary_schools_Valid() const{
    return m_number_primary_schools_isValid;
}

qint32 OAIAPIDistrict2Summary::getNumberTotalSchools() const {
    return m_number_total_schools;
}
void OAIAPIDistrict2Summary::setNumberTotalSchools(const qint32 &number_total_schools) {
    m_number_total_schools = number_total_schools;
    m_number_total_schools_isSet = true;
}

bool OAIAPIDistrict2Summary::is_number_total_schools_Set() const{
    return m_number_total_schools_isSet;
}

bool OAIAPIDistrict2Summary::is_number_total_schools_Valid() const{
    return m_number_total_schools_isValid;
}

QString OAIAPIDistrict2Summary::getPhone() const {
    return m_phone;
}
void OAIAPIDistrict2Summary::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIAPIDistrict2Summary::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIAPIDistrict2Summary::is_phone_Valid() const{
    return m_phone_isValid;
}

QList<OAIAPILEARankHistory> OAIAPIDistrict2Summary::getRankHistory() const {
    return m_rank_history;
}
void OAIAPIDistrict2Summary::setRankHistory(const QList<OAIAPILEARankHistory> &rank_history) {
    m_rank_history = rank_history;
    m_rank_history_isSet = true;
}

bool OAIAPIDistrict2Summary::is_rank_history_Set() const{
    return m_rank_history_isSet;
}

bool OAIAPIDistrict2Summary::is_rank_history_Valid() const{
    return m_rank_history_isValid;
}

QString OAIAPIDistrict2Summary::getUrl() const {
    return m_url;
}
void OAIAPIDistrict2Summary::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAPIDistrict2Summary::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAPIDistrict2Summary::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIAPIDistrict2Summary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_county.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_distance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_yearly_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_high_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_within_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_is_within_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_alternative_schools_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_high_schools_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_middle_schools_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_primary_schools_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_total_schools_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_history.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPIDistrict2Summary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
