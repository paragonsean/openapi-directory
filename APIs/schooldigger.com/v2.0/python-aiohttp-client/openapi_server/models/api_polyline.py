# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APIPolyline(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_encoded_points: int=None, polyline_overlay_encoded_points: str=None):
        """APIPolyline - a model defined in OpenAPI

        :param number_encoded_points: The number_encoded_points of this APIPolyline.
        :param polyline_overlay_encoded_points: The polyline_overlay_encoded_points of this APIPolyline.
        """
        self.openapi_types = {
            'number_encoded_points': int,
            'polyline_overlay_encoded_points': str
        }

        self.attribute_map = {
            'number_encoded_points': 'numberEncodedPoints',
            'polyline_overlay_encoded_points': 'polylineOverlayEncodedPoints'
        }

        self._number_encoded_points = number_encoded_points
        self._polyline_overlay_encoded_points = polyline_overlay_encoded_points

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIPolyline':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APIPolyline of this APIPolyline.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_encoded_points(self):
        """Gets the number_encoded_points of this APIPolyline.

        Number of encoded points in polyline

        :return: The number_encoded_points of this APIPolyline.
        :rtype: int
        """
        return self._number_encoded_points

    @number_encoded_points.setter
    def number_encoded_points(self, number_encoded_points):
        """Sets the number_encoded_points of this APIPolyline.

        Number of encoded points in polyline

        :param number_encoded_points: The number_encoded_points of this APIPolyline.
        :type number_encoded_points: int
        """

        self._number_encoded_points = number_encoded_points

    @property
    def polyline_overlay_encoded_points(self):
        """Gets the polyline_overlay_encoded_points of this APIPolyline.

        Polyline for use with Google Maps or other mapping software. NOTE: this value is JSON encoded. Specifically, backslashes will be returned escaped (two backslashes). Make sure to decode the polyline before you use it

        :return: The polyline_overlay_encoded_points of this APIPolyline.
        :rtype: str
        """
        return self._polyline_overlay_encoded_points

    @polyline_overlay_encoded_points.setter
    def polyline_overlay_encoded_points(self, polyline_overlay_encoded_points):
        """Sets the polyline_overlay_encoded_points of this APIPolyline.

        Polyline for use with Google Maps or other mapping software. NOTE: this value is JSON encoded. Specifically, backslashes will be returned escaped (two backslashes). Make sure to decode the polyline before you use it

        :param polyline_overlay_encoded_points: The polyline_overlay_encoded_points of this APIPolyline.
        :type polyline_overlay_encoded_points: str
        """

        self._polyline_overlay_encoded_points = polyline_overlay_encoded_points
