# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APISchoolReview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comment: str=None, number_of_stars: int=None, submit_date: str=None, submitted_by: str=None):
        """APISchoolReview - a model defined in OpenAPI

        :param comment: The comment of this APISchoolReview.
        :param number_of_stars: The number_of_stars of this APISchoolReview.
        :param submit_date: The submit_date of this APISchoolReview.
        :param submitted_by: The submitted_by of this APISchoolReview.
        """
        self.openapi_types = {
            'comment': str,
            'number_of_stars': int,
            'submit_date': str,
            'submitted_by': str
        }

        self.attribute_map = {
            'comment': 'comment',
            'number_of_stars': 'numberOfStars',
            'submit_date': 'submitDate',
            'submitted_by': 'submittedBy'
        }

        self._comment = comment
        self._number_of_stars = number_of_stars
        self._submit_date = submit_date
        self._submitted_by = submitted_by

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APISchoolReview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APISchoolReview of this APISchoolReview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comment(self):
        """Gets the comment of this APISchoolReview.

        Comment left by reviewer (html encoded)

        :return: The comment of this APISchoolReview.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this APISchoolReview.

        Comment left by reviewer (html encoded)

        :param comment: The comment of this APISchoolReview.
        :type comment: str
        """

        self._comment = comment

    @property
    def number_of_stars(self):
        """Gets the number_of_stars of this APISchoolReview.

        Number of stars - 1 (poor) to 5 (excellent)

        :return: The number_of_stars of this APISchoolReview.
        :rtype: int
        """
        return self._number_of_stars

    @number_of_stars.setter
    def number_of_stars(self, number_of_stars):
        """Sets the number_of_stars of this APISchoolReview.

        Number of stars - 1 (poor) to 5 (excellent)

        :param number_of_stars: The number_of_stars of this APISchoolReview.
        :type number_of_stars: int
        """

        self._number_of_stars = number_of_stars

    @property
    def submit_date(self):
        """Gets the submit_date of this APISchoolReview.

        The date the review was submitted (mm/dd/yyyy)

        :return: The submit_date of this APISchoolReview.
        :rtype: str
        """
        return self._submit_date

    @submit_date.setter
    def submit_date(self, submit_date):
        """Sets the submit_date of this APISchoolReview.

        The date the review was submitted (mm/dd/yyyy)

        :param submit_date: The submit_date of this APISchoolReview.
        :type submit_date: str
        """

        self._submit_date = submit_date

    @property
    def submitted_by(self):
        """Gets the submitted_by of this APISchoolReview.

        Reviewer type (parent, student, teacher, principal, citizen)

        :return: The submitted_by of this APISchoolReview.
        :rtype: str
        """
        return self._submitted_by

    @submitted_by.setter
    def submitted_by(self, submitted_by):
        """Sets the submitted_by of this APISchoolReview.

        Reviewer type (parent, student, teacher, principal, citizen)

        :param submitted_by: The submitted_by of this APISchoolReview.
        :type submitted_by: str
        """

        self._submitted_by = submitted_by
