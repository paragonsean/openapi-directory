/*
 * SchoolDigger API V2.0
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.<br />Version 2.0 incorporates the ATTOM School Boundary Level add-on and spending per pupil metrics
 *
 * The version of the OpenAPI document: v2.0
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * APIYearlyDemographics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:32:05.204966-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class APIYearlyDemographics {
  public static final String SERIALIZED_NAME_NUMBER_OF_STUDENTS = "numberOfStudents";
  @SerializedName(SERIALIZED_NAME_NUMBER_OF_STUDENTS)
  private Integer numberOfStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_AFRICAN_AMERICAN_STUDENTS = "numberofAfricanAmericanStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_AFRICAN_AMERICAN_STUDENTS)
  private Integer numberofAfricanAmericanStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_ASIAN_STUDENTS = "numberofAsianStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_ASIAN_STUDENTS)
  private Integer numberofAsianStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_HISPANIC_STUDENTS = "numberofHispanicStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_HISPANIC_STUDENTS)
  private Integer numberofHispanicStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_INDIAN_STUDENTS = "numberofIndianStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_INDIAN_STUDENTS)
  private Integer numberofIndianStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_PACIFIC_ISLANDER_STUDENTS = "numberofPacificIslanderStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_PACIFIC_ISLANDER_STUDENTS)
  private Integer numberofPacificIslanderStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_TWO_OR_MORE_RACE_STUDENTS = "numberofTwoOrMoreRaceStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_TWO_OR_MORE_RACE_STUDENTS)
  private Integer numberofTwoOrMoreRaceStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_UNSPECIFIED_RACE_STUDENTS = "numberofUnspecifiedRaceStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_UNSPECIFIED_RACE_STUDENTS)
  private Integer numberofUnspecifiedRaceStudents;

  public static final String SERIALIZED_NAME_NUMBEROF_WHITE_STUDENTS = "numberofWhiteStudents";
  @SerializedName(SERIALIZED_NAME_NUMBEROF_WHITE_STUDENTS)
  private Integer numberofWhiteStudents;

  public static final String SERIALIZED_NAME_PERCENT_FREE_DISC_LUNCH = "percentFreeDiscLunch";
  @SerializedName(SERIALIZED_NAME_PERCENT_FREE_DISC_LUNCH)
  private Double percentFreeDiscLunch;

  public static final String SERIALIZED_NAME_PERCENTOF_AFRICAN_AMERICAN_STUDENTS = "percentofAfricanAmericanStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_AFRICAN_AMERICAN_STUDENTS)
  private Double percentofAfricanAmericanStudents;

  public static final String SERIALIZED_NAME_PERCENTOF_ASIAN_STUDENTS = "percentofAsianStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_ASIAN_STUDENTS)
  private Double percentofAsianStudents;

  public static final String SERIALIZED_NAME_PERCENTOF_HISPANIC_STUDENTS = "percentofHispanicStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_HISPANIC_STUDENTS)
  private Double percentofHispanicStudents;

  public static final String SERIALIZED_NAME_PERCENTOF_INDIAN_STUDENTS = "percentofIndianStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_INDIAN_STUDENTS)
  private Double percentofIndianStudents;

  public static final String SERIALIZED_NAME_PERCENTOF_PACIFIC_ISLANDER_STUDENTS = "percentofPacificIslanderStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_PACIFIC_ISLANDER_STUDENTS)
  private Double percentofPacificIslanderStudents;

  public static final String SERIALIZED_NAME_PERCENTOF_TWO_OR_MORE_RACE_STUDENTS = "percentofTwoOrMoreRaceStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_TWO_OR_MORE_RACE_STUDENTS)
  private Double percentofTwoOrMoreRaceStudents;

  public static final String SERIALIZED_NAME_PERCENTOF_UNSPECIFIED_RACE_STUDENTS = "percentofUnspecifiedRaceStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_UNSPECIFIED_RACE_STUDENTS)
  private Double percentofUnspecifiedRaceStudents;

  public static final String SERIALIZED_NAME_PERCENTOF_WHITE_STUDENTS = "percentofWhiteStudents";
  @SerializedName(SERIALIZED_NAME_PERCENTOF_WHITE_STUDENTS)
  private Double percentofWhiteStudents;

  public static final String SERIALIZED_NAME_PUPIL_TEACHER_RATIO = "pupilTeacherRatio";
  @SerializedName(SERIALIZED_NAME_PUPIL_TEACHER_RATIO)
  private Double pupilTeacherRatio;

  public static final String SERIALIZED_NAME_TEACHERS_FULLTIME = "teachersFulltime";
  @SerializedName(SERIALIZED_NAME_TEACHERS_FULLTIME)
  private Double teachersFulltime;

  public static final String SERIALIZED_NAME_YEAR = "year";
  @SerializedName(SERIALIZED_NAME_YEAR)
  private Integer year;

  public APIYearlyDemographics() {
  }

  public APIYearlyDemographics numberOfStudents(Integer numberOfStudents) {
    this.numberOfStudents = numberOfStudents;
    return this;
  }

  /**
   * Count of students attending the school
   * @return numberOfStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberOfStudents() {
    return numberOfStudents;
  }

  public void setNumberOfStudents(Integer numberOfStudents) {
    this.numberOfStudents = numberOfStudents;
  }


  public APIYearlyDemographics numberofAfricanAmericanStudents(Integer numberofAfricanAmericanStudents) {
    this.numberofAfricanAmericanStudents = numberofAfricanAmericanStudents;
    return this;
  }

  /**
   * NCES definition: A person having origins in any of the black racial groups of Africa.  (https://nces.ed.gov/statprog/2002/std1_5.asp)
   * @return numberofAfricanAmericanStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofAfricanAmericanStudents() {
    return numberofAfricanAmericanStudents;
  }

  public void setNumberofAfricanAmericanStudents(Integer numberofAfricanAmericanStudents) {
    this.numberofAfricanAmericanStudents = numberofAfricanAmericanStudents;
  }


  public APIYearlyDemographics numberofAsianStudents(Integer numberofAsianStudents) {
    this.numberofAsianStudents = numberofAsianStudents;
    return this;
  }

  /**
   * NCES definition: A person having origins in any of the original peoples of the Far East, Southeast Asia, or the Indian subcontinent, including, for example, Cambodia, China, India, Japan, Korea, Malaysia, Pakistan, the Philippine Islands, Thailand, and Vietnam.  (https://nces.ed.gov/statprog/2002/std1_5.asp)
   * @return numberofAsianStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofAsianStudents() {
    return numberofAsianStudents;
  }

  public void setNumberofAsianStudents(Integer numberofAsianStudents) {
    this.numberofAsianStudents = numberofAsianStudents;
  }


  public APIYearlyDemographics numberofHispanicStudents(Integer numberofHispanicStudents) {
    this.numberofHispanicStudents = numberofHispanicStudents;
    return this;
  }

  /**
   * NCES definition: A person of Cuban, Mexican, Puerto Rican, South or Central American, or other Spanish culture or origin, regardless of race. (https://nces.ed.gov/statprog/2002/std1_5.asp)
   * @return numberofHispanicStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofHispanicStudents() {
    return numberofHispanicStudents;
  }

  public void setNumberofHispanicStudents(Integer numberofHispanicStudents) {
    this.numberofHispanicStudents = numberofHispanicStudents;
  }


  public APIYearlyDemographics numberofIndianStudents(Integer numberofIndianStudents) {
    this.numberofIndianStudents = numberofIndianStudents;
    return this;
  }

  /**
   * NCES definition: A person having origins in any of the original peoples of the Far East, Southeast Asia, or the Indian subcontinent, including, for example, Cambodia, China, India, Japan, Korea, Malaysia, Pakistan, the Philippine Islands, Thailand, and Vietnam. (https://nces.ed.gov/statprog/2002/std1_5.asp)
   * @return numberofIndianStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofIndianStudents() {
    return numberofIndianStudents;
  }

  public void setNumberofIndianStudents(Integer numberofIndianStudents) {
    this.numberofIndianStudents = numberofIndianStudents;
  }


  public APIYearlyDemographics numberofPacificIslanderStudents(Integer numberofPacificIslanderStudents) {
    this.numberofPacificIslanderStudents = numberofPacificIslanderStudents;
    return this;
  }

  /**
   * NCES definition: A person having origins in any of the original peoples of Hawaii, Guam, Samoa, or other Pacific Islands. (https://nces.ed.gov/statprog/2002/std1_5.asp)
   * @return numberofPacificIslanderStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofPacificIslanderStudents() {
    return numberofPacificIslanderStudents;
  }

  public void setNumberofPacificIslanderStudents(Integer numberofPacificIslanderStudents) {
    this.numberofPacificIslanderStudents = numberofPacificIslanderStudents;
  }


  public APIYearlyDemographics numberofTwoOrMoreRaceStudents(Integer numberofTwoOrMoreRaceStudents) {
    this.numberofTwoOrMoreRaceStudents = numberofTwoOrMoreRaceStudents;
    return this;
  }

  /**
   * NCES definition: Includes any combination of two or more races and not Hispanic/Latino ethnicity. (https://nces.ed.gov/statprog/2002/std1_5.asp)
   * @return numberofTwoOrMoreRaceStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofTwoOrMoreRaceStudents() {
    return numberofTwoOrMoreRaceStudents;
  }

  public void setNumberofTwoOrMoreRaceStudents(Integer numberofTwoOrMoreRaceStudents) {
    this.numberofTwoOrMoreRaceStudents = numberofTwoOrMoreRaceStudents;
  }


  public APIYearlyDemographics numberofUnspecifiedRaceStudents(Integer numberofUnspecifiedRaceStudents) {
    this.numberofUnspecifiedRaceStudents = numberofUnspecifiedRaceStudents;
    return this;
  }

  /**
   * Get numberofUnspecifiedRaceStudents
   * @return numberofUnspecifiedRaceStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofUnspecifiedRaceStudents() {
    return numberofUnspecifiedRaceStudents;
  }

  public void setNumberofUnspecifiedRaceStudents(Integer numberofUnspecifiedRaceStudents) {
    this.numberofUnspecifiedRaceStudents = numberofUnspecifiedRaceStudents;
  }


  public APIYearlyDemographics numberofWhiteStudents(Integer numberofWhiteStudents) {
    this.numberofWhiteStudents = numberofWhiteStudents;
    return this;
  }

  /**
   * NCES definition: A person having origins in any of the original peoples of Europe, the Middle East, or North Africa. (https://nces.ed.gov/statprog/2002/std1_5.asp)
   * @return numberofWhiteStudents
   */
  @javax.annotation.Nullable
  public Integer getNumberofWhiteStudents() {
    return numberofWhiteStudents;
  }

  public void setNumberofWhiteStudents(Integer numberofWhiteStudents) {
    this.numberofWhiteStudents = numberofWhiteStudents;
  }


  public APIYearlyDemographics percentFreeDiscLunch(Double percentFreeDiscLunch) {
    this.percentFreeDiscLunch = percentFreeDiscLunch;
    return this;
  }

  /**
   * Percent of students receiving a free or discounted lunch in the National School Lunch Program
   * @return percentFreeDiscLunch
   */
  @javax.annotation.Nullable
  public Double getPercentFreeDiscLunch() {
    return percentFreeDiscLunch;
  }

  public void setPercentFreeDiscLunch(Double percentFreeDiscLunch) {
    this.percentFreeDiscLunch = percentFreeDiscLunch;
  }


  public APIYearlyDemographics percentofAfricanAmericanStudents(Double percentofAfricanAmericanStudents) {
    this.percentofAfricanAmericanStudents = percentofAfricanAmericanStudents;
    return this;
  }

  /**
   * Get percentofAfricanAmericanStudents
   * @return percentofAfricanAmericanStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofAfricanAmericanStudents() {
    return percentofAfricanAmericanStudents;
  }

  public void setPercentofAfricanAmericanStudents(Double percentofAfricanAmericanStudents) {
    this.percentofAfricanAmericanStudents = percentofAfricanAmericanStudents;
  }


  public APIYearlyDemographics percentofAsianStudents(Double percentofAsianStudents) {
    this.percentofAsianStudents = percentofAsianStudents;
    return this;
  }

  /**
   * Get percentofAsianStudents
   * @return percentofAsianStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofAsianStudents() {
    return percentofAsianStudents;
  }

  public void setPercentofAsianStudents(Double percentofAsianStudents) {
    this.percentofAsianStudents = percentofAsianStudents;
  }


  public APIYearlyDemographics percentofHispanicStudents(Double percentofHispanicStudents) {
    this.percentofHispanicStudents = percentofHispanicStudents;
    return this;
  }

  /**
   * Get percentofHispanicStudents
   * @return percentofHispanicStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofHispanicStudents() {
    return percentofHispanicStudents;
  }

  public void setPercentofHispanicStudents(Double percentofHispanicStudents) {
    this.percentofHispanicStudents = percentofHispanicStudents;
  }


  public APIYearlyDemographics percentofIndianStudents(Double percentofIndianStudents) {
    this.percentofIndianStudents = percentofIndianStudents;
    return this;
  }

  /**
   * Get percentofIndianStudents
   * @return percentofIndianStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofIndianStudents() {
    return percentofIndianStudents;
  }

  public void setPercentofIndianStudents(Double percentofIndianStudents) {
    this.percentofIndianStudents = percentofIndianStudents;
  }


  public APIYearlyDemographics percentofPacificIslanderStudents(Double percentofPacificIslanderStudents) {
    this.percentofPacificIslanderStudents = percentofPacificIslanderStudents;
    return this;
  }

  /**
   * Get percentofPacificIslanderStudents
   * @return percentofPacificIslanderStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofPacificIslanderStudents() {
    return percentofPacificIslanderStudents;
  }

  public void setPercentofPacificIslanderStudents(Double percentofPacificIslanderStudents) {
    this.percentofPacificIslanderStudents = percentofPacificIslanderStudents;
  }


  public APIYearlyDemographics percentofTwoOrMoreRaceStudents(Double percentofTwoOrMoreRaceStudents) {
    this.percentofTwoOrMoreRaceStudents = percentofTwoOrMoreRaceStudents;
    return this;
  }

  /**
   * Get percentofTwoOrMoreRaceStudents
   * @return percentofTwoOrMoreRaceStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofTwoOrMoreRaceStudents() {
    return percentofTwoOrMoreRaceStudents;
  }

  public void setPercentofTwoOrMoreRaceStudents(Double percentofTwoOrMoreRaceStudents) {
    this.percentofTwoOrMoreRaceStudents = percentofTwoOrMoreRaceStudents;
  }


  public APIYearlyDemographics percentofUnspecifiedRaceStudents(Double percentofUnspecifiedRaceStudents) {
    this.percentofUnspecifiedRaceStudents = percentofUnspecifiedRaceStudents;
    return this;
  }

  /**
   * Get percentofUnspecifiedRaceStudents
   * @return percentofUnspecifiedRaceStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofUnspecifiedRaceStudents() {
    return percentofUnspecifiedRaceStudents;
  }

  public void setPercentofUnspecifiedRaceStudents(Double percentofUnspecifiedRaceStudents) {
    this.percentofUnspecifiedRaceStudents = percentofUnspecifiedRaceStudents;
  }


  public APIYearlyDemographics percentofWhiteStudents(Double percentofWhiteStudents) {
    this.percentofWhiteStudents = percentofWhiteStudents;
    return this;
  }

  /**
   * Get percentofWhiteStudents
   * @return percentofWhiteStudents
   */
  @javax.annotation.Nullable
  public Double getPercentofWhiteStudents() {
    return percentofWhiteStudents;
  }

  public void setPercentofWhiteStudents(Double percentofWhiteStudents) {
    this.percentofWhiteStudents = percentofWhiteStudents;
  }


  public APIYearlyDemographics pupilTeacherRatio(Double pupilTeacherRatio) {
    this.pupilTeacherRatio = pupilTeacherRatio;
    return this;
  }

  /**
   * Number of students / number of full-time equivalent teachers
   * @return pupilTeacherRatio
   */
  @javax.annotation.Nullable
  public Double getPupilTeacherRatio() {
    return pupilTeacherRatio;
  }

  public void setPupilTeacherRatio(Double pupilTeacherRatio) {
    this.pupilTeacherRatio = pupilTeacherRatio;
  }


  public APIYearlyDemographics teachersFulltime(Double teachersFulltime) {
    this.teachersFulltime = teachersFulltime;
    return this;
  }

  /**
   * Number of full-time equivalent teachers employed at the school
   * @return teachersFulltime
   */
  @javax.annotation.Nullable
  public Double getTeachersFulltime() {
    return teachersFulltime;
  }

  public void setTeachersFulltime(Double teachersFulltime) {
    this.teachersFulltime = teachersFulltime;
  }


  public APIYearlyDemographics year(Integer year) {
    this.year = year;
    return this;
  }

  /**
   * School year (2018 &#x3D; 2017-18)
   * @return year
   */
  @javax.annotation.Nullable
  public Integer getYear() {
    return year;
  }

  public void setYear(Integer year) {
    this.year = year;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIYearlyDemographics apIYearlyDemographics = (APIYearlyDemographics) o;
    return Objects.equals(this.numberOfStudents, apIYearlyDemographics.numberOfStudents) &&
        Objects.equals(this.numberofAfricanAmericanStudents, apIYearlyDemographics.numberofAfricanAmericanStudents) &&
        Objects.equals(this.numberofAsianStudents, apIYearlyDemographics.numberofAsianStudents) &&
        Objects.equals(this.numberofHispanicStudents, apIYearlyDemographics.numberofHispanicStudents) &&
        Objects.equals(this.numberofIndianStudents, apIYearlyDemographics.numberofIndianStudents) &&
        Objects.equals(this.numberofPacificIslanderStudents, apIYearlyDemographics.numberofPacificIslanderStudents) &&
        Objects.equals(this.numberofTwoOrMoreRaceStudents, apIYearlyDemographics.numberofTwoOrMoreRaceStudents) &&
        Objects.equals(this.numberofUnspecifiedRaceStudents, apIYearlyDemographics.numberofUnspecifiedRaceStudents) &&
        Objects.equals(this.numberofWhiteStudents, apIYearlyDemographics.numberofWhiteStudents) &&
        Objects.equals(this.percentFreeDiscLunch, apIYearlyDemographics.percentFreeDiscLunch) &&
        Objects.equals(this.percentofAfricanAmericanStudents, apIYearlyDemographics.percentofAfricanAmericanStudents) &&
        Objects.equals(this.percentofAsianStudents, apIYearlyDemographics.percentofAsianStudents) &&
        Objects.equals(this.percentofHispanicStudents, apIYearlyDemographics.percentofHispanicStudents) &&
        Objects.equals(this.percentofIndianStudents, apIYearlyDemographics.percentofIndianStudents) &&
        Objects.equals(this.percentofPacificIslanderStudents, apIYearlyDemographics.percentofPacificIslanderStudents) &&
        Objects.equals(this.percentofTwoOrMoreRaceStudents, apIYearlyDemographics.percentofTwoOrMoreRaceStudents) &&
        Objects.equals(this.percentofUnspecifiedRaceStudents, apIYearlyDemographics.percentofUnspecifiedRaceStudents) &&
        Objects.equals(this.percentofWhiteStudents, apIYearlyDemographics.percentofWhiteStudents) &&
        Objects.equals(this.pupilTeacherRatio, apIYearlyDemographics.pupilTeacherRatio) &&
        Objects.equals(this.teachersFulltime, apIYearlyDemographics.teachersFulltime) &&
        Objects.equals(this.year, apIYearlyDemographics.year);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numberOfStudents, numberofAfricanAmericanStudents, numberofAsianStudents, numberofHispanicStudents, numberofIndianStudents, numberofPacificIslanderStudents, numberofTwoOrMoreRaceStudents, numberofUnspecifiedRaceStudents, numberofWhiteStudents, percentFreeDiscLunch, percentofAfricanAmericanStudents, percentofAsianStudents, percentofHispanicStudents, percentofIndianStudents, percentofPacificIslanderStudents, percentofTwoOrMoreRaceStudents, percentofUnspecifiedRaceStudents, percentofWhiteStudents, pupilTeacherRatio, teachersFulltime, year);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIYearlyDemographics {\n");
    sb.append("    numberOfStudents: ").append(toIndentedString(numberOfStudents)).append("\n");
    sb.append("    numberofAfricanAmericanStudents: ").append(toIndentedString(numberofAfricanAmericanStudents)).append("\n");
    sb.append("    numberofAsianStudents: ").append(toIndentedString(numberofAsianStudents)).append("\n");
    sb.append("    numberofHispanicStudents: ").append(toIndentedString(numberofHispanicStudents)).append("\n");
    sb.append("    numberofIndianStudents: ").append(toIndentedString(numberofIndianStudents)).append("\n");
    sb.append("    numberofPacificIslanderStudents: ").append(toIndentedString(numberofPacificIslanderStudents)).append("\n");
    sb.append("    numberofTwoOrMoreRaceStudents: ").append(toIndentedString(numberofTwoOrMoreRaceStudents)).append("\n");
    sb.append("    numberofUnspecifiedRaceStudents: ").append(toIndentedString(numberofUnspecifiedRaceStudents)).append("\n");
    sb.append("    numberofWhiteStudents: ").append(toIndentedString(numberofWhiteStudents)).append("\n");
    sb.append("    percentFreeDiscLunch: ").append(toIndentedString(percentFreeDiscLunch)).append("\n");
    sb.append("    percentofAfricanAmericanStudents: ").append(toIndentedString(percentofAfricanAmericanStudents)).append("\n");
    sb.append("    percentofAsianStudents: ").append(toIndentedString(percentofAsianStudents)).append("\n");
    sb.append("    percentofHispanicStudents: ").append(toIndentedString(percentofHispanicStudents)).append("\n");
    sb.append("    percentofIndianStudents: ").append(toIndentedString(percentofIndianStudents)).append("\n");
    sb.append("    percentofPacificIslanderStudents: ").append(toIndentedString(percentofPacificIslanderStudents)).append("\n");
    sb.append("    percentofTwoOrMoreRaceStudents: ").append(toIndentedString(percentofTwoOrMoreRaceStudents)).append("\n");
    sb.append("    percentofUnspecifiedRaceStudents: ").append(toIndentedString(percentofUnspecifiedRaceStudents)).append("\n");
    sb.append("    percentofWhiteStudents: ").append(toIndentedString(percentofWhiteStudents)).append("\n");
    sb.append("    pupilTeacherRatio: ").append(toIndentedString(pupilTeacherRatio)).append("\n");
    sb.append("    teachersFulltime: ").append(toIndentedString(teachersFulltime)).append("\n");
    sb.append("    year: ").append(toIndentedString(year)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("numberOfStudents");
    openapiFields.add("numberofAfricanAmericanStudents");
    openapiFields.add("numberofAsianStudents");
    openapiFields.add("numberofHispanicStudents");
    openapiFields.add("numberofIndianStudents");
    openapiFields.add("numberofPacificIslanderStudents");
    openapiFields.add("numberofTwoOrMoreRaceStudents");
    openapiFields.add("numberofUnspecifiedRaceStudents");
    openapiFields.add("numberofWhiteStudents");
    openapiFields.add("percentFreeDiscLunch");
    openapiFields.add("percentofAfricanAmericanStudents");
    openapiFields.add("percentofAsianStudents");
    openapiFields.add("percentofHispanicStudents");
    openapiFields.add("percentofIndianStudents");
    openapiFields.add("percentofPacificIslanderStudents");
    openapiFields.add("percentofTwoOrMoreRaceStudents");
    openapiFields.add("percentofUnspecifiedRaceStudents");
    openapiFields.add("percentofWhiteStudents");
    openapiFields.add("pupilTeacherRatio");
    openapiFields.add("teachersFulltime");
    openapiFields.add("year");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APIYearlyDemographics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APIYearlyDemographics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIYearlyDemographics is not found in the empty JSON string", APIYearlyDemographics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APIYearlyDemographics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIYearlyDemographics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIYearlyDemographics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIYearlyDemographics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIYearlyDemographics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIYearlyDemographics.class));

       return (TypeAdapter<T>) new TypeAdapter<APIYearlyDemographics>() {
           @Override
           public void write(JsonWriter out, APIYearlyDemographics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIYearlyDemographics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APIYearlyDemographics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APIYearlyDemographics
   * @throws IOException if the JSON string is invalid with respect to APIYearlyDemographics
   */
  public static APIYearlyDemographics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIYearlyDemographics.class);
  }

  /**
   * Convert an instance of APIYearlyDemographics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

