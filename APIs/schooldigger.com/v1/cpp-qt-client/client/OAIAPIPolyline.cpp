/**
 * SchoolDigger API V1
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.
 *
 * The version of the OpenAPI document: v1
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPIPolyline.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPIPolyline::OAIAPIPolyline(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPIPolyline::OAIAPIPolyline() {
    this->initializeModel();
}

OAIAPIPolyline::~OAIAPIPolyline() {}

void OAIAPIPolyline::initializeModel() {

    m_number_encoded_points_isSet = false;
    m_number_encoded_points_isValid = false;

    m_polyline_overlay_encoded_points_isSet = false;
    m_polyline_overlay_encoded_points_isValid = false;
}

void OAIAPIPolyline::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPIPolyline::fromJsonObject(QJsonObject json) {

    m_number_encoded_points_isValid = ::OpenAPI::fromJsonValue(m_number_encoded_points, json[QString("numberEncodedPoints")]);
    m_number_encoded_points_isSet = !json[QString("numberEncodedPoints")].isNull() && m_number_encoded_points_isValid;

    m_polyline_overlay_encoded_points_isValid = ::OpenAPI::fromJsonValue(m_polyline_overlay_encoded_points, json[QString("polylineOverlayEncodedPoints")]);
    m_polyline_overlay_encoded_points_isSet = !json[QString("polylineOverlayEncodedPoints")].isNull() && m_polyline_overlay_encoded_points_isValid;
}

QString OAIAPIPolyline::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPIPolyline::asJsonObject() const {
    QJsonObject obj;
    if (m_number_encoded_points_isSet) {
        obj.insert(QString("numberEncodedPoints"), ::OpenAPI::toJsonValue(m_number_encoded_points));
    }
    if (m_polyline_overlay_encoded_points_isSet) {
        obj.insert(QString("polylineOverlayEncodedPoints"), ::OpenAPI::toJsonValue(m_polyline_overlay_encoded_points));
    }
    return obj;
}

qint32 OAIAPIPolyline::getNumberEncodedPoints() const {
    return m_number_encoded_points;
}
void OAIAPIPolyline::setNumberEncodedPoints(const qint32 &number_encoded_points) {
    m_number_encoded_points = number_encoded_points;
    m_number_encoded_points_isSet = true;
}

bool OAIAPIPolyline::is_number_encoded_points_Set() const{
    return m_number_encoded_points_isSet;
}

bool OAIAPIPolyline::is_number_encoded_points_Valid() const{
    return m_number_encoded_points_isValid;
}

QString OAIAPIPolyline::getPolylineOverlayEncodedPoints() const {
    return m_polyline_overlay_encoded_points;
}
void OAIAPIPolyline::setPolylineOverlayEncodedPoints(const QString &polyline_overlay_encoded_points) {
    m_polyline_overlay_encoded_points = polyline_overlay_encoded_points;
    m_polyline_overlay_encoded_points_isSet = true;
}

bool OAIAPIPolyline::is_polyline_overlay_encoded_points_Set() const{
    return m_polyline_overlay_encoded_points_isSet;
}

bool OAIAPIPolyline::is_polyline_overlay_encoded_points_Valid() const{
    return m_polyline_overlay_encoded_points_isValid;
}

bool OAIAPIPolyline::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_encoded_points_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_polyline_overlay_encoded_points_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPIPolyline::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
