/**
 * SchoolDigger API V1
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.
 *
 * The version of the OpenAPI document: v1
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPITestScore.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPITestScore::OAIAPITestScore(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPITestScore::OAIAPITestScore() {
    this->initializeModel();
}

OAIAPITestScore::~OAIAPITestScore() {}

void OAIAPITestScore::initializeModel() {

    m_mean_scaled_score_isSet = false;
    m_mean_scaled_score_isValid = false;

    m_num_tier1_isSet = false;
    m_num_tier1_isValid = false;

    m_num_tier2_isSet = false;
    m_num_tier2_isValid = false;

    m_num_tier3_isSet = false;
    m_num_tier3_isValid = false;

    m_num_tier4_isSet = false;
    m_num_tier4_isValid = false;

    m_num_tier5_isSet = false;
    m_num_tier5_isValid = false;

    m_number_met_standard_isSet = false;
    m_number_met_standard_isValid = false;

    m_percent_met_standard_isSet = false;
    m_percent_met_standard_isValid = false;

    m_percent_tier1_isSet = false;
    m_percent_tier1_isValid = false;

    m_percent_tier2_isSet = false;
    m_percent_tier2_isValid = false;

    m_percent_tier3_isSet = false;
    m_percent_tier3_isValid = false;

    m_percent_tier4_isSet = false;
    m_percent_tier4_isValid = false;

    m_percent_tier5_isSet = false;
    m_percent_tier5_isValid = false;

    m_students_eligible_isSet = false;
    m_students_eligible_isValid = false;

    m_students_tested_isSet = false;
    m_students_tested_isValid = false;
}

void OAIAPITestScore::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPITestScore::fromJsonObject(QJsonObject json) {

    m_mean_scaled_score_isValid = ::OpenAPI::fromJsonValue(m_mean_scaled_score, json[QString("meanScaledScore")]);
    m_mean_scaled_score_isSet = !json[QString("meanScaledScore")].isNull() && m_mean_scaled_score_isValid;

    m_num_tier1_isValid = ::OpenAPI::fromJsonValue(m_num_tier1, json[QString("numTier1")]);
    m_num_tier1_isSet = !json[QString("numTier1")].isNull() && m_num_tier1_isValid;

    m_num_tier2_isValid = ::OpenAPI::fromJsonValue(m_num_tier2, json[QString("numTier2")]);
    m_num_tier2_isSet = !json[QString("numTier2")].isNull() && m_num_tier2_isValid;

    m_num_tier3_isValid = ::OpenAPI::fromJsonValue(m_num_tier3, json[QString("numTier3")]);
    m_num_tier3_isSet = !json[QString("numTier3")].isNull() && m_num_tier3_isValid;

    m_num_tier4_isValid = ::OpenAPI::fromJsonValue(m_num_tier4, json[QString("numTier4")]);
    m_num_tier4_isSet = !json[QString("numTier4")].isNull() && m_num_tier4_isValid;

    m_num_tier5_isValid = ::OpenAPI::fromJsonValue(m_num_tier5, json[QString("numTier5")]);
    m_num_tier5_isSet = !json[QString("numTier5")].isNull() && m_num_tier5_isValid;

    m_number_met_standard_isValid = ::OpenAPI::fromJsonValue(m_number_met_standard, json[QString("numberMetStandard")]);
    m_number_met_standard_isSet = !json[QString("numberMetStandard")].isNull() && m_number_met_standard_isValid;

    m_percent_met_standard_isValid = ::OpenAPI::fromJsonValue(m_percent_met_standard, json[QString("percentMetStandard")]);
    m_percent_met_standard_isSet = !json[QString("percentMetStandard")].isNull() && m_percent_met_standard_isValid;

    m_percent_tier1_isValid = ::OpenAPI::fromJsonValue(m_percent_tier1, json[QString("percentTier1")]);
    m_percent_tier1_isSet = !json[QString("percentTier1")].isNull() && m_percent_tier1_isValid;

    m_percent_tier2_isValid = ::OpenAPI::fromJsonValue(m_percent_tier2, json[QString("percentTier2")]);
    m_percent_tier2_isSet = !json[QString("percentTier2")].isNull() && m_percent_tier2_isValid;

    m_percent_tier3_isValid = ::OpenAPI::fromJsonValue(m_percent_tier3, json[QString("percentTier3")]);
    m_percent_tier3_isSet = !json[QString("percentTier3")].isNull() && m_percent_tier3_isValid;

    m_percent_tier4_isValid = ::OpenAPI::fromJsonValue(m_percent_tier4, json[QString("percentTier4")]);
    m_percent_tier4_isSet = !json[QString("percentTier4")].isNull() && m_percent_tier4_isValid;

    m_percent_tier5_isValid = ::OpenAPI::fromJsonValue(m_percent_tier5, json[QString("percentTier5")]);
    m_percent_tier5_isSet = !json[QString("percentTier5")].isNull() && m_percent_tier5_isValid;

    m_students_eligible_isValid = ::OpenAPI::fromJsonValue(m_students_eligible, json[QString("studentsEligible")]);
    m_students_eligible_isSet = !json[QString("studentsEligible")].isNull() && m_students_eligible_isValid;

    m_students_tested_isValid = ::OpenAPI::fromJsonValue(m_students_tested, json[QString("studentsTested")]);
    m_students_tested_isSet = !json[QString("studentsTested")].isNull() && m_students_tested_isValid;
}

QString OAIAPITestScore::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPITestScore::asJsonObject() const {
    QJsonObject obj;
    if (m_mean_scaled_score_isSet) {
        obj.insert(QString("meanScaledScore"), ::OpenAPI::toJsonValue(m_mean_scaled_score));
    }
    if (m_num_tier1_isSet) {
        obj.insert(QString("numTier1"), ::OpenAPI::toJsonValue(m_num_tier1));
    }
    if (m_num_tier2_isSet) {
        obj.insert(QString("numTier2"), ::OpenAPI::toJsonValue(m_num_tier2));
    }
    if (m_num_tier3_isSet) {
        obj.insert(QString("numTier3"), ::OpenAPI::toJsonValue(m_num_tier3));
    }
    if (m_num_tier4_isSet) {
        obj.insert(QString("numTier4"), ::OpenAPI::toJsonValue(m_num_tier4));
    }
    if (m_num_tier5_isSet) {
        obj.insert(QString("numTier5"), ::OpenAPI::toJsonValue(m_num_tier5));
    }
    if (m_number_met_standard_isSet) {
        obj.insert(QString("numberMetStandard"), ::OpenAPI::toJsonValue(m_number_met_standard));
    }
    if (m_percent_met_standard_isSet) {
        obj.insert(QString("percentMetStandard"), ::OpenAPI::toJsonValue(m_percent_met_standard));
    }
    if (m_percent_tier1_isSet) {
        obj.insert(QString("percentTier1"), ::OpenAPI::toJsonValue(m_percent_tier1));
    }
    if (m_percent_tier2_isSet) {
        obj.insert(QString("percentTier2"), ::OpenAPI::toJsonValue(m_percent_tier2));
    }
    if (m_percent_tier3_isSet) {
        obj.insert(QString("percentTier3"), ::OpenAPI::toJsonValue(m_percent_tier3));
    }
    if (m_percent_tier4_isSet) {
        obj.insert(QString("percentTier4"), ::OpenAPI::toJsonValue(m_percent_tier4));
    }
    if (m_percent_tier5_isSet) {
        obj.insert(QString("percentTier5"), ::OpenAPI::toJsonValue(m_percent_tier5));
    }
    if (m_students_eligible_isSet) {
        obj.insert(QString("studentsEligible"), ::OpenAPI::toJsonValue(m_students_eligible));
    }
    if (m_students_tested_isSet) {
        obj.insert(QString("studentsTested"), ::OpenAPI::toJsonValue(m_students_tested));
    }
    return obj;
}

float OAIAPITestScore::getMeanScaledScore() const {
    return m_mean_scaled_score;
}
void OAIAPITestScore::setMeanScaledScore(const float &mean_scaled_score) {
    m_mean_scaled_score = mean_scaled_score;
    m_mean_scaled_score_isSet = true;
}

bool OAIAPITestScore::is_mean_scaled_score_Set() const{
    return m_mean_scaled_score_isSet;
}

bool OAIAPITestScore::is_mean_scaled_score_Valid() const{
    return m_mean_scaled_score_isValid;
}

qint32 OAIAPITestScore::getNumTier1() const {
    return m_num_tier1;
}
void OAIAPITestScore::setNumTier1(const qint32 &num_tier1) {
    m_num_tier1 = num_tier1;
    m_num_tier1_isSet = true;
}

bool OAIAPITestScore::is_num_tier1_Set() const{
    return m_num_tier1_isSet;
}

bool OAIAPITestScore::is_num_tier1_Valid() const{
    return m_num_tier1_isValid;
}

qint32 OAIAPITestScore::getNumTier2() const {
    return m_num_tier2;
}
void OAIAPITestScore::setNumTier2(const qint32 &num_tier2) {
    m_num_tier2 = num_tier2;
    m_num_tier2_isSet = true;
}

bool OAIAPITestScore::is_num_tier2_Set() const{
    return m_num_tier2_isSet;
}

bool OAIAPITestScore::is_num_tier2_Valid() const{
    return m_num_tier2_isValid;
}

qint32 OAIAPITestScore::getNumTier3() const {
    return m_num_tier3;
}
void OAIAPITestScore::setNumTier3(const qint32 &num_tier3) {
    m_num_tier3 = num_tier3;
    m_num_tier3_isSet = true;
}

bool OAIAPITestScore::is_num_tier3_Set() const{
    return m_num_tier3_isSet;
}

bool OAIAPITestScore::is_num_tier3_Valid() const{
    return m_num_tier3_isValid;
}

qint32 OAIAPITestScore::getNumTier4() const {
    return m_num_tier4;
}
void OAIAPITestScore::setNumTier4(const qint32 &num_tier4) {
    m_num_tier4 = num_tier4;
    m_num_tier4_isSet = true;
}

bool OAIAPITestScore::is_num_tier4_Set() const{
    return m_num_tier4_isSet;
}

bool OAIAPITestScore::is_num_tier4_Valid() const{
    return m_num_tier4_isValid;
}

qint32 OAIAPITestScore::getNumTier5() const {
    return m_num_tier5;
}
void OAIAPITestScore::setNumTier5(const qint32 &num_tier5) {
    m_num_tier5 = num_tier5;
    m_num_tier5_isSet = true;
}

bool OAIAPITestScore::is_num_tier5_Set() const{
    return m_num_tier5_isSet;
}

bool OAIAPITestScore::is_num_tier5_Valid() const{
    return m_num_tier5_isValid;
}

float OAIAPITestScore::getNumberMetStandard() const {
    return m_number_met_standard;
}
void OAIAPITestScore::setNumberMetStandard(const float &number_met_standard) {
    m_number_met_standard = number_met_standard;
    m_number_met_standard_isSet = true;
}

bool OAIAPITestScore::is_number_met_standard_Set() const{
    return m_number_met_standard_isSet;
}

bool OAIAPITestScore::is_number_met_standard_Valid() const{
    return m_number_met_standard_isValid;
}

float OAIAPITestScore::getPercentMetStandard() const {
    return m_percent_met_standard;
}
void OAIAPITestScore::setPercentMetStandard(const float &percent_met_standard) {
    m_percent_met_standard = percent_met_standard;
    m_percent_met_standard_isSet = true;
}

bool OAIAPITestScore::is_percent_met_standard_Set() const{
    return m_percent_met_standard_isSet;
}

bool OAIAPITestScore::is_percent_met_standard_Valid() const{
    return m_percent_met_standard_isValid;
}

float OAIAPITestScore::getPercentTier1() const {
    return m_percent_tier1;
}
void OAIAPITestScore::setPercentTier1(const float &percent_tier1) {
    m_percent_tier1 = percent_tier1;
    m_percent_tier1_isSet = true;
}

bool OAIAPITestScore::is_percent_tier1_Set() const{
    return m_percent_tier1_isSet;
}

bool OAIAPITestScore::is_percent_tier1_Valid() const{
    return m_percent_tier1_isValid;
}

float OAIAPITestScore::getPercentTier2() const {
    return m_percent_tier2;
}
void OAIAPITestScore::setPercentTier2(const float &percent_tier2) {
    m_percent_tier2 = percent_tier2;
    m_percent_tier2_isSet = true;
}

bool OAIAPITestScore::is_percent_tier2_Set() const{
    return m_percent_tier2_isSet;
}

bool OAIAPITestScore::is_percent_tier2_Valid() const{
    return m_percent_tier2_isValid;
}

float OAIAPITestScore::getPercentTier3() const {
    return m_percent_tier3;
}
void OAIAPITestScore::setPercentTier3(const float &percent_tier3) {
    m_percent_tier3 = percent_tier3;
    m_percent_tier3_isSet = true;
}

bool OAIAPITestScore::is_percent_tier3_Set() const{
    return m_percent_tier3_isSet;
}

bool OAIAPITestScore::is_percent_tier3_Valid() const{
    return m_percent_tier3_isValid;
}

float OAIAPITestScore::getPercentTier4() const {
    return m_percent_tier4;
}
void OAIAPITestScore::setPercentTier4(const float &percent_tier4) {
    m_percent_tier4 = percent_tier4;
    m_percent_tier4_isSet = true;
}

bool OAIAPITestScore::is_percent_tier4_Set() const{
    return m_percent_tier4_isSet;
}

bool OAIAPITestScore::is_percent_tier4_Valid() const{
    return m_percent_tier4_isValid;
}

float OAIAPITestScore::getPercentTier5() const {
    return m_percent_tier5;
}
void OAIAPITestScore::setPercentTier5(const float &percent_tier5) {
    m_percent_tier5 = percent_tier5;
    m_percent_tier5_isSet = true;
}

bool OAIAPITestScore::is_percent_tier5_Set() const{
    return m_percent_tier5_isSet;
}

bool OAIAPITestScore::is_percent_tier5_Valid() const{
    return m_percent_tier5_isValid;
}

qint32 OAIAPITestScore::getStudentsEligible() const {
    return m_students_eligible;
}
void OAIAPITestScore::setStudentsEligible(const qint32 &students_eligible) {
    m_students_eligible = students_eligible;
    m_students_eligible_isSet = true;
}

bool OAIAPITestScore::is_students_eligible_Set() const{
    return m_students_eligible_isSet;
}

bool OAIAPITestScore::is_students_eligible_Valid() const{
    return m_students_eligible_isValid;
}

qint32 OAIAPITestScore::getStudentsTested() const {
    return m_students_tested;
}
void OAIAPITestScore::setStudentsTested(const qint32 &students_tested) {
    m_students_tested = students_tested;
    m_students_tested_isSet = true;
}

bool OAIAPITestScore::is_students_tested_Set() const{
    return m_students_tested_isSet;
}

bool OAIAPITestScore::is_students_tested_Valid() const{
    return m_students_tested_isValid;
}

bool OAIAPITestScore::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mean_scaled_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_tier1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_tier2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_tier3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_tier4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_num_tier5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_met_standard_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_met_standard_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_tier1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_tier2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_tier3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_tier4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_tier5_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_students_eligible_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_students_tested_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPITestScore::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
