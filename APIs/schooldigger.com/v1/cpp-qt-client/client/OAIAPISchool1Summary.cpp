/**
 * SchoolDigger API V1
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.
 *
 * The version of the OpenAPI document: v1
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPISchool1Summary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPISchool1Summary::OAIAPISchool1Summary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPISchool1Summary::OAIAPISchool1Summary() {
    this->initializeModel();
}

OAIAPISchool1Summary::~OAIAPISchool1Summary() {}

void OAIAPISchool1Summary::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_county_isSet = false;
    m_county_isValid = false;

    m_distance_isSet = false;
    m_distance_isValid = false;

    m_district_isSet = false;
    m_district_isValid = false;

    m_has_boundary_isSet = false;
    m_has_boundary_isValid = false;

    m_high_grade_isSet = false;
    m_high_grade_isValid = false;

    m_is_charter_school_isSet = false;
    m_is_charter_school_isValid = false;

    m_is_magnet_school_isSet = false;
    m_is_magnet_school_isValid = false;

    m_is_private_isSet = false;
    m_is_private_isValid = false;

    m_is_title_i_school_isSet = false;
    m_is_title_i_school_isValid = false;

    m_is_title_i_schoolwide_school_isSet = false;
    m_is_title_i_schoolwide_school_isValid = false;

    m_is_virtual_school_isSet = false;
    m_is_virtual_school_isValid = false;

    m_location_is_within_boundary_isSet = false;
    m_location_is_within_boundary_isValid = false;

    m_low_grade_isSet = false;
    m_low_grade_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_private_coed_isSet = false;
    m_private_coed_isValid = false;

    m_private_days_isSet = false;
    m_private_days_isValid = false;

    m_private_has_library_isSet = false;
    m_private_has_library_isValid = false;

    m_private_hours_isSet = false;
    m_private_hours_isValid = false;

    m_private_orientation_isSet = false;
    m_private_orientation_isValid = false;

    m_rank_history_isSet = false;
    m_rank_history_isValid = false;

    m_rank_movement_isSet = false;
    m_rank_movement_isValid = false;

    m_school_level_isSet = false;
    m_school_level_isValid = false;

    m_school_name_isSet = false;
    m_school_name_isValid = false;

    m_school_yearly_details_isSet = false;
    m_school_yearly_details_isValid = false;

    m_schoolid_isSet = false;
    m_schoolid_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_url_compare_isSet = false;
    m_url_compare_isValid = false;
}

void OAIAPISchool1Summary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPISchool1Summary::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_county_isValid = ::OpenAPI::fromJsonValue(m_county, json[QString("county")]);
    m_county_isSet = !json[QString("county")].isNull() && m_county_isValid;

    m_distance_isValid = ::OpenAPI::fromJsonValue(m_distance, json[QString("distance")]);
    m_distance_isSet = !json[QString("distance")].isNull() && m_distance_isValid;

    m_district_isValid = ::OpenAPI::fromJsonValue(m_district, json[QString("district")]);
    m_district_isSet = !json[QString("district")].isNull() && m_district_isValid;

    m_has_boundary_isValid = ::OpenAPI::fromJsonValue(m_has_boundary, json[QString("hasBoundary")]);
    m_has_boundary_isSet = !json[QString("hasBoundary")].isNull() && m_has_boundary_isValid;

    m_high_grade_isValid = ::OpenAPI::fromJsonValue(m_high_grade, json[QString("highGrade")]);
    m_high_grade_isSet = !json[QString("highGrade")].isNull() && m_high_grade_isValid;

    m_is_charter_school_isValid = ::OpenAPI::fromJsonValue(m_is_charter_school, json[QString("isCharterSchool")]);
    m_is_charter_school_isSet = !json[QString("isCharterSchool")].isNull() && m_is_charter_school_isValid;

    m_is_magnet_school_isValid = ::OpenAPI::fromJsonValue(m_is_magnet_school, json[QString("isMagnetSchool")]);
    m_is_magnet_school_isSet = !json[QString("isMagnetSchool")].isNull() && m_is_magnet_school_isValid;

    m_is_private_isValid = ::OpenAPI::fromJsonValue(m_is_private, json[QString("isPrivate")]);
    m_is_private_isSet = !json[QString("isPrivate")].isNull() && m_is_private_isValid;

    m_is_title_i_school_isValid = ::OpenAPI::fromJsonValue(m_is_title_i_school, json[QString("isTitleISchool")]);
    m_is_title_i_school_isSet = !json[QString("isTitleISchool")].isNull() && m_is_title_i_school_isValid;

    m_is_title_i_schoolwide_school_isValid = ::OpenAPI::fromJsonValue(m_is_title_i_schoolwide_school, json[QString("isTitleISchoolwideSchool")]);
    m_is_title_i_schoolwide_school_isSet = !json[QString("isTitleISchoolwideSchool")].isNull() && m_is_title_i_schoolwide_school_isValid;

    m_is_virtual_school_isValid = ::OpenAPI::fromJsonValue(m_is_virtual_school, json[QString("isVirtualSchool")]);
    m_is_virtual_school_isSet = !json[QString("isVirtualSchool")].isNull() && m_is_virtual_school_isValid;

    m_location_is_within_boundary_isValid = ::OpenAPI::fromJsonValue(m_location_is_within_boundary, json[QString("locationIsWithinBoundary")]);
    m_location_is_within_boundary_isSet = !json[QString("locationIsWithinBoundary")].isNull() && m_location_is_within_boundary_isValid;

    m_low_grade_isValid = ::OpenAPI::fromJsonValue(m_low_grade, json[QString("lowGrade")]);
    m_low_grade_isSet = !json[QString("lowGrade")].isNull() && m_low_grade_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_private_coed_isValid = ::OpenAPI::fromJsonValue(m_private_coed, json[QString("privateCoed")]);
    m_private_coed_isSet = !json[QString("privateCoed")].isNull() && m_private_coed_isValid;

    m_private_days_isValid = ::OpenAPI::fromJsonValue(m_private_days, json[QString("privateDays")]);
    m_private_days_isSet = !json[QString("privateDays")].isNull() && m_private_days_isValid;

    m_private_has_library_isValid = ::OpenAPI::fromJsonValue(m_private_has_library, json[QString("privateHasLibrary")]);
    m_private_has_library_isSet = !json[QString("privateHasLibrary")].isNull() && m_private_has_library_isValid;

    m_private_hours_isValid = ::OpenAPI::fromJsonValue(m_private_hours, json[QString("privateHours")]);
    m_private_hours_isSet = !json[QString("privateHours")].isNull() && m_private_hours_isValid;

    m_private_orientation_isValid = ::OpenAPI::fromJsonValue(m_private_orientation, json[QString("privateOrientation")]);
    m_private_orientation_isSet = !json[QString("privateOrientation")].isNull() && m_private_orientation_isValid;

    m_rank_history_isValid = ::OpenAPI::fromJsonValue(m_rank_history, json[QString("rankHistory")]);
    m_rank_history_isSet = !json[QString("rankHistory")].isNull() && m_rank_history_isValid;

    m_rank_movement_isValid = ::OpenAPI::fromJsonValue(m_rank_movement, json[QString("rankMovement")]);
    m_rank_movement_isSet = !json[QString("rankMovement")].isNull() && m_rank_movement_isValid;

    m_school_level_isValid = ::OpenAPI::fromJsonValue(m_school_level, json[QString("schoolLevel")]);
    m_school_level_isSet = !json[QString("schoolLevel")].isNull() && m_school_level_isValid;

    m_school_name_isValid = ::OpenAPI::fromJsonValue(m_school_name, json[QString("schoolName")]);
    m_school_name_isSet = !json[QString("schoolName")].isNull() && m_school_name_isValid;

    m_school_yearly_details_isValid = ::OpenAPI::fromJsonValue(m_school_yearly_details, json[QString("schoolYearlyDetails")]);
    m_school_yearly_details_isSet = !json[QString("schoolYearlyDetails")].isNull() && m_school_yearly_details_isValid;

    m_schoolid_isValid = ::OpenAPI::fromJsonValue(m_schoolid, json[QString("schoolid")]);
    m_schoolid_isSet = !json[QString("schoolid")].isNull() && m_schoolid_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;

    m_url_compare_isValid = ::OpenAPI::fromJsonValue(m_url_compare, json[QString("urlCompare")]);
    m_url_compare_isSet = !json[QString("urlCompare")].isNull() && m_url_compare_isValid;
}

QString OAIAPISchool1Summary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPISchool1Summary::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_county.isSet()) {
        obj.insert(QString("county"), ::OpenAPI::toJsonValue(m_county));
    }
    if (m_distance_isSet) {
        obj.insert(QString("distance"), ::OpenAPI::toJsonValue(m_distance));
    }
    if (m_district.isSet()) {
        obj.insert(QString("district"), ::OpenAPI::toJsonValue(m_district));
    }
    if (m_has_boundary_isSet) {
        obj.insert(QString("hasBoundary"), ::OpenAPI::toJsonValue(m_has_boundary));
    }
    if (m_high_grade_isSet) {
        obj.insert(QString("highGrade"), ::OpenAPI::toJsonValue(m_high_grade));
    }
    if (m_is_charter_school_isSet) {
        obj.insert(QString("isCharterSchool"), ::OpenAPI::toJsonValue(m_is_charter_school));
    }
    if (m_is_magnet_school_isSet) {
        obj.insert(QString("isMagnetSchool"), ::OpenAPI::toJsonValue(m_is_magnet_school));
    }
    if (m_is_private_isSet) {
        obj.insert(QString("isPrivate"), ::OpenAPI::toJsonValue(m_is_private));
    }
    if (m_is_title_i_school_isSet) {
        obj.insert(QString("isTitleISchool"), ::OpenAPI::toJsonValue(m_is_title_i_school));
    }
    if (m_is_title_i_schoolwide_school_isSet) {
        obj.insert(QString("isTitleISchoolwideSchool"), ::OpenAPI::toJsonValue(m_is_title_i_schoolwide_school));
    }
    if (m_is_virtual_school_isSet) {
        obj.insert(QString("isVirtualSchool"), ::OpenAPI::toJsonValue(m_is_virtual_school));
    }
    if (m_location_is_within_boundary_isSet) {
        obj.insert(QString("locationIsWithinBoundary"), ::OpenAPI::toJsonValue(m_location_is_within_boundary));
    }
    if (m_low_grade_isSet) {
        obj.insert(QString("lowGrade"), ::OpenAPI::toJsonValue(m_low_grade));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_private_coed_isSet) {
        obj.insert(QString("privateCoed"), ::OpenAPI::toJsonValue(m_private_coed));
    }
    if (m_private_days_isSet) {
        obj.insert(QString("privateDays"), ::OpenAPI::toJsonValue(m_private_days));
    }
    if (m_private_has_library_isSet) {
        obj.insert(QString("privateHasLibrary"), ::OpenAPI::toJsonValue(m_private_has_library));
    }
    if (m_private_hours_isSet) {
        obj.insert(QString("privateHours"), ::OpenAPI::toJsonValue(m_private_hours));
    }
    if (m_private_orientation_isSet) {
        obj.insert(QString("privateOrientation"), ::OpenAPI::toJsonValue(m_private_orientation));
    }
    if (m_rank_history.size() > 0) {
        obj.insert(QString("rankHistory"), ::OpenAPI::toJsonValue(m_rank_history));
    }
    if (m_rank_movement_isSet) {
        obj.insert(QString("rankMovement"), ::OpenAPI::toJsonValue(m_rank_movement));
    }
    if (m_school_level_isSet) {
        obj.insert(QString("schoolLevel"), ::OpenAPI::toJsonValue(m_school_level));
    }
    if (m_school_name_isSet) {
        obj.insert(QString("schoolName"), ::OpenAPI::toJsonValue(m_school_name));
    }
    if (m_school_yearly_details.size() > 0) {
        obj.insert(QString("schoolYearlyDetails"), ::OpenAPI::toJsonValue(m_school_yearly_details));
    }
    if (m_schoolid_isSet) {
        obj.insert(QString("schoolid"), ::OpenAPI::toJsonValue(m_schoolid));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_url_compare_isSet) {
        obj.insert(QString("urlCompare"), ::OpenAPI::toJsonValue(m_url_compare));
    }
    return obj;
}

OAIAPILocation OAIAPISchool1Summary::getAddress() const {
    return m_address;
}
void OAIAPISchool1Summary::setAddress(const OAIAPILocation &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIAPISchool1Summary::is_address_Set() const{
    return m_address_isSet;
}

bool OAIAPISchool1Summary::is_address_Valid() const{
    return m_address_isValid;
}

OAIAPICounty OAIAPISchool1Summary::getCounty() const {
    return m_county;
}
void OAIAPISchool1Summary::setCounty(const OAIAPICounty &county) {
    m_county = county;
    m_county_isSet = true;
}

bool OAIAPISchool1Summary::is_county_Set() const{
    return m_county_isSet;
}

bool OAIAPISchool1Summary::is_county_Valid() const{
    return m_county_isValid;
}

double OAIAPISchool1Summary::getDistance() const {
    return m_distance;
}
void OAIAPISchool1Summary::setDistance(const double &distance) {
    m_distance = distance;
    m_distance_isSet = true;
}

bool OAIAPISchool1Summary::is_distance_Set() const{
    return m_distance_isSet;
}

bool OAIAPISchool1Summary::is_distance_Valid() const{
    return m_distance_isValid;
}

OAIAPIDistrictSum OAIAPISchool1Summary::getDistrict() const {
    return m_district;
}
void OAIAPISchool1Summary::setDistrict(const OAIAPIDistrictSum &district) {
    m_district = district;
    m_district_isSet = true;
}

bool OAIAPISchool1Summary::is_district_Set() const{
    return m_district_isSet;
}

bool OAIAPISchool1Summary::is_district_Valid() const{
    return m_district_isValid;
}

bool OAIAPISchool1Summary::isHasBoundary() const {
    return m_has_boundary;
}
void OAIAPISchool1Summary::setHasBoundary(const bool &has_boundary) {
    m_has_boundary = has_boundary;
    m_has_boundary_isSet = true;
}

bool OAIAPISchool1Summary::is_has_boundary_Set() const{
    return m_has_boundary_isSet;
}

bool OAIAPISchool1Summary::is_has_boundary_Valid() const{
    return m_has_boundary_isValid;
}

QString OAIAPISchool1Summary::getHighGrade() const {
    return m_high_grade;
}
void OAIAPISchool1Summary::setHighGrade(const QString &high_grade) {
    m_high_grade = high_grade;
    m_high_grade_isSet = true;
}

bool OAIAPISchool1Summary::is_high_grade_Set() const{
    return m_high_grade_isSet;
}

bool OAIAPISchool1Summary::is_high_grade_Valid() const{
    return m_high_grade_isValid;
}

QString OAIAPISchool1Summary::getIsCharterSchool() const {
    return m_is_charter_school;
}
void OAIAPISchool1Summary::setIsCharterSchool(const QString &is_charter_school) {
    m_is_charter_school = is_charter_school;
    m_is_charter_school_isSet = true;
}

bool OAIAPISchool1Summary::is_is_charter_school_Set() const{
    return m_is_charter_school_isSet;
}

bool OAIAPISchool1Summary::is_is_charter_school_Valid() const{
    return m_is_charter_school_isValid;
}

QString OAIAPISchool1Summary::getIsMagnetSchool() const {
    return m_is_magnet_school;
}
void OAIAPISchool1Summary::setIsMagnetSchool(const QString &is_magnet_school) {
    m_is_magnet_school = is_magnet_school;
    m_is_magnet_school_isSet = true;
}

bool OAIAPISchool1Summary::is_is_magnet_school_Set() const{
    return m_is_magnet_school_isSet;
}

bool OAIAPISchool1Summary::is_is_magnet_school_Valid() const{
    return m_is_magnet_school_isValid;
}

bool OAIAPISchool1Summary::isIsPrivate() const {
    return m_is_private;
}
void OAIAPISchool1Summary::setIsPrivate(const bool &is_private) {
    m_is_private = is_private;
    m_is_private_isSet = true;
}

bool OAIAPISchool1Summary::is_is_private_Set() const{
    return m_is_private_isSet;
}

bool OAIAPISchool1Summary::is_is_private_Valid() const{
    return m_is_private_isValid;
}

QString OAIAPISchool1Summary::getIsTitleISchool() const {
    return m_is_title_i_school;
}
void OAIAPISchool1Summary::setIsTitleISchool(const QString &is_title_i_school) {
    m_is_title_i_school = is_title_i_school;
    m_is_title_i_school_isSet = true;
}

bool OAIAPISchool1Summary::is_is_title_i_school_Set() const{
    return m_is_title_i_school_isSet;
}

bool OAIAPISchool1Summary::is_is_title_i_school_Valid() const{
    return m_is_title_i_school_isValid;
}

QString OAIAPISchool1Summary::getIsTitleISchoolwideSchool() const {
    return m_is_title_i_schoolwide_school;
}
void OAIAPISchool1Summary::setIsTitleISchoolwideSchool(const QString &is_title_i_schoolwide_school) {
    m_is_title_i_schoolwide_school = is_title_i_schoolwide_school;
    m_is_title_i_schoolwide_school_isSet = true;
}

bool OAIAPISchool1Summary::is_is_title_i_schoolwide_school_Set() const{
    return m_is_title_i_schoolwide_school_isSet;
}

bool OAIAPISchool1Summary::is_is_title_i_schoolwide_school_Valid() const{
    return m_is_title_i_schoolwide_school_isValid;
}

QString OAIAPISchool1Summary::getIsVirtualSchool() const {
    return m_is_virtual_school;
}
void OAIAPISchool1Summary::setIsVirtualSchool(const QString &is_virtual_school) {
    m_is_virtual_school = is_virtual_school;
    m_is_virtual_school_isSet = true;
}

bool OAIAPISchool1Summary::is_is_virtual_school_Set() const{
    return m_is_virtual_school_isSet;
}

bool OAIAPISchool1Summary::is_is_virtual_school_Valid() const{
    return m_is_virtual_school_isValid;
}

bool OAIAPISchool1Summary::isLocationIsWithinBoundary() const {
    return m_location_is_within_boundary;
}
void OAIAPISchool1Summary::setLocationIsWithinBoundary(const bool &location_is_within_boundary) {
    m_location_is_within_boundary = location_is_within_boundary;
    m_location_is_within_boundary_isSet = true;
}

bool OAIAPISchool1Summary::is_location_is_within_boundary_Set() const{
    return m_location_is_within_boundary_isSet;
}

bool OAIAPISchool1Summary::is_location_is_within_boundary_Valid() const{
    return m_location_is_within_boundary_isValid;
}

QString OAIAPISchool1Summary::getLowGrade() const {
    return m_low_grade;
}
void OAIAPISchool1Summary::setLowGrade(const QString &low_grade) {
    m_low_grade = low_grade;
    m_low_grade_isSet = true;
}

bool OAIAPISchool1Summary::is_low_grade_Set() const{
    return m_low_grade_isSet;
}

bool OAIAPISchool1Summary::is_low_grade_Valid() const{
    return m_low_grade_isValid;
}

QString OAIAPISchool1Summary::getPhone() const {
    return m_phone;
}
void OAIAPISchool1Summary::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIAPISchool1Summary::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIAPISchool1Summary::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIAPISchool1Summary::getPrivateCoed() const {
    return m_private_coed;
}
void OAIAPISchool1Summary::setPrivateCoed(const QString &private_coed) {
    m_private_coed = private_coed;
    m_private_coed_isSet = true;
}

bool OAIAPISchool1Summary::is_private_coed_Set() const{
    return m_private_coed_isSet;
}

bool OAIAPISchool1Summary::is_private_coed_Valid() const{
    return m_private_coed_isValid;
}

qint32 OAIAPISchool1Summary::getPrivateDays() const {
    return m_private_days;
}
void OAIAPISchool1Summary::setPrivateDays(const qint32 &private_days) {
    m_private_days = private_days;
    m_private_days_isSet = true;
}

bool OAIAPISchool1Summary::is_private_days_Set() const{
    return m_private_days_isSet;
}

bool OAIAPISchool1Summary::is_private_days_Valid() const{
    return m_private_days_isValid;
}

bool OAIAPISchool1Summary::isPrivateHasLibrary() const {
    return m_private_has_library;
}
void OAIAPISchool1Summary::setPrivateHasLibrary(const bool &private_has_library) {
    m_private_has_library = private_has_library;
    m_private_has_library_isSet = true;
}

bool OAIAPISchool1Summary::is_private_has_library_Set() const{
    return m_private_has_library_isSet;
}

bool OAIAPISchool1Summary::is_private_has_library_Valid() const{
    return m_private_has_library_isValid;
}

double OAIAPISchool1Summary::getPrivateHours() const {
    return m_private_hours;
}
void OAIAPISchool1Summary::setPrivateHours(const double &private_hours) {
    m_private_hours = private_hours;
    m_private_hours_isSet = true;
}

bool OAIAPISchool1Summary::is_private_hours_Set() const{
    return m_private_hours_isSet;
}

bool OAIAPISchool1Summary::is_private_hours_Valid() const{
    return m_private_hours_isValid;
}

QString OAIAPISchool1Summary::getPrivateOrientation() const {
    return m_private_orientation;
}
void OAIAPISchool1Summary::setPrivateOrientation(const QString &private_orientation) {
    m_private_orientation = private_orientation;
    m_private_orientation_isSet = true;
}

bool OAIAPISchool1Summary::is_private_orientation_Set() const{
    return m_private_orientation_isSet;
}

bool OAIAPISchool1Summary::is_private_orientation_Valid() const{
    return m_private_orientation_isValid;
}

QList<OAIAPIRankHistory> OAIAPISchool1Summary::getRankHistory() const {
    return m_rank_history;
}
void OAIAPISchool1Summary::setRankHistory(const QList<OAIAPIRankHistory> &rank_history) {
    m_rank_history = rank_history;
    m_rank_history_isSet = true;
}

bool OAIAPISchool1Summary::is_rank_history_Set() const{
    return m_rank_history_isSet;
}

bool OAIAPISchool1Summary::is_rank_history_Valid() const{
    return m_rank_history_isValid;
}

qint32 OAIAPISchool1Summary::getRankMovement() const {
    return m_rank_movement;
}
void OAIAPISchool1Summary::setRankMovement(const qint32 &rank_movement) {
    m_rank_movement = rank_movement;
    m_rank_movement_isSet = true;
}

bool OAIAPISchool1Summary::is_rank_movement_Set() const{
    return m_rank_movement_isSet;
}

bool OAIAPISchool1Summary::is_rank_movement_Valid() const{
    return m_rank_movement_isValid;
}

QString OAIAPISchool1Summary::getSchoolLevel() const {
    return m_school_level;
}
void OAIAPISchool1Summary::setSchoolLevel(const QString &school_level) {
    m_school_level = school_level;
    m_school_level_isSet = true;
}

bool OAIAPISchool1Summary::is_school_level_Set() const{
    return m_school_level_isSet;
}

bool OAIAPISchool1Summary::is_school_level_Valid() const{
    return m_school_level_isValid;
}

QString OAIAPISchool1Summary::getSchoolName() const {
    return m_school_name;
}
void OAIAPISchool1Summary::setSchoolName(const QString &school_name) {
    m_school_name = school_name;
    m_school_name_isSet = true;
}

bool OAIAPISchool1Summary::is_school_name_Set() const{
    return m_school_name_isSet;
}

bool OAIAPISchool1Summary::is_school_name_Valid() const{
    return m_school_name_isValid;
}

QList<OAIAPIYearlyDemographics> OAIAPISchool1Summary::getSchoolYearlyDetails() const {
    return m_school_yearly_details;
}
void OAIAPISchool1Summary::setSchoolYearlyDetails(const QList<OAIAPIYearlyDemographics> &school_yearly_details) {
    m_school_yearly_details = school_yearly_details;
    m_school_yearly_details_isSet = true;
}

bool OAIAPISchool1Summary::is_school_yearly_details_Set() const{
    return m_school_yearly_details_isSet;
}

bool OAIAPISchool1Summary::is_school_yearly_details_Valid() const{
    return m_school_yearly_details_isValid;
}

QString OAIAPISchool1Summary::getSchoolid() const {
    return m_schoolid;
}
void OAIAPISchool1Summary::setSchoolid(const QString &schoolid) {
    m_schoolid = schoolid;
    m_schoolid_isSet = true;
}

bool OAIAPISchool1Summary::is_schoolid_Set() const{
    return m_schoolid_isSet;
}

bool OAIAPISchool1Summary::is_schoolid_Valid() const{
    return m_schoolid_isValid;
}

QString OAIAPISchool1Summary::getUrl() const {
    return m_url;
}
void OAIAPISchool1Summary::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAPISchool1Summary::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAPISchool1Summary::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIAPISchool1Summary::getUrlCompare() const {
    return m_url_compare;
}
void OAIAPISchool1Summary::setUrlCompare(const QString &url_compare) {
    m_url_compare = url_compare;
    m_url_compare_isSet = true;
}

bool OAIAPISchool1Summary::is_url_compare_Set() const{
    return m_url_compare_isSet;
}

bool OAIAPISchool1Summary::is_url_compare_Valid() const{
    return m_url_compare_isValid;
}

bool OAIAPISchool1Summary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_county.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_distance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_has_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_high_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_charter_school_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_magnet_school_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_private_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_title_i_school_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_title_i_schoolwide_school_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_virtual_school_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_is_within_boundary_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_coed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_days_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_has_library_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_hours_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_private_orientation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_history.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_rank_movement_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_yearly_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_schoolid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_compare_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPISchool1Summary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
