/**
 * SchoolDigger API V1
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.
 *
 * The version of the OpenAPI document: v1
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIDistrict from '../model/APIDistrict';
import APIDistrictList from '../model/APIDistrictList';

/**
* Districts service.
* @module api/DistrictsApi
* @version v1
*/
export default class DistrictsApi {

    /**
    * Constructs a new DistrictsApi. 
    * @alias module:api/DistrictsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the districtsGetAllDistricts operation.
     * @callback module:api/DistrictsApi~districtsGetAllDistrictsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIDistrictList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of districts
     * Search the SchoolDigger database for districts. You may use any combination of criteria as query parameters.
     * @param {String} st Two character state (e.g. 'CA') - required
     * @param {String} appID Your API app id
     * @param {String} appKey Your API app key
     * @param {Object} opts Optional parameters
     * @param {String} [q] Search term - note: will match district name or city (optional)
     * @param {String} [city] Search for districts in this city (optional)
     * @param {String} [zip] Search for districts in this 5-digit zip code (optional)
     * @param {Number} [nearLatitude] Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. 44.982560) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.)
     * @param {Number} [nearLongitude] Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. -124.289185) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.)
     * @param {String} [boundaryAddress] Full U.S. address: flag returned districts that include this address in its attendance boundary. Example: '123 Main St. AnyTown CA 90001' (optional) (Enterprise API level only)
     * @param {Number} [distanceMiles] Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (Default 50 miles) (optional) (Pro, Enterprise API levels only)
     * @param {Boolean} [isInBoundaryOnly] Return only the districts that include given location (nearLatitude/nearLongitude) or (boundaryAddress) in its attendance boundary (Enterprise API level only)
     * @param {Number} [boxLatitudeNW] Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)
     * @param {Number} [boxLongitudeNW] Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)
     * @param {Number} [boxLatitudeSE] Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)
     * @param {Number} [boxLongitudeSE] Search for districts within a 'box' defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional)
     * @param {Number} [page] Page number to retrieve (optional, default: 1)
     * @param {Number} [perPage] Number of districts to retrieve on a page (50 max) (optional, default: 10)
     * @param {String} [sortBy] Sort list. Values are: districtname, distance, rank. For descending order, precede with '-' i.e. -districtname (optional, default: districtname)
     * @param {Boolean} [includeUnrankedDistrictsInRankSort] If sortBy is 'rank', this boolean determines if districts with no rank are included in the result (optional, default: false)
     * @param {module:api/DistrictsApi~districtsGetAllDistrictsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIDistrictList}
     */
    districtsGetAllDistricts(st, appID, appKey, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'st' is set
      if (st === undefined || st === null) {
        throw new Error("Missing the required parameter 'st' when calling districtsGetAllDistricts");
      }
      // verify the required parameter 'appID' is set
      if (appID === undefined || appID === null) {
        throw new Error("Missing the required parameter 'appID' when calling districtsGetAllDistricts");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling districtsGetAllDistricts");
      }

      let pathParams = {
      };
      let queryParams = {
        'st': st,
        'q': opts['q'],
        'city': opts['city'],
        'zip': opts['zip'],
        'nearLatitude': opts['nearLatitude'],
        'nearLongitude': opts['nearLongitude'],
        'boundaryAddress': opts['boundaryAddress'],
        'distanceMiles': opts['distanceMiles'],
        'isInBoundaryOnly': opts['isInBoundaryOnly'],
        'boxLatitudeNW': opts['boxLatitudeNW'],
        'boxLongitudeNW': opts['boxLongitudeNW'],
        'boxLatitudeSE': opts['boxLatitudeSE'],
        'boxLongitudeSE': opts['boxLongitudeSE'],
        'page': opts['page'],
        'perPage': opts['perPage'],
        'sortBy': opts['sortBy'],
        'includeUnrankedDistrictsInRankSort': opts['includeUnrankedDistrictsInRankSort'],
        'appID': appID,
        'appKey': appKey
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIDistrictList;
      return this.apiClient.callApi(
        '/v1/districts', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the districtsGetDistrict operation.
     * @callback module:api/DistrictsApi~districtsGetDistrictCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIDistrict} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a detailed record for one district
     * Retrieve a single district record from the SchoolDigger database
     * @param {String} id The 7 digit District ID (e.g. 0642150)
     * @param {String} appID Your API app id
     * @param {String} appKey Your API app key
     * @param {module:api/DistrictsApi~districtsGetDistrictCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIDistrict}
     */
    districtsGetDistrict(id, appID, appKey, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling districtsGetDistrict");
      }
      // verify the required parameter 'appID' is set
      if (appID === undefined || appID === null) {
        throw new Error("Missing the required parameter 'appID' when calling districtsGetDistrict");
      }
      // verify the required parameter 'appKey' is set
      if (appKey === undefined || appKey === null) {
        throw new Error("Missing the required parameter 'appKey' when calling districtsGetDistrict");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'appID': appID,
        'appKey': appKey
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = APIDistrict;
      return this.apiClient.callApi(
        '/v1/districts/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
