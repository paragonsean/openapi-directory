/*
 * SchoolDigger API V1
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.
 *
 * The version of the OpenAPI document: v1
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.APIDistrict;
import org.openapitools.client.model.APIDistrictList;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class DistrictsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public DistrictsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public DistrictsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for districtsGetAllDistricts
     * @param st Two character state (e.g. &#39;CA&#39;) - required (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @param q Search term - note: will match district name or city (optional) (optional)
     * @param city Search for districts in this city (optional) (optional)
     * @param zip Search for districts in this 5-digit zip code (optional) (optional)
     * @param nearLatitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. 44.982560) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param nearLongitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. -124.289185) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param boundaryAddress Full U.S. address: flag returned districts that include this address in its attendance boundary. Example: &#39;123 Main St. AnyTown CA 90001&#39; (optional) (Enterprise API level only) (optional)
     * @param distanceMiles Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (Default 50 miles) (optional) (Pro, Enterprise API levels only) (optional)
     * @param isInBoundaryOnly Return only the districts that include given location (nearLatitude/nearLongitude) or (boundaryAddress) in its attendance boundary (Enterprise API level only) (optional)
     * @param boxLatitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLatitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param page Page number to retrieve (optional, default: 1) (optional)
     * @param perPage Number of districts to retrieve on a page (50 max) (optional, default: 10) (optional)
     * @param sortBy Sort list. Values are: districtname, distance, rank. For descending order, precede with &#39;-&#39; i.e. -districtname (optional, default: districtname) (optional)
     * @param includeUnrankedDistrictsInRankSort If sortBy is &#39;rank&#39;, this boolean determines if districts with no rank are included in the result (optional, default: false) (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call districtsGetAllDistrictsCall(String st, String appID, String appKey, String q, String city, String zip, Double nearLatitude, Double nearLongitude, String boundaryAddress, Integer distanceMiles, Boolean isInBoundaryOnly, Double boxLatitudeNW, Double boxLongitudeNW, Double boxLatitudeSE, Double boxLongitudeSE, Integer page, Integer perPage, String sortBy, Boolean includeUnrankedDistrictsInRankSort, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/districts";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (st != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("st", st));
        }

        if (q != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("q", q));
        }

        if (city != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("city", city));
        }

        if (zip != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("zip", zip));
        }

        if (nearLatitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("nearLatitude", nearLatitude));
        }

        if (nearLongitude != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("nearLongitude", nearLongitude));
        }

        if (boundaryAddress != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("boundaryAddress", boundaryAddress));
        }

        if (distanceMiles != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("distanceMiles", distanceMiles));
        }

        if (isInBoundaryOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("isInBoundaryOnly", isInBoundaryOnly));
        }

        if (boxLatitudeNW != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("boxLatitudeNW", boxLatitudeNW));
        }

        if (boxLongitudeNW != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("boxLongitudeNW", boxLongitudeNW));
        }

        if (boxLatitudeSE != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("boxLatitudeSE", boxLatitudeSE));
        }

        if (boxLongitudeSE != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("boxLongitudeSE", boxLongitudeSE));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (perPage != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("perPage", perPage));
        }

        if (sortBy != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sortBy", sortBy));
        }

        if (includeUnrankedDistrictsInRankSort != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeUnrankedDistrictsInRankSort", includeUnrankedDistrictsInRankSort));
        }

        if (appID != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("appID", appID));
        }

        if (appKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("appKey", appKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call districtsGetAllDistrictsValidateBeforeCall(String st, String appID, String appKey, String q, String city, String zip, Double nearLatitude, Double nearLongitude, String boundaryAddress, Integer distanceMiles, Boolean isInBoundaryOnly, Double boxLatitudeNW, Double boxLongitudeNW, Double boxLatitudeSE, Double boxLongitudeSE, Integer page, Integer perPage, String sortBy, Boolean includeUnrankedDistrictsInRankSort, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'st' is set
        if (st == null) {
            throw new ApiException("Missing the required parameter 'st' when calling districtsGetAllDistricts(Async)");
        }

        // verify the required parameter 'appID' is set
        if (appID == null) {
            throw new ApiException("Missing the required parameter 'appID' when calling districtsGetAllDistricts(Async)");
        }

        // verify the required parameter 'appKey' is set
        if (appKey == null) {
            throw new ApiException("Missing the required parameter 'appKey' when calling districtsGetAllDistricts(Async)");
        }

        return districtsGetAllDistrictsCall(st, appID, appKey, q, city, zip, nearLatitude, nearLongitude, boundaryAddress, distanceMiles, isInBoundaryOnly, boxLatitudeNW, boxLongitudeNW, boxLatitudeSE, boxLongitudeSE, page, perPage, sortBy, includeUnrankedDistrictsInRankSort, _callback);

    }

    /**
     * Returns a list of districts
     * Search the SchoolDigger database for districts. You may use any combination of criteria as query parameters.
     * @param st Two character state (e.g. &#39;CA&#39;) - required (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @param q Search term - note: will match district name or city (optional) (optional)
     * @param city Search for districts in this city (optional) (optional)
     * @param zip Search for districts in this 5-digit zip code (optional) (optional)
     * @param nearLatitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. 44.982560) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param nearLongitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. -124.289185) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param boundaryAddress Full U.S. address: flag returned districts that include this address in its attendance boundary. Example: &#39;123 Main St. AnyTown CA 90001&#39; (optional) (Enterprise API level only) (optional)
     * @param distanceMiles Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (Default 50 miles) (optional) (Pro, Enterprise API levels only) (optional)
     * @param isInBoundaryOnly Return only the districts that include given location (nearLatitude/nearLongitude) or (boundaryAddress) in its attendance boundary (Enterprise API level only) (optional)
     * @param boxLatitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLatitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param page Page number to retrieve (optional, default: 1) (optional)
     * @param perPage Number of districts to retrieve on a page (50 max) (optional, default: 10) (optional)
     * @param sortBy Sort list. Values are: districtname, distance, rank. For descending order, precede with &#39;-&#39; i.e. -districtname (optional, default: districtname) (optional)
     * @param includeUnrankedDistrictsInRankSort If sortBy is &#39;rank&#39;, this boolean determines if districts with no rank are included in the result (optional, default: false) (optional)
     * @return APIDistrictList
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public APIDistrictList districtsGetAllDistricts(String st, String appID, String appKey, String q, String city, String zip, Double nearLatitude, Double nearLongitude, String boundaryAddress, Integer distanceMiles, Boolean isInBoundaryOnly, Double boxLatitudeNW, Double boxLongitudeNW, Double boxLatitudeSE, Double boxLongitudeSE, Integer page, Integer perPage, String sortBy, Boolean includeUnrankedDistrictsInRankSort) throws ApiException {
        ApiResponse<APIDistrictList> localVarResp = districtsGetAllDistrictsWithHttpInfo(st, appID, appKey, q, city, zip, nearLatitude, nearLongitude, boundaryAddress, distanceMiles, isInBoundaryOnly, boxLatitudeNW, boxLongitudeNW, boxLatitudeSE, boxLongitudeSE, page, perPage, sortBy, includeUnrankedDistrictsInRankSort);
        return localVarResp.getData();
    }

    /**
     * Returns a list of districts
     * Search the SchoolDigger database for districts. You may use any combination of criteria as query parameters.
     * @param st Two character state (e.g. &#39;CA&#39;) - required (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @param q Search term - note: will match district name or city (optional) (optional)
     * @param city Search for districts in this city (optional) (optional)
     * @param zip Search for districts in this 5-digit zip code (optional) (optional)
     * @param nearLatitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. 44.982560) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param nearLongitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. -124.289185) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param boundaryAddress Full U.S. address: flag returned districts that include this address in its attendance boundary. Example: &#39;123 Main St. AnyTown CA 90001&#39; (optional) (Enterprise API level only) (optional)
     * @param distanceMiles Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (Default 50 miles) (optional) (Pro, Enterprise API levels only) (optional)
     * @param isInBoundaryOnly Return only the districts that include given location (nearLatitude/nearLongitude) or (boundaryAddress) in its attendance boundary (Enterprise API level only) (optional)
     * @param boxLatitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLatitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param page Page number to retrieve (optional, default: 1) (optional)
     * @param perPage Number of districts to retrieve on a page (50 max) (optional, default: 10) (optional)
     * @param sortBy Sort list. Values are: districtname, distance, rank. For descending order, precede with &#39;-&#39; i.e. -districtname (optional, default: districtname) (optional)
     * @param includeUnrankedDistrictsInRankSort If sortBy is &#39;rank&#39;, this boolean determines if districts with no rank are included in the result (optional, default: false) (optional)
     * @return ApiResponse&lt;APIDistrictList&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIDistrictList> districtsGetAllDistrictsWithHttpInfo(String st, String appID, String appKey, String q, String city, String zip, Double nearLatitude, Double nearLongitude, String boundaryAddress, Integer distanceMiles, Boolean isInBoundaryOnly, Double boxLatitudeNW, Double boxLongitudeNW, Double boxLatitudeSE, Double boxLongitudeSE, Integer page, Integer perPage, String sortBy, Boolean includeUnrankedDistrictsInRankSort) throws ApiException {
        okhttp3.Call localVarCall = districtsGetAllDistrictsValidateBeforeCall(st, appID, appKey, q, city, zip, nearLatitude, nearLongitude, boundaryAddress, distanceMiles, isInBoundaryOnly, boxLatitudeNW, boxLongitudeNW, boxLatitudeSE, boxLongitudeSE, page, perPage, sortBy, includeUnrankedDistrictsInRankSort, null);
        Type localVarReturnType = new TypeToken<APIDistrictList>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a list of districts (asynchronously)
     * Search the SchoolDigger database for districts. You may use any combination of criteria as query parameters.
     * @param st Two character state (e.g. &#39;CA&#39;) - required (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @param q Search term - note: will match district name or city (optional) (optional)
     * @param city Search for districts in this city (optional) (optional)
     * @param zip Search for districts in this 5-digit zip code (optional) (optional)
     * @param nearLatitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. 44.982560) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param nearLongitude Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (e.g. -124.289185) (optional) (Pro, Enterprise API levels only. Enterprise API level will flag districts that include lat/long in its attendance boundary.) (optional)
     * @param boundaryAddress Full U.S. address: flag returned districts that include this address in its attendance boundary. Example: &#39;123 Main St. AnyTown CA 90001&#39; (optional) (Enterprise API level only) (optional)
     * @param distanceMiles Search for districts within (distanceMiles) of (nearLatitude)/(nearLongitude) (Default 50 miles) (optional) (Pro, Enterprise API levels only) (optional)
     * @param isInBoundaryOnly Return only the districts that include given location (nearLatitude/nearLongitude) or (boundaryAddress) in its attendance boundary (Enterprise API level only) (optional)
     * @param boxLatitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeNW Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLatitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param boxLongitudeSE Search for districts within a &#39;box&#39; defined by (BoxLatitudeNW/BoxLongitudeNW) to (BoxLongitudeSE/BoxLatitudeSE) (optional) (optional)
     * @param page Page number to retrieve (optional, default: 1) (optional)
     * @param perPage Number of districts to retrieve on a page (50 max) (optional, default: 10) (optional)
     * @param sortBy Sort list. Values are: districtname, distance, rank. For descending order, precede with &#39;-&#39; i.e. -districtname (optional, default: districtname) (optional)
     * @param includeUnrankedDistrictsInRankSort If sortBy is &#39;rank&#39;, this boolean determines if districts with no rank are included in the result (optional, default: false) (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call districtsGetAllDistrictsAsync(String st, String appID, String appKey, String q, String city, String zip, Double nearLatitude, Double nearLongitude, String boundaryAddress, Integer distanceMiles, Boolean isInBoundaryOnly, Double boxLatitudeNW, Double boxLongitudeNW, Double boxLatitudeSE, Double boxLongitudeSE, Integer page, Integer perPage, String sortBy, Boolean includeUnrankedDistrictsInRankSort, final ApiCallback<APIDistrictList> _callback) throws ApiException {

        okhttp3.Call localVarCall = districtsGetAllDistrictsValidateBeforeCall(st, appID, appKey, q, city, zip, nearLatitude, nearLongitude, boundaryAddress, distanceMiles, isInBoundaryOnly, boxLatitudeNW, boxLongitudeNW, boxLatitudeSE, boxLongitudeSE, page, perPage, sortBy, includeUnrankedDistrictsInRankSort, _callback);
        Type localVarReturnType = new TypeToken<APIDistrictList>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for districtsGetDistrict
     * @param id The 7 digit District ID (e.g. 0642150) (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call districtsGetDistrictCall(String id, String appID, String appKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/districts/{id}"
            .replace("{" + "id" + "}", localVarApiClient.escapeString(id.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (appID != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("appID", appID));
        }

        if (appKey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("appKey", appKey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call districtsGetDistrictValidateBeforeCall(String id, String appID, String appKey, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'id' is set
        if (id == null) {
            throw new ApiException("Missing the required parameter 'id' when calling districtsGetDistrict(Async)");
        }

        // verify the required parameter 'appID' is set
        if (appID == null) {
            throw new ApiException("Missing the required parameter 'appID' when calling districtsGetDistrict(Async)");
        }

        // verify the required parameter 'appKey' is set
        if (appKey == null) {
            throw new ApiException("Missing the required parameter 'appKey' when calling districtsGetDistrict(Async)");
        }

        return districtsGetDistrictCall(id, appID, appKey, _callback);

    }

    /**
     * Returns a detailed record for one district
     * Retrieve a single district record from the SchoolDigger database
     * @param id The 7 digit District ID (e.g. 0642150) (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @return APIDistrict
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public APIDistrict districtsGetDistrict(String id, String appID, String appKey) throws ApiException {
        ApiResponse<APIDistrict> localVarResp = districtsGetDistrictWithHttpInfo(id, appID, appKey);
        return localVarResp.getData();
    }

    /**
     * Returns a detailed record for one district
     * Retrieve a single district record from the SchoolDigger database
     * @param id The 7 digit District ID (e.g. 0642150) (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @return ApiResponse&lt;APIDistrict&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIDistrict> districtsGetDistrictWithHttpInfo(String id, String appID, String appKey) throws ApiException {
        okhttp3.Call localVarCall = districtsGetDistrictValidateBeforeCall(id, appID, appKey, null);
        Type localVarReturnType = new TypeToken<APIDistrict>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Returns a detailed record for one district (asynchronously)
     * Retrieve a single district record from the SchoolDigger database
     * @param id The 7 digit District ID (e.g. 0642150) (required)
     * @param appID Your API app id (required)
     * @param appKey Your API app key (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call districtsGetDistrictAsync(String id, String appID, String appKey, final ApiCallback<APIDistrict> _callback) throws ApiException {

        okhttp3.Call localVarCall = districtsGetDistrictValidateBeforeCall(id, appID, appKey, _callback);
        Type localVarReturnType = new TypeToken<APIDistrict>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
