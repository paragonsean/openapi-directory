/*
 * SchoolDigger API V1
 * Get detailed data on over 120,000 schools and 18,500 districts in the U.S.
 *
 * The version of the OpenAPI document: v1
 * Contact: api@schooldigger.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.APICounty;
import org.openapitools.client.model.APILEARankHistory;
import org.openapitools.client.model.APILEAYearlyDetail;
import org.openapitools.client.model.APILocation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * APIDistrict1Summary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:32:02.382564-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class APIDistrict1Summary {
  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private APILocation address;

  public static final String SERIALIZED_NAME_COUNTY = "county";
  @SerializedName(SERIALIZED_NAME_COUNTY)
  private APICounty county;

  public static final String SERIALIZED_NAME_DISTANCE = "distance";
  @SerializedName(SERIALIZED_NAME_DISTANCE)
  private Double distance;

  public static final String SERIALIZED_NAME_DISTRICT_I_D = "districtID";
  @SerializedName(SERIALIZED_NAME_DISTRICT_I_D)
  private String districtID;

  public static final String SERIALIZED_NAME_DISTRICT_NAME = "districtName";
  @SerializedName(SERIALIZED_NAME_DISTRICT_NAME)
  private String districtName;

  public static final String SERIALIZED_NAME_DISTRICT_YEARLY_DETAILS = "districtYearlyDetails";
  @SerializedName(SERIALIZED_NAME_DISTRICT_YEARLY_DETAILS)
  private List<APILEAYearlyDetail> districtYearlyDetails = new ArrayList<>();

  public static final String SERIALIZED_NAME_HAS_BOUNDARY = "hasBoundary";
  @SerializedName(SERIALIZED_NAME_HAS_BOUNDARY)
  private Boolean hasBoundary;

  public static final String SERIALIZED_NAME_HIGH_GRADE = "highGrade";
  @SerializedName(SERIALIZED_NAME_HIGH_GRADE)
  private String highGrade;

  public static final String SERIALIZED_NAME_IS_WITHIN_BOUNDARY = "isWithinBoundary";
  @SerializedName(SERIALIZED_NAME_IS_WITHIN_BOUNDARY)
  private Boolean isWithinBoundary;

  public static final String SERIALIZED_NAME_LOCATION_IS_WITHIN_BOUNDARY = "locationIsWithinBoundary";
  @SerializedName(SERIALIZED_NAME_LOCATION_IS_WITHIN_BOUNDARY)
  private Boolean locationIsWithinBoundary;

  public static final String SERIALIZED_NAME_LOW_GRADE = "lowGrade";
  @SerializedName(SERIALIZED_NAME_LOW_GRADE)
  private String lowGrade;

  public static final String SERIALIZED_NAME_NUMBER_ALTERNATIVE_SCHOOLS = "numberAlternativeSchools";
  @SerializedName(SERIALIZED_NAME_NUMBER_ALTERNATIVE_SCHOOLS)
  private Integer numberAlternativeSchools;

  public static final String SERIALIZED_NAME_NUMBER_HIGH_SCHOOLS = "numberHighSchools";
  @SerializedName(SERIALIZED_NAME_NUMBER_HIGH_SCHOOLS)
  private Integer numberHighSchools;

  public static final String SERIALIZED_NAME_NUMBER_MIDDLE_SCHOOLS = "numberMiddleSchools";
  @SerializedName(SERIALIZED_NAME_NUMBER_MIDDLE_SCHOOLS)
  private Integer numberMiddleSchools;

  public static final String SERIALIZED_NAME_NUMBER_PRIMARY_SCHOOLS = "numberPrimarySchools";
  @SerializedName(SERIALIZED_NAME_NUMBER_PRIMARY_SCHOOLS)
  private Integer numberPrimarySchools;

  public static final String SERIALIZED_NAME_NUMBER_TOTAL_SCHOOLS = "numberTotalSchools";
  @SerializedName(SERIALIZED_NAME_NUMBER_TOTAL_SCHOOLS)
  private Integer numberTotalSchools;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_RANK_HISTORY = "rankHistory";
  @SerializedName(SERIALIZED_NAME_RANK_HISTORY)
  private List<APILEARankHistory> rankHistory = new ArrayList<>();

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public APIDistrict1Summary() {
  }

  public APIDistrict1Summary address(APILocation address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public APILocation getAddress() {
    return address;
  }

  public void setAddress(APILocation address) {
    this.address = address;
  }


  public APIDistrict1Summary county(APICounty county) {
    this.county = county;
    return this;
  }

  /**
   * Get county
   * @return county
   */
  @javax.annotation.Nullable
  public APICounty getCounty() {
    return county;
  }

  public void setCounty(APICounty county) {
    this.county = county;
  }


  public APIDistrict1Summary distance(Double distance) {
    this.distance = distance;
    return this;
  }

  /**
   * Distance from nearLatitude/nearLongitude (if supplied)
   * @return distance
   */
  @javax.annotation.Nullable
  public Double getDistance() {
    return distance;
  }

  public void setDistance(Double distance) {
    this.distance = distance;
  }


  public APIDistrict1Summary districtID(String districtID) {
    this.districtID = districtID;
    return this;
  }

  /**
   * SchoolDigger District ID Number (7 digits). Use /districts/{districtID} to retrieve the entire district record
   * @return districtID
   */
  @javax.annotation.Nullable
  public String getDistrictID() {
    return districtID;
  }

  public void setDistrictID(String districtID) {
    this.districtID = districtID;
  }


  public APIDistrict1Summary districtName(String districtName) {
    this.districtName = districtName;
    return this;
  }

  /**
   * District name
   * @return districtName
   */
  @javax.annotation.Nullable
  public String getDistrictName() {
    return districtName;
  }

  public void setDistrictName(String districtName) {
    this.districtName = districtName;
  }


  public APIDistrict1Summary districtYearlyDetails(List<APILEAYearlyDetail> districtYearlyDetails) {
    this.districtYearlyDetails = districtYearlyDetails;
    return this;
  }

  public APIDistrict1Summary addDistrictYearlyDetailsItem(APILEAYearlyDetail districtYearlyDetailsItem) {
    if (this.districtYearlyDetails == null) {
      this.districtYearlyDetails = new ArrayList<>();
    }
    this.districtYearlyDetails.add(districtYearlyDetailsItem);
    return this;
  }

  /**
   * District yearly metrics
   * @return districtYearlyDetails
   */
  @javax.annotation.Nullable
  public List<APILEAYearlyDetail> getDistrictYearlyDetails() {
    return districtYearlyDetails;
  }

  public void setDistrictYearlyDetails(List<APILEAYearlyDetail> districtYearlyDetails) {
    this.districtYearlyDetails = districtYearlyDetails;
  }


  public APIDistrict1Summary hasBoundary(Boolean hasBoundary) {
    this.hasBoundary = hasBoundary;
    return this;
  }

  /**
   * Indicates that an attendance boundary is available for this district. (To retrieve, look up district with /districts/{id})
   * @return hasBoundary
   */
  @javax.annotation.Nullable
  public Boolean getHasBoundary() {
    return hasBoundary;
  }

  public void setHasBoundary(Boolean hasBoundary) {
    this.hasBoundary = hasBoundary;
  }


  public APIDistrict1Summary highGrade(String highGrade) {
    this.highGrade = highGrade;
    return this;
  }

  /**
   * The high grade served by this district
   * @return highGrade
   */
  @javax.annotation.Nullable
  public String getHighGrade() {
    return highGrade;
  }

  public void setHighGrade(String highGrade) {
    this.highGrade = highGrade;
  }


  public APIDistrict1Summary isWithinBoundary(Boolean isWithinBoundary) {
    this.isWithinBoundary = isWithinBoundary;
    return this;
  }

  /**
   * Indicates whether this district&#39;s boundary includes the specified location from nearLatitude/nearLongitude
   * @return isWithinBoundary
   */
  @javax.annotation.Nullable
  public Boolean getIsWithinBoundary() {
    return isWithinBoundary;
  }

  public void setIsWithinBoundary(Boolean isWithinBoundary) {
    this.isWithinBoundary = isWithinBoundary;
  }


  public APIDistrict1Summary locationIsWithinBoundary(Boolean locationIsWithinBoundary) {
    this.locationIsWithinBoundary = locationIsWithinBoundary;
    return this;
  }

  /**
   * Indicates whether this school&#39;s boundary includes the specified location from nearLatitude/nearLongitude or boundaryAddress (Enterprise API level)
   * @return locationIsWithinBoundary
   */
  @javax.annotation.Nullable
  public Boolean getLocationIsWithinBoundary() {
    return locationIsWithinBoundary;
  }

  public void setLocationIsWithinBoundary(Boolean locationIsWithinBoundary) {
    this.locationIsWithinBoundary = locationIsWithinBoundary;
  }


  public APIDistrict1Summary lowGrade(String lowGrade) {
    this.lowGrade = lowGrade;
    return this;
  }

  /**
   * The low grade served by this district (PK &#x3D; Prekindergarten, K &#x3D; Kindergarten)
   * @return lowGrade
   */
  @javax.annotation.Nullable
  public String getLowGrade() {
    return lowGrade;
  }

  public void setLowGrade(String lowGrade) {
    this.lowGrade = lowGrade;
  }


  public APIDistrict1Summary numberAlternativeSchools(Integer numberAlternativeSchools) {
    this.numberAlternativeSchools = numberAlternativeSchools;
    return this;
  }

  /**
   * Count of schools designated as other/alternative schools
   * @return numberAlternativeSchools
   */
  @javax.annotation.Nullable
  public Integer getNumberAlternativeSchools() {
    return numberAlternativeSchools;
  }

  public void setNumberAlternativeSchools(Integer numberAlternativeSchools) {
    this.numberAlternativeSchools = numberAlternativeSchools;
  }


  public APIDistrict1Summary numberHighSchools(Integer numberHighSchools) {
    this.numberHighSchools = numberHighSchools;
    return this;
  }

  /**
   * Count of schools designated as high schools
   * @return numberHighSchools
   */
  @javax.annotation.Nullable
  public Integer getNumberHighSchools() {
    return numberHighSchools;
  }

  public void setNumberHighSchools(Integer numberHighSchools) {
    this.numberHighSchools = numberHighSchools;
  }


  public APIDistrict1Summary numberMiddleSchools(Integer numberMiddleSchools) {
    this.numberMiddleSchools = numberMiddleSchools;
    return this;
  }

  /**
   * Count of schools designated as middle schools
   * @return numberMiddleSchools
   */
  @javax.annotation.Nullable
  public Integer getNumberMiddleSchools() {
    return numberMiddleSchools;
  }

  public void setNumberMiddleSchools(Integer numberMiddleSchools) {
    this.numberMiddleSchools = numberMiddleSchools;
  }


  public APIDistrict1Summary numberPrimarySchools(Integer numberPrimarySchools) {
    this.numberPrimarySchools = numberPrimarySchools;
    return this;
  }

  /**
   * Count of schools designated as primary schools
   * @return numberPrimarySchools
   */
  @javax.annotation.Nullable
  public Integer getNumberPrimarySchools() {
    return numberPrimarySchools;
  }

  public void setNumberPrimarySchools(Integer numberPrimarySchools) {
    this.numberPrimarySchools = numberPrimarySchools;
  }


  public APIDistrict1Summary numberTotalSchools(Integer numberTotalSchools) {
    this.numberTotalSchools = numberTotalSchools;
    return this;
  }

  /**
   * Count of schools in the district
   * @return numberTotalSchools
   */
  @javax.annotation.Nullable
  public Integer getNumberTotalSchools() {
    return numberTotalSchools;
  }

  public void setNumberTotalSchools(Integer numberTotalSchools) {
    this.numberTotalSchools = numberTotalSchools;
  }


  public APIDistrict1Summary phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * District phone number
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public APIDistrict1Summary rankHistory(List<APILEARankHistory> rankHistory) {
    this.rankHistory = rankHistory;
    return this;
  }

  public APIDistrict1Summary addRankHistoryItem(APILEARankHistory rankHistoryItem) {
    if (this.rankHistory == null) {
      this.rankHistory = new ArrayList<>();
    }
    this.rankHistory.add(rankHistoryItem);
    return this;
  }

  /**
   * SchoolDigger yearly rank history of the district
   * @return rankHistory
   */
  @javax.annotation.Nullable
  public List<APILEARankHistory> getRankHistory() {
    return rankHistory;
  }

  public void setRankHistory(List<APILEARankHistory> rankHistory) {
    this.rankHistory = rankHistory;
  }


  public APIDistrict1Summary url(String url) {
    this.url = url;
    return this;
  }

  /**
   * SchoolDigger URL for this district
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIDistrict1Summary apIDistrict1Summary = (APIDistrict1Summary) o;
    return Objects.equals(this.address, apIDistrict1Summary.address) &&
        Objects.equals(this.county, apIDistrict1Summary.county) &&
        Objects.equals(this.distance, apIDistrict1Summary.distance) &&
        Objects.equals(this.districtID, apIDistrict1Summary.districtID) &&
        Objects.equals(this.districtName, apIDistrict1Summary.districtName) &&
        Objects.equals(this.districtYearlyDetails, apIDistrict1Summary.districtYearlyDetails) &&
        Objects.equals(this.hasBoundary, apIDistrict1Summary.hasBoundary) &&
        Objects.equals(this.highGrade, apIDistrict1Summary.highGrade) &&
        Objects.equals(this.isWithinBoundary, apIDistrict1Summary.isWithinBoundary) &&
        Objects.equals(this.locationIsWithinBoundary, apIDistrict1Summary.locationIsWithinBoundary) &&
        Objects.equals(this.lowGrade, apIDistrict1Summary.lowGrade) &&
        Objects.equals(this.numberAlternativeSchools, apIDistrict1Summary.numberAlternativeSchools) &&
        Objects.equals(this.numberHighSchools, apIDistrict1Summary.numberHighSchools) &&
        Objects.equals(this.numberMiddleSchools, apIDistrict1Summary.numberMiddleSchools) &&
        Objects.equals(this.numberPrimarySchools, apIDistrict1Summary.numberPrimarySchools) &&
        Objects.equals(this.numberTotalSchools, apIDistrict1Summary.numberTotalSchools) &&
        Objects.equals(this.phone, apIDistrict1Summary.phone) &&
        Objects.equals(this.rankHistory, apIDistrict1Summary.rankHistory) &&
        Objects.equals(this.url, apIDistrict1Summary.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, county, distance, districtID, districtName, districtYearlyDetails, hasBoundary, highGrade, isWithinBoundary, locationIsWithinBoundary, lowGrade, numberAlternativeSchools, numberHighSchools, numberMiddleSchools, numberPrimarySchools, numberTotalSchools, phone, rankHistory, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIDistrict1Summary {\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    county: ").append(toIndentedString(county)).append("\n");
    sb.append("    distance: ").append(toIndentedString(distance)).append("\n");
    sb.append("    districtID: ").append(toIndentedString(districtID)).append("\n");
    sb.append("    districtName: ").append(toIndentedString(districtName)).append("\n");
    sb.append("    districtYearlyDetails: ").append(toIndentedString(districtYearlyDetails)).append("\n");
    sb.append("    hasBoundary: ").append(toIndentedString(hasBoundary)).append("\n");
    sb.append("    highGrade: ").append(toIndentedString(highGrade)).append("\n");
    sb.append("    isWithinBoundary: ").append(toIndentedString(isWithinBoundary)).append("\n");
    sb.append("    locationIsWithinBoundary: ").append(toIndentedString(locationIsWithinBoundary)).append("\n");
    sb.append("    lowGrade: ").append(toIndentedString(lowGrade)).append("\n");
    sb.append("    numberAlternativeSchools: ").append(toIndentedString(numberAlternativeSchools)).append("\n");
    sb.append("    numberHighSchools: ").append(toIndentedString(numberHighSchools)).append("\n");
    sb.append("    numberMiddleSchools: ").append(toIndentedString(numberMiddleSchools)).append("\n");
    sb.append("    numberPrimarySchools: ").append(toIndentedString(numberPrimarySchools)).append("\n");
    sb.append("    numberTotalSchools: ").append(toIndentedString(numberTotalSchools)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    rankHistory: ").append(toIndentedString(rankHistory)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("address");
    openapiFields.add("county");
    openapiFields.add("distance");
    openapiFields.add("districtID");
    openapiFields.add("districtName");
    openapiFields.add("districtYearlyDetails");
    openapiFields.add("hasBoundary");
    openapiFields.add("highGrade");
    openapiFields.add("isWithinBoundary");
    openapiFields.add("locationIsWithinBoundary");
    openapiFields.add("lowGrade");
    openapiFields.add("numberAlternativeSchools");
    openapiFields.add("numberHighSchools");
    openapiFields.add("numberMiddleSchools");
    openapiFields.add("numberPrimarySchools");
    openapiFields.add("numberTotalSchools");
    openapiFields.add("phone");
    openapiFields.add("rankHistory");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APIDistrict1Summary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APIDistrict1Summary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIDistrict1Summary is not found in the empty JSON string", APIDistrict1Summary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APIDistrict1Summary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIDistrict1Summary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `address`
      if (jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) {
        APILocation.validateJsonElement(jsonObj.get("address"));
      }
      // validate the optional field `county`
      if (jsonObj.get("county") != null && !jsonObj.get("county").isJsonNull()) {
        APICounty.validateJsonElement(jsonObj.get("county"));
      }
      if ((jsonObj.get("districtID") != null && !jsonObj.get("districtID").isJsonNull()) && !jsonObj.get("districtID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `districtID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("districtID").toString()));
      }
      if ((jsonObj.get("districtName") != null && !jsonObj.get("districtName").isJsonNull()) && !jsonObj.get("districtName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `districtName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("districtName").toString()));
      }
      if (jsonObj.get("districtYearlyDetails") != null && !jsonObj.get("districtYearlyDetails").isJsonNull()) {
        JsonArray jsonArraydistrictYearlyDetails = jsonObj.getAsJsonArray("districtYearlyDetails");
        if (jsonArraydistrictYearlyDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("districtYearlyDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `districtYearlyDetails` to be an array in the JSON string but got `%s`", jsonObj.get("districtYearlyDetails").toString()));
          }

          // validate the optional field `districtYearlyDetails` (array)
          for (int i = 0; i < jsonArraydistrictYearlyDetails.size(); i++) {
            APILEAYearlyDetail.validateJsonElement(jsonArraydistrictYearlyDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("highGrade") != null && !jsonObj.get("highGrade").isJsonNull()) && !jsonObj.get("highGrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `highGrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("highGrade").toString()));
      }
      if ((jsonObj.get("lowGrade") != null && !jsonObj.get("lowGrade").isJsonNull()) && !jsonObj.get("lowGrade").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lowGrade` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lowGrade").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if (jsonObj.get("rankHistory") != null && !jsonObj.get("rankHistory").isJsonNull()) {
        JsonArray jsonArrayrankHistory = jsonObj.getAsJsonArray("rankHistory");
        if (jsonArrayrankHistory != null) {
          // ensure the json data is an array
          if (!jsonObj.get("rankHistory").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `rankHistory` to be an array in the JSON string but got `%s`", jsonObj.get("rankHistory").toString()));
          }

          // validate the optional field `rankHistory` (array)
          for (int i = 0; i < jsonArrayrankHistory.size(); i++) {
            APILEARankHistory.validateJsonElement(jsonArrayrankHistory.get(i));
          };
        }
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIDistrict1Summary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIDistrict1Summary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIDistrict1Summary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIDistrict1Summary.class));

       return (TypeAdapter<T>) new TypeAdapter<APIDistrict1Summary>() {
           @Override
           public void write(JsonWriter out, APIDistrict1Summary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIDistrict1Summary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APIDistrict1Summary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APIDistrict1Summary
   * @throws IOException if the JSON string is invalid with respect to APIDistrict1Summary
   */
  public static APIDistrict1Summary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIDistrict1Summary.class);
  }

  /**
   * Convert an instance of APIDistrict1Summary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

