# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APITestScore(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mean_scaled_score: float=None, num_tier1: int=None, num_tier2: int=None, num_tier3: int=None, num_tier4: int=None, num_tier5: int=None, number_met_standard: float=None, percent_met_standard: float=None, percent_tier1: float=None, percent_tier2: float=None, percent_tier3: float=None, percent_tier4: float=None, percent_tier5: float=None, students_eligible: int=None, students_tested: int=None):
        """APITestScore - a model defined in OpenAPI

        :param mean_scaled_score: The mean_scaled_score of this APITestScore.
        :param num_tier1: The num_tier1 of this APITestScore.
        :param num_tier2: The num_tier2 of this APITestScore.
        :param num_tier3: The num_tier3 of this APITestScore.
        :param num_tier4: The num_tier4 of this APITestScore.
        :param num_tier5: The num_tier5 of this APITestScore.
        :param number_met_standard: The number_met_standard of this APITestScore.
        :param percent_met_standard: The percent_met_standard of this APITestScore.
        :param percent_tier1: The percent_tier1 of this APITestScore.
        :param percent_tier2: The percent_tier2 of this APITestScore.
        :param percent_tier3: The percent_tier3 of this APITestScore.
        :param percent_tier4: The percent_tier4 of this APITestScore.
        :param percent_tier5: The percent_tier5 of this APITestScore.
        :param students_eligible: The students_eligible of this APITestScore.
        :param students_tested: The students_tested of this APITestScore.
        """
        self.openapi_types = {
            'mean_scaled_score': float,
            'num_tier1': int,
            'num_tier2': int,
            'num_tier3': int,
            'num_tier4': int,
            'num_tier5': int,
            'number_met_standard': float,
            'percent_met_standard': float,
            'percent_tier1': float,
            'percent_tier2': float,
            'percent_tier3': float,
            'percent_tier4': float,
            'percent_tier5': float,
            'students_eligible': int,
            'students_tested': int
        }

        self.attribute_map = {
            'mean_scaled_score': 'meanScaledScore',
            'num_tier1': 'numTier1',
            'num_tier2': 'numTier2',
            'num_tier3': 'numTier3',
            'num_tier4': 'numTier4',
            'num_tier5': 'numTier5',
            'number_met_standard': 'numberMetStandard',
            'percent_met_standard': 'percentMetStandard',
            'percent_tier1': 'percentTier1',
            'percent_tier2': 'percentTier2',
            'percent_tier3': 'percentTier3',
            'percent_tier4': 'percentTier4',
            'percent_tier5': 'percentTier5',
            'students_eligible': 'studentsEligible',
            'students_tested': 'studentsTested'
        }

        self._mean_scaled_score = mean_scaled_score
        self._num_tier1 = num_tier1
        self._num_tier2 = num_tier2
        self._num_tier3 = num_tier3
        self._num_tier4 = num_tier4
        self._num_tier5 = num_tier5
        self._number_met_standard = number_met_standard
        self._percent_met_standard = percent_met_standard
        self._percent_tier1 = percent_tier1
        self._percent_tier2 = percent_tier2
        self._percent_tier3 = percent_tier3
        self._percent_tier4 = percent_tier4
        self._percent_tier5 = percent_tier5
        self._students_eligible = students_eligible
        self._students_tested = students_tested

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APITestScore':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APITestScore of this APITestScore.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mean_scaled_score(self):
        """Gets the mean_scaled_score of this APITestScore.

        Mean scale score

        :return: The mean_scaled_score of this APITestScore.
        :rtype: float
        """
        return self._mean_scaled_score

    @mean_scaled_score.setter
    def mean_scaled_score(self, mean_scaled_score):
        """Sets the mean_scaled_score of this APITestScore.

        Mean scale score

        :param mean_scaled_score: The mean_scaled_score of this APITestScore.
        :type mean_scaled_score: float
        """

        self._mean_scaled_score = mean_scaled_score

    @property
    def num_tier1(self):
        """Gets the num_tier1 of this APITestScore.

        Count of students performing at tier 1 (Enterprise API level only)

        :return: The num_tier1 of this APITestScore.
        :rtype: int
        """
        return self._num_tier1

    @num_tier1.setter
    def num_tier1(self, num_tier1):
        """Sets the num_tier1 of this APITestScore.

        Count of students performing at tier 1 (Enterprise API level only)

        :param num_tier1: The num_tier1 of this APITestScore.
        :type num_tier1: int
        """

        self._num_tier1 = num_tier1

    @property
    def num_tier2(self):
        """Gets the num_tier2 of this APITestScore.

        Count of students performing at tier 2 (Enterprise API level only)

        :return: The num_tier2 of this APITestScore.
        :rtype: int
        """
        return self._num_tier2

    @num_tier2.setter
    def num_tier2(self, num_tier2):
        """Sets the num_tier2 of this APITestScore.

        Count of students performing at tier 2 (Enterprise API level only)

        :param num_tier2: The num_tier2 of this APITestScore.
        :type num_tier2: int
        """

        self._num_tier2 = num_tier2

    @property
    def num_tier3(self):
        """Gets the num_tier3 of this APITestScore.

        Count of students performing at tier 3 (Enterprise API level only)

        :return: The num_tier3 of this APITestScore.
        :rtype: int
        """
        return self._num_tier3

    @num_tier3.setter
    def num_tier3(self, num_tier3):
        """Sets the num_tier3 of this APITestScore.

        Count of students performing at tier 3 (Enterprise API level only)

        :param num_tier3: The num_tier3 of this APITestScore.
        :type num_tier3: int
        """

        self._num_tier3 = num_tier3

    @property
    def num_tier4(self):
        """Gets the num_tier4 of this APITestScore.

        Count of students performing at tier 4 (Enterprise API level only)

        :return: The num_tier4 of this APITestScore.
        :rtype: int
        """
        return self._num_tier4

    @num_tier4.setter
    def num_tier4(self, num_tier4):
        """Sets the num_tier4 of this APITestScore.

        Count of students performing at tier 4 (Enterprise API level only)

        :param num_tier4: The num_tier4 of this APITestScore.
        :type num_tier4: int
        """

        self._num_tier4 = num_tier4

    @property
    def num_tier5(self):
        """Gets the num_tier5 of this APITestScore.

        Count of students performing at tier 5 (Enterprise API level only)

        :return: The num_tier5 of this APITestScore.
        :rtype: int
        """
        return self._num_tier5

    @num_tier5.setter
    def num_tier5(self, num_tier5):
        """Sets the num_tier5 of this APITestScore.

        Count of students performing at tier 5 (Enterprise API level only)

        :param num_tier5: The num_tier5 of this APITestScore.
        :type num_tier5: int
        """

        self._num_tier5 = num_tier5

    @property
    def number_met_standard(self):
        """Gets the number_met_standard of this APITestScore.

        Count of students meeting state standard

        :return: The number_met_standard of this APITestScore.
        :rtype: float
        """
        return self._number_met_standard

    @number_met_standard.setter
    def number_met_standard(self, number_met_standard):
        """Sets the number_met_standard of this APITestScore.

        Count of students meeting state standard

        :param number_met_standard: The number_met_standard of this APITestScore.
        :type number_met_standard: float
        """

        self._number_met_standard = number_met_standard

    @property
    def percent_met_standard(self):
        """Gets the percent_met_standard of this APITestScore.

        Percent of students meeting state standard

        :return: The percent_met_standard of this APITestScore.
        :rtype: float
        """
        return self._percent_met_standard

    @percent_met_standard.setter
    def percent_met_standard(self, percent_met_standard):
        """Sets the percent_met_standard of this APITestScore.

        Percent of students meeting state standard

        :param percent_met_standard: The percent_met_standard of this APITestScore.
        :type percent_met_standard: float
        """

        self._percent_met_standard = percent_met_standard

    @property
    def percent_tier1(self):
        """Gets the percent_tier1 of this APITestScore.

        Percent of students performing at tier 1 (Enterprise API level only)

        :return: The percent_tier1 of this APITestScore.
        :rtype: float
        """
        return self._percent_tier1

    @percent_tier1.setter
    def percent_tier1(self, percent_tier1):
        """Sets the percent_tier1 of this APITestScore.

        Percent of students performing at tier 1 (Enterprise API level only)

        :param percent_tier1: The percent_tier1 of this APITestScore.
        :type percent_tier1: float
        """

        self._percent_tier1 = percent_tier1

    @property
    def percent_tier2(self):
        """Gets the percent_tier2 of this APITestScore.

        Percent of students performing at tier 2 (Enterprise API level only)

        :return: The percent_tier2 of this APITestScore.
        :rtype: float
        """
        return self._percent_tier2

    @percent_tier2.setter
    def percent_tier2(self, percent_tier2):
        """Sets the percent_tier2 of this APITestScore.

        Percent of students performing at tier 2 (Enterprise API level only)

        :param percent_tier2: The percent_tier2 of this APITestScore.
        :type percent_tier2: float
        """

        self._percent_tier2 = percent_tier2

    @property
    def percent_tier3(self):
        """Gets the percent_tier3 of this APITestScore.

        Percent of students performing at tier 3 (Enterprise API level only)

        :return: The percent_tier3 of this APITestScore.
        :rtype: float
        """
        return self._percent_tier3

    @percent_tier3.setter
    def percent_tier3(self, percent_tier3):
        """Sets the percent_tier3 of this APITestScore.

        Percent of students performing at tier 3 (Enterprise API level only)

        :param percent_tier3: The percent_tier3 of this APITestScore.
        :type percent_tier3: float
        """

        self._percent_tier3 = percent_tier3

    @property
    def percent_tier4(self):
        """Gets the percent_tier4 of this APITestScore.

        Percent of students performing at tier 4 (Enterprise API level only)

        :return: The percent_tier4 of this APITestScore.
        :rtype: float
        """
        return self._percent_tier4

    @percent_tier4.setter
    def percent_tier4(self, percent_tier4):
        """Sets the percent_tier4 of this APITestScore.

        Percent of students performing at tier 4 (Enterprise API level only)

        :param percent_tier4: The percent_tier4 of this APITestScore.
        :type percent_tier4: float
        """

        self._percent_tier4 = percent_tier4

    @property
    def percent_tier5(self):
        """Gets the percent_tier5 of this APITestScore.

        Percent of students performing at tier 5 (Enterprise API level only)

        :return: The percent_tier5 of this APITestScore.
        :rtype: float
        """
        return self._percent_tier5

    @percent_tier5.setter
    def percent_tier5(self, percent_tier5):
        """Sets the percent_tier5 of this APITestScore.

        Percent of students performing at tier 5 (Enterprise API level only)

        :param percent_tier5: The percent_tier5 of this APITestScore.
        :type percent_tier5: float
        """

        self._percent_tier5 = percent_tier5

    @property
    def students_eligible(self):
        """Gets the students_eligible of this APITestScore.

        Count of students eligible to take test

        :return: The students_eligible of this APITestScore.
        :rtype: int
        """
        return self._students_eligible

    @students_eligible.setter
    def students_eligible(self, students_eligible):
        """Sets the students_eligible of this APITestScore.

        Count of students eligible to take test

        :param students_eligible: The students_eligible of this APITestScore.
        :type students_eligible: int
        """

        self._students_eligible = students_eligible

    @property
    def students_tested(self):
        """Gets the students_tested of this APITestScore.

        Count of students tested

        :return: The students_tested of this APITestScore.
        :rtype: int
        """
        return self._students_tested

    @students_tested.setter
    def students_tested(self, students_tested):
        """Sets the students_tested of this APITestScore.

        Count of students tested

        :param students_tested: The students_tested of this APITestScore.
        :type students_tested: int
        """

        self._students_tested = students_tested
