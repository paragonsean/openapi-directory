# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_lat_long import APILatLong
from openapi_server import util


class APILocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, city_url: str=None, html: str=None, lat_long: APILatLong=None, state: str=None, state_full: str=None, street: str=None, zip: str=None, zip4: str=None, zip_url: str=None):
        """APILocation - a model defined in OpenAPI

        :param city: The city of this APILocation.
        :param city_url: The city_url of this APILocation.
        :param html: The html of this APILocation.
        :param lat_long: The lat_long of this APILocation.
        :param state: The state of this APILocation.
        :param state_full: The state_full of this APILocation.
        :param street: The street of this APILocation.
        :param zip: The zip of this APILocation.
        :param zip4: The zip4 of this APILocation.
        :param zip_url: The zip_url of this APILocation.
        """
        self.openapi_types = {
            'city': str,
            'city_url': str,
            'html': str,
            'lat_long': APILatLong,
            'state': str,
            'state_full': str,
            'street': str,
            'zip': str,
            'zip4': str,
            'zip_url': str
        }

        self.attribute_map = {
            'city': 'city',
            'city_url': 'cityURL',
            'html': 'html',
            'lat_long': 'latLong',
            'state': 'state',
            'state_full': 'stateFull',
            'street': 'street',
            'zip': 'zip',
            'zip4': 'zip4',
            'zip_url': 'zipURL'
        }

        self._city = city
        self._city_url = city_url
        self._html = html
        self._lat_long = lat_long
        self._state = state
        self._state_full = state_full
        self._street = street
        self._zip = zip
        self._zip4 = zip4
        self._zip_url = zip_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APILocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APILocation of this APILocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this APILocation.


        :return: The city of this APILocation.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this APILocation.


        :param city: The city of this APILocation.
        :type city: str
        """

        self._city = city

    @property
    def city_url(self):
        """Gets the city_url of this APILocation.

        SchoolDigger URL for schools in this city

        :return: The city_url of this APILocation.
        :rtype: str
        """
        return self._city_url

    @city_url.setter
    def city_url(self, city_url):
        """Sets the city_url of this APILocation.

        SchoolDigger URL for schools in this city

        :param city_url: The city_url of this APILocation.
        :type city_url: str
        """

        self._city_url = city_url

    @property
    def html(self):
        """Gets the html of this APILocation.

        HTML formatted address

        :return: The html of this APILocation.
        :rtype: str
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this APILocation.

        HTML formatted address

        :param html: The html of this APILocation.
        :type html: str
        """

        self._html = html

    @property
    def lat_long(self):
        """Gets the lat_long of this APILocation.


        :return: The lat_long of this APILocation.
        :rtype: APILatLong
        """
        return self._lat_long

    @lat_long.setter
    def lat_long(self, lat_long):
        """Sets the lat_long of this APILocation.


        :param lat_long: The lat_long of this APILocation.
        :type lat_long: APILatLong
        """

        self._lat_long = lat_long

    @property
    def state(self):
        """Gets the state of this APILocation.


        :return: The state of this APILocation.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this APILocation.


        :param state: The state of this APILocation.
        :type state: str
        """

        self._state = state

    @property
    def state_full(self):
        """Gets the state_full of this APILocation.

        Full state name (WA = Washington)

        :return: The state_full of this APILocation.
        :rtype: str
        """
        return self._state_full

    @state_full.setter
    def state_full(self, state_full):
        """Sets the state_full of this APILocation.

        Full state name (WA = Washington)

        :param state_full: The state_full of this APILocation.
        :type state_full: str
        """

        self._state_full = state_full

    @property
    def street(self):
        """Gets the street of this APILocation.


        :return: The street of this APILocation.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this APILocation.


        :param street: The street of this APILocation.
        :type street: str
        """

        self._street = street

    @property
    def zip(self):
        """Gets the zip of this APILocation.


        :return: The zip of this APILocation.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this APILocation.


        :param zip: The zip of this APILocation.
        :type zip: str
        """

        self._zip = zip

    @property
    def zip4(self):
        """Gets the zip4 of this APILocation.


        :return: The zip4 of this APILocation.
        :rtype: str
        """
        return self._zip4

    @zip4.setter
    def zip4(self, zip4):
        """Sets the zip4 of this APILocation.


        :param zip4: The zip4 of this APILocation.
        :type zip4: str
        """

        self._zip4 = zip4

    @property
    def zip_url(self):
        """Gets the zip_url of this APILocation.

        SchoolDigger URL for schools in this zip code

        :return: The zip_url of this APILocation.
        :rtype: str
        """
        return self._zip_url

    @zip_url.setter
    def zip_url(self, zip_url):
        """Sets the zip_url of this APILocation.

        SchoolDigger URL for schools in this zip code

        :param zip_url: The zip_url of this APILocation.
        :type zip_url: str
        """

        self._zip_url = zip_url
