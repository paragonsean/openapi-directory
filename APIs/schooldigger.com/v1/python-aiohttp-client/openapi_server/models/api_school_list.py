# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_school1_summary import APISchool1Summary
from openapi_server import util


class APISchoolList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_of_pages: int=None, number_of_schools: int=None, school_list: List[APISchool1Summary]=None):
        """APISchoolList - a model defined in OpenAPI

        :param number_of_pages: The number_of_pages of this APISchoolList.
        :param number_of_schools: The number_of_schools of this APISchoolList.
        :param school_list: The school_list of this APISchoolList.
        """
        self.openapi_types = {
            'number_of_pages': int,
            'number_of_schools': int,
            'school_list': List[APISchool1Summary]
        }

        self.attribute_map = {
            'number_of_pages': 'numberOfPages',
            'number_of_schools': 'numberOfSchools',
            'school_list': 'schoolList'
        }

        self._number_of_pages = number_of_pages
        self._number_of_schools = number_of_schools
        self._school_list = school_list

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APISchoolList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The APISchoolList of this APISchoolList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_of_pages(self):
        """Gets the number_of_pages of this APISchoolList.

        The total count of pages in your query list based on given per_page value

        :return: The number_of_pages of this APISchoolList.
        :rtype: int
        """
        return self._number_of_pages

    @number_of_pages.setter
    def number_of_pages(self, number_of_pages):
        """Sets the number_of_pages of this APISchoolList.

        The total count of pages in your query list based on given per_page value

        :param number_of_pages: The number_of_pages of this APISchoolList.
        :type number_of_pages: int
        """

        self._number_of_pages = number_of_pages

    @property
    def number_of_schools(self):
        """Gets the number_of_schools of this APISchoolList.

        The total count of schools that match your query

        :return: The number_of_schools of this APISchoolList.
        :rtype: int
        """
        return self._number_of_schools

    @number_of_schools.setter
    def number_of_schools(self, number_of_schools):
        """Sets the number_of_schools of this APISchoolList.

        The total count of schools that match your query

        :param number_of_schools: The number_of_schools of this APISchoolList.
        :type number_of_schools: int
        """

        self._number_of_schools = number_of_schools

    @property
    def school_list(self):
        """Gets the school_list of this APISchoolList.


        :return: The school_list of this APISchoolList.
        :rtype: List[APISchool1Summary]
        """
        return self._school_list

    @school_list.setter
    def school_list(self, school_list):
        """Sets the school_list of this APISchoolList.


        :param school_list: The school_list of this APISchoolList.
        :type school_list: List[APISchool1Summary]
        """

        self._school_list = school_list
