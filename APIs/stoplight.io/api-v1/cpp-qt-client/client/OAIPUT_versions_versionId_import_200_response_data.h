/**
 * Stoplight
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPUT_versions_versionId_import_200_response_data.h
 *
 * 
 */

#ifndef OAIPUT_versions_versionId_import_200_response_data_H
#define OAIPUT_versions_versionId_import_200_response_data_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPUT_versions_versionId_import_200_response_data : public OAIObject {
public:
    OAIPUT_versions_versionId_import_200_response_data();
    OAIPUT_versions_versionId_import_200_response_data(QString json);
    ~OAIPUT_versions_versionId_import_200_response_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getEndpointCount() const;
    void setEndpointCount(const double &endpoint_count);
    bool is_endpoint_count_Set() const;
    bool is_endpoint_count_Valid() const;

    QString getFormat() const;
    void setFormat(const QString &format);
    bool is_format_Set() const;
    bool is_format_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    double getSchemaCount() const;
    void setSchemaCount(const double &schema_count);
    bool is_schema_count_Set() const;
    bool is_schema_count_Valid() const;

    double getTestCount() const;
    void setTestCount(const double &test_count);
    bool is_test_count_Set() const;
    bool is_test_count_Valid() const;

    double getTextSectionCount() const;
    void setTextSectionCount(const double &text_section_count);
    bool is_text_section_count_Set() const;
    bool is_text_section_count_Valid() const;

    double getTraitCount() const;
    void setTraitCount(const double &trait_count);
    bool is_trait_count_Set() const;
    bool is_trait_count_Valid() const;

    QString getVersionId() const;
    void setVersionId(const QString &version_id);
    bool is_version_id_Set() const;
    bool is_version_id_Valid() const;

    QString getWorkspaceId() const;
    void setWorkspaceId(const QString &workspace_id);
    bool is_workspace_id_Set() const;
    bool is_workspace_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_endpoint_count;
    bool m_endpoint_count_isSet;
    bool m_endpoint_count_isValid;

    QString m_format;
    bool m_format_isSet;
    bool m_format_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    double m_schema_count;
    bool m_schema_count_isSet;
    bool m_schema_count_isValid;

    double m_test_count;
    bool m_test_count_isSet;
    bool m_test_count_isValid;

    double m_text_section_count;
    bool m_text_section_count_isSet;
    bool m_text_section_count_isValid;

    double m_trait_count;
    bool m_trait_count_isSet;
    bool m_trait_count_isValid;

    QString m_version_id;
    bool m_version_id_isSet;
    bool m_version_id_isValid;

    QString m_workspace_id;
    bool m_workspace_id_isSet;
    bool m_workspace_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPUT_versions_versionId_import_200_response_data)

#endif // OAIPUT_versions_versionId_import_200_response_data_H
