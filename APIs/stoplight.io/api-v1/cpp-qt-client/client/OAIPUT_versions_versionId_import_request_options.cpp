/**
 * Stoplight
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: api-v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPUT_versions_versionId_import_request_options.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPUT_versions_versionId_import_request_options::OAIPUT_versions_versionId_import_request_options(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPUT_versions_versionId_import_request_options::OAIPUT_versions_versionId_import_request_options() {
    this->initializeModel();
}

OAIPUT_versions_versionId_import_request_options::~OAIPUT_versions_versionId_import_request_options() {}

void OAIPUT_versions_versionId_import_request_options::initializeModel() {

    m_remove_extra_endpoints_isSet = false;
    m_remove_extra_endpoints_isValid = false;

    m_remove_extra_schemas_isSet = false;
    m_remove_extra_schemas_isValid = false;

    m_remove_extra_text_sections_isSet = false;
    m_remove_extra_text_sections_isValid = false;

    m_remove_extra_traits_isSet = false;
    m_remove_extra_traits_isValid = false;
}

void OAIPUT_versions_versionId_import_request_options::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPUT_versions_versionId_import_request_options::fromJsonObject(QJsonObject json) {

    m_remove_extra_endpoints_isValid = ::OpenAPI::fromJsonValue(m_remove_extra_endpoints, json[QString("removeExtraEndpoints")]);
    m_remove_extra_endpoints_isSet = !json[QString("removeExtraEndpoints")].isNull() && m_remove_extra_endpoints_isValid;

    m_remove_extra_schemas_isValid = ::OpenAPI::fromJsonValue(m_remove_extra_schemas, json[QString("removeExtraSchemas")]);
    m_remove_extra_schemas_isSet = !json[QString("removeExtraSchemas")].isNull() && m_remove_extra_schemas_isValid;

    m_remove_extra_text_sections_isValid = ::OpenAPI::fromJsonValue(m_remove_extra_text_sections, json[QString("removeExtraTextSections")]);
    m_remove_extra_text_sections_isSet = !json[QString("removeExtraTextSections")].isNull() && m_remove_extra_text_sections_isValid;

    m_remove_extra_traits_isValid = ::OpenAPI::fromJsonValue(m_remove_extra_traits, json[QString("removeExtraTraits")]);
    m_remove_extra_traits_isSet = !json[QString("removeExtraTraits")].isNull() && m_remove_extra_traits_isValid;
}

QString OAIPUT_versions_versionId_import_request_options::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPUT_versions_versionId_import_request_options::asJsonObject() const {
    QJsonObject obj;
    if (m_remove_extra_endpoints_isSet) {
        obj.insert(QString("removeExtraEndpoints"), ::OpenAPI::toJsonValue(m_remove_extra_endpoints));
    }
    if (m_remove_extra_schemas_isSet) {
        obj.insert(QString("removeExtraSchemas"), ::OpenAPI::toJsonValue(m_remove_extra_schemas));
    }
    if (m_remove_extra_text_sections_isSet) {
        obj.insert(QString("removeExtraTextSections"), ::OpenAPI::toJsonValue(m_remove_extra_text_sections));
    }
    if (m_remove_extra_traits_isSet) {
        obj.insert(QString("removeExtraTraits"), ::OpenAPI::toJsonValue(m_remove_extra_traits));
    }
    return obj;
}

bool OAIPUT_versions_versionId_import_request_options::isRemoveExtraEndpoints() const {
    return m_remove_extra_endpoints;
}
void OAIPUT_versions_versionId_import_request_options::setRemoveExtraEndpoints(const bool &remove_extra_endpoints) {
    m_remove_extra_endpoints = remove_extra_endpoints;
    m_remove_extra_endpoints_isSet = true;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_endpoints_Set() const{
    return m_remove_extra_endpoints_isSet;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_endpoints_Valid() const{
    return m_remove_extra_endpoints_isValid;
}

bool OAIPUT_versions_versionId_import_request_options::isRemoveExtraSchemas() const {
    return m_remove_extra_schemas;
}
void OAIPUT_versions_versionId_import_request_options::setRemoveExtraSchemas(const bool &remove_extra_schemas) {
    m_remove_extra_schemas = remove_extra_schemas;
    m_remove_extra_schemas_isSet = true;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_schemas_Set() const{
    return m_remove_extra_schemas_isSet;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_schemas_Valid() const{
    return m_remove_extra_schemas_isValid;
}

bool OAIPUT_versions_versionId_import_request_options::isRemoveExtraTextSections() const {
    return m_remove_extra_text_sections;
}
void OAIPUT_versions_versionId_import_request_options::setRemoveExtraTextSections(const bool &remove_extra_text_sections) {
    m_remove_extra_text_sections = remove_extra_text_sections;
    m_remove_extra_text_sections_isSet = true;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_text_sections_Set() const{
    return m_remove_extra_text_sections_isSet;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_text_sections_Valid() const{
    return m_remove_extra_text_sections_isValid;
}

bool OAIPUT_versions_versionId_import_request_options::isRemoveExtraTraits() const {
    return m_remove_extra_traits;
}
void OAIPUT_versions_versionId_import_request_options::setRemoveExtraTraits(const bool &remove_extra_traits) {
    m_remove_extra_traits = remove_extra_traits;
    m_remove_extra_traits_isSet = true;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_traits_Set() const{
    return m_remove_extra_traits_isSet;
}

bool OAIPUT_versions_versionId_import_request_options::is_remove_extra_traits_Valid() const{
    return m_remove_extra_traits_isValid;
}

bool OAIPUT_versions_versionId_import_request_options::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_remove_extra_endpoints_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_extra_schemas_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_extra_text_sections_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_extra_traits_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPUT_versions_versionId_import_request_options::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
