# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vendor_with_needs import VendorWithNeeds
from openapi_server import util


class VendorInvitationList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vendors: List[VendorWithNeeds]=None):
        """VendorInvitationList - a model defined in OpenAPI

        :param vendors: The vendors of this VendorInvitationList.
        """
        self.openapi_types = {
            'vendors': List[VendorWithNeeds]
        }

        self.attribute_map = {
            'vendors': 'vendors'
        }

        self._vendors = vendors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VendorInvitationList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VendorInvitationList of this VendorInvitationList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vendors(self):
        """Gets the vendors of this VendorInvitationList.


        :return: The vendors of this VendorInvitationList.
        :rtype: List[VendorWithNeeds]
        """
        return self._vendors

    @vendors.setter
    def vendors(self, vendors):
        """Sets the vendors of this VendorInvitationList.


        :param vendors: The vendors of this VendorInvitationList.
        :type vendors: List[VendorWithNeeds]
        """

        self._vendors = vendors
