# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.simple_model import SimpleModel
from openapi_server.models.survey_question_question import SurveyQuestionQuestion
from openapi_server import util


class SurveyQuestion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, answers: List[SimpleModel]=None, question: SurveyQuestionQuestion=None, question_answers: List[SimpleModel]=None):
        """SurveyQuestion - a model defined in OpenAPI

        :param answers: The answers of this SurveyQuestion.
        :param question: The question of this SurveyQuestion.
        :param question_answers: The question_answers of this SurveyQuestion.
        """
        self.openapi_types = {
            'answers': List[SimpleModel],
            'question': SurveyQuestionQuestion,
            'question_answers': List[SimpleModel]
        }

        self.attribute_map = {
            'answers': 'answers',
            'question': 'question',
            'question_answers': 'question_answers'
        }

        self._answers = answers
        self._question = question
        self._question_answers = question_answers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SurveyQuestion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SurveyQuestion of this SurveyQuestion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def answers(self):
        """Gets the answers of this SurveyQuestion.


        :return: The answers of this SurveyQuestion.
        :rtype: List[SimpleModel]
        """
        return self._answers

    @answers.setter
    def answers(self, answers):
        """Sets the answers of this SurveyQuestion.


        :param answers: The answers of this SurveyQuestion.
        :type answers: List[SimpleModel]
        """

        self._answers = answers

    @property
    def question(self):
        """Gets the question of this SurveyQuestion.


        :return: The question of this SurveyQuestion.
        :rtype: SurveyQuestionQuestion
        """
        return self._question

    @question.setter
    def question(self, question):
        """Sets the question of this SurveyQuestion.


        :param question: The question of this SurveyQuestion.
        :type question: SurveyQuestionQuestion
        """

        self._question = question

    @property
    def question_answers(self):
        """Gets the question_answers of this SurveyQuestion.


        :return: The question_answers of this SurveyQuestion.
        :rtype: List[SimpleModel]
        """
        return self._question_answers

    @question_answers.setter
    def question_answers(self, question_answers):
        """Sets the question_answers of this SurveyQuestion.


        :param question_answers: The question_answers of this SurveyQuestion.
        :type question_answers: List[SimpleModel]
        """

        self._question_answers = question_answers
