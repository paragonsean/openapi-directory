# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProgressSub(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, proofreading: float=None, total: float=None, translation: float=None, word_count: int=None):
        """ProgressSub - a model defined in OpenAPI

        :param proofreading: The proofreading of this ProgressSub.
        :param total: The total of this ProgressSub.
        :param translation: The translation of this ProgressSub.
        :param word_count: The word_count of this ProgressSub.
        """
        self.openapi_types = {
            'proofreading': float,
            'total': float,
            'translation': float,
            'word_count': int
        }

        self.attribute_map = {
            'proofreading': 'proofreading',
            'total': 'total',
            'translation': 'translation',
            'word_count': 'word_count'
        }

        self._proofreading = proofreading
        self._total = total
        self._translation = translation
        self._word_count = word_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProgressSub':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProgressSub of this ProgressSub.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def proofreading(self):
        """Gets the proofreading of this ProgressSub.


        :return: The proofreading of this ProgressSub.
        :rtype: float
        """
        return self._proofreading

    @proofreading.setter
    def proofreading(self, proofreading):
        """Sets the proofreading of this ProgressSub.


        :param proofreading: The proofreading of this ProgressSub.
        :type proofreading: float
        """

        self._proofreading = proofreading

    @property
    def total(self):
        """Gets the total of this ProgressSub.


        :return: The total of this ProgressSub.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ProgressSub.


        :param total: The total of this ProgressSub.
        :type total: float
        """

        self._total = total

    @property
    def translation(self):
        """Gets the translation of this ProgressSub.


        :return: The translation of this ProgressSub.
        :rtype: float
        """
        return self._translation

    @translation.setter
    def translation(self, translation):
        """Sets the translation of this ProgressSub.


        :param translation: The translation of this ProgressSub.
        :type translation: float
        """

        self._translation = translation

    @property
    def word_count(self):
        """Gets the word_count of this ProgressSub.


        :return: The word_count of this ProgressSub.
        :rtype: int
        """
        return self._word_count

    @word_count.setter
    def word_count(self, word_count):
        """Sets the word_count of this ProgressSub.


        :param word_count: The word_count of this ProgressSub.
        :type word_count: int
        """

        self._word_count = word_count
