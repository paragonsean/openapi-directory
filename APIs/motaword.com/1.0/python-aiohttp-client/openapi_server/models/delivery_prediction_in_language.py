# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeliveryPredictionInLanguage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, language: str=None, late: bool=None, probability: float=None):
        """DeliveryPredictionInLanguage - a model defined in OpenAPI

        :param language: The language of this DeliveryPredictionInLanguage.
        :param late: The late of this DeliveryPredictionInLanguage.
        :param probability: The probability of this DeliveryPredictionInLanguage.
        """
        self.openapi_types = {
            'language': str,
            'late': bool,
            'probability': float
        }

        self.attribute_map = {
            'language': 'language',
            'late': 'late',
            'probability': 'probability'
        }

        self._language = language
        self._late = late
        self._probability = probability

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeliveryPredictionInLanguage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeliveryPredictionInLanguage of this DeliveryPredictionInLanguage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def language(self):
        """Gets the language of this DeliveryPredictionInLanguage.


        :return: The language of this DeliveryPredictionInLanguage.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this DeliveryPredictionInLanguage.


        :param language: The language of this DeliveryPredictionInLanguage.
        :type language: str
        """

        self._language = language

    @property
    def late(self):
        """Gets the late of this DeliveryPredictionInLanguage.

        true for late, false for on-time delivery

        :return: The late of this DeliveryPredictionInLanguage.
        :rtype: bool
        """
        return self._late

    @late.setter
    def late(self, late):
        """Sets the late of this DeliveryPredictionInLanguage.

        true for late, false for on-time delivery

        :param late: The late of this DeliveryPredictionInLanguage.
        :type late: bool
        """

        self._late = late

    @property
    def probability(self):
        """Gets the probability of this DeliveryPredictionInLanguage.


        :return: The probability of this DeliveryPredictionInLanguage.
        :rtype: float
        """
        return self._probability

    @probability.setter
    def probability(self, probability):
        """Sets the probability of this DeliveryPredictionInLanguage.


        :param probability: The probability of this DeliveryPredictionInLanguage.
        :type probability: float
        """

        self._probability = probability
