# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.continuous_project_language import ContinuousProjectLanguage
from openapi_server import util


class ContinuousProjectUpdateContent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analytics_enabled: bool=None, auto_start_postedit: bool=None, is_enabled: bool=None, languages: List[ContinuousProjectLanguage]=None, mt_enabled: bool=None, name: str=None, postedit_enabled: bool=None):
        """ContinuousProjectUpdateContent - a model defined in OpenAPI

        :param analytics_enabled: The analytics_enabled of this ContinuousProjectUpdateContent.
        :param auto_start_postedit: The auto_start_postedit of this ContinuousProjectUpdateContent.
        :param is_enabled: The is_enabled of this ContinuousProjectUpdateContent.
        :param languages: The languages of this ContinuousProjectUpdateContent.
        :param mt_enabled: The mt_enabled of this ContinuousProjectUpdateContent.
        :param name: The name of this ContinuousProjectUpdateContent.
        :param postedit_enabled: The postedit_enabled of this ContinuousProjectUpdateContent.
        """
        self.openapi_types = {
            'analytics_enabled': bool,
            'auto_start_postedit': bool,
            'is_enabled': bool,
            'languages': List[ContinuousProjectLanguage],
            'mt_enabled': bool,
            'name': str,
            'postedit_enabled': bool
        }

        self.attribute_map = {
            'analytics_enabled': 'analytics_enabled',
            'auto_start_postedit': 'auto_start_postedit',
            'is_enabled': 'is_enabled',
            'languages': 'languages',
            'mt_enabled': 'mt_enabled',
            'name': 'name',
            'postedit_enabled': 'postedit_enabled'
        }

        self._analytics_enabled = analytics_enabled
        self._auto_start_postedit = auto_start_postedit
        self._is_enabled = is_enabled
        self._languages = languages
        self._mt_enabled = mt_enabled
        self._name = name
        self._postedit_enabled = postedit_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousProjectUpdateContent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousProjectUpdateContent of this ContinuousProjectUpdateContent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analytics_enabled(self):
        """Gets the analytics_enabled of this ContinuousProjectUpdateContent.


        :return: The analytics_enabled of this ContinuousProjectUpdateContent.
        :rtype: bool
        """
        return self._analytics_enabled

    @analytics_enabled.setter
    def analytics_enabled(self, analytics_enabled):
        """Sets the analytics_enabled of this ContinuousProjectUpdateContent.


        :param analytics_enabled: The analytics_enabled of this ContinuousProjectUpdateContent.
        :type analytics_enabled: bool
        """

        self._analytics_enabled = analytics_enabled

    @property
    def auto_start_postedit(self):
        """Gets the auto_start_postedit of this ContinuousProjectUpdateContent.


        :return: The auto_start_postedit of this ContinuousProjectUpdateContent.
        :rtype: bool
        """
        return self._auto_start_postedit

    @auto_start_postedit.setter
    def auto_start_postedit(self, auto_start_postedit):
        """Sets the auto_start_postedit of this ContinuousProjectUpdateContent.


        :param auto_start_postedit: The auto_start_postedit of this ContinuousProjectUpdateContent.
        :type auto_start_postedit: bool
        """

        self._auto_start_postedit = auto_start_postedit

    @property
    def is_enabled(self):
        """Gets the is_enabled of this ContinuousProjectUpdateContent.


        :return: The is_enabled of this ContinuousProjectUpdateContent.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this ContinuousProjectUpdateContent.


        :param is_enabled: The is_enabled of this ContinuousProjectUpdateContent.
        :type is_enabled: bool
        """

        self._is_enabled = is_enabled

    @property
    def languages(self):
        """Gets the languages of this ContinuousProjectUpdateContent.


        :return: The languages of this ContinuousProjectUpdateContent.
        :rtype: List[ContinuousProjectLanguage]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this ContinuousProjectUpdateContent.


        :param languages: The languages of this ContinuousProjectUpdateContent.
        :type languages: List[ContinuousProjectLanguage]
        """

        self._languages = languages

    @property
    def mt_enabled(self):
        """Gets the mt_enabled of this ContinuousProjectUpdateContent.


        :return: The mt_enabled of this ContinuousProjectUpdateContent.
        :rtype: bool
        """
        return self._mt_enabled

    @mt_enabled.setter
    def mt_enabled(self, mt_enabled):
        """Sets the mt_enabled of this ContinuousProjectUpdateContent.


        :param mt_enabled: The mt_enabled of this ContinuousProjectUpdateContent.
        :type mt_enabled: bool
        """

        self._mt_enabled = mt_enabled

    @property
    def name(self):
        """Gets the name of this ContinuousProjectUpdateContent.


        :return: The name of this ContinuousProjectUpdateContent.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContinuousProjectUpdateContent.


        :param name: The name of this ContinuousProjectUpdateContent.
        :type name: str
        """

        self._name = name

    @property
    def postedit_enabled(self):
        """Gets the postedit_enabled of this ContinuousProjectUpdateContent.


        :return: The postedit_enabled of this ContinuousProjectUpdateContent.
        :rtype: bool
        """
        return self._postedit_enabled

    @postedit_enabled.setter
    def postedit_enabled(self, postedit_enabled):
        """Sets the postedit_enabled of this ContinuousProjectUpdateContent.


        :param postedit_enabled: The postedit_enabled of this ContinuousProjectUpdateContent.
        :type postedit_enabled: bool
        """

        self._postedit_enabled = postedit_enabled
