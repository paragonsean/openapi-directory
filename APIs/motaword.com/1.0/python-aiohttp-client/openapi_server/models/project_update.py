# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectUpdate(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_url: str=None, coupon_code: str=None, custom: List[str]=None, source_language: str=None, target_languages: List[str]=None):
        """ProjectUpdate - a model defined in OpenAPI

        :param callback_url: The callback_url of this ProjectUpdate.
        :param coupon_code: The coupon_code of this ProjectUpdate.
        :param custom: The custom of this ProjectUpdate.
        :param source_language: The source_language of this ProjectUpdate.
        :param target_languages: The target_languages of this ProjectUpdate.
        """
        self.openapi_types = {
            'callback_url': str,
            'coupon_code': str,
            'custom': List[str],
            'source_language': str,
            'target_languages': List[str]
        }

        self.attribute_map = {
            'callback_url': 'callback_url',
            'coupon_code': 'coupon_code',
            'custom': 'custom',
            'source_language': 'source_language',
            'target_languages': 'target_languages[]'
        }

        self._callback_url = callback_url
        self._coupon_code = coupon_code
        self._custom = custom
        self._source_language = source_language
        self._target_languages = target_languages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectUpdate':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProjectUpdate of this ProjectUpdate.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_url(self):
        """Gets the callback_url of this ProjectUpdate.

        Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.

        :return: The callback_url of this ProjectUpdate.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this ProjectUpdate.

        Optional. If you provide a callback URL, we will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.

        :param callback_url: The callback_url of this ProjectUpdate.
        :type callback_url: str
        """

        self._callback_url = callback_url

    @property
    def coupon_code(self):
        """Gets the coupon_code of this ProjectUpdate.

        Coupon code to redeem

        :return: The coupon_code of this ProjectUpdate.
        :rtype: str
        """
        return self._coupon_code

    @coupon_code.setter
    def coupon_code(self, coupon_code):
        """Sets the coupon_code of this ProjectUpdate.

        Coupon code to redeem

        :param coupon_code: The coupon_code of this ProjectUpdate.
        :type coupon_code: str
        """

        self._coupon_code = coupon_code

    @property
    def custom(self):
        """Gets the custom of this ProjectUpdate.

        Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value. If you previously provided one, it will be replaced.

        :return: The custom of this ProjectUpdate.
        :rtype: List[str]
        """
        return self._custom

    @custom.setter
    def custom(self, custom):
        """Sets the custom of this ProjectUpdate.

        Optional. This is a consistent custom data parameter that will be given to you in the response across every request of this project model. Values should be provided like this, custom[my_key] = my_value. If you previously provided one, it will be replaced.

        :param custom: The custom of this ProjectUpdate.
        :type custom: List[str]
        """

        self._custom = custom

    @property
    def source_language(self):
        """Gets the source_language of this ProjectUpdate.


        :return: The source_language of this ProjectUpdate.
        :rtype: str
        """
        return self._source_language

    @source_language.setter
    def source_language(self, source_language):
        """Sets the source_language of this ProjectUpdate.


        :param source_language: The source_language of this ProjectUpdate.
        :type source_language: str
        """

        self._source_language = source_language

    @property
    def target_languages(self):
        """Gets the target_languages of this ProjectUpdate.


        :return: The target_languages of this ProjectUpdate.
        :rtype: List[str]
        """
        return self._target_languages

    @target_languages.setter
    def target_languages(self, target_languages):
        """Sets the target_languages of this ProjectUpdate.


        :param target_languages: The target_languages of this ProjectUpdate.
        :type target_languages: List[str]
        """

        self._target_languages = target_languages
