# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server.models.billing_address import BillingAddress
from openapi_server.models.language_pair import LanguagePair
from openapi_server.models.social_media import SocialMedia
from openapi_server.models.user_client import UserClient
from openapi_server.models.user_group import UserGroup
from openapi_server.models.user_links import UserLinks
from openapi_server.models.user_vendor import UserVendor
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing: BillingAddress=None, birthday: date=None, can_work_manual_files: bool=None, city: str=None, client: UserClient=None, corporate_id: int=None, country: str=None, created_at: int=None, do_not_contact: bool=None, email: str=None, first_name: str=None, has_pwd: bool=None, id: int=None, is_client: bool=None, is_developer: bool=None, is_proofreader: bool=None, is_prospect: bool=None, is_sales_person: bool=None, is_vendor: bool=None, language_pairs: List[LanguagePair]=None, last_name: str=None, last_seen_online_at: int=None, links: UserLinks=None, locale: str=None, mailing: Address=None, name: str=None, native_language: str=None, nps: float=None, phone_number: str=None, profile_picture_path: str=None, social_media: SocialMedia=None, state: str=None, status: str=None, street: str=None, timezone: str=None, tms_user_name: str=None, user_groups: List[UserGroup]=None, vendor: UserVendor=None, zip_code: str=None):
        """User - a model defined in OpenAPI

        :param billing: The billing of this User.
        :param birthday: The birthday of this User.
        :param can_work_manual_files: The can_work_manual_files of this User.
        :param city: The city of this User.
        :param client: The client of this User.
        :param corporate_id: The corporate_id of this User.
        :param country: The country of this User.
        :param created_at: The created_at of this User.
        :param do_not_contact: The do_not_contact of this User.
        :param email: The email of this User.
        :param first_name: The first_name of this User.
        :param has_pwd: The has_pwd of this User.
        :param id: The id of this User.
        :param is_client: The is_client of this User.
        :param is_developer: The is_developer of this User.
        :param is_proofreader: The is_proofreader of this User.
        :param is_prospect: The is_prospect of this User.
        :param is_sales_person: The is_sales_person of this User.
        :param is_vendor: The is_vendor of this User.
        :param language_pairs: The language_pairs of this User.
        :param last_name: The last_name of this User.
        :param last_seen_online_at: The last_seen_online_at of this User.
        :param links: The links of this User.
        :param locale: The locale of this User.
        :param mailing: The mailing of this User.
        :param name: The name of this User.
        :param native_language: The native_language of this User.
        :param nps: The nps of this User.
        :param phone_number: The phone_number of this User.
        :param profile_picture_path: The profile_picture_path of this User.
        :param social_media: The social_media of this User.
        :param state: The state of this User.
        :param status: The status of this User.
        :param street: The street of this User.
        :param timezone: The timezone of this User.
        :param tms_user_name: The tms_user_name of this User.
        :param user_groups: The user_groups of this User.
        :param vendor: The vendor of this User.
        :param zip_code: The zip_code of this User.
        """
        self.openapi_types = {
            'billing': BillingAddress,
            'birthday': date,
            'can_work_manual_files': bool,
            'city': str,
            'client': UserClient,
            'corporate_id': int,
            'country': str,
            'created_at': int,
            'do_not_contact': bool,
            'email': str,
            'first_name': str,
            'has_pwd': bool,
            'id': int,
            'is_client': bool,
            'is_developer': bool,
            'is_proofreader': bool,
            'is_prospect': bool,
            'is_sales_person': bool,
            'is_vendor': bool,
            'language_pairs': List[LanguagePair],
            'last_name': str,
            'last_seen_online_at': int,
            'links': UserLinks,
            'locale': str,
            'mailing': Address,
            'name': str,
            'native_language': str,
            'nps': float,
            'phone_number': str,
            'profile_picture_path': str,
            'social_media': SocialMedia,
            'state': str,
            'status': str,
            'street': str,
            'timezone': str,
            'tms_user_name': str,
            'user_groups': List[UserGroup],
            'vendor': UserVendor,
            'zip_code': str
        }

        self.attribute_map = {
            'billing': 'billing',
            'birthday': 'birthday',
            'can_work_manual_files': 'can_work_manual_files',
            'city': 'city',
            'client': 'client',
            'corporate_id': 'corporate_id',
            'country': 'country',
            'created_at': 'created_at',
            'do_not_contact': 'do_not_contact',
            'email': 'email',
            'first_name': 'first_name',
            'has_pwd': 'has_pwd',
            'id': 'id',
            'is_client': 'is_client',
            'is_developer': 'is_developer',
            'is_proofreader': 'is_proofreader',
            'is_prospect': 'is_prospect',
            'is_sales_person': 'is_sales_person',
            'is_vendor': 'is_vendor',
            'language_pairs': 'language_pairs',
            'last_name': 'last_name',
            'last_seen_online_at': 'last_seen_online_at',
            'links': 'links',
            'locale': 'locale',
            'mailing': 'mailing',
            'name': 'name',
            'native_language': 'native_language',
            'nps': 'nps',
            'phone_number': 'phone_number',
            'profile_picture_path': 'profile_picture_path',
            'social_media': 'social_media',
            'state': 'state',
            'status': 'status',
            'street': 'street',
            'timezone': 'timezone',
            'tms_user_name': 'tms_user_name',
            'user_groups': 'user_groups',
            'vendor': 'vendor',
            'zip_code': 'zip_code'
        }

        self._billing = billing
        self._birthday = birthday
        self._can_work_manual_files = can_work_manual_files
        self._city = city
        self._client = client
        self._corporate_id = corporate_id
        self._country = country
        self._created_at = created_at
        self._do_not_contact = do_not_contact
        self._email = email
        self._first_name = first_name
        self._has_pwd = has_pwd
        self._id = id
        self._is_client = is_client
        self._is_developer = is_developer
        self._is_proofreader = is_proofreader
        self._is_prospect = is_prospect
        self._is_sales_person = is_sales_person
        self._is_vendor = is_vendor
        self._language_pairs = language_pairs
        self._last_name = last_name
        self._last_seen_online_at = last_seen_online_at
        self._links = links
        self._locale = locale
        self._mailing = mailing
        self._name = name
        self._native_language = native_language
        self._nps = nps
        self._phone_number = phone_number
        self._profile_picture_path = profile_picture_path
        self._social_media = social_media
        self._state = state
        self._status = status
        self._street = street
        self._timezone = timezone
        self._tms_user_name = tms_user_name
        self._user_groups = user_groups
        self._vendor = vendor
        self._zip_code = zip_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing(self):
        """Gets the billing of this User.


        :return: The billing of this User.
        :rtype: BillingAddress
        """
        return self._billing

    @billing.setter
    def billing(self, billing):
        """Sets the billing of this User.


        :param billing: The billing of this User.
        :type billing: BillingAddress
        """

        self._billing = billing

    @property
    def birthday(self):
        """Gets the birthday of this User.


        :return: The birthday of this User.
        :rtype: date
        """
        return self._birthday

    @birthday.setter
    def birthday(self, birthday):
        """Sets the birthday of this User.


        :param birthday: The birthday of this User.
        :type birthday: date
        """

        self._birthday = birthday

    @property
    def can_work_manual_files(self):
        """Gets the can_work_manual_files of this User.

        \\@deprecated. use `vendor` key

        :return: The can_work_manual_files of this User.
        :rtype: bool
        """
        return self._can_work_manual_files

    @can_work_manual_files.setter
    def can_work_manual_files(self, can_work_manual_files):
        """Sets the can_work_manual_files of this User.

        \\@deprecated. use `vendor` key

        :param can_work_manual_files: The can_work_manual_files of this User.
        :type can_work_manual_files: bool
        """

        self._can_work_manual_files = can_work_manual_files

    @property
    def city(self):
        """Gets the city of this User.

        \\@deprecated. use mailing or billing key.

        :return: The city of this User.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this User.

        \\@deprecated. use mailing or billing key.

        :param city: The city of this User.
        :type city: str
        """

        self._city = city

    @property
    def client(self):
        """Gets the client of this User.


        :return: The client of this User.
        :rtype: UserClient
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this User.


        :param client: The client of this User.
        :type client: UserClient
        """

        self._client = client

    @property
    def corporate_id(self):
        """Gets the corporate_id of this User.


        :return: The corporate_id of this User.
        :rtype: int
        """
        return self._corporate_id

    @corporate_id.setter
    def corporate_id(self, corporate_id):
        """Sets the corporate_id of this User.


        :param corporate_id: The corporate_id of this User.
        :type corporate_id: int
        """

        self._corporate_id = corporate_id

    @property
    def country(self):
        """Gets the country of this User.

        \\@deprecated. use mailing or billing key.

        :return: The country of this User.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this User.

        \\@deprecated. use mailing or billing key.

        :param country: The country of this User.
        :type country: str
        """

        self._country = country

    @property
    def created_at(self):
        """Gets the created_at of this User.

        Unix epoch time

        :return: The created_at of this User.
        :rtype: int
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this User.

        Unix epoch time

        :param created_at: The created_at of this User.
        :type created_at: int
        """

        self._created_at = created_at

    @property
    def do_not_contact(self):
        """Gets the do_not_contact of this User.


        :return: The do_not_contact of this User.
        :rtype: bool
        """
        return self._do_not_contact

    @do_not_contact.setter
    def do_not_contact(self, do_not_contact):
        """Sets the do_not_contact of this User.


        :param do_not_contact: The do_not_contact of this User.
        :type do_not_contact: bool
        """

        self._do_not_contact = do_not_contact

    @property
    def email(self):
        """Gets the email of this User.


        :return: The email of this User.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this User.


        :param email: The email of this User.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this User.


        :return: The first_name of this User.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this User.


        :param first_name: The first_name of this User.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def has_pwd(self):
        """Gets the has_pwd of this User.


        :return: The has_pwd of this User.
        :rtype: bool
        """
        return self._has_pwd

    @has_pwd.setter
    def has_pwd(self, has_pwd):
        """Sets the has_pwd of this User.


        :param has_pwd: The has_pwd of this User.
        :type has_pwd: bool
        """

        self._has_pwd = has_pwd

    @property
    def id(self):
        """Gets the id of this User.


        :return: The id of this User.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.


        :param id: The id of this User.
        :type id: int
        """

        self._id = id

    @property
    def is_client(self):
        """Gets the is_client of this User.


        :return: The is_client of this User.
        :rtype: bool
        """
        return self._is_client

    @is_client.setter
    def is_client(self, is_client):
        """Sets the is_client of this User.


        :param is_client: The is_client of this User.
        :type is_client: bool
        """

        self._is_client = is_client

    @property
    def is_developer(self):
        """Gets the is_developer of this User.


        :return: The is_developer of this User.
        :rtype: bool
        """
        return self._is_developer

    @is_developer.setter
    def is_developer(self, is_developer):
        """Sets the is_developer of this User.


        :param is_developer: The is_developer of this User.
        :type is_developer: bool
        """

        self._is_developer = is_developer

    @property
    def is_proofreader(self):
        """Gets the is_proofreader of this User.

        \\@deprecated. use `vendor` key

        :return: The is_proofreader of this User.
        :rtype: bool
        """
        return self._is_proofreader

    @is_proofreader.setter
    def is_proofreader(self, is_proofreader):
        """Sets the is_proofreader of this User.

        \\@deprecated. use `vendor` key

        :param is_proofreader: The is_proofreader of this User.
        :type is_proofreader: bool
        """

        self._is_proofreader = is_proofreader

    @property
    def is_prospect(self):
        """Gets the is_prospect of this User.


        :return: The is_prospect of this User.
        :rtype: bool
        """
        return self._is_prospect

    @is_prospect.setter
    def is_prospect(self, is_prospect):
        """Sets the is_prospect of this User.


        :param is_prospect: The is_prospect of this User.
        :type is_prospect: bool
        """

        self._is_prospect = is_prospect

    @property
    def is_sales_person(self):
        """Gets the is_sales_person of this User.


        :return: The is_sales_person of this User.
        :rtype: bool
        """
        return self._is_sales_person

    @is_sales_person.setter
    def is_sales_person(self, is_sales_person):
        """Sets the is_sales_person of this User.


        :param is_sales_person: The is_sales_person of this User.
        :type is_sales_person: bool
        """

        self._is_sales_person = is_sales_person

    @property
    def is_vendor(self):
        """Gets the is_vendor of this User.


        :return: The is_vendor of this User.
        :rtype: bool
        """
        return self._is_vendor

    @is_vendor.setter
    def is_vendor(self, is_vendor):
        """Sets the is_vendor of this User.


        :param is_vendor: The is_vendor of this User.
        :type is_vendor: bool
        """

        self._is_vendor = is_vendor

    @property
    def language_pairs(self):
        """Gets the language_pairs of this User.

        \\@deprecated. use `vendor` key

        :return: The language_pairs of this User.
        :rtype: List[LanguagePair]
        """
        return self._language_pairs

    @language_pairs.setter
    def language_pairs(self, language_pairs):
        """Sets the language_pairs of this User.

        \\@deprecated. use `vendor` key

        :param language_pairs: The language_pairs of this User.
        :type language_pairs: List[LanguagePair]
        """

        self._language_pairs = language_pairs

    @property
    def last_name(self):
        """Gets the last_name of this User.


        :return: The last_name of this User.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this User.


        :param last_name: The last_name of this User.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def last_seen_online_at(self):
        """Gets the last_seen_online_at of this User.

        Unix epoch time

        :return: The last_seen_online_at of this User.
        :rtype: int
        """
        return self._last_seen_online_at

    @last_seen_online_at.setter
    def last_seen_online_at(self, last_seen_online_at):
        """Sets the last_seen_online_at of this User.

        Unix epoch time

        :param last_seen_online_at: The last_seen_online_at of this User.
        :type last_seen_online_at: int
        """

        self._last_seen_online_at = last_seen_online_at

    @property
    def links(self):
        """Gets the links of this User.


        :return: The links of this User.
        :rtype: UserLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this User.


        :param links: The links of this User.
        :type links: UserLinks
        """

        self._links = links

    @property
    def locale(self):
        """Gets the locale of this User.

        User Locale

        :return: The locale of this User.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this User.

        User Locale

        :param locale: The locale of this User.
        :type locale: str
        """

        self._locale = locale

    @property
    def mailing(self):
        """Gets the mailing of this User.


        :return: The mailing of this User.
        :rtype: Address
        """
        return self._mailing

    @mailing.setter
    def mailing(self, mailing):
        """Sets the mailing of this User.


        :param mailing: The mailing of this User.
        :type mailing: Address
        """

        self._mailing = mailing

    @property
    def name(self):
        """Gets the name of this User.


        :return: The name of this User.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this User.


        :param name: The name of this User.
        :type name: str
        """

        self._name = name

    @property
    def native_language(self):
        """Gets the native_language of this User.

        \\@deprecated. Native language of user

        :return: The native_language of this User.
        :rtype: str
        """
        return self._native_language

    @native_language.setter
    def native_language(self, native_language):
        """Sets the native_language of this User.

        \\@deprecated. Native language of user

        :param native_language: The native_language of this User.
        :type native_language: str
        """

        self._native_language = native_language

    @property
    def nps(self):
        """Gets the nps of this User.

        \\@deprecated. use /stats endpoint for the current nps value.

        :return: The nps of this User.
        :rtype: float
        """
        return self._nps

    @nps.setter
    def nps(self, nps):
        """Sets the nps of this User.

        \\@deprecated. use /stats endpoint for the current nps value.

        :param nps: The nps of this User.
        :type nps: float
        """

        self._nps = nps

    @property
    def phone_number(self):
        """Gets the phone_number of this User.


        :return: The phone_number of this User.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this User.


        :param phone_number: The phone_number of this User.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def profile_picture_path(self):
        """Gets the profile_picture_path of this User.


        :return: The profile_picture_path of this User.
        :rtype: str
        """
        return self._profile_picture_path

    @profile_picture_path.setter
    def profile_picture_path(self, profile_picture_path):
        """Sets the profile_picture_path of this User.


        :param profile_picture_path: The profile_picture_path of this User.
        :type profile_picture_path: str
        """

        self._profile_picture_path = profile_picture_path

    @property
    def social_media(self):
        """Gets the social_media of this User.


        :return: The social_media of this User.
        :rtype: SocialMedia
        """
        return self._social_media

    @social_media.setter
    def social_media(self, social_media):
        """Sets the social_media of this User.


        :param social_media: The social_media of this User.
        :type social_media: SocialMedia
        """

        self._social_media = social_media

    @property
    def state(self):
        """Gets the state of this User.

        \\@deprecated. use mailing or billing key.

        :return: The state of this User.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this User.

        \\@deprecated. use mailing or billing key.

        :param state: The state of this User.
        :type state: str
        """

        self._state = state

    @property
    def status(self):
        """Gets the status of this User.


        :return: The status of this User.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this User.


        :param status: The status of this User.
        :type status: str
        """

        self._status = status

    @property
    def street(self):
        """Gets the street of this User.

        \\@deprecated. use mailing or billing key.

        :return: The street of this User.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this User.

        \\@deprecated. use mailing or billing key.

        :param street: The street of this User.
        :type street: str
        """

        self._street = street

    @property
    def timezone(self):
        """Gets the timezone of this User.


        :return: The timezone of this User.
        :rtype: str
        """
        return self._timezone

    @timezone.setter
    def timezone(self, timezone):
        """Sets the timezone of this User.


        :param timezone: The timezone of this User.
        :type timezone: str
        """

        self._timezone = timezone

    @property
    def tms_user_name(self):
        """Gets the tms_user_name of this User.

        \\@deprecated. use `vendor` key

        :return: The tms_user_name of this User.
        :rtype: str
        """
        return self._tms_user_name

    @tms_user_name.setter
    def tms_user_name(self, tms_user_name):
        """Sets the tms_user_name of this User.

        \\@deprecated. use `vendor` key

        :param tms_user_name: The tms_user_name of this User.
        :type tms_user_name: str
        """

        self._tms_user_name = tms_user_name

    @property
    def user_groups(self):
        """Gets the user_groups of this User.


        :return: The user_groups of this User.
        :rtype: List[UserGroup]
        """
        return self._user_groups

    @user_groups.setter
    def user_groups(self, user_groups):
        """Sets the user_groups of this User.


        :param user_groups: The user_groups of this User.
        :type user_groups: List[UserGroup]
        """

        self._user_groups = user_groups

    @property
    def vendor(self):
        """Gets the vendor of this User.


        :return: The vendor of this User.
        :rtype: UserVendor
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this User.


        :param vendor: The vendor of this User.
        :type vendor: UserVendor
        """

        self._vendor = vendor

    @property
    def zip_code(self):
        """Gets the zip_code of this User.

        \\@deprecated. use mailing or billing key. new key name is \"zip\".

        :return: The zip_code of this User.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this User.

        \\@deprecated. use mailing or billing key. new key name is \"zip\".

        :param zip_code: The zip_code of this User.
        :type zip_code: str
        """

        self._zip_code = zip_code
