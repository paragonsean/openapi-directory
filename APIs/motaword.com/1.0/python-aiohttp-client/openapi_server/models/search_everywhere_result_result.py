# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_in_search import DocumentInSearch
from openapi_server.models.project_in_search import ProjectInSearch
from openapi_server.models.string_in_search import StringInSearch
from openapi_server import util


class SearchEverywhereResultResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documents: List[DocumentInSearch]=None, projects: List[ProjectInSearch]=None, strings: List[StringInSearch]=None):
        """SearchEverywhereResultResult - a model defined in OpenAPI

        :param documents: The documents of this SearchEverywhereResultResult.
        :param projects: The projects of this SearchEverywhereResultResult.
        :param strings: The strings of this SearchEverywhereResultResult.
        """
        self.openapi_types = {
            'documents': List[DocumentInSearch],
            'projects': List[ProjectInSearch],
            'strings': List[StringInSearch]
        }

        self.attribute_map = {
            'documents': 'documents',
            'projects': 'projects',
            'strings': 'strings'
        }

        self._documents = documents
        self._projects = projects
        self._strings = strings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchEverywhereResultResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchEverywhereResult_result of this SearchEverywhereResultResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documents(self):
        """Gets the documents of this SearchEverywhereResultResult.


        :return: The documents of this SearchEverywhereResultResult.
        :rtype: List[DocumentInSearch]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this SearchEverywhereResultResult.


        :param documents: The documents of this SearchEverywhereResultResult.
        :type documents: List[DocumentInSearch]
        """

        self._documents = documents

    @property
    def projects(self):
        """Gets the projects of this SearchEverywhereResultResult.


        :return: The projects of this SearchEverywhereResultResult.
        :rtype: List[ProjectInSearch]
        """
        return self._projects

    @projects.setter
    def projects(self, projects):
        """Sets the projects of this SearchEverywhereResultResult.


        :param projects: The projects of this SearchEverywhereResultResult.
        :type projects: List[ProjectInSearch]
        """

        self._projects = projects

    @property
    def strings(self):
        """Gets the strings of this SearchEverywhereResultResult.


        :return: The strings of this SearchEverywhereResultResult.
        :rtype: List[StringInSearch]
        """
        return self._strings

    @strings.setter
    def strings(self, strings):
        """Sets the strings of this SearchEverywhereResultResult.


        :param strings: The strings of this SearchEverywhereResultResult.
        :type strings: List[StringInSearch]
        """

        self._strings = strings
