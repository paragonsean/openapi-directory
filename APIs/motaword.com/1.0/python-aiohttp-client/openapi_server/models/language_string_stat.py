# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LanguageStringStat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, project_string_count: int=None, source_language: str=None, tm_string_count: int=None):
        """LanguageStringStat - a model defined in OpenAPI

        :param project_string_count: The project_string_count of this LanguageStringStat.
        :param source_language: The source_language of this LanguageStringStat.
        :param tm_string_count: The tm_string_count of this LanguageStringStat.
        """
        self.openapi_types = {
            'project_string_count': int,
            'source_language': str,
            'tm_string_count': int
        }

        self.attribute_map = {
            'project_string_count': 'project_string_count',
            'source_language': 'source_language',
            'tm_string_count': 'tm_string_count'
        }

        self._project_string_count = project_string_count
        self._source_language = source_language
        self._tm_string_count = tm_string_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LanguageStringStat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LanguageStringStat of this LanguageStringStat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def project_string_count(self):
        """Gets the project_string_count of this LanguageStringStat.


        :return: The project_string_count of this LanguageStringStat.
        :rtype: int
        """
        return self._project_string_count

    @project_string_count.setter
    def project_string_count(self, project_string_count):
        """Sets the project_string_count of this LanguageStringStat.


        :param project_string_count: The project_string_count of this LanguageStringStat.
        :type project_string_count: int
        """

        self._project_string_count = project_string_count

    @property
    def source_language(self):
        """Gets the source_language of this LanguageStringStat.


        :return: The source_language of this LanguageStringStat.
        :rtype: str
        """
        return self._source_language

    @source_language.setter
    def source_language(self, source_language):
        """Sets the source_language of this LanguageStringStat.


        :param source_language: The source_language of this LanguageStringStat.
        :type source_language: str
        """

        self._source_language = source_language

    @property
    def tm_string_count(self):
        """Gets the tm_string_count of this LanguageStringStat.


        :return: The tm_string_count of this LanguageStringStat.
        :rtype: int
        """
        return self._tm_string_count

    @tm_string_count.setter
    def tm_string_count(self, tm_string_count):
        """Sets the tm_string_count of this LanguageStringStat.


        :param tm_string_count: The tm_string_count of this LanguageStringStat.
        :type tm_string_count: int
        """

        self._tm_string_count = tm_string_count
