# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_profile_nps_average import ClientProfileNpsAverage
from openapi_server.models.client_profile_nps_last import ClientProfileNpsLast
from openapi_server import util


class ClientProfileNps(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average: ClientProfileNpsAverage=None, last: ClientProfileNpsLast=None):
        """ClientProfileNps - a model defined in OpenAPI

        :param average: The average of this ClientProfileNps.
        :param last: The last of this ClientProfileNps.
        """
        self.openapi_types = {
            'average': ClientProfileNpsAverage,
            'last': ClientProfileNpsLast
        }

        self.attribute_map = {
            'average': 'average',
            'last': 'last'
        }

        self._average = average
        self._last = last

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientProfileNps':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientProfile_nps of this ClientProfileNps.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average(self):
        """Gets the average of this ClientProfileNps.


        :return: The average of this ClientProfileNps.
        :rtype: ClientProfileNpsAverage
        """
        return self._average

    @average.setter
    def average(self, average):
        """Sets the average of this ClientProfileNps.


        :param average: The average of this ClientProfileNps.
        :type average: ClientProfileNpsAverage
        """

        self._average = average

    @property
    def last(self):
        """Gets the last of this ClientProfileNps.


        :return: The last of this ClientProfileNps.
        :rtype: ClientProfileNpsLast
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this ClientProfileNps.


        :param last: The last of this ClientProfileNps.
        :type last: ClientProfileNpsLast
        """

        self._last = last
