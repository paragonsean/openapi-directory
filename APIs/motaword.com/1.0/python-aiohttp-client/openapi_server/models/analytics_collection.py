# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnalyticsCollection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, anonymous_id: str=None, properties: Dict[str, str]=None, session_id: str=None, type: str=None, user_id: str=None):
        """AnalyticsCollection - a model defined in OpenAPI

        :param anonymous_id: The anonymous_id of this AnalyticsCollection.
        :param properties: The properties of this AnalyticsCollection.
        :param session_id: The session_id of this AnalyticsCollection.
        :param type: The type of this AnalyticsCollection.
        :param user_id: The user_id of this AnalyticsCollection.
        """
        self.openapi_types = {
            'anonymous_id': str,
            'properties': Dict[str, str],
            'session_id': str,
            'type': str,
            'user_id': str
        }

        self.attribute_map = {
            'anonymous_id': 'anonymousId',
            'properties': 'properties',
            'session_id': 'sessionId',
            'type': 'type',
            'user_id': 'userId'
        }

        self._anonymous_id = anonymous_id
        self._properties = properties
        self._session_id = session_id
        self._type = type
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyticsCollection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnalyticsCollection of this AnalyticsCollection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def anonymous_id(self):
        """Gets the anonymous_id of this AnalyticsCollection.


        :return: The anonymous_id of this AnalyticsCollection.
        :rtype: str
        """
        return self._anonymous_id

    @anonymous_id.setter
    def anonymous_id(self, anonymous_id):
        """Sets the anonymous_id of this AnalyticsCollection.


        :param anonymous_id: The anonymous_id of this AnalyticsCollection.
        :type anonymous_id: str
        """

        self._anonymous_id = anonymous_id

    @property
    def properties(self):
        """Gets the properties of this AnalyticsCollection.


        :return: The properties of this AnalyticsCollection.
        :rtype: Dict[str, str]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this AnalyticsCollection.


        :param properties: The properties of this AnalyticsCollection.
        :type properties: Dict[str, str]
        """

        self._properties = properties

    @property
    def session_id(self):
        """Gets the session_id of this AnalyticsCollection.


        :return: The session_id of this AnalyticsCollection.
        :rtype: str
        """
        return self._session_id

    @session_id.setter
    def session_id(self, session_id):
        """Sets the session_id of this AnalyticsCollection.


        :param session_id: The session_id of this AnalyticsCollection.
        :type session_id: str
        """

        self._session_id = session_id

    @property
    def type(self):
        """Gets the type of this AnalyticsCollection.


        :return: The type of this AnalyticsCollection.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AnalyticsCollection.


        :param type: The type of this AnalyticsCollection.
        :type type: str
        """

        self._type = type

    @property
    def user_id(self):
        """Gets the user_id of this AnalyticsCollection.


        :return: The user_id of this AnalyticsCollection.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this AnalyticsCollection.


        :param user_id: The user_id of this AnalyticsCollection.
        :type user_id: str
        """

        self._user_id = user_id
