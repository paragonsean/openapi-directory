# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VendorWordStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, approved: int=None, translated: int=None):
        """VendorWordStats - a model defined in OpenAPI

        :param approved: The approved of this VendorWordStats.
        :param translated: The translated of this VendorWordStats.
        """
        self.openapi_types = {
            'approved': int,
            'translated': int
        }

        self.attribute_map = {
            'approved': 'approved',
            'translated': 'translated'
        }

        self._approved = approved
        self._translated = translated

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VendorWordStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VendorWordStats of this VendorWordStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def approved(self):
        """Gets the approved of this VendorWordStats.

        total number of words that this user has approved so far.

        :return: The approved of this VendorWordStats.
        :rtype: int
        """
        return self._approved

    @approved.setter
    def approved(self, approved):
        """Sets the approved of this VendorWordStats.

        total number of words that this user has approved so far.

        :param approved: The approved of this VendorWordStats.
        :type approved: int
        """

        self._approved = approved

    @property
    def translated(self):
        """Gets the translated of this VendorWordStats.

        total number of words that this user has translated so far.

        :return: The translated of this VendorWordStats.
        :rtype: int
        """
        return self._translated

    @translated.setter
    def translated(self, translated):
        """Sets the translated of this VendorWordStats.

        total number of words that this user has translated so far.

        :param translated: The translated of this VendorWordStats.
        :type translated: int
        """

        self._translated = translated
