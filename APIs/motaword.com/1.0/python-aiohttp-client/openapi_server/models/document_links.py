# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.href import Href
from openapi_server import util


class DocumentLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _self: Href=None, admins: Dict[str, Href]=None, download: Href=None, editors: Dict[str, Href]=None, preview_box: Href=None, preview_pdf: Href=None, preview_pdf_viewer: Href=None, progress: Href=None, project: Href=None, strings: Href=None, thumbnail: Href=None):
        """DocumentLinks - a model defined in OpenAPI

        :param _self: The _self of this DocumentLinks.
        :param admins: The admins of this DocumentLinks.
        :param download: The download of this DocumentLinks.
        :param editors: The editors of this DocumentLinks.
        :param preview_box: The preview_box of this DocumentLinks.
        :param preview_pdf: The preview_pdf of this DocumentLinks.
        :param preview_pdf_viewer: The preview_pdf_viewer of this DocumentLinks.
        :param progress: The progress of this DocumentLinks.
        :param project: The project of this DocumentLinks.
        :param strings: The strings of this DocumentLinks.
        :param thumbnail: The thumbnail of this DocumentLinks.
        """
        self.openapi_types = {
            '_self': Href,
            'admins': Dict[str, Href],
            'download': Href,
            'editors': Dict[str, Href],
            'preview_box': Href,
            'preview_pdf': Href,
            'preview_pdf_viewer': Href,
            'progress': Href,
            'project': Href,
            'strings': Href,
            'thumbnail': Href
        }

        self.attribute_map = {
            '_self': 'self',
            'admins': 'admins',
            'download': 'download',
            'editors': 'editors',
            'preview_box': 'preview-box',
            'preview_pdf': 'preview-pdf',
            'preview_pdf_viewer': 'preview-pdf-viewer',
            'progress': 'progress',
            'project': 'project',
            'strings': 'strings',
            'thumbnail': 'thumbnail'
        }

        self.__self = _self
        self._admins = admins
        self._download = download
        self._editors = editors
        self._preview_box = preview_box
        self._preview_pdf = preview_pdf
        self._preview_pdf_viewer = preview_pdf_viewer
        self._progress = progress
        self._project = project
        self._strings = strings
        self._thumbnail = thumbnail

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DocumentLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DocumentLinks of this DocumentLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _self(self):
        """Gets the _self of this DocumentLinks.


        :return: The _self of this DocumentLinks.
        :rtype: Href
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this DocumentLinks.


        :param _self: The _self of this DocumentLinks.
        :type _self: Href
        """

        self.__self = _self

    @property
    def admins(self):
        """Gets the admins of this DocumentLinks.


        :return: The admins of this DocumentLinks.
        :rtype: Dict[str, Href]
        """
        return self._admins

    @admins.setter
    def admins(self, admins):
        """Sets the admins of this DocumentLinks.


        :param admins: The admins of this DocumentLinks.
        :type admins: Dict[str, Href]
        """

        self._admins = admins

    @property
    def download(self):
        """Gets the download of this DocumentLinks.


        :return: The download of this DocumentLinks.
        :rtype: Href
        """
        return self._download

    @download.setter
    def download(self, download):
        """Sets the download of this DocumentLinks.


        :param download: The download of this DocumentLinks.
        :type download: Href
        """

        self._download = download

    @property
    def editors(self):
        """Gets the editors of this DocumentLinks.


        :return: The editors of this DocumentLinks.
        :rtype: Dict[str, Href]
        """
        return self._editors

    @editors.setter
    def editors(self, editors):
        """Sets the editors of this DocumentLinks.


        :param editors: The editors of this DocumentLinks.
        :type editors: Dict[str, Href]
        """

        self._editors = editors

    @property
    def preview_box(self):
        """Gets the preview_box of this DocumentLinks.


        :return: The preview_box of this DocumentLinks.
        :rtype: Href
        """
        return self._preview_box

    @preview_box.setter
    def preview_box(self, preview_box):
        """Sets the preview_box of this DocumentLinks.


        :param preview_box: The preview_box of this DocumentLinks.
        :type preview_box: Href
        """

        self._preview_box = preview_box

    @property
    def preview_pdf(self):
        """Gets the preview_pdf of this DocumentLinks.


        :return: The preview_pdf of this DocumentLinks.
        :rtype: Href
        """
        return self._preview_pdf

    @preview_pdf.setter
    def preview_pdf(self, preview_pdf):
        """Sets the preview_pdf of this DocumentLinks.


        :param preview_pdf: The preview_pdf of this DocumentLinks.
        :type preview_pdf: Href
        """

        self._preview_pdf = preview_pdf

    @property
    def preview_pdf_viewer(self):
        """Gets the preview_pdf_viewer of this DocumentLinks.


        :return: The preview_pdf_viewer of this DocumentLinks.
        :rtype: Href
        """
        return self._preview_pdf_viewer

    @preview_pdf_viewer.setter
    def preview_pdf_viewer(self, preview_pdf_viewer):
        """Sets the preview_pdf_viewer of this DocumentLinks.


        :param preview_pdf_viewer: The preview_pdf_viewer of this DocumentLinks.
        :type preview_pdf_viewer: Href
        """

        self._preview_pdf_viewer = preview_pdf_viewer

    @property
    def progress(self):
        """Gets the progress of this DocumentLinks.


        :return: The progress of this DocumentLinks.
        :rtype: Href
        """
        return self._progress

    @progress.setter
    def progress(self, progress):
        """Sets the progress of this DocumentLinks.


        :param progress: The progress of this DocumentLinks.
        :type progress: Href
        """

        self._progress = progress

    @property
    def project(self):
        """Gets the project of this DocumentLinks.


        :return: The project of this DocumentLinks.
        :rtype: Href
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this DocumentLinks.


        :param project: The project of this DocumentLinks.
        :type project: Href
        """

        self._project = project

    @property
    def strings(self):
        """Gets the strings of this DocumentLinks.


        :return: The strings of this DocumentLinks.
        :rtype: Href
        """
        return self._strings

    @strings.setter
    def strings(self, strings):
        """Sets the strings of this DocumentLinks.


        :param strings: The strings of this DocumentLinks.
        :type strings: Href
        """

        self._strings = strings

    @property
    def thumbnail(self):
        """Gets the thumbnail of this DocumentLinks.


        :return: The thumbnail of this DocumentLinks.
        :rtype: Href
        """
        return self._thumbnail

    @thumbnail.setter
    def thumbnail(self, thumbnail):
        """Sets the thumbnail of this DocumentLinks.


        :param thumbnail: The thumbnail of this DocumentLinks.
        :type thumbnail: Href
        """

        self._thumbnail = thumbnail
