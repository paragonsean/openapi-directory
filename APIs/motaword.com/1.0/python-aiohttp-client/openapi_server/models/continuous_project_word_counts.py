# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContinuousProjectWordCounts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mt: int=None, post_edit: int=None, total: int=None):
        """ContinuousProjectWordCounts - a model defined in OpenAPI

        :param mt: The mt of this ContinuousProjectWordCounts.
        :param post_edit: The post_edit of this ContinuousProjectWordCounts.
        :param total: The total of this ContinuousProjectWordCounts.
        """
        self.openapi_types = {
            'mt': int,
            'post_edit': int,
            'total': int
        }

        self.attribute_map = {
            'mt': 'mt',
            'post_edit': 'post_edit',
            'total': 'total'
        }

        self._mt = mt
        self._post_edit = post_edit
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousProjectWordCounts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousProjectWordCounts of this ContinuousProjectWordCounts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mt(self):
        """Gets the mt of this ContinuousProjectWordCounts.


        :return: The mt of this ContinuousProjectWordCounts.
        :rtype: int
        """
        return self._mt

    @mt.setter
    def mt(self, mt):
        """Sets the mt of this ContinuousProjectWordCounts.


        :param mt: The mt of this ContinuousProjectWordCounts.
        :type mt: int
        """

        self._mt = mt

    @property
    def post_edit(self):
        """Gets the post_edit of this ContinuousProjectWordCounts.


        :return: The post_edit of this ContinuousProjectWordCounts.
        :rtype: int
        """
        return self._post_edit

    @post_edit.setter
    def post_edit(self, post_edit):
        """Sets the post_edit of this ContinuousProjectWordCounts.


        :param post_edit: The post_edit of this ContinuousProjectWordCounts.
        :type post_edit: int
        """

        self._post_edit = post_edit

    @property
    def total(self):
        """Gets the total of this ContinuousProjectWordCounts.


        :return: The total of this ContinuousProjectWordCounts.
        :rtype: int
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ContinuousProjectWordCounts.


        :param total: The total of this ContinuousProjectWordCounts.
        :type total: int
        """

        self._total = total
