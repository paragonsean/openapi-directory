# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.formats_documents import FormatsDocuments
from openapi_server.models.formats_glossaries import FormatsGlossaries
from openapi_server import util


class Formats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, documents: FormatsDocuments=None, glossaries: FormatsGlossaries=None, styleguides: FormatsGlossaries=None):
        """Formats - a model defined in OpenAPI

        :param documents: The documents of this Formats.
        :param glossaries: The glossaries of this Formats.
        :param styleguides: The styleguides of this Formats.
        """
        self.openapi_types = {
            'documents': FormatsDocuments,
            'glossaries': FormatsGlossaries,
            'styleguides': FormatsGlossaries
        }

        self.attribute_map = {
            'documents': 'documents',
            'glossaries': 'glossaries',
            'styleguides': 'styleguides'
        }

        self._documents = documents
        self._glossaries = glossaries
        self._styleguides = styleguides

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Formats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Formats of this Formats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documents(self):
        """Gets the documents of this Formats.


        :return: The documents of this Formats.
        :rtype: FormatsDocuments
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this Formats.


        :param documents: The documents of this Formats.
        :type documents: FormatsDocuments
        """

        self._documents = documents

    @property
    def glossaries(self):
        """Gets the glossaries of this Formats.


        :return: The glossaries of this Formats.
        :rtype: FormatsGlossaries
        """
        return self._glossaries

    @glossaries.setter
    def glossaries(self, glossaries):
        """Sets the glossaries of this Formats.


        :param glossaries: The glossaries of this Formats.
        :type glossaries: FormatsGlossaries
        """

        self._glossaries = glossaries

    @property
    def styleguides(self):
        """Gets the styleguides of this Formats.


        :return: The styleguides of this Formats.
        :rtype: FormatsGlossaries
        """
        return self._styleguides

    @styleguides.setter
    def styleguides(self, styleguides):
        """Sets the styleguides of this Formats.


        :param styleguides: The styleguides of this Formats.
        :type styleguides: FormatsGlossaries
        """

        self._styleguides = styleguides
