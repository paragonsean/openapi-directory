# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_address import BillingAddress
from openapi_server import util


class CorporateAccount(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing: BillingAddress=None, domain: str=None, email: str=None, id: int=None, logo: str=None, name: str=None, web_site: str=None):
        """CorporateAccount - a model defined in OpenAPI

        :param billing: The billing of this CorporateAccount.
        :param domain: The domain of this CorporateAccount.
        :param email: The email of this CorporateAccount.
        :param id: The id of this CorporateAccount.
        :param logo: The logo of this CorporateAccount.
        :param name: The name of this CorporateAccount.
        :param web_site: The web_site of this CorporateAccount.
        """
        self.openapi_types = {
            'billing': BillingAddress,
            'domain': str,
            'email': str,
            'id': int,
            'logo': str,
            'name': str,
            'web_site': str
        }

        self.attribute_map = {
            'billing': 'billing',
            'domain': 'domain',
            'email': 'email',
            'id': 'id',
            'logo': 'logo',
            'name': 'name',
            'web_site': 'web_site'
        }

        self._billing = billing
        self._domain = domain
        self._email = email
        self._id = id
        self._logo = logo
        self._name = name
        self._web_site = web_site

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CorporateAccount':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CorporateAccount of this CorporateAccount.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing(self):
        """Gets the billing of this CorporateAccount.


        :return: The billing of this CorporateAccount.
        :rtype: BillingAddress
        """
        return self._billing

    @billing.setter
    def billing(self, billing):
        """Sets the billing of this CorporateAccount.


        :param billing: The billing of this CorporateAccount.
        :type billing: BillingAddress
        """

        self._billing = billing

    @property
    def domain(self):
        """Gets the domain of this CorporateAccount.


        :return: The domain of this CorporateAccount.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this CorporateAccount.


        :param domain: The domain of this CorporateAccount.
        :type domain: str
        """

        self._domain = domain

    @property
    def email(self):
        """Gets the email of this CorporateAccount.


        :return: The email of this CorporateAccount.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this CorporateAccount.


        :param email: The email of this CorporateAccount.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this CorporateAccount.


        :return: The id of this CorporateAccount.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CorporateAccount.


        :param id: The id of this CorporateAccount.
        :type id: int
        """

        self._id = id

    @property
    def logo(self):
        """Gets the logo of this CorporateAccount.


        :return: The logo of this CorporateAccount.
        :rtype: str
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this CorporateAccount.


        :param logo: The logo of this CorporateAccount.
        :type logo: str
        """

        self._logo = logo

    @property
    def name(self):
        """Gets the name of this CorporateAccount.


        :return: The name of this CorporateAccount.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CorporateAccount.


        :param name: The name of this CorporateAccount.
        :type name: str
        """

        self._name = name

    @property
    def web_site(self):
        """Gets the web_site of this CorporateAccount.

        Deprecated, use `domain`.

        :return: The web_site of this CorporateAccount.
        :rtype: str
        """
        return self._web_site

    @web_site.setter
    def web_site(self, web_site):
        """Sets the web_site of this CorporateAccount.

        Deprecated, use `domain`.

        :param web_site: The web_site of this CorporateAccount.
        :type web_site: str
        """

        self._web_site = web_site
