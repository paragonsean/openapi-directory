# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Webhook(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, callback_url: str=None):
        """Webhook - a model defined in OpenAPI

        :param callback_url: The callback_url of this Webhook.
        """
        self.openapi_types = {
            'callback_url': str
        }

        self.attribute_map = {
            'callback_url': 'callback_url'
        }

        self._callback_url = callback_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Webhook':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Webhook of this Webhook.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def callback_url(self):
        """Gets the callback_url of this Webhook.

        Webhook URL. We will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.

        :return: The callback_url of this Webhook.
        :rtype: str
        """
        return self._callback_url

    @callback_url.setter
    def callback_url(self, callback_url):
        """Sets the callback_url of this Webhook.

        Webhook URL. We will send POST callbacks when the status of the current project is changed. Possible status changes are, 'translated', 'proofread', 'completed'.

        :param callback_url: The callback_url of this Webhook.
        :type callback_url: str
        """

        self._callback_url = callback_url
