# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProfilePictureUpload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, profile_picture: file=None):
        """ProfilePictureUpload - a model defined in OpenAPI

        :param profile_picture: The profile_picture of this ProfilePictureUpload.
        """
        self.openapi_types = {
            'profile_picture': file
        }

        self.attribute_map = {
            'profile_picture': 'profile_picture'
        }

        self._profile_picture = profile_picture

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfilePictureUpload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProfilePictureUpload of this ProfilePictureUpload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def profile_picture(self):
        """Gets the profile_picture of this ProfilePictureUpload.

        Profile picture file contents. Accepted extensions are png, jpg.

        :return: The profile_picture of this ProfilePictureUpload.
        :rtype: file
        """
        return self._profile_picture

    @profile_picture.setter
    def profile_picture(self, profile_picture):
        """Sets the profile_picture of this ProfilePictureUpload.

        Profile picture file contents. Accepted extensions are png, jpg.

        :param profile_picture: The profile_picture of this ProfilePictureUpload.
        :type profile_picture: file
        """
        if profile_picture is None:
            raise ValueError("Invalid value for `profile_picture`, must not be `None`")

        self._profile_picture = profile_picture
