# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManualFile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, drive_file_id: int=None, is_proofread: bool=None, is_translated: bool=None, language: str=None, proofreading_file_id: int=None, translation_file_id: int=None):
        """ManualFile - a model defined in OpenAPI

        :param drive_file_id: The drive_file_id of this ManualFile.
        :param is_proofread: The is_proofread of this ManualFile.
        :param is_translated: The is_translated of this ManualFile.
        :param language: The language of this ManualFile.
        :param proofreading_file_id: The proofreading_file_id of this ManualFile.
        :param translation_file_id: The translation_file_id of this ManualFile.
        """
        self.openapi_types = {
            'drive_file_id': int,
            'is_proofread': bool,
            'is_translated': bool,
            'language': str,
            'proofreading_file_id': int,
            'translation_file_id': int
        }

        self.attribute_map = {
            'drive_file_id': 'driveFileId',
            'is_proofread': 'isProofread',
            'is_translated': 'isTranslated',
            'language': 'language',
            'proofreading_file_id': 'proofreadingFileId',
            'translation_file_id': 'translationFileId'
        }

        self._drive_file_id = drive_file_id
        self._is_proofread = is_proofread
        self._is_translated = is_translated
        self._language = language
        self._proofreading_file_id = proofreading_file_id
        self._translation_file_id = translation_file_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManualFile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManualFile of this ManualFile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def drive_file_id(self):
        """Gets the drive_file_id of this ManualFile.


        :return: The drive_file_id of this ManualFile.
        :rtype: int
        """
        return self._drive_file_id

    @drive_file_id.setter
    def drive_file_id(self, drive_file_id):
        """Sets the drive_file_id of this ManualFile.


        :param drive_file_id: The drive_file_id of this ManualFile.
        :type drive_file_id: int
        """

        self._drive_file_id = drive_file_id

    @property
    def is_proofread(self):
        """Gets the is_proofread of this ManualFile.


        :return: The is_proofread of this ManualFile.
        :rtype: bool
        """
        return self._is_proofread

    @is_proofread.setter
    def is_proofread(self, is_proofread):
        """Sets the is_proofread of this ManualFile.


        :param is_proofread: The is_proofread of this ManualFile.
        :type is_proofread: bool
        """

        self._is_proofread = is_proofread

    @property
    def is_translated(self):
        """Gets the is_translated of this ManualFile.


        :return: The is_translated of this ManualFile.
        :rtype: bool
        """
        return self._is_translated

    @is_translated.setter
    def is_translated(self, is_translated):
        """Sets the is_translated of this ManualFile.


        :param is_translated: The is_translated of this ManualFile.
        :type is_translated: bool
        """

        self._is_translated = is_translated

    @property
    def language(self):
        """Gets the language of this ManualFile.


        :return: The language of this ManualFile.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this ManualFile.


        :param language: The language of this ManualFile.
        :type language: str
        """

        self._language = language

    @property
    def proofreading_file_id(self):
        """Gets the proofreading_file_id of this ManualFile.


        :return: The proofreading_file_id of this ManualFile.
        :rtype: int
        """
        return self._proofreading_file_id

    @proofreading_file_id.setter
    def proofreading_file_id(self, proofreading_file_id):
        """Sets the proofreading_file_id of this ManualFile.


        :param proofreading_file_id: The proofreading_file_id of this ManualFile.
        :type proofreading_file_id: int
        """

        self._proofreading_file_id = proofreading_file_id

    @property
    def translation_file_id(self):
        """Gets the translation_file_id of this ManualFile.


        :return: The translation_file_id of this ManualFile.
        :rtype: int
        """
        return self._translation_file_id

    @translation_file_id.setter
    def translation_file_id(self, translation_file_id):
        """Sets the translation_file_id of this ManualFile.


        :param translation_file_id: The translation_file_id of this ManualFile.
        :type translation_file_id: int
        """

        self._translation_file_id = translation_file_id
