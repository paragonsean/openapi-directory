# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_string_with_translations import ClientStringWithTranslations
from openapi_server.models.monetary import Monetary
from openapi_server import util


class MachineTranslatedStrings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cost: Monetary=None, strings: List[ClientStringWithTranslations]=None):
        """MachineTranslatedStrings - a model defined in OpenAPI

        :param cost: The cost of this MachineTranslatedStrings.
        :param strings: The strings of this MachineTranslatedStrings.
        """
        self.openapi_types = {
            'cost': Monetary,
            'strings': List[ClientStringWithTranslations]
        }

        self.attribute_map = {
            'cost': 'cost',
            'strings': 'strings'
        }

        self._cost = cost
        self._strings = strings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MachineTranslatedStrings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MachineTranslatedStrings of this MachineTranslatedStrings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cost(self):
        """Gets the cost of this MachineTranslatedStrings.


        :return: The cost of this MachineTranslatedStrings.
        :rtype: Monetary
        """
        return self._cost

    @cost.setter
    def cost(self, cost):
        """Sets the cost of this MachineTranslatedStrings.


        :param cost: The cost of this MachineTranslatedStrings.
        :type cost: Monetary
        """

        self._cost = cost

    @property
    def strings(self):
        """Gets the strings of this MachineTranslatedStrings.


        :return: The strings of this MachineTranslatedStrings.
        :rtype: List[ClientStringWithTranslations]
        """
        return self._strings

    @strings.setter
    def strings(self, strings):
        """Sets the strings of this MachineTranslatedStrings.


        :param strings: The strings of this MachineTranslatedStrings.
        :type strings: List[ClientStringWithTranslations]
        """

        self._strings = strings
