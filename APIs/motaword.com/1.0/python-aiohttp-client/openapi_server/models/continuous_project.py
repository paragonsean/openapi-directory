# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.continuous_project_links import ContinuousProjectLinks
from openapi_server.models.subscription import Subscription
from openapi_server import util


class ContinuousProject(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, analytics_enabled: bool=None, auto_start_postedit: bool=None, created_at: datetime=None, id: int=None, is_enabled: bool=None, last_activity_at: datetime=None, links: ContinuousProjectLinks=None, mt_enabled: bool=None, mt_engine: str=None, name: str=None, postedit_enabled: bool=None, source_language: str=None, status: str=None, subscription: Subscription=None, target_languages: List[str]=None, type: str=None, word_count: int=None):
        """ContinuousProject - a model defined in OpenAPI

        :param analytics_enabled: The analytics_enabled of this ContinuousProject.
        :param auto_start_postedit: The auto_start_postedit of this ContinuousProject.
        :param created_at: The created_at of this ContinuousProject.
        :param id: The id of this ContinuousProject.
        :param is_enabled: The is_enabled of this ContinuousProject.
        :param last_activity_at: The last_activity_at of this ContinuousProject.
        :param links: The links of this ContinuousProject.
        :param mt_enabled: The mt_enabled of this ContinuousProject.
        :param mt_engine: The mt_engine of this ContinuousProject.
        :param name: The name of this ContinuousProject.
        :param postedit_enabled: The postedit_enabled of this ContinuousProject.
        :param source_language: The source_language of this ContinuousProject.
        :param status: The status of this ContinuousProject.
        :param subscription: The subscription of this ContinuousProject.
        :param target_languages: The target_languages of this ContinuousProject.
        :param type: The type of this ContinuousProject.
        :param word_count: The word_count of this ContinuousProject.
        """
        self.openapi_types = {
            'analytics_enabled': bool,
            'auto_start_postedit': bool,
            'created_at': datetime,
            'id': int,
            'is_enabled': bool,
            'last_activity_at': datetime,
            'links': ContinuousProjectLinks,
            'mt_enabled': bool,
            'mt_engine': str,
            'name': str,
            'postedit_enabled': bool,
            'source_language': str,
            'status': str,
            'subscription': Subscription,
            'target_languages': List[str],
            'type': str,
            'word_count': int
        }

        self.attribute_map = {
            'analytics_enabled': 'analytics_enabled',
            'auto_start_postedit': 'auto_start_postedit',
            'created_at': 'created_at',
            'id': 'id',
            'is_enabled': 'is_enabled',
            'last_activity_at': 'last_activity_at',
            'links': 'links',
            'mt_enabled': 'mt_enabled',
            'mt_engine': 'mt_engine',
            'name': 'name',
            'postedit_enabled': 'postedit_enabled',
            'source_language': 'source_language',
            'status': 'status',
            'subscription': 'subscription',
            'target_languages': 'target_languages',
            'type': 'type',
            'word_count': 'word_count'
        }

        self._analytics_enabled = analytics_enabled
        self._auto_start_postedit = auto_start_postedit
        self._created_at = created_at
        self._id = id
        self._is_enabled = is_enabled
        self._last_activity_at = last_activity_at
        self._links = links
        self._mt_enabled = mt_enabled
        self._mt_engine = mt_engine
        self._name = name
        self._postedit_enabled = postedit_enabled
        self._source_language = source_language
        self._status = status
        self._subscription = subscription
        self._target_languages = target_languages
        self._type = type
        self._word_count = word_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousProject':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousProject of this ContinuousProject.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def analytics_enabled(self):
        """Gets the analytics_enabled of this ContinuousProject.

        Should we collect analytics data from Active for this continuous project?

        :return: The analytics_enabled of this ContinuousProject.
        :rtype: bool
        """
        return self._analytics_enabled

    @analytics_enabled.setter
    def analytics_enabled(self, analytics_enabled):
        """Sets the analytics_enabled of this ContinuousProject.

        Should we collect analytics data from Active for this continuous project?

        :param analytics_enabled: The analytics_enabled of this ContinuousProject.
        :type analytics_enabled: bool
        """

        self._analytics_enabled = analytics_enabled

    @property
    def auto_start_postedit(self):
        """Gets the auto_start_postedit of this ContinuousProject.

        Immediately start post-editing project for translation requests that are applied MT.

        :return: The auto_start_postedit of this ContinuousProject.
        :rtype: bool
        """
        return self._auto_start_postedit

    @auto_start_postedit.setter
    def auto_start_postedit(self, auto_start_postedit):
        """Sets the auto_start_postedit of this ContinuousProject.

        Immediately start post-editing project for translation requests that are applied MT.

        :param auto_start_postedit: The auto_start_postedit of this ContinuousProject.
        :type auto_start_postedit: bool
        """

        self._auto_start_postedit = auto_start_postedit

    @property
    def created_at(self):
        """Gets the created_at of this ContinuousProject.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :return: The created_at of this ContinuousProject.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ContinuousProject.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :param created_at: The created_at of this ContinuousProject.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def id(self):
        """Gets the id of this ContinuousProject.


        :return: The id of this ContinuousProject.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContinuousProject.


        :param id: The id of this ContinuousProject.
        :type id: int
        """

        self._id = id

    @property
    def is_enabled(self):
        """Gets the is_enabled of this ContinuousProject.


        :return: The is_enabled of this ContinuousProject.
        :rtype: bool
        """
        return self._is_enabled

    @is_enabled.setter
    def is_enabled(self, is_enabled):
        """Sets the is_enabled of this ContinuousProject.


        :param is_enabled: The is_enabled of this ContinuousProject.
        :type is_enabled: bool
        """

        self._is_enabled = is_enabled

    @property
    def last_activity_at(self):
        """Gets the last_activity_at of this ContinuousProject.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :return: The last_activity_at of this ContinuousProject.
        :rtype: datetime
        """
        return self._last_activity_at

    @last_activity_at.setter
    def last_activity_at(self, last_activity_at):
        """Sets the last_activity_at of this ContinuousProject.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :param last_activity_at: The last_activity_at of this ContinuousProject.
        :type last_activity_at: datetime
        """

        self._last_activity_at = last_activity_at

    @property
    def links(self):
        """Gets the links of this ContinuousProject.


        :return: The links of this ContinuousProject.
        :rtype: ContinuousProjectLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ContinuousProject.


        :param links: The links of this ContinuousProject.
        :type links: ContinuousProjectLinks
        """

        self._links = links

    @property
    def mt_enabled(self):
        """Gets the mt_enabled of this ContinuousProject.

        Immediately apply MT on translation requests if they are missing from TM.

        :return: The mt_enabled of this ContinuousProject.
        :rtype: bool
        """
        return self._mt_enabled

    @mt_enabled.setter
    def mt_enabled(self, mt_enabled):
        """Sets the mt_enabled of this ContinuousProject.

        Immediately apply MT on translation requests if they are missing from TM.

        :param mt_enabled: The mt_enabled of this ContinuousProject.
        :type mt_enabled: bool
        """

        self._mt_enabled = mt_enabled

    @property
    def mt_engine(self):
        """Gets the mt_engine of this ContinuousProject.

        One of \"MOTAWORD\", \"GOOGLE\", \"AMAZON\", \"MS\". Default is \"MOTAWORD\".

        :return: The mt_engine of this ContinuousProject.
        :rtype: str
        """
        return self._mt_engine

    @mt_engine.setter
    def mt_engine(self, mt_engine):
        """Sets the mt_engine of this ContinuousProject.

        One of \"MOTAWORD\", \"GOOGLE\", \"AMAZON\", \"MS\". Default is \"MOTAWORD\".

        :param mt_engine: The mt_engine of this ContinuousProject.
        :type mt_engine: str
        """

        self._mt_engine = mt_engine

    @property
    def name(self):
        """Gets the name of this ContinuousProject.


        :return: The name of this ContinuousProject.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContinuousProject.


        :param name: The name of this ContinuousProject.
        :type name: str
        """

        self._name = name

    @property
    def postedit_enabled(self):
        """Gets the postedit_enabled of this ContinuousProject.

        Get an instant quote for translation requests that are applied MT.

        :return: The postedit_enabled of this ContinuousProject.
        :rtype: bool
        """
        return self._postedit_enabled

    @postedit_enabled.setter
    def postedit_enabled(self, postedit_enabled):
        """Sets the postedit_enabled of this ContinuousProject.

        Get an instant quote for translation requests that are applied MT.

        :param postedit_enabled: The postedit_enabled of this ContinuousProject.
        :type postedit_enabled: bool
        """

        self._postedit_enabled = postedit_enabled

    @property
    def source_language(self):
        """Gets the source_language of this ContinuousProject.


        :return: The source_language of this ContinuousProject.
        :rtype: str
        """
        return self._source_language

    @source_language.setter
    def source_language(self, source_language):
        """Sets the source_language of this ContinuousProject.


        :param source_language: The source_language of this ContinuousProject.
        :type source_language: str
        """

        self._source_language = source_language

    @property
    def status(self):
        """Gets the status of this ContinuousProject.

        One of \"a => ACTIVE\", \"i => INACTIVE\", \"d => DELETED\", \"c => SCHEDULED CANCELLATION\", \"p => SCHEDULED CHANGE\"

        :return: The status of this ContinuousProject.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ContinuousProject.

        One of \"a => ACTIVE\", \"i => INACTIVE\", \"d => DELETED\", \"c => SCHEDULED CANCELLATION\", \"p => SCHEDULED CHANGE\"

        :param status: The status of this ContinuousProject.
        :type status: str
        """

        self._status = status

    @property
    def subscription(self):
        """Gets the subscription of this ContinuousProject.


        :return: The subscription of this ContinuousProject.
        :rtype: Subscription
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this ContinuousProject.


        :param subscription: The subscription of this ContinuousProject.
        :type subscription: Subscription
        """

        self._subscription = subscription

    @property
    def target_languages(self):
        """Gets the target_languages of this ContinuousProject.


        :return: The target_languages of this ContinuousProject.
        :rtype: List[str]
        """
        return self._target_languages

    @target_languages.setter
    def target_languages(self, target_languages):
        """Sets the target_languages of this ContinuousProject.


        :param target_languages: The target_languages of this ContinuousProject.
        :type target_languages: List[str]
        """

        self._target_languages = target_languages

    @property
    def type(self):
        """Gets the type of this ContinuousProject.

        Continuous project type. We currently have only 2 types, NULL and \"active\".

        :return: The type of this ContinuousProject.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ContinuousProject.

        Continuous project type. We currently have only 2 types, NULL and \"active\".

        :param type: The type of this ContinuousProject.
        :type type: str
        """

        self._type = type

    @property
    def word_count(self):
        """Gets the word_count of this ContinuousProject.


        :return: The word_count of this ContinuousProject.
        :rtype: int
        """
        return self._word_count

    @word_count.setter
    def word_count(self, word_count):
        """Sets the word_count of this ContinuousProject.


        :param word_count: The word_count of this ContinuousProject.
        :type word_count: int
        """

        self._word_count = word_count
