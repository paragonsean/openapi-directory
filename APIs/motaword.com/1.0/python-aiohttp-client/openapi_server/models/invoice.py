# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.billing_address import BillingAddress
from openapi_server.models.invoice_links import InvoiceLinks
from openapi_server import util


class Invoice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, amount: float=None, base_amount: float=None, base_currency: str='usd', billing: BillingAddress=None, currency: str='usd', id: int=None, invoice_no: int=None, invoiced_at: datetime=None, links: InvoiceLinks=None, status: str=None):
        """Invoice - a model defined in OpenAPI

        :param amount: The amount of this Invoice.
        :param base_amount: The base_amount of this Invoice.
        :param base_currency: The base_currency of this Invoice.
        :param billing: The billing of this Invoice.
        :param currency: The currency of this Invoice.
        :param id: The id of this Invoice.
        :param invoice_no: The invoice_no of this Invoice.
        :param invoiced_at: The invoiced_at of this Invoice.
        :param links: The links of this Invoice.
        :param status: The status of this Invoice.
        """
        self.openapi_types = {
            'amount': float,
            'base_amount': float,
            'base_currency': str,
            'billing': BillingAddress,
            'currency': str,
            'id': int,
            'invoice_no': int,
            'invoiced_at': datetime,
            'links': InvoiceLinks,
            'status': str
        }

        self.attribute_map = {
            'amount': 'amount',
            'base_amount': 'base_amount',
            'base_currency': 'base_currency',
            'billing': 'billing',
            'currency': 'currency',
            'id': 'id',
            'invoice_no': 'invoice_no',
            'invoiced_at': 'invoiced_at',
            'links': 'links',
            'status': 'status'
        }

        self._amount = amount
        self._base_amount = base_amount
        self._base_currency = base_currency
        self._billing = billing
        self._currency = currency
        self._id = id
        self._invoice_no = invoice_no
        self._invoiced_at = invoiced_at
        self._links = links
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Invoice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Invoice of this Invoice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def amount(self):
        """Gets the amount of this Invoice.

        Monetary amount

        :return: The amount of this Invoice.
        :rtype: float
        """
        return self._amount

    @amount.setter
    def amount(self, amount):
        """Sets the amount of this Invoice.

        Monetary amount

        :param amount: The amount of this Invoice.
        :type amount: float
        """

        self._amount = amount

    @property
    def base_amount(self):
        """Gets the base_amount of this Invoice.

        Monetary amount

        :return: The base_amount of this Invoice.
        :rtype: float
        """
        return self._base_amount

    @base_amount.setter
    def base_amount(self, base_amount):
        """Sets the base_amount of this Invoice.

        Monetary amount

        :param base_amount: The base_amount of this Invoice.
        :type base_amount: float
        """

        self._base_amount = base_amount

    @property
    def base_currency(self):
        """Gets the base_currency of this Invoice.


        :return: The base_currency of this Invoice.
        :rtype: str
        """
        return self._base_currency

    @base_currency.setter
    def base_currency(self, base_currency):
        """Sets the base_currency of this Invoice.


        :param base_currency: The base_currency of this Invoice.
        :type base_currency: str
        """

        self._base_currency = base_currency

    @property
    def billing(self):
        """Gets the billing of this Invoice.


        :return: The billing of this Invoice.
        :rtype: BillingAddress
        """
        return self._billing

    @billing.setter
    def billing(self, billing):
        """Sets the billing of this Invoice.


        :param billing: The billing of this Invoice.
        :type billing: BillingAddress
        """

        self._billing = billing

    @property
    def currency(self):
        """Gets the currency of this Invoice.


        :return: The currency of this Invoice.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this Invoice.


        :param currency: The currency of this Invoice.
        :type currency: str
        """

        self._currency = currency

    @property
    def id(self):
        """Gets the id of this Invoice.


        :return: The id of this Invoice.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Invoice.


        :param id: The id of this Invoice.
        :type id: int
        """

        self._id = id

    @property
    def invoice_no(self):
        """Gets the invoice_no of this Invoice.


        :return: The invoice_no of this Invoice.
        :rtype: int
        """
        return self._invoice_no

    @invoice_no.setter
    def invoice_no(self, invoice_no):
        """Sets the invoice_no of this Invoice.


        :param invoice_no: The invoice_no of this Invoice.
        :type invoice_no: int
        """

        self._invoice_no = invoice_no

    @property
    def invoiced_at(self):
        """Gets the invoiced_at of this Invoice.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :return: The invoiced_at of this Invoice.
        :rtype: datetime
        """
        return self._invoiced_at

    @invoiced_at.setter
    def invoiced_at(self, invoiced_at):
        """Sets the invoiced_at of this Invoice.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :param invoiced_at: The invoiced_at of this Invoice.
        :type invoiced_at: datetime
        """

        self._invoiced_at = invoiced_at

    @property
    def links(self):
        """Gets the links of this Invoice.


        :return: The links of this Invoice.
        :rtype: InvoiceLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this Invoice.


        :param links: The links of this Invoice.
        :type links: InvoiceLinks
        """

        self._links = links

    @property
    def status(self):
        """Gets the status of this Invoice.


        :return: The status of this Invoice.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this Invoice.


        :param status: The status of this Invoice.
        :type status: str
        """

        self._status = status
