# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_needs_vendor import FileNeedsVendor
from openapi_server import util


class VendorWithNeeds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, matched_needs: List[FileNeedsVendor]=None, user_id: int=None):
        """VendorWithNeeds - a model defined in OpenAPI

        :param matched_needs: The matched_needs of this VendorWithNeeds.
        :param user_id: The user_id of this VendorWithNeeds.
        """
        self.openapi_types = {
            'matched_needs': List[FileNeedsVendor],
            'user_id': int
        }

        self.attribute_map = {
            'matched_needs': 'matchedNeeds',
            'user_id': 'userId'
        }

        self._matched_needs = matched_needs
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VendorWithNeeds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VendorWithNeeds of this VendorWithNeeds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def matched_needs(self):
        """Gets the matched_needs of this VendorWithNeeds.


        :return: The matched_needs of this VendorWithNeeds.
        :rtype: List[FileNeedsVendor]
        """
        return self._matched_needs

    @matched_needs.setter
    def matched_needs(self, matched_needs):
        """Sets the matched_needs of this VendorWithNeeds.


        :param matched_needs: The matched_needs of this VendorWithNeeds.
        :type matched_needs: List[FileNeedsVendor]
        """

        self._matched_needs = matched_needs

    @property
    def user_id(self):
        """Gets the user_id of this VendorWithNeeds.


        :return: The user_id of this VendorWithNeeds.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this VendorWithNeeds.


        :param user_id: The user_id of this VendorWithNeeds.
        :type user_id: int
        """

        self._user_id = user_id
