# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LinkedSourceDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, size: int=None, source: str=None, url: str=None):
        """LinkedSourceDocument - a model defined in OpenAPI

        :param name: The name of this LinkedSourceDocument.
        :param size: The size of this LinkedSourceDocument.
        :param source: The source of this LinkedSourceDocument.
        :param url: The url of this LinkedSourceDocument.
        """
        self.openapi_types = {
            'name': str,
            'size': int,
            'source': str,
            'url': str
        }

        self.attribute_map = {
            'name': 'name',
            'size': 'size',
            'source': 'source',
            'url': 'url'
        }

        self._name = name
        self._size = size
        self._source = source
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LinkedSourceDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LinkedSourceDocument of this LinkedSourceDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this LinkedSourceDocument.


        :return: The name of this LinkedSourceDocument.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this LinkedSourceDocument.


        :param name: The name of this LinkedSourceDocument.
        :type name: str
        """

        self._name = name

    @property
    def size(self):
        """Gets the size of this LinkedSourceDocument.

        file size in bytes. optional.

        :return: The size of this LinkedSourceDocument.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this LinkedSourceDocument.

        file size in bytes. optional.

        :param size: The size of this LinkedSourceDocument.
        :type size: int
        """

        self._size = size

    @property
    def source(self):
        """Gets the source of this LinkedSourceDocument.

        Preferred source names are listed as enum. If you have a custom file type, simply enter that name.

        :return: The source of this LinkedSourceDocument.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this LinkedSourceDocument.

        Preferred source names are listed as enum. If you have a custom file type, simply enter that name.

        :param source: The source of this LinkedSourceDocument.
        :type source: str
        """
        allowed_values = ["dropbox", "googledrive", "icloud"]  # noqa: E501
        if source not in allowed_values:
            raise ValueError(
                "Invalid value for `source` ({0}), must be one of {1}"
                .format(source, allowed_values)
            )

        self._source = source

    @property
    def url(self):
        """Gets the url of this LinkedSourceDocument.


        :return: The url of this LinkedSourceDocument.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this LinkedSourceDocument.


        :param url: The url of this LinkedSourceDocument.
        :type url: str
        """

        self._url = url
