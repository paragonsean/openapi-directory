# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.monetary import Monetary
from openapi_server import util


class ContinuousProjectCosts(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, mt: Monetary=None, post_edit: Monetary=None, saved: Monetary=None, total: Monetary=None):
        """ContinuousProjectCosts - a model defined in OpenAPI

        :param mt: The mt of this ContinuousProjectCosts.
        :param post_edit: The post_edit of this ContinuousProjectCosts.
        :param saved: The saved of this ContinuousProjectCosts.
        :param total: The total of this ContinuousProjectCosts.
        """
        self.openapi_types = {
            'mt': Monetary,
            'post_edit': Monetary,
            'saved': Monetary,
            'total': Monetary
        }

        self.attribute_map = {
            'mt': 'mt',
            'post_edit': 'post_edit',
            'saved': 'saved',
            'total': 'total'
        }

        self._mt = mt
        self._post_edit = post_edit
        self._saved = saved
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousProjectCosts':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousProjectCosts of this ContinuousProjectCosts.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def mt(self):
        """Gets the mt of this ContinuousProjectCosts.


        :return: The mt of this ContinuousProjectCosts.
        :rtype: Monetary
        """
        return self._mt

    @mt.setter
    def mt(self, mt):
        """Sets the mt of this ContinuousProjectCosts.


        :param mt: The mt of this ContinuousProjectCosts.
        :type mt: Monetary
        """

        self._mt = mt

    @property
    def post_edit(self):
        """Gets the post_edit of this ContinuousProjectCosts.


        :return: The post_edit of this ContinuousProjectCosts.
        :rtype: Monetary
        """
        return self._post_edit

    @post_edit.setter
    def post_edit(self, post_edit):
        """Sets the post_edit of this ContinuousProjectCosts.


        :param post_edit: The post_edit of this ContinuousProjectCosts.
        :type post_edit: Monetary
        """

        self._post_edit = post_edit

    @property
    def saved(self):
        """Gets the saved of this ContinuousProjectCosts.


        :return: The saved of this ContinuousProjectCosts.
        :rtype: Monetary
        """
        return self._saved

    @saved.setter
    def saved(self, saved):
        """Sets the saved of this ContinuousProjectCosts.


        :param saved: The saved of this ContinuousProjectCosts.
        :type saved: Monetary
        """

        self._saved = saved

    @property
    def total(self):
        """Gets the total of this ContinuousProjectCosts.


        :return: The total of this ContinuousProjectCosts.
        :rtype: Monetary
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ContinuousProjectCosts.


        :param total: The total of this ContinuousProjectCosts.
        :type total: Monetary
        """

        self._total = total
