# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProofreaderWithLanguage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_name: str=None, id: float=None, language: str=None, vendor_link: str=None):
        """ProofreaderWithLanguage - a model defined in OpenAPI

        :param full_name: The full_name of this ProofreaderWithLanguage.
        :param id: The id of this ProofreaderWithLanguage.
        :param language: The language of this ProofreaderWithLanguage.
        :param vendor_link: The vendor_link of this ProofreaderWithLanguage.
        """
        self.openapi_types = {
            'full_name': str,
            'id': float,
            'language': str,
            'vendor_link': str
        }

        self.attribute_map = {
            'full_name': 'full_name',
            'id': 'id',
            'language': 'language',
            'vendor_link': 'vendor_link'
        }

        self._full_name = full_name
        self._id = id
        self._language = language
        self._vendor_link = vendor_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProofreaderWithLanguage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProofreaderWithLanguage of this ProofreaderWithLanguage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_name(self):
        """Gets the full_name of this ProofreaderWithLanguage.

        full name of the proofreader

        :return: The full_name of this ProofreaderWithLanguage.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this ProofreaderWithLanguage.

        full name of the proofreader

        :param full_name: The full_name of this ProofreaderWithLanguage.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def id(self):
        """Gets the id of this ProofreaderWithLanguage.

        proofreader id

        :return: The id of this ProofreaderWithLanguage.
        :rtype: float
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProofreaderWithLanguage.

        proofreader id

        :param id: The id of this ProofreaderWithLanguage.
        :type id: float
        """

        self._id = id

    @property
    def language(self):
        """Gets the language of this ProofreaderWithLanguage.

        language code (i.e en-US)

        :return: The language of this ProofreaderWithLanguage.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this ProofreaderWithLanguage.

        language code (i.e en-US)

        :param language: The language of this ProofreaderWithLanguage.
        :type language: str
        """

        self._language = language

    @property
    def vendor_link(self):
        """Gets the vendor_link of this ProofreaderWithLanguage.

        link to the vendor that can be only used in motaword admin application

        :return: The vendor_link of this ProofreaderWithLanguage.
        :rtype: str
        """
        return self._vendor_link

    @vendor_link.setter
    def vendor_link(self, vendor_link):
        """Sets the vendor_link of this ProofreaderWithLanguage.

        link to the vendor that can be only used in motaword admin application

        :param vendor_link: The vendor_link of this ProofreaderWithLanguage.
        :type vendor_link: str
        """

        self._vendor_link = vendor_link
