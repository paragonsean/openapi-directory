# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_stats import ClientStats
from openapi_server.models.vendor_stats import VendorStats
from openapi_server import util


class Stats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client: ClientStats=None, vendor: VendorStats=None):
        """Stats - a model defined in OpenAPI

        :param client: The client of this Stats.
        :param vendor: The vendor of this Stats.
        """
        self.openapi_types = {
            'client': ClientStats,
            'vendor': VendorStats
        }

        self.attribute_map = {
            'client': 'client',
            'vendor': 'vendor'
        }

        self._client = client
        self._vendor = vendor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stats of this Stats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client(self):
        """Gets the client of this Stats.


        :return: The client of this Stats.
        :rtype: ClientStats
        """
        return self._client

    @client.setter
    def client(self, client):
        """Sets the client of this Stats.


        :param client: The client of this Stats.
        :type client: ClientStats
        """

        self._client = client

    @property
    def vendor(self):
        """Gets the vendor of this Stats.


        :return: The vendor of this Stats.
        :rtype: VendorStats
        """
        return self._vendor

    @vendor.setter
    def vendor(self, vendor):
        """Sets the vendor of this Stats.


        :param vendor: The vendor of this Stats.
        :type vendor: VendorStats
        """

        self._vendor = vendor
