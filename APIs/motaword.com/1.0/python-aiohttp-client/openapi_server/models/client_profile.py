# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.client_profile_nps import ClientProfileNps
from openapi_server.models.proofreader_with_language import ProofreaderWithLanguage
from openapi_server import util


class ClientProfile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_creation_date: datetime=None, client_project_count: float=None, corporate: str=None, corporate_id: float=None, corporate_user_count: float=None, frequent_file_extension: str=None, frequent_language_pairs: List[str]=None, full_name: str=None, growth: bool=None, is_complex: bool=None, last_12_months_spending: float=None, last_project: float=None, last_project_time: datetime=None, last_proofreaders: List[ProofreaderWithLanguage]=None, notes: List[str]=None, nps: ClientProfileNps=None, user_rank_in_project_count: float=None, user_rank_in_spending: float=None):
        """ClientProfile - a model defined in OpenAPI

        :param account_creation_date: The account_creation_date of this ClientProfile.
        :param client_project_count: The client_project_count of this ClientProfile.
        :param corporate: The corporate of this ClientProfile.
        :param corporate_id: The corporate_id of this ClientProfile.
        :param corporate_user_count: The corporate_user_count of this ClientProfile.
        :param frequent_file_extension: The frequent_file_extension of this ClientProfile.
        :param frequent_language_pairs: The frequent_language_pairs of this ClientProfile.
        :param full_name: The full_name of this ClientProfile.
        :param growth: The growth of this ClientProfile.
        :param is_complex: The is_complex of this ClientProfile.
        :param last_12_months_spending: The last_12_months_spending of this ClientProfile.
        :param last_project: The last_project of this ClientProfile.
        :param last_project_time: The last_project_time of this ClientProfile.
        :param last_proofreaders: The last_proofreaders of this ClientProfile.
        :param notes: The notes of this ClientProfile.
        :param nps: The nps of this ClientProfile.
        :param user_rank_in_project_count: The user_rank_in_project_count of this ClientProfile.
        :param user_rank_in_spending: The user_rank_in_spending of this ClientProfile.
        """
        self.openapi_types = {
            'account_creation_date': datetime,
            'client_project_count': float,
            'corporate': str,
            'corporate_id': float,
            'corporate_user_count': float,
            'frequent_file_extension': str,
            'frequent_language_pairs': List[str],
            'full_name': str,
            'growth': bool,
            'is_complex': bool,
            'last_12_months_spending': float,
            'last_project': float,
            'last_project_time': datetime,
            'last_proofreaders': List[ProofreaderWithLanguage],
            'notes': List[str],
            'nps': ClientProfileNps,
            'user_rank_in_project_count': float,
            'user_rank_in_spending': float
        }

        self.attribute_map = {
            'account_creation_date': 'account_creation_date',
            'client_project_count': 'client_project_count',
            'corporate': 'corporate',
            'corporate_id': 'corporate_id',
            'corporate_user_count': 'corporate_user_count',
            'frequent_file_extension': 'frequent_file_extension',
            'frequent_language_pairs': 'frequent_language_pairs',
            'full_name': 'full_name',
            'growth': 'growth',
            'is_complex': 'is_complex',
            'last_12_months_spending': 'last_12_months_spending',
            'last_project': 'last_project',
            'last_project_time': 'last_project_time',
            'last_proofreaders': 'last_proofreaders',
            'notes': 'notes',
            'nps': 'nps',
            'user_rank_in_project_count': 'user_rank_in_project_count',
            'user_rank_in_spending': 'user_rank_in_spending'
        }

        self._account_creation_date = account_creation_date
        self._client_project_count = client_project_count
        self._corporate = corporate
        self._corporate_id = corporate_id
        self._corporate_user_count = corporate_user_count
        self._frequent_file_extension = frequent_file_extension
        self._frequent_language_pairs = frequent_language_pairs
        self._full_name = full_name
        self._growth = growth
        self._is_complex = is_complex
        self._last_12_months_spending = last_12_months_spending
        self._last_project = last_project
        self._last_project_time = last_project_time
        self._last_proofreaders = last_proofreaders
        self._notes = notes
        self._nps = nps
        self._user_rank_in_project_count = user_rank_in_project_count
        self._user_rank_in_spending = user_rank_in_spending

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientProfile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientProfile of this ClientProfile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_creation_date(self):
        """Gets the account_creation_date of this ClientProfile.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :return: The account_creation_date of this ClientProfile.
        :rtype: datetime
        """
        return self._account_creation_date

    @account_creation_date.setter
    def account_creation_date(self, account_creation_date):
        """Sets the account_creation_date of this ClientProfile.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :param account_creation_date: The account_creation_date of this ClientProfile.
        :type account_creation_date: datetime
        """

        self._account_creation_date = account_creation_date

    @property
    def client_project_count(self):
        """Gets the client_project_count of this ClientProfile.

        total project count that this client sent

        :return: The client_project_count of this ClientProfile.
        :rtype: float
        """
        return self._client_project_count

    @client_project_count.setter
    def client_project_count(self, client_project_count):
        """Sets the client_project_count of this ClientProfile.

        total project count that this client sent

        :param client_project_count: The client_project_count of this ClientProfile.
        :type client_project_count: float
        """

        self._client_project_count = client_project_count

    @property
    def corporate(self):
        """Gets the corporate of this ClientProfile.

        corporate name

        :return: The corporate of this ClientProfile.
        :rtype: str
        """
        return self._corporate

    @corporate.setter
    def corporate(self, corporate):
        """Sets the corporate of this ClientProfile.

        corporate name

        :param corporate: The corporate of this ClientProfile.
        :type corporate: str
        """

        self._corporate = corporate

    @property
    def corporate_id(self):
        """Gets the corporate_id of this ClientProfile.

        corporate id

        :return: The corporate_id of this ClientProfile.
        :rtype: float
        """
        return self._corporate_id

    @corporate_id.setter
    def corporate_id(self, corporate_id):
        """Sets the corporate_id of this ClientProfile.

        corporate id

        :param corporate_id: The corporate_id of this ClientProfile.
        :type corporate_id: float
        """

        self._corporate_id = corporate_id

    @property
    def corporate_user_count(self):
        """Gets the corporate_user_count of this ClientProfile.

        total user count in a corporation

        :return: The corporate_user_count of this ClientProfile.
        :rtype: float
        """
        return self._corporate_user_count

    @corporate_user_count.setter
    def corporate_user_count(self, corporate_user_count):
        """Sets the corporate_user_count of this ClientProfile.

        total user count in a corporation

        :param corporate_user_count: The corporate_user_count of this ClientProfile.
        :type corporate_user_count: float
        """

        self._corporate_user_count = corporate_user_count

    @property
    def frequent_file_extension(self):
        """Gets the frequent_file_extension of this ClientProfile.

        the file extension for the files that usually this client sent

        :return: The frequent_file_extension of this ClientProfile.
        :rtype: str
        """
        return self._frequent_file_extension

    @frequent_file_extension.setter
    def frequent_file_extension(self, frequent_file_extension):
        """Sets the frequent_file_extension of this ClientProfile.

        the file extension for the files that usually this client sent

        :param frequent_file_extension: The frequent_file_extension of this ClientProfile.
        :type frequent_file_extension: str
        """

        self._frequent_file_extension = frequent_file_extension

    @property
    def frequent_language_pairs(self):
        """Gets the frequent_language_pairs of this ClientProfile.

        frequent language pairs

        :return: The frequent_language_pairs of this ClientProfile.
        :rtype: List[str]
        """
        return self._frequent_language_pairs

    @frequent_language_pairs.setter
    def frequent_language_pairs(self, frequent_language_pairs):
        """Sets the frequent_language_pairs of this ClientProfile.

        frequent language pairs

        :param frequent_language_pairs: The frequent_language_pairs of this ClientProfile.
        :type frequent_language_pairs: List[str]
        """

        self._frequent_language_pairs = frequent_language_pairs

    @property
    def full_name(self):
        """Gets the full_name of this ClientProfile.

        full name of the client

        :return: The full_name of this ClientProfile.
        :rtype: str
        """
        return self._full_name

    @full_name.setter
    def full_name(self, full_name):
        """Sets the full_name of this ClientProfile.

        full name of the client

        :param full_name: The full_name of this ClientProfile.
        :type full_name: str
        """

        self._full_name = full_name

    @property
    def growth(self):
        """Gets the growth of this ClientProfile.

        The answer for the question \"Is there any growth for this corporate's spending\". The values can be true, false or null if the corporate is oour client for less than 6 months

        :return: The growth of this ClientProfile.
        :rtype: bool
        """
        return self._growth

    @growth.setter
    def growth(self, growth):
        """Sets the growth of this ClientProfile.

        The answer for the question \"Is there any growth for this corporate's spending\". The values can be true, false or null if the corporate is oour client for less than 6 months

        :param growth: The growth of this ClientProfile.
        :type growth: bool
        """

        self._growth = growth

    @property
    def is_complex(self):
        """Gets the is_complex of this ClientProfile.

        the answer for the question \"Is this client usually sent complex projects?\"

        :return: The is_complex of this ClientProfile.
        :rtype: bool
        """
        return self._is_complex

    @is_complex.setter
    def is_complex(self, is_complex):
        """Sets the is_complex of this ClientProfile.

        the answer for the question \"Is this client usually sent complex projects?\"

        :param is_complex: The is_complex of this ClientProfile.
        :type is_complex: bool
        """

        self._is_complex = is_complex

    @property
    def last_12_months_spending(self):
        """Gets the last_12_months_spending of this ClientProfile.

        corporate's spending in twelve months

        :return: The last_12_months_spending of this ClientProfile.
        :rtype: float
        """
        return self._last_12_months_spending

    @last_12_months_spending.setter
    def last_12_months_spending(self, last_12_months_spending):
        """Sets the last_12_months_spending of this ClientProfile.

        corporate's spending in twelve months

        :param last_12_months_spending: The last_12_months_spending of this ClientProfile.
        :type last_12_months_spending: float
        """

        self._last_12_months_spending = last_12_months_spending

    @property
    def last_project(self):
        """Gets the last_project of this ClientProfile.

        the quote number for the last project of this client

        :return: The last_project of this ClientProfile.
        :rtype: float
        """
        return self._last_project

    @last_project.setter
    def last_project(self, last_project):
        """Sets the last_project of this ClientProfile.

        the quote number for the last project of this client

        :param last_project: The last_project of this ClientProfile.
        :type last_project: float
        """

        self._last_project = last_project

    @property
    def last_project_time(self):
        """Gets the last_project_time of this ClientProfile.

        the creation date of the last project that is sent by this client

        :return: The last_project_time of this ClientProfile.
        :rtype: datetime
        """
        return self._last_project_time

    @last_project_time.setter
    def last_project_time(self, last_project_time):
        """Sets the last_project_time of this ClientProfile.

        the creation date of the last project that is sent by this client

        :param last_project_time: The last_project_time of this ClientProfile.
        :type last_project_time: datetime
        """

        self._last_project_time = last_project_time

    @property
    def last_proofreaders(self):
        """Gets the last_proofreaders of this ClientProfile.

        list of prooofreaders for the target languages of last project

        :return: The last_proofreaders of this ClientProfile.
        :rtype: List[ProofreaderWithLanguage]
        """
        return self._last_proofreaders

    @last_proofreaders.setter
    def last_proofreaders(self, last_proofreaders):
        """Sets the last_proofreaders of this ClientProfile.

        list of prooofreaders for the target languages of last project

        :param last_proofreaders: The last_proofreaders of this ClientProfile.
        :type last_proofreaders: List[ProofreaderWithLanguage]
        """

        self._last_proofreaders = last_proofreaders

    @property
    def notes(self):
        """Gets the notes of this ClientProfile.

        notes that is submited for this client and/or with her projects

        :return: The notes of this ClientProfile.
        :rtype: List[str]
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this ClientProfile.

        notes that is submited for this client and/or with her projects

        :param notes: The notes of this ClientProfile.
        :type notes: List[str]
        """

        self._notes = notes

    @property
    def nps(self):
        """Gets the nps of this ClientProfile.


        :return: The nps of this ClientProfile.
        :rtype: ClientProfileNps
        """
        return self._nps

    @nps.setter
    def nps(self, nps):
        """Sets the nps of this ClientProfile.


        :param nps: The nps of this ClientProfile.
        :type nps: ClientProfileNps
        """

        self._nps = nps

    @property
    def user_rank_in_project_count(self):
        """Gets the user_rank_in_project_count of this ClientProfile.

        rank of the user in all corporate users for project count. If the user is the most active user foor sending projects her rank is 1

        :return: The user_rank_in_project_count of this ClientProfile.
        :rtype: float
        """
        return self._user_rank_in_project_count

    @user_rank_in_project_count.setter
    def user_rank_in_project_count(self, user_rank_in_project_count):
        """Sets the user_rank_in_project_count of this ClientProfile.

        rank of the user in all corporate users for project count. If the user is the most active user foor sending projects her rank is 1

        :param user_rank_in_project_count: The user_rank_in_project_count of this ClientProfile.
        :type user_rank_in_project_count: float
        """

        self._user_rank_in_project_count = user_rank_in_project_count

    @property
    def user_rank_in_spending(self):
        """Gets the user_rank_in_spending of this ClientProfile.

        rank of the user in all corporate users for total spending. If the user is the most active user for spending her rank is 1

        :return: The user_rank_in_spending of this ClientProfile.
        :rtype: float
        """
        return self._user_rank_in_spending

    @user_rank_in_spending.setter
    def user_rank_in_spending(self, user_rank_in_spending):
        """Sets the user_rank_in_spending of this ClientProfile.

        rank of the user in all corporate users for total spending. If the user is the most active user for spending her rank is 1

        :param user_rank_in_spending: The user_rank_in_spending of this ClientProfile.
        :type user_rank_in_spending: float
        """

        self._user_rank_in_spending = user_rank_in_spending
