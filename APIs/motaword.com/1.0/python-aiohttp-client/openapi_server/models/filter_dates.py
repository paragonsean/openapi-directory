# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FilterDates(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_from: datetime=None, date_to: datetime=None):
        """FilterDates - a model defined in OpenAPI

        :param date_from: The date_from of this FilterDates.
        :param date_to: The date_to of this FilterDates.
        """
        self.openapi_types = {
            'date_from': datetime,
            'date_to': datetime
        }

        self.attribute_map = {
            'date_from': 'date_from',
            'date_to': 'date_to'
        }

        self._date_from = date_from
        self._date_to = date_to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FilterDates':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FilterDates of this FilterDates.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_from(self):
        """Gets the date_from of this FilterDates.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :return: The date_from of this FilterDates.
        :rtype: datetime
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this FilterDates.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :param date_from: The date_from of this FilterDates.
        :type date_from: datetime
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this FilterDates.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :return: The date_to of this FilterDates.
        :rtype: datetime
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this FilterDates.

        the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z

        :param date_to: The date_to of this FilterDates.
        :type date_to: datetime
        """

        self._date_to = date_to
