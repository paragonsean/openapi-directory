# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.invited_vendor import InvitedVendor
from openapi_server import util


class InvitedVendorsByLanguage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invited_vendors: List[InvitedVendor]=None, target_language: str=None):
        """InvitedVendorsByLanguage - a model defined in OpenAPI

        :param invited_vendors: The invited_vendors of this InvitedVendorsByLanguage.
        :param target_language: The target_language of this InvitedVendorsByLanguage.
        """
        self.openapi_types = {
            'invited_vendors': List[InvitedVendor],
            'target_language': str
        }

        self.attribute_map = {
            'invited_vendors': 'invited_vendors',
            'target_language': 'target_language'
        }

        self._invited_vendors = invited_vendors
        self._target_language = target_language

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InvitedVendorsByLanguage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InvitedVendorsByLanguage of this InvitedVendorsByLanguage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invited_vendors(self):
        """Gets the invited_vendors of this InvitedVendorsByLanguage.

        Invited vendors for this target language

        :return: The invited_vendors of this InvitedVendorsByLanguage.
        :rtype: List[InvitedVendor]
        """
        return self._invited_vendors

    @invited_vendors.setter
    def invited_vendors(self, invited_vendors):
        """Sets the invited_vendors of this InvitedVendorsByLanguage.

        Invited vendors for this target language

        :param invited_vendors: The invited_vendors of this InvitedVendorsByLanguage.
        :type invited_vendors: List[InvitedVendor]
        """

        self._invited_vendors = invited_vendors

    @property
    def target_language(self):
        """Gets the target_language of this InvitedVendorsByLanguage.

        Target Language that the vendors invited for

        :return: The target_language of this InvitedVendorsByLanguage.
        :rtype: str
        """
        return self._target_language

    @target_language.setter
    def target_language(self, target_language):
        """Sets the target_language of this InvitedVendorsByLanguage.

        Target Language that the vendors invited for

        :param target_language: The target_language of this InvitedVendorsByLanguage.
        :type target_language: str
        """

        self._target_language = target_language
