# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClientProjectStat(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, languages: List[str]=None, month: str=None, number_of_projects: int=None, total_spending: float=None, week: str=None):
        """ClientProjectStat - a model defined in OpenAPI

        :param languages: The languages of this ClientProjectStat.
        :param month: The month of this ClientProjectStat.
        :param number_of_projects: The number_of_projects of this ClientProjectStat.
        :param total_spending: The total_spending of this ClientProjectStat.
        :param week: The week of this ClientProjectStat.
        """
        self.openapi_types = {
            'languages': List[str],
            'month': str,
            'number_of_projects': int,
            'total_spending': float,
            'week': str
        }

        self.attribute_map = {
            'languages': 'languages',
            'month': 'month',
            'number_of_projects': 'number_of_projects',
            'total_spending': 'total_spending',
            'week': 'week'
        }

        self._languages = languages
        self._month = month
        self._number_of_projects = number_of_projects
        self._total_spending = total_spending
        self._week = week

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientProjectStat':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientProjectStat of this ClientProjectStat.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def languages(self):
        """Gets the languages of this ClientProjectStat.


        :return: The languages of this ClientProjectStat.
        :rtype: List[str]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this ClientProjectStat.


        :param languages: The languages of this ClientProjectStat.
        :type languages: List[str]
        """

        self._languages = languages

    @property
    def month(self):
        """Gets the month of this ClientProjectStat.


        :return: The month of this ClientProjectStat.
        :rtype: str
        """
        return self._month

    @month.setter
    def month(self, month):
        """Sets the month of this ClientProjectStat.


        :param month: The month of this ClientProjectStat.
        :type month: str
        """

        self._month = month

    @property
    def number_of_projects(self):
        """Gets the number_of_projects of this ClientProjectStat.


        :return: The number_of_projects of this ClientProjectStat.
        :rtype: int
        """
        return self._number_of_projects

    @number_of_projects.setter
    def number_of_projects(self, number_of_projects):
        """Sets the number_of_projects of this ClientProjectStat.


        :param number_of_projects: The number_of_projects of this ClientProjectStat.
        :type number_of_projects: int
        """

        self._number_of_projects = number_of_projects

    @property
    def total_spending(self):
        """Gets the total_spending of this ClientProjectStat.


        :return: The total_spending of this ClientProjectStat.
        :rtype: float
        """
        return self._total_spending

    @total_spending.setter
    def total_spending(self, total_spending):
        """Sets the total_spending of this ClientProjectStat.


        :param total_spending: The total_spending of this ClientProjectStat.
        :type total_spending: float
        """

        self._total_spending = total_spending

    @property
    def week(self):
        """Gets the week of this ClientProjectStat.


        :return: The week of this ClientProjectStat.
        :rtype: str
        """
        return self._week

    @week.setter
    def week(self, week):
        """Sets the week of this ClientProjectStat.


        :param week: The week of this ClientProjectStat.
        :type week: str
        """

        self._week = week
