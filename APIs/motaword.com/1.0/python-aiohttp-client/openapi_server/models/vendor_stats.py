# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vendor_earning_stats import VendorEarningStats
from openapi_server.models.vendor_project_stats import VendorProjectStats
from openapi_server.models.vendor_word_stats import VendorWordStats
from openapi_server import util


class VendorStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, earnings: VendorEarningStats=None, projects: VendorProjectStats=None, words: VendorWordStats=None):
        """VendorStats - a model defined in OpenAPI

        :param earnings: The earnings of this VendorStats.
        :param projects: The projects of this VendorStats.
        :param words: The words of this VendorStats.
        """
        self.openapi_types = {
            'earnings': VendorEarningStats,
            'projects': VendorProjectStats,
            'words': VendorWordStats
        }

        self.attribute_map = {
            'earnings': 'earnings',
            'projects': 'projects',
            'words': 'words'
        }

        self._earnings = earnings
        self._projects = projects
        self._words = words

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VendorStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VendorStats of this VendorStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def earnings(self):
        """Gets the earnings of this VendorStats.


        :return: The earnings of this VendorStats.
        :rtype: VendorEarningStats
        """
        return self._earnings

    @earnings.setter
    def earnings(self, earnings):
        """Sets the earnings of this VendorStats.


        :param earnings: The earnings of this VendorStats.
        :type earnings: VendorEarningStats
        """

        self._earnings = earnings

    @property
    def projects(self):
        """Gets the projects of this VendorStats.


        :return: The projects of this VendorStats.
        :rtype: VendorProjectStats
        """
        return self._projects

    @projects.setter
    def projects(self, projects):
        """Sets the projects of this VendorStats.


        :param projects: The projects of this VendorStats.
        :type projects: VendorProjectStats
        """

        self._projects = projects

    @property
    def words(self):
        """Gets the words of this VendorStats.


        :return: The words of this VendorStats.
        :rtype: VendorWordStats
        """
        return self._words

    @words.setter
    def words(self, words):
        """Sets the words of this VendorStats.


        :param words: The words of this VendorStats.
        :type words: VendorWordStats
        """

        self._words = words
