# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.document_links import DocumentLinks
from openapi_server import util


class ContinuousProjectDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billed_word_count: int=None, id: str=None, links: DocumentLinks=None, name: str=None, post_edit_enabled: bool=None, project_id: str=None, source_language: str=None, target_languages: List[str]=None, word_count: int=None):
        """ContinuousProjectDocument - a model defined in OpenAPI

        :param billed_word_count: The billed_word_count of this ContinuousProjectDocument.
        :param id: The id of this ContinuousProjectDocument.
        :param links: The links of this ContinuousProjectDocument.
        :param name: The name of this ContinuousProjectDocument.
        :param post_edit_enabled: The post_edit_enabled of this ContinuousProjectDocument.
        :param project_id: The project_id of this ContinuousProjectDocument.
        :param source_language: The source_language of this ContinuousProjectDocument.
        :param target_languages: The target_languages of this ContinuousProjectDocument.
        :param word_count: The word_count of this ContinuousProjectDocument.
        """
        self.openapi_types = {
            'billed_word_count': int,
            'id': str,
            'links': DocumentLinks,
            'name': str,
            'post_edit_enabled': bool,
            'project_id': str,
            'source_language': str,
            'target_languages': List[str],
            'word_count': int
        }

        self.attribute_map = {
            'billed_word_count': 'billed_word_count',
            'id': 'id',
            'links': 'links',
            'name': 'name',
            'post_edit_enabled': 'post_edit_enabled',
            'project_id': 'project_id',
            'source_language': 'source_language',
            'target_languages': 'target_languages',
            'word_count': 'word_count'
        }

        self._billed_word_count = billed_word_count
        self._id = id
        self._links = links
        self._name = name
        self._post_edit_enabled = post_edit_enabled
        self._project_id = project_id
        self._source_language = source_language
        self._target_languages = target_languages
        self._word_count = word_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinuousProjectDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinuousProjectDocument of this ContinuousProjectDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billed_word_count(self):
        """Gets the billed_word_count of this ContinuousProjectDocument.


        :return: The billed_word_count of this ContinuousProjectDocument.
        :rtype: int
        """
        return self._billed_word_count

    @billed_word_count.setter
    def billed_word_count(self, billed_word_count):
        """Sets the billed_word_count of this ContinuousProjectDocument.


        :param billed_word_count: The billed_word_count of this ContinuousProjectDocument.
        :type billed_word_count: int
        """

        self._billed_word_count = billed_word_count

    @property
    def id(self):
        """Gets the id of this ContinuousProjectDocument.


        :return: The id of this ContinuousProjectDocument.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ContinuousProjectDocument.


        :param id: The id of this ContinuousProjectDocument.
        :type id: str
        """

        self._id = id

    @property
    def links(self):
        """Gets the links of this ContinuousProjectDocument.


        :return: The links of this ContinuousProjectDocument.
        :rtype: DocumentLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ContinuousProjectDocument.


        :param links: The links of this ContinuousProjectDocument.
        :type links: DocumentLinks
        """

        self._links = links

    @property
    def name(self):
        """Gets the name of this ContinuousProjectDocument.


        :return: The name of this ContinuousProjectDocument.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContinuousProjectDocument.


        :param name: The name of this ContinuousProjectDocument.
        :type name: str
        """

        self._name = name

    @property
    def post_edit_enabled(self):
        """Gets the post_edit_enabled of this ContinuousProjectDocument.


        :return: The post_edit_enabled of this ContinuousProjectDocument.
        :rtype: bool
        """
        return self._post_edit_enabled

    @post_edit_enabled.setter
    def post_edit_enabled(self, post_edit_enabled):
        """Sets the post_edit_enabled of this ContinuousProjectDocument.


        :param post_edit_enabled: The post_edit_enabled of this ContinuousProjectDocument.
        :type post_edit_enabled: bool
        """

        self._post_edit_enabled = post_edit_enabled

    @property
    def project_id(self):
        """Gets the project_id of this ContinuousProjectDocument.


        :return: The project_id of this ContinuousProjectDocument.
        :rtype: str
        """
        return self._project_id

    @project_id.setter
    def project_id(self, project_id):
        """Sets the project_id of this ContinuousProjectDocument.


        :param project_id: The project_id of this ContinuousProjectDocument.
        :type project_id: str
        """

        self._project_id = project_id

    @property
    def source_language(self):
        """Gets the source_language of this ContinuousProjectDocument.


        :return: The source_language of this ContinuousProjectDocument.
        :rtype: str
        """
        return self._source_language

    @source_language.setter
    def source_language(self, source_language):
        """Sets the source_language of this ContinuousProjectDocument.


        :param source_language: The source_language of this ContinuousProjectDocument.
        :type source_language: str
        """

        self._source_language = source_language

    @property
    def target_languages(self):
        """Gets the target_languages of this ContinuousProjectDocument.


        :return: The target_languages of this ContinuousProjectDocument.
        :rtype: List[str]
        """
        return self._target_languages

    @target_languages.setter
    def target_languages(self, target_languages):
        """Sets the target_languages of this ContinuousProjectDocument.


        :param target_languages: The target_languages of this ContinuousProjectDocument.
        :type target_languages: List[str]
        """

        self._target_languages = target_languages

    @property
    def word_count(self):
        """Gets the word_count of this ContinuousProjectDocument.


        :return: The word_count of this ContinuousProjectDocument.
        :rtype: int
        """
        return self._word_count

    @word_count.setter
    def word_count(self, word_count):
        """Sets the word_count of this ContinuousProjectDocument.


        :param word_count: The word_count of this ContinuousProjectDocument.
        :type word_count: int
        """

        self._word_count = word_count
