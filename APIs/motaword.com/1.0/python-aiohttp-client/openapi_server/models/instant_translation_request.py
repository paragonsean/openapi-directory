# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_as_data import FileAsData
from openapi_server.models.instant_translation_filter import InstantTranslationFilter
from openapi_server import util


class InstantTranslationRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, contents: List[str]=None, documents: List[FileAsData]=None, filters: InstantTranslationFilter=None, meta: object=None):
        """InstantTranslationRequest - a model defined in OpenAPI

        :param contents: The contents of this InstantTranslationRequest.
        :param documents: The documents of this InstantTranslationRequest.
        :param filters: The filters of this InstantTranslationRequest.
        :param meta: The meta of this InstantTranslationRequest.
        """
        self.openapi_types = {
            'contents': List[str],
            'documents': List[FileAsData],
            'filters': InstantTranslationFilter,
            'meta': object
        }

        self.attribute_map = {
            'contents': 'contents',
            'documents': 'documents',
            'filters': 'filters',
            'meta': 'meta'
        }

        self._contents = contents
        self._documents = documents
        self._filters = filters
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InstantTranslationRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The InstantTranslationRequest of this InstantTranslationRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def contents(self):
        """Gets the contents of this InstantTranslationRequest.

        Simple list of strings to be translated. You can also choose to upload files instead of strings.

        :return: The contents of this InstantTranslationRequest.
        :rtype: List[str]
        """
        return self._contents

    @contents.setter
    def contents(self, contents):
        """Sets the contents of this InstantTranslationRequest.

        Simple list of strings to be translated. You can also choose to upload files instead of strings.

        :param contents: The contents of this InstantTranslationRequest.
        :type contents: List[str]
        """

        self._contents = contents

    @property
    def documents(self):
        """Gets the documents of this InstantTranslationRequest.

        You can add as many files as you want in documents parameter.

        :return: The documents of this InstantTranslationRequest.
        :rtype: List[FileAsData]
        """
        return self._documents

    @documents.setter
    def documents(self, documents):
        """Sets the documents of this InstantTranslationRequest.

        You can add as many files as you want in documents parameter.

        :param documents: The documents of this InstantTranslationRequest.
        :type documents: List[FileAsData]
        """

        self._documents = documents

    @property
    def filters(self):
        """Gets the filters of this InstantTranslationRequest.


        :return: The filters of this InstantTranslationRequest.
        :rtype: InstantTranslationFilter
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this InstantTranslationRequest.


        :param filters: The filters of this InstantTranslationRequest.
        :type filters: InstantTranslationFilter
        """

        self._filters = filters

    @property
    def meta(self):
        """Gets the meta of this InstantTranslationRequest.

        Free-form meta data to attach to your instant translation request. This can be used in statistics and analytical dashboards.

        :return: The meta of this InstantTranslationRequest.
        :rtype: object
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this InstantTranslationRequest.

        Free-form meta data to attach to your instant translation request. This can be used in statistics and analytical dashboards.

        :param meta: The meta of this InstantTranslationRequest.
        :type meta: object
        """

        self._meta = meta
