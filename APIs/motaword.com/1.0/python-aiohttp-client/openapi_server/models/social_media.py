# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SocialMedia(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, facebook_url: str=None, linked_in_url: str=None, twitter_url: str=None):
        """SocialMedia - a model defined in OpenAPI

        :param facebook_url: The facebook_url of this SocialMedia.
        :param linked_in_url: The linked_in_url of this SocialMedia.
        :param twitter_url: The twitter_url of this SocialMedia.
        """
        self.openapi_types = {
            'facebook_url': str,
            'linked_in_url': str,
            'twitter_url': str
        }

        self.attribute_map = {
            'facebook_url': 'facebook_url',
            'linked_in_url': 'linkedIn_url',
            'twitter_url': 'twitter_url'
        }

        self._facebook_url = facebook_url
        self._linked_in_url = linked_in_url
        self._twitter_url = twitter_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SocialMedia':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SocialMedia of this SocialMedia.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def facebook_url(self):
        """Gets the facebook_url of this SocialMedia.


        :return: The facebook_url of this SocialMedia.
        :rtype: str
        """
        return self._facebook_url

    @facebook_url.setter
    def facebook_url(self, facebook_url):
        """Sets the facebook_url of this SocialMedia.


        :param facebook_url: The facebook_url of this SocialMedia.
        :type facebook_url: str
        """

        self._facebook_url = facebook_url

    @property
    def linked_in_url(self):
        """Gets the linked_in_url of this SocialMedia.


        :return: The linked_in_url of this SocialMedia.
        :rtype: str
        """
        return self._linked_in_url

    @linked_in_url.setter
    def linked_in_url(self, linked_in_url):
        """Sets the linked_in_url of this SocialMedia.


        :param linked_in_url: The linked_in_url of this SocialMedia.
        :type linked_in_url: str
        """

        self._linked_in_url = linked_in_url

    @property
    def twitter_url(self):
        """Gets the twitter_url of this SocialMedia.


        :return: The twitter_url of this SocialMedia.
        :rtype: str
        """
        return self._twitter_url

    @twitter_url.setter
    def twitter_url(self, twitter_url):
        """Sets the twitter_url of this SocialMedia.


        :param twitter_url: The twitter_url of this SocialMedia.
        :type twitter_url: str
        """

        self._twitter_url = twitter_url
