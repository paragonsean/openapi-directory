# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdatePaymentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, phone: str=None, state: str=None, street: str=None, zip: str=None, bin: str=None, save_as_corporate_primary: bool=None, share_with_corporate_users: bool=None, stripe_token: str=None):
        """UpdatePaymentInfo - a model defined in OpenAPI

        :param city: The city of this UpdatePaymentInfo.
        :param country: The country of this UpdatePaymentInfo.
        :param phone: The phone of this UpdatePaymentInfo.
        :param state: The state of this UpdatePaymentInfo.
        :param street: The street of this UpdatePaymentInfo.
        :param zip: The zip of this UpdatePaymentInfo.
        :param bin: The bin of this UpdatePaymentInfo.
        :param save_as_corporate_primary: The save_as_corporate_primary of this UpdatePaymentInfo.
        :param share_with_corporate_users: The share_with_corporate_users of this UpdatePaymentInfo.
        :param stripe_token: The stripe_token of this UpdatePaymentInfo.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'phone': str,
            'state': str,
            'street': str,
            'zip': str,
            'bin': str,
            'save_as_corporate_primary': bool,
            'share_with_corporate_users': bool,
            'stripe_token': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'phone': 'phone',
            'state': 'state',
            'street': 'street',
            'zip': 'zip',
            'bin': 'bin',
            'save_as_corporate_primary': 'save_as_corporate_primary',
            'share_with_corporate_users': 'share_with_corporate_users',
            'stripe_token': 'stripeToken'
        }

        self._city = city
        self._country = country
        self._phone = phone
        self._state = state
        self._street = street
        self._zip = zip
        self._bin = bin
        self._save_as_corporate_primary = save_as_corporate_primary
        self._share_with_corporate_users = share_with_corporate_users
        self._stripe_token = stripe_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdatePaymentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdatePaymentInfo of this UpdatePaymentInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this UpdatePaymentInfo.


        :return: The city of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this UpdatePaymentInfo.


        :param city: The city of this UpdatePaymentInfo.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this UpdatePaymentInfo.


        :return: The country of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this UpdatePaymentInfo.


        :param country: The country of this UpdatePaymentInfo.
        :type country: str
        """

        self._country = country

    @property
    def phone(self):
        """Gets the phone of this UpdatePaymentInfo.


        :return: The phone of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this UpdatePaymentInfo.


        :param phone: The phone of this UpdatePaymentInfo.
        :type phone: str
        """

        self._phone = phone

    @property
    def state(self):
        """Gets the state of this UpdatePaymentInfo.


        :return: The state of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this UpdatePaymentInfo.


        :param state: The state of this UpdatePaymentInfo.
        :type state: str
        """

        self._state = state

    @property
    def street(self):
        """Gets the street of this UpdatePaymentInfo.


        :return: The street of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this UpdatePaymentInfo.


        :param street: The street of this UpdatePaymentInfo.
        :type street: str
        """

        self._street = street

    @property
    def zip(self):
        """Gets the zip of this UpdatePaymentInfo.


        :return: The zip of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this UpdatePaymentInfo.


        :param zip: The zip of this UpdatePaymentInfo.
        :type zip: str
        """

        self._zip = zip

    @property
    def bin(self):
        """Gets the bin of this UpdatePaymentInfo.


        :return: The bin of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._bin

    @bin.setter
    def bin(self, bin):
        """Sets the bin of this UpdatePaymentInfo.


        :param bin: The bin of this UpdatePaymentInfo.
        :type bin: str
        """

        self._bin = bin

    @property
    def save_as_corporate_primary(self):
        """Gets the save_as_corporate_primary of this UpdatePaymentInfo.


        :return: The save_as_corporate_primary of this UpdatePaymentInfo.
        :rtype: bool
        """
        return self._save_as_corporate_primary

    @save_as_corporate_primary.setter
    def save_as_corporate_primary(self, save_as_corporate_primary):
        """Sets the save_as_corporate_primary of this UpdatePaymentInfo.


        :param save_as_corporate_primary: The save_as_corporate_primary of this UpdatePaymentInfo.
        :type save_as_corporate_primary: bool
        """

        self._save_as_corporate_primary = save_as_corporate_primary

    @property
    def share_with_corporate_users(self):
        """Gets the share_with_corporate_users of this UpdatePaymentInfo.


        :return: The share_with_corporate_users of this UpdatePaymentInfo.
        :rtype: bool
        """
        return self._share_with_corporate_users

    @share_with_corporate_users.setter
    def share_with_corporate_users(self, share_with_corporate_users):
        """Sets the share_with_corporate_users of this UpdatePaymentInfo.


        :param share_with_corporate_users: The share_with_corporate_users of this UpdatePaymentInfo.
        :type share_with_corporate_users: bool
        """

        self._share_with_corporate_users = share_with_corporate_users

    @property
    def stripe_token(self):
        """Gets the stripe_token of this UpdatePaymentInfo.


        :return: The stripe_token of this UpdatePaymentInfo.
        :rtype: str
        """
        return self._stripe_token

    @stripe_token.setter
    def stripe_token(self, stripe_token):
        """Sets the stripe_token of this UpdatePaymentInfo.


        :param stripe_token: The stripe_token of this UpdatePaymentInfo.
        :type stripe_token: str
        """

        self._stripe_token = stripe_token
