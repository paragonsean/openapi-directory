# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.comment import Comment
from openapi_server.models.paging_meta import PagingMeta
from openapi_server import util


class CommentList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activities: List[Comment]=None, meta: PagingMeta=None):
        """CommentList - a model defined in OpenAPI

        :param activities: The activities of this CommentList.
        :param meta: The meta of this CommentList.
        """
        self.openapi_types = {
            'activities': List[Comment],
            'meta': PagingMeta
        }

        self.attribute_map = {
            'activities': 'activities',
            'meta': 'meta'
        }

        self._activities = activities
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommentList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommentList of this CommentList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activities(self):
        """Gets the activities of this CommentList.


        :return: The activities of this CommentList.
        :rtype: List[Comment]
        """
        return self._activities

    @activities.setter
    def activities(self, activities):
        """Sets the activities of this CommentList.


        :param activities: The activities of this CommentList.
        :type activities: List[Comment]
        """

        self._activities = activities

    @property
    def meta(self):
        """Gets the meta of this CommentList.


        :return: The meta of this CommentList.
        :rtype: PagingMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this CommentList.


        :param meta: The meta of this CommentList.
        :type meta: PagingMeta
        """

        self._meta = meta
