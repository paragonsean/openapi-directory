/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BillingAddress;
import org.openapitools.client.model.CreditCard;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * PaymentInfoCorporate
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:52.387191-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PaymentInfoCorporate {
  public static final String SERIALIZED_NAME_ALLOW_API_INVOICING = "allow_api_invoicing";
  @SerializedName(SERIALIZED_NAME_ALLOW_API_INVOICING)
  private Boolean allowApiInvoicing;

  public static final String SERIALIZED_NAME_ALLOW_PAYMENT_CODE = "allow_payment_code";
  @SerializedName(SERIALIZED_NAME_ALLOW_PAYMENT_CODE)
  private Boolean allowPaymentCode;

  public static final String SERIALIZED_NAME_AUTO_CHARGE = "auto_charge";
  @SerializedName(SERIALIZED_NAME_AUTO_CHARGE)
  private Boolean autoCharge;

  public static final String SERIALIZED_NAME_BILLING = "billing";
  @SerializedName(SERIALIZED_NAME_BILLING)
  private BillingAddress billing;

  public static final String SERIALIZED_NAME_CARD = "card";
  @SerializedName(SERIALIZED_NAME_CARD)
  private CreditCard card;

  public static final String SERIALIZED_NAME_CONTACT_EMAIL_ADDRESS = "contact_email_address";
  @SerializedName(SERIALIZED_NAME_CONTACT_EMAIL_ADDRESS)
  private String contactEmailAddress;

  public static final String SERIALIZED_NAME_PAYMENT_CODE = "payment_code";
  @SerializedName(SERIALIZED_NAME_PAYMENT_CODE)
  private String paymentCode;

  public PaymentInfoCorporate() {
  }

  public PaymentInfoCorporate allowApiInvoicing(Boolean allowApiInvoicing) {
    this.allowApiInvoicing = allowApiInvoicing;
    return this;
  }

  /**
   * Get allowApiInvoicing
   * @return allowApiInvoicing
   */
  @javax.annotation.Nullable
  public Boolean getAllowApiInvoicing() {
    return allowApiInvoicing;
  }

  public void setAllowApiInvoicing(Boolean allowApiInvoicing) {
    this.allowApiInvoicing = allowApiInvoicing;
  }


  public PaymentInfoCorporate allowPaymentCode(Boolean allowPaymentCode) {
    this.allowPaymentCode = allowPaymentCode;
    return this;
  }

  /**
   * Get allowPaymentCode
   * @return allowPaymentCode
   */
  @javax.annotation.Nullable
  public Boolean getAllowPaymentCode() {
    return allowPaymentCode;
  }

  public void setAllowPaymentCode(Boolean allowPaymentCode) {
    this.allowPaymentCode = allowPaymentCode;
  }


  public PaymentInfoCorporate autoCharge(Boolean autoCharge) {
    this.autoCharge = autoCharge;
    return this;
  }

  /**
   * Get autoCharge
   * @return autoCharge
   */
  @javax.annotation.Nullable
  public Boolean getAutoCharge() {
    return autoCharge;
  }

  public void setAutoCharge(Boolean autoCharge) {
    this.autoCharge = autoCharge;
  }


  public PaymentInfoCorporate billing(BillingAddress billing) {
    this.billing = billing;
    return this;
  }

  /**
   * Get billing
   * @return billing
   */
  @javax.annotation.Nullable
  public BillingAddress getBilling() {
    return billing;
  }

  public void setBilling(BillingAddress billing) {
    this.billing = billing;
  }


  public PaymentInfoCorporate card(CreditCard card) {
    this.card = card;
    return this;
  }

  /**
   * Get card
   * @return card
   */
  @javax.annotation.Nullable
  public CreditCard getCard() {
    return card;
  }

  public void setCard(CreditCard card) {
    this.card = card;
  }


  public PaymentInfoCorporate contactEmailAddress(String contactEmailAddress) {
    this.contactEmailAddress = contactEmailAddress;
    return this;
  }

  /**
   * Get contactEmailAddress
   * @return contactEmailAddress
   */
  @javax.annotation.Nullable
  public String getContactEmailAddress() {
    return contactEmailAddress;
  }

  public void setContactEmailAddress(String contactEmailAddress) {
    this.contactEmailAddress = contactEmailAddress;
  }


  public PaymentInfoCorporate paymentCode(String paymentCode) {
    this.paymentCode = paymentCode;
    return this;
  }

  /**
   * Get paymentCode
   * @return paymentCode
   */
  @javax.annotation.Nullable
  public String getPaymentCode() {
    return paymentCode;
  }

  public void setPaymentCode(String paymentCode) {
    this.paymentCode = paymentCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentInfoCorporate paymentInfoCorporate = (PaymentInfoCorporate) o;
    return Objects.equals(this.allowApiInvoicing, paymentInfoCorporate.allowApiInvoicing) &&
        Objects.equals(this.allowPaymentCode, paymentInfoCorporate.allowPaymentCode) &&
        Objects.equals(this.autoCharge, paymentInfoCorporate.autoCharge) &&
        Objects.equals(this.billing, paymentInfoCorporate.billing) &&
        Objects.equals(this.card, paymentInfoCorporate.card) &&
        Objects.equals(this.contactEmailAddress, paymentInfoCorporate.contactEmailAddress) &&
        Objects.equals(this.paymentCode, paymentInfoCorporate.paymentCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allowApiInvoicing, allowPaymentCode, autoCharge, billing, card, contactEmailAddress, paymentCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentInfoCorporate {\n");
    sb.append("    allowApiInvoicing: ").append(toIndentedString(allowApiInvoicing)).append("\n");
    sb.append("    allowPaymentCode: ").append(toIndentedString(allowPaymentCode)).append("\n");
    sb.append("    autoCharge: ").append(toIndentedString(autoCharge)).append("\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    card: ").append(toIndentedString(card)).append("\n");
    sb.append("    contactEmailAddress: ").append(toIndentedString(contactEmailAddress)).append("\n");
    sb.append("    paymentCode: ").append(toIndentedString(paymentCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("allow_api_invoicing");
    openapiFields.add("allow_payment_code");
    openapiFields.add("auto_charge");
    openapiFields.add("billing");
    openapiFields.add("card");
    openapiFields.add("contact_email_address");
    openapiFields.add("payment_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PaymentInfoCorporate
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PaymentInfoCorporate.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PaymentInfoCorporate is not found in the empty JSON string", PaymentInfoCorporate.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PaymentInfoCorporate.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PaymentInfoCorporate` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `billing`
      if (jsonObj.get("billing") != null && !jsonObj.get("billing").isJsonNull()) {
        BillingAddress.validateJsonElement(jsonObj.get("billing"));
      }
      // validate the optional field `card`
      if (jsonObj.get("card") != null && !jsonObj.get("card").isJsonNull()) {
        CreditCard.validateJsonElement(jsonObj.get("card"));
      }
      if ((jsonObj.get("contact_email_address") != null && !jsonObj.get("contact_email_address").isJsonNull()) && !jsonObj.get("contact_email_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contact_email_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contact_email_address").toString()));
      }
      if ((jsonObj.get("payment_code") != null && !jsonObj.get("payment_code").isJsonNull()) && !jsonObj.get("payment_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `payment_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("payment_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PaymentInfoCorporate.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PaymentInfoCorporate' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PaymentInfoCorporate> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PaymentInfoCorporate.class));

       return (TypeAdapter<T>) new TypeAdapter<PaymentInfoCorporate>() {
           @Override
           public void write(JsonWriter out, PaymentInfoCorporate value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PaymentInfoCorporate read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PaymentInfoCorporate given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PaymentInfoCorporate
   * @throws IOException if the JSON string is invalid with respect to PaymentInfoCorporate
   */
  public static PaymentInfoCorporate fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PaymentInfoCorporate.class);
  }

  /**
   * Convert an instance of PaymentInfoCorporate to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

