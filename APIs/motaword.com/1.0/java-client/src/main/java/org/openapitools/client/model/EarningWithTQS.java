/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * EarningWithTQS
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:52.387191-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class EarningWithTQS {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Float amount;

  public static final String SERIALIZED_NAME_CURRENCY = "currency";
  @SerializedName(SERIALIZED_NAME_CURRENCY)
  private String currency = "usd";

  public static final String SERIALIZED_NAME_DUE_DATE = "due_date";
  @SerializedName(SERIALIZED_NAME_DUE_DATE)
  private OffsetDateTime dueDate;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    PAID("paid"),
    
    PENDING("pending"),
    
    FAILED("failed");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private StatusEnum status;

  public static final String SERIALIZED_NAME_WORDS = "words";
  @SerializedName(SERIALIZED_NAME_WORDS)
  private Long words;

  public static final String SERIALIZED_NAME_WORDS_APPROVED = "words_approved";
  @SerializedName(SERIALIZED_NAME_WORDS_APPROVED)
  private Long wordsApproved;

  public static final String SERIALIZED_NAME_WORDS_TRANSLATED = "words_translated";
  @SerializedName(SERIALIZED_NAME_WORDS_TRANSLATED)
  private Long wordsTranslated;

  public static final String SERIALIZED_NAME_IS_ABOVE_AVERAGE = "is_above_average";
  @SerializedName(SERIALIZED_NAME_IS_ABOVE_AVERAGE)
  private Boolean isAboveAverage;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Float score;

  public static final String SERIALIZED_NAME_STRINGS_EDITED = "strings_edited";
  @SerializedName(SERIALIZED_NAME_STRINGS_EDITED)
  private Long stringsEdited;

  public static final String SERIALIZED_NAME_STRINGS_TRANSLATED = "strings_translated";
  @SerializedName(SERIALIZED_NAME_STRINGS_TRANSLATED)
  private Long stringsTranslated;

  public static final String SERIALIZED_NAME_PROJECT_ID = "project_id";
  @SerializedName(SERIALIZED_NAME_PROJECT_ID)
  private Long projectId;

  public EarningWithTQS() {
  }

  public EarningWithTQS amount(Float amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @javax.annotation.Nullable
  public Float getAmount() {
    return amount;
  }

  public void setAmount(Float amount) {
    this.amount = amount;
  }


  public EarningWithTQS currency(String currency) {
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @javax.annotation.Nullable
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }


  public EarningWithTQS dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

  /**
   * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
   * @return dueDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }


  public EarningWithTQS status(StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public EarningWithTQS words(Long words) {
    this.words = words;
    return this;
  }

  /**
   * Get words
   * @return words
   */
  @javax.annotation.Nullable
  public Long getWords() {
    return words;
  }

  public void setWords(Long words) {
    this.words = words;
  }


  public EarningWithTQS wordsApproved(Long wordsApproved) {
    this.wordsApproved = wordsApproved;
    return this;
  }

  /**
   * Get wordsApproved
   * @return wordsApproved
   */
  @javax.annotation.Nullable
  public Long getWordsApproved() {
    return wordsApproved;
  }

  public void setWordsApproved(Long wordsApproved) {
    this.wordsApproved = wordsApproved;
  }


  public EarningWithTQS wordsTranslated(Long wordsTranslated) {
    this.wordsTranslated = wordsTranslated;
    return this;
  }

  /**
   * Get wordsTranslated
   * @return wordsTranslated
   */
  @javax.annotation.Nullable
  public Long getWordsTranslated() {
    return wordsTranslated;
  }

  public void setWordsTranslated(Long wordsTranslated) {
    this.wordsTranslated = wordsTranslated;
  }


  public EarningWithTQS isAboveAverage(Boolean isAboveAverage) {
    this.isAboveAverage = isAboveAverage;
    return this;
  }

  /**
   * Is this score above or below the average among other vendors in the same project?
   * @return isAboveAverage
   */
  @javax.annotation.Nullable
  public Boolean getIsAboveAverage() {
    return isAboveAverage;
  }

  public void setIsAboveAverage(Boolean isAboveAverage) {
    this.isAboveAverage = isAboveAverage;
  }


  public EarningWithTQS score(Float score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public Float getScore() {
    return score;
  }

  public void setScore(Float score) {
    this.score = score;
  }


  public EarningWithTQS stringsEdited(Long stringsEdited) {
    this.stringsEdited = stringsEdited;
    return this;
  }

  /**
   * The number of translated strings by this translator which was edited by a proofreader.
   * @return stringsEdited
   */
  @javax.annotation.Nullable
  public Long getStringsEdited() {
    return stringsEdited;
  }

  public void setStringsEdited(Long stringsEdited) {
    this.stringsEdited = stringsEdited;
  }


  public EarningWithTQS stringsTranslated(Long stringsTranslated) {
    this.stringsTranslated = stringsTranslated;
    return this;
  }

  /**
   * The number of translated strings by this translator.
   * @return stringsTranslated
   */
  @javax.annotation.Nullable
  public Long getStringsTranslated() {
    return stringsTranslated;
  }

  public void setStringsTranslated(Long stringsTranslated) {
    this.stringsTranslated = stringsTranslated;
  }


  public EarningWithTQS projectId(Long projectId) {
    this.projectId = projectId;
    return this;
  }

  /**
   * Get projectId
   * @return projectId
   */
  @javax.annotation.Nullable
  public Long getProjectId() {
    return projectId;
  }

  public void setProjectId(Long projectId) {
    this.projectId = projectId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EarningWithTQS earningWithTQS = (EarningWithTQS) o;
    return Objects.equals(this.amount, earningWithTQS.amount) &&
        Objects.equals(this.currency, earningWithTQS.currency) &&
        Objects.equals(this.dueDate, earningWithTQS.dueDate) &&
        Objects.equals(this.status, earningWithTQS.status) &&
        Objects.equals(this.words, earningWithTQS.words) &&
        Objects.equals(this.wordsApproved, earningWithTQS.wordsApproved) &&
        Objects.equals(this.wordsTranslated, earningWithTQS.wordsTranslated) &&
        Objects.equals(this.isAboveAverage, earningWithTQS.isAboveAverage) &&
        Objects.equals(this.score, earningWithTQS.score) &&
        Objects.equals(this.stringsEdited, earningWithTQS.stringsEdited) &&
        Objects.equals(this.stringsTranslated, earningWithTQS.stringsTranslated) &&
        Objects.equals(this.projectId, earningWithTQS.projectId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, currency, dueDate, status, words, wordsApproved, wordsTranslated, isAboveAverage, score, stringsEdited, stringsTranslated, projectId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EarningWithTQS {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    words: ").append(toIndentedString(words)).append("\n");
    sb.append("    wordsApproved: ").append(toIndentedString(wordsApproved)).append("\n");
    sb.append("    wordsTranslated: ").append(toIndentedString(wordsTranslated)).append("\n");
    sb.append("    isAboveAverage: ").append(toIndentedString(isAboveAverage)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    stringsEdited: ").append(toIndentedString(stringsEdited)).append("\n");
    sb.append("    stringsTranslated: ").append(toIndentedString(stringsTranslated)).append("\n");
    sb.append("    projectId: ").append(toIndentedString(projectId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("currency");
    openapiFields.add("due_date");
    openapiFields.add("status");
    openapiFields.add("words");
    openapiFields.add("words_approved");
    openapiFields.add("words_translated");
    openapiFields.add("is_above_average");
    openapiFields.add("score");
    openapiFields.add("strings_edited");
    openapiFields.add("strings_translated");
    openapiFields.add("project_id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to EarningWithTQS
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!EarningWithTQS.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in EarningWithTQS is not found in the empty JSON string", EarningWithTQS.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!EarningWithTQS.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `EarningWithTQS` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("currency") != null && !jsonObj.get("currency").isJsonNull()) && !jsonObj.get("currency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `currency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("currency").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        StatusEnum.validateJsonElement(jsonObj.get("status"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!EarningWithTQS.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'EarningWithTQS' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<EarningWithTQS> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(EarningWithTQS.class));

       return (TypeAdapter<T>) new TypeAdapter<EarningWithTQS>() {
           @Override
           public void write(JsonWriter out, EarningWithTQS value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public EarningWithTQS read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of EarningWithTQS given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of EarningWithTQS
   * @throws IOException if the JSON string is invalid with respect to EarningWithTQS
   */
  public static EarningWithTQS fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, EarningWithTQS.class);
  }

  /**
   * Convert an instance of EarningWithTQS to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

