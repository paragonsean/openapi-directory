/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProfileSurvey
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:52.387191-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProfileSurvey {
  public static final String SERIALIZED_NAME_CURRENT_SERVICES = "current_services";
  @SerializedName(SERIALIZED_NAME_CURRENT_SERVICES)
  private String currentServices;

  public static final String SERIALIZED_NAME_DAILY_PROOFREADING_CAPACITY = "daily_proofreading_capacity";
  @SerializedName(SERIALIZED_NAME_DAILY_PROOFREADING_CAPACITY)
  private String dailyProofreadingCapacity;

  public static final String SERIALIZED_NAME_DAILY_TRANSLATION_CAPACITY = "daily_translation_capacity";
  @SerializedName(SERIALIZED_NAME_DAILY_TRANSLATION_CAPACITY)
  private String dailyTranslationCapacity;

  public static final String SERIALIZED_NAME_DTP_SOFTWARE = "dtp_software";
  @SerializedName(SERIALIZED_NAME_DTP_SOFTWARE)
  private String dtpSoftware;

  public static final String SERIALIZED_NAME_EXPERIENCE = "experience";
  @SerializedName(SERIALIZED_NAME_EXPERIENCE)
  private String experience;

  public static final String SERIALIZED_NAME_IS_CERTIFIED_TRANSLATOR = "is_certified_translator";
  @SerializedName(SERIALIZED_NAME_IS_CERTIFIED_TRANSLATOR)
  private String isCertifiedTranslator;

  public static final String SERIALIZED_NAME_IS_SWORN_TRANSLATOR = "is_sworn_translator";
  @SerializedName(SERIALIZED_NAME_IS_SWORN_TRANSLATOR)
  private String isSwornTranslator;

  public static final String SERIALIZED_NAME_MEMOQ = "memoq";
  @SerializedName(SERIALIZED_NAME_MEMOQ)
  private String memoq;

  public static final String SERIALIZED_NAME_MEMSOURCE = "memsource";
  @SerializedName(SERIALIZED_NAME_MEMSOURCE)
  private String memsource;

  public static final String SERIALIZED_NAME_OMEGAT = "omegat";
  @SerializedName(SERIALIZED_NAME_OMEGAT)
  private String omegat;

  public static final String SERIALIZED_NAME_PROOFREADER_EXPERIENCE = "proofreader_experience";
  @SerializedName(SERIALIZED_NAME_PROOFREADER_EXPERIENCE)
  private String proofreaderExperience;

  public static final String SERIALIZED_NAME_PROVIDES_CREATIVE_WRITING_SERVICE = "provides_creative_writing_service";
  @SerializedName(SERIALIZED_NAME_PROVIDES_CREATIVE_WRITING_SERVICE)
  private String providesCreativeWritingService;

  public static final String SERIALIZED_NAME_PROVIDES_POSTEDIT_SERVICE = "provides_postedit_service";
  @SerializedName(SERIALIZED_NAME_PROVIDES_POSTEDIT_SERVICE)
  private String providesPosteditService;

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_SDL_TRADOS = "sdl_trados";
  @SerializedName(SERIALIZED_NAME_SDL_TRADOS)
  private String sdlTrados;

  public static final String SERIALIZED_NAME_SKYPE_ID = "skype_id";
  @SerializedName(SERIALIZED_NAME_SKYPE_ID)
  private String skypeId;

  public static final String SERIALIZED_NAME_SMARTCAT = "smartcat";
  @SerializedName(SERIALIZED_NAME_SMARTCAT)
  private String smartcat;

  public static final String SERIALIZED_NAME_SMARTLING = "smartling";
  @SerializedName(SERIALIZED_NAME_SMARTLING)
  private String smartling;

  public static final String SERIALIZED_NAME_SOFTWARE = "software";
  @SerializedName(SERIALIZED_NAME_SOFTWARE)
  private String software;

  public static final String SERIALIZED_NAME_SPECIALIZATION = "specialization";
  @SerializedName(SERIALIZED_NAME_SPECIALIZATION)
  private String specialization;

  public static final String SERIALIZED_NAME_SUBTITLE_EDIT = "subtitle_edit";
  @SerializedName(SERIALIZED_NAME_SUBTITLE_EDIT)
  private String subtitleEdit;

  public static final String SERIALIZED_NAME_SUBTITLE_WORKSHOP = "subtitle_workshop";
  @SerializedName(SERIALIZED_NAME_SUBTITLE_WORKSHOP)
  private String subtitleWorkshop;

  public static final String SERIALIZED_NAME_TRANSLATOR_ASSOCIATION = "translator_association";
  @SerializedName(SERIALIZED_NAME_TRANSLATOR_ASSOCIATION)
  private String translatorAssociation;

  public static final String SERIALIZED_NAME_TRANSSUITE2000 = "transsuite_2000";
  @SerializedName(SERIALIZED_NAME_TRANSSUITE2000)
  private String transsuite2000;

  public static final String SERIALIZED_NAME_VENDOR_PROFILE_LSP = "vendor_profile_lsp";
  @SerializedName(SERIALIZED_NAME_VENDOR_PROFILE_LSP)
  private String vendorProfileLsp;

  public static final String SERIALIZED_NAME_WORDBEE = "wordbee";
  @SerializedName(SERIALIZED_NAME_WORDBEE)
  private String wordbee;

  public static final String SERIALIZED_NAME_WORDFAST = "wordfast";
  @SerializedName(SERIALIZED_NAME_WORDFAST)
  private String wordfast;

  public static final String SERIALIZED_NAME_WORK_TYPE = "work_type";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private String workType;

  public static final String SERIALIZED_NAME_WORK_WITH = "work_with";
  @SerializedName(SERIALIZED_NAME_WORK_WITH)
  private String workWith;

  public static final String SERIALIZED_NAME_WORKING_AS = "working_as";
  @SerializedName(SERIALIZED_NAME_WORKING_AS)
  private String workingAs;

  public static final String SERIALIZED_NAME_WORKING_TIMEZONE = "working_timezone";
  @SerializedName(SERIALIZED_NAME_WORKING_TIMEZONE)
  private String workingTimezone;

  public static final String SERIALIZED_NAME_XBENCH = "xbench";
  @SerializedName(SERIALIZED_NAME_XBENCH)
  private String xbench;

  public static final String SERIALIZED_NAME_XTM = "xtm";
  @SerializedName(SERIALIZED_NAME_XTM)
  private String xtm;

  public ProfileSurvey() {
  }

  public ProfileSurvey currentServices(String currentServices) {
    this.currentServices = currentServices;
    return this;
  }

  /**
   * Get currentServices
   * @return currentServices
   */
  @javax.annotation.Nullable
  public String getCurrentServices() {
    return currentServices;
  }

  public void setCurrentServices(String currentServices) {
    this.currentServices = currentServices;
  }


  public ProfileSurvey dailyProofreadingCapacity(String dailyProofreadingCapacity) {
    this.dailyProofreadingCapacity = dailyProofreadingCapacity;
    return this;
  }

  /**
   * Get dailyProofreadingCapacity
   * @return dailyProofreadingCapacity
   */
  @javax.annotation.Nullable
  public String getDailyProofreadingCapacity() {
    return dailyProofreadingCapacity;
  }

  public void setDailyProofreadingCapacity(String dailyProofreadingCapacity) {
    this.dailyProofreadingCapacity = dailyProofreadingCapacity;
  }


  public ProfileSurvey dailyTranslationCapacity(String dailyTranslationCapacity) {
    this.dailyTranslationCapacity = dailyTranslationCapacity;
    return this;
  }

  /**
   * Get dailyTranslationCapacity
   * @return dailyTranslationCapacity
   */
  @javax.annotation.Nullable
  public String getDailyTranslationCapacity() {
    return dailyTranslationCapacity;
  }

  public void setDailyTranslationCapacity(String dailyTranslationCapacity) {
    this.dailyTranslationCapacity = dailyTranslationCapacity;
  }


  public ProfileSurvey dtpSoftware(String dtpSoftware) {
    this.dtpSoftware = dtpSoftware;
    return this;
  }

  /**
   * Get dtpSoftware
   * @return dtpSoftware
   */
  @javax.annotation.Nullable
  public String getDtpSoftware() {
    return dtpSoftware;
  }

  public void setDtpSoftware(String dtpSoftware) {
    this.dtpSoftware = dtpSoftware;
  }


  public ProfileSurvey experience(String experience) {
    this.experience = experience;
    return this;
  }

  /**
   * Get experience
   * @return experience
   */
  @javax.annotation.Nullable
  public String getExperience() {
    return experience;
  }

  public void setExperience(String experience) {
    this.experience = experience;
  }


  public ProfileSurvey isCertifiedTranslator(String isCertifiedTranslator) {
    this.isCertifiedTranslator = isCertifiedTranslator;
    return this;
  }

  /**
   * Get isCertifiedTranslator
   * @return isCertifiedTranslator
   */
  @javax.annotation.Nullable
  public String getIsCertifiedTranslator() {
    return isCertifiedTranslator;
  }

  public void setIsCertifiedTranslator(String isCertifiedTranslator) {
    this.isCertifiedTranslator = isCertifiedTranslator;
  }


  public ProfileSurvey isSwornTranslator(String isSwornTranslator) {
    this.isSwornTranslator = isSwornTranslator;
    return this;
  }

  /**
   * Get isSwornTranslator
   * @return isSwornTranslator
   */
  @javax.annotation.Nullable
  public String getIsSwornTranslator() {
    return isSwornTranslator;
  }

  public void setIsSwornTranslator(String isSwornTranslator) {
    this.isSwornTranslator = isSwornTranslator;
  }


  public ProfileSurvey memoq(String memoq) {
    this.memoq = memoq;
    return this;
  }

  /**
   * Get memoq
   * @return memoq
   */
  @javax.annotation.Nullable
  public String getMemoq() {
    return memoq;
  }

  public void setMemoq(String memoq) {
    this.memoq = memoq;
  }


  public ProfileSurvey memsource(String memsource) {
    this.memsource = memsource;
    return this;
  }

  /**
   * Get memsource
   * @return memsource
   */
  @javax.annotation.Nullable
  public String getMemsource() {
    return memsource;
  }

  public void setMemsource(String memsource) {
    this.memsource = memsource;
  }


  public ProfileSurvey omegat(String omegat) {
    this.omegat = omegat;
    return this;
  }

  /**
   * Get omegat
   * @return omegat
   */
  @javax.annotation.Nullable
  public String getOmegat() {
    return omegat;
  }

  public void setOmegat(String omegat) {
    this.omegat = omegat;
  }


  public ProfileSurvey proofreaderExperience(String proofreaderExperience) {
    this.proofreaderExperience = proofreaderExperience;
    return this;
  }

  /**
   * Get proofreaderExperience
   * @return proofreaderExperience
   */
  @javax.annotation.Nullable
  public String getProofreaderExperience() {
    return proofreaderExperience;
  }

  public void setProofreaderExperience(String proofreaderExperience) {
    this.proofreaderExperience = proofreaderExperience;
  }


  public ProfileSurvey providesCreativeWritingService(String providesCreativeWritingService) {
    this.providesCreativeWritingService = providesCreativeWritingService;
    return this;
  }

  /**
   * Get providesCreativeWritingService
   * @return providesCreativeWritingService
   */
  @javax.annotation.Nullable
  public String getProvidesCreativeWritingService() {
    return providesCreativeWritingService;
  }

  public void setProvidesCreativeWritingService(String providesCreativeWritingService) {
    this.providesCreativeWritingService = providesCreativeWritingService;
  }


  public ProfileSurvey providesPosteditService(String providesPosteditService) {
    this.providesPosteditService = providesPosteditService;
    return this;
  }

  /**
   * Get providesPosteditService
   * @return providesPosteditService
   */
  @javax.annotation.Nullable
  public String getProvidesPosteditService() {
    return providesPosteditService;
  }

  public void setProvidesPosteditService(String providesPosteditService) {
    this.providesPosteditService = providesPosteditService;
  }


  public ProfileSurvey reference(String reference) {
    this.reference = reference;
    return this;
  }

  /**
   * Get reference
   * @return reference
   */
  @javax.annotation.Nullable
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }


  public ProfileSurvey sdlTrados(String sdlTrados) {
    this.sdlTrados = sdlTrados;
    return this;
  }

  /**
   * Get sdlTrados
   * @return sdlTrados
   */
  @javax.annotation.Nullable
  public String getSdlTrados() {
    return sdlTrados;
  }

  public void setSdlTrados(String sdlTrados) {
    this.sdlTrados = sdlTrados;
  }


  public ProfileSurvey skypeId(String skypeId) {
    this.skypeId = skypeId;
    return this;
  }

  /**
   * Get skypeId
   * @return skypeId
   */
  @javax.annotation.Nullable
  public String getSkypeId() {
    return skypeId;
  }

  public void setSkypeId(String skypeId) {
    this.skypeId = skypeId;
  }


  public ProfileSurvey smartcat(String smartcat) {
    this.smartcat = smartcat;
    return this;
  }

  /**
   * Get smartcat
   * @return smartcat
   */
  @javax.annotation.Nullable
  public String getSmartcat() {
    return smartcat;
  }

  public void setSmartcat(String smartcat) {
    this.smartcat = smartcat;
  }


  public ProfileSurvey smartling(String smartling) {
    this.smartling = smartling;
    return this;
  }

  /**
   * Get smartling
   * @return smartling
   */
  @javax.annotation.Nullable
  public String getSmartling() {
    return smartling;
  }

  public void setSmartling(String smartling) {
    this.smartling = smartling;
  }


  public ProfileSurvey software(String software) {
    this.software = software;
    return this;
  }

  /**
   * Get software
   * @return software
   */
  @javax.annotation.Nullable
  public String getSoftware() {
    return software;
  }

  public void setSoftware(String software) {
    this.software = software;
  }


  public ProfileSurvey specialization(String specialization) {
    this.specialization = specialization;
    return this;
  }

  /**
   * Get specialization
   * @return specialization
   */
  @javax.annotation.Nullable
  public String getSpecialization() {
    return specialization;
  }

  public void setSpecialization(String specialization) {
    this.specialization = specialization;
  }


  public ProfileSurvey subtitleEdit(String subtitleEdit) {
    this.subtitleEdit = subtitleEdit;
    return this;
  }

  /**
   * Get subtitleEdit
   * @return subtitleEdit
   */
  @javax.annotation.Nullable
  public String getSubtitleEdit() {
    return subtitleEdit;
  }

  public void setSubtitleEdit(String subtitleEdit) {
    this.subtitleEdit = subtitleEdit;
  }


  public ProfileSurvey subtitleWorkshop(String subtitleWorkshop) {
    this.subtitleWorkshop = subtitleWorkshop;
    return this;
  }

  /**
   * Get subtitleWorkshop
   * @return subtitleWorkshop
   */
  @javax.annotation.Nullable
  public String getSubtitleWorkshop() {
    return subtitleWorkshop;
  }

  public void setSubtitleWorkshop(String subtitleWorkshop) {
    this.subtitleWorkshop = subtitleWorkshop;
  }


  public ProfileSurvey translatorAssociation(String translatorAssociation) {
    this.translatorAssociation = translatorAssociation;
    return this;
  }

  /**
   * Get translatorAssociation
   * @return translatorAssociation
   */
  @javax.annotation.Nullable
  public String getTranslatorAssociation() {
    return translatorAssociation;
  }

  public void setTranslatorAssociation(String translatorAssociation) {
    this.translatorAssociation = translatorAssociation;
  }


  public ProfileSurvey transsuite2000(String transsuite2000) {
    this.transsuite2000 = transsuite2000;
    return this;
  }

  /**
   * Get transsuite2000
   * @return transsuite2000
   */
  @javax.annotation.Nullable
  public String getTranssuite2000() {
    return transsuite2000;
  }

  public void setTranssuite2000(String transsuite2000) {
    this.transsuite2000 = transsuite2000;
  }


  public ProfileSurvey vendorProfileLsp(String vendorProfileLsp) {
    this.vendorProfileLsp = vendorProfileLsp;
    return this;
  }

  /**
   * Get vendorProfileLsp
   * @return vendorProfileLsp
   */
  @javax.annotation.Nullable
  public String getVendorProfileLsp() {
    return vendorProfileLsp;
  }

  public void setVendorProfileLsp(String vendorProfileLsp) {
    this.vendorProfileLsp = vendorProfileLsp;
  }


  public ProfileSurvey wordbee(String wordbee) {
    this.wordbee = wordbee;
    return this;
  }

  /**
   * Get wordbee
   * @return wordbee
   */
  @javax.annotation.Nullable
  public String getWordbee() {
    return wordbee;
  }

  public void setWordbee(String wordbee) {
    this.wordbee = wordbee;
  }


  public ProfileSurvey wordfast(String wordfast) {
    this.wordfast = wordfast;
    return this;
  }

  /**
   * Get wordfast
   * @return wordfast
   */
  @javax.annotation.Nullable
  public String getWordfast() {
    return wordfast;
  }

  public void setWordfast(String wordfast) {
    this.wordfast = wordfast;
  }


  public ProfileSurvey workType(String workType) {
    this.workType = workType;
    return this;
  }

  /**
   * Get workType
   * @return workType
   */
  @javax.annotation.Nullable
  public String getWorkType() {
    return workType;
  }

  public void setWorkType(String workType) {
    this.workType = workType;
  }


  public ProfileSurvey workWith(String workWith) {
    this.workWith = workWith;
    return this;
  }

  /**
   * Get workWith
   * @return workWith
   */
  @javax.annotation.Nullable
  public String getWorkWith() {
    return workWith;
  }

  public void setWorkWith(String workWith) {
    this.workWith = workWith;
  }


  public ProfileSurvey workingAs(String workingAs) {
    this.workingAs = workingAs;
    return this;
  }

  /**
   * Get workingAs
   * @return workingAs
   */
  @javax.annotation.Nullable
  public String getWorkingAs() {
    return workingAs;
  }

  public void setWorkingAs(String workingAs) {
    this.workingAs = workingAs;
  }


  public ProfileSurvey workingTimezone(String workingTimezone) {
    this.workingTimezone = workingTimezone;
    return this;
  }

  /**
   * Get workingTimezone
   * @return workingTimezone
   */
  @javax.annotation.Nullable
  public String getWorkingTimezone() {
    return workingTimezone;
  }

  public void setWorkingTimezone(String workingTimezone) {
    this.workingTimezone = workingTimezone;
  }


  public ProfileSurvey xbench(String xbench) {
    this.xbench = xbench;
    return this;
  }

  /**
   * Get xbench
   * @return xbench
   */
  @javax.annotation.Nullable
  public String getXbench() {
    return xbench;
  }

  public void setXbench(String xbench) {
    this.xbench = xbench;
  }


  public ProfileSurvey xtm(String xtm) {
    this.xtm = xtm;
    return this;
  }

  /**
   * Get xtm
   * @return xtm
   */
  @javax.annotation.Nullable
  public String getXtm() {
    return xtm;
  }

  public void setXtm(String xtm) {
    this.xtm = xtm;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProfileSurvey profileSurvey = (ProfileSurvey) o;
    return Objects.equals(this.currentServices, profileSurvey.currentServices) &&
        Objects.equals(this.dailyProofreadingCapacity, profileSurvey.dailyProofreadingCapacity) &&
        Objects.equals(this.dailyTranslationCapacity, profileSurvey.dailyTranslationCapacity) &&
        Objects.equals(this.dtpSoftware, profileSurvey.dtpSoftware) &&
        Objects.equals(this.experience, profileSurvey.experience) &&
        Objects.equals(this.isCertifiedTranslator, profileSurvey.isCertifiedTranslator) &&
        Objects.equals(this.isSwornTranslator, profileSurvey.isSwornTranslator) &&
        Objects.equals(this.memoq, profileSurvey.memoq) &&
        Objects.equals(this.memsource, profileSurvey.memsource) &&
        Objects.equals(this.omegat, profileSurvey.omegat) &&
        Objects.equals(this.proofreaderExperience, profileSurvey.proofreaderExperience) &&
        Objects.equals(this.providesCreativeWritingService, profileSurvey.providesCreativeWritingService) &&
        Objects.equals(this.providesPosteditService, profileSurvey.providesPosteditService) &&
        Objects.equals(this.reference, profileSurvey.reference) &&
        Objects.equals(this.sdlTrados, profileSurvey.sdlTrados) &&
        Objects.equals(this.skypeId, profileSurvey.skypeId) &&
        Objects.equals(this.smartcat, profileSurvey.smartcat) &&
        Objects.equals(this.smartling, profileSurvey.smartling) &&
        Objects.equals(this.software, profileSurvey.software) &&
        Objects.equals(this.specialization, profileSurvey.specialization) &&
        Objects.equals(this.subtitleEdit, profileSurvey.subtitleEdit) &&
        Objects.equals(this.subtitleWorkshop, profileSurvey.subtitleWorkshop) &&
        Objects.equals(this.translatorAssociation, profileSurvey.translatorAssociation) &&
        Objects.equals(this.transsuite2000, profileSurvey.transsuite2000) &&
        Objects.equals(this.vendorProfileLsp, profileSurvey.vendorProfileLsp) &&
        Objects.equals(this.wordbee, profileSurvey.wordbee) &&
        Objects.equals(this.wordfast, profileSurvey.wordfast) &&
        Objects.equals(this.workType, profileSurvey.workType) &&
        Objects.equals(this.workWith, profileSurvey.workWith) &&
        Objects.equals(this.workingAs, profileSurvey.workingAs) &&
        Objects.equals(this.workingTimezone, profileSurvey.workingTimezone) &&
        Objects.equals(this.xbench, profileSurvey.xbench) &&
        Objects.equals(this.xtm, profileSurvey.xtm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currentServices, dailyProofreadingCapacity, dailyTranslationCapacity, dtpSoftware, experience, isCertifiedTranslator, isSwornTranslator, memoq, memsource, omegat, proofreaderExperience, providesCreativeWritingService, providesPosteditService, reference, sdlTrados, skypeId, smartcat, smartling, software, specialization, subtitleEdit, subtitleWorkshop, translatorAssociation, transsuite2000, vendorProfileLsp, wordbee, wordfast, workType, workWith, workingAs, workingTimezone, xbench, xtm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProfileSurvey {\n");
    sb.append("    currentServices: ").append(toIndentedString(currentServices)).append("\n");
    sb.append("    dailyProofreadingCapacity: ").append(toIndentedString(dailyProofreadingCapacity)).append("\n");
    sb.append("    dailyTranslationCapacity: ").append(toIndentedString(dailyTranslationCapacity)).append("\n");
    sb.append("    dtpSoftware: ").append(toIndentedString(dtpSoftware)).append("\n");
    sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
    sb.append("    isCertifiedTranslator: ").append(toIndentedString(isCertifiedTranslator)).append("\n");
    sb.append("    isSwornTranslator: ").append(toIndentedString(isSwornTranslator)).append("\n");
    sb.append("    memoq: ").append(toIndentedString(memoq)).append("\n");
    sb.append("    memsource: ").append(toIndentedString(memsource)).append("\n");
    sb.append("    omegat: ").append(toIndentedString(omegat)).append("\n");
    sb.append("    proofreaderExperience: ").append(toIndentedString(proofreaderExperience)).append("\n");
    sb.append("    providesCreativeWritingService: ").append(toIndentedString(providesCreativeWritingService)).append("\n");
    sb.append("    providesPosteditService: ").append(toIndentedString(providesPosteditService)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    sdlTrados: ").append(toIndentedString(sdlTrados)).append("\n");
    sb.append("    skypeId: ").append(toIndentedString(skypeId)).append("\n");
    sb.append("    smartcat: ").append(toIndentedString(smartcat)).append("\n");
    sb.append("    smartling: ").append(toIndentedString(smartling)).append("\n");
    sb.append("    software: ").append(toIndentedString(software)).append("\n");
    sb.append("    specialization: ").append(toIndentedString(specialization)).append("\n");
    sb.append("    subtitleEdit: ").append(toIndentedString(subtitleEdit)).append("\n");
    sb.append("    subtitleWorkshop: ").append(toIndentedString(subtitleWorkshop)).append("\n");
    sb.append("    translatorAssociation: ").append(toIndentedString(translatorAssociation)).append("\n");
    sb.append("    transsuite2000: ").append(toIndentedString(transsuite2000)).append("\n");
    sb.append("    vendorProfileLsp: ").append(toIndentedString(vendorProfileLsp)).append("\n");
    sb.append("    wordbee: ").append(toIndentedString(wordbee)).append("\n");
    sb.append("    wordfast: ").append(toIndentedString(wordfast)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("    workWith: ").append(toIndentedString(workWith)).append("\n");
    sb.append("    workingAs: ").append(toIndentedString(workingAs)).append("\n");
    sb.append("    workingTimezone: ").append(toIndentedString(workingTimezone)).append("\n");
    sb.append("    xbench: ").append(toIndentedString(xbench)).append("\n");
    sb.append("    xtm: ").append(toIndentedString(xtm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("current_services");
    openapiFields.add("daily_proofreading_capacity");
    openapiFields.add("daily_translation_capacity");
    openapiFields.add("dtp_software");
    openapiFields.add("experience");
    openapiFields.add("is_certified_translator");
    openapiFields.add("is_sworn_translator");
    openapiFields.add("memoq");
    openapiFields.add("memsource");
    openapiFields.add("omegat");
    openapiFields.add("proofreader_experience");
    openapiFields.add("provides_creative_writing_service");
    openapiFields.add("provides_postedit_service");
    openapiFields.add("reference");
    openapiFields.add("sdl_trados");
    openapiFields.add("skype_id");
    openapiFields.add("smartcat");
    openapiFields.add("smartling");
    openapiFields.add("software");
    openapiFields.add("specialization");
    openapiFields.add("subtitle_edit");
    openapiFields.add("subtitle_workshop");
    openapiFields.add("translator_association");
    openapiFields.add("transsuite_2000");
    openapiFields.add("vendor_profile_lsp");
    openapiFields.add("wordbee");
    openapiFields.add("wordfast");
    openapiFields.add("work_type");
    openapiFields.add("work_with");
    openapiFields.add("working_as");
    openapiFields.add("working_timezone");
    openapiFields.add("xbench");
    openapiFields.add("xtm");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProfileSurvey
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProfileSurvey.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProfileSurvey is not found in the empty JSON string", ProfileSurvey.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProfileSurvey.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProfileSurvey` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("current_services") != null && !jsonObj.get("current_services").isJsonNull()) && !jsonObj.get("current_services").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_services` to be a primitive type in the JSON string but got `%s`", jsonObj.get("current_services").toString()));
      }
      if ((jsonObj.get("daily_proofreading_capacity") != null && !jsonObj.get("daily_proofreading_capacity").isJsonNull()) && !jsonObj.get("daily_proofreading_capacity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `daily_proofreading_capacity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("daily_proofreading_capacity").toString()));
      }
      if ((jsonObj.get("daily_translation_capacity") != null && !jsonObj.get("daily_translation_capacity").isJsonNull()) && !jsonObj.get("daily_translation_capacity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `daily_translation_capacity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("daily_translation_capacity").toString()));
      }
      if ((jsonObj.get("dtp_software") != null && !jsonObj.get("dtp_software").isJsonNull()) && !jsonObj.get("dtp_software").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtp_software` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dtp_software").toString()));
      }
      if ((jsonObj.get("experience") != null && !jsonObj.get("experience").isJsonNull()) && !jsonObj.get("experience").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `experience` to be a primitive type in the JSON string but got `%s`", jsonObj.get("experience").toString()));
      }
      if ((jsonObj.get("is_certified_translator") != null && !jsonObj.get("is_certified_translator").isJsonNull()) && !jsonObj.get("is_certified_translator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_certified_translator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_certified_translator").toString()));
      }
      if ((jsonObj.get("is_sworn_translator") != null && !jsonObj.get("is_sworn_translator").isJsonNull()) && !jsonObj.get("is_sworn_translator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `is_sworn_translator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("is_sworn_translator").toString()));
      }
      if ((jsonObj.get("memoq") != null && !jsonObj.get("memoq").isJsonNull()) && !jsonObj.get("memoq").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memoq` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memoq").toString()));
      }
      if ((jsonObj.get("memsource") != null && !jsonObj.get("memsource").isJsonNull()) && !jsonObj.get("memsource").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `memsource` to be a primitive type in the JSON string but got `%s`", jsonObj.get("memsource").toString()));
      }
      if ((jsonObj.get("omegat") != null && !jsonObj.get("omegat").isJsonNull()) && !jsonObj.get("omegat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `omegat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("omegat").toString()));
      }
      if ((jsonObj.get("proofreader_experience") != null && !jsonObj.get("proofreader_experience").isJsonNull()) && !jsonObj.get("proofreader_experience").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `proofreader_experience` to be a primitive type in the JSON string but got `%s`", jsonObj.get("proofreader_experience").toString()));
      }
      if ((jsonObj.get("provides_creative_writing_service") != null && !jsonObj.get("provides_creative_writing_service").isJsonNull()) && !jsonObj.get("provides_creative_writing_service").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provides_creative_writing_service` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provides_creative_writing_service").toString()));
      }
      if ((jsonObj.get("provides_postedit_service") != null && !jsonObj.get("provides_postedit_service").isJsonNull()) && !jsonObj.get("provides_postedit_service").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `provides_postedit_service` to be a primitive type in the JSON string but got `%s`", jsonObj.get("provides_postedit_service").toString()));
      }
      if ((jsonObj.get("reference") != null && !jsonObj.get("reference").isJsonNull()) && !jsonObj.get("reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference").toString()));
      }
      if ((jsonObj.get("sdl_trados") != null && !jsonObj.get("sdl_trados").isJsonNull()) && !jsonObj.get("sdl_trados").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sdl_trados` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sdl_trados").toString()));
      }
      if ((jsonObj.get("skype_id") != null && !jsonObj.get("skype_id").isJsonNull()) && !jsonObj.get("skype_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `skype_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("skype_id").toString()));
      }
      if ((jsonObj.get("smartcat") != null && !jsonObj.get("smartcat").isJsonNull()) && !jsonObj.get("smartcat").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smartcat` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smartcat").toString()));
      }
      if ((jsonObj.get("smartling") != null && !jsonObj.get("smartling").isJsonNull()) && !jsonObj.get("smartling").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `smartling` to be a primitive type in the JSON string but got `%s`", jsonObj.get("smartling").toString()));
      }
      if ((jsonObj.get("software") != null && !jsonObj.get("software").isJsonNull()) && !jsonObj.get("software").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `software` to be a primitive type in the JSON string but got `%s`", jsonObj.get("software").toString()));
      }
      if ((jsonObj.get("specialization") != null && !jsonObj.get("specialization").isJsonNull()) && !jsonObj.get("specialization").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialization` to be a primitive type in the JSON string but got `%s`", jsonObj.get("specialization").toString()));
      }
      if ((jsonObj.get("subtitle_edit") != null && !jsonObj.get("subtitle_edit").isJsonNull()) && !jsonObj.get("subtitle_edit").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtitle_edit` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtitle_edit").toString()));
      }
      if ((jsonObj.get("subtitle_workshop") != null && !jsonObj.get("subtitle_workshop").isJsonNull()) && !jsonObj.get("subtitle_workshop").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subtitle_workshop` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subtitle_workshop").toString()));
      }
      if ((jsonObj.get("translator_association") != null && !jsonObj.get("translator_association").isJsonNull()) && !jsonObj.get("translator_association").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `translator_association` to be a primitive type in the JSON string but got `%s`", jsonObj.get("translator_association").toString()));
      }
      if ((jsonObj.get("transsuite_2000") != null && !jsonObj.get("transsuite_2000").isJsonNull()) && !jsonObj.get("transsuite_2000").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transsuite_2000` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transsuite_2000").toString()));
      }
      if ((jsonObj.get("vendor_profile_lsp") != null && !jsonObj.get("vendor_profile_lsp").isJsonNull()) && !jsonObj.get("vendor_profile_lsp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_profile_lsp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_profile_lsp").toString()));
      }
      if ((jsonObj.get("wordbee") != null && !jsonObj.get("wordbee").isJsonNull()) && !jsonObj.get("wordbee").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wordbee` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wordbee").toString()));
      }
      if ((jsonObj.get("wordfast") != null && !jsonObj.get("wordfast").isJsonNull()) && !jsonObj.get("wordfast").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wordfast` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wordfast").toString()));
      }
      if ((jsonObj.get("work_type") != null && !jsonObj.get("work_type").isJsonNull()) && !jsonObj.get("work_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_type").toString()));
      }
      if ((jsonObj.get("work_with") != null && !jsonObj.get("work_with").isJsonNull()) && !jsonObj.get("work_with").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_with` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_with").toString()));
      }
      if ((jsonObj.get("working_as") != null && !jsonObj.get("working_as").isJsonNull()) && !jsonObj.get("working_as").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `working_as` to be a primitive type in the JSON string but got `%s`", jsonObj.get("working_as").toString()));
      }
      if ((jsonObj.get("working_timezone") != null && !jsonObj.get("working_timezone").isJsonNull()) && !jsonObj.get("working_timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `working_timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("working_timezone").toString()));
      }
      if ((jsonObj.get("xbench") != null && !jsonObj.get("xbench").isJsonNull()) && !jsonObj.get("xbench").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xbench` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xbench").toString()));
      }
      if ((jsonObj.get("xtm") != null && !jsonObj.get("xtm").isJsonNull()) && !jsonObj.get("xtm").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `xtm` to be a primitive type in the JSON string but got `%s`", jsonObj.get("xtm").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProfileSurvey.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProfileSurvey' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProfileSurvey> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProfileSurvey.class));

       return (TypeAdapter<T>) new TypeAdapter<ProfileSurvey>() {
           @Override
           public void write(JsonWriter out, ProfileSurvey value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProfileSurvey read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProfileSurvey given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProfileSurvey
   * @throws IOException if the JSON string is invalid with respect to ProfileSurvey
   */
  public static ProfileSurvey fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProfileSurvey.class);
  }

  /**
   * Convert an instance of ProfileSurvey to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

