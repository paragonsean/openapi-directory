/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ProjectTQS
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:52.387191-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ProjectTQS {
  public static final String SERIALIZED_NAME_IS_ABOVE_AVERAGE = "is_above_average";
  @SerializedName(SERIALIZED_NAME_IS_ABOVE_AVERAGE)
  private Boolean isAboveAverage;

  public static final String SERIALIZED_NAME_SCORE = "score";
  @SerializedName(SERIALIZED_NAME_SCORE)
  private Float score;

  public static final String SERIALIZED_NAME_STRINGS_EDITED = "strings_edited";
  @SerializedName(SERIALIZED_NAME_STRINGS_EDITED)
  private Long stringsEdited;

  public static final String SERIALIZED_NAME_STRINGS_TRANSLATED = "strings_translated";
  @SerializedName(SERIALIZED_NAME_STRINGS_TRANSLATED)
  private Long stringsTranslated;

  public ProjectTQS() {
  }

  public ProjectTQS isAboveAverage(Boolean isAboveAverage) {
    this.isAboveAverage = isAboveAverage;
    return this;
  }

  /**
   * Is this score above or below the average among other vendors in the same project?
   * @return isAboveAverage
   */
  @javax.annotation.Nullable
  public Boolean getIsAboveAverage() {
    return isAboveAverage;
  }

  public void setIsAboveAverage(Boolean isAboveAverage) {
    this.isAboveAverage = isAboveAverage;
  }


  public ProjectTQS score(Float score) {
    this.score = score;
    return this;
  }

  /**
   * Get score
   * @return score
   */
  @javax.annotation.Nullable
  public Float getScore() {
    return score;
  }

  public void setScore(Float score) {
    this.score = score;
  }


  public ProjectTQS stringsEdited(Long stringsEdited) {
    this.stringsEdited = stringsEdited;
    return this;
  }

  /**
   * The number of translated strings by this translator which was edited by a proofreader.
   * @return stringsEdited
   */
  @javax.annotation.Nullable
  public Long getStringsEdited() {
    return stringsEdited;
  }

  public void setStringsEdited(Long stringsEdited) {
    this.stringsEdited = stringsEdited;
  }


  public ProjectTQS stringsTranslated(Long stringsTranslated) {
    this.stringsTranslated = stringsTranslated;
    return this;
  }

  /**
   * The number of translated strings by this translator.
   * @return stringsTranslated
   */
  @javax.annotation.Nullable
  public Long getStringsTranslated() {
    return stringsTranslated;
  }

  public void setStringsTranslated(Long stringsTranslated) {
    this.stringsTranslated = stringsTranslated;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ProjectTQS projectTQS = (ProjectTQS) o;
    return Objects.equals(this.isAboveAverage, projectTQS.isAboveAverage) &&
        Objects.equals(this.score, projectTQS.score) &&
        Objects.equals(this.stringsEdited, projectTQS.stringsEdited) &&
        Objects.equals(this.stringsTranslated, projectTQS.stringsTranslated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(isAboveAverage, score, stringsEdited, stringsTranslated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ProjectTQS {\n");
    sb.append("    isAboveAverage: ").append(toIndentedString(isAboveAverage)).append("\n");
    sb.append("    score: ").append(toIndentedString(score)).append("\n");
    sb.append("    stringsEdited: ").append(toIndentedString(stringsEdited)).append("\n");
    sb.append("    stringsTranslated: ").append(toIndentedString(stringsTranslated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("is_above_average");
    openapiFields.add("score");
    openapiFields.add("strings_edited");
    openapiFields.add("strings_translated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ProjectTQS
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ProjectTQS.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ProjectTQS is not found in the empty JSON string", ProjectTQS.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ProjectTQS.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ProjectTQS` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ProjectTQS.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ProjectTQS' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ProjectTQS> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ProjectTQS.class));

       return (TypeAdapter<T>) new TypeAdapter<ProjectTQS>() {
           @Override
           public void write(JsonWriter out, ProjectTQS value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ProjectTQS read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ProjectTQS given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ProjectTQS
   * @throws IOException if the JSON string is invalid with respect to ProjectTQS
   */
  public static ProjectTQS fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ProjectTQS.class);
  }

  /**
   * Convert an instance of ProjectTQS to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

