/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Currently authed vendor&#39;s role in this project. If vendor has already joined, this contains the role they joined the project with. If not joined yet, this is the role that they can join the project with.
 */
@JsonAdapter(VendorProjectRole.Adapter.class)
public enum VendorProjectRole {
  
  TRANSLATOR("translator"),
  
  PROOFREADER("proofreader"),
  
  BOTH("both");

  private String value;

  VendorProjectRole(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static VendorProjectRole fromValue(String value) {
    for (VendorProjectRole b : VendorProjectRole.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<VendorProjectRole> {
    @Override
    public void write(final JsonWriter jsonWriter, final VendorProjectRole enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public VendorProjectRole read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return VendorProjectRole.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    VendorProjectRole.fromValue(value);
  }
}

