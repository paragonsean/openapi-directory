/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.Address;
import org.openapitools.client.model.BillingAddress;
import org.openapitools.client.model.LanguagePair;
import org.openapitools.client.model.SocialMedia;
import org.openapitools.client.model.UserClient;
import org.openapitools.client.model.UserGroup;
import org.openapitools.client.model.UserLinks;
import org.openapitools.client.model.UserVendor;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * User
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:52.387191-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class User {
  public static final String SERIALIZED_NAME_BILLING = "billing";
  @SerializedName(SERIALIZED_NAME_BILLING)
  private BillingAddress billing;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private LocalDate birthday;

  public static final String SERIALIZED_NAME_CAN_WORK_MANUAL_FILES = "can_work_manual_files";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CAN_WORK_MANUAL_FILES)
  private Boolean canWorkManualFiles;

  public static final String SERIALIZED_NAME_CITY = "city";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_CLIENT = "client";
  @SerializedName(SERIALIZED_NAME_CLIENT)
  private UserClient client;

  public static final String SERIALIZED_NAME_CORPORATE_ID = "corporate_id";
  @SerializedName(SERIALIZED_NAME_CORPORATE_ID)
  private Long corporateId;

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private String country;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Long createdAt;

  public static final String SERIALIZED_NAME_DO_NOT_CONTACT = "do_not_contact";
  @SerializedName(SERIALIZED_NAME_DO_NOT_CONTACT)
  private Boolean doNotContact;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_HAS_PWD = "has_pwd";
  @SerializedName(SERIALIZED_NAME_HAS_PWD)
  private Boolean hasPwd;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Long id;

  public static final String SERIALIZED_NAME_IS_CLIENT = "is_client";
  @SerializedName(SERIALIZED_NAME_IS_CLIENT)
  private Boolean isClient;

  public static final String SERIALIZED_NAME_IS_DEVELOPER = "is_developer";
  @SerializedName(SERIALIZED_NAME_IS_DEVELOPER)
  private Boolean isDeveloper;

  public static final String SERIALIZED_NAME_IS_PROOFREADER = "is_proofreader";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_IS_PROOFREADER)
  private Boolean isProofreader;

  public static final String SERIALIZED_NAME_IS_PROSPECT = "is_prospect";
  @SerializedName(SERIALIZED_NAME_IS_PROSPECT)
  private Boolean isProspect;

  public static final String SERIALIZED_NAME_IS_SALES_PERSON = "is_sales_person";
  @SerializedName(SERIALIZED_NAME_IS_SALES_PERSON)
  private Boolean isSalesPerson;

  public static final String SERIALIZED_NAME_IS_VENDOR = "is_vendor";
  @SerializedName(SERIALIZED_NAME_IS_VENDOR)
  private Boolean isVendor;

  public static final String SERIALIZED_NAME_LANGUAGE_PAIRS = "language_pairs";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_LANGUAGE_PAIRS)
  private List<LanguagePair> languagePairs = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_SEEN_ONLINE_AT = "last_seen_online_at";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_ONLINE_AT)
  private Long lastSeenOnlineAt;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private UserLinks links;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_MAILING = "mailing";
  @SerializedName(SERIALIZED_NAME_MAILING)
  private Address mailing;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NATIVE_LANGUAGE = "native_language";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_NATIVE_LANGUAGE)
  private String nativeLanguage;

  public static final String SERIALIZED_NAME_NPS = "nps";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_NPS)
  private Float nps;

  public static final String SERIALIZED_NAME_PHONE_NUMBER = "phone_number";
  @SerializedName(SERIALIZED_NAME_PHONE_NUMBER)
  private String phoneNumber;

  public static final String SERIALIZED_NAME_PROFILE_PICTURE_PATH = "profile_picture_path";
  @SerializedName(SERIALIZED_NAME_PROFILE_PICTURE_PATH)
  private String profilePicturePath;

  public static final String SERIALIZED_NAME_SOCIAL_MEDIA = "social_media";
  @SerializedName(SERIALIZED_NAME_SOCIAL_MEDIA)
  private SocialMedia socialMedia;

  public static final String SERIALIZED_NAME_STATE = "state";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_STREET = "street";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_STREET)
  private String street;

  public static final String SERIALIZED_NAME_TIMEZONE = "timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private String timezone;

  public static final String SERIALIZED_NAME_TMS_USER_NAME = "tms_user_name";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_TMS_USER_NAME)
  private String tmsUserName;

  public static final String SERIALIZED_NAME_USER_GROUPS = "user_groups";
  @SerializedName(SERIALIZED_NAME_USER_GROUPS)
  private List<UserGroup> userGroups = new ArrayList<>();

  public static final String SERIALIZED_NAME_VENDOR = "vendor";
  @SerializedName(SERIALIZED_NAME_VENDOR)
  private UserVendor vendor;

  public static final String SERIALIZED_NAME_ZIP_CODE = "zip_code";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_ZIP_CODE)
  private String zipCode;

  public User() {
  }

  public User billing(BillingAddress billing) {
    this.billing = billing;
    return this;
  }

  /**
   * Get billing
   * @return billing
   */
  @javax.annotation.Nullable
  public BillingAddress getBilling() {
    return billing;
  }

  public void setBilling(BillingAddress billing) {
    this.billing = billing;
  }


  public User birthday(LocalDate birthday) {
    this.birthday = birthday;
    return this;
  }

  /**
   * Get birthday
   * @return birthday
   */
  @javax.annotation.Nullable
  public LocalDate getBirthday() {
    return birthday;
  }

  public void setBirthday(LocalDate birthday) {
    this.birthday = birthday;
  }


  @Deprecated
  public User canWorkManualFiles(Boolean canWorkManualFiles) {
    this.canWorkManualFiles = canWorkManualFiles;
    return this;
  }

  /**
   * \\@deprecated. use &#x60;vendor&#x60; key
   * @return canWorkManualFiles
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getCanWorkManualFiles() {
    return canWorkManualFiles;
  }

  @Deprecated
  public void setCanWorkManualFiles(Boolean canWorkManualFiles) {
    this.canWorkManualFiles = canWorkManualFiles;
  }


  @Deprecated
  public User city(String city) {
    this.city = city;
    return this;
  }

  /**
   * \\@deprecated. use mailing or billing key.
   * @return city
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  @Deprecated
  public void setCity(String city) {
    this.city = city;
  }


  public User client(UserClient client) {
    this.client = client;
    return this;
  }

  /**
   * Get client
   * @return client
   */
  @javax.annotation.Nullable
  public UserClient getClient() {
    return client;
  }

  public void setClient(UserClient client) {
    this.client = client;
  }


  public User corporateId(Long corporateId) {
    this.corporateId = corporateId;
    return this;
  }

  /**
   * Get corporateId
   * @return corporateId
   */
  @javax.annotation.Nullable
  public Long getCorporateId() {
    return corporateId;
  }

  public void setCorporateId(Long corporateId) {
    this.corporateId = corporateId;
  }


  @Deprecated
  public User country(String country) {
    this.country = country;
    return this;
  }

  /**
   * \\@deprecated. use mailing or billing key.
   * @return country
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getCountry() {
    return country;
  }

  @Deprecated
  public void setCountry(String country) {
    this.country = country;
  }


  public User createdAt(Long createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Unix epoch time
   * @return createdAt
   */
  @javax.annotation.Nullable
  public Long getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(Long createdAt) {
    this.createdAt = createdAt;
  }


  public User doNotContact(Boolean doNotContact) {
    this.doNotContact = doNotContact;
    return this;
  }

  /**
   * Get doNotContact
   * @return doNotContact
   */
  @javax.annotation.Nullable
  public Boolean getDoNotContact() {
    return doNotContact;
  }

  public void setDoNotContact(Boolean doNotContact) {
    this.doNotContact = doNotContact;
  }


  public User email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public User firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public User hasPwd(Boolean hasPwd) {
    this.hasPwd = hasPwd;
    return this;
  }

  /**
   * Get hasPwd
   * @return hasPwd
   */
  @javax.annotation.Nullable
  public Boolean getHasPwd() {
    return hasPwd;
  }

  public void setHasPwd(Boolean hasPwd) {
    this.hasPwd = hasPwd;
  }


  public User id(Long id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }


  public User isClient(Boolean isClient) {
    this.isClient = isClient;
    return this;
  }

  /**
   * Get isClient
   * @return isClient
   */
  @javax.annotation.Nullable
  public Boolean getIsClient() {
    return isClient;
  }

  public void setIsClient(Boolean isClient) {
    this.isClient = isClient;
  }


  public User isDeveloper(Boolean isDeveloper) {
    this.isDeveloper = isDeveloper;
    return this;
  }

  /**
   * Get isDeveloper
   * @return isDeveloper
   */
  @javax.annotation.Nullable
  public Boolean getIsDeveloper() {
    return isDeveloper;
  }

  public void setIsDeveloper(Boolean isDeveloper) {
    this.isDeveloper = isDeveloper;
  }


  @Deprecated
  public User isProofreader(Boolean isProofreader) {
    this.isProofreader = isProofreader;
    return this;
  }

  /**
   * \\@deprecated. use &#x60;vendor&#x60; key
   * @return isProofreader
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getIsProofreader() {
    return isProofreader;
  }

  @Deprecated
  public void setIsProofreader(Boolean isProofreader) {
    this.isProofreader = isProofreader;
  }


  public User isProspect(Boolean isProspect) {
    this.isProspect = isProspect;
    return this;
  }

  /**
   * Get isProspect
   * @return isProspect
   */
  @javax.annotation.Nullable
  public Boolean getIsProspect() {
    return isProspect;
  }

  public void setIsProspect(Boolean isProspect) {
    this.isProspect = isProspect;
  }


  public User isSalesPerson(Boolean isSalesPerson) {
    this.isSalesPerson = isSalesPerson;
    return this;
  }

  /**
   * Get isSalesPerson
   * @return isSalesPerson
   */
  @javax.annotation.Nullable
  public Boolean getIsSalesPerson() {
    return isSalesPerson;
  }

  public void setIsSalesPerson(Boolean isSalesPerson) {
    this.isSalesPerson = isSalesPerson;
  }


  public User isVendor(Boolean isVendor) {
    this.isVendor = isVendor;
    return this;
  }

  /**
   * Get isVendor
   * @return isVendor
   */
  @javax.annotation.Nullable
  public Boolean getIsVendor() {
    return isVendor;
  }

  public void setIsVendor(Boolean isVendor) {
    this.isVendor = isVendor;
  }


  @Deprecated
  public User languagePairs(List<LanguagePair> languagePairs) {
    this.languagePairs = languagePairs;
    return this;
  }

  public User addLanguagePairsItem(LanguagePair languagePairsItem) {
    if (this.languagePairs == null) {
      this.languagePairs = new ArrayList<>();
    }
    this.languagePairs.add(languagePairsItem);
    return this;
  }

  /**
   * \\@deprecated. use &#x60;vendor&#x60; key
   * @return languagePairs
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public List<LanguagePair> getLanguagePairs() {
    return languagePairs;
  }

  @Deprecated
  public void setLanguagePairs(List<LanguagePair> languagePairs) {
    this.languagePairs = languagePairs;
  }


  public User lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public User lastSeenOnlineAt(Long lastSeenOnlineAt) {
    this.lastSeenOnlineAt = lastSeenOnlineAt;
    return this;
  }

  /**
   * Unix epoch time
   * @return lastSeenOnlineAt
   */
  @javax.annotation.Nullable
  public Long getLastSeenOnlineAt() {
    return lastSeenOnlineAt;
  }

  public void setLastSeenOnlineAt(Long lastSeenOnlineAt) {
    this.lastSeenOnlineAt = lastSeenOnlineAt;
  }


  public User links(UserLinks links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nullable
  public UserLinks getLinks() {
    return links;
  }

  public void setLinks(UserLinks links) {
    this.links = links;
  }


  public User locale(String locale) {
    this.locale = locale;
    return this;
  }

  /**
   * User Locale
   * @return locale
   */
  @javax.annotation.Nullable
  public String getLocale() {
    return locale;
  }

  public void setLocale(String locale) {
    this.locale = locale;
  }


  public User mailing(Address mailing) {
    this.mailing = mailing;
    return this;
  }

  /**
   * Get mailing
   * @return mailing
   */
  @javax.annotation.Nullable
  public Address getMailing() {
    return mailing;
  }

  public void setMailing(Address mailing) {
    this.mailing = mailing;
  }


  public User name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Deprecated
  public User nativeLanguage(String nativeLanguage) {
    this.nativeLanguage = nativeLanguage;
    return this;
  }

  /**
   * \\@deprecated. Native language of user
   * @return nativeLanguage
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getNativeLanguage() {
    return nativeLanguage;
  }

  @Deprecated
  public void setNativeLanguage(String nativeLanguage) {
    this.nativeLanguage = nativeLanguage;
  }


  @Deprecated
  public User nps(Float nps) {
    this.nps = nps;
    return this;
  }

  /**
   * \\@deprecated. use /stats endpoint for the current nps value.
   * @return nps
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Float getNps() {
    return nps;
  }

  @Deprecated
  public void setNps(Float nps) {
    this.nps = nps;
  }


  public User phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @javax.annotation.Nullable
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public User profilePicturePath(String profilePicturePath) {
    this.profilePicturePath = profilePicturePath;
    return this;
  }

  /**
   * Get profilePicturePath
   * @return profilePicturePath
   */
  @javax.annotation.Nullable
  public String getProfilePicturePath() {
    return profilePicturePath;
  }

  public void setProfilePicturePath(String profilePicturePath) {
    this.profilePicturePath = profilePicturePath;
  }


  public User socialMedia(SocialMedia socialMedia) {
    this.socialMedia = socialMedia;
    return this;
  }

  /**
   * Get socialMedia
   * @return socialMedia
   */
  @javax.annotation.Nullable
  public SocialMedia getSocialMedia() {
    return socialMedia;
  }

  public void setSocialMedia(SocialMedia socialMedia) {
    this.socialMedia = socialMedia;
  }


  @Deprecated
  public User state(String state) {
    this.state = state;
    return this;
  }

  /**
   * \\@deprecated. use mailing or billing key.
   * @return state
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  @Deprecated
  public void setState(String state) {
    this.state = state;
  }


  public User status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  @Deprecated
  public User street(String street) {
    this.street = street;
    return this;
  }

  /**
   * \\@deprecated. use mailing or billing key.
   * @return street
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getStreet() {
    return street;
  }

  @Deprecated
  public void setStreet(String street) {
    this.street = street;
  }


  public User timezone(String timezone) {
    this.timezone = timezone;
    return this;
  }

  /**
   * Get timezone
   * @return timezone
   */
  @javax.annotation.Nullable
  public String getTimezone() {
    return timezone;
  }

  public void setTimezone(String timezone) {
    this.timezone = timezone;
  }


  @Deprecated
  public User tmsUserName(String tmsUserName) {
    this.tmsUserName = tmsUserName;
    return this;
  }

  /**
   * \\@deprecated. use &#x60;vendor&#x60; key
   * @return tmsUserName
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getTmsUserName() {
    return tmsUserName;
  }

  @Deprecated
  public void setTmsUserName(String tmsUserName) {
    this.tmsUserName = tmsUserName;
  }


  public User userGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
    return this;
  }

  public User addUserGroupsItem(UserGroup userGroupsItem) {
    if (this.userGroups == null) {
      this.userGroups = new ArrayList<>();
    }
    this.userGroups.add(userGroupsItem);
    return this;
  }

  /**
   * Get userGroups
   * @return userGroups
   */
  @javax.annotation.Nullable
  public List<UserGroup> getUserGroups() {
    return userGroups;
  }

  public void setUserGroups(List<UserGroup> userGroups) {
    this.userGroups = userGroups;
  }


  public User vendor(UserVendor vendor) {
    this.vendor = vendor;
    return this;
  }

  /**
   * Get vendor
   * @return vendor
   */
  @javax.annotation.Nullable
  public UserVendor getVendor() {
    return vendor;
  }

  public void setVendor(UserVendor vendor) {
    this.vendor = vendor;
  }


  @Deprecated
  public User zipCode(String zipCode) {
    this.zipCode = zipCode;
    return this;
  }

  /**
   * \\@deprecated. use mailing or billing key. new key name is \&quot;zip\&quot;.
   * @return zipCode
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public String getZipCode() {
    return zipCode;
  }

  @Deprecated
  public void setZipCode(String zipCode) {
    this.zipCode = zipCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    User user = (User) o;
    return Objects.equals(this.billing, user.billing) &&
        Objects.equals(this.birthday, user.birthday) &&
        Objects.equals(this.canWorkManualFiles, user.canWorkManualFiles) &&
        Objects.equals(this.city, user.city) &&
        Objects.equals(this.client, user.client) &&
        Objects.equals(this.corporateId, user.corporateId) &&
        Objects.equals(this.country, user.country) &&
        Objects.equals(this.createdAt, user.createdAt) &&
        Objects.equals(this.doNotContact, user.doNotContact) &&
        Objects.equals(this.email, user.email) &&
        Objects.equals(this.firstName, user.firstName) &&
        Objects.equals(this.hasPwd, user.hasPwd) &&
        Objects.equals(this.id, user.id) &&
        Objects.equals(this.isClient, user.isClient) &&
        Objects.equals(this.isDeveloper, user.isDeveloper) &&
        Objects.equals(this.isProofreader, user.isProofreader) &&
        Objects.equals(this.isProspect, user.isProspect) &&
        Objects.equals(this.isSalesPerson, user.isSalesPerson) &&
        Objects.equals(this.isVendor, user.isVendor) &&
        Objects.equals(this.languagePairs, user.languagePairs) &&
        Objects.equals(this.lastName, user.lastName) &&
        Objects.equals(this.lastSeenOnlineAt, user.lastSeenOnlineAt) &&
        Objects.equals(this.links, user.links) &&
        Objects.equals(this.locale, user.locale) &&
        Objects.equals(this.mailing, user.mailing) &&
        Objects.equals(this.name, user.name) &&
        Objects.equals(this.nativeLanguage, user.nativeLanguage) &&
        Objects.equals(this.nps, user.nps) &&
        Objects.equals(this.phoneNumber, user.phoneNumber) &&
        Objects.equals(this.profilePicturePath, user.profilePicturePath) &&
        Objects.equals(this.socialMedia, user.socialMedia) &&
        Objects.equals(this.state, user.state) &&
        Objects.equals(this.status, user.status) &&
        Objects.equals(this.street, user.street) &&
        Objects.equals(this.timezone, user.timezone) &&
        Objects.equals(this.tmsUserName, user.tmsUserName) &&
        Objects.equals(this.userGroups, user.userGroups) &&
        Objects.equals(this.vendor, user.vendor) &&
        Objects.equals(this.zipCode, user.zipCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(billing, birthday, canWorkManualFiles, city, client, corporateId, country, createdAt, doNotContact, email, firstName, hasPwd, id, isClient, isDeveloper, isProofreader, isProspect, isSalesPerson, isVendor, languagePairs, lastName, lastSeenOnlineAt, links, locale, mailing, name, nativeLanguage, nps, phoneNumber, profilePicturePath, socialMedia, state, status, street, timezone, tmsUserName, userGroups, vendor, zipCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class User {\n");
    sb.append("    billing: ").append(toIndentedString(billing)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    canWorkManualFiles: ").append(toIndentedString(canWorkManualFiles)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    corporateId: ").append(toIndentedString(corporateId)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    doNotContact: ").append(toIndentedString(doNotContact)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    hasPwd: ").append(toIndentedString(hasPwd)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isClient: ").append(toIndentedString(isClient)).append("\n");
    sb.append("    isDeveloper: ").append(toIndentedString(isDeveloper)).append("\n");
    sb.append("    isProofreader: ").append(toIndentedString(isProofreader)).append("\n");
    sb.append("    isProspect: ").append(toIndentedString(isProspect)).append("\n");
    sb.append("    isSalesPerson: ").append(toIndentedString(isSalesPerson)).append("\n");
    sb.append("    isVendor: ").append(toIndentedString(isVendor)).append("\n");
    sb.append("    languagePairs: ").append(toIndentedString(languagePairs)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastSeenOnlineAt: ").append(toIndentedString(lastSeenOnlineAt)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    mailing: ").append(toIndentedString(mailing)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nativeLanguage: ").append(toIndentedString(nativeLanguage)).append("\n");
    sb.append("    nps: ").append(toIndentedString(nps)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    profilePicturePath: ").append(toIndentedString(profilePicturePath)).append("\n");
    sb.append("    socialMedia: ").append(toIndentedString(socialMedia)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    street: ").append(toIndentedString(street)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    tmsUserName: ").append(toIndentedString(tmsUserName)).append("\n");
    sb.append("    userGroups: ").append(toIndentedString(userGroups)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    zipCode: ").append(toIndentedString(zipCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("billing");
    openapiFields.add("birthday");
    openapiFields.add("can_work_manual_files");
    openapiFields.add("city");
    openapiFields.add("client");
    openapiFields.add("corporate_id");
    openapiFields.add("country");
    openapiFields.add("created_at");
    openapiFields.add("do_not_contact");
    openapiFields.add("email");
    openapiFields.add("first_name");
    openapiFields.add("has_pwd");
    openapiFields.add("id");
    openapiFields.add("is_client");
    openapiFields.add("is_developer");
    openapiFields.add("is_proofreader");
    openapiFields.add("is_prospect");
    openapiFields.add("is_sales_person");
    openapiFields.add("is_vendor");
    openapiFields.add("language_pairs");
    openapiFields.add("last_name");
    openapiFields.add("last_seen_online_at");
    openapiFields.add("links");
    openapiFields.add("locale");
    openapiFields.add("mailing");
    openapiFields.add("name");
    openapiFields.add("native_language");
    openapiFields.add("nps");
    openapiFields.add("phone_number");
    openapiFields.add("profile_picture_path");
    openapiFields.add("social_media");
    openapiFields.add("state");
    openapiFields.add("status");
    openapiFields.add("street");
    openapiFields.add("timezone");
    openapiFields.add("tms_user_name");
    openapiFields.add("user_groups");
    openapiFields.add("vendor");
    openapiFields.add("zip_code");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to User
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!User.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in User is not found in the empty JSON string", User.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!User.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `User` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `billing`
      if (jsonObj.get("billing") != null && !jsonObj.get("billing").isJsonNull()) {
        BillingAddress.validateJsonElement(jsonObj.get("billing"));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      // validate the optional field `client`
      if (jsonObj.get("client") != null && !jsonObj.get("client").isJsonNull()) {
        UserClient.validateJsonElement(jsonObj.get("client"));
      }
      if ((jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull()) && !jsonObj.get("country").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be a primitive type in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if (jsonObj.get("language_pairs") != null && !jsonObj.get("language_pairs").isJsonNull()) {
        JsonArray jsonArraylanguagePairs = jsonObj.getAsJsonArray("language_pairs");
        if (jsonArraylanguagePairs != null) {
          // ensure the json data is an array
          if (!jsonObj.get("language_pairs").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `language_pairs` to be an array in the JSON string but got `%s`", jsonObj.get("language_pairs").toString()));
          }

          // validate the optional field `language_pairs` (array)
          for (int i = 0; i < jsonArraylanguagePairs.size(); i++) {
            LanguagePair.validateJsonElement(jsonArraylanguagePairs.get(i));
          };
        }
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      // validate the optional field `links`
      if (jsonObj.get("links") != null && !jsonObj.get("links").isJsonNull()) {
        UserLinks.validateJsonElement(jsonObj.get("links"));
      }
      if ((jsonObj.get("locale") != null && !jsonObj.get("locale").isJsonNull()) && !jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      // validate the optional field `mailing`
      if (jsonObj.get("mailing") != null && !jsonObj.get("mailing").isJsonNull()) {
        Address.validateJsonElement(jsonObj.get("mailing"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("native_language") != null && !jsonObj.get("native_language").isJsonNull()) && !jsonObj.get("native_language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `native_language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("native_language").toString()));
      }
      if ((jsonObj.get("phone_number") != null && !jsonObj.get("phone_number").isJsonNull()) && !jsonObj.get("phone_number").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone_number` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone_number").toString()));
      }
      if ((jsonObj.get("profile_picture_path") != null && !jsonObj.get("profile_picture_path").isJsonNull()) && !jsonObj.get("profile_picture_path").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_picture_path` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_picture_path").toString()));
      }
      // validate the optional field `social_media`
      if (jsonObj.get("social_media") != null && !jsonObj.get("social_media").isJsonNull()) {
        SocialMedia.validateJsonElement(jsonObj.get("social_media"));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("street") != null && !jsonObj.get("street").isJsonNull()) && !jsonObj.get("street").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `street` to be a primitive type in the JSON string but got `%s`", jsonObj.get("street").toString()));
      }
      if ((jsonObj.get("timezone") != null && !jsonObj.get("timezone").isJsonNull()) && !jsonObj.get("timezone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `timezone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("timezone").toString()));
      }
      if ((jsonObj.get("tms_user_name") != null && !jsonObj.get("tms_user_name").isJsonNull()) && !jsonObj.get("tms_user_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `tms_user_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("tms_user_name").toString()));
      }
      if (jsonObj.get("user_groups") != null && !jsonObj.get("user_groups").isJsonNull()) {
        JsonArray jsonArrayuserGroups = jsonObj.getAsJsonArray("user_groups");
        if (jsonArrayuserGroups != null) {
          // ensure the json data is an array
          if (!jsonObj.get("user_groups").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `user_groups` to be an array in the JSON string but got `%s`", jsonObj.get("user_groups").toString()));
          }

          // validate the optional field `user_groups` (array)
          for (int i = 0; i < jsonArrayuserGroups.size(); i++) {
            UserGroup.validateJsonElement(jsonArrayuserGroups.get(i));
          };
        }
      }
      // validate the optional field `vendor`
      if (jsonObj.get("vendor") != null && !jsonObj.get("vendor").isJsonNull()) {
        UserVendor.validateJsonElement(jsonObj.get("vendor"));
      }
      if ((jsonObj.get("zip_code") != null && !jsonObj.get("zip_code").isJsonNull()) && !jsonObj.get("zip_code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zip_code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zip_code").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!User.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'User' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<User> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(User.class));

       return (TypeAdapter<T>) new TypeAdapter<User>() {
           @Override
           public void write(JsonWriter out, User value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public User read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of User given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of User
   * @throws IOException if the JSON string is invalid with respect to User
   */
  public static User fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, User.class);
  }

  /**
   * Convert an instance of User to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

