/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * FilterVendorRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:41:52.387191-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class FilterVendorRequest {
  public static final String SERIALIZED_NAME_CLIENTS = "clients";
  @SerializedName(SERIALIZED_NAME_CLIENTS)
  private List<Integer> clients = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMMUNICATION_CHANNEL = "communication_channel";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_CHANNEL)
  private List<String> communicationChannel = new ArrayList<>();

  public static final String SERIALIZED_NAME_CORPORATE_IDS_FOR_AUTH = "corporate_ids_for_auth";
  @SerializedName(SERIALIZED_NAME_CORPORATE_IDS_FOR_AUTH)
  private List<Integer> corporateIdsForAuth = new ArrayList<>();

  public static final String SERIALIZED_NAME_CORPORATES = "corporates";
  @SerializedName(SERIALIZED_NAME_CORPORATES)
  private List<Integer> corporates = new ArrayList<>();

  public static final String SERIALIZED_NAME_COUNTRY = "country";
  @SerializedName(SERIALIZED_NAME_COUNTRY)
  private List<String> country = new ArrayList<>();

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CURRENT_SERVICES = "current_services";
  @SerializedName(SERIALIZED_NAME_CURRENT_SERVICES)
  private List<String> currentServices = new ArrayList<>();

  public static final String SERIALIZED_NAME_DAILY_PROOFREADING_CAPACITY = "daily_proofreading_capacity";
  @SerializedName(SERIALIZED_NAME_DAILY_PROOFREADING_CAPACITY)
  private Integer dailyProofreadingCapacity;

  public static final String SERIALIZED_NAME_DAILY_TRANSLATION_CAPACITY = "daily_translation_capacity";
  @SerializedName(SERIALIZED_NAME_DAILY_TRANSLATION_CAPACITY)
  private Integer dailyTranslationCapacity;

  public static final String SERIALIZED_NAME_DESTINATION_LANGUAGES = "destination_languages";
  @SerializedName(SERIALIZED_NAME_DESTINATION_LANGUAGES)
  private List<Integer> destinationLanguages = new ArrayList<>();

  public static final String SERIALIZED_NAME_DTP_SOFTWARE = "dtp_software";
  @SerializedName(SERIALIZED_NAME_DTP_SOFTWARE)
  private List<String> dtpSoftware = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL_ADDRESS = "email_address";
  @SerializedName(SERIALIZED_NAME_EMAIL_ADDRESS)
  private String emailAddress;

  public static final String SERIALIZED_NAME_EXPERIENCE = "experience";
  @SerializedName(SERIALIZED_NAME_EXPERIENCE)
  private List<String> experience = new ArrayList<>();

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private List<Integer> id = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_CERTIFIED_TRANSLATOR = "is_certified_translator";
  @SerializedName(SERIALIZED_NAME_IS_CERTIFIED_TRANSLATOR)
  private Boolean isCertifiedTranslator;

  public static final String SERIALIZED_NAME_IS_SWORN_TRANSLATOR = "is_sworn_translator";
  @SerializedName(SERIALIZED_NAME_IS_SWORN_TRANSLATOR)
  private Boolean isSwornTranslator;

  public static final String SERIALIZED_NAME_LANGUAGE_PAIRS = "language_pairs";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_PAIRS)
  private List<List<Integer>> languagePairs = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LAST_ONLINE = "last_online";
  @SerializedName(SERIALIZED_NAME_LAST_ONLINE)
  private String lastOnline;

  public static final String SERIALIZED_NAME_LAST_WORKED = "last_worked";
  @SerializedName(SERIALIZED_NAME_LAST_WORKED)
  private String lastWorked;

  public static final String SERIALIZED_NAME_MEMOQ = "memoq";
  @SerializedName(SERIALIZED_NAME_MEMOQ)
  private Integer memoq;

  public static final String SERIALIZED_NAME_MEMSOURCE = "memsource";
  @SerializedName(SERIALIZED_NAME_MEMSOURCE)
  private Integer memsource;

  public static final String SERIALIZED_NAME_MIN_TQS = "min_tqs";
  @SerializedName(SERIALIZED_NAME_MIN_TQS)
  private BigDecimal minTqs;

  public static final String SERIALIZED_NAME_OMEGAT = "omegat";
  @SerializedName(SERIALIZED_NAME_OMEGAT)
  private Integer omegat;

  public static final String SERIALIZED_NAME_PROJECT_COUNT = "project_count";
  @SerializedName(SERIALIZED_NAME_PROJECT_COUNT)
  private Integer projectCount;

  public static final String SERIALIZED_NAME_PROOFREADER_EXPERIENCE = "proofreader_experience";
  @SerializedName(SERIALIZED_NAME_PROOFREADER_EXPERIENCE)
  private Integer proofreaderExperience;

  public static final String SERIALIZED_NAME_PROVIDES_CREATIVE_WRITING_SERVICE = "provides_creative_writing_service";
  @SerializedName(SERIALIZED_NAME_PROVIDES_CREATIVE_WRITING_SERVICE)
  private Boolean providesCreativeWritingService;

  public static final String SERIALIZED_NAME_PROVIDES_POSTEDIT_SERVICE = "provides_postedit_service";
  @SerializedName(SERIALIZED_NAME_PROVIDES_POSTEDIT_SERVICE)
  private Boolean providesPosteditService;

  public static final String SERIALIZED_NAME_QUOTE_FILE_SUBJECTS = "quote_file_subjects";
  @SerializedName(SERIALIZED_NAME_QUOTE_FILE_SUBJECTS)
  private List<String> quoteFileSubjects = new ArrayList<>();

  public static final String SERIALIZED_NAME_REFERENCE = "reference";
  @SerializedName(SERIALIZED_NAME_REFERENCE)
  private String reference;

  public static final String SERIALIZED_NAME_SDL_TRADOS = "sdl_trados";
  @SerializedName(SERIALIZED_NAME_SDL_TRADOS)
  private Integer sdlTrados;

  public static final String SERIALIZED_NAME_SEARCH = "search";
  @SerializedName(SERIALIZED_NAME_SEARCH)
  private String search;

  public static final String SERIALIZED_NAME_SKYPE_ID = "skype_id";
  @SerializedName(SERIALIZED_NAME_SKYPE_ID)
  private String skypeId;

  public static final String SERIALIZED_NAME_SMARTCAT = "smartcat";
  @SerializedName(SERIALIZED_NAME_SMARTCAT)
  private Integer smartcat;

  public static final String SERIALIZED_NAME_SMARTLING = "smartling";
  @SerializedName(SERIALIZED_NAME_SMARTLING)
  private Integer smartling;

  public static final String SERIALIZED_NAME_SOURCE_LANGUAGES = "source_languages";
  @SerializedName(SERIALIZED_NAME_SOURCE_LANGUAGES)
  private List<Integer> sourceLanguages = new ArrayList<>();

  public static final String SERIALIZED_NAME_SPECIALIZATION = "specialization";
  @SerializedName(SERIALIZED_NAME_SPECIALIZATION)
  private List<String> specialization = new ArrayList<>();

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private List<String> status = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBTITLE_EDIT = "subtitle_edit";
  @SerializedName(SERIALIZED_NAME_SUBTITLE_EDIT)
  private Integer subtitleEdit;

  public static final String SERIALIZED_NAME_SUBTITLE_WORKSHOP = "subtitle_workshop";
  @SerializedName(SERIALIZED_NAME_SUBTITLE_WORKSHOP)
  private Integer subtitleWorkshop;

  public static final String SERIALIZED_NAME_TRANSLATOR_ASSOCIATION = "translator_association";
  @SerializedName(SERIALIZED_NAME_TRANSLATOR_ASSOCIATION)
  private String translatorAssociation;

  public static final String SERIALIZED_NAME_TRANSSUITE2000 = "transsuite_2000";
  @SerializedName(SERIALIZED_NAME_TRANSSUITE2000)
  private Integer transsuite2000;

  public static final String SERIALIZED_NAME_USER_WORKING_TIMEZONE = "user_working_timezone";
  @SerializedName(SERIALIZED_NAME_USER_WORKING_TIMEZONE)
  private List<String> userWorkingTimezone = new ArrayList<>();

  public static final String SERIALIZED_NAME_VENDOR_PROFILE_LSP = "vendor_profile_lsp";
  @SerializedName(SERIALIZED_NAME_VENDOR_PROFILE_LSP)
  private String vendorProfileLsp;

  public static final String SERIALIZED_NAME_VENDOR_TAGS = "vendor_tags";
  @SerializedName(SERIALIZED_NAME_VENDOR_TAGS)
  private List<String> vendorTags = new ArrayList<>();

  public static final String SERIALIZED_NAME_VENDOR_TYPE = "vendor_type";
  @SerializedName(SERIALIZED_NAME_VENDOR_TYPE)
  private List<String> vendorType = new ArrayList<>();

  public static final String SERIALIZED_NAME_VENDOR_WORKING_TIMEZONE = "vendor_working_timezone";
  @SerializedName(SERIALIZED_NAME_VENDOR_WORKING_TIMEZONE)
  private List<String> vendorWorkingTimezone = new ArrayList<>();

  public static final String SERIALIZED_NAME_WORD_COUNT = "word_count";
  @SerializedName(SERIALIZED_NAME_WORD_COUNT)
  private Integer wordCount;

  public static final String SERIALIZED_NAME_WORDBEE = "wordbee";
  @SerializedName(SERIALIZED_NAME_WORDBEE)
  private Integer wordbee;

  public static final String SERIALIZED_NAME_WORDFAST = "wordfast";
  @SerializedName(SERIALIZED_NAME_WORDFAST)
  private Integer wordfast;

  public static final String SERIALIZED_NAME_WORK_TYPE = "work_type";
  @SerializedName(SERIALIZED_NAME_WORK_TYPE)
  private String workType;

  public static final String SERIALIZED_NAME_WORK_WITH = "work_with";
  @SerializedName(SERIALIZED_NAME_WORK_WITH)
  private String workWith;

  public static final String SERIALIZED_NAME_WORKING_AS = "working_as";
  @SerializedName(SERIALIZED_NAME_WORKING_AS)
  private List<String> workingAs = new ArrayList<>();

  public static final String SERIALIZED_NAME_XBENCH = "xbench";
  @SerializedName(SERIALIZED_NAME_XBENCH)
  private Integer xbench;

  public static final String SERIALIZED_NAME_XTM = "xtm";
  @SerializedName(SERIALIZED_NAME_XTM)
  private Integer xtm;

  public FilterVendorRequest() {
  }

  public FilterVendorRequest clients(List<Integer> clients) {
    this.clients = clients;
    return this;
  }

  public FilterVendorRequest addClientsItem(Integer clientsItem) {
    if (this.clients == null) {
      this.clients = new ArrayList<>();
    }
    this.clients.add(clientsItem);
    return this;
  }

  /**
   * Get clients
   * @return clients
   */
  @javax.annotation.Nullable
  public List<Integer> getClients() {
    return clients;
  }

  public void setClients(List<Integer> clients) {
    this.clients = clients;
  }


  public FilterVendorRequest communicationChannel(List<String> communicationChannel) {
    this.communicationChannel = communicationChannel;
    return this;
  }

  public FilterVendorRequest addCommunicationChannelItem(String communicationChannelItem) {
    if (this.communicationChannel == null) {
      this.communicationChannel = new ArrayList<>();
    }
    this.communicationChannel.add(communicationChannelItem);
    return this;
  }

  /**
   * Get communicationChannel
   * @return communicationChannel
   */
  @javax.annotation.Nullable
  public List<String> getCommunicationChannel() {
    return communicationChannel;
  }

  public void setCommunicationChannel(List<String> communicationChannel) {
    this.communicationChannel = communicationChannel;
  }


  public FilterVendorRequest corporateIdsForAuth(List<Integer> corporateIdsForAuth) {
    this.corporateIdsForAuth = corporateIdsForAuth;
    return this;
  }

  public FilterVendorRequest addCorporateIdsForAuthItem(Integer corporateIdsForAuthItem) {
    if (this.corporateIdsForAuth == null) {
      this.corporateIdsForAuth = new ArrayList<>();
    }
    this.corporateIdsForAuth.add(corporateIdsForAuthItem);
    return this;
  }

  /**
   * Get corporateIdsForAuth
   * @return corporateIdsForAuth
   */
  @javax.annotation.Nullable
  public List<Integer> getCorporateIdsForAuth() {
    return corporateIdsForAuth;
  }

  public void setCorporateIdsForAuth(List<Integer> corporateIdsForAuth) {
    this.corporateIdsForAuth = corporateIdsForAuth;
  }


  public FilterVendorRequest corporates(List<Integer> corporates) {
    this.corporates = corporates;
    return this;
  }

  public FilterVendorRequest addCorporatesItem(Integer corporatesItem) {
    if (this.corporates == null) {
      this.corporates = new ArrayList<>();
    }
    this.corporates.add(corporatesItem);
    return this;
  }

  /**
   * Get corporates
   * @return corporates
   */
  @javax.annotation.Nullable
  public List<Integer> getCorporates() {
    return corporates;
  }

  public void setCorporates(List<Integer> corporates) {
    this.corporates = corporates;
  }


  public FilterVendorRequest country(List<String> country) {
    this.country = country;
    return this;
  }

  public FilterVendorRequest addCountryItem(String countryItem) {
    if (this.country == null) {
      this.country = new ArrayList<>();
    }
    this.country.add(countryItem);
    return this;
  }

  /**
   * Get country
   * @return country
   */
  @javax.annotation.Nullable
  public List<String> getCountry() {
    return country;
  }

  public void setCountry(List<String> country) {
    this.country = country;
  }


  public FilterVendorRequest createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public FilterVendorRequest currentServices(List<String> currentServices) {
    this.currentServices = currentServices;
    return this;
  }

  public FilterVendorRequest addCurrentServicesItem(String currentServicesItem) {
    if (this.currentServices == null) {
      this.currentServices = new ArrayList<>();
    }
    this.currentServices.add(currentServicesItem);
    return this;
  }

  /**
   * Get currentServices
   * @return currentServices
   */
  @javax.annotation.Nullable
  public List<String> getCurrentServices() {
    return currentServices;
  }

  public void setCurrentServices(List<String> currentServices) {
    this.currentServices = currentServices;
  }


  public FilterVendorRequest dailyProofreadingCapacity(Integer dailyProofreadingCapacity) {
    this.dailyProofreadingCapacity = dailyProofreadingCapacity;
    return this;
  }

  /**
   * Get dailyProofreadingCapacity
   * @return dailyProofreadingCapacity
   */
  @javax.annotation.Nullable
  public Integer getDailyProofreadingCapacity() {
    return dailyProofreadingCapacity;
  }

  public void setDailyProofreadingCapacity(Integer dailyProofreadingCapacity) {
    this.dailyProofreadingCapacity = dailyProofreadingCapacity;
  }


  public FilterVendorRequest dailyTranslationCapacity(Integer dailyTranslationCapacity) {
    this.dailyTranslationCapacity = dailyTranslationCapacity;
    return this;
  }

  /**
   * Get dailyTranslationCapacity
   * @return dailyTranslationCapacity
   */
  @javax.annotation.Nullable
  public Integer getDailyTranslationCapacity() {
    return dailyTranslationCapacity;
  }

  public void setDailyTranslationCapacity(Integer dailyTranslationCapacity) {
    this.dailyTranslationCapacity = dailyTranslationCapacity;
  }


  public FilterVendorRequest destinationLanguages(List<Integer> destinationLanguages) {
    this.destinationLanguages = destinationLanguages;
    return this;
  }

  public FilterVendorRequest addDestinationLanguagesItem(Integer destinationLanguagesItem) {
    if (this.destinationLanguages == null) {
      this.destinationLanguages = new ArrayList<>();
    }
    this.destinationLanguages.add(destinationLanguagesItem);
    return this;
  }

  /**
   * Get destinationLanguages
   * @return destinationLanguages
   */
  @javax.annotation.Nullable
  public List<Integer> getDestinationLanguages() {
    return destinationLanguages;
  }

  public void setDestinationLanguages(List<Integer> destinationLanguages) {
    this.destinationLanguages = destinationLanguages;
  }


  public FilterVendorRequest dtpSoftware(List<String> dtpSoftware) {
    this.dtpSoftware = dtpSoftware;
    return this;
  }

  public FilterVendorRequest addDtpSoftwareItem(String dtpSoftwareItem) {
    if (this.dtpSoftware == null) {
      this.dtpSoftware = new ArrayList<>();
    }
    this.dtpSoftware.add(dtpSoftwareItem);
    return this;
  }

  /**
   * Get dtpSoftware
   * @return dtpSoftware
   */
  @javax.annotation.Nullable
  public List<String> getDtpSoftware() {
    return dtpSoftware;
  }

  public void setDtpSoftware(List<String> dtpSoftware) {
    this.dtpSoftware = dtpSoftware;
  }


  public FilterVendorRequest emailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
    return this;
  }

  /**
   * Get emailAddress
   * @return emailAddress
   */
  @javax.annotation.Nullable
  public String getEmailAddress() {
    return emailAddress;
  }

  public void setEmailAddress(String emailAddress) {
    this.emailAddress = emailAddress;
  }


  public FilterVendorRequest experience(List<String> experience) {
    this.experience = experience;
    return this;
  }

  public FilterVendorRequest addExperienceItem(String experienceItem) {
    if (this.experience == null) {
      this.experience = new ArrayList<>();
    }
    this.experience.add(experienceItem);
    return this;
  }

  /**
   * Get experience
   * @return experience
   */
  @javax.annotation.Nullable
  public List<String> getExperience() {
    return experience;
  }

  public void setExperience(List<String> experience) {
    this.experience = experience;
  }


  public FilterVendorRequest firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public FilterVendorRequest id(List<Integer> id) {
    this.id = id;
    return this;
  }

  public FilterVendorRequest addIdItem(Integer idItem) {
    if (this.id == null) {
      this.id = new ArrayList<>();
    }
    this.id.add(idItem);
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public List<Integer> getId() {
    return id;
  }

  public void setId(List<Integer> id) {
    this.id = id;
  }


  public FilterVendorRequest isCertifiedTranslator(Boolean isCertifiedTranslator) {
    this.isCertifiedTranslator = isCertifiedTranslator;
    return this;
  }

  /**
   * Get isCertifiedTranslator
   * @return isCertifiedTranslator
   */
  @javax.annotation.Nullable
  public Boolean getIsCertifiedTranslator() {
    return isCertifiedTranslator;
  }

  public void setIsCertifiedTranslator(Boolean isCertifiedTranslator) {
    this.isCertifiedTranslator = isCertifiedTranslator;
  }


  public FilterVendorRequest isSwornTranslator(Boolean isSwornTranslator) {
    this.isSwornTranslator = isSwornTranslator;
    return this;
  }

  /**
   * Get isSwornTranslator
   * @return isSwornTranslator
   */
  @javax.annotation.Nullable
  public Boolean getIsSwornTranslator() {
    return isSwornTranslator;
  }

  public void setIsSwornTranslator(Boolean isSwornTranslator) {
    this.isSwornTranslator = isSwornTranslator;
  }


  public FilterVendorRequest languagePairs(List<List<Integer>> languagePairs) {
    this.languagePairs = languagePairs;
    return this;
  }

  public FilterVendorRequest addLanguagePairsItem(List<Integer> languagePairsItem) {
    if (this.languagePairs == null) {
      this.languagePairs = new ArrayList<>();
    }
    this.languagePairs.add(languagePairsItem);
    return this;
  }

  /**
   * Get languagePairs
   * @return languagePairs
   */
  @javax.annotation.Nullable
  public List<List<Integer>> getLanguagePairs() {
    return languagePairs;
  }

  public void setLanguagePairs(List<List<Integer>> languagePairs) {
    this.languagePairs = languagePairs;
  }


  public FilterVendorRequest lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public FilterVendorRequest lastOnline(String lastOnline) {
    this.lastOnline = lastOnline;
    return this;
  }

  /**
   * Get lastOnline
   * @return lastOnline
   */
  @javax.annotation.Nullable
  public String getLastOnline() {
    return lastOnline;
  }

  public void setLastOnline(String lastOnline) {
    this.lastOnline = lastOnline;
  }


  public FilterVendorRequest lastWorked(String lastWorked) {
    this.lastWorked = lastWorked;
    return this;
  }

  /**
   * Get lastWorked
   * @return lastWorked
   */
  @javax.annotation.Nullable
  public String getLastWorked() {
    return lastWorked;
  }

  public void setLastWorked(String lastWorked) {
    this.lastWorked = lastWorked;
  }


  public FilterVendorRequest memoq(Integer memoq) {
    this.memoq = memoq;
    return this;
  }

  /**
   * Get memoq
   * @return memoq
   */
  @javax.annotation.Nullable
  public Integer getMemoq() {
    return memoq;
  }

  public void setMemoq(Integer memoq) {
    this.memoq = memoq;
  }


  public FilterVendorRequest memsource(Integer memsource) {
    this.memsource = memsource;
    return this;
  }

  /**
   * Get memsource
   * @return memsource
   */
  @javax.annotation.Nullable
  public Integer getMemsource() {
    return memsource;
  }

  public void setMemsource(Integer memsource) {
    this.memsource = memsource;
  }


  public FilterVendorRequest minTqs(BigDecimal minTqs) {
    this.minTqs = minTqs;
    return this;
  }

  /**
   * Get minTqs
   * @return minTqs
   */
  @javax.annotation.Nullable
  public BigDecimal getMinTqs() {
    return minTqs;
  }

  public void setMinTqs(BigDecimal minTqs) {
    this.minTqs = minTqs;
  }


  public FilterVendorRequest omegat(Integer omegat) {
    this.omegat = omegat;
    return this;
  }

  /**
   * Get omegat
   * @return omegat
   */
  @javax.annotation.Nullable
  public Integer getOmegat() {
    return omegat;
  }

  public void setOmegat(Integer omegat) {
    this.omegat = omegat;
  }


  public FilterVendorRequest projectCount(Integer projectCount) {
    this.projectCount = projectCount;
    return this;
  }

  /**
   * Get projectCount
   * @return projectCount
   */
  @javax.annotation.Nullable
  public Integer getProjectCount() {
    return projectCount;
  }

  public void setProjectCount(Integer projectCount) {
    this.projectCount = projectCount;
  }


  public FilterVendorRequest proofreaderExperience(Integer proofreaderExperience) {
    this.proofreaderExperience = proofreaderExperience;
    return this;
  }

  /**
   * Get proofreaderExperience
   * @return proofreaderExperience
   */
  @javax.annotation.Nullable
  public Integer getProofreaderExperience() {
    return proofreaderExperience;
  }

  public void setProofreaderExperience(Integer proofreaderExperience) {
    this.proofreaderExperience = proofreaderExperience;
  }


  public FilterVendorRequest providesCreativeWritingService(Boolean providesCreativeWritingService) {
    this.providesCreativeWritingService = providesCreativeWritingService;
    return this;
  }

  /**
   * Get providesCreativeWritingService
   * @return providesCreativeWritingService
   */
  @javax.annotation.Nullable
  public Boolean getProvidesCreativeWritingService() {
    return providesCreativeWritingService;
  }

  public void setProvidesCreativeWritingService(Boolean providesCreativeWritingService) {
    this.providesCreativeWritingService = providesCreativeWritingService;
  }


  public FilterVendorRequest providesPosteditService(Boolean providesPosteditService) {
    this.providesPosteditService = providesPosteditService;
    return this;
  }

  /**
   * Get providesPosteditService
   * @return providesPosteditService
   */
  @javax.annotation.Nullable
  public Boolean getProvidesPosteditService() {
    return providesPosteditService;
  }

  public void setProvidesPosteditService(Boolean providesPosteditService) {
    this.providesPosteditService = providesPosteditService;
  }


  public FilterVendorRequest quoteFileSubjects(List<String> quoteFileSubjects) {
    this.quoteFileSubjects = quoteFileSubjects;
    return this;
  }

  public FilterVendorRequest addQuoteFileSubjectsItem(String quoteFileSubjectsItem) {
    if (this.quoteFileSubjects == null) {
      this.quoteFileSubjects = new ArrayList<>();
    }
    this.quoteFileSubjects.add(quoteFileSubjectsItem);
    return this;
  }

  /**
   * Get quoteFileSubjects
   * @return quoteFileSubjects
   */
  @javax.annotation.Nullable
  public List<String> getQuoteFileSubjects() {
    return quoteFileSubjects;
  }

  public void setQuoteFileSubjects(List<String> quoteFileSubjects) {
    this.quoteFileSubjects = quoteFileSubjects;
  }


  public FilterVendorRequest reference(String reference) {
    this.reference = reference;
    return this;
  }

  /**
   * Get reference
   * @return reference
   */
  @javax.annotation.Nullable
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }


  public FilterVendorRequest sdlTrados(Integer sdlTrados) {
    this.sdlTrados = sdlTrados;
    return this;
  }

  /**
   * Get sdlTrados
   * @return sdlTrados
   */
  @javax.annotation.Nullable
  public Integer getSdlTrados() {
    return sdlTrados;
  }

  public void setSdlTrados(Integer sdlTrados) {
    this.sdlTrados = sdlTrados;
  }


  public FilterVendorRequest search(String search) {
    this.search = search;
    return this;
  }

  /**
   * Get search
   * @return search
   */
  @javax.annotation.Nullable
  public String getSearch() {
    return search;
  }

  public void setSearch(String search) {
    this.search = search;
  }


  public FilterVendorRequest skypeId(String skypeId) {
    this.skypeId = skypeId;
    return this;
  }

  /**
   * Get skypeId
   * @return skypeId
   */
  @javax.annotation.Nullable
  public String getSkypeId() {
    return skypeId;
  }

  public void setSkypeId(String skypeId) {
    this.skypeId = skypeId;
  }


  public FilterVendorRequest smartcat(Integer smartcat) {
    this.smartcat = smartcat;
    return this;
  }

  /**
   * Get smartcat
   * @return smartcat
   */
  @javax.annotation.Nullable
  public Integer getSmartcat() {
    return smartcat;
  }

  public void setSmartcat(Integer smartcat) {
    this.smartcat = smartcat;
  }


  public FilterVendorRequest smartling(Integer smartling) {
    this.smartling = smartling;
    return this;
  }

  /**
   * Get smartling
   * @return smartling
   */
  @javax.annotation.Nullable
  public Integer getSmartling() {
    return smartling;
  }

  public void setSmartling(Integer smartling) {
    this.smartling = smartling;
  }


  public FilterVendorRequest sourceLanguages(List<Integer> sourceLanguages) {
    this.sourceLanguages = sourceLanguages;
    return this;
  }

  public FilterVendorRequest addSourceLanguagesItem(Integer sourceLanguagesItem) {
    if (this.sourceLanguages == null) {
      this.sourceLanguages = new ArrayList<>();
    }
    this.sourceLanguages.add(sourceLanguagesItem);
    return this;
  }

  /**
   * Get sourceLanguages
   * @return sourceLanguages
   */
  @javax.annotation.Nullable
  public List<Integer> getSourceLanguages() {
    return sourceLanguages;
  }

  public void setSourceLanguages(List<Integer> sourceLanguages) {
    this.sourceLanguages = sourceLanguages;
  }


  public FilterVendorRequest specialization(List<String> specialization) {
    this.specialization = specialization;
    return this;
  }

  public FilterVendorRequest addSpecializationItem(String specializationItem) {
    if (this.specialization == null) {
      this.specialization = new ArrayList<>();
    }
    this.specialization.add(specializationItem);
    return this;
  }

  /**
   * Get specialization
   * @return specialization
   */
  @javax.annotation.Nullable
  public List<String> getSpecialization() {
    return specialization;
  }

  public void setSpecialization(List<String> specialization) {
    this.specialization = specialization;
  }


  public FilterVendorRequest status(List<String> status) {
    this.status = status;
    return this;
  }

  public FilterVendorRequest addStatusItem(String statusItem) {
    if (this.status == null) {
      this.status = new ArrayList<>();
    }
    this.status.add(statusItem);
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public List<String> getStatus() {
    return status;
  }

  public void setStatus(List<String> status) {
    this.status = status;
  }


  public FilterVendorRequest subtitleEdit(Integer subtitleEdit) {
    this.subtitleEdit = subtitleEdit;
    return this;
  }

  /**
   * Get subtitleEdit
   * @return subtitleEdit
   */
  @javax.annotation.Nullable
  public Integer getSubtitleEdit() {
    return subtitleEdit;
  }

  public void setSubtitleEdit(Integer subtitleEdit) {
    this.subtitleEdit = subtitleEdit;
  }


  public FilterVendorRequest subtitleWorkshop(Integer subtitleWorkshop) {
    this.subtitleWorkshop = subtitleWorkshop;
    return this;
  }

  /**
   * Get subtitleWorkshop
   * @return subtitleWorkshop
   */
  @javax.annotation.Nullable
  public Integer getSubtitleWorkshop() {
    return subtitleWorkshop;
  }

  public void setSubtitleWorkshop(Integer subtitleWorkshop) {
    this.subtitleWorkshop = subtitleWorkshop;
  }


  public FilterVendorRequest translatorAssociation(String translatorAssociation) {
    this.translatorAssociation = translatorAssociation;
    return this;
  }

  /**
   * Get translatorAssociation
   * @return translatorAssociation
   */
  @javax.annotation.Nullable
  public String getTranslatorAssociation() {
    return translatorAssociation;
  }

  public void setTranslatorAssociation(String translatorAssociation) {
    this.translatorAssociation = translatorAssociation;
  }


  public FilterVendorRequest transsuite2000(Integer transsuite2000) {
    this.transsuite2000 = transsuite2000;
    return this;
  }

  /**
   * Get transsuite2000
   * @return transsuite2000
   */
  @javax.annotation.Nullable
  public Integer getTranssuite2000() {
    return transsuite2000;
  }

  public void setTranssuite2000(Integer transsuite2000) {
    this.transsuite2000 = transsuite2000;
  }


  public FilterVendorRequest userWorkingTimezone(List<String> userWorkingTimezone) {
    this.userWorkingTimezone = userWorkingTimezone;
    return this;
  }

  public FilterVendorRequest addUserWorkingTimezoneItem(String userWorkingTimezoneItem) {
    if (this.userWorkingTimezone == null) {
      this.userWorkingTimezone = new ArrayList<>();
    }
    this.userWorkingTimezone.add(userWorkingTimezoneItem);
    return this;
  }

  /**
   * Get userWorkingTimezone
   * @return userWorkingTimezone
   */
  @javax.annotation.Nullable
  public List<String> getUserWorkingTimezone() {
    return userWorkingTimezone;
  }

  public void setUserWorkingTimezone(List<String> userWorkingTimezone) {
    this.userWorkingTimezone = userWorkingTimezone;
  }


  public FilterVendorRequest vendorProfileLsp(String vendorProfileLsp) {
    this.vendorProfileLsp = vendorProfileLsp;
    return this;
  }

  /**
   * Get vendorProfileLsp
   * @return vendorProfileLsp
   */
  @javax.annotation.Nullable
  public String getVendorProfileLsp() {
    return vendorProfileLsp;
  }

  public void setVendorProfileLsp(String vendorProfileLsp) {
    this.vendorProfileLsp = vendorProfileLsp;
  }


  public FilterVendorRequest vendorTags(List<String> vendorTags) {
    this.vendorTags = vendorTags;
    return this;
  }

  public FilterVendorRequest addVendorTagsItem(String vendorTagsItem) {
    if (this.vendorTags == null) {
      this.vendorTags = new ArrayList<>();
    }
    this.vendorTags.add(vendorTagsItem);
    return this;
  }

  /**
   * Get vendorTags
   * @return vendorTags
   */
  @javax.annotation.Nullable
  public List<String> getVendorTags() {
    return vendorTags;
  }

  public void setVendorTags(List<String> vendorTags) {
    this.vendorTags = vendorTags;
  }


  public FilterVendorRequest vendorType(List<String> vendorType) {
    this.vendorType = vendorType;
    return this;
  }

  public FilterVendorRequest addVendorTypeItem(String vendorTypeItem) {
    if (this.vendorType == null) {
      this.vendorType = new ArrayList<>();
    }
    this.vendorType.add(vendorTypeItem);
    return this;
  }

  /**
   * Get vendorType
   * @return vendorType
   */
  @javax.annotation.Nullable
  public List<String> getVendorType() {
    return vendorType;
  }

  public void setVendorType(List<String> vendorType) {
    this.vendorType = vendorType;
  }


  public FilterVendorRequest vendorWorkingTimezone(List<String> vendorWorkingTimezone) {
    this.vendorWorkingTimezone = vendorWorkingTimezone;
    return this;
  }

  public FilterVendorRequest addVendorWorkingTimezoneItem(String vendorWorkingTimezoneItem) {
    if (this.vendorWorkingTimezone == null) {
      this.vendorWorkingTimezone = new ArrayList<>();
    }
    this.vendorWorkingTimezone.add(vendorWorkingTimezoneItem);
    return this;
  }

  /**
   * Get vendorWorkingTimezone
   * @return vendorWorkingTimezone
   */
  @javax.annotation.Nullable
  public List<String> getVendorWorkingTimezone() {
    return vendorWorkingTimezone;
  }

  public void setVendorWorkingTimezone(List<String> vendorWorkingTimezone) {
    this.vendorWorkingTimezone = vendorWorkingTimezone;
  }


  public FilterVendorRequest wordCount(Integer wordCount) {
    this.wordCount = wordCount;
    return this;
  }

  /**
   * Get wordCount
   * @return wordCount
   */
  @javax.annotation.Nullable
  public Integer getWordCount() {
    return wordCount;
  }

  public void setWordCount(Integer wordCount) {
    this.wordCount = wordCount;
  }


  public FilterVendorRequest wordbee(Integer wordbee) {
    this.wordbee = wordbee;
    return this;
  }

  /**
   * Get wordbee
   * @return wordbee
   */
  @javax.annotation.Nullable
  public Integer getWordbee() {
    return wordbee;
  }

  public void setWordbee(Integer wordbee) {
    this.wordbee = wordbee;
  }


  public FilterVendorRequest wordfast(Integer wordfast) {
    this.wordfast = wordfast;
    return this;
  }

  /**
   * Get wordfast
   * @return wordfast
   */
  @javax.annotation.Nullable
  public Integer getWordfast() {
    return wordfast;
  }

  public void setWordfast(Integer wordfast) {
    this.wordfast = wordfast;
  }


  public FilterVendorRequest workType(String workType) {
    this.workType = workType;
    return this;
  }

  /**
   * Get workType
   * @return workType
   */
  @javax.annotation.Nullable
  public String getWorkType() {
    return workType;
  }

  public void setWorkType(String workType) {
    this.workType = workType;
  }


  public FilterVendorRequest workWith(String workWith) {
    this.workWith = workWith;
    return this;
  }

  /**
   * Get workWith
   * @return workWith
   */
  @javax.annotation.Nullable
  public String getWorkWith() {
    return workWith;
  }

  public void setWorkWith(String workWith) {
    this.workWith = workWith;
  }


  public FilterVendorRequest workingAs(List<String> workingAs) {
    this.workingAs = workingAs;
    return this;
  }

  public FilterVendorRequest addWorkingAsItem(String workingAsItem) {
    if (this.workingAs == null) {
      this.workingAs = new ArrayList<>();
    }
    this.workingAs.add(workingAsItem);
    return this;
  }

  /**
   * Get workingAs
   * @return workingAs
   */
  @javax.annotation.Nullable
  public List<String> getWorkingAs() {
    return workingAs;
  }

  public void setWorkingAs(List<String> workingAs) {
    this.workingAs = workingAs;
  }


  public FilterVendorRequest xbench(Integer xbench) {
    this.xbench = xbench;
    return this;
  }

  /**
   * Get xbench
   * @return xbench
   */
  @javax.annotation.Nullable
  public Integer getXbench() {
    return xbench;
  }

  public void setXbench(Integer xbench) {
    this.xbench = xbench;
  }


  public FilterVendorRequest xtm(Integer xtm) {
    this.xtm = xtm;
    return this;
  }

  /**
   * Get xtm
   * @return xtm
   */
  @javax.annotation.Nullable
  public Integer getXtm() {
    return xtm;
  }

  public void setXtm(Integer xtm) {
    this.xtm = xtm;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilterVendorRequest filterVendorRequest = (FilterVendorRequest) o;
    return Objects.equals(this.clients, filterVendorRequest.clients) &&
        Objects.equals(this.communicationChannel, filterVendorRequest.communicationChannel) &&
        Objects.equals(this.corporateIdsForAuth, filterVendorRequest.corporateIdsForAuth) &&
        Objects.equals(this.corporates, filterVendorRequest.corporates) &&
        Objects.equals(this.country, filterVendorRequest.country) &&
        Objects.equals(this.createdAt, filterVendorRequest.createdAt) &&
        Objects.equals(this.currentServices, filterVendorRequest.currentServices) &&
        Objects.equals(this.dailyProofreadingCapacity, filterVendorRequest.dailyProofreadingCapacity) &&
        Objects.equals(this.dailyTranslationCapacity, filterVendorRequest.dailyTranslationCapacity) &&
        Objects.equals(this.destinationLanguages, filterVendorRequest.destinationLanguages) &&
        Objects.equals(this.dtpSoftware, filterVendorRequest.dtpSoftware) &&
        Objects.equals(this.emailAddress, filterVendorRequest.emailAddress) &&
        Objects.equals(this.experience, filterVendorRequest.experience) &&
        Objects.equals(this.firstName, filterVendorRequest.firstName) &&
        Objects.equals(this.id, filterVendorRequest.id) &&
        Objects.equals(this.isCertifiedTranslator, filterVendorRequest.isCertifiedTranslator) &&
        Objects.equals(this.isSwornTranslator, filterVendorRequest.isSwornTranslator) &&
        Objects.equals(this.languagePairs, filterVendorRequest.languagePairs) &&
        Objects.equals(this.lastName, filterVendorRequest.lastName) &&
        Objects.equals(this.lastOnline, filterVendorRequest.lastOnline) &&
        Objects.equals(this.lastWorked, filterVendorRequest.lastWorked) &&
        Objects.equals(this.memoq, filterVendorRequest.memoq) &&
        Objects.equals(this.memsource, filterVendorRequest.memsource) &&
        Objects.equals(this.minTqs, filterVendorRequest.minTqs) &&
        Objects.equals(this.omegat, filterVendorRequest.omegat) &&
        Objects.equals(this.projectCount, filterVendorRequest.projectCount) &&
        Objects.equals(this.proofreaderExperience, filterVendorRequest.proofreaderExperience) &&
        Objects.equals(this.providesCreativeWritingService, filterVendorRequest.providesCreativeWritingService) &&
        Objects.equals(this.providesPosteditService, filterVendorRequest.providesPosteditService) &&
        Objects.equals(this.quoteFileSubjects, filterVendorRequest.quoteFileSubjects) &&
        Objects.equals(this.reference, filterVendorRequest.reference) &&
        Objects.equals(this.sdlTrados, filterVendorRequest.sdlTrados) &&
        Objects.equals(this.search, filterVendorRequest.search) &&
        Objects.equals(this.skypeId, filterVendorRequest.skypeId) &&
        Objects.equals(this.smartcat, filterVendorRequest.smartcat) &&
        Objects.equals(this.smartling, filterVendorRequest.smartling) &&
        Objects.equals(this.sourceLanguages, filterVendorRequest.sourceLanguages) &&
        Objects.equals(this.specialization, filterVendorRequest.specialization) &&
        Objects.equals(this.status, filterVendorRequest.status) &&
        Objects.equals(this.subtitleEdit, filterVendorRequest.subtitleEdit) &&
        Objects.equals(this.subtitleWorkshop, filterVendorRequest.subtitleWorkshop) &&
        Objects.equals(this.translatorAssociation, filterVendorRequest.translatorAssociation) &&
        Objects.equals(this.transsuite2000, filterVendorRequest.transsuite2000) &&
        Objects.equals(this.userWorkingTimezone, filterVendorRequest.userWorkingTimezone) &&
        Objects.equals(this.vendorProfileLsp, filterVendorRequest.vendorProfileLsp) &&
        Objects.equals(this.vendorTags, filterVendorRequest.vendorTags) &&
        Objects.equals(this.vendorType, filterVendorRequest.vendorType) &&
        Objects.equals(this.vendorWorkingTimezone, filterVendorRequest.vendorWorkingTimezone) &&
        Objects.equals(this.wordCount, filterVendorRequest.wordCount) &&
        Objects.equals(this.wordbee, filterVendorRequest.wordbee) &&
        Objects.equals(this.wordfast, filterVendorRequest.wordfast) &&
        Objects.equals(this.workType, filterVendorRequest.workType) &&
        Objects.equals(this.workWith, filterVendorRequest.workWith) &&
        Objects.equals(this.workingAs, filterVendorRequest.workingAs) &&
        Objects.equals(this.xbench, filterVendorRequest.xbench) &&
        Objects.equals(this.xtm, filterVendorRequest.xtm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clients, communicationChannel, corporateIdsForAuth, corporates, country, createdAt, currentServices, dailyProofreadingCapacity, dailyTranslationCapacity, destinationLanguages, dtpSoftware, emailAddress, experience, firstName, id, isCertifiedTranslator, isSwornTranslator, languagePairs, lastName, lastOnline, lastWorked, memoq, memsource, minTqs, omegat, projectCount, proofreaderExperience, providesCreativeWritingService, providesPosteditService, quoteFileSubjects, reference, sdlTrados, search, skypeId, smartcat, smartling, sourceLanguages, specialization, status, subtitleEdit, subtitleWorkshop, translatorAssociation, transsuite2000, userWorkingTimezone, vendorProfileLsp, vendorTags, vendorType, vendorWorkingTimezone, wordCount, wordbee, wordfast, workType, workWith, workingAs, xbench, xtm);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilterVendorRequest {\n");
    sb.append("    clients: ").append(toIndentedString(clients)).append("\n");
    sb.append("    communicationChannel: ").append(toIndentedString(communicationChannel)).append("\n");
    sb.append("    corporateIdsForAuth: ").append(toIndentedString(corporateIdsForAuth)).append("\n");
    sb.append("    corporates: ").append(toIndentedString(corporates)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    currentServices: ").append(toIndentedString(currentServices)).append("\n");
    sb.append("    dailyProofreadingCapacity: ").append(toIndentedString(dailyProofreadingCapacity)).append("\n");
    sb.append("    dailyTranslationCapacity: ").append(toIndentedString(dailyTranslationCapacity)).append("\n");
    sb.append("    destinationLanguages: ").append(toIndentedString(destinationLanguages)).append("\n");
    sb.append("    dtpSoftware: ").append(toIndentedString(dtpSoftware)).append("\n");
    sb.append("    emailAddress: ").append(toIndentedString(emailAddress)).append("\n");
    sb.append("    experience: ").append(toIndentedString(experience)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    isCertifiedTranslator: ").append(toIndentedString(isCertifiedTranslator)).append("\n");
    sb.append("    isSwornTranslator: ").append(toIndentedString(isSwornTranslator)).append("\n");
    sb.append("    languagePairs: ").append(toIndentedString(languagePairs)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    lastOnline: ").append(toIndentedString(lastOnline)).append("\n");
    sb.append("    lastWorked: ").append(toIndentedString(lastWorked)).append("\n");
    sb.append("    memoq: ").append(toIndentedString(memoq)).append("\n");
    sb.append("    memsource: ").append(toIndentedString(memsource)).append("\n");
    sb.append("    minTqs: ").append(toIndentedString(minTqs)).append("\n");
    sb.append("    omegat: ").append(toIndentedString(omegat)).append("\n");
    sb.append("    projectCount: ").append(toIndentedString(projectCount)).append("\n");
    sb.append("    proofreaderExperience: ").append(toIndentedString(proofreaderExperience)).append("\n");
    sb.append("    providesCreativeWritingService: ").append(toIndentedString(providesCreativeWritingService)).append("\n");
    sb.append("    providesPosteditService: ").append(toIndentedString(providesPosteditService)).append("\n");
    sb.append("    quoteFileSubjects: ").append(toIndentedString(quoteFileSubjects)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    sdlTrados: ").append(toIndentedString(sdlTrados)).append("\n");
    sb.append("    search: ").append(toIndentedString(search)).append("\n");
    sb.append("    skypeId: ").append(toIndentedString(skypeId)).append("\n");
    sb.append("    smartcat: ").append(toIndentedString(smartcat)).append("\n");
    sb.append("    smartling: ").append(toIndentedString(smartling)).append("\n");
    sb.append("    sourceLanguages: ").append(toIndentedString(sourceLanguages)).append("\n");
    sb.append("    specialization: ").append(toIndentedString(specialization)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subtitleEdit: ").append(toIndentedString(subtitleEdit)).append("\n");
    sb.append("    subtitleWorkshop: ").append(toIndentedString(subtitleWorkshop)).append("\n");
    sb.append("    translatorAssociation: ").append(toIndentedString(translatorAssociation)).append("\n");
    sb.append("    transsuite2000: ").append(toIndentedString(transsuite2000)).append("\n");
    sb.append("    userWorkingTimezone: ").append(toIndentedString(userWorkingTimezone)).append("\n");
    sb.append("    vendorProfileLsp: ").append(toIndentedString(vendorProfileLsp)).append("\n");
    sb.append("    vendorTags: ").append(toIndentedString(vendorTags)).append("\n");
    sb.append("    vendorType: ").append(toIndentedString(vendorType)).append("\n");
    sb.append("    vendorWorkingTimezone: ").append(toIndentedString(vendorWorkingTimezone)).append("\n");
    sb.append("    wordCount: ").append(toIndentedString(wordCount)).append("\n");
    sb.append("    wordbee: ").append(toIndentedString(wordbee)).append("\n");
    sb.append("    wordfast: ").append(toIndentedString(wordfast)).append("\n");
    sb.append("    workType: ").append(toIndentedString(workType)).append("\n");
    sb.append("    workWith: ").append(toIndentedString(workWith)).append("\n");
    sb.append("    workingAs: ").append(toIndentedString(workingAs)).append("\n");
    sb.append("    xbench: ").append(toIndentedString(xbench)).append("\n");
    sb.append("    xtm: ").append(toIndentedString(xtm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clients");
    openapiFields.add("communication_channel");
    openapiFields.add("corporate_ids_for_auth");
    openapiFields.add("corporates");
    openapiFields.add("country");
    openapiFields.add("created_at");
    openapiFields.add("current_services");
    openapiFields.add("daily_proofreading_capacity");
    openapiFields.add("daily_translation_capacity");
    openapiFields.add("destination_languages");
    openapiFields.add("dtp_software");
    openapiFields.add("email_address");
    openapiFields.add("experience");
    openapiFields.add("first_name");
    openapiFields.add("id");
    openapiFields.add("is_certified_translator");
    openapiFields.add("is_sworn_translator");
    openapiFields.add("language_pairs");
    openapiFields.add("last_name");
    openapiFields.add("last_online");
    openapiFields.add("last_worked");
    openapiFields.add("memoq");
    openapiFields.add("memsource");
    openapiFields.add("min_tqs");
    openapiFields.add("omegat");
    openapiFields.add("project_count");
    openapiFields.add("proofreader_experience");
    openapiFields.add("provides_creative_writing_service");
    openapiFields.add("provides_postedit_service");
    openapiFields.add("quote_file_subjects");
    openapiFields.add("reference");
    openapiFields.add("sdl_trados");
    openapiFields.add("search");
    openapiFields.add("skype_id");
    openapiFields.add("smartcat");
    openapiFields.add("smartling");
    openapiFields.add("source_languages");
    openapiFields.add("specialization");
    openapiFields.add("status");
    openapiFields.add("subtitle_edit");
    openapiFields.add("subtitle_workshop");
    openapiFields.add("translator_association");
    openapiFields.add("transsuite_2000");
    openapiFields.add("user_working_timezone");
    openapiFields.add("vendor_profile_lsp");
    openapiFields.add("vendor_tags");
    openapiFields.add("vendor_type");
    openapiFields.add("vendor_working_timezone");
    openapiFields.add("word_count");
    openapiFields.add("wordbee");
    openapiFields.add("wordfast");
    openapiFields.add("work_type");
    openapiFields.add("work_with");
    openapiFields.add("working_as");
    openapiFields.add("xbench");
    openapiFields.add("xtm");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to FilterVendorRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!FilterVendorRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in FilterVendorRequest is not found in the empty JSON string", FilterVendorRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!FilterVendorRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `FilterVendorRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("clients") != null && !jsonObj.get("clients").isJsonNull() && !jsonObj.get("clients").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `clients` to be an array in the JSON string but got `%s`", jsonObj.get("clients").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("communication_channel") != null && !jsonObj.get("communication_channel").isJsonNull() && !jsonObj.get("communication_channel").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `communication_channel` to be an array in the JSON string but got `%s`", jsonObj.get("communication_channel").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("corporate_ids_for_auth") != null && !jsonObj.get("corporate_ids_for_auth").isJsonNull() && !jsonObj.get("corporate_ids_for_auth").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `corporate_ids_for_auth` to be an array in the JSON string but got `%s`", jsonObj.get("corporate_ids_for_auth").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("corporates") != null && !jsonObj.get("corporates").isJsonNull() && !jsonObj.get("corporates").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `corporates` to be an array in the JSON string but got `%s`", jsonObj.get("corporates").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("country") != null && !jsonObj.get("country").isJsonNull() && !jsonObj.get("country").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `country` to be an array in the JSON string but got `%s`", jsonObj.get("country").toString()));
      }
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("current_services") != null && !jsonObj.get("current_services").isJsonNull() && !jsonObj.get("current_services").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `current_services` to be an array in the JSON string but got `%s`", jsonObj.get("current_services").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("destination_languages") != null && !jsonObj.get("destination_languages").isJsonNull() && !jsonObj.get("destination_languages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `destination_languages` to be an array in the JSON string but got `%s`", jsonObj.get("destination_languages").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("dtp_software") != null && !jsonObj.get("dtp_software").isJsonNull() && !jsonObj.get("dtp_software").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `dtp_software` to be an array in the JSON string but got `%s`", jsonObj.get("dtp_software").toString()));
      }
      if ((jsonObj.get("email_address") != null && !jsonObj.get("email_address").isJsonNull()) && !jsonObj.get("email_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_address").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("experience") != null && !jsonObj.get("experience").isJsonNull() && !jsonObj.get("experience").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `experience` to be an array in the JSON string but got `%s`", jsonObj.get("experience").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull() && !jsonObj.get("id").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be an array in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("language_pairs") != null && !jsonObj.get("language_pairs").isJsonNull() && !jsonObj.get("language_pairs").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `language_pairs` to be an array in the JSON string but got `%s`", jsonObj.get("language_pairs").toString()));
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if ((jsonObj.get("last_online") != null && !jsonObj.get("last_online").isJsonNull()) && !jsonObj.get("last_online").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_online` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_online").toString()));
      }
      if ((jsonObj.get("last_worked") != null && !jsonObj.get("last_worked").isJsonNull()) && !jsonObj.get("last_worked").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_worked` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_worked").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("quote_file_subjects") != null && !jsonObj.get("quote_file_subjects").isJsonNull() && !jsonObj.get("quote_file_subjects").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `quote_file_subjects` to be an array in the JSON string but got `%s`", jsonObj.get("quote_file_subjects").toString()));
      }
      if ((jsonObj.get("reference") != null && !jsonObj.get("reference").isJsonNull()) && !jsonObj.get("reference").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reference` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reference").toString()));
      }
      if ((jsonObj.get("search") != null && !jsonObj.get("search").isJsonNull()) && !jsonObj.get("search").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `search` to be a primitive type in the JSON string but got `%s`", jsonObj.get("search").toString()));
      }
      if ((jsonObj.get("skype_id") != null && !jsonObj.get("skype_id").isJsonNull()) && !jsonObj.get("skype_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `skype_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("skype_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("source_languages") != null && !jsonObj.get("source_languages").isJsonNull() && !jsonObj.get("source_languages").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `source_languages` to be an array in the JSON string but got `%s`", jsonObj.get("source_languages").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("specialization") != null && !jsonObj.get("specialization").isJsonNull() && !jsonObj.get("specialization").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `specialization` to be an array in the JSON string but got `%s`", jsonObj.get("specialization").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull() && !jsonObj.get("status").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be an array in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("translator_association") != null && !jsonObj.get("translator_association").isJsonNull()) && !jsonObj.get("translator_association").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `translator_association` to be a primitive type in the JSON string but got `%s`", jsonObj.get("translator_association").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("user_working_timezone") != null && !jsonObj.get("user_working_timezone").isJsonNull() && !jsonObj.get("user_working_timezone").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_working_timezone` to be an array in the JSON string but got `%s`", jsonObj.get("user_working_timezone").toString()));
      }
      if ((jsonObj.get("vendor_profile_lsp") != null && !jsonObj.get("vendor_profile_lsp").isJsonNull()) && !jsonObj.get("vendor_profile_lsp").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_profile_lsp` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vendor_profile_lsp").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("vendor_tags") != null && !jsonObj.get("vendor_tags").isJsonNull() && !jsonObj.get("vendor_tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_tags` to be an array in the JSON string but got `%s`", jsonObj.get("vendor_tags").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("vendor_type") != null && !jsonObj.get("vendor_type").isJsonNull() && !jsonObj.get("vendor_type").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_type` to be an array in the JSON string but got `%s`", jsonObj.get("vendor_type").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("vendor_working_timezone") != null && !jsonObj.get("vendor_working_timezone").isJsonNull() && !jsonObj.get("vendor_working_timezone").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `vendor_working_timezone` to be an array in the JSON string but got `%s`", jsonObj.get("vendor_working_timezone").toString()));
      }
      if ((jsonObj.get("work_type") != null && !jsonObj.get("work_type").isJsonNull()) && !jsonObj.get("work_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_type").toString()));
      }
      if ((jsonObj.get("work_with") != null && !jsonObj.get("work_with").isJsonNull()) && !jsonObj.get("work_with").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `work_with` to be a primitive type in the JSON string but got `%s`", jsonObj.get("work_with").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("working_as") != null && !jsonObj.get("working_as").isJsonNull() && !jsonObj.get("working_as").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `working_as` to be an array in the JSON string but got `%s`", jsonObj.get("working_as").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FilterVendorRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FilterVendorRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FilterVendorRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FilterVendorRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<FilterVendorRequest>() {
           @Override
           public void write(JsonWriter out, FilterVendorRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public FilterVendorRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of FilterVendorRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of FilterVendorRequest
   * @throws IOException if the JSON string is invalid with respect to FilterVendorRequest
   */
  public static FilterVendorRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FilterVendorRequest.class);
  }

  /**
   * Convert an instance of FilterVendorRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

