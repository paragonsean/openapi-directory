/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccountGlossaryUploadRequest;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Glossary;
import org.openapitools.client.model.GlossaryList;
import org.openapitools.client.model.GlossaryUploadRequest;
import org.openapitools.client.model.OperationStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GlossaryApi
 */
@Disabled
public class GlossaryApiTest {

    private final GlossaryApi api = new GlossaryApi();

    /**
     * Upload a glossary file
     *
     * Upload a new glossary file to your project to be used during translation. Glossaries can be CSV or TBX files.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createGlossaryTest() throws ApiException {
        Long projectId = null;
        GlossaryUploadRequest glossaryUploadRequest = null;
        Glossary response = api.createGlossary(projectId, glossaryUploadRequest);
        // TODO: test validations
    }

    /**
     * Delete a glossary
     *
     * Delete the existing glossary from the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteGlossaryTest() throws ApiException {
        Long projectId = null;
        Long glossaryId = null;
        OperationStatus response = api.deleteGlossary(projectId, glossaryId);
        // TODO: test validations
    }

    /**
     * Download account glossary.
     *
     * Download your corporate account&#39;s global glossary. This endpoint is available only for corporate account customers. This glossary will be automatically attached to each new project under your account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadGlobalGlossaryTest() throws ApiException {
        String response = api.downloadGlobalGlossary();
        // TODO: test validations
    }

    /**
     * Download a glossary
     *
     * Download a previously uploaded glossary file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadGlossaryTest() throws ApiException {
        Long projectId = null;
        Long glossaryId = null;
        String response = api.downloadGlossary(projectId, glossaryId);
        // TODO: test validations
    }

    /**
     * View glossaries
     *
     * View a list of glossaries previously uploaded to the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGlossariesTest() throws ApiException {
        Long projectId = null;
        GlossaryList response = api.getGlossaries(projectId);
        // TODO: test validations
    }

    /**
     * View a glossary
     *
     * View the details of a glossary file uploaded to a project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getGlossaryTest() throws ApiException {
        Long projectId = null;
        Long glossaryId = null;
        Glossary response = api.getGlossary(projectId, glossaryId);
        // TODO: test validations
    }

    /**
     * Create or update the account glossary
     *
     * Update your corporate account&#39;s global glossary. This endpoint is available only for corporate account customers. This glossary will be automatically attached to each new project under your account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGlobalGlossaryTest() throws ApiException {
        AccountGlossaryUploadRequest accountGlossaryUploadRequest = null;
        OperationStatus response = api.updateGlobalGlossary(accountGlossaryUploadRequest);
        // TODO: test validations
    }

    /**
     * Update a glossary
     *
     * Update the existing glossary file in the project. Public users are allowed to have only 1 glossary per project and file name and contents will replaced with the new glossary file that you are uploading via this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGlossaryTest() throws ApiException {
        Long projectId = null;
        Long glossaryId = null;
        GlossaryUploadRequest glossaryUploadRequest = null;
        Glossary response = api.updateGlossary(projectId, glossaryId, glossaryUploadRequest);
        // TODO: test validations
    }

}
