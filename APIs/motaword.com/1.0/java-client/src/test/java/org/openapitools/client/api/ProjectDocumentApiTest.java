/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Document;
import org.openapitools.client.model.DocumentList;
import org.openapitools.client.model.DocumentUpdates;
import org.openapitools.client.model.DocumentUploadRequest;
import org.openapitools.client.model.Error;
import java.io.File;
import org.openapitools.client.model.OperationStatus;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectDocumentApi
 */
@Disabled
public class ProjectDocumentApiTest {

    private final ProjectDocumentApi api = new ProjectDocumentApi();

    /**
     * Upload a new document
     *
     * Upload a new document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectDocumentTest() throws ApiException {
        Long projectId = null;
        DocumentUpdates documentUpdates = null;
        DocumentList response = api.createProjectDocument(projectId, documentUpdates);
        // TODO: test validations
    }

    /**
     * Delete the document
     *
     * Delete the document
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectDocumentTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        OperationStatus response = api.deleteProjectDocument(projectId, documentId);
        // TODO: test validations
    }

    /**
     * Download a project source document
     *
     * Download an actual source file you uploaded to be translated in your project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadProjectDocumentTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        String response = api.downloadProjectDocument(projectId, documentId);
        // TODO: test validations
    }

    /**
     * Download translated document
     *
     * Download translated document in the given target language.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadTranslatedDocumentForLanguageTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        String language = null;
        Boolean certified = null;
        File response = api.downloadTranslatedDocumentForLanguage(projectId, documentId, language, certified);
        // TODO: test validations
    }

    /**
     * View a project source document
     *
     * View the details of a source file you uploaded to be translated in your project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectDocumentTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        List<String> with = null;
        Document response = api.getProjectDocument(projectId, documentId, with);
        // TODO: test validations
    }

    /**
     * View project source documents
     *
     * Get a list of source files you uploaded to be translated in your project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectDocumentsTest() throws ApiException {
        Long projectId = null;
        List<String> with = null;
        DocumentList response = api.getProjectDocuments(projectId, with);
        // TODO: test validations
    }

    /**
     * Update the document.
     *
     * Update the document. File name and contents will replaced with the new one.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectDocumentTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        DocumentUploadRequest documentUploadRequest = null;
        Document response = api.updateProjectDocument(projectId, documentId, documentUploadRequest);
        // TODO: test validations
    }

}
