/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CM;
import org.openapitools.client.model.CallbackResult;
import org.openapitools.client.model.CancelProjectRequest;
import org.openapitools.client.model.Error;
import java.io.File;
import org.openapitools.client.model.Invoice;
import org.openapitools.client.model.ListOrderType;
import org.openapitools.client.model.ModelPackage;
import org.openapitools.client.model.NewProject;
import org.openapitools.client.model.OperationStatus;
import org.openapitools.client.model.PackageStatus;
import org.openapitools.client.model.Progress;
import org.openapitools.client.model.Project;
import org.openapitools.client.model.ProjectId;
import org.openapitools.client.model.ProjectLaunchResponse;
import org.openapitools.client.model.ProjectList;
import org.openapitools.client.model.ProjectPayment;
import org.openapitools.client.model.ProjectStatus;
import org.openapitools.client.model.ProjectUpdate;
import org.openapitools.client.model.ReportContent;
import org.openapitools.client.model.UserList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectApi
 */
@Disabled
public class ProjectApiTest {

    private final ProjectApi api = new ProjectApi();

    /**
     * Assign a CM to the project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void assignCMTest() throws ApiException {
        Long id = null;
        CM CM = null;
        OperationStatus response = api.assignCM(id, CM);
        // TODO: test validations
    }

    /**
     * Package your translated project
     *
     * Package the translations in your project, prepare translated documents and make it ready to be downloaded. Once packaged, you can download your translated project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void callPackageTest() throws ApiException {
        Long id = null;
        Long async = null;
        File response = api.callPackage(id, async);
        // TODO: test validations
    }

    /**
     * Cancel your translation project
     *
     * If you haven&#39;t launched your translation project yet, we will delete it. If MotaWord already started working on your project, we will cancel the project and refund the volume that we haven&#39;t worked on yet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void cancelProjectTest() throws ApiException {
        Long id = null;
        CancelProjectRequest cancelProjectRequest = null;
        OperationStatus response = api.cancelProject(id, cancelProjectRequest);
        // TODO: test validations
    }

    /**
     * Create a new project
     *
     * Create a new translation project. Projects are not launched (you are not charged) until you &#x60;/launch&#x60; the created project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createProjectTest() throws ApiException {
        NewProject newProject = null;
        Project response = api.createProject(newProject);
        // TODO: test validations
    }

    /**
     * Delete your translation project
     *
     * If you haven&#39;t launched your translation project yet, we will delete it. If MotaWord already started working on your project, we will cancel the project and refund the volume that we haven&#39;t worked on yet.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectTest() throws ApiException {
        Long id = null;
        OperationStatus response = api.deleteProject(id);
        // TODO: test validations
    }

    /**
     * Deliver project
     *
     * Deliver project to the owner of the project. You can also download your translations in &#x60;/package&#x60; and &#x60;/download&#x60; endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deliverProjectTest() throws ApiException {
        Long id = null;
        OperationStatus response = api.deliverProject(id);
        // TODO: test validations
    }

    /**
     * Download your translated project
     *
     * Download the latest translation package. You must have requested a &#x60;/package&#x60; call beforehand and wait until the packaging status is &#39;completed&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadTest() throws ApiException {
        Long id = null;
        File response = api.download(id);
        // TODO: test validations
    }

    /**
     * Download project invoice (HTML)
     *
     * Download your project invoice as HTML. This is useful when you want to show your users the invoice in a webpage.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadHtmlInvoiceTest() throws ApiException {
        Long id = null;
        String response = api.downloadHtmlInvoice(id);
        // TODO: test validations
    }

    /**
     * Download your translated project language
     *
     * Download the latest translation package for your target language. You must have requested a &#x60;/package&#x60; call beforehand and wait until the packaging status is &#39;completed&#39;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadLanguageTest() throws ApiException {
        Long id = null;
        String language = null;
        File response = api.downloadLanguage(id, language);
        // TODO: test validations
    }

    /**
     * Download project invoice (PDF)
     *
     * Download your project invoice as PDF. Your invoice may be in \&quot;unpaid\&quot; status, in which case youn can see the payment instructions in the PDF file.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void downloadPdfInvoiceTest() throws ApiException {
        Long id = null;
        File response = api.downloadPdfInvoice(id);
        // TODO: test validations
    }

    /**
     * View project invoice
     *
     * View your invoice details for your translation project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInvoiceTest() throws ApiException {
        Long id = null;
        Invoice response = api.getInvoice(id);
        // TODO: test validations
    }

    /**
     * View progress of a project
     *
     * Monitor the translation progress of an already launched project in real-time.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProgressTest() throws ApiException {
        Long id = null;
        Boolean raw = null;
        Progress response = api.getProgress(id, raw);
        // TODO: test validations
    }

    /**
     * View a translation project
     *
     * View the details of a translation project in your account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectTest() throws ApiException {
        Long id = null;
        List<String> with = null;
        Project response = api.getProject(id, with);
        // TODO: test validations
    }

    /**
     * Get a list of vendors.
     *
     * Get a list of vendors.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectVendorsTest() throws ApiException {
        Long projectId = null;
        UserList response = api.getProjectVendors(projectId);
        // TODO: test validations
    }

    /**
     * View your translation projects
     *
     * View the translation projects ordered in your account. If you have the related permission (configured by your account administrator), you can view the projects of your colleagues under the same company account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectsTest() throws ApiException {
        Long page = null;
        Long perPage = null;
        List<ProjectStatus> status = null;
        Boolean withPending = null;
        Boolean withStarted = null;
        Boolean withCompleted = null;
        String orderBy = null;
        ListOrderType orderType = null;
        List<String> with = null;
        ProjectList response = api.getProjects(page, perPage, status, withPending, withStarted, withCompleted, orderBy, orderType, with);
        // TODO: test validations
    }

    /**
     * Get Quote Id
     *
     * Get Quote Id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getQuoteIdFromInternalIdTest() throws ApiException {
        Long projectId = null;
        ProjectId response = api.getQuoteIdFromInternalId(projectId);
        // TODO: test validations
    }

    /**
     * List projects as a vendor
     *
     * Get a list of projects that are available to you to work on as a vendor. This is not a list of projects that you ordered as a customer.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVendorProjectsTest() throws ApiException {
        Boolean joined = null;
        Boolean completed = null;
        Long page = null;
        Long perPage = null;
        ProjectList response = api.getVendorProjects(joined, completed, page, perPage);
        // TODO: test validations
    }

    /**
     * Get a list of user/vendor projects
     *
     * Get a list of user/vendor projects
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVendorProjectsByUserIdTest() throws ApiException {
        Long userId = null;
        Boolean joined = null;
        Boolean completed = null;
        Long page = null;
        Long perPage = null;
        ProjectList response = api.getVendorProjectsByUserId(userId, joined, completed, page, perPage);
        // TODO: test validations
    }

    /**
     * Launch your translation project
     *
     * Launch your translation project so MotaWord can actually start working on your translation.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void launchProjectTest() throws ApiException {
        Long id = null;
        ProjectPayment projectPayment = null;
        ProjectLaunchResponse response = api.launchProject(id, projectPayment);
        // TODO: test validations
    }

    /**
     * Package your translated project language
     *
     * Package the translations in your project for a specific target language, prepare translated documents and make it ready to be downloaded. Once packaged, you can download your translated project in this target language.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void packageLanguageTest() throws ApiException {
        Long id = null;
        String language = null;
        Long async = null;
        ModelPackage response = api.packageLanguage(id, language, async);
        // TODO: test validations
    }

    /**
     * Recreate your translation project from scratch. This is a risky action, you will lose current translations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recreateProjectTest() throws ApiException {
        Long id = null;
        OperationStatus response = api.recreateProject(id);
        // TODO: test validations
    }

    /**
     * Send a quote email
     *
     * Send a quote email
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void sendQuoteEmailTest() throws ApiException {
        Long id = null;
        OperationStatus response = api.sendQuoteEmail(id);
        // TODO: test validations
    }

    /**
     * Submit feedback report for a project
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void submitProjectReportsTest() throws ApiException {
        Long id = null;
        ReportContent reportContent = null;
        OperationStatus response = api.submitProjectReports(id, reportContent);
        // TODO: test validations
    }

    /**
     * Track translation packaging status
     *
     * Track the packaging status of your translations, by using the &#x60;key&#x60; from packaging request. Once packaging is completed, you can download your translations via &#x60;/download&#x60; endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void trackPackageTest() throws ApiException {
        Long id = null;
        String key = null;
        PackageStatus response = api.trackPackage(id, key);
        // TODO: test validations
    }

    /**
     * Trigger a call to your callback URL related to this project.
     *
     * Trigger a call to your callback URL related to this project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void triggerCallbackTest() throws ApiException {
        Long id = null;
        String actionType = null;
        CallbackResult response = api.triggerCallback(id, actionType);
        // TODO: test validations
    }

    /**
     * Update project info and settings
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectTest() throws ApiException {
        Long id = null;
        ProjectUpdate projectUpdate = null;
        Project response = api.updateProject(id, projectUpdate);
        // TODO: test validations
    }

}
