/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.OperationStatus;
import org.openapitools.client.model.Project;
import org.openapitools.client.model.Webhook;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProjectWebhooksApi
 */
@Disabled
public class ProjectWebhooksApiTest {

    private final ProjectWebhooksApi api = new ProjectWebhooksApi();

    /**
     * Delete project webhooks
     *
     * Delete project webhooks. Projects currently support registering only 1 webhook. This endpoint deletes the previously registered webhook.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteProjectWebhookTest() throws ApiException {
        Long id = null;
        OperationStatus response = api.deleteProjectWebhook(id);
        // TODO: test validations
    }

    /**
     * View project webhooks
     *
     * This endpoint returns Project entity which contains &#x60;callback_url&#x60; field for webhook URL. Currently projects can have only 1 webhook registered.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectWebhooksTest() throws ApiException {
        Long id = null;
        Project response = api.getProjectWebhooks(id);
        // TODO: test validations
    }

    /**
     * Update project webhook
     *
     * Update project webhook URL
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postProjectWebhookTest() throws ApiException {
        Long id = null;
        Webhook webhook = null;
        Project response = api.postProjectWebhook(id, webhook);
        // TODO: test validations
    }

    /**
     * Update project webhook
     *
     * Update project webhook URL
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProjectWebhookTest() throws ApiException {
        Long id = null;
        Webhook webhook = null;
        Project response = api.updateProjectWebhook(id, webhook);
        // TODO: test validations
    }

}
