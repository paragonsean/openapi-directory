/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CorporateAccount;
import org.openapitools.client.model.PermissionList;
import org.openapitools.client.model.User;
import org.openapitools.client.model.UserGroup;
import org.openapitools.client.model.UserGroupList;
import org.openapitools.client.model.UserList;
import org.openapitools.client.model.UserUpdateContent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for CorporateApi
 */
@Disabled
public class CorporateApiTest {

    private final CorporateApi api = new CorporateApi();

    /**
     * View available permissions
     *
     * View a list of available permissions for your corporate account. They are used when assigning permissions to your corporate users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAvailableCorporatePermissionsTest() throws ApiException {
        PermissionList response = api.getAvailableCorporatePermissions();
        // TODO: test validations
    }

    /**
     * Get a list of available permissions for this corporate account. They are used when assigning permissions to corporate users.
     *
     * Get a list of available permissions for this corporate account. They are used when assigning permissions to corporate users.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAvailableCorporatePermissionsByIdTest() throws ApiException {
        Long corporateId = null;
        PermissionList response = api.getAvailableCorporatePermissionsById(corporateId);
        // TODO: test validations
    }

    /**
     * View your corporate account
     *
     * View the details of the corporate account that your user account belongs to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporateTest() throws ApiException {
        CorporateAccount response = api.getCorporate();
        // TODO: test validations
    }

    /**
     * Get details of this corporate account
     *
     * Get details of this corporate account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporateByIdTest() throws ApiException {
        Long corporateId = null;
        CorporateAccount response = api.getCorporateById(corporateId);
        // TODO: test validations
    }

    /**
     * View user groups
     *
     * View a list of user groups under my corporate account. User groups are a part of our RBAC implementation and can be used to configure complex permission scenarios.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporateUserGroupsTest() throws ApiException {
        UserGroupList response = api.getCorporateUserGroups();
        // TODO: test validations
    }

    /**
     * Get a list of user groups for this corporate account
     *
     * Get a list of user groups for this corporate account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporateUserGroupsByIdTest() throws ApiException {
        Long corporateId = null;
        UserGroupList response = api.getCorporateUserGroupsById(corporateId);
        // TODO: test validations
    }

    /**
     * View users
     *
     * View a list of users under your corporate account. This endpoint will only return information if your user account is permitted to view corporate account users, configured by your administrator.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporateUsersTest() throws ApiException {
        UserList response = api.getCorporateUsers();
        // TODO: test validations
    }

    /**
     * Get a list of users for this corporate account
     *
     * Get a list of users for this corporate account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporateUsersByIdTest() throws ApiException {
        Long corporateId = null;
        UserList response = api.getCorporateUsersById(corporateId);
        // TODO: test validations
    }

    /**
     * Get a list of corporate accounts
     *
     * Get a list of corporate accounts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCorporatesListTest() throws ApiException {
        List<CorporateAccount> response = api.getCorporatesList();
        // TODO: test validations
    }

    /**
     * Create or update a user
     *
     * Create or update a user under your corporate account. This endpoint requires permissions for corporate user management, configured by your administrator.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveCorporateUserTest() throws ApiException {
        UserUpdateContent userUpdateContent = null;
        User response = api.saveCorporateUser(userUpdateContent);
        // TODO: test validations
    }

    /**
     * Create or update a corporate user group
     *
     * Create or update a corporate user group
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveCorporateUserGroupTest() throws ApiException {
        UserGroup userGroup = null;
        UserGroup response = api.saveCorporateUserGroup(userGroup);
        // TODO: test validations
    }

    /**
     * Create or update a corporate user group for this corporate account
     *
     * Create or update a corporate user group for this corporate account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveCorporateUserGroupByIdTest() throws ApiException {
        Long corporateId = null;
        UserGroup userGroup = null;
        UserGroup response = api.saveCorporateUserGroupById(corporateId, userGroup);
        // TODO: test validations
    }

}
