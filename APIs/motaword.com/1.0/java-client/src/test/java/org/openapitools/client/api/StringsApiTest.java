/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AsyncOperationStatus;
import org.openapitools.client.model.ClientStrings;
import org.openapitools.client.model.ContinuousProjectCache;
import org.openapitools.client.model.ContinuousProjectDocumentStringsBody;
import org.openapitools.client.model.Error;
import java.io.File;
import org.openapitools.client.model.OperationStatus;
import org.openapitools.client.model.StringList;
import org.openapitools.client.model.TranslationMemoryUnit;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for StringsApi
 */
@Disabled
public class StringsApiTest {

    private final StringsApi api = new StringsApi();

    /**
     * Clear translation cache
     *
     * Clear/delete continuous project translation cache.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clearTranslationCacheTest() throws ApiException {
        Long projectId = null;
        String locale = null;
        Long fileId = null;
        OperationStatus response = api.clearTranslationCache(projectId, locale, fileId);
        // TODO: test validations
    }

    /**
     * View strings their translations in a continuous document
     *
     * View the strings from a document and their translations in your continuous translation project, for all target languages. If you need the translated version of your source document/file, then you need to use package and download endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContinuousProjectFileStringsTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        StringList response = api.getContinuousProjectFileStrings(projectId, documentId);
        // TODO: test validations
    }

    /**
     * View strings and translations in continuous project
     *
     * View the strings and their translations in your continuous translation project, for all target languages. If you need the translated version of your source document/file, then you need to use package and download endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContinuousProjectStringsTest() throws ApiException {
        Long projectId = null;
        StringList response = api.getContinuousProjectStrings(projectId);
        // TODO: test validations
    }

    /**
     * View strings and translations of a document
     *
     * View the strings and their translations in your translation project for the specified source document. The list of translations is live if your project is not completed yet. If you need the translated version of your source document/file, then you need to use package and download endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentTranslationsTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        StringList response = api.getDocumentTranslations(projectId, documentId);
        // TODO: test validations
    }

    /**
     * View strings and translations of a document for target language
     *
     * View the strings and their translations in the given target language for the specified source document. The list of translations is live if your project is not completed yet. If you need the translated version of your source document/file, then you need to use package and download endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDocumentTranslationsForLanguageTest() throws ApiException {
        Long projectId = null;
        Long documentId = null;
        String language = null;
        StringList response = api.getDocumentTranslationsForLanguage(projectId, documentId, language);
        // TODO: test validations
    }

    /**
     * View project strings and translations
     *
     * View the strings and their translations in your translation project, for all target languages. The list of translations is live if your project is not completed yet. If you need the translated version of your source document/file, then you need to use package and download endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectStringsTest() throws ApiException {
        Long projectId = null;
        StringList response = api.getProjectStrings(projectId);
        // TODO: test validations
    }

    /**
     * View strings and translations for target language
     *
     * View the strings and their translations in your translation project for the specified target language. The list of translations is live if your project is not completed yet. If you need the translated version of your source document/file, then you need to use package and download endpoints.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectStringsForLanguageTest() throws ApiException {
        Long projectId = null;
        String language = null;
        StringList response = api.getProjectStringsForLanguage(projectId, language);
        // TODO: test validations
    }

    /**
     * Deprecated. Use /projects/{projectId}/strings instead.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectTranslationsTest() throws ApiException {
        Long projectId = null;
        StringList response = api.getProjectTranslations(projectId);
        // TODO: test validations
    }

    /**
     * Deprecated. use /projects/{projectId}/strings/{language} instead.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getProjectTranslationsForLanguageTest() throws ApiException {
        Long projectId = null;
        String language = null;
        StringList response = api.getProjectTranslationsForLanguage(projectId, language);
        // TODO: test validations
    }

    /**
     * View account strings (translation memory)
     *
     * Get a list of all strings and their translations under your account, from all projects. This is your MotaWord translation memory. If you have the related permission, this endpoint will also return strings from your company account.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStringsTest() throws ApiException {
        String sourceLanguage = null;
        Long page = null;
        ClientStrings response = api.getStrings(sourceLanguage, page);
        // TODO: test validations
    }

    /**
     * View cached strings translations in continuous project
     *
     * MotaWord caches your account intensively (and in a smart way) in real-time translation environments. This endpoint will return the currently cached strings and translations in your continuous translation project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTranslationCacheTest() throws ApiException {
        Long projectId = null;
        Boolean flatten = null;
        ContinuousProjectCache response = api.getTranslationCache(projectId, flatten);
        // TODO: test validations
    }

    /**
     * Download project translation memory
     *
     * Package and download project translation memory in TMX format
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void packageProjectTranslationMemoryTest() throws ApiException {
        Long projectId = null;
        Long async = null;
        String format = null;
        AsyncOperationStatus response = api.packageProjectTranslationMemory(projectId, async, format);
        // TODO: test validations
    }

    /**
     * Download language-specific project translation memory
     *
     * Package and download project translation memory in TMX format for a specific target language.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void packageProjectTranslationMemoryForLanguageTest() throws ApiException {
        Long projectId = null;
        String languageCode = null;
        Long async = null;
        String format = null;
        AsyncOperationStatus response = api.packageProjectTranslationMemoryForLanguage(projectId, languageCode, async, format);
        // TODO: test validations
    }

    /**
     * Check language-specific translation memory packaging status
     *
     * Check translation memory packaging status for async packaging requests, using the key returned from strings/package call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void packageProjectTranslationMemoryForLanguageStatusTest() throws ApiException {
        Long projectId = null;
        String languageCode = null;
        String asyncRequestKey = null;
        AsyncOperationStatus response = api.packageProjectTranslationMemoryForLanguageStatus(projectId, languageCode, asyncRequestKey);
        // TODO: test validations
    }

    /**
     * Check translation memory packaging status
     *
     * Check translation memory packaging status for async packaging requests, using the key returned from strings/package call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void packageProjectTranslationMemoryStatusTest() throws ApiException {
        Long projectId = null;
        String asyncRequestKey = null;
        AsyncOperationStatus response = api.packageProjectTranslationMemoryStatus(projectId, asyncRequestKey);
        // TODO: test validations
    }

    /**
     * Download account translation memory
     *
     * Package and download account translation memory in TMX format. If you have the related permission, this will also download your company translation memory.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void packageUserTranslationMemoryTest() throws ApiException {
        String languageCode = null;
        Long async = null;
        Long email = null;
        AsyncOperationStatus response = api.packageUserTranslationMemory(languageCode, async, email);
        // TODO: test validations
    }

    /**
     * Check account translation memory packaging status
     *
     * Check translation memory packaging status for async packaging requests, using the key returned from strings/package call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void packageUserTranslationMemoryForLanguageStatusTest() throws ApiException {
        String languageCode = null;
        String asyncRequestKey = null;
        AsyncOperationStatus response = api.packageUserTranslationMemoryForLanguageStatus(languageCode, asyncRequestKey);
        // TODO: test validations
    }

    /**
     * Get a list of strings and its translations in the project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postContinuousProjectFileStringsTest() throws ApiException {
        Long projectId = null;
        ContinuousProjectDocumentStringsBody continuousProjectDocumentStringsBody = null;
        StringList response = api.postContinuousProjectFileStrings(projectId, continuousProjectDocumentStringsBody);
        // TODO: test validations
    }

    /**
     * Recache translations
     *
     * Recache translations for the continuous project.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void recacheTranslationsTest() throws ApiException {
        Long projectId = null;
        String locale = null;
        Long fileId = null;
        OperationStatus response = api.recacheTranslations(projectId, locale, fileId);
        // TODO: test validations
    }

    /**
     * Update string translation
     *
     * Update the translation of a string from your account strings/translation memory.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTranslationMemoryUnitTest() throws ApiException {
        TranslationMemoryUnit translationMemoryUnit = null;
        OperationStatus response = api.updateTranslationMemoryUnit(translationMemoryUnit);
        // TODO: test validations
    }

}
