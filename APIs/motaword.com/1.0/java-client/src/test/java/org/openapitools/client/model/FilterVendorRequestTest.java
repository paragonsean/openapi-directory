/*
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for FilterVendorRequest
 */
public class FilterVendorRequestTest {
    private final FilterVendorRequest model = new FilterVendorRequest();

    /**
     * Model tests for FilterVendorRequest
     */
    @Test
    public void testFilterVendorRequest() {
        // TODO: test FilterVendorRequest
    }

    /**
     * Test the property 'clients'
     */
    @Test
    public void clientsTest() {
        // TODO: test clients
    }

    /**
     * Test the property 'communicationChannel'
     */
    @Test
    public void communicationChannelTest() {
        // TODO: test communicationChannel
    }

    /**
     * Test the property 'corporateIdsForAuth'
     */
    @Test
    public void corporateIdsForAuthTest() {
        // TODO: test corporateIdsForAuth
    }

    /**
     * Test the property 'corporates'
     */
    @Test
    public void corporatesTest() {
        // TODO: test corporates
    }

    /**
     * Test the property 'country'
     */
    @Test
    public void countryTest() {
        // TODO: test country
    }

    /**
     * Test the property 'createdAt'
     */
    @Test
    public void createdAtTest() {
        // TODO: test createdAt
    }

    /**
     * Test the property 'currentServices'
     */
    @Test
    public void currentServicesTest() {
        // TODO: test currentServices
    }

    /**
     * Test the property 'dailyProofreadingCapacity'
     */
    @Test
    public void dailyProofreadingCapacityTest() {
        // TODO: test dailyProofreadingCapacity
    }

    /**
     * Test the property 'dailyTranslationCapacity'
     */
    @Test
    public void dailyTranslationCapacityTest() {
        // TODO: test dailyTranslationCapacity
    }

    /**
     * Test the property 'destinationLanguages'
     */
    @Test
    public void destinationLanguagesTest() {
        // TODO: test destinationLanguages
    }

    /**
     * Test the property 'dtpSoftware'
     */
    @Test
    public void dtpSoftwareTest() {
        // TODO: test dtpSoftware
    }

    /**
     * Test the property 'emailAddress'
     */
    @Test
    public void emailAddressTest() {
        // TODO: test emailAddress
    }

    /**
     * Test the property 'experience'
     */
    @Test
    public void experienceTest() {
        // TODO: test experience
    }

    /**
     * Test the property 'firstName'
     */
    @Test
    public void firstNameTest() {
        // TODO: test firstName
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isCertifiedTranslator'
     */
    @Test
    public void isCertifiedTranslatorTest() {
        // TODO: test isCertifiedTranslator
    }

    /**
     * Test the property 'isSwornTranslator'
     */
    @Test
    public void isSwornTranslatorTest() {
        // TODO: test isSwornTranslator
    }

    /**
     * Test the property 'languagePairs'
     */
    @Test
    public void languagePairsTest() {
        // TODO: test languagePairs
    }

    /**
     * Test the property 'lastName'
     */
    @Test
    public void lastNameTest() {
        // TODO: test lastName
    }

    /**
     * Test the property 'lastOnline'
     */
    @Test
    public void lastOnlineTest() {
        // TODO: test lastOnline
    }

    /**
     * Test the property 'lastWorked'
     */
    @Test
    public void lastWorkedTest() {
        // TODO: test lastWorked
    }

    /**
     * Test the property 'memoq'
     */
    @Test
    public void memoqTest() {
        // TODO: test memoq
    }

    /**
     * Test the property 'memsource'
     */
    @Test
    public void memsourceTest() {
        // TODO: test memsource
    }

    /**
     * Test the property 'minTqs'
     */
    @Test
    public void minTqsTest() {
        // TODO: test minTqs
    }

    /**
     * Test the property 'omegat'
     */
    @Test
    public void omegatTest() {
        // TODO: test omegat
    }

    /**
     * Test the property 'projectCount'
     */
    @Test
    public void projectCountTest() {
        // TODO: test projectCount
    }

    /**
     * Test the property 'proofreaderExperience'
     */
    @Test
    public void proofreaderExperienceTest() {
        // TODO: test proofreaderExperience
    }

    /**
     * Test the property 'providesCreativeWritingService'
     */
    @Test
    public void providesCreativeWritingServiceTest() {
        // TODO: test providesCreativeWritingService
    }

    /**
     * Test the property 'providesPosteditService'
     */
    @Test
    public void providesPosteditServiceTest() {
        // TODO: test providesPosteditService
    }

    /**
     * Test the property 'quoteFileSubjects'
     */
    @Test
    public void quoteFileSubjectsTest() {
        // TODO: test quoteFileSubjects
    }

    /**
     * Test the property 'reference'
     */
    @Test
    public void referenceTest() {
        // TODO: test reference
    }

    /**
     * Test the property 'sdlTrados'
     */
    @Test
    public void sdlTradosTest() {
        // TODO: test sdlTrados
    }

    /**
     * Test the property 'search'
     */
    @Test
    public void searchTest() {
        // TODO: test search
    }

    /**
     * Test the property 'skypeId'
     */
    @Test
    public void skypeIdTest() {
        // TODO: test skypeId
    }

    /**
     * Test the property 'smartcat'
     */
    @Test
    public void smartcatTest() {
        // TODO: test smartcat
    }

    /**
     * Test the property 'smartling'
     */
    @Test
    public void smartlingTest() {
        // TODO: test smartling
    }

    /**
     * Test the property 'sourceLanguages'
     */
    @Test
    public void sourceLanguagesTest() {
        // TODO: test sourceLanguages
    }

    /**
     * Test the property 'specialization'
     */
    @Test
    public void specializationTest() {
        // TODO: test specialization
    }

    /**
     * Test the property 'status'
     */
    @Test
    public void statusTest() {
        // TODO: test status
    }

    /**
     * Test the property 'subtitleEdit'
     */
    @Test
    public void subtitleEditTest() {
        // TODO: test subtitleEdit
    }

    /**
     * Test the property 'subtitleWorkshop'
     */
    @Test
    public void subtitleWorkshopTest() {
        // TODO: test subtitleWorkshop
    }

    /**
     * Test the property 'translatorAssociation'
     */
    @Test
    public void translatorAssociationTest() {
        // TODO: test translatorAssociation
    }

    /**
     * Test the property 'transsuite2000'
     */
    @Test
    public void transsuite2000Test() {
        // TODO: test transsuite2000
    }

    /**
     * Test the property 'userWorkingTimezone'
     */
    @Test
    public void userWorkingTimezoneTest() {
        // TODO: test userWorkingTimezone
    }

    /**
     * Test the property 'vendorProfileLsp'
     */
    @Test
    public void vendorProfileLspTest() {
        // TODO: test vendorProfileLsp
    }

    /**
     * Test the property 'vendorTags'
     */
    @Test
    public void vendorTagsTest() {
        // TODO: test vendorTags
    }

    /**
     * Test the property 'vendorType'
     */
    @Test
    public void vendorTypeTest() {
        // TODO: test vendorType
    }

    /**
     * Test the property 'vendorWorkingTimezone'
     */
    @Test
    public void vendorWorkingTimezoneTest() {
        // TODO: test vendorWorkingTimezone
    }

    /**
     * Test the property 'wordCount'
     */
    @Test
    public void wordCountTest() {
        // TODO: test wordCount
    }

    /**
     * Test the property 'wordbee'
     */
    @Test
    public void wordbeeTest() {
        // TODO: test wordbee
    }

    /**
     * Test the property 'wordfast'
     */
    @Test
    public void wordfastTest() {
        // TODO: test wordfast
    }

    /**
     * Test the property 'workType'
     */
    @Test
    public void workTypeTest() {
        // TODO: test workType
    }

    /**
     * Test the property 'workWith'
     */
    @Test
    public void workWithTest() {
        // TODO: test workWith
    }

    /**
     * Test the property 'workingAs'
     */
    @Test
    public void workingAsTest() {
        // TODO: test workingAs
    }

    /**
     * Test the property 'xbench'
     */
    @Test
    public void xbenchTest() {
        // TODO: test xbench
    }

    /**
     * Test the property 'xtm'
     */
    @Test
    public void xtmTest() {
        // TODO: test xtm
    }

}
