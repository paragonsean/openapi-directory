/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectStatus::OAIProjectStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectStatus::OAIProjectStatus() {
    this->initializeModel();
}

OAIProjectStatus::~OAIProjectStatus() {}

void OAIProjectStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProjectStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProjectStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("pending", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectStatus::PENDING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("started", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectStatus::STARTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectStatus::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("translated", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectStatus::TRANSLATED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("proofread", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectStatus::PROOFREAD;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProjectStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProjectStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProjectStatus::PENDING:
            val = "pending";
            break;
        case eOAIProjectStatus::STARTED:
            val = "started";
            break;
        case eOAIProjectStatus::COMPLETED:
            val = "completed";
            break;
        case eOAIProjectStatus::TRANSLATED:
            val = "translated";
            break;
        case eOAIProjectStatus::PROOFREAD:
            val = "proofread";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProjectStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProjectStatus::eOAIProjectStatus OAIProjectStatus::getValue() const {
    return m_value;
}

void OAIProjectStatus::setValue(const OAIProjectStatus::eOAIProjectStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProjectStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIProjectStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
