/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreditCard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreditCard::OAICreditCard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreditCard::OAICreditCard() {
    this->initializeModel();
}

OAICreditCard::~OAICreditCard() {}

void OAICreditCard::initializeModel() {

    m_bin_isSet = false;
    m_bin_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_default_isSet = false;
    m_is_default_isValid = false;

    m_payment_code_isSet = false;
    m_payment_code_isValid = false;
}

void OAICreditCard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreditCard::fromJsonObject(QJsonObject json) {

    m_bin_isValid = ::OpenAPI::fromJsonValue(m_bin, json[QString("bin")]);
    m_bin_isSet = !json[QString("bin")].isNull() && m_bin_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_is_default_isValid = ::OpenAPI::fromJsonValue(m_is_default, json[QString("is_default")]);
    m_is_default_isSet = !json[QString("is_default")].isNull() && m_is_default_isValid;

    m_payment_code_isValid = ::OpenAPI::fromJsonValue(m_payment_code, json[QString("payment_code")]);
    m_payment_code_isSet = !json[QString("payment_code")].isNull() && m_payment_code_isValid;
}

QString OAICreditCard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreditCard::asJsonObject() const {
    QJsonObject obj;
    if (m_bin_isSet) {
        obj.insert(QString("bin"), ::OpenAPI::toJsonValue(m_bin));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_default_isSet) {
        obj.insert(QString("is_default"), ::OpenAPI::toJsonValue(m_is_default));
    }
    if (m_payment_code_isSet) {
        obj.insert(QString("payment_code"), ::OpenAPI::toJsonValue(m_payment_code));
    }
    return obj;
}

QString OAICreditCard::getBin() const {
    return m_bin;
}
void OAICreditCard::setBin(const QString &bin) {
    m_bin = bin;
    m_bin_isSet = true;
}

bool OAICreditCard::is_bin_Set() const{
    return m_bin_isSet;
}

bool OAICreditCard::is_bin_Valid() const{
    return m_bin_isValid;
}

qint64 OAICreditCard::getId() const {
    return m_id;
}
void OAICreditCard::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICreditCard::is_id_Set() const{
    return m_id_isSet;
}

bool OAICreditCard::is_id_Valid() const{
    return m_id_isValid;
}

bool OAICreditCard::isIsDefault() const {
    return m_is_default;
}
void OAICreditCard::setIsDefault(const bool &is_default) {
    m_is_default = is_default;
    m_is_default_isSet = true;
}

bool OAICreditCard::is_is_default_Set() const{
    return m_is_default_isSet;
}

bool OAICreditCard::is_is_default_Valid() const{
    return m_is_default_isValid;
}

QString OAICreditCard::getPaymentCode() const {
    return m_payment_code;
}
void OAICreditCard::setPaymentCode(const QString &payment_code) {
    m_payment_code = payment_code;
    m_payment_code_isSet = true;
}

bool OAICreditCard::is_payment_code_Set() const{
    return m_payment_code_isSet;
}

bool OAICreditCard::is_payment_code_Valid() const{
    return m_payment_code_isValid;
}

bool OAICreditCard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreditCard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
