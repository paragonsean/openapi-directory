/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContinuousProjectDocument.h
 *
 * 
 */

#ifndef OAIContinuousProjectDocument_H
#define OAIContinuousProjectDocument_H

#include <QJsonObject>

#include "OAIDocumentLinks.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentLinks;

class OAIContinuousProjectDocument : public OAIObject {
public:
    OAIContinuousProjectDocument();
    OAIContinuousProjectDocument(QString json);
    ~OAIContinuousProjectDocument() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getBilledWordCount() const;
    void setBilledWordCount(const qint64 &billed_word_count);
    bool is_billed_word_count_Set() const;
    bool is_billed_word_count_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIDocumentLinks getLinks() const;
    void setLinks(const OAIDocumentLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPostEditEnabled() const;
    void setPostEditEnabled(const bool &post_edit_enabled);
    bool is_post_edit_enabled_Set() const;
    bool is_post_edit_enabled_Valid() const;

    QString getProjectId() const;
    void setProjectId(const QString &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getSourceLanguage() const;
    void setSourceLanguage(const QString &source_language);
    bool is_source_language_Set() const;
    bool is_source_language_Valid() const;

    QList<QString> getTargetLanguages() const;
    void setTargetLanguages(const QList<QString> &target_languages);
    bool is_target_languages_Set() const;
    bool is_target_languages_Valid() const;

    qint64 getWordCount() const;
    void setWordCount(const qint64 &word_count);
    bool is_word_count_Set() const;
    bool is_word_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_billed_word_count;
    bool m_billed_word_count_isSet;
    bool m_billed_word_count_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIDocumentLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_post_edit_enabled;
    bool m_post_edit_enabled_isSet;
    bool m_post_edit_enabled_isValid;

    QString m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_source_language;
    bool m_source_language_isSet;
    bool m_source_language_isValid;

    QList<QString> m_target_languages;
    bool m_target_languages_isSet;
    bool m_target_languages_isValid;

    qint64 m_word_count;
    bool m_word_count_isSet;
    bool m_word_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContinuousProjectDocument)

#endif // OAIContinuousProjectDocument_H
