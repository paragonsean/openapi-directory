/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVendorInvitationList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVendorInvitationList::OAIVendorInvitationList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVendorInvitationList::OAIVendorInvitationList() {
    this->initializeModel();
}

OAIVendorInvitationList::~OAIVendorInvitationList() {}

void OAIVendorInvitationList::initializeModel() {

    m_vendors_isSet = false;
    m_vendors_isValid = false;
}

void OAIVendorInvitationList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVendorInvitationList::fromJsonObject(QJsonObject json) {

    m_vendors_isValid = ::OpenAPI::fromJsonValue(m_vendors, json[QString("vendors")]);
    m_vendors_isSet = !json[QString("vendors")].isNull() && m_vendors_isValid;
}

QString OAIVendorInvitationList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVendorInvitationList::asJsonObject() const {
    QJsonObject obj;
    if (m_vendors.size() > 0) {
        obj.insert(QString("vendors"), ::OpenAPI::toJsonValue(m_vendors));
    }
    return obj;
}

QList<OAIVendorWithNeeds> OAIVendorInvitationList::getVendors() const {
    return m_vendors;
}
void OAIVendorInvitationList::setVendors(const QList<OAIVendorWithNeeds> &vendors) {
    m_vendors = vendors;
    m_vendors_isSet = true;
}

bool OAIVendorInvitationList::is_vendors_Set() const{
    return m_vendors_isSet;
}

bool OAIVendorInvitationList::is_vendors_Valid() const{
    return m_vendors_isValid;
}

bool OAIVendorInvitationList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vendors.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVendorInvitationList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
