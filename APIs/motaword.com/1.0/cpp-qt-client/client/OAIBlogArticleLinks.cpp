/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBlogArticleLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBlogArticleLinks::OAIBlogArticleLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBlogArticleLinks::OAIBlogArticleLinks() {
    this->initializeModel();
}

OAIBlogArticleLinks::~OAIBlogArticleLinks() {}

void OAIBlogArticleLinks::initializeModel() {

    m_self_isSet = false;
    m_self_isValid = false;

    m_android_isSet = false;
    m_android_isValid = false;

    m_header_image_isSet = false;
    m_header_image_isValid = false;

    m_ios_isSet = false;
    m_ios_isValid = false;

    m_web_isSet = false;
    m_web_isValid = false;
}

void OAIBlogArticleLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBlogArticleLinks::fromJsonObject(QJsonObject json) {

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_android_isValid = ::OpenAPI::fromJsonValue(m_android, json[QString("android")]);
    m_android_isSet = !json[QString("android")].isNull() && m_android_isValid;

    m_header_image_isValid = ::OpenAPI::fromJsonValue(m_header_image, json[QString("header_image")]);
    m_header_image_isSet = !json[QString("header_image")].isNull() && m_header_image_isValid;

    m_ios_isValid = ::OpenAPI::fromJsonValue(m_ios, json[QString("ios")]);
    m_ios_isSet = !json[QString("ios")].isNull() && m_ios_isValid;

    m_web_isValid = ::OpenAPI::fromJsonValue(m_web, json[QString("web")]);
    m_web_isSet = !json[QString("web")].isNull() && m_web_isValid;
}

QString OAIBlogArticleLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBlogArticleLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_self.isSet()) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_android.isSet()) {
        obj.insert(QString("android"), ::OpenAPI::toJsonValue(m_android));
    }
    if (m_header_image.isSet()) {
        obj.insert(QString("header_image"), ::OpenAPI::toJsonValue(m_header_image));
    }
    if (m_ios.isSet()) {
        obj.insert(QString("ios"), ::OpenAPI::toJsonValue(m_ios));
    }
    if (m_web.isSet()) {
        obj.insert(QString("web"), ::OpenAPI::toJsonValue(m_web));
    }
    return obj;
}

OAIHref OAIBlogArticleLinks::getSelf() const {
    return m_self;
}
void OAIBlogArticleLinks::setSelf(const OAIHref &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIBlogArticleLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIBlogArticleLinks::is_self_Valid() const{
    return m_self_isValid;
}

OAIHref OAIBlogArticleLinks::getAndroid() const {
    return m_android;
}
void OAIBlogArticleLinks::setAndroid(const OAIHref &android) {
    m_android = android;
    m_android_isSet = true;
}

bool OAIBlogArticleLinks::is_android_Set() const{
    return m_android_isSet;
}

bool OAIBlogArticleLinks::is_android_Valid() const{
    return m_android_isValid;
}

OAIHref OAIBlogArticleLinks::getHeaderImage() const {
    return m_header_image;
}
void OAIBlogArticleLinks::setHeaderImage(const OAIHref &header_image) {
    m_header_image = header_image;
    m_header_image_isSet = true;
}

bool OAIBlogArticleLinks::is_header_image_Set() const{
    return m_header_image_isSet;
}

bool OAIBlogArticleLinks::is_header_image_Valid() const{
    return m_header_image_isValid;
}

OAIHref OAIBlogArticleLinks::getIos() const {
    return m_ios;
}
void OAIBlogArticleLinks::setIos(const OAIHref &ios) {
    m_ios = ios;
    m_ios_isSet = true;
}

bool OAIBlogArticleLinks::is_ios_Set() const{
    return m_ios_isSet;
}

bool OAIBlogArticleLinks::is_ios_Valid() const{
    return m_ios_isValid;
}

OAIHref OAIBlogArticleLinks::getWeb() const {
    return m_web;
}
void OAIBlogArticleLinks::setWeb(const OAIHref &web) {
    m_web = web;
    m_web_isSet = true;
}

bool OAIBlogArticleLinks::is_web_Set() const{
    return m_web_isSet;
}

bool OAIBlogArticleLinks::is_web_Valid() const{
    return m_web_isValid;
}

bool OAIBlogArticleLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_self.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_android.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_header_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ios.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_web.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBlogArticleLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
