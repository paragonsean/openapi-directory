/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActiveWidget.h
 *
 * 
 */

#ifndef OAIActiveWidget_H
#define OAIActiveWidget_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIActiveWidget : public OAIObject {
public:
    OAIActiveWidget();
    OAIActiveWidget(QString json);
    ~OAIActiveWidget() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdminMode() const;
    void setAdminMode(const bool &admin_mode);
    bool is_admin_mode_Set() const;
    bool is_admin_mode_Valid() const;

    bool isAllowHashInUrl() const;
    void setAllowHashInUrl(const bool &allow_hash_in_url);
    bool is_allow_hash_in_url_Set() const;
    bool is_allow_hash_in_url_Valid() const;

    bool isAllowQueryInUrl() const;
    void setAllowQueryInUrl(const bool &allow_query_in_url);
    bool is_allow_query_in_url_Set() const;
    bool is_allow_query_in_url_Valid() const;

    bool isAutoDetectSourceLanguage() const;
    void setAutoDetectSourceLanguage(const bool &auto_detect_source_language);
    bool is_auto_detect_source_language_Set() const;
    bool is_auto_detect_source_language_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    bool isDebugMode() const;
    void setDebugMode(const bool &debug_mode);
    bool is_debug_mode_Set() const;
    bool is_debug_mode_Valid() const;

    QString getElements() const;
    void setElements(const QString &elements);
    bool is_elements_Set() const;
    bool is_elements_Valid() const;

    bool isFollowUser() const;
    void setFollowUser(const bool &follow_user);
    bool is_follow_user_Set() const;
    bool is_follow_user_Valid() const;

    bool isForceCacheRefreshInterval() const;
    void setForceCacheRefreshInterval(const bool &force_cache_refresh_interval);
    bool is_force_cache_refresh_interval_Set() const;
    bool is_force_cache_refresh_interval_Valid() const;

    bool isHitBackendForExisting() const;
    void setHitBackendForExisting(const bool &hit_backend_for_existing);
    bool is_hit_backend_for_existing_Set() const;
    bool is_hit_backend_for_existing_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLanguageMappings() const;
    void setLanguageMappings(const QString &language_mappings);
    bool is_language_mappings_Set() const;
    bool is_language_mappings_Valid() const;

    bool isLive() const;
    void setLive(const bool &live);
    bool is_live_Set() const;
    bool is_live_Valid() const;

    bool isModifyLinks() const;
    void setModifyLinks(const bool &modify_links);
    bool is_modify_links_Set() const;
    bool is_modify_links_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOptimizePerPage() const;
    void setOptimizePerPage(const bool &optimize_per_page);
    bool is_optimize_per_page_Set() const;
    bool is_optimize_per_page_Valid() const;

    QString getPages() const;
    void setPages(const QString &pages);
    bool is_pages_Set() const;
    bool is_pages_Valid() const;

    QString getPathRegex() const;
    void setPathRegex(const QString &path_regex);
    bool is_path_regex_Set() const;
    bool is_path_regex_Valid() const;

    QString getPosition() const;
    void setPosition(const QString &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QString getQueryName() const;
    void setQueryName(const QString &query_name);
    bool is_query_name_Set() const;
    bool is_query_name_Valid() const;

    bool isRebootOnUrlChange() const;
    void setRebootOnUrlChange(const bool &reboot_on_url_change);
    bool is_reboot_on_url_change_Set() const;
    bool is_reboot_on_url_change_Valid() const;

    QString getRestrictedDomains() const;
    void setRestrictedDomains(const QString &restricted_domains);
    bool is_restricted_domains_Set() const;
    bool is_restricted_domains_Valid() const;

    QString getSections() const;
    void setSections(const QString &sections);
    bool is_sections_Set() const;
    bool is_sections_Valid() const;

    bool isTestMode() const;
    void setTestMode(const bool &test_mode);
    bool is_test_mode_Set() const;
    bool is_test_mode_Valid() const;

    QString getTheme() const;
    void setTheme(const QString &theme);
    bool is_theme_Set() const;
    bool is_theme_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QString getUrlChangeMode() const;
    void setUrlChangeMode(const QString &url_change_mode);
    bool is_url_change_mode_Set() const;
    bool is_url_change_mode_Valid() const;

    QString getUrlMode() const;
    void setUrlMode(const QString &url_mode);
    bool is_url_mode_Set() const;
    bool is_url_mode_Valid() const;

    bool isUseCache() const;
    void setUseCache(const bool &use_cache);
    bool is_use_cache_Set() const;
    bool is_use_cache_Valid() const;

    bool isUseDummyTranslations() const;
    void setUseDummyTranslations(const bool &use_dummy_translations);
    bool is_use_dummy_translations_Set() const;
    bool is_use_dummy_translations_Valid() const;

    QString getVariables() const;
    void setVariables(const QString &variables);
    bool is_variables_Set() const;
    bool is_variables_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_admin_mode;
    bool m_admin_mode_isSet;
    bool m_admin_mode_isValid;

    bool m_allow_hash_in_url;
    bool m_allow_hash_in_url_isSet;
    bool m_allow_hash_in_url_isValid;

    bool m_allow_query_in_url;
    bool m_allow_query_in_url_isSet;
    bool m_allow_query_in_url_isValid;

    bool m_auto_detect_source_language;
    bool m_auto_detect_source_language_isSet;
    bool m_auto_detect_source_language_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    bool m_debug_mode;
    bool m_debug_mode_isSet;
    bool m_debug_mode_isValid;

    QString m_elements;
    bool m_elements_isSet;
    bool m_elements_isValid;

    bool m_follow_user;
    bool m_follow_user_isSet;
    bool m_follow_user_isValid;

    bool m_force_cache_refresh_interval;
    bool m_force_cache_refresh_interval_isSet;
    bool m_force_cache_refresh_interval_isValid;

    bool m_hit_backend_for_existing;
    bool m_hit_backend_for_existing_isSet;
    bool m_hit_backend_for_existing_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_language_mappings;
    bool m_language_mappings_isSet;
    bool m_language_mappings_isValid;

    bool m_live;
    bool m_live_isSet;
    bool m_live_isValid;

    bool m_modify_links;
    bool m_modify_links_isSet;
    bool m_modify_links_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_optimize_per_page;
    bool m_optimize_per_page_isSet;
    bool m_optimize_per_page_isValid;

    QString m_pages;
    bool m_pages_isSet;
    bool m_pages_isValid;

    QString m_path_regex;
    bool m_path_regex_isSet;
    bool m_path_regex_isValid;

    QString m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QString m_query_name;
    bool m_query_name_isSet;
    bool m_query_name_isValid;

    bool m_reboot_on_url_change;
    bool m_reboot_on_url_change_isSet;
    bool m_reboot_on_url_change_isValid;

    QString m_restricted_domains;
    bool m_restricted_domains_isSet;
    bool m_restricted_domains_isValid;

    QString m_sections;
    bool m_sections_isSet;
    bool m_sections_isValid;

    bool m_test_mode;
    bool m_test_mode_isSet;
    bool m_test_mode_isValid;

    QString m_theme;
    bool m_theme_isSet;
    bool m_theme_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QString m_url_change_mode;
    bool m_url_change_mode_isSet;
    bool m_url_change_mode_isValid;

    QString m_url_mode;
    bool m_url_mode_isSet;
    bool m_url_mode_isValid;

    bool m_use_cache;
    bool m_use_cache_isSet;
    bool m_use_cache_isValid;

    bool m_use_dummy_translations;
    bool m_use_dummy_translations_isSet;
    bool m_use_dummy_translations_isValid;

    QString m_variables;
    bool m_variables_isSet;
    bool m_variables_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActiveWidget)

#endif // OAIActiveWidget_H
