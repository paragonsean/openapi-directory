/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceLinks::OAIInvoiceLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceLinks::OAIInvoiceLinks() {
    this->initializeModel();
}

OAIInvoiceLinks::~OAIInvoiceLinks() {}

void OAIInvoiceLinks::initializeModel() {

    m_self_isSet = false;
    m_self_isValid = false;

    m_corporate_isSet = false;
    m_corporate_isValid = false;

    m_html_isSet = false;
    m_html_isValid = false;

    m_json_isSet = false;
    m_json_isValid = false;

    m_pdf_isSet = false;
    m_pdf_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;

    m_view_isSet = false;
    m_view_isValid = false;
}

void OAIInvoiceLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceLinks::fromJsonObject(QJsonObject json) {

    m_self_isValid = ::OpenAPI::fromJsonValue(m_self, json[QString("self")]);
    m_self_isSet = !json[QString("self")].isNull() && m_self_isValid;

    m_corporate_isValid = ::OpenAPI::fromJsonValue(m_corporate, json[QString("corporate")]);
    m_corporate_isSet = !json[QString("corporate")].isNull() && m_corporate_isValid;

    m_html_isValid = ::OpenAPI::fromJsonValue(m_html, json[QString("html")]);
    m_html_isSet = !json[QString("html")].isNull() && m_html_isValid;

    m_json_isValid = ::OpenAPI::fromJsonValue(m_json, json[QString("json")]);
    m_json_isSet = !json[QString("json")].isNull() && m_json_isValid;

    m_pdf_isValid = ::OpenAPI::fromJsonValue(m_pdf, json[QString("pdf")]);
    m_pdf_isSet = !json[QString("pdf")].isNull() && m_pdf_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;

    m_view_isValid = ::OpenAPI::fromJsonValue(m_view, json[QString("view")]);
    m_view_isSet = !json[QString("view")].isNull() && m_view_isValid;
}

QString OAIInvoiceLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_self.isSet()) {
        obj.insert(QString("self"), ::OpenAPI::toJsonValue(m_self));
    }
    if (m_corporate.isSet()) {
        obj.insert(QString("corporate"), ::OpenAPI::toJsonValue(m_corporate));
    }
    if (m_html.isSet()) {
        obj.insert(QString("html"), ::OpenAPI::toJsonValue(m_html));
    }
    if (m_json.isSet()) {
        obj.insert(QString("json"), ::OpenAPI::toJsonValue(m_json));
    }
    if (m_pdf.isSet()) {
        obj.insert(QString("pdf"), ::OpenAPI::toJsonValue(m_pdf));
    }
    if (m_project.isSet()) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    if (m_view.isSet()) {
        obj.insert(QString("view"), ::OpenAPI::toJsonValue(m_view));
    }
    return obj;
}

OAIHref OAIInvoiceLinks::getSelf() const {
    return m_self;
}
void OAIInvoiceLinks::setSelf(const OAIHref &self) {
    m_self = self;
    m_self_isSet = true;
}

bool OAIInvoiceLinks::is_self_Set() const{
    return m_self_isSet;
}

bool OAIInvoiceLinks::is_self_Valid() const{
    return m_self_isValid;
}

OAIHref OAIInvoiceLinks::getCorporate() const {
    return m_corporate;
}
void OAIInvoiceLinks::setCorporate(const OAIHref &corporate) {
    m_corporate = corporate;
    m_corporate_isSet = true;
}

bool OAIInvoiceLinks::is_corporate_Set() const{
    return m_corporate_isSet;
}

bool OAIInvoiceLinks::is_corporate_Valid() const{
    return m_corporate_isValid;
}

OAIHref OAIInvoiceLinks::getHtml() const {
    return m_html;
}
void OAIInvoiceLinks::setHtml(const OAIHref &html) {
    m_html = html;
    m_html_isSet = true;
}

bool OAIInvoiceLinks::is_html_Set() const{
    return m_html_isSet;
}

bool OAIInvoiceLinks::is_html_Valid() const{
    return m_html_isValid;
}

OAIHref OAIInvoiceLinks::getJson() const {
    return m_json;
}
void OAIInvoiceLinks::setJson(const OAIHref &json) {
    m_json = json;
    m_json_isSet = true;
}

bool OAIInvoiceLinks::is_json_Set() const{
    return m_json_isSet;
}

bool OAIInvoiceLinks::is_json_Valid() const{
    return m_json_isValid;
}

OAIHref OAIInvoiceLinks::getPdf() const {
    return m_pdf;
}
void OAIInvoiceLinks::setPdf(const OAIHref &pdf) {
    m_pdf = pdf;
    m_pdf_isSet = true;
}

bool OAIInvoiceLinks::is_pdf_Set() const{
    return m_pdf_isSet;
}

bool OAIInvoiceLinks::is_pdf_Valid() const{
    return m_pdf_isValid;
}

OAIHref OAIInvoiceLinks::getProject() const {
    return m_project;
}
void OAIInvoiceLinks::setProject(const OAIHref &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIInvoiceLinks::is_project_Set() const{
    return m_project_isSet;
}

bool OAIInvoiceLinks::is_project_Valid() const{
    return m_project_isValid;
}

OAIHref OAIInvoiceLinks::getView() const {
    return m_view;
}
void OAIInvoiceLinks::setView(const OAIHref &view) {
    m_view = view;
    m_view_isSet = true;
}

bool OAIInvoiceLinks::is_view_Set() const{
    return m_view_isSet;
}

bool OAIInvoiceLinks::is_view_Valid() const{
    return m_view_isValid;
}

bool OAIInvoiceLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_self.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_corporate.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_html.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_json.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pdf.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_project.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_view.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
