/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContinuousProject.h
 *
 * 
 */

#ifndef OAIContinuousProject_H
#define OAIContinuousProject_H

#include <QJsonObject>

#include "OAIContinuousProjectLinks.h"
#include "OAISubscription.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIContinuousProjectLinks;
class OAISubscription;

class OAIContinuousProject : public OAIObject {
public:
    OAIContinuousProject();
    OAIContinuousProject(QString json);
    ~OAIContinuousProject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAnalyticsEnabled() const;
    void setAnalyticsEnabled(const bool &analytics_enabled);
    bool is_analytics_enabled_Set() const;
    bool is_analytics_enabled_Valid() const;

    bool isAutoStartPostedit() const;
    void setAutoStartPostedit(const bool &auto_start_postedit);
    bool is_auto_start_postedit_Set() const;
    bool is_auto_start_postedit_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    QDateTime getLastActivityAt() const;
    void setLastActivityAt(const QDateTime &last_activity_at);
    bool is_last_activity_at_Set() const;
    bool is_last_activity_at_Valid() const;

    OAIContinuousProjectLinks getLinks() const;
    void setLinks(const OAIContinuousProjectLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    bool isMtEnabled() const;
    void setMtEnabled(const bool &mt_enabled);
    bool is_mt_enabled_Set() const;
    bool is_mt_enabled_Valid() const;

    QString getMtEngine() const;
    void setMtEngine(const QString &mt_engine);
    bool is_mt_engine_Set() const;
    bool is_mt_engine_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isPosteditEnabled() const;
    void setPosteditEnabled(const bool &postedit_enabled);
    bool is_postedit_enabled_Set() const;
    bool is_postedit_enabled_Valid() const;

    QString getSourceLanguage() const;
    void setSourceLanguage(const QString &source_language);
    bool is_source_language_Set() const;
    bool is_source_language_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAISubscription getSubscription() const;
    void setSubscription(const OAISubscription &subscription);
    bool is_subscription_Set() const;
    bool is_subscription_Valid() const;

    QList<QString> getTargetLanguages() const;
    void setTargetLanguages(const QList<QString> &target_languages);
    bool is_target_languages_Set() const;
    bool is_target_languages_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint64 getWordCount() const;
    void setWordCount(const qint64 &word_count);
    bool is_word_count_Set() const;
    bool is_word_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_analytics_enabled;
    bool m_analytics_enabled_isSet;
    bool m_analytics_enabled_isValid;

    bool m_auto_start_postedit;
    bool m_auto_start_postedit_isSet;
    bool m_auto_start_postedit_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;

    QDateTime m_last_activity_at;
    bool m_last_activity_at_isSet;
    bool m_last_activity_at_isValid;

    OAIContinuousProjectLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    bool m_mt_enabled;
    bool m_mt_enabled_isSet;
    bool m_mt_enabled_isValid;

    QString m_mt_engine;
    bool m_mt_engine_isSet;
    bool m_mt_engine_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_postedit_enabled;
    bool m_postedit_enabled_isSet;
    bool m_postedit_enabled_isValid;

    QString m_source_language;
    bool m_source_language_isSet;
    bool m_source_language_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAISubscription m_subscription;
    bool m_subscription_isSet;
    bool m_subscription_isValid;

    QList<QString> m_target_languages;
    bool m_target_languages_isSet;
    bool m_target_languages_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint64 m_word_count;
    bool m_word_count_isSet;
    bool m_word_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContinuousProject)

#endif // OAIContinuousProject_H
