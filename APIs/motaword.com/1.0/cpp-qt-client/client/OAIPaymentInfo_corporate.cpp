/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPaymentInfo_corporate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPaymentInfo_corporate::OAIPaymentInfo_corporate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPaymentInfo_corporate::OAIPaymentInfo_corporate() {
    this->initializeModel();
}

OAIPaymentInfo_corporate::~OAIPaymentInfo_corporate() {}

void OAIPaymentInfo_corporate::initializeModel() {

    m_allow_api_invoicing_isSet = false;
    m_allow_api_invoicing_isValid = false;

    m_allow_payment_code_isSet = false;
    m_allow_payment_code_isValid = false;

    m_auto_charge_isSet = false;
    m_auto_charge_isValid = false;

    m_billing_isSet = false;
    m_billing_isValid = false;

    m_card_isSet = false;
    m_card_isValid = false;

    m_contact_email_address_isSet = false;
    m_contact_email_address_isValid = false;

    m_payment_code_isSet = false;
    m_payment_code_isValid = false;
}

void OAIPaymentInfo_corporate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPaymentInfo_corporate::fromJsonObject(QJsonObject json) {

    m_allow_api_invoicing_isValid = ::OpenAPI::fromJsonValue(m_allow_api_invoicing, json[QString("allow_api_invoicing")]);
    m_allow_api_invoicing_isSet = !json[QString("allow_api_invoicing")].isNull() && m_allow_api_invoicing_isValid;

    m_allow_payment_code_isValid = ::OpenAPI::fromJsonValue(m_allow_payment_code, json[QString("allow_payment_code")]);
    m_allow_payment_code_isSet = !json[QString("allow_payment_code")].isNull() && m_allow_payment_code_isValid;

    m_auto_charge_isValid = ::OpenAPI::fromJsonValue(m_auto_charge, json[QString("auto_charge")]);
    m_auto_charge_isSet = !json[QString("auto_charge")].isNull() && m_auto_charge_isValid;

    m_billing_isValid = ::OpenAPI::fromJsonValue(m_billing, json[QString("billing")]);
    m_billing_isSet = !json[QString("billing")].isNull() && m_billing_isValid;

    m_card_isValid = ::OpenAPI::fromJsonValue(m_card, json[QString("card")]);
    m_card_isSet = !json[QString("card")].isNull() && m_card_isValid;

    m_contact_email_address_isValid = ::OpenAPI::fromJsonValue(m_contact_email_address, json[QString("contact_email_address")]);
    m_contact_email_address_isSet = !json[QString("contact_email_address")].isNull() && m_contact_email_address_isValid;

    m_payment_code_isValid = ::OpenAPI::fromJsonValue(m_payment_code, json[QString("payment_code")]);
    m_payment_code_isSet = !json[QString("payment_code")].isNull() && m_payment_code_isValid;
}

QString OAIPaymentInfo_corporate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPaymentInfo_corporate::asJsonObject() const {
    QJsonObject obj;
    if (m_allow_api_invoicing_isSet) {
        obj.insert(QString("allow_api_invoicing"), ::OpenAPI::toJsonValue(m_allow_api_invoicing));
    }
    if (m_allow_payment_code_isSet) {
        obj.insert(QString("allow_payment_code"), ::OpenAPI::toJsonValue(m_allow_payment_code));
    }
    if (m_auto_charge_isSet) {
        obj.insert(QString("auto_charge"), ::OpenAPI::toJsonValue(m_auto_charge));
    }
    if (m_billing.isSet()) {
        obj.insert(QString("billing"), ::OpenAPI::toJsonValue(m_billing));
    }
    if (m_card.isSet()) {
        obj.insert(QString("card"), ::OpenAPI::toJsonValue(m_card));
    }
    if (m_contact_email_address_isSet) {
        obj.insert(QString("contact_email_address"), ::OpenAPI::toJsonValue(m_contact_email_address));
    }
    if (m_payment_code_isSet) {
        obj.insert(QString("payment_code"), ::OpenAPI::toJsonValue(m_payment_code));
    }
    return obj;
}

bool OAIPaymentInfo_corporate::isAllowApiInvoicing() const {
    return m_allow_api_invoicing;
}
void OAIPaymentInfo_corporate::setAllowApiInvoicing(const bool &allow_api_invoicing) {
    m_allow_api_invoicing = allow_api_invoicing;
    m_allow_api_invoicing_isSet = true;
}

bool OAIPaymentInfo_corporate::is_allow_api_invoicing_Set() const{
    return m_allow_api_invoicing_isSet;
}

bool OAIPaymentInfo_corporate::is_allow_api_invoicing_Valid() const{
    return m_allow_api_invoicing_isValid;
}

bool OAIPaymentInfo_corporate::isAllowPaymentCode() const {
    return m_allow_payment_code;
}
void OAIPaymentInfo_corporate::setAllowPaymentCode(const bool &allow_payment_code) {
    m_allow_payment_code = allow_payment_code;
    m_allow_payment_code_isSet = true;
}

bool OAIPaymentInfo_corporate::is_allow_payment_code_Set() const{
    return m_allow_payment_code_isSet;
}

bool OAIPaymentInfo_corporate::is_allow_payment_code_Valid() const{
    return m_allow_payment_code_isValid;
}

bool OAIPaymentInfo_corporate::isAutoCharge() const {
    return m_auto_charge;
}
void OAIPaymentInfo_corporate::setAutoCharge(const bool &auto_charge) {
    m_auto_charge = auto_charge;
    m_auto_charge_isSet = true;
}

bool OAIPaymentInfo_corporate::is_auto_charge_Set() const{
    return m_auto_charge_isSet;
}

bool OAIPaymentInfo_corporate::is_auto_charge_Valid() const{
    return m_auto_charge_isValid;
}

OAIBillingAddress OAIPaymentInfo_corporate::getBilling() const {
    return m_billing;
}
void OAIPaymentInfo_corporate::setBilling(const OAIBillingAddress &billing) {
    m_billing = billing;
    m_billing_isSet = true;
}

bool OAIPaymentInfo_corporate::is_billing_Set() const{
    return m_billing_isSet;
}

bool OAIPaymentInfo_corporate::is_billing_Valid() const{
    return m_billing_isValid;
}

OAICreditCard OAIPaymentInfo_corporate::getCard() const {
    return m_card;
}
void OAIPaymentInfo_corporate::setCard(const OAICreditCard &card) {
    m_card = card;
    m_card_isSet = true;
}

bool OAIPaymentInfo_corporate::is_card_Set() const{
    return m_card_isSet;
}

bool OAIPaymentInfo_corporate::is_card_Valid() const{
    return m_card_isValid;
}

QString OAIPaymentInfo_corporate::getContactEmailAddress() const {
    return m_contact_email_address;
}
void OAIPaymentInfo_corporate::setContactEmailAddress(const QString &contact_email_address) {
    m_contact_email_address = contact_email_address;
    m_contact_email_address_isSet = true;
}

bool OAIPaymentInfo_corporate::is_contact_email_address_Set() const{
    return m_contact_email_address_isSet;
}

bool OAIPaymentInfo_corporate::is_contact_email_address_Valid() const{
    return m_contact_email_address_isValid;
}

QString OAIPaymentInfo_corporate::getPaymentCode() const {
    return m_payment_code;
}
void OAIPaymentInfo_corporate::setPaymentCode(const QString &payment_code) {
    m_payment_code = payment_code;
    m_payment_code_isSet = true;
}

bool OAIPaymentInfo_corporate::is_payment_code_Set() const{
    return m_payment_code_isSet;
}

bool OAIPaymentInfo_corporate::is_payment_code_Valid() const{
    return m_payment_code_isValid;
}

bool OAIPaymentInfo_corporate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_allow_api_invoicing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_allow_payment_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_auto_charge_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_card.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_email_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPaymentInfo_corporate::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
