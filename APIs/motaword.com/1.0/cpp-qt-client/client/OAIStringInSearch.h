/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStringInSearch.h
 *
 * 
 */

#ifndef OAIStringInSearch_H
#define OAIStringInSearch_H

#include <QJsonObject>

#include "OAIStringTranslationState.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStringInSearch : public OAIObject {
public:
    OAIStringInSearch();
    OAIStringInSearch(QString json);
    ~OAIStringInSearch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getFileId() const;
    void setFileId(const qint64 &file_id);
    bool is_file_id_Set() const;
    bool is_file_id_Valid() const;

    qint64 getInternalProjectId() const;
    void setInternalProjectId(const qint64 &internal_project_id);
    bool is_internal_project_id_Set() const;
    bool is_internal_project_id_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    qint64 getProjectId() const;
    void setProjectId(const qint64 &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    float getSearchScore() const;
    void setSearchScore(const float &search_score);
    bool is_search_score_Set() const;
    bool is_search_score_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    OAIStringTranslationState getStatus() const;
    void setStatus(const OAIStringTranslationState &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint64 getStringId() const;
    void setStringId(const qint64 &string_id);
    bool is_string_id_Set() const;
    bool is_string_id_Valid() const;

    QString getTarget() const;
    void setTarget(const QString &target);
    bool is_target_Set() const;
    bool is_target_Valid() const;

    QList<QString> getTargets() const;
    void setTargets(const QList<QString> &targets);
    bool is_targets_Set() const;
    bool is_targets_Valid() const;

    QString getTmName() const;
    void setTmName(const QString &tm_name);
    bool is_tm_name_Set() const;
    bool is_tm_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_file_id;
    bool m_file_id_isSet;
    bool m_file_id_isValid;

    qint64 m_internal_project_id;
    bool m_internal_project_id_isSet;
    bool m_internal_project_id_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    qint64 m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    float m_search_score;
    bool m_search_score_isSet;
    bool m_search_score_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    OAIStringTranslationState m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint64 m_string_id;
    bool m_string_id_isSet;
    bool m_string_id_isValid;

    QString m_target;
    bool m_target_isSet;
    bool m_target_isValid;

    QList<QString> m_targets;
    bool m_targets_isSet;
    bool m_targets_isValid;

    QString m_tm_name;
    bool m_tm_name_isSet;
    bool m_tm_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStringInSearch)

#endif // OAIStringInSearch_H
