/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserUpdateContent_allOf_notifications.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserUpdateContent_allOf_notifications::OAIUserUpdateContent_allOf_notifications(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserUpdateContent_allOf_notifications::OAIUserUpdateContent_allOf_notifications() {
    this->initializeModel();
}

OAIUserUpdateContent_allOf_notifications::~OAIUserUpdateContent_allOf_notifications() {}

void OAIUserUpdateContent_allOf_notifications::initializeModel() {

    m_phone_number_isSet = false;
    m_phone_number_isValid = false;

    m_sms_enabled_isSet = false;
    m_sms_enabled_isValid = false;
}

void OAIUserUpdateContent_allOf_notifications::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserUpdateContent_allOf_notifications::fromJsonObject(QJsonObject json) {

    m_phone_number_isValid = ::OpenAPI::fromJsonValue(m_phone_number, json[QString("phone_number")]);
    m_phone_number_isSet = !json[QString("phone_number")].isNull() && m_phone_number_isValid;

    m_sms_enabled_isValid = ::OpenAPI::fromJsonValue(m_sms_enabled, json[QString("sms_enabled")]);
    m_sms_enabled_isSet = !json[QString("sms_enabled")].isNull() && m_sms_enabled_isValid;
}

QString OAIUserUpdateContent_allOf_notifications::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserUpdateContent_allOf_notifications::asJsonObject() const {
    QJsonObject obj;
    if (m_phone_number_isSet) {
        obj.insert(QString("phone_number"), ::OpenAPI::toJsonValue(m_phone_number));
    }
    if (m_sms_enabled_isSet) {
        obj.insert(QString("sms_enabled"), ::OpenAPI::toJsonValue(m_sms_enabled));
    }
    return obj;
}

QString OAIUserUpdateContent_allOf_notifications::getPhoneNumber() const {
    return m_phone_number;
}
void OAIUserUpdateContent_allOf_notifications::setPhoneNumber(const QString &phone_number) {
    m_phone_number = phone_number;
    m_phone_number_isSet = true;
}

bool OAIUserUpdateContent_allOf_notifications::is_phone_number_Set() const{
    return m_phone_number_isSet;
}

bool OAIUserUpdateContent_allOf_notifications::is_phone_number_Valid() const{
    return m_phone_number_isValid;
}

bool OAIUserUpdateContent_allOf_notifications::isSmsEnabled() const {
    return m_sms_enabled;
}
void OAIUserUpdateContent_allOf_notifications::setSmsEnabled(const bool &sms_enabled) {
    m_sms_enabled = sms_enabled;
    m_sms_enabled_isSet = true;
}

bool OAIUserUpdateContent_allOf_notifications::is_sms_enabled_Set() const{
    return m_sms_enabled_isSet;
}

bool OAIUserUpdateContent_allOf_notifications::is_sms_enabled_Valid() const{
    return m_sms_enabled_isValid;
}

bool OAIUserUpdateContent_allOf_notifications::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_phone_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sms_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserUpdateContent_allOf_notifications::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
