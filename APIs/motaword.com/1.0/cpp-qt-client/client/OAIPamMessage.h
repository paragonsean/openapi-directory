/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPamMessage.h
 *
 * 
 */

#ifndef OAIPamMessage_H
#define OAIPamMessage_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPamMessage : public OAIObject {
public:
    OAIPamMessage();
    OAIPamMessage(QString json);
    ~OAIPamMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMessage() const;
    void setMessage(const QString &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QList<QString> getRecipients() const;
    void setRecipients(const QList<QString> &recipients);
    bool is_recipients_Set() const;
    bool is_recipients_Valid() const;

    QList<QString> getRSlots() const;
    void setRSlots(const QList<QString> &r_slots);
    bool is_r_slots_Set() const;
    bool is_r_slots_Valid() const;

    QString getThreadId() const;
    void setThreadId(const QString &thread_id);
    bool is_thread_id_Set() const;
    bool is_thread_id_Valid() const;

    QString getThreadKey() const;
    void setThreadKey(const QString &thread_key);
    bool is_thread_key_Set() const;
    bool is_thread_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QList<QString> m_recipients;
    bool m_recipients_isSet;
    bool m_recipients_isValid;

    QList<QString> m_r_slots;
    bool m_r_slots_isSet;
    bool m_r_slots_isValid;

    QString m_thread_id;
    bool m_thread_id_isSet;
    bool m_thread_id_isValid;

    QString m_thread_key;
    bool m_thread_key_isSet;
    bool m_thread_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPamMessage)

#endif // OAIPamMessage_H
