/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContinuousProjectCosts.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContinuousProjectCosts::OAIContinuousProjectCosts(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContinuousProjectCosts::OAIContinuousProjectCosts() {
    this->initializeModel();
}

OAIContinuousProjectCosts::~OAIContinuousProjectCosts() {}

void OAIContinuousProjectCosts::initializeModel() {

    m_mt_isSet = false;
    m_mt_isValid = false;

    m_post_edit_isSet = false;
    m_post_edit_isValid = false;

    m_saved_isSet = false;
    m_saved_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIContinuousProjectCosts::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContinuousProjectCosts::fromJsonObject(QJsonObject json) {

    m_mt_isValid = ::OpenAPI::fromJsonValue(m_mt, json[QString("mt")]);
    m_mt_isSet = !json[QString("mt")].isNull() && m_mt_isValid;

    m_post_edit_isValid = ::OpenAPI::fromJsonValue(m_post_edit, json[QString("post_edit")]);
    m_post_edit_isSet = !json[QString("post_edit")].isNull() && m_post_edit_isValid;

    m_saved_isValid = ::OpenAPI::fromJsonValue(m_saved, json[QString("saved")]);
    m_saved_isSet = !json[QString("saved")].isNull() && m_saved_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIContinuousProjectCosts::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContinuousProjectCosts::asJsonObject() const {
    QJsonObject obj;
    if (m_mt.isSet()) {
        obj.insert(QString("mt"), ::OpenAPI::toJsonValue(m_mt));
    }
    if (m_post_edit.isSet()) {
        obj.insert(QString("post_edit"), ::OpenAPI::toJsonValue(m_post_edit));
    }
    if (m_saved.isSet()) {
        obj.insert(QString("saved"), ::OpenAPI::toJsonValue(m_saved));
    }
    if (m_total.isSet()) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

OAIMonetary OAIContinuousProjectCosts::getMt() const {
    return m_mt;
}
void OAIContinuousProjectCosts::setMt(const OAIMonetary &mt) {
    m_mt = mt;
    m_mt_isSet = true;
}

bool OAIContinuousProjectCosts::is_mt_Set() const{
    return m_mt_isSet;
}

bool OAIContinuousProjectCosts::is_mt_Valid() const{
    return m_mt_isValid;
}

OAIMonetary OAIContinuousProjectCosts::getPostEdit() const {
    return m_post_edit;
}
void OAIContinuousProjectCosts::setPostEdit(const OAIMonetary &post_edit) {
    m_post_edit = post_edit;
    m_post_edit_isSet = true;
}

bool OAIContinuousProjectCosts::is_post_edit_Set() const{
    return m_post_edit_isSet;
}

bool OAIContinuousProjectCosts::is_post_edit_Valid() const{
    return m_post_edit_isValid;
}

OAIMonetary OAIContinuousProjectCosts::getSaved() const {
    return m_saved;
}
void OAIContinuousProjectCosts::setSaved(const OAIMonetary &saved) {
    m_saved = saved;
    m_saved_isSet = true;
}

bool OAIContinuousProjectCosts::is_saved_Set() const{
    return m_saved_isSet;
}

bool OAIContinuousProjectCosts::is_saved_Valid() const{
    return m_saved_isValid;
}

OAIMonetary OAIContinuousProjectCosts::getTotal() const {
    return m_total;
}
void OAIContinuousProjectCosts::setTotal(const OAIMonetary &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIContinuousProjectCosts::is_total_Set() const{
    return m_total_isSet;
}

bool OAIContinuousProjectCosts::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIContinuousProjectCosts::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_mt.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_edit.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_saved.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_total.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContinuousProjectCosts::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
