/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFileNeedsVendor.h
 *
 * 
 */

#ifndef OAIFileNeedsVendor_H
#define OAIFileNeedsVendor_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFileNeedsVendor : public OAIObject {
public:
    OAIFileNeedsVendor();
    OAIFileNeedsVendor(QString json);
    ~OAIFileNeedsVendor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getFileId() const;
    void setFileId(const qint64 &file_id);
    bool is_file_id_Set() const;
    bool is_file_id_Valid() const;

    QString getGuid() const;
    void setGuid(const QString &guid);
    bool is_guid_Set() const;
    bool is_guid_Valid() const;

    qint64 getProjectId() const;
    void setProjectId(const qint64 &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    QString getReason() const;
    void setReason(const QString &reason);
    bool is_reason_Set() const;
    bool is_reason_Valid() const;

    QList<QString> getTargetLanguage() const;
    void setTargetLanguage(const QList<QString> &target_language);
    bool is_target_language_Set() const;
    bool is_target_language_Valid() const;

    QList<QString> getTaskType() const;
    void setTaskType(const QList<QString> &task_type);
    bool is_task_type_Set() const;
    bool is_task_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_file_id;
    bool m_file_id_isSet;
    bool m_file_id_isValid;

    QString m_guid;
    bool m_guid_isSet;
    bool m_guid_isValid;

    qint64 m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    QString m_reason;
    bool m_reason_isSet;
    bool m_reason_isValid;

    QList<QString> m_target_language;
    bool m_target_language_isSet;
    bool m_target_language_isValid;

    QList<QString> m_task_type;
    bool m_task_type_isSet;
    bool m_task_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFileNeedsVendor)

#endif // OAIFileNeedsVendor_H
