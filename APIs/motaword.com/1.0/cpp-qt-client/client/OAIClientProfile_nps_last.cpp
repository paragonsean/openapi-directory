/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientProfile_nps_last.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientProfile_nps_last::OAIClientProfile_nps_last(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientProfile_nps_last::OAIClientProfile_nps_last() {
    this->initializeModel();
}

OAIClientProfile_nps_last::~OAIClientProfile_nps_last() {}

void OAIClientProfile_nps_last::initializeModel() {

    m_completion_date_isSet = false;
    m_completion_date_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;
}

void OAIClientProfile_nps_last::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientProfile_nps_last::fromJsonObject(QJsonObject json) {

    m_completion_date_isValid = ::OpenAPI::fromJsonValue(m_completion_date, json[QString("completion_date")]);
    m_completion_date_isSet = !json[QString("completion_date")].isNull() && m_completion_date_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;
}

QString OAIClientProfile_nps_last::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientProfile_nps_last::asJsonObject() const {
    QJsonObject obj;
    if (m_completion_date_isSet) {
        obj.insert(QString("completion_date"), ::OpenAPI::toJsonValue(m_completion_date));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    return obj;
}

QDateTime OAIClientProfile_nps_last::getCompletionDate() const {
    return m_completion_date;
}
void OAIClientProfile_nps_last::setCompletionDate(const QDateTime &completion_date) {
    m_completion_date = completion_date;
    m_completion_date_isSet = true;
}

bool OAIClientProfile_nps_last::is_completion_date_Set() const{
    return m_completion_date_isSet;
}

bool OAIClientProfile_nps_last::is_completion_date_Valid() const{
    return m_completion_date_isValid;
}

double OAIClientProfile_nps_last::getScore() const {
    return m_score;
}
void OAIClientProfile_nps_last::setScore(const double &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIClientProfile_nps_last::is_score_Set() const{
    return m_score_isSet;
}

bool OAIClientProfile_nps_last::is_score_Valid() const{
    return m_score_isValid;
}

bool OAIClientProfile_nps_last::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_completion_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientProfile_nps_last::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
