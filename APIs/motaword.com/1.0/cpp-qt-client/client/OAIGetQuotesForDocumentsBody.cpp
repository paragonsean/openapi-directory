/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetQuotesForDocumentsBody.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetQuotesForDocumentsBody::OAIGetQuotesForDocumentsBody(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetQuotesForDocumentsBody::OAIGetQuotesForDocumentsBody() {
    this->initializeModel();
}

OAIGetQuotesForDocumentsBody::~OAIGetQuotesForDocumentsBody() {}

void OAIGetQuotesForDocumentsBody::initializeModel() {

    m_files_isSet = false;
    m_files_isValid = false;
}

void OAIGetQuotesForDocumentsBody::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetQuotesForDocumentsBody::fromJsonObject(QJsonObject json) {

    m_files_isValid = ::OpenAPI::fromJsonValue(m_files, json[QString("files")]);
    m_files_isSet = !json[QString("files")].isNull() && m_files_isValid;
}

QString OAIGetQuotesForDocumentsBody::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetQuotesForDocumentsBody::asJsonObject() const {
    QJsonObject obj;
    if (m_files.size() > 0) {
        obj.insert(QString("files"), ::OpenAPI::toJsonValue(m_files));
    }
    return obj;
}

QList<qint64> OAIGetQuotesForDocumentsBody::getFiles() const {
    return m_files;
}
void OAIGetQuotesForDocumentsBody::setFiles(const QList<qint64> &files) {
    m_files = files;
    m_files_isSet = true;
}

bool OAIGetQuotesForDocumentsBody::is_files_Set() const{
    return m_files_isSet;
}

bool OAIGetQuotesForDocumentsBody::is_files_Valid() const{
    return m_files_isValid;
}

bool OAIGetQuotesForDocumentsBody::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_files.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetQuotesForDocumentsBody::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
