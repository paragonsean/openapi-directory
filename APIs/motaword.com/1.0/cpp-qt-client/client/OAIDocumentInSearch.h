/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDocumentInSearch.h
 *
 * 
 */

#ifndef OAIDocumentInSearch_H
#define OAIDocumentInSearch_H

#include <QJsonObject>

#include "OAIDocumentLinks.h"
#include "OAIManualFile.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDocumentLinks;
class OAIManualFile;

class OAIDocumentInSearch : public OAIObject {
public:
    OAIDocumentInSearch();
    OAIDocumentInSearch(QString json);
    ~OAIDocumentInSearch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getFileType() const;
    void setFileType(const QString &file_type);
    bool is_file_type_Set() const;
    bool is_file_type_Valid() const;

    bool isHasCustomPackage() const;
    void setHasCustomPackage(const bool &has_custom_package);
    bool is_has_custom_package_Set() const;
    bool is_has_custom_package_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIDocumentLinks getLinks() const;
    void setLinks(const OAIDocumentLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QList<OAIManualFile> getManualFiles() const;
    void setManualFiles(const QList<OAIManualFile> &manual_files);
    bool is_manual_files_Set() const;
    bool is_manual_files_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint64 getProjectId() const;
    void setProjectId(const qint64 &project_id);
    bool is_project_id_Set() const;
    bool is_project_id_Valid() const;

    bool isReviewInManualEditor() const;
    void setReviewInManualEditor(const bool &review_in_manual_editor);
    bool is_review_in_manual_editor_Set() const;
    bool is_review_in_manual_editor_Valid() const;

    OAIObject getScheme() const;
    void setScheme(const OAIObject &scheme);
    bool is_scheme_Set() const;
    bool is_scheme_Valid() const;

    float getSearchScore() const;
    void setSearchScore(const float &search_score);
    bool is_search_score_Set() const;
    bool is_search_score_Valid() const;

    QString getSourceLanguage() const;
    void setSourceLanguage(const QString &source_language);
    bool is_source_language_Set() const;
    bool is_source_language_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QList<QString> getTargetLanguages() const;
    void setTargetLanguages(const QList<QString> &target_languages);
    bool is_target_languages_Set() const;
    bool is_target_languages_Valid() const;

    qint64 getUploadedAt() const;
    void setUploadedAt(const qint64 &uploaded_at);
    bool is_uploaded_at_Set() const;
    bool is_uploaded_at_Valid() const;

    qint64 getWordCount() const;
    void setWordCount(const qint64 &word_count);
    bool is_word_count_Set() const;
    bool is_word_count_Valid() const;

    QString getSearchResultReason() const;
    void setSearchResultReason(const QString &search_result_reason);
    bool is_search_result_reason_Set() const;
    bool is_search_result_reason_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_file_type;
    bool m_file_type_isSet;
    bool m_file_type_isValid;

    bool m_has_custom_package;
    bool m_has_custom_package_isSet;
    bool m_has_custom_package_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIDocumentLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QList<OAIManualFile> m_manual_files;
    bool m_manual_files_isSet;
    bool m_manual_files_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint64 m_project_id;
    bool m_project_id_isSet;
    bool m_project_id_isValid;

    bool m_review_in_manual_editor;
    bool m_review_in_manual_editor_isSet;
    bool m_review_in_manual_editor_isValid;

    OAIObject m_scheme;
    bool m_scheme_isSet;
    bool m_scheme_isValid;

    float m_search_score;
    bool m_search_score_isSet;
    bool m_search_score_isValid;

    QString m_source_language;
    bool m_source_language_isSet;
    bool m_source_language_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QList<QString> m_target_languages;
    bool m_target_languages_isSet;
    bool m_target_languages_isValid;

    qint64 m_uploaded_at;
    bool m_uploaded_at_isSet;
    bool m_uploaded_at_isValid;

    qint64 m_word_count;
    bool m_word_count_isSet;
    bool m_word_count_isValid;

    QString m_search_result_reason;
    bool m_search_result_reason_isSet;
    bool m_search_result_reason_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDocumentInSearch)

#endif // OAIDocumentInSearch_H
