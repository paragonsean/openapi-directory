/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUser_vendor.h
 *
 * 
 */

#ifndef OAIUser_vendor_H
#define OAIUser_vendor_H

#include <QJsonObject>

#include "OAILanguagePair.h"
#include "OAIProfileSurvey.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILanguagePair;

class OAIUser_vendor : public OAIObject {
public:
    OAIUser_vendor();
    OAIUser_vendor(QString json);
    ~OAIUser_vendor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCanWorkManualFiles() const;
    void setCanWorkManualFiles(const bool &can_work_manual_files);
    bool is_can_work_manual_files_Set() const;
    bool is_can_work_manual_files_Valid() const;

    float getEmailOpenRate() const;
    void setEmailOpenRate(const float &email_open_rate);
    bool is_email_open_rate_Set() const;
    bool is_email_open_rate_Valid() const;

    bool isIsFrozen() const;
    void setIsFrozen(const bool &is_frozen);
    bool is_is_frozen_Set() const;
    bool is_is_frozen_Valid() const;

    bool isIsProofreader() const;
    void setIsProofreader(const bool &is_proofreader);
    bool is_is_proofreader_Set() const;
    bool is_is_proofreader_Valid() const;

    QList<OAILanguagePair> getLanguagePairs() const;
    void setLanguagePairs(const QList<OAILanguagePair> &language_pairs);
    bool is_language_pairs_Set() const;
    bool is_language_pairs_Valid() const;

    QString getNativeLanguage() const;
    void setNativeLanguage(const QString &native_language);
    bool is_native_language_Set() const;
    bool is_native_language_Valid() const;

    float getPamTqs() const;
    void setPamTqs(const float &pam_tqs);
    bool is_pam_tqs_Set() const;
    bool is_pam_tqs_Valid() const;

    QString getPaypalEmail() const;
    void setPaypalEmail(const QString &paypal_email);
    bool is_paypal_email_Set() const;
    bool is_paypal_email_Valid() const;

    OAIProfileSurvey getProfileSurvey() const;
    void setProfileSurvey(const OAIProfileSurvey &profile_survey);
    bool is_profile_survey_Set() const;
    bool is_profile_survey_Valid() const;

    bool isRequire1099() const;
    void setRequire1099(const bool &require_1099);
    bool is_require_1099_Set() const;
    bool is_require_1099_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getTmsUserName() const;
    void setTmsUserName(const QString &tms_user_name);
    bool is_tms_user_name_Set() const;
    bool is_tms_user_name_Valid() const;

    QString getVendorType() const;
    void setVendorType(const QString &vendor_type);
    bool is_vendor_type_Set() const;
    bool is_vendor_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_can_work_manual_files;
    bool m_can_work_manual_files_isSet;
    bool m_can_work_manual_files_isValid;

    float m_email_open_rate;
    bool m_email_open_rate_isSet;
    bool m_email_open_rate_isValid;

    bool m_is_frozen;
    bool m_is_frozen_isSet;
    bool m_is_frozen_isValid;

    bool m_is_proofreader;
    bool m_is_proofreader_isSet;
    bool m_is_proofreader_isValid;

    QList<OAILanguagePair> m_language_pairs;
    bool m_language_pairs_isSet;
    bool m_language_pairs_isValid;

    QString m_native_language;
    bool m_native_language_isSet;
    bool m_native_language_isValid;

    float m_pam_tqs;
    bool m_pam_tqs_isSet;
    bool m_pam_tqs_isValid;

    QString m_paypal_email;
    bool m_paypal_email_isSet;
    bool m_paypal_email_isValid;

    OAIProfileSurvey m_profile_survey;
    bool m_profile_survey_isSet;
    bool m_profile_survey_isValid;

    bool m_require_1099;
    bool m_require_1099_isSet;
    bool m_require_1099_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_tms_user_name;
    bool m_tms_user_name_isSet;
    bool m_tms_user_name_isValid;

    QString m_vendor_type;
    bool m_vendor_type_isSet;
    bool m_vendor_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUser_vendor)

#endif // OAIUser_vendor_H
