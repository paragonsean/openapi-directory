/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserUpdateContent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserUpdateContent::OAIUserUpdateContent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserUpdateContent::OAIUserUpdateContent() {
    this->initializeModel();
}

OAIUserUpdateContent::~OAIUserUpdateContent() {}

void OAIUserUpdateContent::initializeModel() {

    m_city_isSet = false;
    m_city_isValid = false;

    m_country_isSet = false;
    m_country_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_street_isSet = false;
    m_street_isValid = false;

    m_zip_isSet = false;
    m_zip_isValid = false;

    m_birthday_isSet = false;
    m_birthday_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_notifications_isSet = false;
    m_notifications_isValid = false;

    m_notify_isSet = false;
    m_notify_isValid = false;

    m_paypal_email_isSet = false;
    m_paypal_email_isValid = false;

    m_require_1099_isSet = false;
    m_require_1099_isValid = false;

    m_user_groups_isSet = false;
    m_user_groups_isValid = false;
}

void OAIUserUpdateContent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserUpdateContent::fromJsonObject(QJsonObject json) {

    m_city_isValid = ::OpenAPI::fromJsonValue(m_city, json[QString("city")]);
    m_city_isSet = !json[QString("city")].isNull() && m_city_isValid;

    m_country_isValid = ::OpenAPI::fromJsonValue(m_country, json[QString("country")]);
    m_country_isSet = !json[QString("country")].isNull() && m_country_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_street_isValid = ::OpenAPI::fromJsonValue(m_street, json[QString("street")]);
    m_street_isSet = !json[QString("street")].isNull() && m_street_isValid;

    m_zip_isValid = ::OpenAPI::fromJsonValue(m_zip, json[QString("zip")]);
    m_zip_isSet = !json[QString("zip")].isNull() && m_zip_isValid;

    m_birthday_isValid = ::OpenAPI::fromJsonValue(m_birthday, json[QString("birthday")]);
    m_birthday_isSet = !json[QString("birthday")].isNull() && m_birthday_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_notifications_isValid = ::OpenAPI::fromJsonValue(m_notifications, json[QString("notifications")]);
    m_notifications_isSet = !json[QString("notifications")].isNull() && m_notifications_isValid;

    m_notify_isValid = ::OpenAPI::fromJsonValue(m_notify, json[QString("notify")]);
    m_notify_isSet = !json[QString("notify")].isNull() && m_notify_isValid;

    m_paypal_email_isValid = ::OpenAPI::fromJsonValue(m_paypal_email, json[QString("paypal_email")]);
    m_paypal_email_isSet = !json[QString("paypal_email")].isNull() && m_paypal_email_isValid;

    m_require_1099_isValid = ::OpenAPI::fromJsonValue(m_require_1099, json[QString("require_1099")]);
    m_require_1099_isSet = !json[QString("require_1099")].isNull() && m_require_1099_isValid;

    m_user_groups_isValid = ::OpenAPI::fromJsonValue(m_user_groups, json[QString("user_groups")]);
    m_user_groups_isSet = !json[QString("user_groups")].isNull() && m_user_groups_isValid;
}

QString OAIUserUpdateContent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserUpdateContent::asJsonObject() const {
    QJsonObject obj;
    if (m_city_isSet) {
        obj.insert(QString("city"), ::OpenAPI::toJsonValue(m_city));
    }
    if (m_country_isSet) {
        obj.insert(QString("country"), ::OpenAPI::toJsonValue(m_country));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_street_isSet) {
        obj.insert(QString("street"), ::OpenAPI::toJsonValue(m_street));
    }
    if (m_zip_isSet) {
        obj.insert(QString("zip"), ::OpenAPI::toJsonValue(m_zip));
    }
    if (m_birthday_isSet) {
        obj.insert(QString("birthday"), ::OpenAPI::toJsonValue(m_birthday));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_notifications.isSet()) {
        obj.insert(QString("notifications"), ::OpenAPI::toJsonValue(m_notifications));
    }
    if (m_notify_isSet) {
        obj.insert(QString("notify"), ::OpenAPI::toJsonValue(m_notify));
    }
    if (m_paypal_email_isSet) {
        obj.insert(QString("paypal_email"), ::OpenAPI::toJsonValue(m_paypal_email));
    }
    if (m_require_1099_isSet) {
        obj.insert(QString("require_1099"), ::OpenAPI::toJsonValue(m_require_1099));
    }
    if (m_user_groups.size() > 0) {
        obj.insert(QString("user_groups"), ::OpenAPI::toJsonValue(m_user_groups));
    }
    return obj;
}

QString OAIUserUpdateContent::getCity() const {
    return m_city;
}
void OAIUserUpdateContent::setCity(const QString &city) {
    m_city = city;
    m_city_isSet = true;
}

bool OAIUserUpdateContent::is_city_Set() const{
    return m_city_isSet;
}

bool OAIUserUpdateContent::is_city_Valid() const{
    return m_city_isValid;
}

QString OAIUserUpdateContent::getCountry() const {
    return m_country;
}
void OAIUserUpdateContent::setCountry(const QString &country) {
    m_country = country;
    m_country_isSet = true;
}

bool OAIUserUpdateContent::is_country_Set() const{
    return m_country_isSet;
}

bool OAIUserUpdateContent::is_country_Valid() const{
    return m_country_isValid;
}

QString OAIUserUpdateContent::getPhone() const {
    return m_phone;
}
void OAIUserUpdateContent::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIUserUpdateContent::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIUserUpdateContent::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIUserUpdateContent::getState() const {
    return m_state;
}
void OAIUserUpdateContent::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIUserUpdateContent::is_state_Set() const{
    return m_state_isSet;
}

bool OAIUserUpdateContent::is_state_Valid() const{
    return m_state_isValid;
}

QString OAIUserUpdateContent::getStreet() const {
    return m_street;
}
void OAIUserUpdateContent::setStreet(const QString &street) {
    m_street = street;
    m_street_isSet = true;
}

bool OAIUserUpdateContent::is_street_Set() const{
    return m_street_isSet;
}

bool OAIUserUpdateContent::is_street_Valid() const{
    return m_street_isValid;
}

QString OAIUserUpdateContent::getZip() const {
    return m_zip;
}
void OAIUserUpdateContent::setZip(const QString &zip) {
    m_zip = zip;
    m_zip_isSet = true;
}

bool OAIUserUpdateContent::is_zip_Set() const{
    return m_zip_isSet;
}

bool OAIUserUpdateContent::is_zip_Valid() const{
    return m_zip_isValid;
}

QDate OAIUserUpdateContent::getBirthday() const {
    return m_birthday;
}
void OAIUserUpdateContent::setBirthday(const QDate &birthday) {
    m_birthday = birthday;
    m_birthday_isSet = true;
}

bool OAIUserUpdateContent::is_birthday_Set() const{
    return m_birthday_isSet;
}

bool OAIUserUpdateContent::is_birthday_Valid() const{
    return m_birthday_isValid;
}

QString OAIUserUpdateContent::getEmail() const {
    return m_email;
}
void OAIUserUpdateContent::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUserUpdateContent::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUserUpdateContent::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIUserUpdateContent::getFirstName() const {
    return m_first_name;
}
void OAIUserUpdateContent::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUserUpdateContent::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUserUpdateContent::is_first_name_Valid() const{
    return m_first_name_isValid;
}

qint64 OAIUserUpdateContent::getId() const {
    return m_id;
}
void OAIUserUpdateContent::setId(const qint64 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUserUpdateContent::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUserUpdateContent::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIUserUpdateContent::getLastName() const {
    return m_last_name;
}
void OAIUserUpdateContent::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUserUpdateContent::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUserUpdateContent::is_last_name_Valid() const{
    return m_last_name_isValid;
}

OAIUserUpdateContent_allOf_notifications OAIUserUpdateContent::getNotifications() const {
    return m_notifications;
}
void OAIUserUpdateContent::setNotifications(const OAIUserUpdateContent_allOf_notifications &notifications) {
    m_notifications = notifications;
    m_notifications_isSet = true;
}

bool OAIUserUpdateContent::is_notifications_Set() const{
    return m_notifications_isSet;
}

bool OAIUserUpdateContent::is_notifications_Valid() const{
    return m_notifications_isValid;
}

bool OAIUserUpdateContent::isNotify() const {
    return m_notify;
}
void OAIUserUpdateContent::setNotify(const bool &notify) {
    m_notify = notify;
    m_notify_isSet = true;
}

bool OAIUserUpdateContent::is_notify_Set() const{
    return m_notify_isSet;
}

bool OAIUserUpdateContent::is_notify_Valid() const{
    return m_notify_isValid;
}

QString OAIUserUpdateContent::getPaypalEmail() const {
    return m_paypal_email;
}
void OAIUserUpdateContent::setPaypalEmail(const QString &paypal_email) {
    m_paypal_email = paypal_email;
    m_paypal_email_isSet = true;
}

bool OAIUserUpdateContent::is_paypal_email_Set() const{
    return m_paypal_email_isSet;
}

bool OAIUserUpdateContent::is_paypal_email_Valid() const{
    return m_paypal_email_isValid;
}

bool OAIUserUpdateContent::isRequire1099() const {
    return m_require_1099;
}
void OAIUserUpdateContent::setRequire1099(const bool &require_1099) {
    m_require_1099 = require_1099;
    m_require_1099_isSet = true;
}

bool OAIUserUpdateContent::is_require_1099_Set() const{
    return m_require_1099_isSet;
}

bool OAIUserUpdateContent::is_require_1099_Valid() const{
    return m_require_1099_isValid;
}

QList<qint64> OAIUserUpdateContent::getUserGroups() const {
    return m_user_groups;
}
void OAIUserUpdateContent::setUserGroups(const QList<qint64> &user_groups) {
    m_user_groups = user_groups;
    m_user_groups_isSet = true;
}

bool OAIUserUpdateContent::is_user_groups_Set() const{
    return m_user_groups_isSet;
}

bool OAIUserUpdateContent::is_user_groups_Valid() const{
    return m_user_groups_isValid;
}

bool OAIUserUpdateContent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_street_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_zip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_birthday_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notifications.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_notify_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_paypal_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_require_1099_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_groups.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserUpdateContent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
