/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInvitedVendor.h
 *
 * 
 */

#ifndef OAIInvitedVendor_H
#define OAIInvitedVendor_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInvitedVendor : public OAIObject {
public:
    OAIInvitedVendor();
    OAIInvitedVendor(QString json);
    ~OAIInvitedVendor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAction() const;
    void setAction(const QString &action);
    bool is_action_Set() const;
    bool is_action_Valid() const;

    double getEmailOpenRate() const;
    void setEmailOpenRate(const double &email_open_rate);
    bool is_email_open_rate_Set() const;
    bool is_email_open_rate_Valid() const;

    bool isIsEntered() const;
    void setIsEntered(const bool &is_entered);
    bool is_is_entered_Set() const;
    bool is_is_entered_Valid() const;

    bool isIsGetPaid() const;
    void setIsGetPaid(const bool &is_get_paid);
    bool is_is_get_paid_Set() const;
    bool is_is_get_paid_Valid() const;

    bool isIsWorked() const;
    void setIsWorked(const bool &is_worked);
    bool is_is_worked_Set() const;
    bool is_is_worked_Valid() const;

    bool isIsWorkedInAnyProject() const;
    void setIsWorkedInAnyProject(const bool &is_worked_in_any_project);
    bool is_is_worked_in_any_project_Set() const;
    bool is_is_worked_in_any_project_Valid() const;

    QDate getLastProjectDate() const;
    void setLastProjectDate(const QDate &last_project_date);
    bool is_last_project_date_Set() const;
    bool is_last_project_date_Valid() const;

    double getProjectStatusWhenInteracted() const;
    void setProjectStatusWhenInteracted(const double &project_status_when_interacted);
    bool is_project_status_when_interacted_Set() const;
    bool is_project_status_when_interacted_Valid() const;

    QDate getRegistrationDate() const;
    void setRegistrationDate(const QDate &registration_date);
    bool is_registration_date_Set() const;
    bool is_registration_date_Valid() const;

    double getResponsiveness() const;
    void setResponsiveness(const double &responsiveness);
    bool is_responsiveness_Set() const;
    bool is_responsiveness_Valid() const;

    double getUserId() const;
    void setUserId(const double &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    double getVendorId() const;
    void setVendorId(const double &vendor_id);
    bool is_vendor_id_Set() const;
    bool is_vendor_id_Valid() const;

    QString getVendorName() const;
    void setVendorName(const QString &vendor_name);
    bool is_vendor_name_Set() const;
    bool is_vendor_name_Valid() const;

    QString getVendorType() const;
    void setVendorType(const QString &vendor_type);
    bool is_vendor_type_Set() const;
    bool is_vendor_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_action;
    bool m_action_isSet;
    bool m_action_isValid;

    double m_email_open_rate;
    bool m_email_open_rate_isSet;
    bool m_email_open_rate_isValid;

    bool m_is_entered;
    bool m_is_entered_isSet;
    bool m_is_entered_isValid;

    bool m_is_get_paid;
    bool m_is_get_paid_isSet;
    bool m_is_get_paid_isValid;

    bool m_is_worked;
    bool m_is_worked_isSet;
    bool m_is_worked_isValid;

    bool m_is_worked_in_any_project;
    bool m_is_worked_in_any_project_isSet;
    bool m_is_worked_in_any_project_isValid;

    QDate m_last_project_date;
    bool m_last_project_date_isSet;
    bool m_last_project_date_isValid;

    double m_project_status_when_interacted;
    bool m_project_status_when_interacted_isSet;
    bool m_project_status_when_interacted_isValid;

    QDate m_registration_date;
    bool m_registration_date_isSet;
    bool m_registration_date_isValid;

    double m_responsiveness;
    bool m_responsiveness_isSet;
    bool m_responsiveness_isValid;

    double m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    double m_vendor_id;
    bool m_vendor_id_isSet;
    bool m_vendor_id_isValid;

    QString m_vendor_name;
    bool m_vendor_name_isSet;
    bool m_vendor_name_isValid;

    QString m_vendor_type;
    bool m_vendor_type_isSet;
    bool m_vendor_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInvitedVendor)

#endif // OAIInvitedVendor_H
