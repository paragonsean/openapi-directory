/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIActivity.h
 *
 * 
 */

#ifndef OAIActivity_H
#define OAIActivity_H

#include <QJsonObject>

#include "OAIActivityLinks.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIActivityLinks;

class OAIActivity : public OAIObject {
public:
    OAIActivity();
    OAIActivity(QString json);
    ~OAIActivity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getActivityAt() const;
    void setActivityAt(const qint64 &activity_at);
    bool is_activity_at_Set() const;
    bool is_activity_at_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIActivityLinks getLinks() const;
    void setLinks(const OAIActivityLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getSourceText() const;
    void setSourceText(const QString &source_text);
    bool is_source_text_Set() const;
    bool is_source_text_Valid() const;

    QString getTargetText() const;
    void setTargetText(const QString &target_text);
    bool is_target_text_Set() const;
    bool is_target_text_Valid() const;

    qint64 getTranslator() const;
    void setTranslator(const qint64 &translator);
    bool is_translator_Set() const;
    bool is_translator_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_activity_at;
    bool m_activity_at_isSet;
    bool m_activity_at_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIActivityLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_source_text;
    bool m_source_text_isSet;
    bool m_source_text_isValid;

    QString m_target_text;
    bool m_target_text_isSet;
    bool m_target_text_isValid;

    qint64 m_translator;
    bool m_translator_isSet;
    bool m_translator_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIActivity)

#endif // OAIActivity_H
