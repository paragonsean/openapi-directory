/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINotificationSubscription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINotificationSubscription::OAINotificationSubscription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINotificationSubscription::OAINotificationSubscription() {
    this->initializeModel();
}

OAINotificationSubscription::~OAINotificationSubscription() {}

void OAINotificationSubscription::initializeModel() {

    m_device_isSet = false;
    m_device_isValid = false;

    m_endpoint_isSet = false;
    m_endpoint_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAINotificationSubscription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINotificationSubscription::fromJsonObject(QJsonObject json) {

    m_device_isValid = ::OpenAPI::fromJsonValue(m_device, json[QString("device")]);
    m_device_isSet = !json[QString("device")].isNull() && m_device_isValid;

    m_endpoint_isValid = ::OpenAPI::fromJsonValue(m_endpoint, json[QString("endpoint")]);
    m_endpoint_isSet = !json[QString("endpoint")].isNull() && m_endpoint_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAINotificationSubscription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINotificationSubscription::asJsonObject() const {
    QJsonObject obj;
    if (m_device_isSet) {
        obj.insert(QString("device"), ::OpenAPI::toJsonValue(m_device));
    }
    if (m_endpoint_isSet) {
        obj.insert(QString("endpoint"), ::OpenAPI::toJsonValue(m_endpoint));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAINotificationSubscription::getDevice() const {
    return m_device;
}
void OAINotificationSubscription::setDevice(const QString &device) {
    m_device = device;
    m_device_isSet = true;
}

bool OAINotificationSubscription::is_device_Set() const{
    return m_device_isSet;
}

bool OAINotificationSubscription::is_device_Valid() const{
    return m_device_isValid;
}

QString OAINotificationSubscription::getEndpoint() const {
    return m_endpoint;
}
void OAINotificationSubscription::setEndpoint(const QString &endpoint) {
    m_endpoint = endpoint;
    m_endpoint_isSet = true;
}

bool OAINotificationSubscription::is_endpoint_Set() const{
    return m_endpoint_isSet;
}

bool OAINotificationSubscription::is_endpoint_Valid() const{
    return m_endpoint_isValid;
}

QString OAINotificationSubscription::getType() const {
    return m_type;
}
void OAINotificationSubscription::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAINotificationSubscription::is_type_Set() const{
    return m_type_isSet;
}

bool OAINotificationSubscription::is_type_Valid() const{
    return m_type_isValid;
}

bool OAINotificationSubscription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_device_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_endpoint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINotificationSubscription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
