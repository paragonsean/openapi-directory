/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISurveyQuestion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISurveyQuestion::OAISurveyQuestion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISurveyQuestion::OAISurveyQuestion() {
    this->initializeModel();
}

OAISurveyQuestion::~OAISurveyQuestion() {}

void OAISurveyQuestion::initializeModel() {

    m_answers_isSet = false;
    m_answers_isValid = false;

    m_question_isSet = false;
    m_question_isValid = false;

    m_question_answers_isSet = false;
    m_question_answers_isValid = false;
}

void OAISurveyQuestion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISurveyQuestion::fromJsonObject(QJsonObject json) {

    m_answers_isValid = ::OpenAPI::fromJsonValue(m_answers, json[QString("answers")]);
    m_answers_isSet = !json[QString("answers")].isNull() && m_answers_isValid;

    m_question_isValid = ::OpenAPI::fromJsonValue(m_question, json[QString("question")]);
    m_question_isSet = !json[QString("question")].isNull() && m_question_isValid;

    m_question_answers_isValid = ::OpenAPI::fromJsonValue(m_question_answers, json[QString("question_answers")]);
    m_question_answers_isSet = !json[QString("question_answers")].isNull() && m_question_answers_isValid;
}

QString OAISurveyQuestion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISurveyQuestion::asJsonObject() const {
    QJsonObject obj;
    if (m_answers.size() > 0) {
        obj.insert(QString("answers"), ::OpenAPI::toJsonValue(m_answers));
    }
    if (m_question.isSet()) {
        obj.insert(QString("question"), ::OpenAPI::toJsonValue(m_question));
    }
    if (m_question_answers.size() > 0) {
        obj.insert(QString("question_answers"), ::OpenAPI::toJsonValue(m_question_answers));
    }
    return obj;
}

QList<OAISimpleModel> OAISurveyQuestion::getAnswers() const {
    return m_answers;
}
void OAISurveyQuestion::setAnswers(const QList<OAISimpleModel> &answers) {
    m_answers = answers;
    m_answers_isSet = true;
}

bool OAISurveyQuestion::is_answers_Set() const{
    return m_answers_isSet;
}

bool OAISurveyQuestion::is_answers_Valid() const{
    return m_answers_isValid;
}

OAISurveyQuestion_question OAISurveyQuestion::getQuestion() const {
    return m_question;
}
void OAISurveyQuestion::setQuestion(const OAISurveyQuestion_question &question) {
    m_question = question;
    m_question_isSet = true;
}

bool OAISurveyQuestion::is_question_Set() const{
    return m_question_isSet;
}

bool OAISurveyQuestion::is_question_Valid() const{
    return m_question_isValid;
}

QList<OAISimpleModel> OAISurveyQuestion::getQuestionAnswers() const {
    return m_question_answers;
}
void OAISurveyQuestion::setQuestionAnswers(const QList<OAISimpleModel> &question_answers) {
    m_question_answers = question_answers;
    m_question_answers_isSet = true;
}

bool OAISurveyQuestion::is_question_answers_Set() const{
    return m_question_answers_isSet;
}

bool OAISurveyQuestion::is_question_answers_Valid() const{
    return m_question_answers_isValid;
}

bool OAISurveyQuestion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_answers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_question.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_question_answers.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISurveyQuestion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
