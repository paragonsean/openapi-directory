/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectId::OAIProjectId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectId::OAIProjectId() {
    this->initializeModel();
}

OAIProjectId::~OAIProjectId() {}

void OAIProjectId::initializeModel() {

    m_internal_id_isSet = false;
    m_internal_id_isValid = false;

    m_public_id_isSet = false;
    m_public_id_isValid = false;
}

void OAIProjectId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectId::fromJsonObject(QJsonObject json) {

    m_internal_id_isValid = ::OpenAPI::fromJsonValue(m_internal_id, json[QString("internal-id")]);
    m_internal_id_isSet = !json[QString("internal-id")].isNull() && m_internal_id_isValid;

    m_public_id_isValid = ::OpenAPI::fromJsonValue(m_public_id, json[QString("public-id")]);
    m_public_id_isSet = !json[QString("public-id")].isNull() && m_public_id_isValid;
}

QString OAIProjectId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectId::asJsonObject() const {
    QJsonObject obj;
    if (m_internal_id_isSet) {
        obj.insert(QString("internal-id"), ::OpenAPI::toJsonValue(m_internal_id));
    }
    if (m_public_id_isSet) {
        obj.insert(QString("public-id"), ::OpenAPI::toJsonValue(m_public_id));
    }
    return obj;
}

qint64 OAIProjectId::getInternalId() const {
    return m_internal_id;
}
void OAIProjectId::setInternalId(const qint64 &internal_id) {
    m_internal_id = internal_id;
    m_internal_id_isSet = true;
}

bool OAIProjectId::is_internal_id_Set() const{
    return m_internal_id_isSet;
}

bool OAIProjectId::is_internal_id_Valid() const{
    return m_internal_id_isValid;
}

qint64 OAIProjectId::getPublicId() const {
    return m_public_id;
}
void OAIProjectId::setPublicId(const qint64 &public_id) {
    m_public_id = public_id;
    m_public_id_isSet = true;
}

bool OAIProjectId::is_public_id_Set() const{
    return m_public_id_isSet;
}

bool OAIProjectId::is_public_id_Valid() const{
    return m_public_id_isValid;
}

bool OAIProjectId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_internal_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_public_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
