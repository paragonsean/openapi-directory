/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQaFilter.h
 *
 * 
 */

#ifndef OAIQaFilter_H
#define OAIQaFilter_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQaFilter : public OAIObject {
public:
    OAIQaFilter();
    OAIQaFilter(QString json);
    ~OAIQaFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getBudgetCodes() const;
    void setBudgetCodes(const QList<QString> &budget_codes);
    bool is_budget_codes_Set() const;
    bool is_budget_codes_Valid() const;

    QList<QString> getCategories() const;
    void setCategories(const QList<QString> &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    QList<double> getClients() const;
    void setClients(const QList<double> &clients);
    bool is_clients_Set() const;
    bool is_clients_Valid() const;

    QDateTime getDateFrom() const;
    void setDateFrom(const QDateTime &date_from);
    bool is_date_from_Set() const;
    bool is_date_from_Valid() const;

    QDateTime getDateTo() const;
    void setDateTo(const QDateTime &date_to);
    bool is_date_to_Set() const;
    bool is_date_to_Valid() const;

    QList<double> getDocuments() const;
    void setDocuments(const QList<double> &documents);
    bool is_documents_Set() const;
    bool is_documents_Valid() const;

    QList<double> getProjects() const;
    void setProjects(const QList<double> &projects);
    bool is_projects_Set() const;
    bool is_projects_Valid() const;

    QList<QString> getSeverities() const;
    void setSeverities(const QList<QString> &severities);
    bool is_severities_Set() const;
    bool is_severities_Valid() const;

    QList<QString> getSourceLanguages() const;
    void setSourceLanguages(const QList<QString> &source_languages);
    bool is_source_languages_Set() const;
    bool is_source_languages_Valid() const;

    QList<QString> getSubjects() const;
    void setSubjects(const QList<QString> &subjects);
    bool is_subjects_Set() const;
    bool is_subjects_Valid() const;

    QList<QString> getTargetLanguages() const;
    void setTargetLanguages(const QList<QString> &target_languages);
    bool is_target_languages_Set() const;
    bool is_target_languages_Valid() const;

    QList<double> getVendors() const;
    void setVendors(const QList<double> &vendors);
    bool is_vendors_Set() const;
    bool is_vendors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_budget_codes;
    bool m_budget_codes_isSet;
    bool m_budget_codes_isValid;

    QList<QString> m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    QList<double> m_clients;
    bool m_clients_isSet;
    bool m_clients_isValid;

    QDateTime m_date_from;
    bool m_date_from_isSet;
    bool m_date_from_isValid;

    QDateTime m_date_to;
    bool m_date_to_isSet;
    bool m_date_to_isValid;

    QList<double> m_documents;
    bool m_documents_isSet;
    bool m_documents_isValid;

    QList<double> m_projects;
    bool m_projects_isSet;
    bool m_projects_isValid;

    QList<QString> m_severities;
    bool m_severities_isSet;
    bool m_severities_isValid;

    QList<QString> m_source_languages;
    bool m_source_languages_isSet;
    bool m_source_languages_isValid;

    QList<QString> m_subjects;
    bool m_subjects_isSet;
    bool m_subjects_isValid;

    QList<QString> m_target_languages;
    bool m_target_languages_isSet;
    bool m_target_languages_isValid;

    QList<double> m_vendors;
    bool m_vendors_isSet;
    bool m_vendors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQaFilter)

#endif // OAIQaFilter_H
