/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInstantTranslationFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInstantTranslationFilter::OAIInstantTranslationFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInstantTranslationFilter::OAIInstantTranslationFilter() {
    this->initializeModel();
}

OAIInstantTranslationFilter::~OAIInstantTranslationFilter() {}

void OAIInstantTranslationFilter::initializeModel() {

    m_skip_mt_isSet = false;
    m_skip_mt_isValid = false;

    m_skip_post_edit_isSet = false;
    m_skip_post_edit_isValid = false;
}

void OAIInstantTranslationFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInstantTranslationFilter::fromJsonObject(QJsonObject json) {

    m_skip_mt_isValid = ::OpenAPI::fromJsonValue(m_skip_mt, json[QString("skipMt")]);
    m_skip_mt_isSet = !json[QString("skipMt")].isNull() && m_skip_mt_isValid;

    m_skip_post_edit_isValid = ::OpenAPI::fromJsonValue(m_skip_post_edit, json[QString("skipPostEdit")]);
    m_skip_post_edit_isSet = !json[QString("skipPostEdit")].isNull() && m_skip_post_edit_isValid;
}

QString OAIInstantTranslationFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInstantTranslationFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_skip_mt.size() > 0) {
        obj.insert(QString("skipMt"), ::OpenAPI::toJsonValue(m_skip_mt));
    }
    if (m_skip_post_edit.size() > 0) {
        obj.insert(QString("skipPostEdit"), ::OpenAPI::toJsonValue(m_skip_post_edit));
    }
    return obj;
}

QList<QString> OAIInstantTranslationFilter::getSkipMt() const {
    return m_skip_mt;
}
void OAIInstantTranslationFilter::setSkipMt(const QList<QString> &skip_mt) {
    m_skip_mt = skip_mt;
    m_skip_mt_isSet = true;
}

bool OAIInstantTranslationFilter::is_skip_mt_Set() const{
    return m_skip_mt_isSet;
}

bool OAIInstantTranslationFilter::is_skip_mt_Valid() const{
    return m_skip_mt_isValid;
}

QList<QString> OAIInstantTranslationFilter::getSkipPostEdit() const {
    return m_skip_post_edit;
}
void OAIInstantTranslationFilter::setSkipPostEdit(const QList<QString> &skip_post_edit) {
    m_skip_post_edit = skip_post_edit;
    m_skip_post_edit_isSet = true;
}

bool OAIInstantTranslationFilter::is_skip_post_edit_Set() const{
    return m_skip_post_edit_isSet;
}

bool OAIInstantTranslationFilter::is_skip_post_edit_Valid() const{
    return m_skip_post_edit_isValid;
}

bool OAIInstantTranslationFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_skip_mt.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_skip_post_edit.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInstantTranslationFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
