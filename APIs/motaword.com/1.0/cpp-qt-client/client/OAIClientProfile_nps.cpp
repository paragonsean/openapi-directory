/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientProfile_nps.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientProfile_nps::OAIClientProfile_nps(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientProfile_nps::OAIClientProfile_nps() {
    this->initializeModel();
}

OAIClientProfile_nps::~OAIClientProfile_nps() {}

void OAIClientProfile_nps::initializeModel() {

    m_average_isSet = false;
    m_average_isValid = false;

    m_last_isSet = false;
    m_last_isValid = false;
}

void OAIClientProfile_nps::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientProfile_nps::fromJsonObject(QJsonObject json) {

    m_average_isValid = ::OpenAPI::fromJsonValue(m_average, json[QString("average")]);
    m_average_isSet = !json[QString("average")].isNull() && m_average_isValid;

    m_last_isValid = ::OpenAPI::fromJsonValue(m_last, json[QString("last")]);
    m_last_isSet = !json[QString("last")].isNull() && m_last_isValid;
}

QString OAIClientProfile_nps::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientProfile_nps::asJsonObject() const {
    QJsonObject obj;
    if (m_average.isSet()) {
        obj.insert(QString("average"), ::OpenAPI::toJsonValue(m_average));
    }
    if (m_last.isSet()) {
        obj.insert(QString("last"), ::OpenAPI::toJsonValue(m_last));
    }
    return obj;
}

OAIClientProfile_nps_average OAIClientProfile_nps::getAverage() const {
    return m_average;
}
void OAIClientProfile_nps::setAverage(const OAIClientProfile_nps_average &average) {
    m_average = average;
    m_average_isSet = true;
}

bool OAIClientProfile_nps::is_average_Set() const{
    return m_average_isSet;
}

bool OAIClientProfile_nps::is_average_Valid() const{
    return m_average_isValid;
}

OAIClientProfile_nps_last OAIClientProfile_nps::getLast() const {
    return m_last;
}
void OAIClientProfile_nps::setLast(const OAIClientProfile_nps_last &last) {
    m_last = last;
    m_last_isSet = true;
}

bool OAIClientProfile_nps::is_last_Set() const{
    return m_last_isSet;
}

bool OAIClientProfile_nps::is_last_Valid() const{
    return m_last_isValid;
}

bool OAIClientProfile_nps::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientProfile_nps::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
