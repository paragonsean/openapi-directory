/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectSource.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectSource::OAIProjectSource(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectSource::OAIProjectSource() {
    this->initializeModel();
}

OAIProjectSource::~OAIProjectSource() {}

void OAIProjectSource::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProjectSource::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProjectSource::fromJson(QString jsonString) {
    
    if ( jsonString.compare("api", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectSource::API;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("web", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProjectSource::WEB;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProjectSource::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProjectSource::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProjectSource::API:
            val = "api";
            break;
        case eOAIProjectSource::WEB:
            val = "web";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProjectSource::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProjectSource::eOAIProjectSource OAIProjectSource::getValue() const {
    return m_value;
}

void OAIProjectSource::setValue(const OAIProjectSource::eOAIProjectSource& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProjectSource::isSet() const {
    
    return m_value_isSet;
}

bool OAIProjectSource::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
