/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAsyncOperationStatusEnum.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAsyncOperationStatusEnum::OAIAsyncOperationStatusEnum(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAsyncOperationStatusEnum::OAIAsyncOperationStatusEnum() {
    this->initializeModel();
}

OAIAsyncOperationStatusEnum::~OAIAsyncOperationStatusEnum() {}

void OAIAsyncOperationStatusEnum::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAsyncOperationStatusEnum::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAsyncOperationStatusEnum::fromJson(QString jsonString) {
    
    if ( jsonString.compare("sent", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAsyncOperationStatusEnum::SENT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("started", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAsyncOperationStatusEnum::STARTED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAsyncOperationStatusEnum::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("failed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAsyncOperationStatusEnum::FAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAsyncOperationStatusEnum::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAsyncOperationStatusEnum::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAsyncOperationStatusEnum::SENT:
            val = "sent";
            break;
        case eOAIAsyncOperationStatusEnum::STARTED:
            val = "started";
            break;
        case eOAIAsyncOperationStatusEnum::COMPLETED:
            val = "completed";
            break;
        case eOAIAsyncOperationStatusEnum::FAILED:
            val = "failed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAsyncOperationStatusEnum::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAsyncOperationStatusEnum::eOAIAsyncOperationStatusEnum OAIAsyncOperationStatusEnum::getValue() const {
    return m_value;
}

void OAIAsyncOperationStatusEnum::setValue(const OAIAsyncOperationStatusEnum::eOAIAsyncOperationStatusEnum& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAsyncOperationStatusEnum::isSet() const {
    
    return m_value_isSet;
}

bool OAIAsyncOperationStatusEnum::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
