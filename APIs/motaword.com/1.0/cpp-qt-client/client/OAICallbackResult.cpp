/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICallbackResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICallbackResult::OAICallbackResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICallbackResult::OAICallbackResult() {
    this->initializeModel();
}

OAICallbackResult::~OAICallbackResult() {}

void OAICallbackResult::initializeModel() {

    m_data_isSet = false;
    m_data_isValid = false;

    m_result_isSet = false;
    m_result_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAICallbackResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICallbackResult::fromJsonObject(QJsonObject json) {

    m_data_isValid = ::OpenAPI::fromJsonValue(m_data, json[QString("data")]);
    m_data_isSet = !json[QString("data")].isNull() && m_data_isValid;

    m_result_isValid = ::OpenAPI::fromJsonValue(m_result, json[QString("result")]);
    m_result_isSet = !json[QString("result")].isNull() && m_result_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAICallbackResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICallbackResult::asJsonObject() const {
    QJsonObject obj;
    if (m_data.isSet()) {
        obj.insert(QString("data"), ::OpenAPI::toJsonValue(m_data));
    }
    if (m_result_isSet) {
        obj.insert(QString("result"), ::OpenAPI::toJsonValue(m_result));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

OAIProject OAICallbackResult::getData() const {
    return m_data;
}
void OAICallbackResult::setData(const OAIProject &data) {
    m_data = data;
    m_data_isSet = true;
}

bool OAICallbackResult::is_data_Set() const{
    return m_data_isSet;
}

bool OAICallbackResult::is_data_Valid() const{
    return m_data_isValid;
}

QString OAICallbackResult::getResult() const {
    return m_result;
}
void OAICallbackResult::setResult(const QString &result) {
    m_result = result;
    m_result_isSet = true;
}

bool OAICallbackResult::is_result_Set() const{
    return m_result_isSet;
}

bool OAICallbackResult::is_result_Valid() const{
    return m_result_isValid;
}

OAIProjectStatus OAICallbackResult::getType() const {
    return m_type;
}
void OAICallbackResult::setType(const OAIProjectStatus &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICallbackResult::is_type_Set() const{
    return m_type_isSet;
}

bool OAICallbackResult::is_type_Valid() const{
    return m_type_isValid;
}

QString OAICallbackResult::getUrl() const {
    return m_url;
}
void OAICallbackResult::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAICallbackResult::is_url_Set() const{
    return m_url_isSet;
}

bool OAICallbackResult::is_url_Valid() const{
    return m_url_isValid;
}

bool OAICallbackResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_data.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICallbackResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
