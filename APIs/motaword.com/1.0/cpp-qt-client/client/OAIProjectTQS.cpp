/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectTQS.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectTQS::OAIProjectTQS(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectTQS::OAIProjectTQS() {
    this->initializeModel();
}

OAIProjectTQS::~OAIProjectTQS() {}

void OAIProjectTQS::initializeModel() {

    m_is_above_average_isSet = false;
    m_is_above_average_isValid = false;

    m_score_isSet = false;
    m_score_isValid = false;

    m_strings_edited_isSet = false;
    m_strings_edited_isValid = false;

    m_strings_translated_isSet = false;
    m_strings_translated_isValid = false;
}

void OAIProjectTQS::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectTQS::fromJsonObject(QJsonObject json) {

    m_is_above_average_isValid = ::OpenAPI::fromJsonValue(m_is_above_average, json[QString("is_above_average")]);
    m_is_above_average_isSet = !json[QString("is_above_average")].isNull() && m_is_above_average_isValid;

    m_score_isValid = ::OpenAPI::fromJsonValue(m_score, json[QString("score")]);
    m_score_isSet = !json[QString("score")].isNull() && m_score_isValid;

    m_strings_edited_isValid = ::OpenAPI::fromJsonValue(m_strings_edited, json[QString("strings_edited")]);
    m_strings_edited_isSet = !json[QString("strings_edited")].isNull() && m_strings_edited_isValid;

    m_strings_translated_isValid = ::OpenAPI::fromJsonValue(m_strings_translated, json[QString("strings_translated")]);
    m_strings_translated_isSet = !json[QString("strings_translated")].isNull() && m_strings_translated_isValid;
}

QString OAIProjectTQS::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectTQS::asJsonObject() const {
    QJsonObject obj;
    if (m_is_above_average_isSet) {
        obj.insert(QString("is_above_average"), ::OpenAPI::toJsonValue(m_is_above_average));
    }
    if (m_score_isSet) {
        obj.insert(QString("score"), ::OpenAPI::toJsonValue(m_score));
    }
    if (m_strings_edited_isSet) {
        obj.insert(QString("strings_edited"), ::OpenAPI::toJsonValue(m_strings_edited));
    }
    if (m_strings_translated_isSet) {
        obj.insert(QString("strings_translated"), ::OpenAPI::toJsonValue(m_strings_translated));
    }
    return obj;
}

bool OAIProjectTQS::isIsAboveAverage() const {
    return m_is_above_average;
}
void OAIProjectTQS::setIsAboveAverage(const bool &is_above_average) {
    m_is_above_average = is_above_average;
    m_is_above_average_isSet = true;
}

bool OAIProjectTQS::is_is_above_average_Set() const{
    return m_is_above_average_isSet;
}

bool OAIProjectTQS::is_is_above_average_Valid() const{
    return m_is_above_average_isValid;
}

float OAIProjectTQS::getScore() const {
    return m_score;
}
void OAIProjectTQS::setScore(const float &score) {
    m_score = score;
    m_score_isSet = true;
}

bool OAIProjectTQS::is_score_Set() const{
    return m_score_isSet;
}

bool OAIProjectTQS::is_score_Valid() const{
    return m_score_isValid;
}

qint64 OAIProjectTQS::getStringsEdited() const {
    return m_strings_edited;
}
void OAIProjectTQS::setStringsEdited(const qint64 &strings_edited) {
    m_strings_edited = strings_edited;
    m_strings_edited_isSet = true;
}

bool OAIProjectTQS::is_strings_edited_Set() const{
    return m_strings_edited_isSet;
}

bool OAIProjectTQS::is_strings_edited_Valid() const{
    return m_strings_edited_isValid;
}

qint64 OAIProjectTQS::getStringsTranslated() const {
    return m_strings_translated;
}
void OAIProjectTQS::setStringsTranslated(const qint64 &strings_translated) {
    m_strings_translated = strings_translated;
    m_strings_translated_isSet = true;
}

bool OAIProjectTQS::is_strings_translated_Set() const{
    return m_strings_translated_isSet;
}

bool OAIProjectTQS::is_strings_translated_Valid() const{
    return m_strings_translated_isValid;
}

bool OAIProjectTQS::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_above_average_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_strings_edited_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_strings_translated_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectTQS::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
