/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAvailableVendorsFilter.h
 *
 * 
 */

#ifndef OAIAvailableVendorsFilter_H
#define OAIAvailableVendorsFilter_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAvailableVendorsFilter : public OAIObject {
public:
    OAIAvailableVendorsFilter();
    OAIAvailableVendorsFilter(QString json);
    ~OAIAvailableVendorsFilter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getCorporateId() const;
    void setCorporateId(const double &corporate_id);
    bool is_corporate_id_Set() const;
    bool is_corporate_id_Valid() const;

    bool isManualWorkPermission() const;
    void setManualWorkPermission(const bool &manual_work_permission);
    bool is_manual_work_permission_Set() const;
    bool is_manual_work_permission_Valid() const;

    QString getSourceLanguage() const;
    void setSourceLanguage(const QString &source_language);
    bool is_source_language_Set() const;
    bool is_source_language_Valid() const;

    QList<QString> getTargetLanguages() const;
    void setTargetLanguages(const QList<QString> &target_languages);
    bool is_target_languages_Set() const;
    bool is_target_languages_Valid() const;

    QList<QString> getTypes() const;
    void setTypes(const QList<QString> &types);
    bool is_types_Set() const;
    bool is_types_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_corporate_id;
    bool m_corporate_id_isSet;
    bool m_corporate_id_isValid;

    bool m_manual_work_permission;
    bool m_manual_work_permission_isSet;
    bool m_manual_work_permission_isValid;

    QString m_source_language;
    bool m_source_language_isSet;
    bool m_source_language_isValid;

    QList<QString> m_target_languages;
    bool m_target_languages_isSet;
    bool m_target_languages_isValid;

    QList<QString> m_types;
    bool m_types_isSet;
    bool m_types_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAvailableVendorsFilter)

#endif // OAIAvailableVendorsFilter_H
