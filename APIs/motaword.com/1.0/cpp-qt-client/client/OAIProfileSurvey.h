/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProfileSurvey.h
 *
 * 
 */

#ifndef OAIProfileSurvey_H
#define OAIProfileSurvey_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProfileSurvey : public OAIObject {
public:
    OAIProfileSurvey();
    OAIProfileSurvey(QString json);
    ~OAIProfileSurvey() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrentServices() const;
    void setCurrentServices(const QString &current_services);
    bool is_current_services_Set() const;
    bool is_current_services_Valid() const;

    QString getDailyProofreadingCapacity() const;
    void setDailyProofreadingCapacity(const QString &daily_proofreading_capacity);
    bool is_daily_proofreading_capacity_Set() const;
    bool is_daily_proofreading_capacity_Valid() const;

    QString getDailyTranslationCapacity() const;
    void setDailyTranslationCapacity(const QString &daily_translation_capacity);
    bool is_daily_translation_capacity_Set() const;
    bool is_daily_translation_capacity_Valid() const;

    QString getDtpSoftware() const;
    void setDtpSoftware(const QString &dtp_software);
    bool is_dtp_software_Set() const;
    bool is_dtp_software_Valid() const;

    QString getExperience() const;
    void setExperience(const QString &experience);
    bool is_experience_Set() const;
    bool is_experience_Valid() const;

    QString getIsCertifiedTranslator() const;
    void setIsCertifiedTranslator(const QString &is_certified_translator);
    bool is_is_certified_translator_Set() const;
    bool is_is_certified_translator_Valid() const;

    QString getIsSwornTranslator() const;
    void setIsSwornTranslator(const QString &is_sworn_translator);
    bool is_is_sworn_translator_Set() const;
    bool is_is_sworn_translator_Valid() const;

    QString getMemoq() const;
    void setMemoq(const QString &memoq);
    bool is_memoq_Set() const;
    bool is_memoq_Valid() const;

    QString getMemsource() const;
    void setMemsource(const QString &memsource);
    bool is_memsource_Set() const;
    bool is_memsource_Valid() const;

    QString getOmegat() const;
    void setOmegat(const QString &omegat);
    bool is_omegat_Set() const;
    bool is_omegat_Valid() const;

    QString getProofreaderExperience() const;
    void setProofreaderExperience(const QString &proofreader_experience);
    bool is_proofreader_experience_Set() const;
    bool is_proofreader_experience_Valid() const;

    QString getProvidesCreativeWritingService() const;
    void setProvidesCreativeWritingService(const QString &provides_creative_writing_service);
    bool is_provides_creative_writing_service_Set() const;
    bool is_provides_creative_writing_service_Valid() const;

    QString getProvidesPosteditService() const;
    void setProvidesPosteditService(const QString &provides_postedit_service);
    bool is_provides_postedit_service_Set() const;
    bool is_provides_postedit_service_Valid() const;

    QString getReference() const;
    void setReference(const QString &reference);
    bool is_reference_Set() const;
    bool is_reference_Valid() const;

    QString getSdlTrados() const;
    void setSdlTrados(const QString &sdl_trados);
    bool is_sdl_trados_Set() const;
    bool is_sdl_trados_Valid() const;

    QString getSkypeId() const;
    void setSkypeId(const QString &skype_id);
    bool is_skype_id_Set() const;
    bool is_skype_id_Valid() const;

    QString getSmartcat() const;
    void setSmartcat(const QString &smartcat);
    bool is_smartcat_Set() const;
    bool is_smartcat_Valid() const;

    QString getSmartling() const;
    void setSmartling(const QString &smartling);
    bool is_smartling_Set() const;
    bool is_smartling_Valid() const;

    QString getSoftware() const;
    void setSoftware(const QString &software);
    bool is_software_Set() const;
    bool is_software_Valid() const;

    QString getSpecialization() const;
    void setSpecialization(const QString &specialization);
    bool is_specialization_Set() const;
    bool is_specialization_Valid() const;

    QString getSubtitleEdit() const;
    void setSubtitleEdit(const QString &subtitle_edit);
    bool is_subtitle_edit_Set() const;
    bool is_subtitle_edit_Valid() const;

    QString getSubtitleWorkshop() const;
    void setSubtitleWorkshop(const QString &subtitle_workshop);
    bool is_subtitle_workshop_Set() const;
    bool is_subtitle_workshop_Valid() const;

    QString getTranslatorAssociation() const;
    void setTranslatorAssociation(const QString &translator_association);
    bool is_translator_association_Set() const;
    bool is_translator_association_Valid() const;

    QString getTranssuite2000() const;
    void setTranssuite2000(const QString &transsuite_2000);
    bool is_transsuite_2000_Set() const;
    bool is_transsuite_2000_Valid() const;

    QString getVendorProfileLsp() const;
    void setVendorProfileLsp(const QString &vendor_profile_lsp);
    bool is_vendor_profile_lsp_Set() const;
    bool is_vendor_profile_lsp_Valid() const;

    QString getWordbee() const;
    void setWordbee(const QString &wordbee);
    bool is_wordbee_Set() const;
    bool is_wordbee_Valid() const;

    QString getWordfast() const;
    void setWordfast(const QString &wordfast);
    bool is_wordfast_Set() const;
    bool is_wordfast_Valid() const;

    QString getWorkType() const;
    void setWorkType(const QString &work_type);
    bool is_work_type_Set() const;
    bool is_work_type_Valid() const;

    QString getWorkWith() const;
    void setWorkWith(const QString &work_with);
    bool is_work_with_Set() const;
    bool is_work_with_Valid() const;

    QString getWorkingAs() const;
    void setWorkingAs(const QString &working_as);
    bool is_working_as_Set() const;
    bool is_working_as_Valid() const;

    QString getWorkingTimezone() const;
    void setWorkingTimezone(const QString &working_timezone);
    bool is_working_timezone_Set() const;
    bool is_working_timezone_Valid() const;

    QString getXbench() const;
    void setXbench(const QString &xbench);
    bool is_xbench_Set() const;
    bool is_xbench_Valid() const;

    QString getXtm() const;
    void setXtm(const QString &xtm);
    bool is_xtm_Set() const;
    bool is_xtm_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_current_services;
    bool m_current_services_isSet;
    bool m_current_services_isValid;

    QString m_daily_proofreading_capacity;
    bool m_daily_proofreading_capacity_isSet;
    bool m_daily_proofreading_capacity_isValid;

    QString m_daily_translation_capacity;
    bool m_daily_translation_capacity_isSet;
    bool m_daily_translation_capacity_isValid;

    QString m_dtp_software;
    bool m_dtp_software_isSet;
    bool m_dtp_software_isValid;

    QString m_experience;
    bool m_experience_isSet;
    bool m_experience_isValid;

    QString m_is_certified_translator;
    bool m_is_certified_translator_isSet;
    bool m_is_certified_translator_isValid;

    QString m_is_sworn_translator;
    bool m_is_sworn_translator_isSet;
    bool m_is_sworn_translator_isValid;

    QString m_memoq;
    bool m_memoq_isSet;
    bool m_memoq_isValid;

    QString m_memsource;
    bool m_memsource_isSet;
    bool m_memsource_isValid;

    QString m_omegat;
    bool m_omegat_isSet;
    bool m_omegat_isValid;

    QString m_proofreader_experience;
    bool m_proofreader_experience_isSet;
    bool m_proofreader_experience_isValid;

    QString m_provides_creative_writing_service;
    bool m_provides_creative_writing_service_isSet;
    bool m_provides_creative_writing_service_isValid;

    QString m_provides_postedit_service;
    bool m_provides_postedit_service_isSet;
    bool m_provides_postedit_service_isValid;

    QString m_reference;
    bool m_reference_isSet;
    bool m_reference_isValid;

    QString m_sdl_trados;
    bool m_sdl_trados_isSet;
    bool m_sdl_trados_isValid;

    QString m_skype_id;
    bool m_skype_id_isSet;
    bool m_skype_id_isValid;

    QString m_smartcat;
    bool m_smartcat_isSet;
    bool m_smartcat_isValid;

    QString m_smartling;
    bool m_smartling_isSet;
    bool m_smartling_isValid;

    QString m_software;
    bool m_software_isSet;
    bool m_software_isValid;

    QString m_specialization;
    bool m_specialization_isSet;
    bool m_specialization_isValid;

    QString m_subtitle_edit;
    bool m_subtitle_edit_isSet;
    bool m_subtitle_edit_isValid;

    QString m_subtitle_workshop;
    bool m_subtitle_workshop_isSet;
    bool m_subtitle_workshop_isValid;

    QString m_translator_association;
    bool m_translator_association_isSet;
    bool m_translator_association_isValid;

    QString m_transsuite_2000;
    bool m_transsuite_2000_isSet;
    bool m_transsuite_2000_isValid;

    QString m_vendor_profile_lsp;
    bool m_vendor_profile_lsp_isSet;
    bool m_vendor_profile_lsp_isValid;

    QString m_wordbee;
    bool m_wordbee_isSet;
    bool m_wordbee_isValid;

    QString m_wordfast;
    bool m_wordfast_isSet;
    bool m_wordfast_isValid;

    QString m_work_type;
    bool m_work_type_isSet;
    bool m_work_type_isValid;

    QString m_work_with;
    bool m_work_with_isSet;
    bool m_work_with_isValid;

    QString m_working_as;
    bool m_working_as_isSet;
    bool m_working_as_isValid;

    QString m_working_timezone;
    bool m_working_timezone_isSet;
    bool m_working_timezone_isValid;

    QString m_xbench;
    bool m_xbench_isSet;
    bool m_xbench_isValid;

    QString m_xtm;
    bool m_xtm_isSet;
    bool m_xtm_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProfileSurvey)

#endif // OAIProfileSurvey_H
