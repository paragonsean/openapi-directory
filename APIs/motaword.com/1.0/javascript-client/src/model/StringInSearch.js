/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import StringTranslationState from './StringTranslationState';

/**
 * The StringInSearch model module.
 * @module model/StringInSearch
 * @version 1.0
 */
class StringInSearch {
    /**
     * Constructs a new <code>StringInSearch</code>.
     * @alias module:model/StringInSearch
     */
    constructor() { 
        
        StringInSearch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>StringInSearch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StringInSearch} obj Optional instance to populate.
     * @return {module:model/StringInSearch} The populated <code>StringInSearch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new StringInSearch();

            if (data.hasOwnProperty('file_id')) {
                obj['file_id'] = ApiClient.convertToType(data['file_id'], 'Number');
            }
            if (data.hasOwnProperty('internal_project_id')) {
                obj['internal_project_id'] = ApiClient.convertToType(data['internal_project_id'], 'Number');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'Number');
            }
            if (data.hasOwnProperty('search_score')) {
                obj['search_score'] = ApiClient.convertToType(data['search_score'], 'Number');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = StringTranslationState.constructFromObject(data['status']);
            }
            if (data.hasOwnProperty('string_id')) {
                obj['string_id'] = ApiClient.convertToType(data['string_id'], 'Number');
            }
            if (data.hasOwnProperty('target')) {
                obj['target'] = ApiClient.convertToType(data['target'], 'String');
            }
            if (data.hasOwnProperty('targets')) {
                obj['targets'] = ApiClient.convertToType(data['targets'], ['String']);
            }
            if (data.hasOwnProperty('tm_name')) {
                obj['tm_name'] = ApiClient.convertToType(data['tm_name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StringInSearch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StringInSearch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['target'] && !(typeof data['target'] === 'string' || data['target'] instanceof String)) {
            throw new Error("Expected the field `target` to be a primitive type in the JSON string but got " + data['target']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targets'])) {
            throw new Error("Expected the field `targets` to be an array in the JSON data but got " + data['targets']);
        }
        // ensure the json data is a string
        if (data['tm_name'] && !(typeof data['tm_name'] === 'string' || data['tm_name'] instanceof String)) {
            throw new Error("Expected the field `tm_name` to be a primitive type in the JSON string but got " + data['tm_name']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {Number} file_id
 */
StringInSearch.prototype['file_id'] = undefined;

/**
 * @member {Number} internal_project_id
 */
StringInSearch.prototype['internal_project_id'] = undefined;

/**
 * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
 * @member {Date} last_updated
 */
StringInSearch.prototype['last_updated'] = undefined;

/**
 * @member {Number} project_id
 */
StringInSearch.prototype['project_id'] = undefined;

/**
 * @member {Number} search_score
 */
StringInSearch.prototype['search_score'] = undefined;

/**
 * @member {String} source
 */
StringInSearch.prototype['source'] = undefined;

/**
 * @member {module:model/StringTranslationState} status
 */
StringInSearch.prototype['status'] = undefined;

/**
 * @member {Number} string_id
 */
StringInSearch.prototype['string_id'] = undefined;

/**
 * @member {String} target
 */
StringInSearch.prototype['target'] = undefined;

/**
 * @member {Array.<String>} targets
 */
StringInSearch.prototype['targets'] = undefined;

/**
 * @member {String} tm_name
 */
StringInSearch.prototype['tm_name'] = undefined;

/**
 * String search result typ from ZNT. Options are LOCAL_PROJECT, IMPORTED_TM. Imported TM results should probably not be visible to end users.
 * @member {module:model/StringInSearch.TypeEnum} type
 */
StringInSearch.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
StringInSearch['TypeEnum'] = {

    /**
     * value: "LOCAL_PROJECT"
     * @const
     */
    "LOCAL_PROJECT": "LOCAL_PROJECT",

    /**
     * value: "IMPORTED_TM"
     * @const
     */
    "IMPORTED_TM": "IMPORTED_TM"
};



export default StringInSearch;

