/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ManualFile model module.
 * @module model/ManualFile
 * @version 1.0
 */
class ManualFile {
    /**
     * Constructs a new <code>ManualFile</code>.
     * @alias module:model/ManualFile
     */
    constructor() { 
        
        ManualFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ManualFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ManualFile} obj Optional instance to populate.
     * @return {module:model/ManualFile} The populated <code>ManualFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ManualFile();

            if (data.hasOwnProperty('driveFileId')) {
                obj['driveFileId'] = ApiClient.convertToType(data['driveFileId'], 'Number');
            }
            if (data.hasOwnProperty('isProofread')) {
                obj['isProofread'] = ApiClient.convertToType(data['isProofread'], 'Boolean');
            }
            if (data.hasOwnProperty('isTranslated')) {
                obj['isTranslated'] = ApiClient.convertToType(data['isTranslated'], 'Boolean');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('proofreadingFileId')) {
                obj['proofreadingFileId'] = ApiClient.convertToType(data['proofreadingFileId'], 'Number');
            }
            if (data.hasOwnProperty('translationFileId')) {
                obj['translationFileId'] = ApiClient.convertToType(data['translationFileId'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ManualFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ManualFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }

        return true;
    }


}



/**
 * @member {Number} driveFileId
 */
ManualFile.prototype['driveFileId'] = undefined;

/**
 * @member {Boolean} isProofread
 */
ManualFile.prototype['isProofread'] = undefined;

/**
 * @member {Boolean} isTranslated
 */
ManualFile.prototype['isTranslated'] = undefined;

/**
 * @member {String} language
 */
ManualFile.prototype['language'] = undefined;

/**
 * @member {Number} proofreadingFileId
 */
ManualFile.prototype['proofreadingFileId'] = undefined;

/**
 * @member {Number} translationFileId
 */
ManualFile.prototype['translationFileId'] = undefined;






export default ManualFile;

