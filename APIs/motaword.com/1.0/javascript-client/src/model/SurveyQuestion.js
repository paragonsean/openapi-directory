/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SimpleModel from './SimpleModel';
import SurveyQuestionQuestion from './SurveyQuestionQuestion';

/**
 * The SurveyQuestion model module.
 * @module model/SurveyQuestion
 * @version 1.0
 */
class SurveyQuestion {
    /**
     * Constructs a new <code>SurveyQuestion</code>.
     * @alias module:model/SurveyQuestion
     */
    constructor() { 
        
        SurveyQuestion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SurveyQuestion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SurveyQuestion} obj Optional instance to populate.
     * @return {module:model/SurveyQuestion} The populated <code>SurveyQuestion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SurveyQuestion();

            if (data.hasOwnProperty('answers')) {
                obj['answers'] = ApiClient.convertToType(data['answers'], [SimpleModel]);
            }
            if (data.hasOwnProperty('question')) {
                obj['question'] = SurveyQuestionQuestion.constructFromObject(data['question']);
            }
            if (data.hasOwnProperty('question_answers')) {
                obj['question_answers'] = ApiClient.convertToType(data['question_answers'], [SimpleModel]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SurveyQuestion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SurveyQuestion</code>.
     */
    static validateJSON(data) {
        if (data['answers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['answers'])) {
                throw new Error("Expected the field `answers` to be an array in the JSON data but got " + data['answers']);
            }
            // validate the optional field `answers` (array)
            for (const item of data['answers']) {
                SimpleModel.validateJSON(item);
            };
        }
        // validate the optional field `question`
        if (data['question']) { // data not null
          SurveyQuestionQuestion.validateJSON(data['question']);
        }
        if (data['question_answers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['question_answers'])) {
                throw new Error("Expected the field `question_answers` to be an array in the JSON data but got " + data['question_answers']);
            }
            // validate the optional field `question_answers` (array)
            for (const item of data['question_answers']) {
                SimpleModel.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/SimpleModel>} answers
 */
SurveyQuestion.prototype['answers'] = undefined;

/**
 * @member {module:model/SurveyQuestionQuestion} question
 */
SurveyQuestion.prototype['question'] = undefined;

/**
 * @member {Array.<module:model/SimpleModel>} question_answers
 */
SurveyQuestion.prototype['question_answers'] = undefined;






export default SurveyQuestion;

