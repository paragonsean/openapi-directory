/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Error from './Error';

/**
 * The TokenError model module.
 * @module model/TokenError
 * @version 1.0
 */
class TokenError {
    /**
     * Constructs a new <code>TokenError</code>.
     * @alias module:model/TokenError
     * @implements module:model/Error
     */
    constructor() { 
        Error.initialize(this);
        TokenError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TokenError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TokenError} obj Optional instance to populate.
     * @return {module:model/TokenError} The populated <code>TokenError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TokenError();
            Error.constructFromObject(data, obj);

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('help')) {
                obj['help'] = ApiClient.convertToType(data['help'], 'String');
            }
            if (data.hasOwnProperty('http_code')) {
                obj['http_code'] = ApiClient.convertToType(data['http_code'], 'Number');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('account_status')) {
                obj['account_status'] = ApiClient.convertToType(data['account_status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TokenError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TokenError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['help'] && !(typeof data['help'] === 'string' || data['help'] instanceof String)) {
            throw new Error("Expected the field `help` to be a primitive type in the JSON string but got " + data['help']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['account_status'] && !(typeof data['account_status'] === 'string' || data['account_status'] instanceof String)) {
            throw new Error("Expected the field `account_status` to be a primitive type in the JSON string but got " + data['account_status']);
        }

        return true;
    }


}



/**
 * @member {String} code
 */
TokenError.prototype['code'] = undefined;

/**
 * @member {String} help
 */
TokenError.prototype['help'] = undefined;

/**
 * @member {Number} http_code
 */
TokenError.prototype['http_code'] = undefined;

/**
 * @member {String} message
 */
TokenError.prototype['message'] = undefined;

/**
 * @member {module:model/TokenError.AccountStatusEnum} account_status
 */
TokenError.prototype['account_status'] = undefined;


// Implement Error interface:
/**
 * @member {String} code
 */
Error.prototype['code'] = undefined;
/**
 * @member {String} help
 */
Error.prototype['help'] = undefined;
/**
 * @member {Number} http_code
 */
Error.prototype['http_code'] = undefined;
/**
 * @member {String} message
 */
Error.prototype['message'] = undefined;



/**
 * Allowed values for the <code>account_status</code> property.
 * @enum {String}
 * @readonly
 */
TokenError['AccountStatusEnum'] = {

    /**
     * value: "registered"
     * @const
     */
    "registered": "registered",

    /**
     * value: "email_confirmed"
     * @const
     */
    "email_confirmed": "email_confirmed",

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted",

    /**
     * value: "suspended"
     * @const
     */
    "suspended": "suspended",

    /**
     * value: "rejected"
     * @const
     */
    "rejected": "rejected",

    /**
     * value: "approved"
     * @const
     */
    "approved": "approved",

    /**
     * value: "resume"
     * @const
     */
    "resume": "resume",

    /**
     * value: "webinar"
     * @const
     */
    "webinar": "webinar",

    /**
     * value: "course"
     * @const
     */
    "course": "course"
};



export default TokenError;

