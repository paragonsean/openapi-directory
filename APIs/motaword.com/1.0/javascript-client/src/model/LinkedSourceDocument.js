/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LinkedSourceDocument model module.
 * @module model/LinkedSourceDocument
 * @version 1.0
 */
class LinkedSourceDocument {
    /**
     * Constructs a new <code>LinkedSourceDocument</code>.
     * @alias module:model/LinkedSourceDocument
     */
    constructor() { 
        
        LinkedSourceDocument.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LinkedSourceDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LinkedSourceDocument} obj Optional instance to populate.
     * @return {module:model/LinkedSourceDocument} The populated <code>LinkedSourceDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LinkedSourceDocument();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LinkedSourceDocument</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LinkedSourceDocument</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
LinkedSourceDocument.prototype['name'] = undefined;

/**
 * file size in bytes. optional.
 * @member {Number} size
 */
LinkedSourceDocument.prototype['size'] = undefined;

/**
 * Preferred source names are listed as enum. If you have a custom file type, simply enter that name.
 * @member {module:model/LinkedSourceDocument.SourceEnum} source
 */
LinkedSourceDocument.prototype['source'] = undefined;

/**
 * @member {String} url
 */
LinkedSourceDocument.prototype['url'] = undefined;





/**
 * Allowed values for the <code>source</code> property.
 * @enum {String}
 * @readonly
 */
LinkedSourceDocument['SourceEnum'] = {

    /**
     * value: "dropbox"
     * @const
     */
    "dropbox": "dropbox",

    /**
     * value: "googledrive"
     * @const
     */
    "googledrive": "googledrive",

    /**
     * value: "icloud"
     * @const
     */
    "icloud": "icloud"
};



export default LinkedSourceDocument;

