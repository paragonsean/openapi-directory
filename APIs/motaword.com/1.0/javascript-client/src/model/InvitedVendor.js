/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvitedVendor model module.
 * @module model/InvitedVendor
 * @version 1.0
 */
class InvitedVendor {
    /**
     * Constructs a new <code>InvitedVendor</code>.
     * @alias module:model/InvitedVendor
     */
    constructor() { 
        
        InvitedVendor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvitedVendor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvitedVendor} obj Optional instance to populate.
     * @return {module:model/InvitedVendor} The populated <code>InvitedVendor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvitedVendor();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('email_open_rate')) {
                obj['email_open_rate'] = ApiClient.convertToType(data['email_open_rate'], 'Number');
            }
            if (data.hasOwnProperty('is_entered')) {
                obj['is_entered'] = ApiClient.convertToType(data['is_entered'], 'Boolean');
            }
            if (data.hasOwnProperty('is_get_paid')) {
                obj['is_get_paid'] = ApiClient.convertToType(data['is_get_paid'], 'Boolean');
            }
            if (data.hasOwnProperty('is_worked')) {
                obj['is_worked'] = ApiClient.convertToType(data['is_worked'], 'Boolean');
            }
            if (data.hasOwnProperty('is_worked_in_any_project')) {
                obj['is_worked_in_any_project'] = ApiClient.convertToType(data['is_worked_in_any_project'], 'Boolean');
            }
            if (data.hasOwnProperty('last_project_date')) {
                obj['last_project_date'] = ApiClient.convertToType(data['last_project_date'], 'Date');
            }
            if (data.hasOwnProperty('project_status_when_interacted')) {
                obj['project_status_when_interacted'] = ApiClient.convertToType(data['project_status_when_interacted'], 'Number');
            }
            if (data.hasOwnProperty('registration_date')) {
                obj['registration_date'] = ApiClient.convertToType(data['registration_date'], 'Date');
            }
            if (data.hasOwnProperty('responsiveness')) {
                obj['responsiveness'] = ApiClient.convertToType(data['responsiveness'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
            if (data.hasOwnProperty('vendor_id')) {
                obj['vendor_id'] = ApiClient.convertToType(data['vendor_id'], 'Number');
            }
            if (data.hasOwnProperty('vendor_name')) {
                obj['vendor_name'] = ApiClient.convertToType(data['vendor_name'], 'String');
            }
            if (data.hasOwnProperty('vendor_type')) {
                obj['vendor_type'] = ApiClient.convertToType(data['vendor_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvitedVendor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvitedVendor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['vendor_name'] && !(typeof data['vendor_name'] === 'string' || data['vendor_name'] instanceof String)) {
            throw new Error("Expected the field `vendor_name` to be a primitive type in the JSON string but got " + data['vendor_name']);
        }
        // ensure the json data is a string
        if (data['vendor_type'] && !(typeof data['vendor_type'] === 'string' || data['vendor_type'] instanceof String)) {
            throw new Error("Expected the field `vendor_type` to be a primitive type in the JSON string but got " + data['vendor_type']);
        }

        return true;
    }


}



/**
 * Action to be taken
 * @member {String} action
 */
InvitedVendor.prototype['action'] = undefined;

/**
 * Email opening rate of the vendor
 * @member {Number} email_open_rate
 */
InvitedVendor.prototype['email_open_rate'] = undefined;

/**
 * Did the vendor enter the given project
 * @member {Boolean} is_entered
 */
InvitedVendor.prototype['is_entered'] = undefined;

/**
 * Is vendor get ever paid?
 * @member {Boolean} is_get_paid
 */
InvitedVendor.prototype['is_get_paid'] = undefined;

/**
 * Did the vendor work on the given project
 * @member {Boolean} is_worked
 */
InvitedVendor.prototype['is_worked'] = undefined;

/**
 * Vendors working status in any project
 * @member {Boolean} is_worked_in_any_project
 */
InvitedVendor.prototype['is_worked_in_any_project'] = undefined;

/**
 * Last project date
 * @member {Date} last_project_date
 */
InvitedVendor.prototype['last_project_date'] = undefined;

/**
 * Project translation percentage when interacted with the vendor
 * @member {Number} project_status_when_interacted
 */
InvitedVendor.prototype['project_status_when_interacted'] = undefined;

/**
 * Registration date
 * @member {Date} registration_date
 */
InvitedVendor.prototype['registration_date'] = undefined;

/**
 * Responsiveness of the vendor
 * @member {Number} responsiveness
 */
InvitedVendor.prototype['responsiveness'] = undefined;

/**
 * Id in the Users
 * @member {Number} user_id
 */
InvitedVendor.prototype['user_id'] = undefined;

/**
 * Id in the Vendors
 * @member {Number} vendor_id
 */
InvitedVendor.prototype['vendor_id'] = undefined;

/**
 * The name of the vendor
 * @member {String} vendor_name
 */
InvitedVendor.prototype['vendor_name'] = undefined;

/**
 * Type of the vendor in the given project namely translator or proofreader
 * @member {String} vendor_type
 */
InvitedVendor.prototype['vendor_type'] = undefined;






export default InvitedVendor;

