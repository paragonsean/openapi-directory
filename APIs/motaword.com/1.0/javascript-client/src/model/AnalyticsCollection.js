/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AnalyticsCollection model module.
 * @module model/AnalyticsCollection
 * @version 1.0
 */
class AnalyticsCollection {
    /**
     * Constructs a new <code>AnalyticsCollection</code>.
     * @alias module:model/AnalyticsCollection
     */
    constructor() { 
        
        AnalyticsCollection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AnalyticsCollection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AnalyticsCollection} obj Optional instance to populate.
     * @return {module:model/AnalyticsCollection} The populated <code>AnalyticsCollection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AnalyticsCollection();

            if (data.hasOwnProperty('anonymousId')) {
                obj['anonymousId'] = ApiClient.convertToType(data['anonymousId'], 'String');
            }
            if (data.hasOwnProperty('properties')) {
                obj['properties'] = ApiClient.convertToType(data['properties'], {'String': 'String'});
            }
            if (data.hasOwnProperty('sessionId')) {
                obj['sessionId'] = ApiClient.convertToType(data['sessionId'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AnalyticsCollection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AnalyticsCollection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['anonymousId'] && !(typeof data['anonymousId'] === 'string' || data['anonymousId'] instanceof String)) {
            throw new Error("Expected the field `anonymousId` to be a primitive type in the JSON string but got " + data['anonymousId']);
        }
        // ensure the json data is a string
        if (data['sessionId'] && !(typeof data['sessionId'] === 'string' || data['sessionId'] instanceof String)) {
            throw new Error("Expected the field `sessionId` to be a primitive type in the JSON string but got " + data['sessionId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['userId'] && !(typeof data['userId'] === 'string' || data['userId'] instanceof String)) {
            throw new Error("Expected the field `userId` to be a primitive type in the JSON string but got " + data['userId']);
        }

        return true;
    }


}



/**
 * @member {String} anonymousId
 */
AnalyticsCollection.prototype['anonymousId'] = undefined;

/**
 * @member {Object.<String, String>} properties
 */
AnalyticsCollection.prototype['properties'] = undefined;

/**
 * @member {String} sessionId
 */
AnalyticsCollection.prototype['sessionId'] = undefined;

/**
 * @member {String} type
 */
AnalyticsCollection.prototype['type'] = undefined;

/**
 * @member {String} userId
 */
AnalyticsCollection.prototype['userId'] = undefined;






export default AnalyticsCollection;

