/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AccountStyleGuideUploadRequest model module.
 * @module model/AccountStyleGuideUploadRequest
 * @version 1.0
 */
class AccountStyleGuideUploadRequest {
    /**
     * Constructs a new <code>AccountStyleGuideUploadRequest</code>.
     * @alias module:model/AccountStyleGuideUploadRequest
     * @param styleguide {File} Style guide file. Currently supported formats: .pdf, .docx, .txt
     */
    constructor(styleguide) { 
        
        AccountStyleGuideUploadRequest.initialize(this, styleguide);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, styleguide) { 
        obj['styleguide'] = styleguide;
    }

    /**
     * Constructs a <code>AccountStyleGuideUploadRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountStyleGuideUploadRequest} obj Optional instance to populate.
     * @return {module:model/AccountStyleGuideUploadRequest} The populated <code>AccountStyleGuideUploadRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountStyleGuideUploadRequest();

            if (data.hasOwnProperty('styleguide')) {
                obj['styleguide'] = ApiClient.convertToType(data['styleguide'], File);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountStyleGuideUploadRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountStyleGuideUploadRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AccountStyleGuideUploadRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

AccountStyleGuideUploadRequest.RequiredProperties = ["styleguide"];

/**
 * Style guide file. Currently supported formats: .pdf, .docx, .txt
 * @member {File} styleguide
 */
AccountStyleGuideUploadRequest.prototype['styleguide'] = undefined;






export default AccountStyleGuideUploadRequest;

