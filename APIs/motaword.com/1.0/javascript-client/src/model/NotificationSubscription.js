/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationSubscription model module.
 * @module model/NotificationSubscription
 * @version 1.0
 */
class NotificationSubscription {
    /**
     * Constructs a new <code>NotificationSubscription</code>.
     * @alias module:model/NotificationSubscription
     */
    constructor() { 
        
        NotificationSubscription.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['type'] = 'OneSignal';
    }

    /**
     * Constructs a <code>NotificationSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationSubscription} obj Optional instance to populate.
     * @return {module:model/NotificationSubscription} The populated <code>NotificationSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationSubscription();

            if (data.hasOwnProperty('device')) {
                obj['device'] = ApiClient.convertToType(data['device'], 'String');
            }
            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationSubscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationSubscription</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['device'] && !(typeof data['device'] === 'string' || data['device'] instanceof String)) {
            throw new Error("Expected the field `device` to be a primitive type in the JSON string but got " + data['device']);
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {module:model/NotificationSubscription.DeviceEnum} device
 */
NotificationSubscription.prototype['device'] = undefined;

/**
 * OneSignal calls this \"player ID\".
 * @member {String} endpoint
 */
NotificationSubscription.prototype['endpoint'] = undefined;

/**
 * @member {module:model/NotificationSubscription.TypeEnum} type
 * @default 'OneSignal'
 */
NotificationSubscription.prototype['type'] = 'OneSignal';





/**
 * Allowed values for the <code>device</code> property.
 * @enum {String}
 * @readonly
 */
NotificationSubscription['DeviceEnum'] = {

    /**
     * value: "iOS"
     * @const
     */
    "iOS": "iOS",

    /**
     * value: "Android"
     * @const
     */
    "Android": "Android",

    /**
     * value: "Chrome"
     * @const
     */
    "Chrome": "Chrome",

    /**
     * value: "Firefox"
     * @const
     */
    "Firefox": "Firefox",

    /**
     * value: "Safari"
     * @const
     */
    "Safari": "Safari",

    /**
     * value: "Edge"
     * @const
     */
    "Edge": "Edge",

    /**
     * value: "Amazon"
     * @const
     */
    "Amazon": "Amazon",

    /**
     * value: "WindowsPhone"
     * @const
     */
    "WindowsPhone": "WindowsPhone",

    /**
     * value: "Windows"
     * @const
     */
    "Windows": "Windows",

    /**
     * value: "MacOS"
     * @const
     */
    "MacOS": "MacOS"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
NotificationSubscription['TypeEnum'] = {

    /**
     * value: "OneSignal"
     * @const
     */
    "OneSignal": "OneSignal"
};



export default NotificationSubscription;

