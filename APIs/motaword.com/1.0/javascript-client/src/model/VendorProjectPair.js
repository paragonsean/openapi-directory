/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import User from './User';

/**
 * The VendorProjectPair model module.
 * @module model/VendorProjectPair
 * @version 1.0
 */
class VendorProjectPair {
    /**
     * Constructs a new <code>VendorProjectPair</code>.
     * @alias module:model/VendorProjectPair
     */
    constructor() { 
        
        VendorProjectPair.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['currency'] = 'usd';
    }

    /**
     * Constructs a <code>VendorProjectPair</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VendorProjectPair} obj Optional instance to populate.
     * @return {module:model/VendorProjectPair} The populated <code>VendorProjectPair</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VendorProjectPair();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('is_proofreader')) {
                obj['is_proofreader'] = ApiClient.convertToType(data['is_proofreader'], 'Boolean');
            }
            if (data.hasOwnProperty('proofreader')) {
                obj['proofreader'] = User.constructFromObject(data['proofreader']);
            }
            if (data.hasOwnProperty('proofreading_rate')) {
                obj['proofreading_rate'] = ApiClient.convertToType(data['proofreading_rate'], 'Number');
            }
            if (data.hasOwnProperty('source_language')) {
                obj['source_language'] = ApiClient.convertToType(data['source_language'], 'String');
            }
            if (data.hasOwnProperty('target_language')) {
                obj['target_language'] = ApiClient.convertToType(data['target_language'], 'String');
            }
            if (data.hasOwnProperty('translation_rate')) {
                obj['translation_rate'] = ApiClient.convertToType(data['translation_rate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VendorProjectPair</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VendorProjectPair</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // validate the optional field `proofreader`
        if (data['proofreader']) { // data not null
          User.validateJSON(data['proofreader']);
        }
        // ensure the json data is a string
        if (data['source_language'] && !(typeof data['source_language'] === 'string' || data['source_language'] instanceof String)) {
            throw new Error("Expected the field `source_language` to be a primitive type in the JSON string but got " + data['source_language']);
        }
        // ensure the json data is a string
        if (data['target_language'] && !(typeof data['target_language'] === 'string' || data['target_language'] instanceof String)) {
            throw new Error("Expected the field `target_language` to be a primitive type in the JSON string but got " + data['target_language']);
        }

        return true;
    }


}



/**
 * @member {String} currency
 * @default 'usd'
 */
VendorProjectPair.prototype['currency'] = 'usd';

/**
 * Indicates if the vendor be able to proofred this pair
 * @member {Boolean} is_proofreader
 */
VendorProjectPair.prototype['is_proofreader'] = undefined;

/**
 * @member {module:model/User} proofreader
 */
VendorProjectPair.prototype['proofreader'] = undefined;

/**
 * @member {Number} proofreading_rate
 */
VendorProjectPair.prototype['proofreading_rate'] = undefined;

/**
 * Source language code
 * @member {String} source_language
 */
VendorProjectPair.prototype['source_language'] = undefined;

/**
 * Target language code
 * @member {String} target_language
 */
VendorProjectPair.prototype['target_language'] = undefined;

/**
 * @member {Number} translation_rate
 */
VendorProjectPair.prototype['translation_rate'] = undefined;






export default VendorProjectPair;

