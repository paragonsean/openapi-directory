/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientStringTranslation from './ClientStringTranslation';

/**
 * The ClientStringWithTranslations model module.
 * @module model/ClientStringWithTranslations
 * @version 1.0
 */
class ClientStringWithTranslations {
    /**
     * Constructs a new <code>ClientStringWithTranslations</code>.
     * @alias module:model/ClientStringWithTranslations
     */
    constructor() { 
        
        ClientStringWithTranslations.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientStringWithTranslations</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientStringWithTranslations} obj Optional instance to populate.
     * @return {module:model/ClientStringWithTranslations} The populated <code>ClientStringWithTranslations</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientStringWithTranslations();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('last_changed')) {
                obj['last_changed'] = ApiClient.convertToType(data['last_changed'], 'Date');
            }
            if (data.hasOwnProperty('translations')) {
                obj['translations'] = ApiClient.convertToType(data['translations'], [ClientStringTranslation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientStringWithTranslations</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientStringWithTranslations</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        if (data['translations']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['translations'])) {
                throw new Error("Expected the field `translations` to be an array in the JSON data but got " + data['translations']);
            }
            // validate the optional field `translations` (array)
            for (const item of data['translations']) {
                ClientStringTranslation.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {String} content
 */
ClientStringWithTranslations.prototype['content'] = undefined;

/**
 * @member {String} language
 */
ClientStringWithTranslations.prototype['language'] = undefined;

/**
 * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
 * @member {Date} last_changed
 */
ClientStringWithTranslations.prototype['last_changed'] = undefined;

/**
 * @member {Array.<module:model/ClientStringTranslation>} translations
 */
ClientStringWithTranslations.prototype['translations'] = undefined;






export default ClientStringWithTranslations;

