/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Document from './Document';
import DocumentLinks from './DocumentLinks';
import ManualFile from './ManualFile';

/**
 * The DocumentInSearch model module.
 * @module model/DocumentInSearch
 * @version 1.0
 */
class DocumentInSearch {
    /**
     * Constructs a new <code>DocumentInSearch</code>.
     * @alias module:model/DocumentInSearch
     * @implements module:model/Document
     */
    constructor() { 
        Document.initialize(this);
        DocumentInSearch.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DocumentInSearch</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DocumentInSearch} obj Optional instance to populate.
     * @return {module:model/DocumentInSearch} The populated <code>DocumentInSearch</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DocumentInSearch();
            Document.constructFromObject(data, obj);

            if (data.hasOwnProperty('file_type')) {
                obj['file_type'] = ApiClient.convertToType(data['file_type'], 'String');
            }
            if (data.hasOwnProperty('has_custom_package')) {
                obj['has_custom_package'] = ApiClient.convertToType(data['has_custom_package'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = DocumentLinks.constructFromObject(data['links']);
            }
            if (data.hasOwnProperty('manual_files')) {
                obj['manual_files'] = ApiClient.convertToType(data['manual_files'], [ManualFile]);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('project_id')) {
                obj['project_id'] = ApiClient.convertToType(data['project_id'], 'Number');
            }
            if (data.hasOwnProperty('review_in_manual_editor')) {
                obj['review_in_manual_editor'] = ApiClient.convertToType(data['review_in_manual_editor'], 'Boolean');
            }
            if (data.hasOwnProperty('scheme')) {
                obj['scheme'] = ApiClient.convertToType(data['scheme'], Object);
            }
            if (data.hasOwnProperty('search_score')) {
                obj['search_score'] = ApiClient.convertToType(data['search_score'], 'Number');
            }
            if (data.hasOwnProperty('source_language')) {
                obj['source_language'] = ApiClient.convertToType(data['source_language'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('target_languages')) {
                obj['target_languages'] = ApiClient.convertToType(data['target_languages'], ['String']);
            }
            if (data.hasOwnProperty('uploaded_at')) {
                obj['uploaded_at'] = ApiClient.convertToType(data['uploaded_at'], 'Number');
            }
            if (data.hasOwnProperty('word_count')) {
                obj['word_count'] = ApiClient.convertToType(data['word_count'], 'Number');
            }
            if (data.hasOwnProperty('search_result_reason')) {
                obj['search_result_reason'] = ApiClient.convertToType(data['search_result_reason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DocumentInSearch</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DocumentInSearch</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['file_type'] && !(typeof data['file_type'] === 'string' || data['file_type'] instanceof String)) {
            throw new Error("Expected the field `file_type` to be a primitive type in the JSON string but got " + data['file_type']);
        }
        // validate the optional field `links`
        if (data['links']) { // data not null
          DocumentLinks.validateJSON(data['links']);
        }
        if (data['manual_files']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['manual_files'])) {
                throw new Error("Expected the field `manual_files` to be an array in the JSON data but got " + data['manual_files']);
            }
            // validate the optional field `manual_files` (array)
            for (const item of data['manual_files']) {
                ManualFile.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['source_language'] && !(typeof data['source_language'] === 'string' || data['source_language'] instanceof String)) {
            throw new Error("Expected the field `source_language` to be a primitive type in the JSON string but got " + data['source_language']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['target_languages'])) {
            throw new Error("Expected the field `target_languages` to be an array in the JSON data but got " + data['target_languages']);
        }
        // ensure the json data is a string
        if (data['search_result_reason'] && !(typeof data['search_result_reason'] === 'string' || data['search_result_reason'] instanceof String)) {
            throw new Error("Expected the field `search_result_reason` to be a primitive type in the JSON string but got " + data['search_result_reason']);
        }

        return true;
    }


}



/**
 * Extension of the file
 * @member {String} file_type
 */
DocumentInSearch.prototype['file_type'] = undefined;

/**
 * @member {Boolean} has_custom_package
 */
DocumentInSearch.prototype['has_custom_package'] = undefined;

/**
 * @member {Number} id
 */
DocumentInSearch.prototype['id'] = undefined;

/**
 * @member {module:model/DocumentLinks} links
 */
DocumentInSearch.prototype['links'] = undefined;

/**
 * @member {Array.<module:model/ManualFile>} manual_files
 */
DocumentInSearch.prototype['manual_files'] = undefined;

/**
 * @member {String} name
 */
DocumentInSearch.prototype['name'] = undefined;

/**
 * @member {Number} project_id
 */
DocumentInSearch.prototype['project_id'] = undefined;

/**
 * @member {Boolean} review_in_manual_editor
 */
DocumentInSearch.prototype['review_in_manual_editor'] = undefined;

/**
 * @member {Object} scheme
 */
DocumentInSearch.prototype['scheme'] = undefined;

/**
 * @member {Number} search_score
 */
DocumentInSearch.prototype['search_score'] = undefined;

/**
 * @member {String} source_language
 */
DocumentInSearch.prototype['source_language'] = undefined;

/**
 * @member {String} subject
 */
DocumentInSearch.prototype['subject'] = undefined;

/**
 * @member {Array.<String>} target_languages
 */
DocumentInSearch.prototype['target_languages'] = undefined;

/**
 * Unix epoch time
 * @member {Number} uploaded_at
 */
DocumentInSearch.prototype['uploaded_at'] = undefined;

/**
 * @member {Number} word_count
 */
DocumentInSearch.prototype['word_count'] = undefined;

/**
 * @member {String} search_result_reason
 */
DocumentInSearch.prototype['search_result_reason'] = undefined;


// Implement Document interface:
/**
 * Extension of the file
 * @member {String} file_type
 */
Document.prototype['file_type'] = undefined;
/**
 * @member {Boolean} has_custom_package
 */
Document.prototype['has_custom_package'] = undefined;
/**
 * @member {Number} id
 */
Document.prototype['id'] = undefined;
/**
 * @member {module:model/DocumentLinks} links
 */
Document.prototype['links'] = undefined;
/**
 * @member {Array.<module:model/ManualFile>} manual_files
 */
Document.prototype['manual_files'] = undefined;
/**
 * @member {String} name
 */
Document.prototype['name'] = undefined;
/**
 * @member {Number} project_id
 */
Document.prototype['project_id'] = undefined;
/**
 * @member {Boolean} review_in_manual_editor
 */
Document.prototype['review_in_manual_editor'] = undefined;
/**
 * @member {Object} scheme
 */
Document.prototype['scheme'] = undefined;
/**
 * @member {Number} search_score
 */
Document.prototype['search_score'] = undefined;
/**
 * @member {String} source_language
 */
Document.prototype['source_language'] = undefined;
/**
 * @member {String} subject
 */
Document.prototype['subject'] = undefined;
/**
 * @member {Array.<String>} target_languages
 */
Document.prototype['target_languages'] = undefined;
/**
 * Unix epoch time
 * @member {Number} uploaded_at
 */
Document.prototype['uploaded_at'] = undefined;
/**
 * @member {Number} word_count
 */
Document.prototype['word_count'] = undefined;




export default DocumentInSearch;

