/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LanguagePair from './LanguagePair';
import ProfileSurvey from './ProfileSurvey';

/**
 * The UserVendor model module.
 * @module model/UserVendor
 * @version 1.0
 */
class UserVendor {
    /**
     * Constructs a new <code>UserVendor</code>.
     * @alias module:model/UserVendor
     */
    constructor() { 
        
        UserVendor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserVendor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserVendor} obj Optional instance to populate.
     * @return {module:model/UserVendor} The populated <code>UserVendor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserVendor();

            if (data.hasOwnProperty('can_work_manual_files')) {
                obj['can_work_manual_files'] = ApiClient.convertToType(data['can_work_manual_files'], 'Boolean');
            }
            if (data.hasOwnProperty('email_open_rate')) {
                obj['email_open_rate'] = ApiClient.convertToType(data['email_open_rate'], 'Number');
            }
            if (data.hasOwnProperty('is_frozen')) {
                obj['is_frozen'] = ApiClient.convertToType(data['is_frozen'], 'Boolean');
            }
            if (data.hasOwnProperty('is_proofreader')) {
                obj['is_proofreader'] = ApiClient.convertToType(data['is_proofreader'], 'Boolean');
            }
            if (data.hasOwnProperty('language_pairs')) {
                obj['language_pairs'] = ApiClient.convertToType(data['language_pairs'], [LanguagePair]);
            }
            if (data.hasOwnProperty('native_language')) {
                obj['native_language'] = ApiClient.convertToType(data['native_language'], 'String');
            }
            if (data.hasOwnProperty('pam_tqs')) {
                obj['pam_tqs'] = ApiClient.convertToType(data['pam_tqs'], 'Number');
            }
            if (data.hasOwnProperty('paypal_email')) {
                obj['paypal_email'] = ApiClient.convertToType(data['paypal_email'], 'String');
            }
            if (data.hasOwnProperty('profile_survey')) {
                obj['profile_survey'] = ProfileSurvey.constructFromObject(data['profile_survey']);
            }
            if (data.hasOwnProperty('require_1099')) {
                obj['require_1099'] = ApiClient.convertToType(data['require_1099'], 'Boolean');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('tms_user_name')) {
                obj['tms_user_name'] = ApiClient.convertToType(data['tms_user_name'], 'String');
            }
            if (data.hasOwnProperty('vendor_type')) {
                obj['vendor_type'] = ApiClient.convertToType(data['vendor_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserVendor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserVendor</code>.
     */
    static validateJSON(data) {
        if (data['language_pairs']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['language_pairs'])) {
                throw new Error("Expected the field `language_pairs` to be an array in the JSON data but got " + data['language_pairs']);
            }
            // validate the optional field `language_pairs` (array)
            for (const item of data['language_pairs']) {
                LanguagePair.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['native_language'] && !(typeof data['native_language'] === 'string' || data['native_language'] instanceof String)) {
            throw new Error("Expected the field `native_language` to be a primitive type in the JSON string but got " + data['native_language']);
        }
        // ensure the json data is a string
        if (data['paypal_email'] && !(typeof data['paypal_email'] === 'string' || data['paypal_email'] instanceof String)) {
            throw new Error("Expected the field `paypal_email` to be a primitive type in the JSON string but got " + data['paypal_email']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['tms_user_name'] && !(typeof data['tms_user_name'] === 'string' || data['tms_user_name'] instanceof String)) {
            throw new Error("Expected the field `tms_user_name` to be a primitive type in the JSON string but got " + data['tms_user_name']);
        }
        // ensure the json data is a string
        if (data['vendor_type'] && !(typeof data['vendor_type'] === 'string' || data['vendor_type'] instanceof String)) {
            throw new Error("Expected the field `vendor_type` to be a primitive type in the JSON string but got " + data['vendor_type']);
        }

        return true;
    }


}



/**
 * @member {Boolean} can_work_manual_files
 */
UserVendor.prototype['can_work_manual_files'] = undefined;

/**
 * @member {Number} email_open_rate
 */
UserVendor.prototype['email_open_rate'] = undefined;

/**
 * @member {Boolean} is_frozen
 */
UserVendor.prototype['is_frozen'] = undefined;

/**
 * @member {Boolean} is_proofreader
 */
UserVendor.prototype['is_proofreader'] = undefined;

/**
 * @member {Array.<module:model/LanguagePair>} language_pairs
 */
UserVendor.prototype['language_pairs'] = undefined;

/**
 * Native language of user
 * @member {String} native_language
 */
UserVendor.prototype['native_language'] = undefined;

/**
 * @member {Number} pam_tqs
 */
UserVendor.prototype['pam_tqs'] = undefined;

/**
 * @member {String} paypal_email
 */
UserVendor.prototype['paypal_email'] = undefined;

/**
 * @member {module:model/ProfileSurvey} profile_survey
 */
UserVendor.prototype['profile_survey'] = undefined;

/**
 * @member {Boolean} require_1099
 */
UserVendor.prototype['require_1099'] = undefined;

/**
 * @member {Array.<String>} tags
 */
UserVendor.prototype['tags'] = undefined;

/**
 * @member {String} tms_user_name
 */
UserVendor.prototype['tms_user_name'] = undefined;

/**
 * @member {String} vendor_type
 */
UserVendor.prototype['vendor_type'] = undefined;






export default UserVendor;

