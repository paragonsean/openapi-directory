/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Earning model module.
 * @module model/Earning
 * @version 1.0
 */
class Earning {
    /**
     * Constructs a new <code>Earning</code>.
     * @alias module:model/Earning
     */
    constructor() { 
        
        Earning.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['currency'] = 'usd';
    }

    /**
     * Constructs a <code>Earning</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Earning} obj Optional instance to populate.
     * @return {module:model/Earning} The populated <code>Earning</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Earning();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('due_date')) {
                obj['due_date'] = ApiClient.convertToType(data['due_date'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('words')) {
                obj['words'] = ApiClient.convertToType(data['words'], 'Number');
            }
            if (data.hasOwnProperty('words_approved')) {
                obj['words_approved'] = ApiClient.convertToType(data['words_approved'], 'Number');
            }
            if (data.hasOwnProperty('words_translated')) {
                obj['words_translated'] = ApiClient.convertToType(data['words_translated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Earning</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Earning</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Number} amount
 */
Earning.prototype['amount'] = undefined;

/**
 * @member {String} currency
 * @default 'usd'
 */
Earning.prototype['currency'] = 'usd';

/**
 * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
 * @member {Date} due_date
 */
Earning.prototype['due_date'] = undefined;

/**
 * @member {module:model/Earning.StatusEnum} status
 */
Earning.prototype['status'] = undefined;

/**
 * @member {Number} words
 */
Earning.prototype['words'] = undefined;

/**
 * @member {Number} words_approved
 */
Earning.prototype['words_approved'] = undefined;

/**
 * @member {Number} words_translated
 */
Earning.prototype['words_translated'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
Earning['StatusEnum'] = {

    /**
     * value: "paid"
     * @const
     */
    "paid": "paid",

    /**
     * value: "pending"
     * @const
     */
    "pending": "pending",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed"
};



export default Earning;

