/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ClientProfileNps from './ClientProfileNps';
import ProofreaderWithLanguage from './ProofreaderWithLanguage';

/**
 * The ClientProfile model module.
 * @module model/ClientProfile
 * @version 1.0
 */
class ClientProfile {
    /**
     * Constructs a new <code>ClientProfile</code>.
     * @alias module:model/ClientProfile
     */
    constructor() { 
        
        ClientProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientProfile} obj Optional instance to populate.
     * @return {module:model/ClientProfile} The populated <code>ClientProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientProfile();

            if (data.hasOwnProperty('account_creation_date')) {
                obj['account_creation_date'] = ApiClient.convertToType(data['account_creation_date'], 'Date');
            }
            if (data.hasOwnProperty('client_project_count')) {
                obj['client_project_count'] = ApiClient.convertToType(data['client_project_count'], 'Number');
            }
            if (data.hasOwnProperty('corporate')) {
                obj['corporate'] = ApiClient.convertToType(data['corporate'], 'String');
            }
            if (data.hasOwnProperty('corporate_id')) {
                obj['corporate_id'] = ApiClient.convertToType(data['corporate_id'], 'Number');
            }
            if (data.hasOwnProperty('corporate_user_count')) {
                obj['corporate_user_count'] = ApiClient.convertToType(data['corporate_user_count'], 'Number');
            }
            if (data.hasOwnProperty('frequent_file_extension')) {
                obj['frequent_file_extension'] = ApiClient.convertToType(data['frequent_file_extension'], 'String');
            }
            if (data.hasOwnProperty('frequent_language_pairs')) {
                obj['frequent_language_pairs'] = ApiClient.convertToType(data['frequent_language_pairs'], ['String']);
            }
            if (data.hasOwnProperty('full_name')) {
                obj['full_name'] = ApiClient.convertToType(data['full_name'], 'String');
            }
            if (data.hasOwnProperty('growth')) {
                obj['growth'] = ApiClient.convertToType(data['growth'], 'Boolean');
            }
            if (data.hasOwnProperty('is_complex')) {
                obj['is_complex'] = ApiClient.convertToType(data['is_complex'], 'Boolean');
            }
            if (data.hasOwnProperty('last_12_months_spending')) {
                obj['last_12_months_spending'] = ApiClient.convertToType(data['last_12_months_spending'], 'Number');
            }
            if (data.hasOwnProperty('last_project')) {
                obj['last_project'] = ApiClient.convertToType(data['last_project'], 'Number');
            }
            if (data.hasOwnProperty('last_project_time')) {
                obj['last_project_time'] = ApiClient.convertToType(data['last_project_time'], 'Date');
            }
            if (data.hasOwnProperty('last_proofreaders')) {
                obj['last_proofreaders'] = ApiClient.convertToType(data['last_proofreaders'], [ProofreaderWithLanguage]);
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = ApiClient.convertToType(data['notes'], ['String']);
            }
            if (data.hasOwnProperty('nps')) {
                obj['nps'] = ClientProfileNps.constructFromObject(data['nps']);
            }
            if (data.hasOwnProperty('user_rank_in_project_count')) {
                obj['user_rank_in_project_count'] = ApiClient.convertToType(data['user_rank_in_project_count'], 'Number');
            }
            if (data.hasOwnProperty('user_rank_in_spending')) {
                obj['user_rank_in_spending'] = ApiClient.convertToType(data['user_rank_in_spending'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['corporate'] && !(typeof data['corporate'] === 'string' || data['corporate'] instanceof String)) {
            throw new Error("Expected the field `corporate` to be a primitive type in the JSON string but got " + data['corporate']);
        }
        // ensure the json data is a string
        if (data['frequent_file_extension'] && !(typeof data['frequent_file_extension'] === 'string' || data['frequent_file_extension'] instanceof String)) {
            throw new Error("Expected the field `frequent_file_extension` to be a primitive type in the JSON string but got " + data['frequent_file_extension']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['frequent_language_pairs'])) {
            throw new Error("Expected the field `frequent_language_pairs` to be an array in the JSON data but got " + data['frequent_language_pairs']);
        }
        // ensure the json data is a string
        if (data['full_name'] && !(typeof data['full_name'] === 'string' || data['full_name'] instanceof String)) {
            throw new Error("Expected the field `full_name` to be a primitive type in the JSON string but got " + data['full_name']);
        }
        if (data['last_proofreaders']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['last_proofreaders'])) {
                throw new Error("Expected the field `last_proofreaders` to be an array in the JSON data but got " + data['last_proofreaders']);
            }
            // validate the optional field `last_proofreaders` (array)
            for (const item of data['last_proofreaders']) {
                ProofreaderWithLanguage.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['notes'])) {
            throw new Error("Expected the field `notes` to be an array in the JSON data but got " + data['notes']);
        }
        // validate the optional field `nps`
        if (data['nps']) { // data not null
          ClientProfileNps.validateJSON(data['nps']);
        }

        return true;
    }


}



/**
 * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
 * @member {Date} account_creation_date
 */
ClientProfile.prototype['account_creation_date'] = undefined;

/**
 * total project count that this client sent
 * @member {Number} client_project_count
 */
ClientProfile.prototype['client_project_count'] = undefined;

/**
 * corporate name
 * @member {String} corporate
 */
ClientProfile.prototype['corporate'] = undefined;

/**
 * corporate id
 * @member {Number} corporate_id
 */
ClientProfile.prototype['corporate_id'] = undefined;

/**
 * total user count in a corporation
 * @member {Number} corporate_user_count
 */
ClientProfile.prototype['corporate_user_count'] = undefined;

/**
 * the file extension for the files that usually this client sent
 * @member {String} frequent_file_extension
 */
ClientProfile.prototype['frequent_file_extension'] = undefined;

/**
 * frequent language pairs
 * @member {Array.<String>} frequent_language_pairs
 */
ClientProfile.prototype['frequent_language_pairs'] = undefined;

/**
 * full name of the client
 * @member {String} full_name
 */
ClientProfile.prototype['full_name'] = undefined;

/**
 * The answer for the question \"Is there any growth for this corporate's spending\". The values can be true, false or null if the corporate is oour client for less than 6 months
 * @member {Boolean} growth
 */
ClientProfile.prototype['growth'] = undefined;

/**
 * the answer for the question \"Is this client usually sent complex projects?\"
 * @member {Boolean} is_complex
 */
ClientProfile.prototype['is_complex'] = undefined;

/**
 * corporate's spending in twelve months
 * @member {Number} last_12_months_spending
 */
ClientProfile.prototype['last_12_months_spending'] = undefined;

/**
 * the quote number for the last project of this client
 * @member {Number} last_project
 */
ClientProfile.prototype['last_project'] = undefined;

/**
 * the creation date of the last project that is sent by this client
 * @member {Date} last_project_time
 */
ClientProfile.prototype['last_project_time'] = undefined;

/**
 * list of prooofreaders for the target languages of last project
 * @member {Array.<module:model/ProofreaderWithLanguage>} last_proofreaders
 */
ClientProfile.prototype['last_proofreaders'] = undefined;

/**
 * notes that is submited for this client and/or with her projects
 * @member {Array.<String>} notes
 */
ClientProfile.prototype['notes'] = undefined;

/**
 * @member {module:model/ClientProfileNps} nps
 */
ClientProfile.prototype['nps'] = undefined;

/**
 * rank of the user in all corporate users for project count. If the user is the most active user foor sending projects her rank is 1
 * @member {Number} user_rank_in_project_count
 */
ClientProfile.prototype['user_rank_in_project_count'] = undefined;

/**
 * rank of the user in all corporate users for total spending. If the user is the most active user for spending her rank is 1
 * @member {Number} user_rank_in_spending
 */
ClientProfile.prototype['user_rank_in_spending'] = undefined;






export default ClientProfile;

