/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ClientStringTranslation model module.
 * @module model/ClientStringTranslation
 * @version 1.0
 */
class ClientStringTranslation {
    /**
     * Constructs a new <code>ClientStringTranslation</code>.
     * @alias module:model/ClientStringTranslation
     */
    constructor() { 
        
        ClientStringTranslation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientStringTranslation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientStringTranslation} obj Optional instance to populate.
     * @return {module:model/ClientStringTranslation} The populated <code>ClientStringTranslation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientStringTranslation();

            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('last_changed')) {
                obj['last_changed'] = ApiClient.convertToType(data['last_changed'], 'Date');
            }
            if (data.hasOwnProperty('resource')) {
                obj['resource'] = ApiClient.convertToType(data['resource'], 'String');
            }
            if (data.hasOwnProperty('resource_id')) {
                obj['resource_id'] = ApiClient.convertToType(data['resource_id'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('target_language')) {
                obj['target_language'] = ApiClient.convertToType(data['target_language'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientStringTranslation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientStringTranslation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is a string
        if (data['resource'] && !(typeof data['resource'] === 'string' || data['resource'] instanceof String)) {
            throw new Error("Expected the field `resource` to be a primitive type in the JSON string but got " + data['resource']);
        }
        // ensure the json data is a string
        if (data['resource_id'] && !(typeof data['resource_id'] === 'string' || data['resource_id'] instanceof String)) {
            throw new Error("Expected the field `resource_id` to be a primitive type in the JSON string but got " + data['resource_id']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['target_language'] && !(typeof data['target_language'] === 'string' || data['target_language'] instanceof String)) {
            throw new Error("Expected the field `target_language` to be a primitive type in the JSON string but got " + data['target_language']);
        }

        return true;
    }


}



/**
 * @member {String} content
 */
ClientStringTranslation.prototype['content'] = undefined;

/**
 * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
 * @member {Date} last_changed
 */
ClientStringTranslation.prototype['last_changed'] = undefined;

/**
 * @member {String} resource
 */
ClientStringTranslation.prototype['resource'] = undefined;

/**
 * @member {String} resource_id
 */
ClientStringTranslation.prototype['resource_id'] = undefined;

/**
 * @member {module:model/ClientStringTranslation.StateEnum} state
 */
ClientStringTranslation.prototype['state'] = undefined;

/**
 * @member {String} target_language
 */
ClientStringTranslation.prototype['target_language'] = undefined;





/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
ClientStringTranslation['StateEnum'] = {

    /**
     * value: "Translated"
     * @const
     */
    "Translated": "Translated",

    /**
     * value: "Approved"
     * @const
     */
    "Approved": "Approved"
};



export default ClientStringTranslation;

