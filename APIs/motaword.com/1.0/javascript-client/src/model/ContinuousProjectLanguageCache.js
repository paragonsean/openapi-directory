/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContinuousProjectLanguageCache model module.
 * @module model/ContinuousProjectLanguageCache
 * @version 1.0
 */
class ContinuousProjectLanguageCache {
    /**
     * Constructs a new <code>ContinuousProjectLanguageCache</code>.
     * TM, MT and Nonparsed cache list for translations
     * @alias module:model/ContinuousProjectLanguageCache
     */
    constructor() { 
        
        ContinuousProjectLanguageCache.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContinuousProjectLanguageCache</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContinuousProjectLanguageCache} obj Optional instance to populate.
     * @return {module:model/ContinuousProjectLanguageCache} The populated <code>ContinuousProjectLanguageCache</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContinuousProjectLanguageCache();

            if (data.hasOwnProperty('mt')) {
                obj['mt'] = ApiClient.convertToType(data['mt'], {'String': 'String'});
            }
            if (data.hasOwnProperty('nonparsed')) {
                obj['nonparsed'] = ApiClient.convertToType(data['nonparsed'], {'String': 'String'});
            }
            if (data.hasOwnProperty('tm')) {
                obj['tm'] = ApiClient.convertToType(data['tm'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContinuousProjectLanguageCache</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContinuousProjectLanguageCache</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * source > target map of strings for translations
 * @member {Object.<String, String>} mt
 */
ContinuousProjectLanguageCache.prototype['mt'] = undefined;

/**
 * source > target map of strings for translations
 * @member {Object.<String, String>} nonparsed
 */
ContinuousProjectLanguageCache.prototype['nonparsed'] = undefined;

/**
 * source > target map of strings for translations
 * @member {Object.<String, String>} tm
 */
ContinuousProjectLanguageCache.prototype['tm'] = undefined;






export default ContinuousProjectLanguageCache;

