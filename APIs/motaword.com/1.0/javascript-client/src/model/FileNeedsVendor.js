/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FileNeedsVendor model module.
 * @module model/FileNeedsVendor
 * @version 1.0
 */
class FileNeedsVendor {
    /**
     * Constructs a new <code>FileNeedsVendor</code>.
     * @alias module:model/FileNeedsVendor
     */
    constructor() { 
        
        FileNeedsVendor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FileNeedsVendor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FileNeedsVendor} obj Optional instance to populate.
     * @return {module:model/FileNeedsVendor} The populated <code>FileNeedsVendor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FileNeedsVendor();

            if (data.hasOwnProperty('fileId')) {
                obj['fileId'] = ApiClient.convertToType(data['fileId'], 'Number');
            }
            if (data.hasOwnProperty('guid')) {
                obj['guid'] = ApiClient.convertToType(data['guid'], 'String');
            }
            if (data.hasOwnProperty('projectId')) {
                obj['projectId'] = ApiClient.convertToType(data['projectId'], 'Number');
            }
            if (data.hasOwnProperty('reason')) {
                obj['reason'] = ApiClient.convertToType(data['reason'], 'String');
            }
            if (data.hasOwnProperty('targetLanguage')) {
                obj['targetLanguage'] = ApiClient.convertToType(data['targetLanguage'], ['String']);
            }
            if (data.hasOwnProperty('taskType')) {
                obj['taskType'] = ApiClient.convertToType(data['taskType'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FileNeedsVendor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FileNeedsVendor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['guid'] && !(typeof data['guid'] === 'string' || data['guid'] instanceof String)) {
            throw new Error("Expected the field `guid` to be a primitive type in the JSON string but got " + data['guid']);
        }
        // ensure the json data is a string
        if (data['reason'] && !(typeof data['reason'] === 'string' || data['reason'] instanceof String)) {
            throw new Error("Expected the field `reason` to be a primitive type in the JSON string but got " + data['reason']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['targetLanguage'])) {
            throw new Error("Expected the field `targetLanguage` to be an array in the JSON data but got " + data['targetLanguage']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['taskType'])) {
            throw new Error("Expected the field `taskType` to be an array in the JSON data but got " + data['taskType']);
        }

        return true;
    }


}



/**
 * @member {Number} fileId
 */
FileNeedsVendor.prototype['fileId'] = undefined;

/**
 * @member {String} guid
 */
FileNeedsVendor.prototype['guid'] = undefined;

/**
 * @member {Number} projectId
 */
FileNeedsVendor.prototype['projectId'] = undefined;

/**
 * @member {String} reason
 */
FileNeedsVendor.prototype['reason'] = undefined;

/**
 * @member {Array.<String>} targetLanguage
 */
FileNeedsVendor.prototype['targetLanguage'] = undefined;

/**
 * @member {Array.<String>} taskType
 */
FileNeedsVendor.prototype['taskType'] = undefined;






export default FileNeedsVendor;

