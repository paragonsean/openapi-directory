/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InstantContentsTranslationResult from './InstantContentsTranslationResult';
import InstantFilesTranslationResult from './InstantFilesTranslationResult';

/**
 * The InstantTranslationResult model module.
 * @module model/InstantTranslationResult
 * @version 1.0
 */
class InstantTranslationResult {
    /**
     * Constructs a new <code>InstantTranslationResult</code>.
     * @alias module:model/InstantTranslationResult
     * @param {(module:model/InstantContentsTranslationResult|module:model/InstantFilesTranslationResult)} instance The actual instance to initialize InstantTranslationResult.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "InstantContentsTranslationResult") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                InstantContentsTranslationResult.validateJSON(instance); // throw an exception if no match
                // create InstantContentsTranslationResult from JS object
                this.actualInstance = InstantContentsTranslationResult.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into InstantContentsTranslationResult
            errorMessages.push("Failed to construct InstantContentsTranslationResult: " + err)
        }

        try {
            if (typeof instance === "InstantFilesTranslationResult") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                InstantFilesTranslationResult.validateJSON(instance); // throw an exception if no match
                // create InstantFilesTranslationResult from JS object
                this.actualInstance = InstantFilesTranslationResult.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into InstantFilesTranslationResult
            errorMessages.push("Failed to construct InstantFilesTranslationResult: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `InstantTranslationResult` with oneOf schemas InstantContentsTranslationResult, InstantFilesTranslationResult. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `InstantTranslationResult` with oneOf schemas InstantContentsTranslationResult, InstantFilesTranslationResult. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>InstantTranslationResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstantTranslationResult} obj Optional instance to populate.
     * @return {module:model/InstantTranslationResult} The populated <code>InstantTranslationResult</code> instance.
     */
    static constructFromObject(data, obj) {
        return new InstantTranslationResult(data);
    }

    /**
     * Gets the actual instance, which can be <code>InstantContentsTranslationResult</code>, <code>InstantFilesTranslationResult</code>.
     * @return {(module:model/InstantContentsTranslationResult|module:model/InstantFilesTranslationResult)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>InstantContentsTranslationResult</code>, <code>InstantFilesTranslationResult</code>.
     * @param {(module:model/InstantContentsTranslationResult|module:model/InstantFilesTranslationResult)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = InstantTranslationResult.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of InstantTranslationResult from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/InstantTranslationResult} An instance of InstantTranslationResult.
     */
    static fromJSON = function(json_string){
        return InstantTranslationResult.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * a map of source file name > base64-encoded translated file.
 * @member {Object.<String, Blob>} results
 */
InstantTranslationResult.prototype['results'] = undefined;


InstantTranslationResult.OneOf = ["InstantContentsTranslationResult", "InstantFilesTranslationResult"];

export default InstantTranslationResult;

