/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProjectPrice model module.
 * @module model/ProjectPrice
 * @version 1.0
 */
class ProjectPrice {
    /**
     * Constructs a new <code>ProjectPrice</code>.
     * @alias module:model/ProjectPrice
     */
    constructor() { 
        
        ProjectPrice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['base_currency'] = 'usd';
        obj['currency'] = 'usd';
    }

    /**
     * Constructs a <code>ProjectPrice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProjectPrice} obj Optional instance to populate.
     * @return {module:model/ProjectPrice} The populated <code>ProjectPrice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProjectPrice();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('base_amount')) {
                obj['base_amount'] = ApiClient.convertToType(data['base_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_currency')) {
                obj['base_currency'] = ApiClient.convertToType(data['base_currency'], 'String');
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('usd_amount')) {
                obj['usd_amount'] = ApiClient.convertToType(data['usd_amount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProjectPrice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProjectPrice</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['base_currency'] && !(typeof data['base_currency'] === 'string' || data['base_currency'] instanceof String)) {
            throw new Error("Expected the field `base_currency` to be a primitive type in the JSON string but got " + data['base_currency']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }

        return true;
    }


}



/**
 * @member {Number} amount
 */
ProjectPrice.prototype['amount'] = undefined;

/**
 * @member {Number} base_amount
 */
ProjectPrice.prototype['base_amount'] = undefined;

/**
 * @member {String} base_currency
 * @default 'usd'
 */
ProjectPrice.prototype['base_currency'] = 'usd';

/**
 * @member {String} currency
 * @default 'usd'
 */
ProjectPrice.prototype['currency'] = 'usd';

/**
 * USD is our base pricing currency. If `currency` is different, this will help.
 * @member {Number} usd_amount
 */
ProjectPrice.prototype['usd_amount'] = undefined;






export default ProjectPrice;

