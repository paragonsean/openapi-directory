/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BillingAddress from './BillingAddress';
import InvoiceLinks from './InvoiceLinks';

/**
 * The Invoice model module.
 * @module model/Invoice
 * @version 1.0
 */
class Invoice {
    /**
     * Constructs a new <code>Invoice</code>.
     * @alias module:model/Invoice
     */
    constructor() { 
        
        Invoice.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['base_currency'] = 'usd';
        obj['currency'] = 'usd';
    }

    /**
     * Constructs a <code>Invoice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Invoice} obj Optional instance to populate.
     * @return {module:model/Invoice} The populated <code>Invoice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Invoice();

            if (data.hasOwnProperty('amount')) {
                obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
            }
            if (data.hasOwnProperty('base_amount')) {
                obj['base_amount'] = ApiClient.convertToType(data['base_amount'], 'Number');
            }
            if (data.hasOwnProperty('base_currency')) {
                obj['base_currency'] = ApiClient.convertToType(data['base_currency'], 'String');
            }
            if (data.hasOwnProperty('billing')) {
                obj['billing'] = BillingAddress.constructFromObject(data['billing']);
            }
            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('invoice_no')) {
                obj['invoice_no'] = ApiClient.convertToType(data['invoice_no'], 'Number');
            }
            if (data.hasOwnProperty('invoiced_at')) {
                obj['invoiced_at'] = ApiClient.convertToType(data['invoiced_at'], 'Date');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = InvoiceLinks.constructFromObject(data['links']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Invoice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Invoice</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['base_currency'] && !(typeof data['base_currency'] === 'string' || data['base_currency'] instanceof String)) {
            throw new Error("Expected the field `base_currency` to be a primitive type in the JSON string but got " + data['base_currency']);
        }
        // validate the optional field `billing`
        if (data['billing']) { // data not null
          BillingAddress.validateJSON(data['billing']);
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // validate the optional field `links`
        if (data['links']) { // data not null
          InvoiceLinks.validateJSON(data['links']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * Monetary amount
 * @member {Number} amount
 */
Invoice.prototype['amount'] = undefined;

/**
 * Monetary amount
 * @member {Number} base_amount
 */
Invoice.prototype['base_amount'] = undefined;

/**
 * @member {String} base_currency
 * @default 'usd'
 */
Invoice.prototype['base_currency'] = 'usd';

/**
 * @member {module:model/BillingAddress} billing
 */
Invoice.prototype['billing'] = undefined;

/**
 * @member {String} currency
 * @default 'usd'
 */
Invoice.prototype['currency'] = 'usd';

/**
 * @member {Number} id
 */
Invoice.prototype['id'] = undefined;

/**
 * @member {Number} invoice_no
 */
Invoice.prototype['invoice_no'] = undefined;

/**
 * the date-time notation as defined by RFC 3339, section 5.6, for example, 2017-07-21T17:32:28Z
 * @member {Date} invoiced_at
 */
Invoice.prototype['invoiced_at'] = undefined;

/**
 * @member {module:model/InvoiceLinks} links
 */
Invoice.prototype['links'] = undefined;

/**
 * @member {String} status
 */
Invoice.prototype['status'] = undefined;






export default Invoice;

