/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InvitedVendor from './InvitedVendor';

/**
 * The InvitedVendorsByLanguage model module.
 * @module model/InvitedVendorsByLanguage
 * @version 1.0
 */
class InvitedVendorsByLanguage {
    /**
     * Constructs a new <code>InvitedVendorsByLanguage</code>.
     * @alias module:model/InvitedVendorsByLanguage
     */
    constructor() { 
        
        InvitedVendorsByLanguage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InvitedVendorsByLanguage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvitedVendorsByLanguage} obj Optional instance to populate.
     * @return {module:model/InvitedVendorsByLanguage} The populated <code>InvitedVendorsByLanguage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvitedVendorsByLanguage();

            if (data.hasOwnProperty('invited_vendors')) {
                obj['invited_vendors'] = ApiClient.convertToType(data['invited_vendors'], [InvitedVendor]);
            }
            if (data.hasOwnProperty('target_language')) {
                obj['target_language'] = ApiClient.convertToType(data['target_language'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvitedVendorsByLanguage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvitedVendorsByLanguage</code>.
     */
    static validateJSON(data) {
        if (data['invited_vendors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['invited_vendors'])) {
                throw new Error("Expected the field `invited_vendors` to be an array in the JSON data but got " + data['invited_vendors']);
            }
            // validate the optional field `invited_vendors` (array)
            for (const item of data['invited_vendors']) {
                InvitedVendor.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['target_language'] && !(typeof data['target_language'] === 'string' || data['target_language'] instanceof String)) {
            throw new Error("Expected the field `target_language` to be a primitive type in the JSON string but got " + data['target_language']);
        }

        return true;
    }


}



/**
 * Invited vendors for this target language
 * @member {Array.<module:model/InvitedVendor>} invited_vendors
 */
InvitedVendorsByLanguage.prototype['invited_vendors'] = undefined;

/**
 * Target Language that the vendors invited for
 * @member {String} target_language
 */
InvitedVendorsByLanguage.prototype['target_language'] = undefined;






export default InvitedVendorsByLanguage;

