/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import FilterContents from '../model/FilterContents';
import FilterDates from '../model/FilterDates';
import LanguagePairsReport from '../model/LanguagePairsReport';
import ProjectList from '../model/ProjectList';
import QaFilter from '../model/QaFilter';
import QaWarnings from '../model/QaWarnings';
import ReportFilter from '../model/ReportFilter';
import UsersReport from '../model/UsersReport';

/**
* Report service.
* @module api/ReportApi
* @version 1.0
*/
export default class ReportApi {

    /**
    * Constructs a new ReportApi. 
    * @alias module:api/ReportApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the generateQAReport operation.
     * @callback module:api/ReportApi~generateQAReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/QaWarnings} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate a QA report for given filter
     * Generate a QA report for given filter
     * @param {Object} opts Optional parameters
     * @param {module:model/QaFilter} [qaFilter] 
     * @param {module:api/ReportApi~generateQAReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/QaWarnings}
     */
    generateQAReport(opts, callback) {
      opts = opts || {};
      let postBody = opts['qaFilter'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = QaWarnings;
      return this.apiClient.callApi(
        '/reports/qa', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFilterContents operation.
     * @callback module:api/ReportApi~getFilterContentsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/FilterContents} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns available options for selected timeframe.
     * @param {Object} opts Optional parameters
     * @param {module:model/FilterDates} [filterDates] 
     * @param {module:api/ReportApi~getFilterContentsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/FilterContents}
     */
    getFilterContents(opts, callback) {
      opts = opts || {};
      let postBody = opts['filterDates'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = FilterContents;
      return this.apiClient.callApi(
        '/reports/filter', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLanguagePairsReport operation.
     * @callback module:api/ReportApi~getLanguagePairsReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/LanguagePairsReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Language pairs report
     * View translation reports for each language pair with translations under your account. You can view company-wide language pairs if you have the user permission.
     * @param {Object} opts Optional parameters
     * @param {module:model/ReportFilter} [reportFilter] 
     * @param {module:api/ReportApi~getLanguagePairsReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/LanguagePairsReport}
     */
    getLanguagePairsReport(opts, callback) {
      opts = opts || {};
      let postBody = opts['reportFilter'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = LanguagePairsReport;
      return this.apiClient.callApi(
        '/reports/language-pairs', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProjectsReport operation.
     * @callback module:api/ReportApi~getProjectsReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Projects report
     * View projects under your account, with advanced filtering. You can view company-wide projects if you have the user permission.
     * @param {Object} opts Optional parameters
     * @param {module:model/ReportFilter} [reportFilter] 
     * @param {module:api/ReportApi~getProjectsReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectList}
     */
    getProjectsReport(opts, callback) {
      opts = opts || {};
      let postBody = opts['reportFilter'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProjectList;
      return this.apiClient.callApi(
        '/reports/projects', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getUsersReport operation.
     * @callback module:api/ReportApi~getUsersReportCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UsersReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Company users report
     * View translation reports for each user under your company account. You need the permission to view users in your company.
     * @param {Object} opts Optional parameters
     * @param {module:model/ReportFilter} [reportFilter] 
     * @param {module:api/ReportApi~getUsersReportCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UsersReport}
     */
    getUsersReport(opts, callback) {
      opts = opts || {};
      let postBody = opts['reportFilter'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = UsersReport;
      return this.apiClient.callApi(
        '/reports/users', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
