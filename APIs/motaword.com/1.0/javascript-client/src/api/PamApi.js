/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ClientProfile from '../model/ClientProfile';
import Error from '../model/Error';
import OperationStatus from '../model/OperationStatus';
import PamMessage from '../model/PamMessage';
import ProjectCompletionReport from '../model/ProjectCompletionReport';

/**
* Pam service.
* @module api/PamApi
* @version 1.0
*/
export default class PamApi {

    /**
    * Constructs a new PamApi. 
    * @alias module:api/PamApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getClientProfileForPam operation.
     * @callback module:api/PamApi~getClientProfileForPamCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClientProfile} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the Pam profile of a client for this client ID
     * Get the Pam  profile of a client for this client ID
     * @param {Number} clientId Client ID
     * @param {module:api/PamApi~getClientProfileForPamCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClientProfile}
     */
    getClientProfileForPam(clientId, callback) {
      let postBody = null;
      // verify the required parameter 'clientId' is set
      if (clientId === undefined || clientId === null) {
        throw new Error("Missing the required parameter 'clientId' when calling getClientProfileForPam");
      }

      let pathParams = {
        'clientId': clientId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ClientProfile;
      return this.apiClient.callApi(
        '/pam/profiles/client/{clientId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProjectCompletionReportForPam operation.
     * @callback module:api/PamApi~getProjectCompletionReportForPamCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProjectCompletionReport} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get completion report data of a project
     * Get completion report data of a project
     * @param {Number} projectId Quote ID
     * @param {module:api/PamApi~getProjectCompletionReportForPamCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProjectCompletionReport}
     */
    getProjectCompletionReportForPam(projectId, callback) {
      let postBody = null;
      // verify the required parameter 'projectId' is set
      if (projectId === undefined || projectId === null) {
        throw new Error("Missing the required parameter 'projectId' when calling getProjectCompletionReportForPam");
      }

      let pathParams = {
        'projectId': projectId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProjectCompletionReport;
      return this.apiClient.callApi(
        '/pam/projects/{projectId}/completion-report', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the postMessage operation.
     * @callback module:api/PamApi~postMessageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OperationStatus} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Sends a message to chat
     * Sends a message to the channel.
     * @param {Object} opts Optional parameters
     * @param {module:model/PamMessage} [pamMessage] 
     * @param {module:api/PamApi~postMessageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OperationStatus}
     */
    postMessage(opts, callback) {
      opts = opts || {};
      let postBody = opts['pamMessage'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OperationStatus;
      return this.apiClient.callApi(
        '/pam/chat', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
