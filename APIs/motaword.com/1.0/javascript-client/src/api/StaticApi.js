/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import Formats from '../model/Formats';
import Language from '../model/Language';

/**
* Static service.
* @module api/StaticApi
* @version 1.0
*/
export default class StaticApi {

    /**
    * Constructs a new StaticApi. 
    * @alias module:api/StaticApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getEndpoints operation.
     * @callback module:api/StaticApi~getEndpointsCallback
     * @param {String} error Error message, if any.
     * @param {Object} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Available endpoints
     * The root endpoint will provide you with an OpenAPI definition of MotaWord API. 
     * @param {module:api/StaticApi~getEndpointsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object}
     */
    getEndpoints(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/yaml', 'application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFormats operation.
     * @callback module:api/StaticApi~getFormatsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Formats>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of supported file formats
     * Get a list of supported formats for documents, style guides and extensions. 
     * @param {module:api/StaticApi~getFormatsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Formats>}
     */
    getFormats(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Formats];
      return this.apiClient.callApi(
        '/formats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLanguages operation.
     * @callback module:api/StaticApi~getLanguagesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Language>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List of supported languages
     * Get a list of supported languages
     * @param {module:api/StaticApi~getLanguagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Language>}
     */
    getLanguages(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Language];
      return this.apiClient.callApi(
        '/languages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSwaggerYaml operation.
     * @callback module:api/StaticApi~getSwaggerYamlCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * OpenAPI YAML representation of our API
     * Get Swagger YAML
     * @param {module:api/StaticApi~getSwaggerYamlCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    getSwaggerYaml(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = [];
      let accepts = ['text/yaml'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/swagger', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
