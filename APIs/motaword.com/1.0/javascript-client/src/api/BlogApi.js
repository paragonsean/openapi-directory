/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BlogArticleList from '../model/BlogArticleList';

/**
* Blog service.
* @module api/BlogApi
* @version 1.0
*/
export default class BlogApi {

    /**
    * Constructs a new BlogApi. 
    * @alias module:api/BlogApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getBlogPosts operation.
     * @callback module:api/BlogApi~getBlogPostsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BlogArticleList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get blog posts - ordered by created desc by default
     * @param {Object} opts Optional parameters
     * @param {String} [locale] Article language, default `en`. When no blog article is available and `fallback=true` is specified, it falls back to `en`.
     * @param {Boolean} [fallback] When `true`, and no article is found in the locale, it falls back to `locale=en`.
     * @param {Number} [page = 1)] 
     * @param {Number} [perPage = 1)] 
     * @param {module:api/BlogApi~getBlogPostsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BlogArticleList}
     */
    getBlogPosts(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'locale': opts['locale'],
        'fallback': opts['fallback'],
        'page': opts['page'],
        'per_page': opts['perPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['mwoAuth', 'mwoAuth', 'mwoAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BlogArticleList;
      return this.apiClient.callApi(
        '/blogs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
