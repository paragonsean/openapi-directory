/**
 * MotaWord API
 * Use MotaWord API to post and track your translation projects.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MotaWordApi);
  }
}(this, function(expect, MotaWordApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MotaWordApi.UserApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserApi', function() {
    describe('approveVendorApplication', function() {
      it('should call approveVendorApplication successfully', function(done) {
        //uncomment below and update the code to test approveVendorApplication
        //instance.approveVendorApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createUser', function() {
      it('should call createUser successfully', function(done) {
        //uncomment below and update the code to test createUser
        //instance.createUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccount', function() {
      it('should call deleteAccount successfully', function(done) {
        //uncomment below and update the code to test deleteAccount
        //instance.deleteAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteUserAccount', function() {
      it('should call deleteUserAccount successfully', function(done) {
        //uncomment below and update the code to test deleteUserAccount
        //instance.deleteUserAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downgradeProofreader', function() {
      it('should call downgradeProofreader successfully', function(done) {
        //uncomment below and update the code to test downgradeProofreader
        //instance.downgradeProofreader(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('downgradeUserProofreader', function() {
      it('should call downgradeUserProofreader successfully', function(done) {
        //uncomment below and update the code to test downgradeUserProofreader
        //instance.downgradeUserProofreader(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('freezeAccount', function() {
      it('should call freezeAccount successfully', function(done) {
        //uncomment below and update the code to test freezeAccount
        //instance.freezeAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('freezeUserAccount', function() {
      it('should call freezeUserAccount successfully', function(done) {
        //uncomment below and update the code to test freezeUserAccount
        //instance.freezeUserAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAllVendorTags', function() {
      it('should call getAllVendorTags successfully', function(done) {
        //uncomment below and update the code to test getAllVendorTags
        //instance.getAllVendorTags(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEarnings', function() {
      it('should call getEarnings successfully', function(done) {
        //uncomment below and update the code to test getEarnings
        //instance.getEarnings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getFilteredVendors', function() {
      it('should call getFilteredVendors successfully', function(done) {
        //uncomment below and update the code to test getFilteredVendors
        //instance.getFilteredVendors(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMe', function() {
      it('should call getMe successfully', function(done) {
        //uncomment below and update the code to test getMe
        //instance.getMe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPaymentInfo', function() {
      it('should call getPaymentInfo successfully', function(done) {
        //uncomment below and update the code to test getPaymentInfo
        //instance.getPaymentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPermissions', function() {
      it('should call getPermissions successfully', function(done) {
        //uncomment below and update the code to test getPermissions
        //instance.getPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getResponsivity', function() {
      it('should call getResponsivity successfully', function(done) {
        //uncomment below and update the code to test getResponsivity
        //instance.getResponsivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getStats', function() {
      it('should call getStats successfully', function(done) {
        //uncomment below and update the code to test getStats
        //instance.getStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getThisUserGroups', function() {
      it('should call getThisUserGroups successfully', function(done) {
        //uncomment below and update the code to test getThisUserGroups
        //instance.getThisUserGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUser', function() {
      it('should call getUser successfully', function(done) {
        //uncomment below and update the code to test getUser
        //instance.getUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserEarnings', function() {
      it('should call getUserEarnings successfully', function(done) {
        //uncomment below and update the code to test getUserEarnings
        //instance.getUserEarnings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserGroups', function() {
      it('should call getUserGroups successfully', function(done) {
        //uncomment below and update the code to test getUserGroups
        //instance.getUserGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserPaymentInfo', function() {
      it('should call getUserPaymentInfo successfully', function(done) {
        //uncomment below and update the code to test getUserPaymentInfo
        //instance.getUserPaymentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserPermissions', function() {
      it('should call getUserPermissions successfully', function(done) {
        //uncomment below and update the code to test getUserPermissions
        //instance.getUserPermissions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserPopularPairs', function() {
      it('should call getUserPopularPairs successfully', function(done) {
        //uncomment below and update the code to test getUserPopularPairs
        //instance.getUserPopularPairs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserProjectStats', function() {
      it('should call getUserProjectStats successfully', function(done) {
        //uncomment below and update the code to test getUserProjectStats
        //instance.getUserProjectStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserResponsivity', function() {
      it('should call getUserResponsivity successfully', function(done) {
        //uncomment below and update the code to test getUserResponsivity
        //instance.getUserResponsivity(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserStats', function() {
      it('should call getUserStats successfully', function(done) {
        //uncomment below and update the code to test getUserStats
        //instance.getUserStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUsers', function() {
      it('should call getUsers successfully', function(done) {
        //uncomment below and update the code to test getUsers
        //instance.getUsers(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('logLocation', function() {
      it('should call logLocation successfully', function(done) {
        //uncomment below and update the code to test logLocation
        //instance.logLocation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('makeProofreader', function() {
      it('should call makeProofreader successfully', function(done) {
        //uncomment below and update the code to test makeProofreader
        //instance.makeProofreader(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('makeUserProofreader', function() {
      it('should call makeUserProofreader successfully', function(done) {
        //uncomment below and update the code to test makeUserProofreader
        //instance.makeUserProofreader(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectVendorApplication', function() {
      it('should call rejectVendorApplication successfully', function(done) {
        //uncomment below and update the code to test rejectVendorApplication
        //instance.rejectVendorApplication(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendEmailConfirmation', function() {
      it('should call sendEmailConfirmation successfully', function(done) {
        //uncomment below and update the code to test sendEmailConfirmation
        //instance.sendEmailConfirmation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendPasswordReminder', function() {
      it('should call sendPasswordReminder successfully', function(done) {
        //uncomment below and update the code to test sendPasswordReminder
        //instance.sendPasswordReminder(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendUserEmailConfirmation', function() {
      it('should call sendUserEmailConfirmation successfully', function(done) {
        //uncomment below and update the code to test sendUserEmailConfirmation
        //instance.sendUserEmailConfirmation(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribeNotification', function() {
      it('should call subscribeNotification successfully', function(done) {
        //uncomment below and update the code to test subscribeNotification
        //instance.subscribeNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subscribeUserNotification', function() {
      it('should call subscribeUserNotification successfully', function(done) {
        //uncomment below and update the code to test subscribeUserNotification
        //instance.subscribeUserNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('suspendUser', function() {
      it('should call suspendUser successfully', function(done) {
        //uncomment below and update the code to test suspendUser
        //instance.suspendUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unfreezeAccount', function() {
      it('should call unfreezeAccount successfully', function(done) {
        //uncomment below and update the code to test unfreezeAccount
        //instance.unfreezeAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unfreezeUserAccount', function() {
      it('should call unfreezeUserAccount successfully', function(done) {
        //uncomment below and update the code to test unfreezeUserAccount
        //instance.unfreezeUserAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unsubscribeNotification', function() {
      it('should call unsubscribeNotification successfully', function(done) {
        //uncomment below and update the code to test unsubscribeNotification
        //instance.unsubscribeNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unsubscribeUserNotification', function() {
      it('should call unsubscribeUserNotification successfully', function(done) {
        //uncomment below and update the code to test unsubscribeUserNotification
        //instance.unsubscribeUserNotification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateMe', function() {
      it('should call updateMe successfully', function(done) {
        //uncomment below and update the code to test updateMe
        //instance.updateMe(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePassword', function() {
      it('should call updatePassword successfully', function(done) {
        //uncomment below and update the code to test updatePassword
        //instance.updatePassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updatePaymentInfo', function() {
      it('should call updatePaymentInfo successfully', function(done) {
        //uncomment below and update the code to test updatePaymentInfo
        //instance.updatePaymentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUser', function() {
      it('should call updateUser successfully', function(done) {
        //uncomment below and update the code to test updateUser
        //instance.updateUser(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserGroup', function() {
      it('should call updateUserGroup successfully', function(done) {
        //uncomment below and update the code to test updateUserGroup
        //instance.updateUserGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateUserPaymentInfo', function() {
      it('should call updateUserPaymentInfo successfully', function(done) {
        //uncomment below and update the code to test updateUserPaymentInfo
        //instance.updateUserPaymentInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadProfilePicture', function() {
      it('should call uploadProfilePicture successfully', function(done) {
        //uncomment below and update the code to test uploadProfilePicture
        //instance.uploadProfilePicture(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('uploadUserProfilePicture', function() {
      it('should call uploadUserProfilePicture successfully', function(done) {
        //uncomment below and update the code to test uploadUserProfilePicture
        //instance.uploadUserProfilePicture(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
