/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServerStatisticsError model module.
 * @module model/ServerStatisticsError
 * @version 1.0
 */
class ServerStatisticsError {
    /**
     * Constructs a new <code>ServerStatisticsError</code>.
     * @alias module:model/ServerStatisticsError
     */
    constructor() { 
        
        ServerStatisticsError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerStatisticsError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerStatisticsError} obj Optional instance to populate.
     * @return {module:model/ServerStatisticsError} The populated <code>ServerStatisticsError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerStatisticsError();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], ['String']);
            }
            if (data.hasOwnProperty('non_field_errors')) {
                obj['non_field_errors'] = ApiClient.convertToType(data['non_field_errors'], ['String']);
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], ['String']);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], ['String']);
            }
            if (data.hasOwnProperty('stop')) {
                obj['stop'] = ApiClient.convertToType(data['stop'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerStatisticsError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerStatisticsError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['id'])) {
            throw new Error("Expected the field `id` to be an array in the JSON data but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['non_field_errors'])) {
            throw new Error("Expected the field `non_field_errors` to be an array in the JSON data but got " + data['non_field_errors']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['size'])) {
            throw new Error("Expected the field `size` to be an array in the JSON data but got " + data['size']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['start'])) {
            throw new Error("Expected the field `start` to be an array in the JSON data but got " + data['start']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stop'])) {
            throw new Error("Expected the field `stop` to be an array in the JSON data but got " + data['stop']);
        }

        return true;
    }


}



/**
 * Id field errors.
 * @member {Array.<String>} id
 */
ServerStatisticsError.prototype['id'] = undefined;

/**
 * Errors not connected to any field.
 * @member {Array.<String>} non_field_errors
 */
ServerStatisticsError.prototype['non_field_errors'] = undefined;

/**
 * Size field errors.
 * @member {Array.<String>} size
 */
ServerStatisticsError.prototype['size'] = undefined;

/**
 * Start field errors.
 * @member {Array.<String>} start
 */
ServerStatisticsError.prototype['start'] = undefined;

/**
 * Stop field errors.
 * @member {Array.<String>} stop
 */
ServerStatisticsError.prototype['stop'] = undefined;






export default ServerStatisticsError;

