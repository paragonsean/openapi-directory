/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Webhook from './Webhook';

/**
 * The ServerActionData model module.
 * @module model/ServerActionData
 * @version 1.0
 */
class ServerActionData {
    /**
     * Constructs a new <code>ServerActionData</code>.
     * @alias module:model/ServerActionData
     */
    constructor() { 
        
        ServerActionData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerActionData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerActionData} obj Optional instance to populate.
     * @return {module:model/ServerActionData} The populated <code>ServerActionData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerActionData();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('operation')) {
                obj['operation'] = ApiClient.convertToType(data['operation'], 'String');
            }
            if (data.hasOwnProperty('webhook')) {
                obj['webhook'] = Webhook.constructFromObject(data['webhook']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerActionData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerActionData</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['operation'] && !(typeof data['operation'] === 'string' || data['operation'] instanceof String)) {
            throw new Error("Expected the field `operation` to be a primitive type in the JSON string but got " + data['operation']);
        }
        // validate the optional field `webhook`
        if (data['webhook']) { // data not null
          Webhook.validateJSON(data['webhook']);
        }

        return true;
    }


}



/**
 * Name of server action.
 * @member {String} name
 */
ServerActionData.prototype['name'] = undefined;

/**
 * Manage server state. Starting a server changes state from Pending to Running. Terminating a server changes state from Running to Terminated. Stopping a server changes state from Running to Stopped. If the action results in Error, status will change to Error. 
 * @member {module:model/ServerActionData.OperationEnum} operation
 */
ServerActionData.prototype['operation'] = undefined;

/**
 * @member {module:model/Webhook} webhook
 */
ServerActionData.prototype['webhook'] = undefined;





/**
 * Allowed values for the <code>operation</code> property.
 * @enum {String}
 * @readonly
 */
ServerActionData['OperationEnum'] = {

    /**
     * value: "start"
     * @const
     */
    "start": "start",

    /**
     * value: "stop"
     * @const
     */
    "stop": "stop",

    /**
     * value: "terminate"
     * @const
     */
    "terminate": "terminate"
};



export default ServerActionData;

