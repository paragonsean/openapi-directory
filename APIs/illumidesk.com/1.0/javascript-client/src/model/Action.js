/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Action model module.
 * @module model/Action
 * @version 1.0
 */
class Action {
    /**
     * Constructs a new <code>Action</code>.
     * @alias module:model/Action
     * @param action {String} Action name.
     * @param method {String} Action method.
     * @param state {String} Action state.
     * @param userAgent {String} User agent that action is related to.
     */
    constructor(action, method, state, userAgent) { 
        
        Action.initialize(this, action, method, state, userAgent);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, action, method, state, userAgent) { 
        obj['action'] = action;
        obj['method'] = method;
        obj['state'] = state;
        obj['user_agent'] = userAgent;
    }

    /**
     * Constructs a <code>Action</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Action} obj Optional instance to populate.
     * @return {module:model/Action} The populated <code>Action</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Action();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('action_name')) {
                obj['action_name'] = ApiClient.convertToType(data['action_name'], 'String');
            }
            if (data.hasOwnProperty('can_be_cancelled')) {
                obj['can_be_cancelled'] = ApiClient.convertToType(data['can_be_cancelled'], 'Boolean');
            }
            if (data.hasOwnProperty('can_be_retried')) {
                obj['can_be_retried'] = ApiClient.convertToType(data['can_be_retried'], 'Boolean');
            }
            if (data.hasOwnProperty('end_date')) {
                obj['end_date'] = ApiClient.convertToType(data['end_date'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('is_user_action')) {
                obj['is_user_action'] = ApiClient.convertToType(data['is_user_action'], 'Boolean');
            }
            if (data.hasOwnProperty('method')) {
                obj['method'] = ApiClient.convertToType(data['method'], 'String');
            }
            if (data.hasOwnProperty('object')) {
                obj['object'] = ApiClient.convertToType(data['object'], 'String');
            }
            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('payload')) {
                obj['payload'] = ApiClient.convertToType(data['payload'], Object);
            }
            if (data.hasOwnProperty('resource_uri')) {
                obj['resource_uri'] = ApiClient.convertToType(data['resource_uri'], 'String');
            }
            if (data.hasOwnProperty('start_date')) {
                obj['start_date'] = ApiClient.convertToType(data['start_date'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = ApiClient.convertToType(data['user'], 'String');
            }
            if (data.hasOwnProperty('user_agent')) {
                obj['user_agent'] = ApiClient.convertToType(data['user_agent'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Action</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Action</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Action.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['action_name'] && !(typeof data['action_name'] === 'string' || data['action_name'] instanceof String)) {
            throw new Error("Expected the field `action_name` to be a primitive type in the JSON string but got " + data['action_name']);
        }
        // ensure the json data is a string
        if (data['end_date'] && !(typeof data['end_date'] === 'string' || data['end_date'] instanceof String)) {
            throw new Error("Expected the field `end_date` to be a primitive type in the JSON string but got " + data['end_date']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // ensure the json data is a string
        if (data['method'] && !(typeof data['method'] === 'string' || data['method'] instanceof String)) {
            throw new Error("Expected the field `method` to be a primitive type in the JSON string but got " + data['method']);
        }
        // ensure the json data is a string
        if (data['object'] && !(typeof data['object'] === 'string' || data['object'] instanceof String)) {
            throw new Error("Expected the field `object` to be a primitive type in the JSON string but got " + data['object']);
        }
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        // ensure the json data is a string
        if (data['resource_uri'] && !(typeof data['resource_uri'] === 'string' || data['resource_uri'] instanceof String)) {
            throw new Error("Expected the field `resource_uri` to be a primitive type in the JSON string but got " + data['resource_uri']);
        }
        // ensure the json data is a string
        if (data['start_date'] && !(typeof data['start_date'] === 'string' || data['start_date'] instanceof String)) {
            throw new Error("Expected the field `start_date` to be a primitive type in the JSON string but got " + data['start_date']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['user'] && !(typeof data['user'] === 'string' || data['user'] instanceof String)) {
            throw new Error("Expected the field `user` to be a primitive type in the JSON string but got " + data['user']);
        }
        // ensure the json data is a string
        if (data['user_agent'] && !(typeof data['user_agent'] === 'string' || data['user_agent'] instanceof String)) {
            throw new Error("Expected the field `user_agent` to be a primitive type in the JSON string but got " + data['user_agent']);
        }

        return true;
    }


}

Action.RequiredProperties = ["action", "method", "state", "user_agent"];

/**
 * Action name.
 * @member {String} action
 */
Action.prototype['action'] = undefined;

/**
 * Action name.
 * @member {String} action_name
 */
Action.prototype['action_name'] = undefined;

/**
 * Can action be cancelled, or not.
 * @member {Boolean} can_be_cancelled
 */
Action.prototype['can_be_cancelled'] = undefined;

/**
 * May action be retried, or not.
 * @member {Boolean} can_be_retried
 */
Action.prototype['can_be_retried'] = undefined;

/**
 * Action needs to end before a certain date and time.
 * @member {String} end_date
 */
Action.prototype['end_date'] = undefined;

/**
 * Action unique identifier, expressed as UUID.
 * @member {String} id
 */
Action.prototype['id'] = undefined;

/**
 * IP address that action is related to.
 * @member {String} ip
 */
Action.prototype['ip'] = undefined;

/**
 * Is the action related to a user, or not.
 * @member {Boolean} is_user_action
 */
Action.prototype['is_user_action'] = undefined;

/**
 * Action method.
 * @member {String} method
 */
Action.prototype['method'] = undefined;

/**
 * Action object.
 * @member {String} object
 */
Action.prototype['object'] = undefined;

/**
 * Action path.
 * @member {String} path
 */
Action.prototype['path'] = undefined;

/**
 * Object action payload.
 * @member {Object} payload
 */
Action.prototype['payload'] = undefined;

/**
 * Resource URI.
 * @member {String} resource_uri
 */
Action.prototype['resource_uri'] = undefined;

/**
 * Action date and time start.
 * @member {String} start_date
 */
Action.prototype['start_date'] = undefined;

/**
 * Action state.
 * @member {String} state
 */
Action.prototype['state'] = undefined;

/**
 * User that action is assigned to.
 * @member {String} user
 */
Action.prototype['user'] = undefined;

/**
 * User agent that action is related to.
 * @member {String} user_agent
 */
Action.prototype['user_agent'] = undefined;






export default Action;

