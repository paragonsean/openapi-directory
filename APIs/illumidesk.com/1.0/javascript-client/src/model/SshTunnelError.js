/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SshTunnelError model module.
 * @module model/SshTunnelError
 * @version 1.0
 */
class SshTunnelError {
    /**
     * Constructs a new <code>SshTunnelError</code>.
     * @alias module:model/SshTunnelError
     */
    constructor() { 
        
        SshTunnelError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SshTunnelError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SshTunnelError} obj Optional instance to populate.
     * @return {module:model/SshTunnelError} The populated <code>SshTunnelError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SshTunnelError();

            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], ['String']);
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], ['String']);
            }
            if (data.hasOwnProperty('local_port')) {
                obj['local_port'] = ApiClient.convertToType(data['local_port'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], ['String']);
            }
            if (data.hasOwnProperty('non_field_errors')) {
                obj['non_field_errors'] = ApiClient.convertToType(data['non_field_errors'], ['String']);
            }
            if (data.hasOwnProperty('remote_port')) {
                obj['remote_port'] = ApiClient.convertToType(data['remote_port'], ['String']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SshTunnelError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SshTunnelError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['endpoint'])) {
            throw new Error("Expected the field `endpoint` to be an array in the JSON data but got " + data['endpoint']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['host'])) {
            throw new Error("Expected the field `host` to be an array in the JSON data but got " + data['host']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['id'])) {
            throw new Error("Expected the field `id` to be an array in the JSON data but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['local_port'])) {
            throw new Error("Expected the field `local_port` to be an array in the JSON data but got " + data['local_port']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['name'])) {
            throw new Error("Expected the field `name` to be an array in the JSON data but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['non_field_errors'])) {
            throw new Error("Expected the field `non_field_errors` to be an array in the JSON data but got " + data['non_field_errors']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['remote_port'])) {
            throw new Error("Expected the field `remote_port` to be an array in the JSON data but got " + data['remote_port']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['username'])) {
            throw new Error("Expected the field `username` to be an array in the JSON data but got " + data['username']);
        }

        return true;
    }


}



/**
 * endpoint field errors.
 * @member {Array.<String>} endpoint
 */
SshTunnelError.prototype['endpoint'] = undefined;

/**
 * host field errors.
 * @member {Array.<String>} host
 */
SshTunnelError.prototype['host'] = undefined;

/**
 * id field errors.
 * @member {Array.<String>} id
 */
SshTunnelError.prototype['id'] = undefined;

/**
 * local_port field errors.
 * @member {Array.<String>} local_port
 */
SshTunnelError.prototype['local_port'] = undefined;

/**
 * name field errors.
 * @member {Array.<String>} name
 */
SshTunnelError.prototype['name'] = undefined;

/**
 * Errors not connected to any field.
 * @member {Array.<String>} non_field_errors
 */
SshTunnelError.prototype['non_field_errors'] = undefined;

/**
 * remote_port field errors.
 * @member {Array.<String>} remote_port
 */
SshTunnelError.prototype['remote_port'] = undefined;

/**
 * username field errors.
 * @member {Array.<String>} username
 */
SshTunnelError.prototype['username'] = undefined;






export default SshTunnelError;

