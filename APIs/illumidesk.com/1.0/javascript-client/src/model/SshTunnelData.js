/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SshTunnelData model module.
 * @module model/SshTunnelData
 * @version 1.0
 */
class SshTunnelData {
    /**
     * Constructs a new <code>SshTunnelData</code>.
     * @alias module:model/SshTunnelData
     * @param endpoint {String} SSH tunnel endpoint.
     * @param host {String} SSH tunnel host.
     * @param localPort {Number} SSH tunnel local port.
     * @param name {String} SSH tunnel name.
     * @param remotePort {Number} SSH tunnel remote port.
     * @param username {String} User name to establish SSH tunnel.
     */
    constructor(endpoint, host, localPort, name, remotePort, username) { 
        
        SshTunnelData.initialize(this, endpoint, host, localPort, name, remotePort, username);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, endpoint, host, localPort, name, remotePort, username) { 
        obj['endpoint'] = endpoint;
        obj['host'] = host;
        obj['local_port'] = localPort;
        obj['name'] = name;
        obj['remote_port'] = remotePort;
        obj['username'] = username;
    }

    /**
     * Constructs a <code>SshTunnelData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SshTunnelData} obj Optional instance to populate.
     * @return {module:model/SshTunnelData} The populated <code>SshTunnelData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SshTunnelData();

            if (data.hasOwnProperty('endpoint')) {
                obj['endpoint'] = ApiClient.convertToType(data['endpoint'], 'String');
            }
            if (data.hasOwnProperty('host')) {
                obj['host'] = ApiClient.convertToType(data['host'], 'String');
            }
            if (data.hasOwnProperty('local_port')) {
                obj['local_port'] = ApiClient.convertToType(data['local_port'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('remote_port')) {
                obj['remote_port'] = ApiClient.convertToType(data['remote_port'], 'Number');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SshTunnelData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SshTunnelData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SshTunnelData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['endpoint'] && !(typeof data['endpoint'] === 'string' || data['endpoint'] instanceof String)) {
            throw new Error("Expected the field `endpoint` to be a primitive type in the JSON string but got " + data['endpoint']);
        }
        // ensure the json data is a string
        if (data['host'] && !(typeof data['host'] === 'string' || data['host'] instanceof String)) {
            throw new Error("Expected the field `host` to be a primitive type in the JSON string but got " + data['host']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}

SshTunnelData.RequiredProperties = ["endpoint", "host", "local_port", "name", "remote_port", "username"];

/**
 * SSH tunnel endpoint.
 * @member {String} endpoint
 */
SshTunnelData.prototype['endpoint'] = undefined;

/**
 * SSH tunnel host.
 * @member {String} host
 */
SshTunnelData.prototype['host'] = undefined;

/**
 * SSH tunnel local port.
 * @member {Number} local_port
 */
SshTunnelData.prototype['local_port'] = undefined;

/**
 * SSH tunnel name.
 * @member {String} name
 */
SshTunnelData.prototype['name'] = undefined;

/**
 * SSH tunnel remote port.
 * @member {Number} remote_port
 */
SshTunnelData.prototype['remote_port'] = undefined;

/**
 * User name to establish SSH tunnel.
 * @member {String} username
 */
SshTunnelData.prototype['username'] = undefined;






export default SshTunnelData;

