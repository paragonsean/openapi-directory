/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SubscriptionError model module.
 * @module model/SubscriptionError
 * @version 1.0
 */
class SubscriptionError {
    /**
     * Constructs a new <code>SubscriptionError</code>.
     * @alias module:model/SubscriptionError
     */
    constructor() { 
        
        SubscriptionError.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SubscriptionError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SubscriptionError} obj Optional instance to populate.
     * @return {module:model/SubscriptionError} The populated <code>SubscriptionError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SubscriptionError();

            if (data.hasOwnProperty('application_fee_percent')) {
                obj['application_fee_percent'] = ApiClient.convertToType(data['application_fee_percent'], ['String']);
            }
            if (data.hasOwnProperty('cancel_at_period_end')) {
                obj['cancel_at_period_end'] = ApiClient.convertToType(data['cancel_at_period_end'], ['String']);
            }
            if (data.hasOwnProperty('canceled_at')) {
                obj['canceled_at'] = ApiClient.convertToType(data['canceled_at'], ['String']);
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], ['String']);
            }
            if (data.hasOwnProperty('current_period_end')) {
                obj['current_period_end'] = ApiClient.convertToType(data['current_period_end'], ['String']);
            }
            if (data.hasOwnProperty('current_period_start')) {
                obj['current_period_start'] = ApiClient.convertToType(data['current_period_start'], ['String']);
            }
            if (data.hasOwnProperty('ended_at')) {
                obj['ended_at'] = ApiClient.convertToType(data['ended_at'], ['String']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], ['String']);
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], ['String']);
            }
            if (data.hasOwnProperty('non_field_errors')) {
                obj['non_field_errors'] = ApiClient.convertToType(data['non_field_errors'], ['String']);
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = ApiClient.convertToType(data['plan'], ['String']);
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], ['String']);
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], ['String']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], ['String']);
            }
            if (data.hasOwnProperty('stripe_id')) {
                obj['stripe_id'] = ApiClient.convertToType(data['stripe_id'], ['String']);
            }
            if (data.hasOwnProperty('trial_end')) {
                obj['trial_end'] = ApiClient.convertToType(data['trial_end'], ['String']);
            }
            if (data.hasOwnProperty('trial_start')) {
                obj['trial_start'] = ApiClient.convertToType(data['trial_start'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SubscriptionError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SubscriptionError</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['application_fee_percent'])) {
            throw new Error("Expected the field `application_fee_percent` to be an array in the JSON data but got " + data['application_fee_percent']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['cancel_at_period_end'])) {
            throw new Error("Expected the field `cancel_at_period_end` to be an array in the JSON data but got " + data['cancel_at_period_end']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['canceled_at'])) {
            throw new Error("Expected the field `canceled_at` to be an array in the JSON data but got " + data['canceled_at']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['created'])) {
            throw new Error("Expected the field `created` to be an array in the JSON data but got " + data['created']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['current_period_end'])) {
            throw new Error("Expected the field `current_period_end` to be an array in the JSON data but got " + data['current_period_end']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['current_period_start'])) {
            throw new Error("Expected the field `current_period_start` to be an array in the JSON data but got " + data['current_period_start']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ended_at'])) {
            throw new Error("Expected the field `ended_at` to be an array in the JSON data but got " + data['ended_at']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['id'])) {
            throw new Error("Expected the field `id` to be an array in the JSON data but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['livemode'])) {
            throw new Error("Expected the field `livemode` to be an array in the JSON data but got " + data['livemode']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['non_field_errors'])) {
            throw new Error("Expected the field `non_field_errors` to be an array in the JSON data but got " + data['non_field_errors']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['plan'])) {
            throw new Error("Expected the field `plan` to be an array in the JSON data but got " + data['plan']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['quantity'])) {
            throw new Error("Expected the field `quantity` to be an array in the JSON data but got " + data['quantity']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['start'])) {
            throw new Error("Expected the field `start` to be an array in the JSON data but got " + data['start']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['status'])) {
            throw new Error("Expected the field `status` to be an array in the JSON data but got " + data['status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stripe_id'])) {
            throw new Error("Expected the field `stripe_id` to be an array in the JSON data but got " + data['stripe_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['trial_end'])) {
            throw new Error("Expected the field `trial_end` to be an array in the JSON data but got " + data['trial_end']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['trial_start'])) {
            throw new Error("Expected the field `trial_start` to be an array in the JSON data but got " + data['trial_start']);
        }

        return true;
    }


}



/**
 * application_fee_percent field errors
 * @member {Array.<String>} application_fee_percent
 */
SubscriptionError.prototype['application_fee_percent'] = undefined;

/**
 * cancel_at_period_end field errors
 * @member {Array.<String>} cancel_at_period_end
 */
SubscriptionError.prototype['cancel_at_period_end'] = undefined;

/**
 * canceled_at field errors
 * @member {Array.<String>} canceled_at
 */
SubscriptionError.prototype['canceled_at'] = undefined;

/**
 * created field errors
 * @member {Array.<String>} created
 */
SubscriptionError.prototype['created'] = undefined;

/**
 * current_period_end field errors
 * @member {Array.<String>} current_period_end
 */
SubscriptionError.prototype['current_period_end'] = undefined;

/**
 * current_period_start field errors
 * @member {Array.<String>} current_period_start
 */
SubscriptionError.prototype['current_period_start'] = undefined;

/**
 * ended_at field errors
 * @member {Array.<String>} ended_at
 */
SubscriptionError.prototype['ended_at'] = undefined;

/**
 * id field errors
 * @member {Array.<String>} id
 */
SubscriptionError.prototype['id'] = undefined;

/**
 * livemode field errors
 * @member {Array.<String>} livemode
 */
SubscriptionError.prototype['livemode'] = undefined;

/**
 * Errors not connected to any field
 * @member {Array.<String>} non_field_errors
 */
SubscriptionError.prototype['non_field_errors'] = undefined;

/**
 * plan field errors
 * @member {Array.<String>} plan
 */
SubscriptionError.prototype['plan'] = undefined;

/**
 * quantity field errors
 * @member {Array.<String>} quantity
 */
SubscriptionError.prototype['quantity'] = undefined;

/**
 * start field errors
 * @member {Array.<String>} start
 */
SubscriptionError.prototype['start'] = undefined;

/**
 * status field errors
 * @member {Array.<String>} status
 */
SubscriptionError.prototype['status'] = undefined;

/**
 * stripe_id field errors
 * @member {Array.<String>} stripe_id
 */
SubscriptionError.prototype['stripe_id'] = undefined;

/**
 * trial_end field errors
 * @member {Array.<String>} trial_end
 */
SubscriptionError.prototype['trial_end'] = undefined;

/**
 * trial_start field errors
 * @member {Array.<String>} trial_start
 */
SubscriptionError.prototype['trial_start'] = undefined;






export default SubscriptionError;

