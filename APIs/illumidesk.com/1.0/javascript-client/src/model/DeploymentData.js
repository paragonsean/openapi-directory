/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DeploymentConfig from './DeploymentConfig';

/**
 * The DeploymentData model module.
 * @module model/DeploymentData
 * @version 1.0
 */
class DeploymentData {
    /**
     * Constructs a new <code>DeploymentData</code>.
     * @alias module:model/DeploymentData
     * @param config {module:model/DeploymentConfig} 
     * @param framework {module:model/DeploymentData.FrameworkEnum} Framework that the deployment will have access to.
     * @param name {String} Deployment name.
     * @param runtime {module:model/DeploymentData.RuntimeEnum} Language runtime the deployment will use.
     */
    constructor(config, framework, name, runtime) { 
        
        DeploymentData.initialize(this, config, framework, name, runtime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, config, framework, name, runtime) { 
        obj['config'] = config;
        obj['framework'] = framework;
        obj['name'] = name;
        obj['runtime'] = runtime;
    }

    /**
     * Constructs a <code>DeploymentData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeploymentData} obj Optional instance to populate.
     * @return {module:model/DeploymentData} The populated <code>DeploymentData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeploymentData();

            if (data.hasOwnProperty('config')) {
                obj['config'] = DeploymentConfig.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('framework')) {
                obj['framework'] = ApiClient.convertToType(data['framework'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('runtime')) {
                obj['runtime'] = ApiClient.convertToType(data['runtime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeploymentData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeploymentData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeploymentData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `config`
        if (data['config']) { // data not null
          DeploymentConfig.validateJSON(data['config']);
        }
        // ensure the json data is a string
        if (data['framework'] && !(typeof data['framework'] === 'string' || data['framework'] instanceof String)) {
            throw new Error("Expected the field `framework` to be a primitive type in the JSON string but got " + data['framework']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['runtime'] && !(typeof data['runtime'] === 'string' || data['runtime'] instanceof String)) {
            throw new Error("Expected the field `runtime` to be a primitive type in the JSON string but got " + data['runtime']);
        }

        return true;
    }


}

DeploymentData.RequiredProperties = ["config", "framework", "name", "runtime"];

/**
 * @member {module:model/DeploymentConfig} config
 */
DeploymentData.prototype['config'] = undefined;

/**
 * Framework that the deployment will have access to.
 * @member {module:model/DeploymentData.FrameworkEnum} framework
 */
DeploymentData.prototype['framework'] = undefined;

/**
 * Deployment name.
 * @member {String} name
 */
DeploymentData.prototype['name'] = undefined;

/**
 * Language runtime the deployment will use.
 * @member {module:model/DeploymentData.RuntimeEnum} runtime
 */
DeploymentData.prototype['runtime'] = undefined;





/**
 * Allowed values for the <code>framework</code> property.
 * @enum {String}
 * @readonly
 */
DeploymentData['FrameworkEnum'] = {

    /**
     * value: "tensorflow"
     * @const
     */
    "tensorflow": "tensorflow"
};


/**
 * Allowed values for the <code>runtime</code> property.
 * @enum {String}
 * @readonly
 */
DeploymentData['RuntimeEnum'] = {

    /**
     * value: "python2.7"
     * @const
     */
    "python2.7": "python2.7"
};



export default DeploymentData;

