/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NotificationUpdateData model module.
 * @module model/NotificationUpdateData
 * @version 1.0
 */
class NotificationUpdateData {
    /**
     * Constructs a new <code>NotificationUpdateData</code>.
     * @alias module:model/NotificationUpdateData
     * @param read {Boolean} Mark the notification as either read or unread
     */
    constructor(read) { 
        
        NotificationUpdateData.initialize(this, read);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, read) { 
        obj['read'] = read;
    }

    /**
     * Constructs a <code>NotificationUpdateData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NotificationUpdateData} obj Optional instance to populate.
     * @return {module:model/NotificationUpdateData} The populated <code>NotificationUpdateData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NotificationUpdateData();

            if (data.hasOwnProperty('read')) {
                obj['read'] = ApiClient.convertToType(data['read'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NotificationUpdateData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NotificationUpdateData</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NotificationUpdateData.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

NotificationUpdateData.RequiredProperties = ["read"];

/**
 * Mark the notification as either read or unread
 * @member {Boolean} read
 */
NotificationUpdateData.prototype['read'] = undefined;






export default NotificationUpdateData;

