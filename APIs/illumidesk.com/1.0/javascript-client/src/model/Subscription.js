/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Subscription model module.
 * @module model/Subscription
 * @version 1.0
 */
class Subscription {
    /**
     * Constructs a new <code>Subscription</code>.
     * @alias module:model/Subscription
     * @param plan {String} Plan name.
     */
    constructor(plan) { 
        
        Subscription.initialize(this, plan);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, plan) { 
        obj['plan'] = plan;
    }

    /**
     * Constructs a <code>Subscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Subscription} obj Optional instance to populate.
     * @return {module:model/Subscription} The populated <code>Subscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Subscription();

            if (data.hasOwnProperty('application_fee_percent')) {
                obj['application_fee_percent'] = ApiClient.convertToType(data['application_fee_percent'], 'Number');
            }
            if (data.hasOwnProperty('cancel_at_period_end')) {
                obj['cancel_at_period_end'] = ApiClient.convertToType(data['cancel_at_period_end'], 'Boolean');
            }
            if (data.hasOwnProperty('canceled_at')) {
                obj['canceled_at'] = ApiClient.convertToType(data['canceled_at'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
            if (data.hasOwnProperty('current_period_end')) {
                obj['current_period_end'] = ApiClient.convertToType(data['current_period_end'], 'String');
            }
            if (data.hasOwnProperty('current_period_start')) {
                obj['current_period_start'] = ApiClient.convertToType(data['current_period_start'], 'String');
            }
            if (data.hasOwnProperty('ended_at')) {
                obj['ended_at'] = ApiClient.convertToType(data['ended_at'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('livemode')) {
                obj['livemode'] = ApiClient.convertToType(data['livemode'], 'Boolean');
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = ApiClient.convertToType(data['plan'], 'String');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('stripe_id')) {
                obj['stripe_id'] = ApiClient.convertToType(data['stripe_id'], 'String');
            }
            if (data.hasOwnProperty('trial_end')) {
                obj['trial_end'] = ApiClient.convertToType(data['trial_end'], 'String');
            }
            if (data.hasOwnProperty('trial_start')) {
                obj['trial_start'] = ApiClient.convertToType(data['trial_start'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Subscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Subscription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Subscription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['canceled_at'] && !(typeof data['canceled_at'] === 'string' || data['canceled_at'] instanceof String)) {
            throw new Error("Expected the field `canceled_at` to be a primitive type in the JSON string but got " + data['canceled_at']);
        }
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }
        // ensure the json data is a string
        if (data['current_period_end'] && !(typeof data['current_period_end'] === 'string' || data['current_period_end'] instanceof String)) {
            throw new Error("Expected the field `current_period_end` to be a primitive type in the JSON string but got " + data['current_period_end']);
        }
        // ensure the json data is a string
        if (data['current_period_start'] && !(typeof data['current_period_start'] === 'string' || data['current_period_start'] instanceof String)) {
            throw new Error("Expected the field `current_period_start` to be a primitive type in the JSON string but got " + data['current_period_start']);
        }
        // ensure the json data is a string
        if (data['ended_at'] && !(typeof data['ended_at'] === 'string' || data['ended_at'] instanceof String)) {
            throw new Error("Expected the field `ended_at` to be a primitive type in the JSON string but got " + data['ended_at']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['plan'] && !(typeof data['plan'] === 'string' || data['plan'] instanceof String)) {
            throw new Error("Expected the field `plan` to be a primitive type in the JSON string but got " + data['plan']);
        }
        // ensure the json data is a string
        if (data['start'] && !(typeof data['start'] === 'string' || data['start'] instanceof String)) {
            throw new Error("Expected the field `start` to be a primitive type in the JSON string but got " + data['start']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['stripe_id'] && !(typeof data['stripe_id'] === 'string' || data['stripe_id'] instanceof String)) {
            throw new Error("Expected the field `stripe_id` to be a primitive type in the JSON string but got " + data['stripe_id']);
        }
        // ensure the json data is a string
        if (data['trial_end'] && !(typeof data['trial_end'] === 'string' || data['trial_end'] instanceof String)) {
            throw new Error("Expected the field `trial_end` to be a primitive type in the JSON string but got " + data['trial_end']);
        }
        // ensure the json data is a string
        if (data['trial_start'] && !(typeof data['trial_start'] === 'string' || data['trial_start'] instanceof String)) {
            throw new Error("Expected the field `trial_start` to be a primitive type in the JSON string but got " + data['trial_start']);
        }

        return true;
    }


}

Subscription.RequiredProperties = ["plan"];

/**
 * Application fee percent.
 * @member {Number} application_fee_percent
 */
Subscription.prototype['application_fee_percent'] = undefined;

/**
 * Boolean value to determine whether plan cancels at the end of the period, or not.
 * @member {Boolean} cancel_at_period_end
 */
Subscription.prototype['cancel_at_period_end'] = undefined;

/**
 * Date and time when plan was cancelled.
 * @member {String} canceled_at
 */
Subscription.prototype['canceled_at'] = undefined;

/**
 * Date and time suscription was created.
 * @member {String} created
 */
Subscription.prototype['created'] = undefined;

/**
 * Current suscription plan end date.
 * @member {String} current_period_end
 */
Subscription.prototype['current_period_end'] = undefined;

/**
 * Current suscription plan start date.
 * @member {String} current_period_start
 */
Subscription.prototype['current_period_start'] = undefined;

/**
 * Date and time for when plan ended.
 * @member {String} ended_at
 */
Subscription.prototype['ended_at'] = undefined;

/**
 * Unique identifier for suscription as UUID.
 * @member {String} id
 */
Subscription.prototype['id'] = undefined;

/**
 * Suscription live, or not.
 * @member {Boolean} livemode
 */
Subscription.prototype['livemode'] = undefined;

/**
 * Plan name.
 * @member {String} plan
 */
Subscription.prototype['plan'] = undefined;

/**
 * Quantity purchased as integer.
 * @member {Number} quantity
 */
Subscription.prototype['quantity'] = undefined;

/**
 * Date and time for when plan started.
 * @member {String} start
 */
Subscription.prototype['start'] = undefined;

/**
 * Suscription status.
 * @member {String} status
 */
Subscription.prototype['status'] = undefined;

/**
 * Stripe (payment processor) identifier.
 * @member {String} stripe_id
 */
Subscription.prototype['stripe_id'] = undefined;

/**
 * Date and time for trial end.
 * @member {String} trial_end
 */
Subscription.prototype['trial_end'] = undefined;

/**
 * Date and time for trial start.
 * @member {String} trial_start
 */
Subscription.prototype['trial_start'] = undefined;






export default Subscription;

