/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeploymentConfig model module.
 * @module model/DeploymentConfig
 * @version 1.0
 */
class DeploymentConfig {
    /**
     * Constructs a new <code>DeploymentConfig</code>.
     * @alias module:model/DeploymentConfig
     */
    constructor() { 
        
        DeploymentConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DeploymentConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeploymentConfig} obj Optional instance to populate.
     * @return {module:model/DeploymentConfig} The populated <code>DeploymentConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeploymentConfig();

            if (data.hasOwnProperty('files')) {
                obj['files'] = ApiClient.convertToType(data['files'], ['String']);
            }
            if (data.hasOwnProperty('handler')) {
                obj['handler'] = ApiClient.convertToType(data['handler'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeploymentConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeploymentConfig</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['files'])) {
            throw new Error("Expected the field `files` to be an array in the JSON data but got " + data['files']);
        }
        // ensure the json data is a string
        if (data['handler'] && !(typeof data['handler'] === 'string' || data['handler'] instanceof String)) {
            throw new Error("Expected the field `handler` to be a primitive type in the JSON string but got " + data['handler']);
        }

        return true;
    }


}



/**
 * An array of ProjectFile names that should be included in the deployment.
 * @member {Array.<String>} files
 */
DeploymentConfig.prototype['files'] = undefined;

/**
 * The filename and handler function defined by the user that will handle requests to the deployment. Ex: handler.predict
 * @member {String} handler
 */
DeploymentConfig.prototype['handler'] = undefined;






export default DeploymentConfig;

