/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ServerStatistics model module.
 * @module model/ServerStatistics
 * @version 1.0
 */
class ServerStatistics {
    /**
     * Constructs a new <code>ServerStatistics</code>.
     * @alias module:model/ServerStatistics
     */
    constructor() { 
        
        ServerStatistics.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ServerStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ServerStatistics} obj Optional instance to populate.
     * @return {module:model/ServerStatistics} The populated <code>ServerStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ServerStatistics();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('server')) {
                obj['server'] = ApiClient.convertToType(data['server'], 'String');
            }
            if (data.hasOwnProperty('size')) {
                obj['size'] = ApiClient.convertToType(data['size'], 'Number');
            }
            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'String');
            }
            if (data.hasOwnProperty('stop')) {
                obj['stop'] = ApiClient.convertToType(data['stop'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ServerStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ServerStatistics</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['server'] && !(typeof data['server'] === 'string' || data['server'] instanceof String)) {
            throw new Error("Expected the field `server` to be a primitive type in the JSON string but got " + data['server']);
        }
        // ensure the json data is a string
        if (data['start'] && !(typeof data['start'] === 'string' || data['start'] instanceof String)) {
            throw new Error("Expected the field `start` to be a primitive type in the JSON string but got " + data['start']);
        }
        // ensure the json data is a string
        if (data['stop'] && !(typeof data['stop'] === 'string' || data['stop'] instanceof String)) {
            throw new Error("Expected the field `stop` to be a primitive type in the JSON string but got " + data['stop']);
        }

        return true;
    }


}



/**
 * Server statistics unique identifier in UUID format.
 * @member {String} id
 */
ServerStatistics.prototype['id'] = undefined;

/**
 * Server name.
 * @member {String} server
 */
ServerStatistics.prototype['server'] = undefined;

/**
 * Size of statistics.
 * @member {Number} size
 */
ServerStatistics.prototype['size'] = undefined;

/**
 * Start statistics, such as start time and date.
 * @member {String} start
 */
ServerStatistics.prototype['start'] = undefined;

/**
 * Stop statistics, such as stop time and date.
 * @member {String} stop
 */
ServerStatistics.prototype['stop'] = undefined;






export default ServerStatistics;

