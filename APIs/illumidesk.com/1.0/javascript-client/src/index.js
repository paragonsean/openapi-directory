/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Action from './model/Action';
import Application from './model/Application';
import ApplicationData from './model/ApplicationData';
import ApplicationError from './model/ApplicationError';
import AuthToken from './model/AuthToken';
import AuthTokenData from './model/AuthTokenData';
import AuthTokenError from './model/AuthTokenError';
import Card from './model/Card';
import CardDataPost from './model/CardDataPost';
import CardDataPutandPatch from './model/CardDataPutandPatch';
import CardError from './model/CardError';
import CardUpdateError from './model/CardUpdateError';
import Collaborator from './model/Collaborator';
import CollaboratorData from './model/CollaboratorData';
import CollaboratorError from './model/CollaboratorError';
import Deployment from './model/Deployment';
import DeploymentConfig from './model/DeploymentConfig';
import DeploymentData from './model/DeploymentData';
import DeploymentError from './model/DeploymentError';
import Email from './model/Email';
import EmailData from './model/EmailData';
import EmailError from './model/EmailError';
import Group from './model/Group';
import GroupData from './model/GroupData';
import GroupError from './model/GroupError';
import GroupUser from './model/GroupUser';
import GroupUserError from './model/GroupUserError';
import Invoice from './model/Invoice';
import InvoiceItem from './model/InvoiceItem';
import JWT from './model/JWT';
import JWTData from './model/JWTData';
import JWTError from './model/JWTError';
import NotFound from './model/NotFound';
import Notification from './model/Notification';
import NotificationError from './model/NotificationError';
import NotificationListUpdateData from './model/NotificationListUpdateData';
import NotificationSettings from './model/NotificationSettings';
import NotificationSettingsData from './model/NotificationSettingsData';
import NotificationSettingsError from './model/NotificationSettingsError';
import NotificationUpdateData from './model/NotificationUpdateData';
import Plan from './model/Plan';
import Project from './model/Project';
import ProjectCopyCheckRequest from './model/ProjectCopyCheckRequest';
import ProjectCopyRequest from './model/ProjectCopyRequest';
import ProjectData from './model/ProjectData';
import ProjectError from './model/ProjectError';
import ProjectFile from './model/ProjectFile';
import ProjectFileError from './model/ProjectFileError';
import ProjectsProjectFilesCreateRequest from './model/ProjectsProjectFilesCreateRequest';
import RefreshJSONWebToken from './model/RefreshJSONWebToken';
import RefreshJSONWebTokenData from './model/RefreshJSONWebTokenData';
import RefreshJSONWebTokenError from './model/RefreshJSONWebTokenError';
import Server from './model/Server';
import ServerAction from './model/ServerAction';
import ServerActionData from './model/ServerActionData';
import ServerActionError from './model/ServerActionError';
import ServerConfig from './model/ServerConfig';
import ServerData from './model/ServerData';
import ServerError from './model/ServerError';
import ServerRunStatistics from './model/ServerRunStatistics';
import ServerRunStatisticsData from './model/ServerRunStatisticsData';
import ServerRunStatisticsError from './model/ServerRunStatisticsError';
import ServerSize from './model/ServerSize';
import ServerSizeData from './model/ServerSizeData';
import ServerSizeError from './model/ServerSizeError';
import ServerStatistics from './model/ServerStatistics';
import ServerStatisticsData from './model/ServerStatisticsData';
import ServerStatisticsError from './model/ServerStatisticsError';
import ServerStatus from './model/ServerStatus';
import SshTunnel from './model/SshTunnel';
import SshTunnelData from './model/SshTunnelData';
import SshTunnelError from './model/SshTunnelError';
import Subscription from './model/Subscription';
import SubscriptionData from './model/SubscriptionData';
import SubscriptionError from './model/SubscriptionError';
import Team from './model/Team';
import TeamData from './model/TeamData';
import TeamError from './model/TeamError';
import User from './model/User';
import UserData from './model/UserData';
import UserError from './model/UserError';
import UserProfile from './model/UserProfile';
import UserProfileError from './model/UserProfileError';
import VerifyJSONWebToken from './model/VerifyJSONWebToken';
import VerifyJSONWebTokenData from './model/VerifyJSONWebTokenData';
import VerifyJSONWebTokenError from './model/VerifyJSONWebTokenError';
import Webhook from './model/Webhook';
import AuthApi from './api/AuthApi';
import BillingApi from './api/BillingApi';
import NotificationsApi from './api/NotificationsApi';
import OauthApi from './api/OauthApi';
import ProjectsApi from './api/ProjectsApi';
import SearchApi from './api/SearchApi';
import ServersApi from './api/ServersApi';
import TeamsApi from './api/TeamsApi';
import UsersApi from './api/UsersApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var IllumiDesk = require('index'); // See note below*.
* var xxxSvc = new IllumiDesk.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new IllumiDesk.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new IllumiDesk.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new IllumiDesk.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Action model constructor.
     * @property {module:model/Action}
     */
    Action,

    /**
     * The Application model constructor.
     * @property {module:model/Application}
     */
    Application,

    /**
     * The ApplicationData model constructor.
     * @property {module:model/ApplicationData}
     */
    ApplicationData,

    /**
     * The ApplicationError model constructor.
     * @property {module:model/ApplicationError}
     */
    ApplicationError,

    /**
     * The AuthToken model constructor.
     * @property {module:model/AuthToken}
     */
    AuthToken,

    /**
     * The AuthTokenData model constructor.
     * @property {module:model/AuthTokenData}
     */
    AuthTokenData,

    /**
     * The AuthTokenError model constructor.
     * @property {module:model/AuthTokenError}
     */
    AuthTokenError,

    /**
     * The Card model constructor.
     * @property {module:model/Card}
     */
    Card,

    /**
     * The CardDataPost model constructor.
     * @property {module:model/CardDataPost}
     */
    CardDataPost,

    /**
     * The CardDataPutandPatch model constructor.
     * @property {module:model/CardDataPutandPatch}
     */
    CardDataPutandPatch,

    /**
     * The CardError model constructor.
     * @property {module:model/CardError}
     */
    CardError,

    /**
     * The CardUpdateError model constructor.
     * @property {module:model/CardUpdateError}
     */
    CardUpdateError,

    /**
     * The Collaborator model constructor.
     * @property {module:model/Collaborator}
     */
    Collaborator,

    /**
     * The CollaboratorData model constructor.
     * @property {module:model/CollaboratorData}
     */
    CollaboratorData,

    /**
     * The CollaboratorError model constructor.
     * @property {module:model/CollaboratorError}
     */
    CollaboratorError,

    /**
     * The Deployment model constructor.
     * @property {module:model/Deployment}
     */
    Deployment,

    /**
     * The DeploymentConfig model constructor.
     * @property {module:model/DeploymentConfig}
     */
    DeploymentConfig,

    /**
     * The DeploymentData model constructor.
     * @property {module:model/DeploymentData}
     */
    DeploymentData,

    /**
     * The DeploymentError model constructor.
     * @property {module:model/DeploymentError}
     */
    DeploymentError,

    /**
     * The Email model constructor.
     * @property {module:model/Email}
     */
    Email,

    /**
     * The EmailData model constructor.
     * @property {module:model/EmailData}
     */
    EmailData,

    /**
     * The EmailError model constructor.
     * @property {module:model/EmailError}
     */
    EmailError,

    /**
     * The Group model constructor.
     * @property {module:model/Group}
     */
    Group,

    /**
     * The GroupData model constructor.
     * @property {module:model/GroupData}
     */
    GroupData,

    /**
     * The GroupError model constructor.
     * @property {module:model/GroupError}
     */
    GroupError,

    /**
     * The GroupUser model constructor.
     * @property {module:model/GroupUser}
     */
    GroupUser,

    /**
     * The GroupUserError model constructor.
     * @property {module:model/GroupUserError}
     */
    GroupUserError,

    /**
     * The Invoice model constructor.
     * @property {module:model/Invoice}
     */
    Invoice,

    /**
     * The InvoiceItem model constructor.
     * @property {module:model/InvoiceItem}
     */
    InvoiceItem,

    /**
     * The JWT model constructor.
     * @property {module:model/JWT}
     */
    JWT,

    /**
     * The JWTData model constructor.
     * @property {module:model/JWTData}
     */
    JWTData,

    /**
     * The JWTError model constructor.
     * @property {module:model/JWTError}
     */
    JWTError,

    /**
     * The NotFound model constructor.
     * @property {module:model/NotFound}
     */
    NotFound,

    /**
     * The Notification model constructor.
     * @property {module:model/Notification}
     */
    Notification,

    /**
     * The NotificationError model constructor.
     * @property {module:model/NotificationError}
     */
    NotificationError,

    /**
     * The NotificationListUpdateData model constructor.
     * @property {module:model/NotificationListUpdateData}
     */
    NotificationListUpdateData,

    /**
     * The NotificationSettings model constructor.
     * @property {module:model/NotificationSettings}
     */
    NotificationSettings,

    /**
     * The NotificationSettingsData model constructor.
     * @property {module:model/NotificationSettingsData}
     */
    NotificationSettingsData,

    /**
     * The NotificationSettingsError model constructor.
     * @property {module:model/NotificationSettingsError}
     */
    NotificationSettingsError,

    /**
     * The NotificationUpdateData model constructor.
     * @property {module:model/NotificationUpdateData}
     */
    NotificationUpdateData,

    /**
     * The Plan model constructor.
     * @property {module:model/Plan}
     */
    Plan,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The ProjectCopyCheckRequest model constructor.
     * @property {module:model/ProjectCopyCheckRequest}
     */
    ProjectCopyCheckRequest,

    /**
     * The ProjectCopyRequest model constructor.
     * @property {module:model/ProjectCopyRequest}
     */
    ProjectCopyRequest,

    /**
     * The ProjectData model constructor.
     * @property {module:model/ProjectData}
     */
    ProjectData,

    /**
     * The ProjectError model constructor.
     * @property {module:model/ProjectError}
     */
    ProjectError,

    /**
     * The ProjectFile model constructor.
     * @property {module:model/ProjectFile}
     */
    ProjectFile,

    /**
     * The ProjectFileError model constructor.
     * @property {module:model/ProjectFileError}
     */
    ProjectFileError,

    /**
     * The ProjectsProjectFilesCreateRequest model constructor.
     * @property {module:model/ProjectsProjectFilesCreateRequest}
     */
    ProjectsProjectFilesCreateRequest,

    /**
     * The RefreshJSONWebToken model constructor.
     * @property {module:model/RefreshJSONWebToken}
     */
    RefreshJSONWebToken,

    /**
     * The RefreshJSONWebTokenData model constructor.
     * @property {module:model/RefreshJSONWebTokenData}
     */
    RefreshJSONWebTokenData,

    /**
     * The RefreshJSONWebTokenError model constructor.
     * @property {module:model/RefreshJSONWebTokenError}
     */
    RefreshJSONWebTokenError,

    /**
     * The Server model constructor.
     * @property {module:model/Server}
     */
    Server,

    /**
     * The ServerAction model constructor.
     * @property {module:model/ServerAction}
     */
    ServerAction,

    /**
     * The ServerActionData model constructor.
     * @property {module:model/ServerActionData}
     */
    ServerActionData,

    /**
     * The ServerActionError model constructor.
     * @property {module:model/ServerActionError}
     */
    ServerActionError,

    /**
     * The ServerConfig model constructor.
     * @property {module:model/ServerConfig}
     */
    ServerConfig,

    /**
     * The ServerData model constructor.
     * @property {module:model/ServerData}
     */
    ServerData,

    /**
     * The ServerError model constructor.
     * @property {module:model/ServerError}
     */
    ServerError,

    /**
     * The ServerRunStatistics model constructor.
     * @property {module:model/ServerRunStatistics}
     */
    ServerRunStatistics,

    /**
     * The ServerRunStatisticsData model constructor.
     * @property {module:model/ServerRunStatisticsData}
     */
    ServerRunStatisticsData,

    /**
     * The ServerRunStatisticsError model constructor.
     * @property {module:model/ServerRunStatisticsError}
     */
    ServerRunStatisticsError,

    /**
     * The ServerSize model constructor.
     * @property {module:model/ServerSize}
     */
    ServerSize,

    /**
     * The ServerSizeData model constructor.
     * @property {module:model/ServerSizeData}
     */
    ServerSizeData,

    /**
     * The ServerSizeError model constructor.
     * @property {module:model/ServerSizeError}
     */
    ServerSizeError,

    /**
     * The ServerStatistics model constructor.
     * @property {module:model/ServerStatistics}
     */
    ServerStatistics,

    /**
     * The ServerStatisticsData model constructor.
     * @property {module:model/ServerStatisticsData}
     */
    ServerStatisticsData,

    /**
     * The ServerStatisticsError model constructor.
     * @property {module:model/ServerStatisticsError}
     */
    ServerStatisticsError,

    /**
     * The ServerStatus model constructor.
     * @property {module:model/ServerStatus}
     */
    ServerStatus,

    /**
     * The SshTunnel model constructor.
     * @property {module:model/SshTunnel}
     */
    SshTunnel,

    /**
     * The SshTunnelData model constructor.
     * @property {module:model/SshTunnelData}
     */
    SshTunnelData,

    /**
     * The SshTunnelError model constructor.
     * @property {module:model/SshTunnelError}
     */
    SshTunnelError,

    /**
     * The Subscription model constructor.
     * @property {module:model/Subscription}
     */
    Subscription,

    /**
     * The SubscriptionData model constructor.
     * @property {module:model/SubscriptionData}
     */
    SubscriptionData,

    /**
     * The SubscriptionError model constructor.
     * @property {module:model/SubscriptionError}
     */
    SubscriptionError,

    /**
     * The Team model constructor.
     * @property {module:model/Team}
     */
    Team,

    /**
     * The TeamData model constructor.
     * @property {module:model/TeamData}
     */
    TeamData,

    /**
     * The TeamError model constructor.
     * @property {module:model/TeamError}
     */
    TeamError,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The UserData model constructor.
     * @property {module:model/UserData}
     */
    UserData,

    /**
     * The UserError model constructor.
     * @property {module:model/UserError}
     */
    UserError,

    /**
     * The UserProfile model constructor.
     * @property {module:model/UserProfile}
     */
    UserProfile,

    /**
     * The UserProfileError model constructor.
     * @property {module:model/UserProfileError}
     */
    UserProfileError,

    /**
     * The VerifyJSONWebToken model constructor.
     * @property {module:model/VerifyJSONWebToken}
     */
    VerifyJSONWebToken,

    /**
     * The VerifyJSONWebTokenData model constructor.
     * @property {module:model/VerifyJSONWebTokenData}
     */
    VerifyJSONWebTokenData,

    /**
     * The VerifyJSONWebTokenError model constructor.
     * @property {module:model/VerifyJSONWebTokenError}
     */
    VerifyJSONWebTokenError,

    /**
     * The Webhook model constructor.
     * @property {module:model/Webhook}
     */
    Webhook,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The BillingApi service constructor.
    * @property {module:api/BillingApi}
    */
    BillingApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The OauthApi service constructor.
    * @property {module:api/OauthApi}
    */
    OauthApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The ServersApi service constructor.
    * @property {module:api/ServersApi}
    */
    ServersApi,

    /**
    * The TeamsApi service constructor.
    * @property {module:api/TeamsApi}
    */
    TeamsApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
