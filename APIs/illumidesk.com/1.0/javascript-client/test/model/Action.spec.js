/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IllumiDesk);
  }
}(this, function(expect, IllumiDesk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IllumiDesk.Action();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Action', function() {
    it('should create an instance of Action', function() {
      // uncomment below and update the code to test Action
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be.a(IllumiDesk.Action);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property actionName (base name: "action_name")', function() {
      // uncomment below and update the code to test the property actionName
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property canBeCancelled (base name: "can_be_cancelled")', function() {
      // uncomment below and update the code to test the property canBeCancelled
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property canBeRetried (base name: "can_be_retried")', function() {
      // uncomment below and update the code to test the property canBeRetried
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "end_date")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property ip (base name: "ip")', function() {
      // uncomment below and update the code to test the property ip
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property isUserAction (base name: "is_user_action")', function() {
      // uncomment below and update the code to test the property isUserAction
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property method (base name: "method")', function() {
      // uncomment below and update the code to test the property method
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property object (base name: "object")', function() {
      // uncomment below and update the code to test the property object
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property path (base name: "path")', function() {
      // uncomment below and update the code to test the property path
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property payload (base name: "payload")', function() {
      // uncomment below and update the code to test the property payload
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property resourceUri (base name: "resource_uri")', function() {
      // uncomment below and update the code to test the property resourceUri
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "start_date")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

    it('should have the property userAgent (base name: "user_agent")', function() {
      // uncomment below and update the code to test the property userAgent
      //var instance = new IllumiDesk.Action();
      //expect(instance).to.be();
    });

  });

}));
