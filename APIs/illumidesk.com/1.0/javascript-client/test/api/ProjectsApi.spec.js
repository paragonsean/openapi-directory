/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IllumiDesk);
  }
}(this, function(expect, IllumiDesk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IllumiDesk.ProjectsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsApi', function() {
    describe('projectCopy', function() {
      it('should call projectCopy successfully', function(done) {
        //uncomment below and update the code to test projectCopy
        //instance.projectCopy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectCopyCheck', function() {
      it('should call projectCopyCheck successfully', function(done) {
        //uncomment below and update the code to test projectCopyCheck
        //instance.projectCopyCheck(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsCollaboratorsCreate', function() {
      it('should call projectsCollaboratorsCreate successfully', function(done) {
        //uncomment below and update the code to test projectsCollaboratorsCreate
        //instance.projectsCollaboratorsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsCollaboratorsDelete', function() {
      it('should call projectsCollaboratorsDelete successfully', function(done) {
        //uncomment below and update the code to test projectsCollaboratorsDelete
        //instance.projectsCollaboratorsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsCollaboratorsList', function() {
      it('should call projectsCollaboratorsList successfully', function(done) {
        //uncomment below and update the code to test projectsCollaboratorsList
        //instance.projectsCollaboratorsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsCollaboratorsRead', function() {
      it('should call projectsCollaboratorsRead successfully', function(done) {
        //uncomment below and update the code to test projectsCollaboratorsRead
        //instance.projectsCollaboratorsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsCollaboratorsUpdate', function() {
      it('should call projectsCollaboratorsUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsCollaboratorsUpdate
        //instance.projectsCollaboratorsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsCreate', function() {
      it('should call projectsCreate successfully', function(done) {
        //uncomment below and update the code to test projectsCreate
        //instance.projectsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDelete', function() {
      it('should call projectsDelete successfully', function(done) {
        //uncomment below and update the code to test projectsDelete
        //instance.projectsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDeploymentDelete', function() {
      it('should call projectsDeploymentDelete successfully', function(done) {
        //uncomment below and update the code to test projectsDeploymentDelete
        //instance.projectsDeploymentDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDeploymentsCreate', function() {
      it('should call projectsDeploymentsCreate successfully', function(done) {
        //uncomment below and update the code to test projectsDeploymentsCreate
        //instance.projectsDeploymentsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDeploymentsDeploy', function() {
      it('should call projectsDeploymentsDeploy successfully', function(done) {
        //uncomment below and update the code to test projectsDeploymentsDeploy
        //instance.projectsDeploymentsDeploy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDeploymentsList', function() {
      it('should call projectsDeploymentsList successfully', function(done) {
        //uncomment below and update the code to test projectsDeploymentsList
        //instance.projectsDeploymentsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDeploymentsRead', function() {
      it('should call projectsDeploymentsRead successfully', function(done) {
        //uncomment below and update the code to test projectsDeploymentsRead
        //instance.projectsDeploymentsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDeploymentsReplace', function() {
      it('should call projectsDeploymentsReplace successfully', function(done) {
        //uncomment below and update the code to test projectsDeploymentsReplace
        //instance.projectsDeploymentsReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsDeploymentsUpdate', function() {
      it('should call projectsDeploymentsUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsDeploymentsUpdate
        //instance.projectsDeploymentsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsList', function() {
      it('should call projectsList successfully', function(done) {
        //uncomment below and update the code to test projectsList
        //instance.projectsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsProjectFilesCreate', function() {
      it('should call projectsProjectFilesCreate successfully', function(done) {
        //uncomment below and update the code to test projectsProjectFilesCreate
        //instance.projectsProjectFilesCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsProjectFilesDelete', function() {
      it('should call projectsProjectFilesDelete successfully', function(done) {
        //uncomment below and update the code to test projectsProjectFilesDelete
        //instance.projectsProjectFilesDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsProjectFilesList', function() {
      it('should call projectsProjectFilesList successfully', function(done) {
        //uncomment below and update the code to test projectsProjectFilesList
        //instance.projectsProjectFilesList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsProjectFilesRead', function() {
      it('should call projectsProjectFilesRead successfully', function(done) {
        //uncomment below and update the code to test projectsProjectFilesRead
        //instance.projectsProjectFilesRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsProjectFilesReplace', function() {
      it('should call projectsProjectFilesReplace successfully', function(done) {
        //uncomment below and update the code to test projectsProjectFilesReplace
        //instance.projectsProjectFilesReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsProjectFilesUpdate', function() {
      it('should call projectsProjectFilesUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsProjectFilesUpdate
        //instance.projectsProjectFilesUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsRead', function() {
      it('should call projectsRead successfully', function(done) {
        //uncomment below and update the code to test projectsRead
        //instance.projectsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsReplace', function() {
      it('should call projectsReplace successfully', function(done) {
        //uncomment below and update the code to test projectsReplace
        //instance.projectsReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersApiKey', function() {
      it('should call projectsServersApiKey successfully', function(done) {
        //uncomment below and update the code to test projectsServersApiKey
        //instance.projectsServersApiKey(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersAuth', function() {
      it('should call projectsServersAuth successfully', function(done) {
        //uncomment below and update the code to test projectsServersAuth
        //instance.projectsServersAuth(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersCreate', function() {
      it('should call projectsServersCreate successfully', function(done) {
        //uncomment below and update the code to test projectsServersCreate
        //instance.projectsServersCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersDelete', function() {
      it('should call projectsServersDelete successfully', function(done) {
        //uncomment below and update the code to test projectsServersDelete
        //instance.projectsServersDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersList', function() {
      it('should call projectsServersList successfully', function(done) {
        //uncomment below and update the code to test projectsServersList
        //instance.projectsServersList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersRead', function() {
      it('should call projectsServersRead successfully', function(done) {
        //uncomment below and update the code to test projectsServersRead
        //instance.projectsServersRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersReplace', function() {
      it('should call projectsServersReplace successfully', function(done) {
        //uncomment below and update the code to test projectsServersReplace
        //instance.projectsServersReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersRunStatsCreate', function() {
      it('should call projectsServersRunStatsCreate successfully', function(done) {
        //uncomment below and update the code to test projectsServersRunStatsCreate
        //instance.projectsServersRunStatsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersRunStatsDelete', function() {
      it('should call projectsServersRunStatsDelete successfully', function(done) {
        //uncomment below and update the code to test projectsServersRunStatsDelete
        //instance.projectsServersRunStatsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersRunStatsRead', function() {
      it('should call projectsServersRunStatsRead successfully', function(done) {
        //uncomment below and update the code to test projectsServersRunStatsRead
        //instance.projectsServersRunStatsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersRunStatsReplace', function() {
      it('should call projectsServersRunStatsReplace successfully', function(done) {
        //uncomment below and update the code to test projectsServersRunStatsReplace
        //instance.projectsServersRunStatsReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersRunStatsUpdate', function() {
      it('should call projectsServersRunStatsUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsServersRunStatsUpdate
        //instance.projectsServersRunStatsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersSshTunnelsCreate', function() {
      it('should call projectsServersSshTunnelsCreate successfully', function(done) {
        //uncomment below and update the code to test projectsServersSshTunnelsCreate
        //instance.projectsServersSshTunnelsCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersSshTunnelsDelete', function() {
      it('should call projectsServersSshTunnelsDelete successfully', function(done) {
        //uncomment below and update the code to test projectsServersSshTunnelsDelete
        //instance.projectsServersSshTunnelsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersSshTunnelsList', function() {
      it('should call projectsServersSshTunnelsList successfully', function(done) {
        //uncomment below and update the code to test projectsServersSshTunnelsList
        //instance.projectsServersSshTunnelsList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersSshTunnelsRead', function() {
      it('should call projectsServersSshTunnelsRead successfully', function(done) {
        //uncomment below and update the code to test projectsServersSshTunnelsRead
        //instance.projectsServersSshTunnelsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersSshTunnelsReplace', function() {
      it('should call projectsServersSshTunnelsReplace successfully', function(done) {
        //uncomment below and update the code to test projectsServersSshTunnelsReplace
        //instance.projectsServersSshTunnelsReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersSshTunnelsUpdate', function() {
      it('should call projectsServersSshTunnelsUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsServersSshTunnelsUpdate
        //instance.projectsServersSshTunnelsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersStart', function() {
      it('should call projectsServersStart successfully', function(done) {
        //uncomment below and update the code to test projectsServersStart
        //instance.projectsServersStart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersStatsDelete', function() {
      it('should call projectsServersStatsDelete successfully', function(done) {
        //uncomment below and update the code to test projectsServersStatsDelete
        //instance.projectsServersStatsDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersStatsRead', function() {
      it('should call projectsServersStatsRead successfully', function(done) {
        //uncomment below and update the code to test projectsServersStatsRead
        //instance.projectsServersStatsRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersStatsReplace', function() {
      it('should call projectsServersStatsReplace successfully', function(done) {
        //uncomment below and update the code to test projectsServersStatsReplace
        //instance.projectsServersStatsReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersStatsUpdate', function() {
      it('should call projectsServersStatsUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsServersStatsUpdate
        //instance.projectsServersStatsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersStatuses', function() {
      it('should call projectsServersStatuses successfully', function(done) {
        //uncomment below and update the code to test projectsServersStatuses
        //instance.projectsServersStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersStop', function() {
      it('should call projectsServersStop successfully', function(done) {
        //uncomment below and update the code to test projectsServersStop
        //instance.projectsServersStop(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsServersUpdate', function() {
      it('should call projectsServersUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsServersUpdate
        //instance.projectsServersUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsUpdate', function() {
      it('should call projectsUpdate successfully', function(done) {
        //uncomment below and update the code to test projectsUpdate
        //instance.projectsUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceTriggerCreate', function() {
      it('should call serviceTriggerCreate successfully', function(done) {
        //uncomment below and update the code to test serviceTriggerCreate
        //instance.serviceTriggerCreate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceTriggerDelete', function() {
      it('should call serviceTriggerDelete successfully', function(done) {
        //uncomment below and update the code to test serviceTriggerDelete
        //instance.serviceTriggerDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceTriggerList', function() {
      it('should call serviceTriggerList successfully', function(done) {
        //uncomment below and update the code to test serviceTriggerList
        //instance.serviceTriggerList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceTriggerRead', function() {
      it('should call serviceTriggerRead successfully', function(done) {
        //uncomment below and update the code to test serviceTriggerRead
        //instance.serviceTriggerRead(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceTriggerReplace', function() {
      it('should call serviceTriggerReplace successfully', function(done) {
        //uncomment below and update the code to test serviceTriggerReplace
        //instance.serviceTriggerReplace(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('serviceTriggerUpdate', function() {
      it('should call serviceTriggerUpdate successfully', function(done) {
        //uncomment below and update the code to test serviceTriggerUpdate
        //instance.serviceTriggerUpdate(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
