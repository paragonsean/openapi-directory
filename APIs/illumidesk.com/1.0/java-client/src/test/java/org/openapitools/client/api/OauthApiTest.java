/*
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Application;
import org.openapitools.client.model.ApplicationData;
import org.openapitools.client.model.ApplicationError;
import org.openapitools.client.model.NotFound;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OauthApi
 */
@Disabled
public class OauthApiTest {

    private final OauthApi api = new OauthApi();

    /**
     * Create a new OAuth2 application
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthApplicationCreateTest() throws ApiException {
        String namespace = null;
        ApplicationData applicationData = null;
        Application response = api.oauthApplicationCreate(namespace, applicationData);
        // TODO: test validations
    }

    /**
     * Delete an application by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthApplicationDeleteTest() throws ApiException {
        String namespace = null;
        String application = null;
        api.oauthApplicationDelete(namespace, application);
        // TODO: test validations
    }

    /**
     * Get an application by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthApplicationReadTest() throws ApiException {
        String namespace = null;
        String application = null;
        Application response = api.oauthApplicationRead(namespace, application);
        // TODO: test validations
    }

    /**
     * Replace an application by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthApplicationReplaceTest() throws ApiException {
        String namespace = null;
        String application = null;
        ApplicationData oauthApplicationData = null;
        Application response = api.oauthApplicationReplace(namespace, application, oauthApplicationData);
        // TODO: test validations
    }

    /**
     * Update an application by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthApplicationUpdateTest() throws ApiException {
        String namespace = null;
        String application = null;
        ApplicationData applicationData = null;
        Application response = api.oauthApplicationUpdate(namespace, application, applicationData);
        // TODO: test validations
    }

    /**
     * Retrieve oauth applications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthApplicationsListTest() throws ApiException {
        String namespace = null;
        String limit = null;
        String offset = null;
        String ordering = null;
        List<Application> response = api.oauthApplicationsList(namespace, limit, offset, ordering);
        // TODO: test validations
    }

}
