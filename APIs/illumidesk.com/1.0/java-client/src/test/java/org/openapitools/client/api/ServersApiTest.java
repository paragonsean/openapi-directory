/*
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NotFound;
import org.openapitools.client.model.ServerSize;
import org.openapitools.client.model.ServerSizeData;
import org.openapitools.client.model.ServerSizeError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServersApi
 */
@Disabled
public class ServersApiTest {

    private final ServersApi api = new ServersApi();

    /**
     * Get a server size by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serversOptionsResourcesReadTest() throws ApiException {
        String size = null;
        ServerSize response = api.serversOptionsResourcesRead(size);
        // TODO: test validations
    }

    /**
     * Create a new server size item
     *
     * Only super users with on-premises version have acceess to this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serversOptionsServerSizeCreateTest() throws ApiException {
        ServerSizeData serversizeData = null;
        ServerSize response = api.serversOptionsServerSizeCreate(serversizeData);
        // TODO: test validations
    }

    /**
     * Delete a server size by id
     *
     * Only super users with on-premises version have acceess to this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serversOptionsServerSizeDeleteTest() throws ApiException {
        String size = null;
        api.serversOptionsServerSizeDelete(size);
        // TODO: test validations
    }

    /**
     * Replace a server size by id
     *
     * Only super users with on-premises version have acceess to this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serversOptionsServerSizeReplaceTest() throws ApiException {
        String size = null;
        ServerSizeData serversizeData = null;
        ServerSize response = api.serversOptionsServerSizeReplace(size, serversizeData);
        // TODO: test validations
    }

    /**
     * Update a server size by id
     *
     * Only super users with on-premises version have acceess to this endpoint.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serversOptionsServerSizeUpdateTest() throws ApiException {
        String size = null;
        ServerSizeData serversizeData = null;
        ServerSize response = api.serversOptionsServerSizeUpdate(size, serversizeData);
        // TODO: test validations
    }

    /**
     * Retrieve available server sizes
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void serversOptionsSizesListTest() throws ApiException {
        String limit = null;
        String offset = null;
        String ordering = null;
        List<ServerSize> response = api.serversOptionsSizesList(limit, offset, ordering);
        // TODO: test validations
    }

}
