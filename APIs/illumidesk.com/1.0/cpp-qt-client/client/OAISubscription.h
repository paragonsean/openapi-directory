/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubscription.h
 *
 * 
 */

#ifndef OAISubscription_H
#define OAISubscription_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubscription : public OAIObject {
public:
    OAISubscription();
    OAISubscription(QString json);
    ~OAISubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getApplicationFeePercent() const;
    void setApplicationFeePercent(const double &application_fee_percent);
    bool is_application_fee_percent_Set() const;
    bool is_application_fee_percent_Valid() const;

    bool isCancelAtPeriodEnd() const;
    void setCancelAtPeriodEnd(const bool &cancel_at_period_end);
    bool is_cancel_at_period_end_Set() const;
    bool is_cancel_at_period_end_Valid() const;

    QString getCanceledAt() const;
    void setCanceledAt(const QString &canceled_at);
    bool is_canceled_at_Set() const;
    bool is_canceled_at_Valid() const;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getCurrentPeriodEnd() const;
    void setCurrentPeriodEnd(const QString &current_period_end);
    bool is_current_period_end_Set() const;
    bool is_current_period_end_Valid() const;

    QString getCurrentPeriodStart() const;
    void setCurrentPeriodStart(const QString &current_period_start);
    bool is_current_period_start_Set() const;
    bool is_current_period_start_Valid() const;

    QString getEndedAt() const;
    void setEndedAt(const QString &ended_at);
    bool is_ended_at_Set() const;
    bool is_ended_at_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isLivemode() const;
    void setLivemode(const bool &livemode);
    bool is_livemode_Set() const;
    bool is_livemode_Valid() const;

    QString getPlan() const;
    void setPlan(const QString &plan);
    bool is_plan_Set() const;
    bool is_plan_Valid() const;

    qint32 getQuantity() const;
    void setQuantity(const qint32 &quantity);
    bool is_quantity_Set() const;
    bool is_quantity_Valid() const;

    QString getStart() const;
    void setStart(const QString &start);
    bool is_start_Set() const;
    bool is_start_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStripeId() const;
    void setStripeId(const QString &stripe_id);
    bool is_stripe_id_Set() const;
    bool is_stripe_id_Valid() const;

    QString getTrialEnd() const;
    void setTrialEnd(const QString &trial_end);
    bool is_trial_end_Set() const;
    bool is_trial_end_Valid() const;

    QString getTrialStart() const;
    void setTrialStart(const QString &trial_start);
    bool is_trial_start_Set() const;
    bool is_trial_start_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_application_fee_percent;
    bool m_application_fee_percent_isSet;
    bool m_application_fee_percent_isValid;

    bool m_cancel_at_period_end;
    bool m_cancel_at_period_end_isSet;
    bool m_cancel_at_period_end_isValid;

    QString m_canceled_at;
    bool m_canceled_at_isSet;
    bool m_canceled_at_isValid;

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_current_period_end;
    bool m_current_period_end_isSet;
    bool m_current_period_end_isValid;

    QString m_current_period_start;
    bool m_current_period_start_isSet;
    bool m_current_period_start_isValid;

    QString m_ended_at;
    bool m_ended_at_isSet;
    bool m_ended_at_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_livemode;
    bool m_livemode_isSet;
    bool m_livemode_isValid;

    QString m_plan;
    bool m_plan_isSet;
    bool m_plan_isValid;

    qint32 m_quantity;
    bool m_quantity_isSet;
    bool m_quantity_isValid;

    QString m_start;
    bool m_start_isSet;
    bool m_start_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_stripe_id;
    bool m_stripe_id_isSet;
    bool m_stripe_id_isValid;

    QString m_trial_end;
    bool m_trial_end_isSet;
    bool m_trial_end_isValid;

    QString m_trial_start;
    bool m_trial_start_isSet;
    bool m_trial_start_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubscription)

#endif // OAISubscription_H
