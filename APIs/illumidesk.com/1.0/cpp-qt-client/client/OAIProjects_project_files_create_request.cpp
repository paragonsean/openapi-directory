/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjects_project_files_create_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjects_project_files_create_request::OAIProjects_project_files_create_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjects_project_files_create_request::OAIProjects_project_files_create_request() {
    this->initializeModel();
}

OAIProjects_project_files_create_request::~OAIProjects_project_files_create_request() {}

void OAIProjects_project_files_create_request::initializeModel() {

    m_file_isSet = false;
    m_file_isValid = false;

    m_base64_data_isSet = false;
    m_base64_data_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;
}

void OAIProjects_project_files_create_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjects_project_files_create_request::fromJsonObject(QJsonObject json) {

    m_file_isValid = ::OpenAPI::fromJsonValue(m_file, json[QString("file")]);
    m_file_isSet = !json[QString("file")].isNull() && m_file_isValid;

    m_base64_data_isValid = ::OpenAPI::fromJsonValue(m_base64_data, json[QString("base64_data")]);
    m_base64_data_isSet = !json[QString("base64_data")].isNull() && m_base64_data_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;
}

QString OAIProjects_project_files_create_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjects_project_files_create_request::asJsonObject() const {
    QJsonObject obj;
    if (m_file.isSet()) {
        obj.insert(QString("file"), ::OpenAPI::toJsonValue(m_file));
    }
    if (m_base64_data_isSet) {
        obj.insert(QString("base64_data"), ::OpenAPI::toJsonValue(m_base64_data));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    return obj;
}

OAIHttpFileElement OAIProjects_project_files_create_request::getFile() const {
    return m_file;
}
void OAIProjects_project_files_create_request::setFile(const OAIHttpFileElement &file) {
    m_file = file;
    m_file_isSet = true;
}

bool OAIProjects_project_files_create_request::is_file_Set() const{
    return m_file_isSet;
}

bool OAIProjects_project_files_create_request::is_file_Valid() const{
    return m_file_isValid;
}

QString OAIProjects_project_files_create_request::getBase64Data() const {
    return m_base64_data;
}
void OAIProjects_project_files_create_request::setBase64Data(const QString &base64_data) {
    m_base64_data = base64_data;
    m_base64_data_isSet = true;
}

bool OAIProjects_project_files_create_request::is_base64_data_Set() const{
    return m_base64_data_isSet;
}

bool OAIProjects_project_files_create_request::is_base64_data_Valid() const{
    return m_base64_data_isValid;
}

QString OAIProjects_project_files_create_request::getName() const {
    return m_name;
}
void OAIProjects_project_files_create_request::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProjects_project_files_create_request::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProjects_project_files_create_request::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProjects_project_files_create_request::getPath() const {
    return m_path;
}
void OAIProjects_project_files_create_request::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIProjects_project_files_create_request::is_path_Set() const{
    return m_path_isSet;
}

bool OAIProjects_project_files_create_request::is_path_Valid() const{
    return m_path_isValid;
}

bool OAIProjects_project_files_create_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_file.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_base64_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjects_project_files_create_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
