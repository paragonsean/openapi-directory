/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICard.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICard::OAICard(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICard::OAICard() {
    this->initializeModel();
}

OAICard::~OAICard() {}

void OAICard::initializeModel() {

    m_address_city_isSet = false;
    m_address_city_isValid = false;

    m_address_country_isSet = false;
    m_address_country_isValid = false;

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line1_check_isSet = false;
    m_address_line1_check_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_address_state_isSet = false;
    m_address_state_isValid = false;

    m_address_zip_isSet = false;
    m_address_zip_isValid = false;

    m_address_zip_check_isSet = false;
    m_address_zip_check_isValid = false;

    m_brand_isSet = false;
    m_brand_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_customer_isSet = false;
    m_customer_isValid = false;

    m_cvc_check_isSet = false;
    m_cvc_check_isValid = false;

    m_exp_month_isSet = false;
    m_exp_month_isValid = false;

    m_exp_year_isSet = false;
    m_exp_year_isValid = false;

    m_fingerprint_isSet = false;
    m_fingerprint_isValid = false;

    m_funding_isSet = false;
    m_funding_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last4_isSet = false;
    m_last4_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_stripe_id_isSet = false;
    m_stripe_id_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;
}

void OAICard::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICard::fromJsonObject(QJsonObject json) {

    m_address_city_isValid = ::OpenAPI::fromJsonValue(m_address_city, json[QString("address_city")]);
    m_address_city_isSet = !json[QString("address_city")].isNull() && m_address_city_isValid;

    m_address_country_isValid = ::OpenAPI::fromJsonValue(m_address_country, json[QString("address_country")]);
    m_address_country_isSet = !json[QString("address_country")].isNull() && m_address_country_isValid;

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("address_line1")]);
    m_address_line1_isSet = !json[QString("address_line1")].isNull() && m_address_line1_isValid;

    m_address_line1_check_isValid = ::OpenAPI::fromJsonValue(m_address_line1_check, json[QString("address_line1_check")]);
    m_address_line1_check_isSet = !json[QString("address_line1_check")].isNull() && m_address_line1_check_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("address_line2")]);
    m_address_line2_isSet = !json[QString("address_line2")].isNull() && m_address_line2_isValid;

    m_address_state_isValid = ::OpenAPI::fromJsonValue(m_address_state, json[QString("address_state")]);
    m_address_state_isSet = !json[QString("address_state")].isNull() && m_address_state_isValid;

    m_address_zip_isValid = ::OpenAPI::fromJsonValue(m_address_zip, json[QString("address_zip")]);
    m_address_zip_isSet = !json[QString("address_zip")].isNull() && m_address_zip_isValid;

    m_address_zip_check_isValid = ::OpenAPI::fromJsonValue(m_address_zip_check, json[QString("address_zip_check")]);
    m_address_zip_check_isSet = !json[QString("address_zip_check")].isNull() && m_address_zip_check_isValid;

    m_brand_isValid = ::OpenAPI::fromJsonValue(m_brand, json[QString("brand")]);
    m_brand_isSet = !json[QString("brand")].isNull() && m_brand_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;

    m_cvc_check_isValid = ::OpenAPI::fromJsonValue(m_cvc_check, json[QString("cvc_check")]);
    m_cvc_check_isSet = !json[QString("cvc_check")].isNull() && m_cvc_check_isValid;

    m_exp_month_isValid = ::OpenAPI::fromJsonValue(m_exp_month, json[QString("exp_month")]);
    m_exp_month_isSet = !json[QString("exp_month")].isNull() && m_exp_month_isValid;

    m_exp_year_isValid = ::OpenAPI::fromJsonValue(m_exp_year, json[QString("exp_year")]);
    m_exp_year_isSet = !json[QString("exp_year")].isNull() && m_exp_year_isValid;

    m_fingerprint_isValid = ::OpenAPI::fromJsonValue(m_fingerprint, json[QString("fingerprint")]);
    m_fingerprint_isSet = !json[QString("fingerprint")].isNull() && m_fingerprint_isValid;

    m_funding_isValid = ::OpenAPI::fromJsonValue(m_funding, json[QString("funding")]);
    m_funding_isSet = !json[QString("funding")].isNull() && m_funding_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last4_isValid = ::OpenAPI::fromJsonValue(m_last4, json[QString("last4")]);
    m_last4_isSet = !json[QString("last4")].isNull() && m_last4_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_stripe_id_isValid = ::OpenAPI::fromJsonValue(m_stripe_id, json[QString("stripe_id")]);
    m_stripe_id_isSet = !json[QString("stripe_id")].isNull() && m_stripe_id_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("token")]);
    m_token_isSet = !json[QString("token")].isNull() && m_token_isValid;
}

QString OAICard::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICard::asJsonObject() const {
    QJsonObject obj;
    if (m_address_city_isSet) {
        obj.insert(QString("address_city"), ::OpenAPI::toJsonValue(m_address_city));
    }
    if (m_address_country_isSet) {
        obj.insert(QString("address_country"), ::OpenAPI::toJsonValue(m_address_country));
    }
    if (m_address_line1_isSet) {
        obj.insert(QString("address_line1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line1_check_isSet) {
        obj.insert(QString("address_line1_check"), ::OpenAPI::toJsonValue(m_address_line1_check));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("address_line2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_address_state_isSet) {
        obj.insert(QString("address_state"), ::OpenAPI::toJsonValue(m_address_state));
    }
    if (m_address_zip_isSet) {
        obj.insert(QString("address_zip"), ::OpenAPI::toJsonValue(m_address_zip));
    }
    if (m_address_zip_check_isSet) {
        obj.insert(QString("address_zip_check"), ::OpenAPI::toJsonValue(m_address_zip_check));
    }
    if (m_brand_isSet) {
        obj.insert(QString("brand"), ::OpenAPI::toJsonValue(m_brand));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_customer_isSet) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    if (m_cvc_check_isSet) {
        obj.insert(QString("cvc_check"), ::OpenAPI::toJsonValue(m_cvc_check));
    }
    if (m_exp_month_isSet) {
        obj.insert(QString("exp_month"), ::OpenAPI::toJsonValue(m_exp_month));
    }
    if (m_exp_year_isSet) {
        obj.insert(QString("exp_year"), ::OpenAPI::toJsonValue(m_exp_year));
    }
    if (m_fingerprint_isSet) {
        obj.insert(QString("fingerprint"), ::OpenAPI::toJsonValue(m_fingerprint));
    }
    if (m_funding_isSet) {
        obj.insert(QString("funding"), ::OpenAPI::toJsonValue(m_funding));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last4_isSet) {
        obj.insert(QString("last4"), ::OpenAPI::toJsonValue(m_last4));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_stripe_id_isSet) {
        obj.insert(QString("stripe_id"), ::OpenAPI::toJsonValue(m_stripe_id));
    }
    if (m_token_isSet) {
        obj.insert(QString("token"), ::OpenAPI::toJsonValue(m_token));
    }
    return obj;
}

QString OAICard::getAddressCity() const {
    return m_address_city;
}
void OAICard::setAddressCity(const QString &address_city) {
    m_address_city = address_city;
    m_address_city_isSet = true;
}

bool OAICard::is_address_city_Set() const{
    return m_address_city_isSet;
}

bool OAICard::is_address_city_Valid() const{
    return m_address_city_isValid;
}

QString OAICard::getAddressCountry() const {
    return m_address_country;
}
void OAICard::setAddressCountry(const QString &address_country) {
    m_address_country = address_country;
    m_address_country_isSet = true;
}

bool OAICard::is_address_country_Set() const{
    return m_address_country_isSet;
}

bool OAICard::is_address_country_Valid() const{
    return m_address_country_isValid;
}

QString OAICard::getAddressLine1() const {
    return m_address_line1;
}
void OAICard::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAICard::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAICard::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAICard::getAddressLine1Check() const {
    return m_address_line1_check;
}
void OAICard::setAddressLine1Check(const QString &address_line1_check) {
    m_address_line1_check = address_line1_check;
    m_address_line1_check_isSet = true;
}

bool OAICard::is_address_line1_check_Set() const{
    return m_address_line1_check_isSet;
}

bool OAICard::is_address_line1_check_Valid() const{
    return m_address_line1_check_isValid;
}

QString OAICard::getAddressLine2() const {
    return m_address_line2;
}
void OAICard::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAICard::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAICard::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAICard::getAddressState() const {
    return m_address_state;
}
void OAICard::setAddressState(const QString &address_state) {
    m_address_state = address_state;
    m_address_state_isSet = true;
}

bool OAICard::is_address_state_Set() const{
    return m_address_state_isSet;
}

bool OAICard::is_address_state_Valid() const{
    return m_address_state_isValid;
}

QString OAICard::getAddressZip() const {
    return m_address_zip;
}
void OAICard::setAddressZip(const QString &address_zip) {
    m_address_zip = address_zip;
    m_address_zip_isSet = true;
}

bool OAICard::is_address_zip_Set() const{
    return m_address_zip_isSet;
}

bool OAICard::is_address_zip_Valid() const{
    return m_address_zip_isValid;
}

QString OAICard::getAddressZipCheck() const {
    return m_address_zip_check;
}
void OAICard::setAddressZipCheck(const QString &address_zip_check) {
    m_address_zip_check = address_zip_check;
    m_address_zip_check_isSet = true;
}

bool OAICard::is_address_zip_check_Set() const{
    return m_address_zip_check_isSet;
}

bool OAICard::is_address_zip_check_Valid() const{
    return m_address_zip_check_isValid;
}

QString OAICard::getBrand() const {
    return m_brand;
}
void OAICard::setBrand(const QString &brand) {
    m_brand = brand;
    m_brand_isSet = true;
}

bool OAICard::is_brand_Set() const{
    return m_brand_isSet;
}

bool OAICard::is_brand_Valid() const{
    return m_brand_isValid;
}

QString OAICard::getCreated() const {
    return m_created;
}
void OAICard::setCreated(const QString &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAICard::is_created_Set() const{
    return m_created_isSet;
}

bool OAICard::is_created_Valid() const{
    return m_created_isValid;
}

QString OAICard::getCustomer() const {
    return m_customer;
}
void OAICard::setCustomer(const QString &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAICard::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAICard::is_customer_Valid() const{
    return m_customer_isValid;
}

QString OAICard::getCvcCheck() const {
    return m_cvc_check;
}
void OAICard::setCvcCheck(const QString &cvc_check) {
    m_cvc_check = cvc_check;
    m_cvc_check_isSet = true;
}

bool OAICard::is_cvc_check_Set() const{
    return m_cvc_check_isSet;
}

bool OAICard::is_cvc_check_Valid() const{
    return m_cvc_check_isValid;
}

qint32 OAICard::getExpMonth() const {
    return m_exp_month;
}
void OAICard::setExpMonth(const qint32 &exp_month) {
    m_exp_month = exp_month;
    m_exp_month_isSet = true;
}

bool OAICard::is_exp_month_Set() const{
    return m_exp_month_isSet;
}

bool OAICard::is_exp_month_Valid() const{
    return m_exp_month_isValid;
}

qint32 OAICard::getExpYear() const {
    return m_exp_year;
}
void OAICard::setExpYear(const qint32 &exp_year) {
    m_exp_year = exp_year;
    m_exp_year_isSet = true;
}

bool OAICard::is_exp_year_Set() const{
    return m_exp_year_isSet;
}

bool OAICard::is_exp_year_Valid() const{
    return m_exp_year_isValid;
}

QString OAICard::getFingerprint() const {
    return m_fingerprint;
}
void OAICard::setFingerprint(const QString &fingerprint) {
    m_fingerprint = fingerprint;
    m_fingerprint_isSet = true;
}

bool OAICard::is_fingerprint_Set() const{
    return m_fingerprint_isSet;
}

bool OAICard::is_fingerprint_Valid() const{
    return m_fingerprint_isValid;
}

QString OAICard::getFunding() const {
    return m_funding;
}
void OAICard::setFunding(const QString &funding) {
    m_funding = funding;
    m_funding_isSet = true;
}

bool OAICard::is_funding_Set() const{
    return m_funding_isSet;
}

bool OAICard::is_funding_Valid() const{
    return m_funding_isValid;
}

QString OAICard::getId() const {
    return m_id;
}
void OAICard::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICard::is_id_Set() const{
    return m_id_isSet;
}

bool OAICard::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICard::getLast4() const {
    return m_last4;
}
void OAICard::setLast4(const QString &last4) {
    m_last4 = last4;
    m_last4_isSet = true;
}

bool OAICard::is_last4_Set() const{
    return m_last4_isSet;
}

bool OAICard::is_last4_Valid() const{
    return m_last4_isValid;
}

QString OAICard::getName() const {
    return m_name;
}
void OAICard::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICard::is_name_Set() const{
    return m_name_isSet;
}

bool OAICard::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICard::getStripeId() const {
    return m_stripe_id;
}
void OAICard::setStripeId(const QString &stripe_id) {
    m_stripe_id = stripe_id;
    m_stripe_id_isSet = true;
}

bool OAICard::is_stripe_id_Set() const{
    return m_stripe_id_isSet;
}

bool OAICard::is_stripe_id_Valid() const{
    return m_stripe_id_isValid;
}

QString OAICard::getToken() const {
    return m_token;
}
void OAICard::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAICard::is_token_Set() const{
    return m_token_isSet;
}

bool OAICard::is_token_Valid() const{
    return m_token_isValid;
}

bool OAICard::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line1_check_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_zip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_zip_check_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_brand_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cvc_check_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exp_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exp_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_fingerprint_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_funding_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last4_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stripe_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICard::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
