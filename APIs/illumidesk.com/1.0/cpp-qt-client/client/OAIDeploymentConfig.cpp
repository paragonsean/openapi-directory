/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeploymentConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeploymentConfig::OAIDeploymentConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeploymentConfig::OAIDeploymentConfig() {
    this->initializeModel();
}

OAIDeploymentConfig::~OAIDeploymentConfig() {}

void OAIDeploymentConfig::initializeModel() {

    m_files_isSet = false;
    m_files_isValid = false;

    m_handler_isSet = false;
    m_handler_isValid = false;
}

void OAIDeploymentConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeploymentConfig::fromJsonObject(QJsonObject json) {

    m_files_isValid = ::OpenAPI::fromJsonValue(m_files, json[QString("files")]);
    m_files_isSet = !json[QString("files")].isNull() && m_files_isValid;

    m_handler_isValid = ::OpenAPI::fromJsonValue(m_handler, json[QString("handler")]);
    m_handler_isSet = !json[QString("handler")].isNull() && m_handler_isValid;
}

QString OAIDeploymentConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeploymentConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_files.size() > 0) {
        obj.insert(QString("files"), ::OpenAPI::toJsonValue(m_files));
    }
    if (m_handler_isSet) {
        obj.insert(QString("handler"), ::OpenAPI::toJsonValue(m_handler));
    }
    return obj;
}

QList<QString> OAIDeploymentConfig::getFiles() const {
    return m_files;
}
void OAIDeploymentConfig::setFiles(const QList<QString> &files) {
    m_files = files;
    m_files_isSet = true;
}

bool OAIDeploymentConfig::is_files_Set() const{
    return m_files_isSet;
}

bool OAIDeploymentConfig::is_files_Valid() const{
    return m_files_isValid;
}

QString OAIDeploymentConfig::getHandler() const {
    return m_handler;
}
void OAIDeploymentConfig::setHandler(const QString &handler) {
    m_handler = handler;
    m_handler_isSet = true;
}

bool OAIDeploymentConfig::is_handler_Set() const{
    return m_handler_isSet;
}

bool OAIDeploymentConfig::is_handler_Valid() const{
    return m_handler_isValid;
}

bool OAIDeploymentConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_files.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_handler_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeploymentConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
