/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardDataPutandPatch.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardDataPutandPatch::OAICardDataPutandPatch(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardDataPutandPatch::OAICardDataPutandPatch() {
    this->initializeModel();
}

OAICardDataPutandPatch::~OAICardDataPutandPatch() {}

void OAICardDataPutandPatch::initializeModel() {

    m_address_city_isSet = false;
    m_address_city_isValid = false;

    m_address_country_isSet = false;
    m_address_country_isValid = false;

    m_address_line1_isSet = false;
    m_address_line1_isValid = false;

    m_address_line2_isSet = false;
    m_address_line2_isValid = false;

    m_address_state_isSet = false;
    m_address_state_isValid = false;

    m_address_zip_isSet = false;
    m_address_zip_isValid = false;

    m_exp_month_isSet = false;
    m_exp_month_isValid = false;

    m_exp_year_isSet = false;
    m_exp_year_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAICardDataPutandPatch::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardDataPutandPatch::fromJsonObject(QJsonObject json) {

    m_address_city_isValid = ::OpenAPI::fromJsonValue(m_address_city, json[QString("address_city")]);
    m_address_city_isSet = !json[QString("address_city")].isNull() && m_address_city_isValid;

    m_address_country_isValid = ::OpenAPI::fromJsonValue(m_address_country, json[QString("address_country")]);
    m_address_country_isSet = !json[QString("address_country")].isNull() && m_address_country_isValid;

    m_address_line1_isValid = ::OpenAPI::fromJsonValue(m_address_line1, json[QString("address_line1")]);
    m_address_line1_isSet = !json[QString("address_line1")].isNull() && m_address_line1_isValid;

    m_address_line2_isValid = ::OpenAPI::fromJsonValue(m_address_line2, json[QString("address_line2")]);
    m_address_line2_isSet = !json[QString("address_line2")].isNull() && m_address_line2_isValid;

    m_address_state_isValid = ::OpenAPI::fromJsonValue(m_address_state, json[QString("address_state")]);
    m_address_state_isSet = !json[QString("address_state")].isNull() && m_address_state_isValid;

    m_address_zip_isValid = ::OpenAPI::fromJsonValue(m_address_zip, json[QString("address_zip")]);
    m_address_zip_isSet = !json[QString("address_zip")].isNull() && m_address_zip_isValid;

    m_exp_month_isValid = ::OpenAPI::fromJsonValue(m_exp_month, json[QString("exp_month")]);
    m_exp_month_isSet = !json[QString("exp_month")].isNull() && m_exp_month_isValid;

    m_exp_year_isValid = ::OpenAPI::fromJsonValue(m_exp_year, json[QString("exp_year")]);
    m_exp_year_isSet = !json[QString("exp_year")].isNull() && m_exp_year_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAICardDataPutandPatch::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardDataPutandPatch::asJsonObject() const {
    QJsonObject obj;
    if (m_address_city_isSet) {
        obj.insert(QString("address_city"), ::OpenAPI::toJsonValue(m_address_city));
    }
    if (m_address_country_isSet) {
        obj.insert(QString("address_country"), ::OpenAPI::toJsonValue(m_address_country));
    }
    if (m_address_line1_isSet) {
        obj.insert(QString("address_line1"), ::OpenAPI::toJsonValue(m_address_line1));
    }
    if (m_address_line2_isSet) {
        obj.insert(QString("address_line2"), ::OpenAPI::toJsonValue(m_address_line2));
    }
    if (m_address_state_isSet) {
        obj.insert(QString("address_state"), ::OpenAPI::toJsonValue(m_address_state));
    }
    if (m_address_zip_isSet) {
        obj.insert(QString("address_zip"), ::OpenAPI::toJsonValue(m_address_zip));
    }
    if (m_exp_month_isSet) {
        obj.insert(QString("exp_month"), ::OpenAPI::toJsonValue(m_exp_month));
    }
    if (m_exp_year_isSet) {
        obj.insert(QString("exp_year"), ::OpenAPI::toJsonValue(m_exp_year));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAICardDataPutandPatch::getAddressCity() const {
    return m_address_city;
}
void OAICardDataPutandPatch::setAddressCity(const QString &address_city) {
    m_address_city = address_city;
    m_address_city_isSet = true;
}

bool OAICardDataPutandPatch::is_address_city_Set() const{
    return m_address_city_isSet;
}

bool OAICardDataPutandPatch::is_address_city_Valid() const{
    return m_address_city_isValid;
}

QString OAICardDataPutandPatch::getAddressCountry() const {
    return m_address_country;
}
void OAICardDataPutandPatch::setAddressCountry(const QString &address_country) {
    m_address_country = address_country;
    m_address_country_isSet = true;
}

bool OAICardDataPutandPatch::is_address_country_Set() const{
    return m_address_country_isSet;
}

bool OAICardDataPutandPatch::is_address_country_Valid() const{
    return m_address_country_isValid;
}

QString OAICardDataPutandPatch::getAddressLine1() const {
    return m_address_line1;
}
void OAICardDataPutandPatch::setAddressLine1(const QString &address_line1) {
    m_address_line1 = address_line1;
    m_address_line1_isSet = true;
}

bool OAICardDataPutandPatch::is_address_line1_Set() const{
    return m_address_line1_isSet;
}

bool OAICardDataPutandPatch::is_address_line1_Valid() const{
    return m_address_line1_isValid;
}

QString OAICardDataPutandPatch::getAddressLine2() const {
    return m_address_line2;
}
void OAICardDataPutandPatch::setAddressLine2(const QString &address_line2) {
    m_address_line2 = address_line2;
    m_address_line2_isSet = true;
}

bool OAICardDataPutandPatch::is_address_line2_Set() const{
    return m_address_line2_isSet;
}

bool OAICardDataPutandPatch::is_address_line2_Valid() const{
    return m_address_line2_isValid;
}

QString OAICardDataPutandPatch::getAddressState() const {
    return m_address_state;
}
void OAICardDataPutandPatch::setAddressState(const QString &address_state) {
    m_address_state = address_state;
    m_address_state_isSet = true;
}

bool OAICardDataPutandPatch::is_address_state_Set() const{
    return m_address_state_isSet;
}

bool OAICardDataPutandPatch::is_address_state_Valid() const{
    return m_address_state_isValid;
}

QString OAICardDataPutandPatch::getAddressZip() const {
    return m_address_zip;
}
void OAICardDataPutandPatch::setAddressZip(const QString &address_zip) {
    m_address_zip = address_zip;
    m_address_zip_isSet = true;
}

bool OAICardDataPutandPatch::is_address_zip_Set() const{
    return m_address_zip_isSet;
}

bool OAICardDataPutandPatch::is_address_zip_Valid() const{
    return m_address_zip_isValid;
}

qint32 OAICardDataPutandPatch::getExpMonth() const {
    return m_exp_month;
}
void OAICardDataPutandPatch::setExpMonth(const qint32 &exp_month) {
    m_exp_month = exp_month;
    m_exp_month_isSet = true;
}

bool OAICardDataPutandPatch::is_exp_month_Set() const{
    return m_exp_month_isSet;
}

bool OAICardDataPutandPatch::is_exp_month_Valid() const{
    return m_exp_month_isValid;
}

qint32 OAICardDataPutandPatch::getExpYear() const {
    return m_exp_year;
}
void OAICardDataPutandPatch::setExpYear(const qint32 &exp_year) {
    m_exp_year = exp_year;
    m_exp_year_isSet = true;
}

bool OAICardDataPutandPatch::is_exp_year_Set() const{
    return m_exp_year_isSet;
}

bool OAICardDataPutandPatch::is_exp_year_Valid() const{
    return m_exp_year_isValid;
}

QString OAICardDataPutandPatch::getName() const {
    return m_name;
}
void OAICardDataPutandPatch::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICardDataPutandPatch::is_name_Set() const{
    return m_name_isSet;
}

bool OAICardDataPutandPatch::is_name_Valid() const{
    return m_name_isValid;
}

bool OAICardDataPutandPatch::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_country_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_address_zip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exp_month_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exp_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardDataPutandPatch::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
