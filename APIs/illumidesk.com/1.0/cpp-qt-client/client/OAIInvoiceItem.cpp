/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoiceItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoiceItem::OAIInvoiceItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoiceItem::OAIInvoiceItem() {
    this->initializeModel();
}

OAIInvoiceItem::~OAIInvoiceItem() {}

void OAIInvoiceItem::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_invoice_isSet = false;
    m_invoice_isValid = false;

    m_invoice_date_isSet = false;
    m_invoice_date_isValid = false;

    m_livemode_isSet = false;
    m_livemode_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_proration_isSet = false;
    m_proration_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_stripe_id_isSet = false;
    m_stripe_id_isValid = false;
}

void OAIInvoiceItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoiceItem::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_invoice_isValid = ::OpenAPI::fromJsonValue(m_invoice, json[QString("invoice")]);
    m_invoice_isSet = !json[QString("invoice")].isNull() && m_invoice_isValid;

    m_invoice_date_isValid = ::OpenAPI::fromJsonValue(m_invoice_date, json[QString("invoice_date")]);
    m_invoice_date_isSet = !json[QString("invoice_date")].isNull() && m_invoice_date_isValid;

    m_livemode_isValid = ::OpenAPI::fromJsonValue(m_livemode, json[QString("livemode")]);
    m_livemode_isSet = !json[QString("livemode")].isNull() && m_livemode_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_proration_isValid = ::OpenAPI::fromJsonValue(m_proration, json[QString("proration")]);
    m_proration_isSet = !json[QString("proration")].isNull() && m_proration_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_stripe_id_isValid = ::OpenAPI::fromJsonValue(m_stripe_id, json[QString("stripe_id")]);
    m_stripe_id_isSet = !json[QString("stripe_id")].isNull() && m_stripe_id_isValid;
}

QString OAIInvoiceItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoiceItem::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_invoice_isSet) {
        obj.insert(QString("invoice"), ::OpenAPI::toJsonValue(m_invoice));
    }
    if (m_invoice_date_isSet) {
        obj.insert(QString("invoice_date"), ::OpenAPI::toJsonValue(m_invoice_date));
    }
    if (m_livemode_isSet) {
        obj.insert(QString("livemode"), ::OpenAPI::toJsonValue(m_livemode));
    }
    if (m_metadata_isSet) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_proration_isSet) {
        obj.insert(QString("proration"), ::OpenAPI::toJsonValue(m_proration));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_stripe_id_isSet) {
        obj.insert(QString("stripe_id"), ::OpenAPI::toJsonValue(m_stripe_id));
    }
    return obj;
}

qint32 OAIInvoiceItem::getAmount() const {
    return m_amount;
}
void OAIInvoiceItem::setAmount(const qint32 &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIInvoiceItem::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIInvoiceItem::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIInvoiceItem::getCreated() const {
    return m_created;
}
void OAIInvoiceItem::setCreated(const QString &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIInvoiceItem::is_created_Set() const{
    return m_created_isSet;
}

bool OAIInvoiceItem::is_created_Valid() const{
    return m_created_isValid;
}

QString OAIInvoiceItem::getCurrency() const {
    return m_currency;
}
void OAIInvoiceItem::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIInvoiceItem::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIInvoiceItem::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIInvoiceItem::getDescription() const {
    return m_description;
}
void OAIInvoiceItem::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIInvoiceItem::is_description_Set() const{
    return m_description_isSet;
}

bool OAIInvoiceItem::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIInvoiceItem::getId() const {
    return m_id;
}
void OAIInvoiceItem::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIInvoiceItem::is_id_Set() const{
    return m_id_isSet;
}

bool OAIInvoiceItem::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIInvoiceItem::getInvoice() const {
    return m_invoice;
}
void OAIInvoiceItem::setInvoice(const QString &invoice) {
    m_invoice = invoice;
    m_invoice_isSet = true;
}

bool OAIInvoiceItem::is_invoice_Set() const{
    return m_invoice_isSet;
}

bool OAIInvoiceItem::is_invoice_Valid() const{
    return m_invoice_isValid;
}

QString OAIInvoiceItem::getInvoiceDate() const {
    return m_invoice_date;
}
void OAIInvoiceItem::setInvoiceDate(const QString &invoice_date) {
    m_invoice_date = invoice_date;
    m_invoice_date_isSet = true;
}

bool OAIInvoiceItem::is_invoice_date_Set() const{
    return m_invoice_date_isSet;
}

bool OAIInvoiceItem::is_invoice_date_Valid() const{
    return m_invoice_date_isValid;
}

bool OAIInvoiceItem::isLivemode() const {
    return m_livemode;
}
void OAIInvoiceItem::setLivemode(const bool &livemode) {
    m_livemode = livemode;
    m_livemode_isSet = true;
}

bool OAIInvoiceItem::is_livemode_Set() const{
    return m_livemode_isSet;
}

bool OAIInvoiceItem::is_livemode_Valid() const{
    return m_livemode_isValid;
}

OAIObject OAIInvoiceItem::getMetadata() const {
    return m_metadata;
}
void OAIInvoiceItem::setMetadata(const OAIObject &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIInvoiceItem::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIInvoiceItem::is_metadata_Valid() const{
    return m_metadata_isValid;
}

bool OAIInvoiceItem::isProration() const {
    return m_proration;
}
void OAIInvoiceItem::setProration(const bool &proration) {
    m_proration = proration;
    m_proration_isSet = true;
}

bool OAIInvoiceItem::is_proration_Set() const{
    return m_proration_isSet;
}

bool OAIInvoiceItem::is_proration_Valid() const{
    return m_proration_isValid;
}

qint32 OAIInvoiceItem::getQuantity() const {
    return m_quantity;
}
void OAIInvoiceItem::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIInvoiceItem::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIInvoiceItem::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIInvoiceItem::getStripeId() const {
    return m_stripe_id;
}
void OAIInvoiceItem::setStripeId(const QString &stripe_id) {
    m_stripe_id = stripe_id;
    m_stripe_id_isSet = true;
}

bool OAIInvoiceItem::is_stripe_id_Set() const{
    return m_stripe_id_isSet;
}

bool OAIInvoiceItem::is_stripe_id_Valid() const{
    return m_stripe_id_isValid;
}

bool OAIInvoiceItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_livemode_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_proration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stripe_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoiceItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_created_isValid && m_currency_isValid && m_invoice_isValid && m_invoice_date_isValid && m_quantity_isValid && m_stripe_id_isValid && true;
}

} // namespace OpenAPI
