/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJWTError.h
 *
 * 
 */

#ifndef OAIJWTError_H
#define OAIJWTError_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIJWTError : public OAIObject {
public:
    OAIJWTError();
    OAIJWTError(QString json);
    ~OAIJWTError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getNonFieldErrors() const;
    void setNonFieldErrors(const QList<QString> &non_field_errors);
    bool is_non_field_errors_Set() const;
    bool is_non_field_errors_Valid() const;

    QList<QString> getPassword() const;
    void setPassword(const QList<QString> &password);
    bool is_password_Set() const;
    bool is_password_Valid() const;

    QList<QString> getToken() const;
    void setToken(const QList<QString> &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    QList<QString> getUsername() const;
    void setUsername(const QList<QString> &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_non_field_errors;
    bool m_non_field_errors_isSet;
    bool m_non_field_errors_isValid;

    QList<QString> m_password;
    bool m_password_isSet;
    bool m_password_isValid;

    QList<QString> m_token;
    bool m_token_isSet;
    bool m_token_isValid;

    QList<QString> m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJWTError)

#endif // OAIJWTError_H
