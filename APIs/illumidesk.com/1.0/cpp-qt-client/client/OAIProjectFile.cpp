/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProjectFile.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProjectFile::OAIProjectFile(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProjectFile::OAIProjectFile() {
    this->initializeModel();
}

OAIProjectFile::~OAIProjectFile() {}

void OAIProjectFile::initializeModel() {

    m_content_isSet = false;
    m_content_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_project_isSet = false;
    m_project_isValid = false;
}

void OAIProjectFile::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProjectFile::fromJsonObject(QJsonObject json) {

    m_content_isValid = ::OpenAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("path")]);
    m_path_isSet = !json[QString("path")].isNull() && m_path_isValid;

    m_project_isValid = ::OpenAPI::fromJsonValue(m_project, json[QString("project")]);
    m_project_isSet = !json[QString("project")].isNull() && m_project_isValid;
}

QString OAIProjectFile::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProjectFile::asJsonObject() const {
    QJsonObject obj;
    if (m_content_isSet) {
        obj.insert(QString("content"), ::OpenAPI::toJsonValue(m_content));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_project_isSet) {
        obj.insert(QString("project"), ::OpenAPI::toJsonValue(m_project));
    }
    return obj;
}

QString OAIProjectFile::getContent() const {
    return m_content;
}
void OAIProjectFile::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool OAIProjectFile::is_content_Set() const{
    return m_content_isSet;
}

bool OAIProjectFile::is_content_Valid() const{
    return m_content_isValid;
}

QString OAIProjectFile::getId() const {
    return m_id;
}
void OAIProjectFile::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProjectFile::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProjectFile::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProjectFile::getName() const {
    return m_name;
}
void OAIProjectFile::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProjectFile::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProjectFile::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIProjectFile::getPath() const {
    return m_path;
}
void OAIProjectFile::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIProjectFile::is_path_Set() const{
    return m_path_isSet;
}

bool OAIProjectFile::is_path_Valid() const{
    return m_path_isValid;
}

QString OAIProjectFile::getProject() const {
    return m_project;
}
void OAIProjectFile::setProject(const QString &project) {
    m_project = project;
    m_project_isSet = true;
}

bool OAIProjectFile::is_project_Set() const{
    return m_project_isSet;
}

bool OAIProjectFile::is_project_Valid() const{
    return m_project_isValid;
}

bool OAIProjectFile::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProjectFile::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_project_isValid && true;
}

} // namespace OpenAPI
