/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServerError.h
 *
 * 
 */

#ifndef OAIServerError_H
#define OAIServerError_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIServerError : public OAIObject {
public:
    OAIServerError();
    OAIServerError(QString json);
    ~OAIServerError() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getConfig() const;
    void setConfig(const QList<QString> &config);
    bool is_config_Set() const;
    bool is_config_Valid() const;

    QList<QString> getConnected() const;
    void setConnected(const QList<QString> &connected);
    bool is_connected_Set() const;
    bool is_connected_Valid() const;

    QList<QString> getCreatedAt() const;
    void setCreatedAt(const QList<QString> &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<QString> getEndpoint() const;
    void setEndpoint(const QList<QString> &endpoint);
    bool is_endpoint_Set() const;
    bool is_endpoint_Valid() const;

    QList<QString> getHost() const;
    void setHost(const QList<QString> &host);
    bool is_host_Set() const;
    bool is_host_Valid() const;

    QList<QString> getId() const;
    void setId(const QList<QString> &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getImageName() const;
    void setImageName(const QList<QString> &image_name);
    bool is_image_name_Set() const;
    bool is_image_name_Valid() const;

    QList<QString> getLogsUrl() const;
    void setLogsUrl(const QList<QString> &logs_url);
    bool is_logs_url_Set() const;
    bool is_logs_url_Valid() const;

    QList<QString> getName() const;
    void setName(const QList<QString> &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getNonFieldErrors() const;
    void setNonFieldErrors(const QList<QString> &non_field_errors);
    bool is_non_field_errors_Set() const;
    bool is_non_field_errors_Valid() const;

    QList<QString> getServerSize() const;
    void setServerSize(const QList<QString> &server_size);
    bool is_server_size_Set() const;
    bool is_server_size_Valid() const;

    QList<QString> getStartupScript() const;
    void setStartupScript(const QList<QString> &startup_script);
    bool is_startup_script_Set() const;
    bool is_startup_script_Valid() const;

    QList<QString> getStatus() const;
    void setStatus(const QList<QString> &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<QString> getStatusUrl() const;
    void setStatusUrl(const QList<QString> &status_url);
    bool is_status_url_Set() const;
    bool is_status_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_config;
    bool m_config_isSet;
    bool m_config_isValid;

    QList<QString> m_connected;
    bool m_connected_isSet;
    bool m_connected_isValid;

    QList<QString> m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<QString> m_endpoint;
    bool m_endpoint_isSet;
    bool m_endpoint_isValid;

    QList<QString> m_host;
    bool m_host_isSet;
    bool m_host_isValid;

    QList<QString> m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_image_name;
    bool m_image_name_isSet;
    bool m_image_name_isValid;

    QList<QString> m_logs_url;
    bool m_logs_url_isSet;
    bool m_logs_url_isValid;

    QList<QString> m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_non_field_errors;
    bool m_non_field_errors_isSet;
    bool m_non_field_errors_isValid;

    QList<QString> m_server_size;
    bool m_server_size_isSet;
    bool m_server_size_isValid;

    QList<QString> m_startup_script;
    bool m_startup_script_isSet;
    bool m_startup_script_isValid;

    QList<QString> m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<QString> m_status_url;
    bool m_status_url_isSet;
    bool m_status_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServerError)

#endif // OAIServerError_H
