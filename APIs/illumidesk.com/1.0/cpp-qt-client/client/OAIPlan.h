/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPlan.h
 *
 * 
 */

#ifndef OAIPlan_H
#define OAIPlan_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPlan : public OAIObject {
public:
    OAIPlan();
    OAIPlan(QString json);
    ~OAIPlan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAmount() const;
    void setAmount(const qint32 &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getCreated() const;
    void setCreated(const QString &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInterval() const;
    void setInterval(const QString &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    qint32 getIntervalCount() const;
    void setIntervalCount(const qint32 &interval_count);
    bool is_interval_count_Set() const;
    bool is_interval_count_Valid() const;

    bool isLivemode() const;
    void setLivemode(const bool &livemode);
    bool is_livemode_Set() const;
    bool is_livemode_Valid() const;

    OAIObject getMetadata() const;
    void setMetadata(const OAIObject &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getStatementDescriptor() const;
    void setStatementDescriptor(const QString &statement_descriptor);
    bool is_statement_descriptor_Set() const;
    bool is_statement_descriptor_Valid() const;

    QString getStripeId() const;
    void setStripeId(const QString &stripe_id);
    bool is_stripe_id_Set() const;
    bool is_stripe_id_Valid() const;

    qint32 getTrialPeriodDays() const;
    void setTrialPeriodDays(const qint32 &trial_period_days);
    bool is_trial_period_days_Set() const;
    bool is_trial_period_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    qint32 m_interval_count;
    bool m_interval_count_isSet;
    bool m_interval_count_isValid;

    bool m_livemode;
    bool m_livemode_isSet;
    bool m_livemode_isValid;

    OAIObject m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_statement_descriptor;
    bool m_statement_descriptor_isSet;
    bool m_statement_descriptor_isValid;

    QString m_stripe_id;
    bool m_stripe_id_isSet;
    bool m_stripe_id_isValid;

    qint32 m_trial_period_days;
    bool m_trial_period_days_isSet;
    bool m_trial_period_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPlan)

#endif // OAIPlan_H
