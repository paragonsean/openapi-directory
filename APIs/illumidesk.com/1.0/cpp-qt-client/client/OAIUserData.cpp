/**
 * IllumiDesk
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserData::OAIUserData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserData::OAIUserData() {
    this->initializeModel();
}

OAIUserData::~OAIUserData() {}

void OAIUserData::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_profile_isSet = false;
    m_profile_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIUserData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserData::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_profile_isValid = ::OpenAPI::fromJsonValue(m_profile, json[QString("profile")]);
    m_profile_isSet = !json[QString("profile")].isNull() && m_profile_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("username")]);
    m_username_isSet = !json[QString("username")].isNull() && m_username_isValid;
}

QString OAIUserData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserData::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_profile.isSet()) {
        obj.insert(QString("profile"), ::OpenAPI::toJsonValue(m_profile));
    }
    if (m_username_isSet) {
        obj.insert(QString("username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIUserData::getEmail() const {
    return m_email;
}
void OAIUserData::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIUserData::is_email_Set() const{
    return m_email_isSet;
}

bool OAIUserData::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIUserData::getFirstName() const {
    return m_first_name;
}
void OAIUserData::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIUserData::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIUserData::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIUserData::getLastName() const {
    return m_last_name;
}
void OAIUserData::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIUserData::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIUserData::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIUserData::getPassword() const {
    return m_password;
}
void OAIUserData::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIUserData::is_password_Set() const{
    return m_password_isSet;
}

bool OAIUserData::is_password_Valid() const{
    return m_password_isValid;
}

OAIUserProfile OAIUserData::getProfile() const {
    return m_profile;
}
void OAIUserData::setProfile(const OAIUserProfile &profile) {
    m_profile = profile;
    m_profile_isSet = true;
}

bool OAIUserData::is_profile_Set() const{
    return m_profile_isSet;
}

bool OAIUserData::is_profile_Valid() const{
    return m_profile_isValid;
}

QString OAIUserData::getUsername() const {
    return m_username;
}
void OAIUserData::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIUserData::is_username_Set() const{
    return m_username_isSet;
}

bool OAIUserData::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIUserData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_profile.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserData::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_password_isValid && m_profile_isValid && m_username_isValid && true;
}

} // namespace OpenAPI
