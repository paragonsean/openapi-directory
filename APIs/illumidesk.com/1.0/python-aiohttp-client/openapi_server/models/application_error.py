# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApplicationError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authorization_grant_type: List[str]=None, client_type: List[str]=None, name: List[str]=None, non_field_errors: List[str]=None, redirect_uris: List[str]=None):
        """ApplicationError - a model defined in OpenAPI

        :param authorization_grant_type: The authorization_grant_type of this ApplicationError.
        :param client_type: The client_type of this ApplicationError.
        :param name: The name of this ApplicationError.
        :param non_field_errors: The non_field_errors of this ApplicationError.
        :param redirect_uris: The redirect_uris of this ApplicationError.
        """
        self.openapi_types = {
            'authorization_grant_type': List[str],
            'client_type': List[str],
            'name': List[str],
            'non_field_errors': List[str],
            'redirect_uris': List[str]
        }

        self.attribute_map = {
            'authorization_grant_type': 'authorization_grant_type',
            'client_type': 'client_type',
            'name': 'name',
            'non_field_errors': 'non_field_errors',
            'redirect_uris': 'redirect_uris'
        }

        self._authorization_grant_type = authorization_grant_type
        self._client_type = client_type
        self._name = name
        self._non_field_errors = non_field_errors
        self._redirect_uris = redirect_uris

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationError of this ApplicationError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authorization_grant_type(self):
        """Gets the authorization_grant_type of this ApplicationError.

        Authorization grant type field errors.

        :return: The authorization_grant_type of this ApplicationError.
        :rtype: List[str]
        """
        return self._authorization_grant_type

    @authorization_grant_type.setter
    def authorization_grant_type(self, authorization_grant_type):
        """Sets the authorization_grant_type of this ApplicationError.

        Authorization grant type field errors.

        :param authorization_grant_type: The authorization_grant_type of this ApplicationError.
        :type authorization_grant_type: List[str]
        """

        self._authorization_grant_type = authorization_grant_type

    @property
    def client_type(self):
        """Gets the client_type of this ApplicationError.

        Client type field errors.

        :return: The client_type of this ApplicationError.
        :rtype: List[str]
        """
        return self._client_type

    @client_type.setter
    def client_type(self, client_type):
        """Sets the client_type of this ApplicationError.

        Client type field errors.

        :param client_type: The client_type of this ApplicationError.
        :type client_type: List[str]
        """

        self._client_type = client_type

    @property
    def name(self):
        """Gets the name of this ApplicationError.

        Name field errors.

        :return: The name of this ApplicationError.
        :rtype: List[str]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ApplicationError.

        Name field errors.

        :param name: The name of this ApplicationError.
        :type name: List[str]
        """

        self._name = name

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this ApplicationError.

        Errors not connected to any field.

        :return: The non_field_errors of this ApplicationError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this ApplicationError.

        Errors not connected to any field.

        :param non_field_errors: The non_field_errors of this ApplicationError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def redirect_uris(self):
        """Gets the redirect_uris of this ApplicationError.

        Redirect uris field errors.

        :return: The redirect_uris of this ApplicationError.
        :rtype: List[str]
        """
        return self._redirect_uris

    @redirect_uris.setter
    def redirect_uris(self, redirect_uris):
        """Sets the redirect_uris of this ApplicationError.

        Redirect uris field errors.

        :param redirect_uris: The redirect_uris of this ApplicationError.
        :type redirect_uris: List[str]
        """

        self._redirect_uris = redirect_uris
