# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServerRunStatisticsData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exit_code: int=None, size: int=None, stacktrace: str=None, start: str=None, stop: str=None):
        """ServerRunStatisticsData - a model defined in OpenAPI

        :param exit_code: The exit_code of this ServerRunStatisticsData.
        :param size: The size of this ServerRunStatisticsData.
        :param stacktrace: The stacktrace of this ServerRunStatisticsData.
        :param start: The start of this ServerRunStatisticsData.
        :param stop: The stop of this ServerRunStatisticsData.
        """
        self.openapi_types = {
            'exit_code': int,
            'size': int,
            'stacktrace': str,
            'start': str,
            'stop': str
        }

        self.attribute_map = {
            'exit_code': 'exit_code',
            'size': 'size',
            'stacktrace': 'stacktrace',
            'start': 'start',
            'stop': 'stop'
        }

        self._exit_code = exit_code
        self._size = size
        self._stacktrace = stacktrace
        self._start = start
        self._stop = stop

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerRunStatisticsData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerRunStatisticsData of this ServerRunStatisticsData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exit_code(self):
        """Gets the exit_code of this ServerRunStatisticsData.

        Server exit code.

        :return: The exit_code of this ServerRunStatisticsData.
        :rtype: int
        """
        return self._exit_code

    @exit_code.setter
    def exit_code(self, exit_code):
        """Sets the exit_code of this ServerRunStatisticsData.

        Server exit code.

        :param exit_code: The exit_code of this ServerRunStatisticsData.
        :type exit_code: int
        """

        self._exit_code = exit_code

    @property
    def size(self):
        """Gets the size of this ServerRunStatisticsData.

        Server size.

        :return: The size of this ServerRunStatisticsData.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ServerRunStatisticsData.

        Server size.

        :param size: The size of this ServerRunStatisticsData.
        :type size: int
        """

        self._size = size

    @property
    def stacktrace(self):
        """Gets the stacktrace of this ServerRunStatisticsData.

        Server stacktrace.

        :return: The stacktrace of this ServerRunStatisticsData.
        :rtype: str
        """
        return self._stacktrace

    @stacktrace.setter
    def stacktrace(self, stacktrace):
        """Sets the stacktrace of this ServerRunStatisticsData.

        Server stacktrace.

        :param stacktrace: The stacktrace of this ServerRunStatisticsData.
        :type stacktrace: str
        """

        self._stacktrace = stacktrace

    @property
    def start(self):
        """Gets the start of this ServerRunStatisticsData.

        Server start.

        :return: The start of this ServerRunStatisticsData.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this ServerRunStatisticsData.

        Server start.

        :param start: The start of this ServerRunStatisticsData.
        :type start: str
        """

        self._start = start

    @property
    def stop(self):
        """Gets the stop of this ServerRunStatisticsData.

        Server stop.

        :return: The stop of this ServerRunStatisticsData.
        :rtype: str
        """
        return self._stop

    @stop.setter
    def stop(self, stop):
        """Sets the stop of this ServerRunStatisticsData.

        Server stop.

        :param stop: The stop of this ServerRunStatisticsData.
        :type stop: str
        """

        self._stop = stop
