# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeploymentError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: List[str]=None, framework: List[str]=None, name: List[str]=None, non_field_errors: List[str]=None, runtime: List[str]=None):
        """DeploymentError - a model defined in OpenAPI

        :param config: The config of this DeploymentError.
        :param framework: The framework of this DeploymentError.
        :param name: The name of this DeploymentError.
        :param non_field_errors: The non_field_errors of this DeploymentError.
        :param runtime: The runtime of this DeploymentError.
        """
        self.openapi_types = {
            'config': List[str],
            'framework': List[str],
            'name': List[str],
            'non_field_errors': List[str],
            'runtime': List[str]
        }

        self.attribute_map = {
            'config': 'config',
            'framework': 'framework',
            'name': 'name',
            'non_field_errors': 'non_field_errors',
            'runtime': 'runtime'
        }

        self._config = config
        self._framework = framework
        self._name = name
        self._non_field_errors = non_field_errors
        self._runtime = runtime

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentError of this DeploymentError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this DeploymentError.

        Invalid deployment configuration.

        :return: The config of this DeploymentError.
        :rtype: List[str]
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this DeploymentError.

        Invalid deployment configuration.

        :param config: The config of this DeploymentError.
        :type config: List[str]
        """

        self._config = config

    @property
    def framework(self):
        """Gets the framework of this DeploymentError.

        Invalid framework.

        :return: The framework of this DeploymentError.
        :rtype: List[str]
        """
        return self._framework

    @framework.setter
    def framework(self, framework):
        """Sets the framework of this DeploymentError.

        Invalid framework.

        :param framework: The framework of this DeploymentError.
        :type framework: List[str]
        """

        self._framework = framework

    @property
    def name(self):
        """Gets the name of this DeploymentError.

        Invalid deployment name.

        :return: The name of this DeploymentError.
        :rtype: List[str]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DeploymentError.

        Invalid deployment name.

        :param name: The name of this DeploymentError.
        :type name: List[str]
        """

        self._name = name

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this DeploymentError.

        Errors not connected to any field.

        :return: The non_field_errors of this DeploymentError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this DeploymentError.

        Errors not connected to any field.

        :param non_field_errors: The non_field_errors of this DeploymentError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def runtime(self):
        """Gets the runtime of this DeploymentError.

        Invalid runtime.

        :return: The runtime of this DeploymentError.
        :rtype: List[str]
        """
        return self._runtime

    @runtime.setter
    def runtime(self, runtime):
        """Sets the runtime of this DeploymentError.

        Invalid runtime.

        :param runtime: The runtime of this DeploymentError.
        :type runtime: List[str]
        """

        self._runtime = runtime
