# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DeploymentConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, files: List[str]=None, handler: str=None):
        """DeploymentConfig - a model defined in OpenAPI

        :param files: The files of this DeploymentConfig.
        :param handler: The handler of this DeploymentConfig.
        """
        self.openapi_types = {
            'files': List[str],
            'handler': str
        }

        self.attribute_map = {
            'files': 'files',
            'handler': 'handler'
        }

        self._files = files
        self._handler = handler

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeploymentConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeploymentConfig of this DeploymentConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def files(self):
        """Gets the files of this DeploymentConfig.

        An array of ProjectFile names that should be included in the deployment.

        :return: The files of this DeploymentConfig.
        :rtype: List[str]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this DeploymentConfig.

        An array of ProjectFile names that should be included in the deployment.

        :param files: The files of this DeploymentConfig.
        :type files: List[str]
        """

        self._files = files

    @property
    def handler(self):
        """Gets the handler of this DeploymentConfig.

        The filename and handler function defined by the user that will handle requests to the deployment. Ex: handler.predict

        :return: The handler of this DeploymentConfig.
        :rtype: str
        """
        return self._handler

    @handler.setter
    def handler(self, handler):
        """Sets the handler of this DeploymentConfig.

        The filename and handler function defined by the user that will handle requests to the deployment. Ex: handler.predict

        :param handler: The handler of this DeploymentConfig.
        :type handler: str
        """

        self._handler = handler
