# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProjectsProjectFilesCreateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, file: file=None, base64_data: str=None, name: str=None, path: str=None):
        """ProjectsProjectFilesCreateRequest - a model defined in OpenAPI

        :param file: The file of this ProjectsProjectFilesCreateRequest.
        :param base64_data: The base64_data of this ProjectsProjectFilesCreateRequest.
        :param name: The name of this ProjectsProjectFilesCreateRequest.
        :param path: The path of this ProjectsProjectFilesCreateRequest.
        """
        self.openapi_types = {
            'file': file,
            'base64_data': str,
            'name': str,
            'path': str
        }

        self.attribute_map = {
            'file': 'file',
            'base64_data': 'base64_data',
            'name': 'name',
            'path': 'path'
        }

        self._file = file
        self._base64_data = base64_data
        self._name = name
        self._path = path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectsProjectFilesCreateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The projects_project_files_create_request of this ProjectsProjectFilesCreateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def file(self):
        """Gets the file of this ProjectsProjectFilesCreateRequest.

        File to send, to create new file. This parameter is only used with form data and may include multiple files.

        :return: The file of this ProjectsProjectFilesCreateRequest.
        :rtype: file
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this ProjectsProjectFilesCreateRequest.

        File to send, to create new file. This parameter is only used with form data and may include multiple files.

        :param file: The file of this ProjectsProjectFilesCreateRequest.
        :type file: file
        """

        self._file = file

    @property
    def base64_data(self):
        """Gets the base64_data of this ProjectsProjectFilesCreateRequest.

        Fila data, represented as base64.

        :return: The base64_data of this ProjectsProjectFilesCreateRequest.
        :rtype: str
        """
        return self._base64_data

    @base64_data.setter
    def base64_data(self, base64_data):
        """Sets the base64_data of this ProjectsProjectFilesCreateRequest.

        Fila data, represented as base64.

        :param base64_data: The base64_data of this ProjectsProjectFilesCreateRequest.
        :type base64_data: str
        """

        self._base64_data = base64_data

    @property
    def name(self):
        """Gets the name of this ProjectsProjectFilesCreateRequest.

        File name. May include path when creating file with base64 field.

        :return: The name of this ProjectsProjectFilesCreateRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProjectsProjectFilesCreateRequest.

        File name. May include path when creating file with base64 field.

        :param name: The name of this ProjectsProjectFilesCreateRequest.
        :type name: str
        """

        self._name = name

    @property
    def path(self):
        """Gets the path of this ProjectsProjectFilesCreateRequest.

        File path. Defaults to (/).

        :return: The path of this ProjectsProjectFilesCreateRequest.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this ProjectsProjectFilesCreateRequest.

        File path. Defaults to (/).

        :param path: The path of this ProjectsProjectFilesCreateRequest.
        :type path: str
        """

        self._path = path
