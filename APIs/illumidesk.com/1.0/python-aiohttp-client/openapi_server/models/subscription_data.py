# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plan: str=None):
        """SubscriptionData - a model defined in OpenAPI

        :param plan: The plan of this SubscriptionData.
        """
        self.openapi_types = {
            'plan': str
        }

        self.attribute_map = {
            'plan': 'plan'
        }

        self._plan = plan

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionData of this SubscriptionData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plan(self):
        """Gets the plan of this SubscriptionData.

        Plan unique identifier.

        :return: The plan of this SubscriptionData.
        :rtype: str
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this SubscriptionData.

        Plan unique identifier.

        :param plan: The plan of this SubscriptionData.
        :type plan: str
        """
        if plan is None:
            raise ValueError("Invalid value for `plan`, must not be `None`")

        self._plan = plan
