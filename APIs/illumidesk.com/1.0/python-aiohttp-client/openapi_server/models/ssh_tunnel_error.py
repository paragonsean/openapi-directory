# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SshTunnelError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, endpoint: List[str]=None, host: List[str]=None, id: List[str]=None, local_port: List[str]=None, name: List[str]=None, non_field_errors: List[str]=None, remote_port: List[str]=None, username: List[str]=None):
        """SshTunnelError - a model defined in OpenAPI

        :param endpoint: The endpoint of this SshTunnelError.
        :param host: The host of this SshTunnelError.
        :param id: The id of this SshTunnelError.
        :param local_port: The local_port of this SshTunnelError.
        :param name: The name of this SshTunnelError.
        :param non_field_errors: The non_field_errors of this SshTunnelError.
        :param remote_port: The remote_port of this SshTunnelError.
        :param username: The username of this SshTunnelError.
        """
        self.openapi_types = {
            'endpoint': List[str],
            'host': List[str],
            'id': List[str],
            'local_port': List[str],
            'name': List[str],
            'non_field_errors': List[str],
            'remote_port': List[str],
            'username': List[str]
        }

        self.attribute_map = {
            'endpoint': 'endpoint',
            'host': 'host',
            'id': 'id',
            'local_port': 'local_port',
            'name': 'name',
            'non_field_errors': 'non_field_errors',
            'remote_port': 'remote_port',
            'username': 'username'
        }

        self._endpoint = endpoint
        self._host = host
        self._id = id
        self._local_port = local_port
        self._name = name
        self._non_field_errors = non_field_errors
        self._remote_port = remote_port
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshTunnelError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SshTunnelError of this SshTunnelError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def endpoint(self):
        """Gets the endpoint of this SshTunnelError.

        endpoint field errors.

        :return: The endpoint of this SshTunnelError.
        :rtype: List[str]
        """
        return self._endpoint

    @endpoint.setter
    def endpoint(self, endpoint):
        """Sets the endpoint of this SshTunnelError.

        endpoint field errors.

        :param endpoint: The endpoint of this SshTunnelError.
        :type endpoint: List[str]
        """

        self._endpoint = endpoint

    @property
    def host(self):
        """Gets the host of this SshTunnelError.

        host field errors.

        :return: The host of this SshTunnelError.
        :rtype: List[str]
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this SshTunnelError.

        host field errors.

        :param host: The host of this SshTunnelError.
        :type host: List[str]
        """

        self._host = host

    @property
    def id(self):
        """Gets the id of this SshTunnelError.

        id field errors.

        :return: The id of this SshTunnelError.
        :rtype: List[str]
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SshTunnelError.

        id field errors.

        :param id: The id of this SshTunnelError.
        :type id: List[str]
        """

        self._id = id

    @property
    def local_port(self):
        """Gets the local_port of this SshTunnelError.

        local_port field errors.

        :return: The local_port of this SshTunnelError.
        :rtype: List[str]
        """
        return self._local_port

    @local_port.setter
    def local_port(self, local_port):
        """Sets the local_port of this SshTunnelError.

        local_port field errors.

        :param local_port: The local_port of this SshTunnelError.
        :type local_port: List[str]
        """

        self._local_port = local_port

    @property
    def name(self):
        """Gets the name of this SshTunnelError.

        name field errors.

        :return: The name of this SshTunnelError.
        :rtype: List[str]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SshTunnelError.

        name field errors.

        :param name: The name of this SshTunnelError.
        :type name: List[str]
        """

        self._name = name

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this SshTunnelError.

        Errors not connected to any field.

        :return: The non_field_errors of this SshTunnelError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this SshTunnelError.

        Errors not connected to any field.

        :param non_field_errors: The non_field_errors of this SshTunnelError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def remote_port(self):
        """Gets the remote_port of this SshTunnelError.

        remote_port field errors.

        :return: The remote_port of this SshTunnelError.
        :rtype: List[str]
        """
        return self._remote_port

    @remote_port.setter
    def remote_port(self, remote_port):
        """Sets the remote_port of this SshTunnelError.

        remote_port field errors.

        :param remote_port: The remote_port of this SshTunnelError.
        :type remote_port: List[str]
        """

        self._remote_port = remote_port

    @property
    def username(self):
        """Gets the username of this SshTunnelError.

        username field errors.

        :return: The username of this SshTunnelError.
        :rtype: List[str]
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this SshTunnelError.

        username field errors.

        :param username: The username of this SshTunnelError.
        :type username: List[str]
        """

        self._username = username
