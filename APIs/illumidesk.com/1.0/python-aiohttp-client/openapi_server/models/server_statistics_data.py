# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServerStatisticsData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: List[str]=None, non_field_errors: List[str]=None, size: List[str]=None, start: List[str]=None, stop: List[str]=None):
        """ServerStatisticsData - a model defined in OpenAPI

        :param id: The id of this ServerStatisticsData.
        :param non_field_errors: The non_field_errors of this ServerStatisticsData.
        :param size: The size of this ServerStatisticsData.
        :param start: The start of this ServerStatisticsData.
        :param stop: The stop of this ServerStatisticsData.
        """
        self.openapi_types = {
            'id': List[str],
            'non_field_errors': List[str],
            'size': List[str],
            'start': List[str],
            'stop': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'non_field_errors': 'non_field_errors',
            'size': 'size',
            'start': 'start',
            'stop': 'stop'
        }

        self._id = id
        self._non_field_errors = non_field_errors
        self._size = size
        self._start = start
        self._stop = stop

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerStatisticsData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerStatisticsData of this ServerStatisticsData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ServerStatisticsData.

        id field errors.

        :return: The id of this ServerStatisticsData.
        :rtype: List[str]
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServerStatisticsData.

        id field errors.

        :param id: The id of this ServerStatisticsData.
        :type id: List[str]
        """

        self._id = id

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this ServerStatisticsData.

        Errors not connected to any field.

        :return: The non_field_errors of this ServerStatisticsData.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this ServerStatisticsData.

        Errors not connected to any field.

        :param non_field_errors: The non_field_errors of this ServerStatisticsData.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def size(self):
        """Gets the size of this ServerStatisticsData.

        size field errors.

        :return: The size of this ServerStatisticsData.
        :rtype: List[str]
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this ServerStatisticsData.

        size field errors.

        :param size: The size of this ServerStatisticsData.
        :type size: List[str]
        """

        self._size = size

    @property
    def start(self):
        """Gets the start of this ServerStatisticsData.

        start field errors.

        :return: The start of this ServerStatisticsData.
        :rtype: List[str]
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this ServerStatisticsData.

        start field errors.

        :param start: The start of this ServerStatisticsData.
        :type start: List[str]
        """

        self._start = start

    @property
    def stop(self):
        """Gets the stop of this ServerStatisticsData.

        stop field errors.

        :return: The stop of this ServerStatisticsData.
        :rtype: List[str]
        """
        return self._stop

    @stop.setter
    def stop(self, stop):
        """Sets the stop of this ServerStatisticsData.

        stop field errors.

        :param stop: The stop of this ServerStatisticsData.
        :type stop: List[str]
        """

        self._stop = stop
