# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotificationError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, non_field_errors: List[str]=None, read: List[str]=None):
        """NotificationError - a model defined in OpenAPI

        :param non_field_errors: The non_field_errors of this NotificationError.
        :param read: The read of this NotificationError.
        """
        self.openapi_types = {
            'non_field_errors': List[str],
            'read': List[str]
        }

        self.attribute_map = {
            'non_field_errors': 'non_field_errors',
            'read': 'read'
        }

        self._non_field_errors = non_field_errors
        self._read = read

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotificationError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NotificationError of this NotificationError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this NotificationError.

        Errors not connected to any field

        :return: The non_field_errors of this NotificationError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this NotificationError.

        Errors not connected to any field

        :param non_field_errors: The non_field_errors of this NotificationError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def read(self):
        """Gets the read of this NotificationError.

        read field errors

        :return: The read of this NotificationError.
        :rtype: List[str]
        """
        return self._read

    @read.setter
    def read(self, read):
        """Sets the read of this NotificationError.

        read field errors

        :param read: The read of this NotificationError.
        :type read: List[str]
        """

        self._read = read
