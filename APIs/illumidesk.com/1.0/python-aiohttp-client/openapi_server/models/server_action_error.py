# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServerActionError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: List[str]=None, name: List[str]=None, non_field_errors: List[str]=None, operation: List[str]=None):
        """ServerActionError - a model defined in OpenAPI

        :param id: The id of this ServerActionError.
        :param name: The name of this ServerActionError.
        :param non_field_errors: The non_field_errors of this ServerActionError.
        :param operation: The operation of this ServerActionError.
        """
        self.openapi_types = {
            'id': List[str],
            'name': List[str],
            'non_field_errors': List[str],
            'operation': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'non_field_errors': 'non_field_errors',
            'operation': 'operation'
        }

        self._id = id
        self._name = name
        self._non_field_errors = non_field_errors
        self._operation = operation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerActionError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerActionError of this ServerActionError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ServerActionError.

        Id field errors.

        :return: The id of this ServerActionError.
        :rtype: List[str]
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServerActionError.

        Id field errors.

        :param id: The id of this ServerActionError.
        :type id: List[str]
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ServerActionError.

        Name field errors.

        :return: The name of this ServerActionError.
        :rtype: List[str]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServerActionError.

        Name field errors.

        :param name: The name of this ServerActionError.
        :type name: List[str]
        """

        self._name = name

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this ServerActionError.

        Errors not connected to any field.

        :return: The non_field_errors of this ServerActionError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this ServerActionError.

        Errors not connected to any field.

        :param non_field_errors: The non_field_errors of this ServerActionError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def operation(self):
        """Gets the operation of this ServerActionError.

        Operation field errors.

        :return: The operation of this ServerActionError.
        :rtype: List[str]
        """
        return self._operation

    @operation.setter
    def operation(self, operation):
        """Sets the operation of this ServerActionError.

        Operation field errors.

        :param operation: The operation of this ServerActionError.
        :type operation: List[str]
        """

        self._operation = operation
