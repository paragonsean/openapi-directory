# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubscriptionError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, application_fee_percent: List[str]=None, cancel_at_period_end: List[str]=None, canceled_at: List[str]=None, created: List[str]=None, current_period_end: List[str]=None, current_period_start: List[str]=None, ended_at: List[str]=None, id: List[str]=None, livemode: List[str]=None, non_field_errors: List[str]=None, plan: List[str]=None, quantity: List[str]=None, start: List[str]=None, status: List[str]=None, stripe_id: List[str]=None, trial_end: List[str]=None, trial_start: List[str]=None):
        """SubscriptionError - a model defined in OpenAPI

        :param application_fee_percent: The application_fee_percent of this SubscriptionError.
        :param cancel_at_period_end: The cancel_at_period_end of this SubscriptionError.
        :param canceled_at: The canceled_at of this SubscriptionError.
        :param created: The created of this SubscriptionError.
        :param current_period_end: The current_period_end of this SubscriptionError.
        :param current_period_start: The current_period_start of this SubscriptionError.
        :param ended_at: The ended_at of this SubscriptionError.
        :param id: The id of this SubscriptionError.
        :param livemode: The livemode of this SubscriptionError.
        :param non_field_errors: The non_field_errors of this SubscriptionError.
        :param plan: The plan of this SubscriptionError.
        :param quantity: The quantity of this SubscriptionError.
        :param start: The start of this SubscriptionError.
        :param status: The status of this SubscriptionError.
        :param stripe_id: The stripe_id of this SubscriptionError.
        :param trial_end: The trial_end of this SubscriptionError.
        :param trial_start: The trial_start of this SubscriptionError.
        """
        self.openapi_types = {
            'application_fee_percent': List[str],
            'cancel_at_period_end': List[str],
            'canceled_at': List[str],
            'created': List[str],
            'current_period_end': List[str],
            'current_period_start': List[str],
            'ended_at': List[str],
            'id': List[str],
            'livemode': List[str],
            'non_field_errors': List[str],
            'plan': List[str],
            'quantity': List[str],
            'start': List[str],
            'status': List[str],
            'stripe_id': List[str],
            'trial_end': List[str],
            'trial_start': List[str]
        }

        self.attribute_map = {
            'application_fee_percent': 'application_fee_percent',
            'cancel_at_period_end': 'cancel_at_period_end',
            'canceled_at': 'canceled_at',
            'created': 'created',
            'current_period_end': 'current_period_end',
            'current_period_start': 'current_period_start',
            'ended_at': 'ended_at',
            'id': 'id',
            'livemode': 'livemode',
            'non_field_errors': 'non_field_errors',
            'plan': 'plan',
            'quantity': 'quantity',
            'start': 'start',
            'status': 'status',
            'stripe_id': 'stripe_id',
            'trial_end': 'trial_end',
            'trial_start': 'trial_start'
        }

        self._application_fee_percent = application_fee_percent
        self._cancel_at_period_end = cancel_at_period_end
        self._canceled_at = canceled_at
        self._created = created
        self._current_period_end = current_period_end
        self._current_period_start = current_period_start
        self._ended_at = ended_at
        self._id = id
        self._livemode = livemode
        self._non_field_errors = non_field_errors
        self._plan = plan
        self._quantity = quantity
        self._start = start
        self._status = status
        self._stripe_id = stripe_id
        self._trial_end = trial_end
        self._trial_start = trial_start

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubscriptionError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SubscriptionError of this SubscriptionError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def application_fee_percent(self):
        """Gets the application_fee_percent of this SubscriptionError.

        application_fee_percent field errors

        :return: The application_fee_percent of this SubscriptionError.
        :rtype: List[str]
        """
        return self._application_fee_percent

    @application_fee_percent.setter
    def application_fee_percent(self, application_fee_percent):
        """Sets the application_fee_percent of this SubscriptionError.

        application_fee_percent field errors

        :param application_fee_percent: The application_fee_percent of this SubscriptionError.
        :type application_fee_percent: List[str]
        """

        self._application_fee_percent = application_fee_percent

    @property
    def cancel_at_period_end(self):
        """Gets the cancel_at_period_end of this SubscriptionError.

        cancel_at_period_end field errors

        :return: The cancel_at_period_end of this SubscriptionError.
        :rtype: List[str]
        """
        return self._cancel_at_period_end

    @cancel_at_period_end.setter
    def cancel_at_period_end(self, cancel_at_period_end):
        """Sets the cancel_at_period_end of this SubscriptionError.

        cancel_at_period_end field errors

        :param cancel_at_period_end: The cancel_at_period_end of this SubscriptionError.
        :type cancel_at_period_end: List[str]
        """

        self._cancel_at_period_end = cancel_at_period_end

    @property
    def canceled_at(self):
        """Gets the canceled_at of this SubscriptionError.

        canceled_at field errors

        :return: The canceled_at of this SubscriptionError.
        :rtype: List[str]
        """
        return self._canceled_at

    @canceled_at.setter
    def canceled_at(self, canceled_at):
        """Sets the canceled_at of this SubscriptionError.

        canceled_at field errors

        :param canceled_at: The canceled_at of this SubscriptionError.
        :type canceled_at: List[str]
        """

        self._canceled_at = canceled_at

    @property
    def created(self):
        """Gets the created of this SubscriptionError.

        created field errors

        :return: The created of this SubscriptionError.
        :rtype: List[str]
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this SubscriptionError.

        created field errors

        :param created: The created of this SubscriptionError.
        :type created: List[str]
        """

        self._created = created

    @property
    def current_period_end(self):
        """Gets the current_period_end of this SubscriptionError.

        current_period_end field errors

        :return: The current_period_end of this SubscriptionError.
        :rtype: List[str]
        """
        return self._current_period_end

    @current_period_end.setter
    def current_period_end(self, current_period_end):
        """Sets the current_period_end of this SubscriptionError.

        current_period_end field errors

        :param current_period_end: The current_period_end of this SubscriptionError.
        :type current_period_end: List[str]
        """

        self._current_period_end = current_period_end

    @property
    def current_period_start(self):
        """Gets the current_period_start of this SubscriptionError.

        current_period_start field errors

        :return: The current_period_start of this SubscriptionError.
        :rtype: List[str]
        """
        return self._current_period_start

    @current_period_start.setter
    def current_period_start(self, current_period_start):
        """Sets the current_period_start of this SubscriptionError.

        current_period_start field errors

        :param current_period_start: The current_period_start of this SubscriptionError.
        :type current_period_start: List[str]
        """

        self._current_period_start = current_period_start

    @property
    def ended_at(self):
        """Gets the ended_at of this SubscriptionError.

        ended_at field errors

        :return: The ended_at of this SubscriptionError.
        :rtype: List[str]
        """
        return self._ended_at

    @ended_at.setter
    def ended_at(self, ended_at):
        """Sets the ended_at of this SubscriptionError.

        ended_at field errors

        :param ended_at: The ended_at of this SubscriptionError.
        :type ended_at: List[str]
        """

        self._ended_at = ended_at

    @property
    def id(self):
        """Gets the id of this SubscriptionError.

        id field errors

        :return: The id of this SubscriptionError.
        :rtype: List[str]
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SubscriptionError.

        id field errors

        :param id: The id of this SubscriptionError.
        :type id: List[str]
        """

        self._id = id

    @property
    def livemode(self):
        """Gets the livemode of this SubscriptionError.

        livemode field errors

        :return: The livemode of this SubscriptionError.
        :rtype: List[str]
        """
        return self._livemode

    @livemode.setter
    def livemode(self, livemode):
        """Sets the livemode of this SubscriptionError.

        livemode field errors

        :param livemode: The livemode of this SubscriptionError.
        :type livemode: List[str]
        """

        self._livemode = livemode

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this SubscriptionError.

        Errors not connected to any field

        :return: The non_field_errors of this SubscriptionError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this SubscriptionError.

        Errors not connected to any field

        :param non_field_errors: The non_field_errors of this SubscriptionError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def plan(self):
        """Gets the plan of this SubscriptionError.

        plan field errors

        :return: The plan of this SubscriptionError.
        :rtype: List[str]
        """
        return self._plan

    @plan.setter
    def plan(self, plan):
        """Sets the plan of this SubscriptionError.

        plan field errors

        :param plan: The plan of this SubscriptionError.
        :type plan: List[str]
        """

        self._plan = plan

    @property
    def quantity(self):
        """Gets the quantity of this SubscriptionError.

        quantity field errors

        :return: The quantity of this SubscriptionError.
        :rtype: List[str]
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this SubscriptionError.

        quantity field errors

        :param quantity: The quantity of this SubscriptionError.
        :type quantity: List[str]
        """

        self._quantity = quantity

    @property
    def start(self):
        """Gets the start of this SubscriptionError.

        start field errors

        :return: The start of this SubscriptionError.
        :rtype: List[str]
        """
        return self._start

    @start.setter
    def start(self, start):
        """Sets the start of this SubscriptionError.

        start field errors

        :param start: The start of this SubscriptionError.
        :type start: List[str]
        """

        self._start = start

    @property
    def status(self):
        """Gets the status of this SubscriptionError.

        status field errors

        :return: The status of this SubscriptionError.
        :rtype: List[str]
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SubscriptionError.

        status field errors

        :param status: The status of this SubscriptionError.
        :type status: List[str]
        """

        self._status = status

    @property
    def stripe_id(self):
        """Gets the stripe_id of this SubscriptionError.

        stripe_id field errors

        :return: The stripe_id of this SubscriptionError.
        :rtype: List[str]
        """
        return self._stripe_id

    @stripe_id.setter
    def stripe_id(self, stripe_id):
        """Sets the stripe_id of this SubscriptionError.

        stripe_id field errors

        :param stripe_id: The stripe_id of this SubscriptionError.
        :type stripe_id: List[str]
        """

        self._stripe_id = stripe_id

    @property
    def trial_end(self):
        """Gets the trial_end of this SubscriptionError.

        trial_end field errors

        :return: The trial_end of this SubscriptionError.
        :rtype: List[str]
        """
        return self._trial_end

    @trial_end.setter
    def trial_end(self, trial_end):
        """Sets the trial_end of this SubscriptionError.

        trial_end field errors

        :param trial_end: The trial_end of this SubscriptionError.
        :type trial_end: List[str]
        """

        self._trial_end = trial_end

    @property
    def trial_start(self):
        """Gets the trial_start of this SubscriptionError.

        trial_start field errors

        :return: The trial_start of this SubscriptionError.
        :rtype: List[str]
        """
        return self._trial_start

    @trial_start.setter
    def trial_start(self, trial_start):
        """Sets the trial_start of this SubscriptionError.

        trial_start field errors

        :param trial_start: The trial_start of this SubscriptionError.
        :type trial_start: List[str]
        """

        self._trial_start = trial_start
