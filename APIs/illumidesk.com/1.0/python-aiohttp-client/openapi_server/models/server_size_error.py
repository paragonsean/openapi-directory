# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServerSizeError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: List[str]=None, cpu: List[str]=None, id: List[str]=None, memory: List[str]=None, name: List[str]=None, non_field_errors: List[str]=None):
        """ServerSizeError - a model defined in OpenAPI

        :param active: The active of this ServerSizeError.
        :param cpu: The cpu of this ServerSizeError.
        :param id: The id of this ServerSizeError.
        :param memory: The memory of this ServerSizeError.
        :param name: The name of this ServerSizeError.
        :param non_field_errors: The non_field_errors of this ServerSizeError.
        """
        self.openapi_types = {
            'active': List[str],
            'cpu': List[str],
            'id': List[str],
            'memory': List[str],
            'name': List[str],
            'non_field_errors': List[str]
        }

        self.attribute_map = {
            'active': 'active',
            'cpu': 'cpu',
            'id': 'id',
            'memory': 'memory',
            'name': 'name',
            'non_field_errors': 'non_field_errors'
        }

        self._active = active
        self._cpu = cpu
        self._id = id
        self._memory = memory
        self._name = name
        self._non_field_errors = non_field_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServerSizeError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServerSizeError of this ServerSizeError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this ServerSizeError.

        Active field errors.

        :return: The active of this ServerSizeError.
        :rtype: List[str]
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this ServerSizeError.

        Active field errors.

        :param active: The active of this ServerSizeError.
        :type active: List[str]
        """

        self._active = active

    @property
    def cpu(self):
        """Gets the cpu of this ServerSizeError.

        CPU field errors.

        :return: The cpu of this ServerSizeError.
        :rtype: List[str]
        """
        return self._cpu

    @cpu.setter
    def cpu(self, cpu):
        """Sets the cpu of this ServerSizeError.

        CPU field errors.

        :param cpu: The cpu of this ServerSizeError.
        :type cpu: List[str]
        """

        self._cpu = cpu

    @property
    def id(self):
        """Gets the id of this ServerSizeError.

        Id field errors.

        :return: The id of this ServerSizeError.
        :rtype: List[str]
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ServerSizeError.

        Id field errors.

        :param id: The id of this ServerSizeError.
        :type id: List[str]
        """

        self._id = id

    @property
    def memory(self):
        """Gets the memory of this ServerSizeError.

        Memory field errors.

        :return: The memory of this ServerSizeError.
        :rtype: List[str]
        """
        return self._memory

    @memory.setter
    def memory(self, memory):
        """Sets the memory of this ServerSizeError.

        Memory field errors.

        :param memory: The memory of this ServerSizeError.
        :type memory: List[str]
        """

        self._memory = memory

    @property
    def name(self):
        """Gets the name of this ServerSizeError.

        Name field errors.

        :return: The name of this ServerSizeError.
        :rtype: List[str]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServerSizeError.

        Name field errors.

        :param name: The name of this ServerSizeError.
        :type name: List[str]
        """

        self._name = name

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this ServerSizeError.

        Errors not connected to any field.

        :return: The non_field_errors of this ServerSizeError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this ServerSizeError.

        Errors not connected to any field.

        :param non_field_errors: The non_field_errors of this ServerSizeError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors
