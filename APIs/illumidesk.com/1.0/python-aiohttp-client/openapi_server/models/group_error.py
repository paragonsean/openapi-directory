# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GroupError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: List[str]=None, id: List[str]=None, name: List[str]=None, non_field_errors: List[str]=None, parent: List[str]=None, private: List[str]=None):
        """GroupError - a model defined in OpenAPI

        :param description: The description of this GroupError.
        :param id: The id of this GroupError.
        :param name: The name of this GroupError.
        :param non_field_errors: The non_field_errors of this GroupError.
        :param parent: The parent of this GroupError.
        :param private: The private of this GroupError.
        """
        self.openapi_types = {
            'description': List[str],
            'id': List[str],
            'name': List[str],
            'non_field_errors': List[str],
            'parent': List[str],
            'private': List[str]
        }

        self.attribute_map = {
            'description': 'description',
            'id': 'id',
            'name': 'name',
            'non_field_errors': 'non_field_errors',
            'parent': 'parent',
            'private': 'private'
        }

        self._description = description
        self._id = id
        self._name = name
        self._non_field_errors = non_field_errors
        self._parent = parent
        self._private = private

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GroupError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GroupError of this GroupError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GroupError.

        Description field errors.

        :return: The description of this GroupError.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GroupError.

        Description field errors.

        :param description: The description of this GroupError.
        :type description: List[str]
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this GroupError.

        Id field errors.

        :return: The id of this GroupError.
        :rtype: List[str]
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GroupError.

        Id field errors.

        :param id: The id of this GroupError.
        :type id: List[str]
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this GroupError.

        Name field errors.

        :return: The name of this GroupError.
        :rtype: List[str]
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GroupError.

        Name field errors.

        :param name: The name of this GroupError.
        :type name: List[str]
        """

        self._name = name

    @property
    def non_field_errors(self):
        """Gets the non_field_errors of this GroupError.

        Errors not connected to any field.

        :return: The non_field_errors of this GroupError.
        :rtype: List[str]
        """
        return self._non_field_errors

    @non_field_errors.setter
    def non_field_errors(self, non_field_errors):
        """Sets the non_field_errors of this GroupError.

        Errors not connected to any field.

        :param non_field_errors: The non_field_errors of this GroupError.
        :type non_field_errors: List[str]
        """

        self._non_field_errors = non_field_errors

    @property
    def parent(self):
        """Gets the parent of this GroupError.

        Private field errors.

        :return: The parent of this GroupError.
        :rtype: List[str]
        """
        return self._parent

    @parent.setter
    def parent(self, parent):
        """Sets the parent of this GroupError.

        Private field errors.

        :param parent: The parent of this GroupError.
        :type parent: List[str]
        """

        self._parent = parent

    @property
    def private(self):
        """Gets the private of this GroupError.

        Private field errors.

        :return: The private of this GroupError.
        :rtype: List[str]
        """
        return self._private

    @private.setter
    def private(self, private):
        """Sets the private of this GroupError.

        Private field errors.

        :param private: The private of this GroupError.
        :type private: List[str]
        """

        self._private = private
