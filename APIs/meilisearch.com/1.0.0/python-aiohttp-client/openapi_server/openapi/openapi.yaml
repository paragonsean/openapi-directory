openapi: 3.0.3
info:
  contact: {}
  title: Meilisearch v1.1
  version: 1.0.0
  x-logo:
    url: https://meilisearch.com/apple-touch-icon.png
  x-origin:
  - format: postman
    url: https://raw.githubusercontent.com/meilisearch/documentation/master/.vuepress/public/postman/meilisearch-collection.json
    version: 2.x
  x-providerName: meilisearch.com
servers:
- url: http://localhost:7700/
tags:
- name: Documents
- name: Search
- name: Multi-search
- name: Tasks
- name: Indexes
- name: Settings
- name: Sub-routes
- name: Key Management
- name: Stats
- name: Dumps
paths:
  /dumps:
    post:
      description: Create a dump
      operationId: create_a_dump
      responses:
        "200":
          description: ""
      summary: Create a dump
      tags:
      - Dumps
      x-openapi-router-controller: openapi_server.controllers.dumps_controller
  /health:
    get:
      description: Health
      operationId: health
      responses:
        "200":
          description: ""
      summary: Health
      tags:
      - Stats
      x-openapi-router-controller: openapi_server.controllers.stats_controller
  /indexes:
    get:
      description: Get indexes
      operationId: get_indexes
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          example: "0"
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          example: "2"
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Get indexes
      tags:
      - Indexes
      x-openapi-router-controller: openapi_server.controllers.indexes_controller
    post:
      description: Create index with primary key
      operationId: create_index_with_primary_key
      requestBody:
        content:
          application/json:
            example:
              primaryKey: number
              uid: books
            schema:
              $ref: '#/components/schemas/createIndexWithPrimaryKey_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Create index with primary key
      tags:
      - Indexes
      x-openapi-router-controller: openapi_server.controllers.indexes_controller
      x-codegen-request-body-name: body
  /indexes/books:
    delete:
      description: Delete an index
      operationId: delete_an_index
      responses:
        "200":
          description: ""
      summary: Delete an index
      tags:
      - Indexes
      x-openapi-router-controller: openapi_server.controllers.indexes_controller
    get:
      description: Show index
      operationId: show_index
      responses:
        "200":
          description: ""
      summary: Show index
      tags:
      - Indexes
      x-openapi-router-controller: openapi_server.controllers.indexes_controller
    patch:
      description: Can only change the document identifier if it has not already been
        added before.
      operationId: update_index
      requestBody:
        content:
          application/json:
            example:
              primaryKey: title
            schema:
              $ref: '#/components/schemas/updateIndex_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update index
      tags:
      - Indexes
      x-openapi-router-controller: openapi_server.controllers.indexes_controller
      x-codegen-request-body-name: body
  /indexes/books/documents:
    delete:
      description: Delete all documents
      operationId: delete_all_documents
      responses:
        "200":
          description: ""
      summary: Delete all documents
      tags:
      - Documents
      x-openapi-router-controller: openapi_server.controllers.documents_controller
    get:
      description: Get documents
      operationId: get_documents
      parameters:
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          example: "1"
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          example: "10"
          type: string
        style: form
      - explode: true
        in: query
        name: fields
        required: false
        schema:
          example: id
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Get documents
      tags:
      - Documents
      x-openapi-router-controller: openapi_server.controllers.documents_controller
    post:
      description: Add or replace documents
      operationId: add_or_replace_documents
      parameters:
      - explode: true
        in: query
        name: primaryKey
        required: false
        schema:
          example: id
          type: string
        style: form
      - explode: true
        in: query
        name: csvDelimiter
        required: false
        schema:
          example: ;
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
            - author: Jane Austen
              genre: romance
              id: 2
              price: 3.5
              title: Pride and Prejudice
            - author: Antoine de Saint-Exupéry
              genre: adventure
              id: 456
              price: 10
              title: Le Petit Prince
            - author: Lewis Carroll
              genre: fantasy
              id: 1
              price: 25.99
              title: Alice In Wonderland
            - author: J. R. R. Tolkien
              genre: fantasy
              id: 1344
              title: The Hobbit
            - author: J. K. Rowling
              genre: fantasy
              id: 4
              title: Harry Potter and the Half-Blood Prince
            - author: Douglas Adams
              id: 42
              title: The Hitchhiker's Guide to the Galaxy
            schema:
              example:
              - author: Jane Austen
                genre: romance
                id: 2
                price: 3.5
                title: Pride and Prejudice
              - author: Antoine de Saint-Exupéry
                genre: adventure
                id: 456
                price: 10
                title: Le Petit Prince
              - author: Lewis Carroll
                genre: fantasy
                id: 1
                price: 25.99
                title: Alice In Wonderland
              - author: J. R. R. Tolkien
                genre: fantasy
                id: 1344
                title: The Hobbit
              - author: J. K. Rowling
                genre: fantasy
                id: 4
                title: Harry Potter and the Half-Blood Prince
              - author: Douglas Adams
                id: 42
                title: The Hitchhiker's Guide to the Galaxy
              items:
                $ref: '#/components/schemas/addOrReplaceDocuments_request_inner'
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Add or replace documents
      tags:
      - Documents
      x-openapi-router-controller: openapi_server.controllers.documents_controller
      x-codegen-request-body-name: body
    put:
      description: Add or update documents
      operationId: add_or_update_documents
      parameters:
      - explode: true
        in: query
        name: primaryKey
        required: false
        schema:
          example: id
          type: string
        style: form
      - explode: true
        in: query
        name: csvDelimiter
        required: false
        schema:
          example: ;
          type: string
        style: form
      requestBody:
        content:
          application/json:
            example:
            - author: J. Austen
              date: "1813"
              id: 2
            schema:
              example:
              - author: J. Austen
                date: "1813"
                id: 2
              items:
                $ref: '#/components/schemas/addOrUpdateDocuments_request_inner'
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Add or update documents
      tags:
      - Documents
      x-openapi-router-controller: openapi_server.controllers.documents_controller
      x-codegen-request-body-name: body
  /indexes/books/documents/1:
    delete:
      description: Delete one document
      operationId: delete_one_document
      requestBody:
        content:
          text/plain:
            example: ""
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Delete one document
      tags:
      - Documents
      x-openapi-router-controller: openapi_server.controllers.documents_controller
      x-codegen-request-body-name: body
  /indexes/books/documents/2:
    get:
      description: Get one document
      operationId: get_one_document
      parameters:
      - explode: true
        in: query
        name: fields
        required: false
        schema:
          example: id
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Get one document
      tags:
      - Documents
      x-openapi-router-controller: openapi_server.controllers.documents_controller
  /indexes/books/documents/delete-batch:
    post:
      description: Delete documents
      operationId: delete_documents
      requestBody:
        content:
          application/json:
            example:
            - 1
            - 2
            schema:
              example:
              - 1
              - 2
              items:
                example: 1
                type: number
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Delete documents
      tags:
      - Documents
      x-openapi-router-controller: openapi_server.controllers.documents_controller
      x-codegen-request-body-name: body
  /indexes/books/search:
    get:
      description: Search in index
      operationId: search_in_index
      parameters:
      - explode: true
        in: query
        name: q
        required: false
        schema:
          example: prinec
          type: string
        style: form
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          example: "0"
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          example: "1"
          type: string
        style: form
      - explode: true
        in: query
        name: attributesToRetrieve
        required: false
        schema:
          example: "title,author"
          type: string
        style: form
      - explode: true
        in: query
        name: attributesToCrop
        required: false
        schema:
          example: title
          type: string
        style: form
      - explode: true
        in: query
        name: attributesToHighlight
        required: false
        schema:
          example: '*'
          type: string
        style: form
      - explode: true
        in: query
        name: cropLength
        required: false
        schema:
          example: "5"
          type: string
        style: form
      - explode: true
        in: query
        name: cropMarker
        required: false
        schema:
          example: "[...]"
          type: string
        style: form
      - explode: true
        in: query
        name: filter
        required: false
        schema:
          example: genre="fantasy"
          type: string
        style: form
      - explode: true
        in: query
        name: showMatchesPosition
        required: false
        schema:
          example: "true"
          type: string
        style: form
      - explode: true
        in: query
        name: facets
        required: false
        schema:
          example: genre
          type: string
        style: form
      - explode: true
        in: query
        name: sort
        required: false
        schema:
          example: price
          type: string
        style: form
      - explode: true
        in: query
        name: highlightPreTag
        required: false
        schema:
          example: <mark>
          type: string
        style: form
      - explode: true
        in: query
        name: highlightPostTag
        required: false
        schema:
          example: </mark>
          type: string
        style: form
      - explode: true
        in: query
        name: matchingStrategy
        required: false
        schema:
          example: all
          type: string
        style: form
      - explode: true
        in: query
        name: page
        required: false
        schema:
          example: "2"
          type: string
        style: form
      - explode: true
        in: query
        name: hitsPerPage
        required: false
        schema:
          example: "50"
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Search in index
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
    post:
      description: Search in index
      operationId: search_in_index1
      requestBody:
        content:
          application/json:
            example:
              attributesToHighlight:
              - title
              q: ""
            schema:
              $ref: '#/components/schemas/searchInIndex1_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Search in index
      tags:
      - Search
      x-openapi-router-controller: openapi_server.controllers.search_controller
      x-codegen-request-body-name: body
  /indexes/books/settings:
    delete:
      description: Reset all settings
      operationId: reset_all_settings
      responses:
        "200":
          description: ""
      summary: Reset all settings
      tags:
      - Settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get all settings
      operationId: get_all_settings
      responses:
        "200":
          description: ""
      summary: Get all settings
      tags:
      - Settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    patch:
      description: Update settings
      operationId: update_settings
      requestBody:
        content:
          application/json:
            example:
              displayedAttributes:
              - title
              - author
              - genre
              - price
              filterableAttributes:
              - genre
              - price
              searchableAttributes:
              - title
              - author
              sortableAttributes:
              - price
              stopWords:
              - of
              - the
            schema:
              $ref: '#/components/schemas/updateSettings_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update settings
      tags:
      - Settings
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/displayed-attributes:
    delete:
      description: Reset displayed attributes
      operationId: reset_displayed_attributes
      responses:
        "200":
          description: ""
      summary: Reset displayed attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get displayed attributes
      operationId: get_displayed_attributes
      responses:
        "200":
          description: ""
      summary: Get displayed attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: Update displayed attributes
      operationId: update_displayed_attributes
      requestBody:
        content:
          application/json:
            example:
            - title
            schema:
              example:
              - title
              items:
                example: title
                type: string
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update displayed attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/distinct-attribute:
    delete:
      description: Reset distinct attribute
      operationId: reset_distinct_attribute
      responses:
        "200":
          description: ""
      summary: Reset distinct attribute
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get distinct attribute
      operationId: get_distinct_attribute
      responses:
        "200":
          description: ""
      summary: Get distinct attribute
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: Update distinct attribute
      operationId: update_distinct_attribute
      requestBody:
        content:
          application/octet-stream:
            example: '"genre"'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update distinct attribute
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/faceting:
    delete:
      description: Reset faceting
      operationId: reset_faceting
      responses:
        "200":
          description: ""
      summary: Reset faceting
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get faceting
      operationId: get_faceting
      responses:
        "200":
          description: ""
      summary: Get faceting
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    patch:
      description: Update faceting
      operationId: update_faceting
      requestBody:
        content:
          application/json:
            example:
              maxValuesPerFacet: 3000
            schema:
              $ref: '#/components/schemas/updateFaceting_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update faceting
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/filterable-attributes:
    delete:
      description: Reset filterable attributes
      operationId: reset_filterable_attributes
      responses:
        "200":
          description: ""
      summary: Reset filterable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get filterable attributes
      operationId: get_filterable_attributes
      responses:
        "200":
          description: ""
      summary: Get filterable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: Update filterable attributes
      operationId: update_filterable_attributes
      requestBody:
        content:
          application/json:
            example:
            - genre
            schema:
              example:
              - genre
              items:
                example: genre
                type: string
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update filterable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/pagination:
    delete:
      description: Reset pagination
      operationId: reset_pagination
      responses:
        "200":
          description: ""
      summary: Reset pagination
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get pagination
      operationId: get_pagination
      responses:
        "200":
          description: ""
      summary: Get pagination
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    patch:
      description: Update pagination
      operationId: update_pagination
      requestBody:
        content:
          application/json:
            example:
              maxTotalHits: 2000
            schema:
              $ref: '#/components/schemas/updatePagination_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update pagination
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/ranking-rules:
    delete:
      description: Reset ranking rules
      operationId: reset_ranking_rules
      responses:
        "200":
          description: ""
      summary: Reset ranking rules
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get ranking rules
      operationId: get_ranking_rules
      responses:
        "200":
          description: ""
      summary: Get ranking rules
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: Update ranking rules
      operationId: update_ranking_rules
      requestBody:
        content:
          application/json:
            example:
            - typo
            schema:
              example:
              - typo
              items:
                example: typo
                type: string
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update ranking rules
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/searchable-attributes:
    delete:
      description: Reset searchable attributes
      operationId: reset_searchable_attributes
      responses:
        "200":
          description: ""
      summary: Reset searchable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get searchable attributes
      operationId: get_searchable_attributes
      responses:
        "200":
          description: ""
      summary: Get searchable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: Update searchable attributes
      operationId: update_searchable_attributes
      requestBody:
        content:
          application/json:
            example:
            - title
            - author
            schema:
              example:
              - title
              - author
              items:
                example: title
                type: string
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update searchable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/sortable-attributes:
    delete:
      description: Reset sortable attributes
      operationId: reset_sortable_attributes
      responses:
        "200":
          description: ""
      summary: Reset sortable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get sortable attributes
      operationId: get_sortable_attributes
      responses:
        "200":
          description: ""
      summary: Get sortable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: Update sortable attributes
      operationId: update_sortable_attributes
      requestBody:
        content:
          application/json:
            example:
            - price
            schema:
              example:
              - price
              items:
                example: price
                type: string
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update sortable attributes
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/stop-words:
    delete:
      description: Reset stop-words
      operationId: reset_stop_words
      responses:
        "200":
          description: ""
      summary: Reset stop-words
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get stop-words
      operationId: get_stop_words
      requestBody:
        content:
          application/json:
            example:
            - the
            schema:
              example:
              - the
              items:
                example: the
                type: string
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Get stop-words
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
    put:
      description: Update stop-words
      operationId: update_stop_words
      requestBody:
        content:
          application/json:
            example:
            - the
            - of
            schema:
              example:
              - the
              - of
              items:
                example: the
                type: string
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update stop-words
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/synonyms:
    delete:
      description: Reset synonyms
      operationId: reset_synonyms
      requestBody:
        content:
          text/plain:
            example: "\"[\"wizard\"]\""
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Reset synonyms
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
    get:
      description: Get synonyms
      operationId: get_synonyms
      responses:
        "200":
          description: ""
      summary: Get synonyms
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    put:
      description: Update synonyms
      operationId: update_synonyms
      requestBody:
        content:
          application/json:
            example:
              harry potter:
              - hp
              hp:
              - harry potter
            schema:
              $ref: '#/components/schemas/updateSynonyms_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update synonyms
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/settings/typo-tolerance:
    delete:
      description: Reset typo-tolerance
      operationId: reset_typo_tolerance
      responses:
        "200":
          description: ""
      summary: Reset typo-tolerance
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    get:
      description: Get typo-tolerance
      operationId: get_typo_tolerance
      responses:
        "200":
          description: ""
      summary: Get typo-tolerance
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
    patch:
      description: Update typo-tolerance
      operationId: update_typo_tolerance
      requestBody:
        content:
          application/json:
            example:
              disableOnAttributes:
              - genre
              disableOnWords:
              - Prince
              minWordSizeForTypos:
                oneTypo: 2
                twoTypos: 11
            schema:
              $ref: '#/components/schemas/updateTypoTolerance_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update typo-tolerance
      tags:
      - Settings
      - Sub-routes
      x-openapi-router-controller: openapi_server.controllers.settings_controller
      x-codegen-request-body-name: body
  /indexes/books/stats:
    get:
      description: Stats of an index
      operationId: stats_of_an_index
      responses:
        "200":
          description: ""
      summary: Stats of an index
      tags:
      - Stats
      x-openapi-router-controller: openapi_server.controllers.stats_controller
  /indexes/swap-indexes:
    post:
      description: Swap indexes
      operationId: swap_indexes
      requestBody:
        content:
          application/json:
            example:
            - indexes:
              - books
              - books_temp
            schema:
              example:
              - indexes:
                - books
                - books_temp
              items:
                $ref: '#/components/schemas/swapIndexes_request_inner'
              type: array
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Swap indexes
      tags:
      - Indexes
      x-openapi-router-controller: openapi_server.controllers.indexes_controller
      x-codegen-request-body-name: body
  /keys:
    get:
      description: Get keys
      operationId: get_keys
      parameters:
      - explode: true
        in: query
        name: offset
        required: false
        schema:
          example: "0"
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          example: "10"
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Get keys
      tags:
      - Key Management
      x-openapi-router-controller: openapi_server.controllers.key_management_controller
    post:
      description: Create a key
      operationId: create_a_key
      requestBody:
        content:
          application/json:
            example:
              actions:
              - documents.add
              - documents.delete
              description: "Key to add and delete documents, in `books` index."
              expiresAt: null
              indexes:
              - books
              name: docs-key
            schema:
              $ref: '#/components/schemas/createAKey_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Create a key
      tags:
      - Key Management
      x-openapi-router-controller: openapi_server.controllers.key_management_controller
      x-codegen-request-body-name: body
  /keys/L8l05tFb188aab693735bbaf1f898b9902fb39f865160d39dddba2b47b940115a0430705:
    get:
      description: Get one key
      operationId: get_one_key
      responses:
        "200":
          description: ""
      summary: Get one key
      tags:
      - Key Management
      x-openapi-router-controller: openapi_server.controllers.key_management_controller
  /keys/kN2aK9EO8a7b627e425717d9196c8081552ca004e513545ed178f8a56981dbd3080d4a5b:
    delete:
      description: Delete a key
      operationId: delete_a_key
      responses:
        "200":
          description: ""
      summary: Delete a key
      tags:
      - Key Management
      x-openapi-router-controller: openapi_server.controllers.key_management_controller
  /keys/wYZjGJyBcdb0621b97999c233246a8ec0a35d0fcd9a6417ef8ccee0c8978b64b123af2dd:
    patch:
      description: Update a key
      operationId: update_a_key
      requestBody:
        content:
          application/json:
            example:
              description: "Key to add and delete documents, but also to create indexes,\
                \ in `book` index."
            schema:
              $ref: '#/components/schemas/updateAKey_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Update a key
      tags:
      - Key Management
      x-openapi-router-controller: openapi_server.controllers.key_management_controller
      x-codegen-request-body-name: body
  /multi-search:
    post:
      description: Search one or more indexes
      operationId: search_one_or_more_indexes
      requestBody:
        content:
          application/json:
            example:
              queries:
              - indexUid: books
                q: Pride and Prejudice
              - attributesToHighlight:
                - title
                indexUid: books
                q: Alice In Wonderland
            schema:
              $ref: '#/components/schemas/searchOneOrMoreIndexes_request'
        x-body-name: body
      responses:
        "200":
          description: ""
      summary: Search one or more indexes
      tags:
      - Multi-search
      x-openapi-router-controller: openapi_server.controllers.multi_search_controller
      x-codegen-request-body-name: body
  /stats:
    get:
      description: Global stats
      operationId: global_stats
      responses:
        "200":
          description: ""
      summary: Global stats
      tags:
      - Stats
      x-openapi-router-controller: openapi_server.controllers.stats_controller
  /tasks:
    delete:
      description: Delete tasks
      operationId: delete_tasks
      parameters:
      - explode: true
        in: query
        name: uids
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: indexUids
        required: false
        schema:
          example: books
          type: string
        style: form
      - explode: true
        in: query
        name: types
        required: false
        schema:
          example: documentAdditionOrUpdate
          type: string
        style: form
      - explode: true
        in: query
        name: statuses
        required: false
        schema:
          example: failed
          type: string
        style: form
      - explode: true
        in: query
        name: beforeEnqueuedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterEnqueuedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: beforeStartedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterStartedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: beforeFinishedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterFinishedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: canceledBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          example: "2"
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          example: "10"
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Delete tasks
      tags:
      - Tasks
      x-openapi-router-controller: openapi_server.controllers.tasks_controller
    get:
      description: Get all tasks
      operationId: get_all_tasks
      parameters:
      - explode: true
        in: query
        name: uids
        required: false
        schema:
          example: "3"
          type: string
        style: form
      - explode: true
        in: query
        name: indexUids
        required: false
        schema:
          example: books
          type: string
        style: form
      - explode: true
        in: query
        name: types
        required: false
        schema:
          example: documentAdditionOrUpdate
          type: string
        style: form
      - explode: true
        in: query
        name: statuses
        required: false
        schema:
          example: failed
          type: string
        style: form
      - explode: true
        in: query
        name: beforeEnqueuedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterEnqueuedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: beforeStartedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterStartedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: beforeFinishedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterFinishedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: canceledBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          example: "2"
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          example: "10"
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Get all tasks
      tags:
      - Tasks
      x-openapi-router-controller: openapi_server.controllers.tasks_controller
  /tasks/0:
    get:
      description: Get one task
      operationId: get_one_task
      responses:
        "200":
          description: ""
      summary: Get one task
      tags:
      - Tasks
      x-openapi-router-controller: openapi_server.controllers.tasks_controller
  /tasks/cancel:
    post:
      description: Cancel tasks
      operationId: cancel_tasks
      parameters:
      - explode: true
        in: query
        name: uids
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: indexUids
        required: false
        schema:
          example: books
          type: string
        style: form
      - explode: true
        in: query
        name: types
        required: false
        schema:
          example: documentAdditionOrUpdate
          type: string
        style: form
      - explode: true
        in: query
        name: statuses
        required: false
        schema:
          example: failed
          type: string
        style: form
      - explode: true
        in: query
        name: beforeEnqueuedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterEnqueuedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: beforeStartedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterStartedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: beforeFinishedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: afterFinishedAt
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: canceledBy
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          example: "2"
          type: string
        style: form
      - explode: true
        in: query
        name: from
        required: false
        schema:
          example: "10"
          type: string
        style: form
      responses:
        "200":
          description: ""
      summary: Cancel tasks
      tags:
      - Tasks
      x-openapi-router-controller: openapi_server.controllers.tasks_controller
  /version:
    get:
      description: Version
      operationId: version
      responses:
        "200":
          description: ""
      summary: Version
      tags:
      - Stats
      x-openapi-router-controller: openapi_server.controllers.stats_controller
components:
  schemas:
    searchInIndex1_request:
      properties:
        attributesToHighlight:
          example:
          - title
          items:
            example: title
            type: string
          title: attributesToHighlight
          type: array
        q:
          example: ""
          title: q
          type: string
      title: searchInIndex1_request
      type: object
    searchOneOrMoreIndexes_request:
      properties:
        queries:
          example:
          - indexUid: books
            q: Pride and Prejudice
          - attributesToHighlight:
            - title
            indexUid: books
            q: Alice In Wonderland
          items:
            $ref: '#/components/schemas/searchOneOrMoreIndexes_request_queries_inner'
          title: queries
          type: array
      title: searchOneOrMoreIndexes_request
      type: object
    updateSettings_request:
      properties:
        displayedAttributes:
          example:
          - title
          - author
          - genre
          - price
          items:
            example: title
            type: string
          title: displayedAttributes
          type: array
        filterableAttributes:
          example:
          - genre
          - price
          items:
            example: genre
            type: string
          title: filterableAttributes
          type: array
        searchableAttributes:
          example:
          - title
          - author
          items:
            example: title
            type: string
          title: searchableAttributes
          type: array
        sortableAttributes:
          example:
          - price
          items:
            example: price
            type: string
          title: sortableAttributes
          type: array
        stopWords:
          example:
          - of
          - the
          items:
            example: of
            type: string
          title: stopWords
          type: array
      title: updateSettings_request
      type: object
    addOrUpdateDocuments_request_inner:
      properties:
        author:
          example: J. Austen
          title: author
          type: string
        date:
          example: "1813"
          title: date
          type: string
        id:
          example: 2
          title: id
          type: number
      title: addOrUpdateDocuments_request_inner
      type: object
    updateFaceting_request:
      properties:
        maxValuesPerFacet:
          example: 3000
          title: maxValuesPerFacet
          type: number
      title: updateFaceting_request
      type: object
    updateSynonyms_request:
      properties:
        harry potter:
          example:
          - hp
          items:
            example: hp
            type: string
          title: harry potter
          type: array
        hp:
          example:
          - harry potter
          items:
            example: harry potter
            type: string
          title: hp
          type: array
      title: updateSynonyms_request
      type: object
    updateIndex_request:
      properties:
        primaryKey:
          example: title
          title: primaryKey
          type: string
      title: updateIndex_request
      type: object
    updateAKey_request:
      properties:
        description:
          example: "Key to add and delete documents, but also to create indexes, in\
            \ `book` index."
          title: description
          type: string
      title: updateAKey_request
      type: object
    createAKey_request:
      properties:
        actions:
          example:
          - documents.add
          - documents.delete
          items:
            example: documents.add
            type: string
          title: actions
          type: array
        description:
          example: "Key to add and delete documents, in `books` index."
          title: description
          type: string
        expiresAt:
          nullable: true
          title: expiresAt
          example: null
        indexes:
          example:
          - books
          items:
            example: books
            type: string
          title: indexes
          type: array
        name:
          example: docs-key
          title: name
          type: string
      title: createAKey_request
      type: object
    swapIndexes_request_inner:
      properties:
        indexes:
          example:
          - books
          - books_temp
          items:
            example: books
            type: string
          title: indexes
          type: array
      title: swapIndexes_request_inner
      type: object
    searchOneOrMoreIndexes_request_queries_inner:
      properties:
        attributesToHighlight:
          example:
          - title
          items:
            example: title
            type: string
          title: attributesToHighlight
          type: array
        indexUid:
          example: books
          title: indexUid
          type: string
        q:
          example: Pride and Prejudice
          title: q
          type: string
      title: searchOneOrMoreIndexes_request_queries_inner
      type: object
    updateTypoTolerance_request_minWordSizeForTypos:
      properties:
        oneTypo:
          example: 2
          title: oneTypo
          type: number
        twoTypos:
          example: 11
          title: twoTypos
          type: number
      title: updateTypoTolerance_request_minWordSizeForTypos
      type: object
    updatePagination_request:
      properties:
        maxTotalHits:
          example: 2000
          title: maxTotalHits
          type: number
      title: updatePagination_request
      type: object
    updateTypoTolerance_request:
      properties:
        disableOnAttributes:
          example:
          - genre
          items:
            example: genre
            type: string
          title: disableOnAttributes
          type: array
        disableOnWords:
          example:
          - Prince
          items:
            example: Prince
            type: string
          title: disableOnWords
          type: array
        minWordSizeForTypos:
          $ref: '#/components/schemas/updateTypoTolerance_request_minWordSizeForTypos'
      title: updateTypoTolerance_request
      type: object
    addOrReplaceDocuments_request_inner:
      properties:
        author:
          example: Jane Austen
          title: author
          type: string
        genre:
          example: romance
          title: genre
          type: string
        id:
          example: 2
          title: id
          type: number
        price:
          example: 3.5
          title: price
          type: number
        title:
          example: Pride and Prejudice
          title: title
          type: string
      title: addOrReplaceDocuments_request_inner
      type: object
    createIndexWithPrimaryKey_request:
      properties:
        primaryKey:
          example: number
          title: primaryKey
          type: string
        uid:
          example: books
          title: uid
          type: string
      title: createIndexWithPrimaryKey_request
      type: object
