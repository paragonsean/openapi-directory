# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_typo_tolerance_request_min_word_size_for_typos import UpdateTypoToleranceRequestMinWordSizeForTypos
from openapi_server import util


class UpdateTypoToleranceRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_on_attributes: List[str]=None, disable_on_words: List[str]=None, min_word_size_for_typos: UpdateTypoToleranceRequestMinWordSizeForTypos=None):
        """UpdateTypoToleranceRequest - a model defined in OpenAPI

        :param disable_on_attributes: The disable_on_attributes of this UpdateTypoToleranceRequest.
        :param disable_on_words: The disable_on_words of this UpdateTypoToleranceRequest.
        :param min_word_size_for_typos: The min_word_size_for_typos of this UpdateTypoToleranceRequest.
        """
        self.openapi_types = {
            'disable_on_attributes': List[str],
            'disable_on_words': List[str],
            'min_word_size_for_typos': UpdateTypoToleranceRequestMinWordSizeForTypos
        }

        self.attribute_map = {
            'disable_on_attributes': 'disableOnAttributes',
            'disable_on_words': 'disableOnWords',
            'min_word_size_for_typos': 'minWordSizeForTypos'
        }

        self._disable_on_attributes = disable_on_attributes
        self._disable_on_words = disable_on_words
        self._min_word_size_for_typos = min_word_size_for_typos

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateTypoToleranceRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateTypoTolerance_request of this UpdateTypoToleranceRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_on_attributes(self):
        """Gets the disable_on_attributes of this UpdateTypoToleranceRequest.


        :return: The disable_on_attributes of this UpdateTypoToleranceRequest.
        :rtype: List[str]
        """
        return self._disable_on_attributes

    @disable_on_attributes.setter
    def disable_on_attributes(self, disable_on_attributes):
        """Sets the disable_on_attributes of this UpdateTypoToleranceRequest.


        :param disable_on_attributes: The disable_on_attributes of this UpdateTypoToleranceRequest.
        :type disable_on_attributes: List[str]
        """

        self._disable_on_attributes = disable_on_attributes

    @property
    def disable_on_words(self):
        """Gets the disable_on_words of this UpdateTypoToleranceRequest.


        :return: The disable_on_words of this UpdateTypoToleranceRequest.
        :rtype: List[str]
        """
        return self._disable_on_words

    @disable_on_words.setter
    def disable_on_words(self, disable_on_words):
        """Sets the disable_on_words of this UpdateTypoToleranceRequest.


        :param disable_on_words: The disable_on_words of this UpdateTypoToleranceRequest.
        :type disable_on_words: List[str]
        """

        self._disable_on_words = disable_on_words

    @property
    def min_word_size_for_typos(self):
        """Gets the min_word_size_for_typos of this UpdateTypoToleranceRequest.


        :return: The min_word_size_for_typos of this UpdateTypoToleranceRequest.
        :rtype: UpdateTypoToleranceRequestMinWordSizeForTypos
        """
        return self._min_word_size_for_typos

    @min_word_size_for_typos.setter
    def min_word_size_for_typos(self, min_word_size_for_typos):
        """Sets the min_word_size_for_typos of this UpdateTypoToleranceRequest.


        :param min_word_size_for_typos: The min_word_size_for_typos of this UpdateTypoToleranceRequest.
        :type min_word_size_for_typos: UpdateTypoToleranceRequestMinWordSizeForTypos
        """

        self._min_word_size_for_typos = min_word_size_for_typos
