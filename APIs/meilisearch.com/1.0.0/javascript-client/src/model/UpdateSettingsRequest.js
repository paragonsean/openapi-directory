/**
 * Meilisearch v1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSettingsRequest model module.
 * @module model/UpdateSettingsRequest
 * @version 1.0.0
 */
class UpdateSettingsRequest {
    /**
     * Constructs a new <code>UpdateSettingsRequest</code>.
     * @alias module:model/UpdateSettingsRequest
     */
    constructor() { 
        
        UpdateSettingsRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSettingsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSettingsRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSettingsRequest} The populated <code>UpdateSettingsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSettingsRequest();

            if (data.hasOwnProperty('displayedAttributes')) {
                obj['displayedAttributes'] = ApiClient.convertToType(data['displayedAttributes'], ['String']);
            }
            if (data.hasOwnProperty('filterableAttributes')) {
                obj['filterableAttributes'] = ApiClient.convertToType(data['filterableAttributes'], ['String']);
            }
            if (data.hasOwnProperty('searchableAttributes')) {
                obj['searchableAttributes'] = ApiClient.convertToType(data['searchableAttributes'], ['String']);
            }
            if (data.hasOwnProperty('sortableAttributes')) {
                obj['sortableAttributes'] = ApiClient.convertToType(data['sortableAttributes'], ['String']);
            }
            if (data.hasOwnProperty('stopWords')) {
                obj['stopWords'] = ApiClient.convertToType(data['stopWords'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSettingsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSettingsRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['displayedAttributes'])) {
            throw new Error("Expected the field `displayedAttributes` to be an array in the JSON data but got " + data['displayedAttributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['filterableAttributes'])) {
            throw new Error("Expected the field `filterableAttributes` to be an array in the JSON data but got " + data['filterableAttributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['searchableAttributes'])) {
            throw new Error("Expected the field `searchableAttributes` to be an array in the JSON data but got " + data['searchableAttributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sortableAttributes'])) {
            throw new Error("Expected the field `sortableAttributes` to be an array in the JSON data but got " + data['sortableAttributes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['stopWords'])) {
            throw new Error("Expected the field `stopWords` to be an array in the JSON data but got " + data['stopWords']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} displayedAttributes
 */
UpdateSettingsRequest.prototype['displayedAttributes'] = undefined;

/**
 * @member {Array.<String>} filterableAttributes
 */
UpdateSettingsRequest.prototype['filterableAttributes'] = undefined;

/**
 * @member {Array.<String>} searchableAttributes
 */
UpdateSettingsRequest.prototype['searchableAttributes'] = undefined;

/**
 * @member {Array.<String>} sortableAttributes
 */
UpdateSettingsRequest.prototype['sortableAttributes'] = undefined;

/**
 * @member {Array.<String>} stopWords
 */
UpdateSettingsRequest.prototype['stopWords'] = undefined;






export default UpdateSettingsRequest;

