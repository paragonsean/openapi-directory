/**
 * Meilisearch v1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SearchInIndex1Request from '../model/SearchInIndex1Request';

/**
* Search service.
* @module api/SearchApi
* @version 1.0.0
*/
export default class SearchApi {

    /**
    * Constructs a new SearchApi. 
    * @alias module:api/SearchApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the searchInIndex operation.
     * @callback module:api/SearchApi~searchInIndexCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search in index
     * Search in index
     * @param {Object} opts Optional parameters
     * @param {String} [q] 
     * @param {String} [offset] 
     * @param {String} [limit] 
     * @param {String} [attributesToRetrieve] 
     * @param {String} [attributesToCrop] 
     * @param {String} [attributesToHighlight] 
     * @param {String} [cropLength] 
     * @param {String} [cropMarker] 
     * @param {String} [filter] 
     * @param {String} [showMatchesPosition] 
     * @param {String} [facets] 
     * @param {String} [sort] 
     * @param {String} [highlightPreTag] 
     * @param {String} [highlightPostTag] 
     * @param {String} [matchingStrategy] 
     * @param {String} [page] 
     * @param {String} [hitsPerPage] 
     * @param {module:api/SearchApi~searchInIndexCallback} callback The callback function, accepting three arguments: error, data, response
     */
    searchInIndex(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'q': opts['q'],
        'offset': opts['offset'],
        'limit': opts['limit'],
        'attributesToRetrieve': opts['attributesToRetrieve'],
        'attributesToCrop': opts['attributesToCrop'],
        'attributesToHighlight': opts['attributesToHighlight'],
        'cropLength': opts['cropLength'],
        'cropMarker': opts['cropMarker'],
        'filter': opts['filter'],
        'showMatchesPosition': opts['showMatchesPosition'],
        'facets': opts['facets'],
        'sort': opts['sort'],
        'highlightPreTag': opts['highlightPreTag'],
        'highlightPostTag': opts['highlightPostTag'],
        'matchingStrategy': opts['matchingStrategy'],
        'page': opts['page'],
        'hitsPerPage': opts['hitsPerPage']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the searchInIndex1 operation.
     * @callback module:api/SearchApi~searchInIndex1Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search in index
     * Search in index
     * @param {Object} opts Optional parameters
     * @param {module:model/SearchInIndex1Request} [searchInIndex1Request] 
     * @param {module:api/SearchApi~searchInIndex1Callback} callback The callback function, accepting three arguments: error, data, response
     */
    searchInIndex1(opts, callback) {
      opts = opts || {};
      let postBody = opts['searchInIndex1Request'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/search', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
