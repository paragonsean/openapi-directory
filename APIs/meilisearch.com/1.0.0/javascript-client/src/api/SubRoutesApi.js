/**
 * Meilisearch v1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import UpdateFacetingRequest from '../model/UpdateFacetingRequest';
import UpdatePaginationRequest from '../model/UpdatePaginationRequest';
import UpdateSynonymsRequest from '../model/UpdateSynonymsRequest';
import UpdateTypoToleranceRequest from '../model/UpdateTypoToleranceRequest';

/**
* SubRoutes service.
* @module api/SubRoutesApi
* @version 1.0.0
*/
export default class SubRoutesApi {

    /**
    * Constructs a new SubRoutesApi. 
    * @alias module:api/SubRoutesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDisplayedAttributes_0 operation.
     * @callback module:api/SubRoutesApi~getDisplayedAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get displayed attributes
     * Get displayed attributes
     * @param {module:api/SubRoutesApi~getDisplayedAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getDisplayedAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/displayed-attributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDistinctAttribute_0 operation.
     * @callback module:api/SubRoutesApi~getDistinctAttribute_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get distinct attribute
     * Get distinct attribute
     * @param {module:api/SubRoutesApi~getDistinctAttribute_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getDistinctAttribute_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/distinct-attribute', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFaceting_0 operation.
     * @callback module:api/SubRoutesApi~getFaceting_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get faceting
     * Get faceting
     * @param {module:api/SubRoutesApi~getFaceting_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getFaceting_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/faceting', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getFilterableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~getFilterableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get filterable attributes
     * Get filterable attributes
     * @param {module:api/SubRoutesApi~getFilterableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getFilterableAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/filterable-attributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPagination_0 operation.
     * @callback module:api/SubRoutesApi~getPagination_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get pagination
     * Get pagination
     * @param {module:api/SubRoutesApi~getPagination_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getPagination_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/pagination', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRankingRules_0 operation.
     * @callback module:api/SubRoutesApi~getRankingRules_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ranking rules
     * Get ranking rules
     * @param {module:api/SubRoutesApi~getRankingRules_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getRankingRules_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/ranking-rules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSearchableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~getSearchableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get searchable attributes
     * Get searchable attributes
     * @param {module:api/SubRoutesApi~getSearchableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getSearchableAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/searchable-attributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSortableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~getSortableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get sortable attributes
     * Get sortable attributes
     * @param {module:api/SubRoutesApi~getSortableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getSortableAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/sortable-attributes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getStopWords_0 operation.
     * @callback module:api/SubRoutesApi~getStopWords_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get stop-words
     * Get stop-words
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] 
     * @param {module:api/SubRoutesApi~getStopWords_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getStopWords_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/stop-words', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSynonyms_0 operation.
     * @callback module:api/SubRoutesApi~getSynonyms_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get synonyms
     * Get synonyms
     * @param {module:api/SubRoutesApi~getSynonyms_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getSynonyms_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/synonyms', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getTypoTolerance_0 operation.
     * @callback module:api/SubRoutesApi~getTypoTolerance_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get typo-tolerance
     * Get typo-tolerance
     * @param {module:api/SubRoutesApi~getTypoTolerance_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    getTypoTolerance_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/typo-tolerance', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetDisplayedAttributes_0 operation.
     * @callback module:api/SubRoutesApi~resetDisplayedAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset displayed attributes
     * Reset displayed attributes
     * @param {module:api/SubRoutesApi~resetDisplayedAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetDisplayedAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/displayed-attributes', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetDistinctAttribute_0 operation.
     * @callback module:api/SubRoutesApi~resetDistinctAttribute_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset distinct attribute
     * Reset distinct attribute
     * @param {module:api/SubRoutesApi~resetDistinctAttribute_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetDistinctAttribute_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/distinct-attribute', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetFaceting_0 operation.
     * @callback module:api/SubRoutesApi~resetFaceting_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset faceting
     * Reset faceting
     * @param {module:api/SubRoutesApi~resetFaceting_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetFaceting_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/faceting', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetFilterableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~resetFilterableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset filterable attributes
     * Reset filterable attributes
     * @param {module:api/SubRoutesApi~resetFilterableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetFilterableAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/filterable-attributes', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetPagination_0 operation.
     * @callback module:api/SubRoutesApi~resetPagination_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset pagination
     * Reset pagination
     * @param {module:api/SubRoutesApi~resetPagination_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetPagination_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/pagination', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetRankingRules_0 operation.
     * @callback module:api/SubRoutesApi~resetRankingRules_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset ranking rules
     * Reset ranking rules
     * @param {module:api/SubRoutesApi~resetRankingRules_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetRankingRules_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/ranking-rules', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetSearchableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~resetSearchableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset searchable attributes
     * Reset searchable attributes
     * @param {module:api/SubRoutesApi~resetSearchableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetSearchableAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/searchable-attributes', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetSortableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~resetSortableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset sortable attributes
     * Reset sortable attributes
     * @param {module:api/SubRoutesApi~resetSortableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetSortableAttributes_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/sortable-attributes', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetStopWords_0 operation.
     * @callback module:api/SubRoutesApi~resetStopWords_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset stop-words
     * Reset stop-words
     * @param {module:api/SubRoutesApi~resetStopWords_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetStopWords_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/stop-words', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetSynonyms_0 operation.
     * @callback module:api/SubRoutesApi~resetSynonyms_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset synonyms
     * Reset synonyms
     * @param {module:api/SubRoutesApi~resetSynonyms_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetSynonyms_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['text/plain'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/synonyms', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the resetTypoTolerance_0 operation.
     * @callback module:api/SubRoutesApi~resetTypoTolerance_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Reset typo-tolerance
     * Reset typo-tolerance
     * @param {module:api/SubRoutesApi~resetTypoTolerance_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    resetTypoTolerance_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/typo-tolerance', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDisplayedAttributes_0 operation.
     * @callback module:api/SubRoutesApi~updateDisplayedAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update displayed attributes
     * Update displayed attributes
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] 
     * @param {module:api/SubRoutesApi~updateDisplayedAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateDisplayedAttributes_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/displayed-attributes', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateDistinctAttribute_0 operation.
     * @callback module:api/SubRoutesApi~updateDistinctAttribute_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update distinct attribute
     * Update distinct attribute
     * @param {module:api/SubRoutesApi~updateDistinctAttribute_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateDistinctAttribute_0(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/octet-stream'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/distinct-attribute', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateFaceting_0 operation.
     * @callback module:api/SubRoutesApi~updateFaceting_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update faceting
     * Update faceting
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateFacetingRequest} [updateFacetingRequest] 
     * @param {module:api/SubRoutesApi~updateFaceting_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateFaceting_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['updateFacetingRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/faceting', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateFilterableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~updateFilterableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update filterable attributes
     * Update filterable attributes
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] 
     * @param {module:api/SubRoutesApi~updateFilterableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateFilterableAttributes_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/filterable-attributes', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updatePagination_0 operation.
     * @callback module:api/SubRoutesApi~updatePagination_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update pagination
     * Update pagination
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdatePaginationRequest} [updatePaginationRequest] 
     * @param {module:api/SubRoutesApi~updatePagination_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updatePagination_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['updatePaginationRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/pagination', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateRankingRules_0 operation.
     * @callback module:api/SubRoutesApi~updateRankingRules_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update ranking rules
     * Update ranking rules
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] 
     * @param {module:api/SubRoutesApi~updateRankingRules_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateRankingRules_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/ranking-rules', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSearchableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~updateSearchableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update searchable attributes
     * Update searchable attributes
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] 
     * @param {module:api/SubRoutesApi~updateSearchableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateSearchableAttributes_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/searchable-attributes', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSortableAttributes_0 operation.
     * @callback module:api/SubRoutesApi~updateSortableAttributes_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update sortable attributes
     * Update sortable attributes
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] 
     * @param {module:api/SubRoutesApi~updateSortableAttributes_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateSortableAttributes_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/sortable-attributes', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateStopWords_0 operation.
     * @callback module:api/SubRoutesApi~updateStopWords_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update stop-words
     * Update stop-words
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [requestBody] 
     * @param {module:api/SubRoutesApi~updateStopWords_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateStopWords_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['requestBody'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/stop-words', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSynonyms_0 operation.
     * @callback module:api/SubRoutesApi~updateSynonyms_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update synonyms
     * Update synonyms
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateSynonymsRequest} [updateSynonymsRequest] 
     * @param {module:api/SubRoutesApi~updateSynonyms_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateSynonyms_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['updateSynonymsRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/synonyms', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateTypoTolerance_0 operation.
     * @callback module:api/SubRoutesApi~updateTypoTolerance_0Callback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update typo-tolerance
     * Update typo-tolerance
     * @param {Object} opts Optional parameters
     * @param {module:model/UpdateTypoToleranceRequest} [updateTypoToleranceRequest] 
     * @param {module:api/SubRoutesApi~updateTypoTolerance_0Callback} callback The callback function, accepting three arguments: error, data, response
     */
    updateTypoTolerance_0(opts, callback) {
      opts = opts || {};
      let postBody = opts['updateTypoToleranceRequest'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/indexes/books/settings/typo-tolerance', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
