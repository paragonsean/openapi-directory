/**
 * Meilisearch v1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchInIndex1_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchInIndex1_request::OAISearchInIndex1_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchInIndex1_request::OAISearchInIndex1_request() {
    this->initializeModel();
}

OAISearchInIndex1_request::~OAISearchInIndex1_request() {}

void OAISearchInIndex1_request::initializeModel() {

    m_attributes_to_highlight_isSet = false;
    m_attributes_to_highlight_isValid = false;

    m_q_isSet = false;
    m_q_isValid = false;
}

void OAISearchInIndex1_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchInIndex1_request::fromJsonObject(QJsonObject json) {

    m_attributes_to_highlight_isValid = ::OpenAPI::fromJsonValue(m_attributes_to_highlight, json[QString("attributesToHighlight")]);
    m_attributes_to_highlight_isSet = !json[QString("attributesToHighlight")].isNull() && m_attributes_to_highlight_isValid;

    m_q_isValid = ::OpenAPI::fromJsonValue(m_q, json[QString("q")]);
    m_q_isSet = !json[QString("q")].isNull() && m_q_isValid;
}

QString OAISearchInIndex1_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchInIndex1_request::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes_to_highlight.size() > 0) {
        obj.insert(QString("attributesToHighlight"), ::OpenAPI::toJsonValue(m_attributes_to_highlight));
    }
    if (m_q_isSet) {
        obj.insert(QString("q"), ::OpenAPI::toJsonValue(m_q));
    }
    return obj;
}

QList<QString> OAISearchInIndex1_request::getAttributesToHighlight() const {
    return m_attributes_to_highlight;
}
void OAISearchInIndex1_request::setAttributesToHighlight(const QList<QString> &attributes_to_highlight) {
    m_attributes_to_highlight = attributes_to_highlight;
    m_attributes_to_highlight_isSet = true;
}

bool OAISearchInIndex1_request::is_attributes_to_highlight_Set() const{
    return m_attributes_to_highlight_isSet;
}

bool OAISearchInIndex1_request::is_attributes_to_highlight_Valid() const{
    return m_attributes_to_highlight_isValid;
}

QString OAISearchInIndex1_request::getQ() const {
    return m_q;
}
void OAISearchInIndex1_request::setQ(const QString &q) {
    m_q = q;
    m_q_isSet = true;
}

bool OAISearchInIndex1_request::is_q_Set() const{
    return m_q_isSet;
}

bool OAISearchInIndex1_request::is_q_Valid() const{
    return m_q_isValid;
}

bool OAISearchInIndex1_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes_to_highlight.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_q_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchInIndex1_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
