/**
 * Meilisearch v1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISearchOneOrMoreIndexes_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISearchOneOrMoreIndexes_request::OAISearchOneOrMoreIndexes_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISearchOneOrMoreIndexes_request::OAISearchOneOrMoreIndexes_request() {
    this->initializeModel();
}

OAISearchOneOrMoreIndexes_request::~OAISearchOneOrMoreIndexes_request() {}

void OAISearchOneOrMoreIndexes_request::initializeModel() {

    m_queries_isSet = false;
    m_queries_isValid = false;
}

void OAISearchOneOrMoreIndexes_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISearchOneOrMoreIndexes_request::fromJsonObject(QJsonObject json) {

    m_queries_isValid = ::OpenAPI::fromJsonValue(m_queries, json[QString("queries")]);
    m_queries_isSet = !json[QString("queries")].isNull() && m_queries_isValid;
}

QString OAISearchOneOrMoreIndexes_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISearchOneOrMoreIndexes_request::asJsonObject() const {
    QJsonObject obj;
    if (m_queries.size() > 0) {
        obj.insert(QString("queries"), ::OpenAPI::toJsonValue(m_queries));
    }
    return obj;
}

QList<OAISearchOneOrMoreIndexes_request_queries_inner> OAISearchOneOrMoreIndexes_request::getQueries() const {
    return m_queries;
}
void OAISearchOneOrMoreIndexes_request::setQueries(const QList<OAISearchOneOrMoreIndexes_request_queries_inner> &queries) {
    m_queries = queries;
    m_queries_isSet = true;
}

bool OAISearchOneOrMoreIndexes_request::is_queries_Set() const{
    return m_queries_isSet;
}

bool OAISearchOneOrMoreIndexes_request::is_queries_Valid() const{
    return m_queries_isValid;
}

bool OAISearchOneOrMoreIndexes_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_queries.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISearchOneOrMoreIndexes_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
