/**
 * Meilisearch v1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSynonyms_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSynonyms_request::OAIUpdateSynonyms_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSynonyms_request::OAIUpdateSynonyms_request() {
    this->initializeModel();
}

OAIUpdateSynonyms_request::~OAIUpdateSynonyms_request() {}

void OAIUpdateSynonyms_request::initializeModel() {

    m_harry_potter_isSet = false;
    m_harry_potter_isValid = false;

    m_hp_isSet = false;
    m_hp_isValid = false;
}

void OAIUpdateSynonyms_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSynonyms_request::fromJsonObject(QJsonObject json) {

    m_harry_potter_isValid = ::OpenAPI::fromJsonValue(m_harry_potter, json[QString("harry potter")]);
    m_harry_potter_isSet = !json[QString("harry potter")].isNull() && m_harry_potter_isValid;

    m_hp_isValid = ::OpenAPI::fromJsonValue(m_hp, json[QString("hp")]);
    m_hp_isSet = !json[QString("hp")].isNull() && m_hp_isValid;
}

QString OAIUpdateSynonyms_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSynonyms_request::asJsonObject() const {
    QJsonObject obj;
    if (m_harry_potter.size() > 0) {
        obj.insert(QString("harry potter"), ::OpenAPI::toJsonValue(m_harry_potter));
    }
    if (m_hp.size() > 0) {
        obj.insert(QString("hp"), ::OpenAPI::toJsonValue(m_hp));
    }
    return obj;
}

QList<QString> OAIUpdateSynonyms_request::getHarryPotter() const {
    return m_harry_potter;
}
void OAIUpdateSynonyms_request::setHarryPotter(const QList<QString> &harry_potter) {
    m_harry_potter = harry_potter;
    m_harry_potter_isSet = true;
}

bool OAIUpdateSynonyms_request::is_harry_potter_Set() const{
    return m_harry_potter_isSet;
}

bool OAIUpdateSynonyms_request::is_harry_potter_Valid() const{
    return m_harry_potter_isValid;
}

QList<QString> OAIUpdateSynonyms_request::getHp() const {
    return m_hp;
}
void OAIUpdateSynonyms_request::setHp(const QList<QString> &hp) {
    m_hp = hp;
    m_hp_isSet = true;
}

bool OAIUpdateSynonyms_request::is_hp_Set() const{
    return m_hp_isSet;
}

bool OAIUpdateSynonyms_request::is_hp_Valid() const{
    return m_hp_isValid;
}

bool OAIUpdateSynonyms_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_harry_potter.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_hp.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSynonyms_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
