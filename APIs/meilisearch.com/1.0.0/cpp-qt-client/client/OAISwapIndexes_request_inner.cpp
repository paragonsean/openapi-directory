/**
 * Meilisearch v1.1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISwapIndexes_request_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISwapIndexes_request_inner::OAISwapIndexes_request_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISwapIndexes_request_inner::OAISwapIndexes_request_inner() {
    this->initializeModel();
}

OAISwapIndexes_request_inner::~OAISwapIndexes_request_inner() {}

void OAISwapIndexes_request_inner::initializeModel() {

    m_indexes_isSet = false;
    m_indexes_isValid = false;
}

void OAISwapIndexes_request_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISwapIndexes_request_inner::fromJsonObject(QJsonObject json) {

    m_indexes_isValid = ::OpenAPI::fromJsonValue(m_indexes, json[QString("indexes")]);
    m_indexes_isSet = !json[QString("indexes")].isNull() && m_indexes_isValid;
}

QString OAISwapIndexes_request_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISwapIndexes_request_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_indexes.size() > 0) {
        obj.insert(QString("indexes"), ::OpenAPI::toJsonValue(m_indexes));
    }
    return obj;
}

QList<QString> OAISwapIndexes_request_inner::getIndexes() const {
    return m_indexes;
}
void OAISwapIndexes_request_inner::setIndexes(const QList<QString> &indexes) {
    m_indexes = indexes;
    m_indexes_isSet = true;
}

bool OAISwapIndexes_request_inner::is_indexes_Set() const{
    return m_indexes_isSet;
}

bool OAISwapIndexes_request_inner::is_indexes_Valid() const{
    return m_indexes_isValid;
}

bool OAISwapIndexes_request_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_indexes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISwapIndexes_request_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
