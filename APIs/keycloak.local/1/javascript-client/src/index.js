/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AccessToken from './model/AccessToken';
import AccessTokenAccess from './model/AccessTokenAccess';
import AccessTokenAuthorization from './model/AccessTokenAuthorization';
import AccessTokenCertConf from './model/AccessTokenCertConf';
import AddressClaimSet from './model/AddressClaimSet';
import AdminEventRepresentation from './model/AdminEventRepresentation';
import AuthDetailsRepresentation from './model/AuthDetailsRepresentation';
import AuthenticationExecutionExportRepresentation from './model/AuthenticationExecutionExportRepresentation';
import AuthenticationExecutionInfoRepresentation from './model/AuthenticationExecutionInfoRepresentation';
import AuthenticationExecutionRepresentation from './model/AuthenticationExecutionRepresentation';
import AuthenticationFlowRepresentation from './model/AuthenticationFlowRepresentation';
import AuthenticatorConfigInfoRepresentation from './model/AuthenticatorConfigInfoRepresentation';
import AuthenticatorConfigRepresentation from './model/AuthenticatorConfigRepresentation';
import CertificateRepresentation from './model/CertificateRepresentation';
import ClientInitialAccessCreatePresentation from './model/ClientInitialAccessCreatePresentation';
import ClientInitialAccessPresentation from './model/ClientInitialAccessPresentation';
import ClientMappingsRepresentation from './model/ClientMappingsRepresentation';
import ClientRepresentation from './model/ClientRepresentation';
import ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation from './model/ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation';
import ClientScopeRepresentation from './model/ClientScopeRepresentation';
import ComponentExportRepresentation from './model/ComponentExportRepresentation';
import ComponentRepresentation from './model/ComponentRepresentation';
import ComponentTypeRepresentation from './model/ComponentTypeRepresentation';
import ConfigPropertyRepresentation from './model/ConfigPropertyRepresentation';
import CredentialRepresentation from './model/CredentialRepresentation';
import EventRepresentation from './model/EventRepresentation';
import FederatedIdentityRepresentation from './model/FederatedIdentityRepresentation';
import GlobalRequestResult from './model/GlobalRequestResult';
import GroupRepresentation from './model/GroupRepresentation';
import IdentityProviderMapperRepresentation from './model/IdentityProviderMapperRepresentation';
import IdentityProviderRepresentation from './model/IdentityProviderRepresentation';
import KeyStoreConfig from './model/KeyStoreConfig';
import KeysMetadataRepresentation from './model/KeysMetadataRepresentation';
import KeysMetadataRepresentationKeyMetadataRepresentation from './model/KeysMetadataRepresentationKeyMetadataRepresentation';
import ManagementPermissionReference from './model/ManagementPermissionReference';
import MappingsRepresentation from './model/MappingsRepresentation';
import MemoryInfoRepresentation from './model/MemoryInfoRepresentation';
import MultivaluedHashMap from './model/MultivaluedHashMap';
import PartialImportRepresentation from './model/PartialImportRepresentation';
import PasswordPolicyTypeRepresentation from './model/PasswordPolicyTypeRepresentation';
import Permission from './model/Permission';
import PolicyRepresentation from './model/PolicyRepresentation';
import ProfileInfoRepresentation from './model/ProfileInfoRepresentation';
import ProtocolMapperRepresentation from './model/ProtocolMapperRepresentation';
import ProviderRepresentation from './model/ProviderRepresentation';
import RealmEventsConfigRepresentation from './model/RealmEventsConfigRepresentation';
import RealmRepresentation from './model/RealmRepresentation';
import RequiredActionProviderRepresentation from './model/RequiredActionProviderRepresentation';
import ResourceRepresentation from './model/ResourceRepresentation';
import ResourceServerRepresentation from './model/ResourceServerRepresentation';
import RoleRepresentation from './model/RoleRepresentation';
import RoleRepresentationComposites from './model/RoleRepresentationComposites';
import RolesRepresentation from './model/RolesRepresentation';
import ScopeMappingRepresentation from './model/ScopeMappingRepresentation';
import ScopeRepresentation from './model/ScopeRepresentation';
import ServerInfoRepresentation from './model/ServerInfoRepresentation';
import SpiInfoRepresentation from './model/SpiInfoRepresentation';
import SynchronizationResult from './model/SynchronizationResult';
import SystemInfoRepresentation from './model/SystemInfoRepresentation';
import TestLdapConnectionRepresentation from './model/TestLdapConnectionRepresentation';
import UserConsentRepresentation from './model/UserConsentRepresentation';
import UserFederationMapperRepresentation from './model/UserFederationMapperRepresentation';
import UserFederationProviderRepresentation from './model/UserFederationProviderRepresentation';
import UserRepresentation from './model/UserRepresentation';
import UserSessionRepresentation from './model/UserSessionRepresentation';
import AttackDetectionApi from './api/AttackDetectionApi';
import AuthenticationManagementApi from './api/AuthenticationManagementApi';
import ClientAttributeCertificateApi from './api/ClientAttributeCertificateApi';
import ClientInitialAccessApi from './api/ClientInitialAccessApi';
import ClientRegistrationPolicyApi from './api/ClientRegistrationPolicyApi';
import ClientRoleMappingsApi from './api/ClientRoleMappingsApi';
import ClientScopesApi from './api/ClientScopesApi';
import ClientsApi from './api/ClientsApi';
import ComponentApi from './api/ComponentApi';
import GroupsApi from './api/GroupsApi';
import IdentityProvidersApi from './api/IdentityProvidersApi';
import KeyApi from './api/KeyApi';
import ProtocolMappersApi from './api/ProtocolMappersApi';
import RealmsAdminApi from './api/RealmsAdminApi';
import RoleMapperApi from './api/RoleMapperApi';
import RolesApi from './api/RolesApi';
import RolesByIDApi from './api/RolesByIDApi';
import RootApi from './api/RootApi';
import ScopeMappingsApi from './api/ScopeMappingsApi';
import UserStorageProviderApi from './api/UserStorageProviderApi';
import UsersApi from './api/UsersApi';


/**
* This is a REST API reference for the Keycloak Admin.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var KeycloakAdminRestApi = require('index'); // See note below*.
* var xxxSvc = new KeycloakAdminRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new KeycloakAdminRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new KeycloakAdminRestApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new KeycloakAdminRestApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AccessToken model constructor.
     * @property {module:model/AccessToken}
     */
    AccessToken,

    /**
     * The AccessTokenAccess model constructor.
     * @property {module:model/AccessTokenAccess}
     */
    AccessTokenAccess,

    /**
     * The AccessTokenAuthorization model constructor.
     * @property {module:model/AccessTokenAuthorization}
     */
    AccessTokenAuthorization,

    /**
     * The AccessTokenCertConf model constructor.
     * @property {module:model/AccessTokenCertConf}
     */
    AccessTokenCertConf,

    /**
     * The AddressClaimSet model constructor.
     * @property {module:model/AddressClaimSet}
     */
    AddressClaimSet,

    /**
     * The AdminEventRepresentation model constructor.
     * @property {module:model/AdminEventRepresentation}
     */
    AdminEventRepresentation,

    /**
     * The AuthDetailsRepresentation model constructor.
     * @property {module:model/AuthDetailsRepresentation}
     */
    AuthDetailsRepresentation,

    /**
     * The AuthenticationExecutionExportRepresentation model constructor.
     * @property {module:model/AuthenticationExecutionExportRepresentation}
     */
    AuthenticationExecutionExportRepresentation,

    /**
     * The AuthenticationExecutionInfoRepresentation model constructor.
     * @property {module:model/AuthenticationExecutionInfoRepresentation}
     */
    AuthenticationExecutionInfoRepresentation,

    /**
     * The AuthenticationExecutionRepresentation model constructor.
     * @property {module:model/AuthenticationExecutionRepresentation}
     */
    AuthenticationExecutionRepresentation,

    /**
     * The AuthenticationFlowRepresentation model constructor.
     * @property {module:model/AuthenticationFlowRepresentation}
     */
    AuthenticationFlowRepresentation,

    /**
     * The AuthenticatorConfigInfoRepresentation model constructor.
     * @property {module:model/AuthenticatorConfigInfoRepresentation}
     */
    AuthenticatorConfigInfoRepresentation,

    /**
     * The AuthenticatorConfigRepresentation model constructor.
     * @property {module:model/AuthenticatorConfigRepresentation}
     */
    AuthenticatorConfigRepresentation,

    /**
     * The CertificateRepresentation model constructor.
     * @property {module:model/CertificateRepresentation}
     */
    CertificateRepresentation,

    /**
     * The ClientInitialAccessCreatePresentation model constructor.
     * @property {module:model/ClientInitialAccessCreatePresentation}
     */
    ClientInitialAccessCreatePresentation,

    /**
     * The ClientInitialAccessPresentation model constructor.
     * @property {module:model/ClientInitialAccessPresentation}
     */
    ClientInitialAccessPresentation,

    /**
     * The ClientMappingsRepresentation model constructor.
     * @property {module:model/ClientMappingsRepresentation}
     */
    ClientMappingsRepresentation,

    /**
     * The ClientRepresentation model constructor.
     * @property {module:model/ClientRepresentation}
     */
    ClientRepresentation,

    /**
     * The ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation model constructor.
     * @property {module:model/ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation}
     */
    ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation,

    /**
     * The ClientScopeRepresentation model constructor.
     * @property {module:model/ClientScopeRepresentation}
     */
    ClientScopeRepresentation,

    /**
     * The ComponentExportRepresentation model constructor.
     * @property {module:model/ComponentExportRepresentation}
     */
    ComponentExportRepresentation,

    /**
     * The ComponentRepresentation model constructor.
     * @property {module:model/ComponentRepresentation}
     */
    ComponentRepresentation,

    /**
     * The ComponentTypeRepresentation model constructor.
     * @property {module:model/ComponentTypeRepresentation}
     */
    ComponentTypeRepresentation,

    /**
     * The ConfigPropertyRepresentation model constructor.
     * @property {module:model/ConfigPropertyRepresentation}
     */
    ConfigPropertyRepresentation,

    /**
     * The CredentialRepresentation model constructor.
     * @property {module:model/CredentialRepresentation}
     */
    CredentialRepresentation,

    /**
     * The EventRepresentation model constructor.
     * @property {module:model/EventRepresentation}
     */
    EventRepresentation,

    /**
     * The FederatedIdentityRepresentation model constructor.
     * @property {module:model/FederatedIdentityRepresentation}
     */
    FederatedIdentityRepresentation,

    /**
     * The GlobalRequestResult model constructor.
     * @property {module:model/GlobalRequestResult}
     */
    GlobalRequestResult,

    /**
     * The GroupRepresentation model constructor.
     * @property {module:model/GroupRepresentation}
     */
    GroupRepresentation,

    /**
     * The IdentityProviderMapperRepresentation model constructor.
     * @property {module:model/IdentityProviderMapperRepresentation}
     */
    IdentityProviderMapperRepresentation,

    /**
     * The IdentityProviderRepresentation model constructor.
     * @property {module:model/IdentityProviderRepresentation}
     */
    IdentityProviderRepresentation,

    /**
     * The KeyStoreConfig model constructor.
     * @property {module:model/KeyStoreConfig}
     */
    KeyStoreConfig,

    /**
     * The KeysMetadataRepresentation model constructor.
     * @property {module:model/KeysMetadataRepresentation}
     */
    KeysMetadataRepresentation,

    /**
     * The KeysMetadataRepresentationKeyMetadataRepresentation model constructor.
     * @property {module:model/KeysMetadataRepresentationKeyMetadataRepresentation}
     */
    KeysMetadataRepresentationKeyMetadataRepresentation,

    /**
     * The ManagementPermissionReference model constructor.
     * @property {module:model/ManagementPermissionReference}
     */
    ManagementPermissionReference,

    /**
     * The MappingsRepresentation model constructor.
     * @property {module:model/MappingsRepresentation}
     */
    MappingsRepresentation,

    /**
     * The MemoryInfoRepresentation model constructor.
     * @property {module:model/MemoryInfoRepresentation}
     */
    MemoryInfoRepresentation,

    /**
     * The MultivaluedHashMap model constructor.
     * @property {module:model/MultivaluedHashMap}
     */
    MultivaluedHashMap,

    /**
     * The PartialImportRepresentation model constructor.
     * @property {module:model/PartialImportRepresentation}
     */
    PartialImportRepresentation,

    /**
     * The PasswordPolicyTypeRepresentation model constructor.
     * @property {module:model/PasswordPolicyTypeRepresentation}
     */
    PasswordPolicyTypeRepresentation,

    /**
     * The Permission model constructor.
     * @property {module:model/Permission}
     */
    Permission,

    /**
     * The PolicyRepresentation model constructor.
     * @property {module:model/PolicyRepresentation}
     */
    PolicyRepresentation,

    /**
     * The ProfileInfoRepresentation model constructor.
     * @property {module:model/ProfileInfoRepresentation}
     */
    ProfileInfoRepresentation,

    /**
     * The ProtocolMapperRepresentation model constructor.
     * @property {module:model/ProtocolMapperRepresentation}
     */
    ProtocolMapperRepresentation,

    /**
     * The ProviderRepresentation model constructor.
     * @property {module:model/ProviderRepresentation}
     */
    ProviderRepresentation,

    /**
     * The RealmEventsConfigRepresentation model constructor.
     * @property {module:model/RealmEventsConfigRepresentation}
     */
    RealmEventsConfigRepresentation,

    /**
     * The RealmRepresentation model constructor.
     * @property {module:model/RealmRepresentation}
     */
    RealmRepresentation,

    /**
     * The RequiredActionProviderRepresentation model constructor.
     * @property {module:model/RequiredActionProviderRepresentation}
     */
    RequiredActionProviderRepresentation,

    /**
     * The ResourceRepresentation model constructor.
     * @property {module:model/ResourceRepresentation}
     */
    ResourceRepresentation,

    /**
     * The ResourceServerRepresentation model constructor.
     * @property {module:model/ResourceServerRepresentation}
     */
    ResourceServerRepresentation,

    /**
     * The RoleRepresentation model constructor.
     * @property {module:model/RoleRepresentation}
     */
    RoleRepresentation,

    /**
     * The RoleRepresentationComposites model constructor.
     * @property {module:model/RoleRepresentationComposites}
     */
    RoleRepresentationComposites,

    /**
     * The RolesRepresentation model constructor.
     * @property {module:model/RolesRepresentation}
     */
    RolesRepresentation,

    /**
     * The ScopeMappingRepresentation model constructor.
     * @property {module:model/ScopeMappingRepresentation}
     */
    ScopeMappingRepresentation,

    /**
     * The ScopeRepresentation model constructor.
     * @property {module:model/ScopeRepresentation}
     */
    ScopeRepresentation,

    /**
     * The ServerInfoRepresentation model constructor.
     * @property {module:model/ServerInfoRepresentation}
     */
    ServerInfoRepresentation,

    /**
     * The SpiInfoRepresentation model constructor.
     * @property {module:model/SpiInfoRepresentation}
     */
    SpiInfoRepresentation,

    /**
     * The SynchronizationResult model constructor.
     * @property {module:model/SynchronizationResult}
     */
    SynchronizationResult,

    /**
     * The SystemInfoRepresentation model constructor.
     * @property {module:model/SystemInfoRepresentation}
     */
    SystemInfoRepresentation,

    /**
     * The TestLdapConnectionRepresentation model constructor.
     * @property {module:model/TestLdapConnectionRepresentation}
     */
    TestLdapConnectionRepresentation,

    /**
     * The UserConsentRepresentation model constructor.
     * @property {module:model/UserConsentRepresentation}
     */
    UserConsentRepresentation,

    /**
     * The UserFederationMapperRepresentation model constructor.
     * @property {module:model/UserFederationMapperRepresentation}
     */
    UserFederationMapperRepresentation,

    /**
     * The UserFederationProviderRepresentation model constructor.
     * @property {module:model/UserFederationProviderRepresentation}
     */
    UserFederationProviderRepresentation,

    /**
     * The UserRepresentation model constructor.
     * @property {module:model/UserRepresentation}
     */
    UserRepresentation,

    /**
     * The UserSessionRepresentation model constructor.
     * @property {module:model/UserSessionRepresentation}
     */
    UserSessionRepresentation,

    /**
    * The AttackDetectionApi service constructor.
    * @property {module:api/AttackDetectionApi}
    */
    AttackDetectionApi,

    /**
    * The AuthenticationManagementApi service constructor.
    * @property {module:api/AuthenticationManagementApi}
    */
    AuthenticationManagementApi,

    /**
    * The ClientAttributeCertificateApi service constructor.
    * @property {module:api/ClientAttributeCertificateApi}
    */
    ClientAttributeCertificateApi,

    /**
    * The ClientInitialAccessApi service constructor.
    * @property {module:api/ClientInitialAccessApi}
    */
    ClientInitialAccessApi,

    /**
    * The ClientRegistrationPolicyApi service constructor.
    * @property {module:api/ClientRegistrationPolicyApi}
    */
    ClientRegistrationPolicyApi,

    /**
    * The ClientRoleMappingsApi service constructor.
    * @property {module:api/ClientRoleMappingsApi}
    */
    ClientRoleMappingsApi,

    /**
    * The ClientScopesApi service constructor.
    * @property {module:api/ClientScopesApi}
    */
    ClientScopesApi,

    /**
    * The ClientsApi service constructor.
    * @property {module:api/ClientsApi}
    */
    ClientsApi,

    /**
    * The ComponentApi service constructor.
    * @property {module:api/ComponentApi}
    */
    ComponentApi,

    /**
    * The GroupsApi service constructor.
    * @property {module:api/GroupsApi}
    */
    GroupsApi,

    /**
    * The IdentityProvidersApi service constructor.
    * @property {module:api/IdentityProvidersApi}
    */
    IdentityProvidersApi,

    /**
    * The KeyApi service constructor.
    * @property {module:api/KeyApi}
    */
    KeyApi,

    /**
    * The ProtocolMappersApi service constructor.
    * @property {module:api/ProtocolMappersApi}
    */
    ProtocolMappersApi,

    /**
    * The RealmsAdminApi service constructor.
    * @property {module:api/RealmsAdminApi}
    */
    RealmsAdminApi,

    /**
    * The RoleMapperApi service constructor.
    * @property {module:api/RoleMapperApi}
    */
    RoleMapperApi,

    /**
    * The RolesApi service constructor.
    * @property {module:api/RolesApi}
    */
    RolesApi,

    /**
    * The RolesByIDApi service constructor.
    * @property {module:api/RolesByIDApi}
    */
    RolesByIDApi,

    /**
    * The RootApi service constructor.
    * @property {module:api/RootApi}
    */
    RootApi,

    /**
    * The ScopeMappingsApi service constructor.
    * @property {module:api/ScopeMappingsApi}
    */
    ScopeMappingsApi,

    /**
    * The UserStorageProviderApi service constructor.
    * @property {module:api/UserStorageProviderApi}
    */
    UserStorageProviderApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
