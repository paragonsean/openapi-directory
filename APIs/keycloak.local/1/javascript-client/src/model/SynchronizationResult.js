/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SynchronizationResult model module.
 * @module model/SynchronizationResult
 * @version 1
 */
class SynchronizationResult {
    /**
     * Constructs a new <code>SynchronizationResult</code>.
     * @alias module:model/SynchronizationResult
     */
    constructor() { 
        
        SynchronizationResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SynchronizationResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SynchronizationResult} obj Optional instance to populate.
     * @return {module:model/SynchronizationResult} The populated <code>SynchronizationResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SynchronizationResult();

            if (data.hasOwnProperty('added')) {
                obj['added'] = ApiClient.convertToType(data['added'], 'Number');
            }
            if (data.hasOwnProperty('failed')) {
                obj['failed'] = ApiClient.convertToType(data['failed'], 'Number');
            }
            if (data.hasOwnProperty('ignored')) {
                obj['ignored'] = ApiClient.convertToType(data['ignored'], 'Boolean');
            }
            if (data.hasOwnProperty('removed')) {
                obj['removed'] = ApiClient.convertToType(data['removed'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SynchronizationResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SynchronizationResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}



/**
 * @member {Number} added
 */
SynchronizationResult.prototype['added'] = undefined;

/**
 * @member {Number} failed
 */
SynchronizationResult.prototype['failed'] = undefined;

/**
 * @member {Boolean} ignored
 */
SynchronizationResult.prototype['ignored'] = undefined;

/**
 * @member {Number} removed
 */
SynchronizationResult.prototype['removed'] = undefined;

/**
 * @member {String} status
 */
SynchronizationResult.prototype['status'] = undefined;

/**
 * @member {Number} updated
 */
SynchronizationResult.prototype['updated'] = undefined;






export default SynchronizationResult;

