/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MultivaluedHashMap model module.
 * @module model/MultivaluedHashMap
 * @version 1
 */
class MultivaluedHashMap {
    /**
     * Constructs a new <code>MultivaluedHashMap</code>.
     * @alias module:model/MultivaluedHashMap
     */
    constructor() { 
        
        MultivaluedHashMap.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MultivaluedHashMap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MultivaluedHashMap} obj Optional instance to populate.
     * @return {module:model/MultivaluedHashMap} The populated <code>MultivaluedHashMap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MultivaluedHashMap();

            if (data.hasOwnProperty('empty')) {
                obj['empty'] = ApiClient.convertToType(data['empty'], 'Boolean');
            }
            if (data.hasOwnProperty('loadFactor')) {
                obj['loadFactor'] = ApiClient.convertToType(data['loadFactor'], 'Number');
            }
            if (data.hasOwnProperty('threshold')) {
                obj['threshold'] = ApiClient.convertToType(data['threshold'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MultivaluedHashMap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MultivaluedHashMap</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Boolean} empty
 */
MultivaluedHashMap.prototype['empty'] = undefined;

/**
 * @member {Number} loadFactor
 */
MultivaluedHashMap.prototype['loadFactor'] = undefined;

/**
 * @member {Number} threshold
 */
MultivaluedHashMap.prototype['threshold'] = undefined;






export default MultivaluedHashMap;

