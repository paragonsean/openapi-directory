/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ProtocolMapperRepresentation from './ProtocolMapperRepresentation';
import ResourceServerRepresentation from './ResourceServerRepresentation';

/**
 * The ClientRepresentation model module.
 * @module model/ClientRepresentation
 * @version 1
 */
class ClientRepresentation {
    /**
     * Constructs a new <code>ClientRepresentation</code>.
     * @alias module:model/ClientRepresentation
     */
    constructor() { 
        
        ClientRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ClientRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ClientRepresentation} obj Optional instance to populate.
     * @return {module:model/ClientRepresentation} The populated <code>ClientRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ClientRepresentation();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], {'String': Object});
            }
            if (data.hasOwnProperty('adminUrl')) {
                obj['adminUrl'] = ApiClient.convertToType(data['adminUrl'], 'String');
            }
            if (data.hasOwnProperty('alwaysDisplayInConsole')) {
                obj['alwaysDisplayInConsole'] = ApiClient.convertToType(data['alwaysDisplayInConsole'], 'Boolean');
            }
            if (data.hasOwnProperty('attributes')) {
                obj['attributes'] = ApiClient.convertToType(data['attributes'], {'String': Object});
            }
            if (data.hasOwnProperty('authenticationFlowBindingOverrides')) {
                obj['authenticationFlowBindingOverrides'] = ApiClient.convertToType(data['authenticationFlowBindingOverrides'], {'String': Object});
            }
            if (data.hasOwnProperty('authorizationServicesEnabled')) {
                obj['authorizationServicesEnabled'] = ApiClient.convertToType(data['authorizationServicesEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('authorizationSettings')) {
                obj['authorizationSettings'] = ResourceServerRepresentation.constructFromObject(data['authorizationSettings']);
            }
            if (data.hasOwnProperty('baseUrl')) {
                obj['baseUrl'] = ApiClient.convertToType(data['baseUrl'], 'String');
            }
            if (data.hasOwnProperty('bearerOnly')) {
                obj['bearerOnly'] = ApiClient.convertToType(data['bearerOnly'], 'Boolean');
            }
            if (data.hasOwnProperty('clientAuthenticatorType')) {
                obj['clientAuthenticatorType'] = ApiClient.convertToType(data['clientAuthenticatorType'], 'String');
            }
            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('consentRequired')) {
                obj['consentRequired'] = ApiClient.convertToType(data['consentRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('defaultClientScopes')) {
                obj['defaultClientScopes'] = ApiClient.convertToType(data['defaultClientScopes'], ['String']);
            }
            if (data.hasOwnProperty('defaultRoles')) {
                obj['defaultRoles'] = ApiClient.convertToType(data['defaultRoles'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('directAccessGrantsEnabled')) {
                obj['directAccessGrantsEnabled'] = ApiClient.convertToType(data['directAccessGrantsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('frontchannelLogout')) {
                obj['frontchannelLogout'] = ApiClient.convertToType(data['frontchannelLogout'], 'Boolean');
            }
            if (data.hasOwnProperty('fullScopeAllowed')) {
                obj['fullScopeAllowed'] = ApiClient.convertToType(data['fullScopeAllowed'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('implicitFlowEnabled')) {
                obj['implicitFlowEnabled'] = ApiClient.convertToType(data['implicitFlowEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('nodeReRegistrationTimeout')) {
                obj['nodeReRegistrationTimeout'] = ApiClient.convertToType(data['nodeReRegistrationTimeout'], 'Number');
            }
            if (data.hasOwnProperty('notBefore')) {
                obj['notBefore'] = ApiClient.convertToType(data['notBefore'], 'Number');
            }
            if (data.hasOwnProperty('optionalClientScopes')) {
                obj['optionalClientScopes'] = ApiClient.convertToType(data['optionalClientScopes'], ['String']);
            }
            if (data.hasOwnProperty('origin')) {
                obj['origin'] = ApiClient.convertToType(data['origin'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = ApiClient.convertToType(data['protocol'], 'String');
            }
            if (data.hasOwnProperty('protocolMappers')) {
                obj['protocolMappers'] = ApiClient.convertToType(data['protocolMappers'], [ProtocolMapperRepresentation]);
            }
            if (data.hasOwnProperty('publicClient')) {
                obj['publicClient'] = ApiClient.convertToType(data['publicClient'], 'Boolean');
            }
            if (data.hasOwnProperty('redirectUris')) {
                obj['redirectUris'] = ApiClient.convertToType(data['redirectUris'], ['String']);
            }
            if (data.hasOwnProperty('registeredNodes')) {
                obj['registeredNodes'] = ApiClient.convertToType(data['registeredNodes'], {'String': Object});
            }
            if (data.hasOwnProperty('registrationAccessToken')) {
                obj['registrationAccessToken'] = ApiClient.convertToType(data['registrationAccessToken'], 'String');
            }
            if (data.hasOwnProperty('rootUrl')) {
                obj['rootUrl'] = ApiClient.convertToType(data['rootUrl'], 'String');
            }
            if (data.hasOwnProperty('secret')) {
                obj['secret'] = ApiClient.convertToType(data['secret'], 'String');
            }
            if (data.hasOwnProperty('serviceAccountsEnabled')) {
                obj['serviceAccountsEnabled'] = ApiClient.convertToType(data['serviceAccountsEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('standardFlowEnabled')) {
                obj['standardFlowEnabled'] = ApiClient.convertToType(data['standardFlowEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('surrogateAuthRequired')) {
                obj['surrogateAuthRequired'] = ApiClient.convertToType(data['surrogateAuthRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('webOrigins')) {
                obj['webOrigins'] = ApiClient.convertToType(data['webOrigins'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ClientRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ClientRepresentation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['adminUrl'] && !(typeof data['adminUrl'] === 'string' || data['adminUrl'] instanceof String)) {
            throw new Error("Expected the field `adminUrl` to be a primitive type in the JSON string but got " + data['adminUrl']);
        }
        // validate the optional field `authorizationSettings`
        if (data['authorizationSettings']) { // data not null
          ResourceServerRepresentation.validateJSON(data['authorizationSettings']);
        }
        // ensure the json data is a string
        if (data['baseUrl'] && !(typeof data['baseUrl'] === 'string' || data['baseUrl'] instanceof String)) {
            throw new Error("Expected the field `baseUrl` to be a primitive type in the JSON string but got " + data['baseUrl']);
        }
        // ensure the json data is a string
        if (data['clientAuthenticatorType'] && !(typeof data['clientAuthenticatorType'] === 'string' || data['clientAuthenticatorType'] instanceof String)) {
            throw new Error("Expected the field `clientAuthenticatorType` to be a primitive type in the JSON string but got " + data['clientAuthenticatorType']);
        }
        // ensure the json data is a string
        if (data['clientId'] && !(typeof data['clientId'] === 'string' || data['clientId'] instanceof String)) {
            throw new Error("Expected the field `clientId` to be a primitive type in the JSON string but got " + data['clientId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['defaultClientScopes'])) {
            throw new Error("Expected the field `defaultClientScopes` to be an array in the JSON data but got " + data['defaultClientScopes']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['defaultRoles'])) {
            throw new Error("Expected the field `defaultRoles` to be an array in the JSON data but got " + data['defaultRoles']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['optionalClientScopes'])) {
            throw new Error("Expected the field `optionalClientScopes` to be an array in the JSON data but got " + data['optionalClientScopes']);
        }
        // ensure the json data is a string
        if (data['origin'] && !(typeof data['origin'] === 'string' || data['origin'] instanceof String)) {
            throw new Error("Expected the field `origin` to be a primitive type in the JSON string but got " + data['origin']);
        }
        // ensure the json data is a string
        if (data['protocol'] && !(typeof data['protocol'] === 'string' || data['protocol'] instanceof String)) {
            throw new Error("Expected the field `protocol` to be a primitive type in the JSON string but got " + data['protocol']);
        }
        if (data['protocolMappers']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['protocolMappers'])) {
                throw new Error("Expected the field `protocolMappers` to be an array in the JSON data but got " + data['protocolMappers']);
            }
            // validate the optional field `protocolMappers` (array)
            for (const item of data['protocolMappers']) {
                ProtocolMapperRepresentation.validateJSON(item);
            };
        }
        // ensure the json data is an array
        if (!Array.isArray(data['redirectUris'])) {
            throw new Error("Expected the field `redirectUris` to be an array in the JSON data but got " + data['redirectUris']);
        }
        // ensure the json data is a string
        if (data['registrationAccessToken'] && !(typeof data['registrationAccessToken'] === 'string' || data['registrationAccessToken'] instanceof String)) {
            throw new Error("Expected the field `registrationAccessToken` to be a primitive type in the JSON string but got " + data['registrationAccessToken']);
        }
        // ensure the json data is a string
        if (data['rootUrl'] && !(typeof data['rootUrl'] === 'string' || data['rootUrl'] instanceof String)) {
            throw new Error("Expected the field `rootUrl` to be a primitive type in the JSON string but got " + data['rootUrl']);
        }
        // ensure the json data is a string
        if (data['secret'] && !(typeof data['secret'] === 'string' || data['secret'] instanceof String)) {
            throw new Error("Expected the field `secret` to be a primitive type in the JSON string but got " + data['secret']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['webOrigins'])) {
            throw new Error("Expected the field `webOrigins` to be an array in the JSON data but got " + data['webOrigins']);
        }

        return true;
    }


}



/**
 * @member {Object.<String, Object>} access
 */
ClientRepresentation.prototype['access'] = undefined;

/**
 * @member {String} adminUrl
 */
ClientRepresentation.prototype['adminUrl'] = undefined;

/**
 * @member {Boolean} alwaysDisplayInConsole
 */
ClientRepresentation.prototype['alwaysDisplayInConsole'] = undefined;

/**
 * @member {Object.<String, Object>} attributes
 */
ClientRepresentation.prototype['attributes'] = undefined;

/**
 * @member {Object.<String, Object>} authenticationFlowBindingOverrides
 */
ClientRepresentation.prototype['authenticationFlowBindingOverrides'] = undefined;

/**
 * @member {Boolean} authorizationServicesEnabled
 */
ClientRepresentation.prototype['authorizationServicesEnabled'] = undefined;

/**
 * @member {module:model/ResourceServerRepresentation} authorizationSettings
 */
ClientRepresentation.prototype['authorizationSettings'] = undefined;

/**
 * @member {String} baseUrl
 */
ClientRepresentation.prototype['baseUrl'] = undefined;

/**
 * @member {Boolean} bearerOnly
 */
ClientRepresentation.prototype['bearerOnly'] = undefined;

/**
 * @member {String} clientAuthenticatorType
 */
ClientRepresentation.prototype['clientAuthenticatorType'] = undefined;

/**
 * @member {String} clientId
 */
ClientRepresentation.prototype['clientId'] = undefined;

/**
 * @member {Boolean} consentRequired
 */
ClientRepresentation.prototype['consentRequired'] = undefined;

/**
 * @member {Array.<String>} defaultClientScopes
 */
ClientRepresentation.prototype['defaultClientScopes'] = undefined;

/**
 * @member {Array.<String>} defaultRoles
 */
ClientRepresentation.prototype['defaultRoles'] = undefined;

/**
 * @member {String} description
 */
ClientRepresentation.prototype['description'] = undefined;

/**
 * @member {Boolean} directAccessGrantsEnabled
 */
ClientRepresentation.prototype['directAccessGrantsEnabled'] = undefined;

/**
 * @member {Boolean} enabled
 */
ClientRepresentation.prototype['enabled'] = undefined;

/**
 * @member {Boolean} frontchannelLogout
 */
ClientRepresentation.prototype['frontchannelLogout'] = undefined;

/**
 * @member {Boolean} fullScopeAllowed
 */
ClientRepresentation.prototype['fullScopeAllowed'] = undefined;

/**
 * @member {String} id
 */
ClientRepresentation.prototype['id'] = undefined;

/**
 * @member {Boolean} implicitFlowEnabled
 */
ClientRepresentation.prototype['implicitFlowEnabled'] = undefined;

/**
 * @member {String} name
 */
ClientRepresentation.prototype['name'] = undefined;

/**
 * @member {Number} nodeReRegistrationTimeout
 */
ClientRepresentation.prototype['nodeReRegistrationTimeout'] = undefined;

/**
 * @member {Number} notBefore
 */
ClientRepresentation.prototype['notBefore'] = undefined;

/**
 * @member {Array.<String>} optionalClientScopes
 */
ClientRepresentation.prototype['optionalClientScopes'] = undefined;

/**
 * @member {String} origin
 */
ClientRepresentation.prototype['origin'] = undefined;

/**
 * @member {String} protocol
 */
ClientRepresentation.prototype['protocol'] = undefined;

/**
 * @member {Array.<module:model/ProtocolMapperRepresentation>} protocolMappers
 */
ClientRepresentation.prototype['protocolMappers'] = undefined;

/**
 * @member {Boolean} publicClient
 */
ClientRepresentation.prototype['publicClient'] = undefined;

/**
 * @member {Array.<String>} redirectUris
 */
ClientRepresentation.prototype['redirectUris'] = undefined;

/**
 * @member {Object.<String, Object>} registeredNodes
 */
ClientRepresentation.prototype['registeredNodes'] = undefined;

/**
 * @member {String} registrationAccessToken
 */
ClientRepresentation.prototype['registrationAccessToken'] = undefined;

/**
 * @member {String} rootUrl
 */
ClientRepresentation.prototype['rootUrl'] = undefined;

/**
 * @member {String} secret
 */
ClientRepresentation.prototype['secret'] = undefined;

/**
 * @member {Boolean} serviceAccountsEnabled
 */
ClientRepresentation.prototype['serviceAccountsEnabled'] = undefined;

/**
 * @member {Boolean} standardFlowEnabled
 */
ClientRepresentation.prototype['standardFlowEnabled'] = undefined;

/**
 * @member {Boolean} surrogateAuthRequired
 */
ClientRepresentation.prototype['surrogateAuthRequired'] = undefined;

/**
 * @member {Array.<String>} webOrigins
 */
ClientRepresentation.prototype['webOrigins'] = undefined;






export default ClientRepresentation;

