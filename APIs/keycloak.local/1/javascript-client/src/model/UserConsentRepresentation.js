/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UserConsentRepresentation model module.
 * @module model/UserConsentRepresentation
 * @version 1
 */
class UserConsentRepresentation {
    /**
     * Constructs a new <code>UserConsentRepresentation</code>.
     * @alias module:model/UserConsentRepresentation
     */
    constructor() { 
        
        UserConsentRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UserConsentRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UserConsentRepresentation} obj Optional instance to populate.
     * @return {module:model/UserConsentRepresentation} The populated <code>UserConsentRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UserConsentRepresentation();

            if (data.hasOwnProperty('clientId')) {
                obj['clientId'] = ApiClient.convertToType(data['clientId'], 'String');
            }
            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'Number');
            }
            if (data.hasOwnProperty('grantedClientScopes')) {
                obj['grantedClientScopes'] = ApiClient.convertToType(data['grantedClientScopes'], ['String']);
            }
            if (data.hasOwnProperty('lastUpdatedDate')) {
                obj['lastUpdatedDate'] = ApiClient.convertToType(data['lastUpdatedDate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UserConsentRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UserConsentRepresentation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['clientId'] && !(typeof data['clientId'] === 'string' || data['clientId'] instanceof String)) {
            throw new Error("Expected the field `clientId` to be a primitive type in the JSON string but got " + data['clientId']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['grantedClientScopes'])) {
            throw new Error("Expected the field `grantedClientScopes` to be an array in the JSON data but got " + data['grantedClientScopes']);
        }

        return true;
    }


}



/**
 * @member {String} clientId
 */
UserConsentRepresentation.prototype['clientId'] = undefined;

/**
 * @member {Number} createdDate
 */
UserConsentRepresentation.prototype['createdDate'] = undefined;

/**
 * @member {Array.<String>} grantedClientScopes
 */
UserConsentRepresentation.prototype['grantedClientScopes'] = undefined;

/**
 * @member {Number} lastUpdatedDate
 */
UserConsentRepresentation.prototype['lastUpdatedDate'] = undefined;






export default UserConsentRepresentation;

