/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TestLdapConnectionRepresentation model module.
 * @module model/TestLdapConnectionRepresentation
 * @version 1
 */
class TestLdapConnectionRepresentation {
    /**
     * Constructs a new <code>TestLdapConnectionRepresentation</code>.
     * @alias module:model/TestLdapConnectionRepresentation
     */
    constructor() { 
        
        TestLdapConnectionRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TestLdapConnectionRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TestLdapConnectionRepresentation} obj Optional instance to populate.
     * @return {module:model/TestLdapConnectionRepresentation} The populated <code>TestLdapConnectionRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TestLdapConnectionRepresentation();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('bindCredential')) {
                obj['bindCredential'] = ApiClient.convertToType(data['bindCredential'], 'String');
            }
            if (data.hasOwnProperty('bindDn')) {
                obj['bindDn'] = ApiClient.convertToType(data['bindDn'], 'String');
            }
            if (data.hasOwnProperty('componentId')) {
                obj['componentId'] = ApiClient.convertToType(data['componentId'], 'String');
            }
            if (data.hasOwnProperty('connectionTimeout')) {
                obj['connectionTimeout'] = ApiClient.convertToType(data['connectionTimeout'], 'String');
            }
            if (data.hasOwnProperty('connectionUrl')) {
                obj['connectionUrl'] = ApiClient.convertToType(data['connectionUrl'], 'String');
            }
            if (data.hasOwnProperty('startTls')) {
                obj['startTls'] = ApiClient.convertToType(data['startTls'], 'String');
            }
            if (data.hasOwnProperty('useTruststoreSpi')) {
                obj['useTruststoreSpi'] = ApiClient.convertToType(data['useTruststoreSpi'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TestLdapConnectionRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TestLdapConnectionRepresentation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['bindCredential'] && !(typeof data['bindCredential'] === 'string' || data['bindCredential'] instanceof String)) {
            throw new Error("Expected the field `bindCredential` to be a primitive type in the JSON string but got " + data['bindCredential']);
        }
        // ensure the json data is a string
        if (data['bindDn'] && !(typeof data['bindDn'] === 'string' || data['bindDn'] instanceof String)) {
            throw new Error("Expected the field `bindDn` to be a primitive type in the JSON string but got " + data['bindDn']);
        }
        // ensure the json data is a string
        if (data['componentId'] && !(typeof data['componentId'] === 'string' || data['componentId'] instanceof String)) {
            throw new Error("Expected the field `componentId` to be a primitive type in the JSON string but got " + data['componentId']);
        }
        // ensure the json data is a string
        if (data['connectionTimeout'] && !(typeof data['connectionTimeout'] === 'string' || data['connectionTimeout'] instanceof String)) {
            throw new Error("Expected the field `connectionTimeout` to be a primitive type in the JSON string but got " + data['connectionTimeout']);
        }
        // ensure the json data is a string
        if (data['connectionUrl'] && !(typeof data['connectionUrl'] === 'string' || data['connectionUrl'] instanceof String)) {
            throw new Error("Expected the field `connectionUrl` to be a primitive type in the JSON string but got " + data['connectionUrl']);
        }
        // ensure the json data is a string
        if (data['startTls'] && !(typeof data['startTls'] === 'string' || data['startTls'] instanceof String)) {
            throw new Error("Expected the field `startTls` to be a primitive type in the JSON string but got " + data['startTls']);
        }
        // ensure the json data is a string
        if (data['useTruststoreSpi'] && !(typeof data['useTruststoreSpi'] === 'string' || data['useTruststoreSpi'] instanceof String)) {
            throw new Error("Expected the field `useTruststoreSpi` to be a primitive type in the JSON string but got " + data['useTruststoreSpi']);
        }

        return true;
    }


}



/**
 * @member {String} action
 */
TestLdapConnectionRepresentation.prototype['action'] = undefined;

/**
 * @member {String} bindCredential
 */
TestLdapConnectionRepresentation.prototype['bindCredential'] = undefined;

/**
 * @member {String} bindDn
 */
TestLdapConnectionRepresentation.prototype['bindDn'] = undefined;

/**
 * @member {String} componentId
 */
TestLdapConnectionRepresentation.prototype['componentId'] = undefined;

/**
 * @member {String} connectionTimeout
 */
TestLdapConnectionRepresentation.prototype['connectionTimeout'] = undefined;

/**
 * @member {String} connectionUrl
 */
TestLdapConnectionRepresentation.prototype['connectionUrl'] = undefined;

/**
 * @member {String} startTls
 */
TestLdapConnectionRepresentation.prototype['startTls'] = undefined;

/**
 * @member {String} useTruststoreSpi
 */
TestLdapConnectionRepresentation.prototype['useTruststoreSpi'] = undefined;






export default TestLdapConnectionRepresentation;

