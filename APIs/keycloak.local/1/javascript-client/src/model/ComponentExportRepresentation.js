/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MultivaluedHashMap from './MultivaluedHashMap';

/**
 * The ComponentExportRepresentation model module.
 * @module model/ComponentExportRepresentation
 * @version 1
 */
class ComponentExportRepresentation {
    /**
     * Constructs a new <code>ComponentExportRepresentation</code>.
     * @alias module:model/ComponentExportRepresentation
     */
    constructor() { 
        
        ComponentExportRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ComponentExportRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComponentExportRepresentation} obj Optional instance to populate.
     * @return {module:model/ComponentExportRepresentation} The populated <code>ComponentExportRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComponentExportRepresentation();

            if (data.hasOwnProperty('config')) {
                obj['config'] = MultivaluedHashMap.constructFromObject(data['config']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('providerId')) {
                obj['providerId'] = ApiClient.convertToType(data['providerId'], 'String');
            }
            if (data.hasOwnProperty('subComponents')) {
                obj['subComponents'] = MultivaluedHashMap.constructFromObject(data['subComponents']);
            }
            if (data.hasOwnProperty('subType')) {
                obj['subType'] = ApiClient.convertToType(data['subType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ComponentExportRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ComponentExportRepresentation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `config`
        if (data['config']) { // data not null
          MultivaluedHashMap.validateJSON(data['config']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['providerId'] && !(typeof data['providerId'] === 'string' || data['providerId'] instanceof String)) {
            throw new Error("Expected the field `providerId` to be a primitive type in the JSON string but got " + data['providerId']);
        }
        // validate the optional field `subComponents`
        if (data['subComponents']) { // data not null
          MultivaluedHashMap.validateJSON(data['subComponents']);
        }
        // ensure the json data is a string
        if (data['subType'] && !(typeof data['subType'] === 'string' || data['subType'] instanceof String)) {
            throw new Error("Expected the field `subType` to be a primitive type in the JSON string but got " + data['subType']);
        }

        return true;
    }


}



/**
 * @member {module:model/MultivaluedHashMap} config
 */
ComponentExportRepresentation.prototype['config'] = undefined;

/**
 * @member {String} id
 */
ComponentExportRepresentation.prototype['id'] = undefined;

/**
 * @member {String} name
 */
ComponentExportRepresentation.prototype['name'] = undefined;

/**
 * @member {String} providerId
 */
ComponentExportRepresentation.prototype['providerId'] = undefined;

/**
 * @member {module:model/MultivaluedHashMap} subComponents
 */
ComponentExportRepresentation.prototype['subComponents'] = undefined;

/**
 * @member {String} subType
 */
ComponentExportRepresentation.prototype['subType'] = undefined;






export default ComponentExportRepresentation;

