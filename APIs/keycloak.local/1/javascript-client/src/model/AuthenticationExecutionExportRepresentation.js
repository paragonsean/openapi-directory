/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthenticationExecutionExportRepresentation model module.
 * @module model/AuthenticationExecutionExportRepresentation
 * @version 1
 */
class AuthenticationExecutionExportRepresentation {
    /**
     * Constructs a new <code>AuthenticationExecutionExportRepresentation</code>.
     * @alias module:model/AuthenticationExecutionExportRepresentation
     */
    constructor() { 
        
        AuthenticationExecutionExportRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthenticationExecutionExportRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthenticationExecutionExportRepresentation} obj Optional instance to populate.
     * @return {module:model/AuthenticationExecutionExportRepresentation} The populated <code>AuthenticationExecutionExportRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthenticationExecutionExportRepresentation();

            if (data.hasOwnProperty('authenticator')) {
                obj['authenticator'] = ApiClient.convertToType(data['authenticator'], 'String');
            }
            if (data.hasOwnProperty('authenticatorConfig')) {
                obj['authenticatorConfig'] = ApiClient.convertToType(data['authenticatorConfig'], 'String');
            }
            if (data.hasOwnProperty('authenticatorFlow')) {
                obj['authenticatorFlow'] = ApiClient.convertToType(data['authenticatorFlow'], 'Boolean');
            }
            if (data.hasOwnProperty('autheticatorFlow')) {
                obj['autheticatorFlow'] = ApiClient.convertToType(data['autheticatorFlow'], 'Boolean');
            }
            if (data.hasOwnProperty('flowAlias')) {
                obj['flowAlias'] = ApiClient.convertToType(data['flowAlias'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('requirement')) {
                obj['requirement'] = ApiClient.convertToType(data['requirement'], 'String');
            }
            if (data.hasOwnProperty('userSetupAllowed')) {
                obj['userSetupAllowed'] = ApiClient.convertToType(data['userSetupAllowed'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthenticationExecutionExportRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthenticationExecutionExportRepresentation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['authenticator'] && !(typeof data['authenticator'] === 'string' || data['authenticator'] instanceof String)) {
            throw new Error("Expected the field `authenticator` to be a primitive type in the JSON string but got " + data['authenticator']);
        }
        // ensure the json data is a string
        if (data['authenticatorConfig'] && !(typeof data['authenticatorConfig'] === 'string' || data['authenticatorConfig'] instanceof String)) {
            throw new Error("Expected the field `authenticatorConfig` to be a primitive type in the JSON string but got " + data['authenticatorConfig']);
        }
        // ensure the json data is a string
        if (data['flowAlias'] && !(typeof data['flowAlias'] === 'string' || data['flowAlias'] instanceof String)) {
            throw new Error("Expected the field `flowAlias` to be a primitive type in the JSON string but got " + data['flowAlias']);
        }
        // ensure the json data is a string
        if (data['requirement'] && !(typeof data['requirement'] === 'string' || data['requirement'] instanceof String)) {
            throw new Error("Expected the field `requirement` to be a primitive type in the JSON string but got " + data['requirement']);
        }

        return true;
    }


}



/**
 * @member {String} authenticator
 */
AuthenticationExecutionExportRepresentation.prototype['authenticator'] = undefined;

/**
 * @member {String} authenticatorConfig
 */
AuthenticationExecutionExportRepresentation.prototype['authenticatorConfig'] = undefined;

/**
 * @member {Boolean} authenticatorFlow
 */
AuthenticationExecutionExportRepresentation.prototype['authenticatorFlow'] = undefined;

/**
 * @member {Boolean} autheticatorFlow
 */
AuthenticationExecutionExportRepresentation.prototype['autheticatorFlow'] = undefined;

/**
 * @member {String} flowAlias
 */
AuthenticationExecutionExportRepresentation.prototype['flowAlias'] = undefined;

/**
 * @member {Number} priority
 */
AuthenticationExecutionExportRepresentation.prototype['priority'] = undefined;

/**
 * @member {String} requirement
 */
AuthenticationExecutionExportRepresentation.prototype['requirement'] = undefined;

/**
 * @member {Boolean} userSetupAllowed
 */
AuthenticationExecutionExportRepresentation.prototype['userSetupAllowed'] = undefined;






export default AuthenticationExecutionExportRepresentation;

