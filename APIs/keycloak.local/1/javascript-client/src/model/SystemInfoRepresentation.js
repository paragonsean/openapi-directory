/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SystemInfoRepresentation model module.
 * @module model/SystemInfoRepresentation
 * @version 1
 */
class SystemInfoRepresentation {
    /**
     * Constructs a new <code>SystemInfoRepresentation</code>.
     * @alias module:model/SystemInfoRepresentation
     */
    constructor() { 
        
        SystemInfoRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SystemInfoRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SystemInfoRepresentation} obj Optional instance to populate.
     * @return {module:model/SystemInfoRepresentation} The populated <code>SystemInfoRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SystemInfoRepresentation();

            if (data.hasOwnProperty('fileEncoding')) {
                obj['fileEncoding'] = ApiClient.convertToType(data['fileEncoding'], 'String');
            }
            if (data.hasOwnProperty('javaHome')) {
                obj['javaHome'] = ApiClient.convertToType(data['javaHome'], 'String');
            }
            if (data.hasOwnProperty('javaRuntime')) {
                obj['javaRuntime'] = ApiClient.convertToType(data['javaRuntime'], 'String');
            }
            if (data.hasOwnProperty('javaVendor')) {
                obj['javaVendor'] = ApiClient.convertToType(data['javaVendor'], 'String');
            }
            if (data.hasOwnProperty('javaVersion')) {
                obj['javaVersion'] = ApiClient.convertToType(data['javaVersion'], 'String');
            }
            if (data.hasOwnProperty('javaVm')) {
                obj['javaVm'] = ApiClient.convertToType(data['javaVm'], 'String');
            }
            if (data.hasOwnProperty('javaVmVersion')) {
                obj['javaVmVersion'] = ApiClient.convertToType(data['javaVmVersion'], 'String');
            }
            if (data.hasOwnProperty('osArchitecture')) {
                obj['osArchitecture'] = ApiClient.convertToType(data['osArchitecture'], 'String');
            }
            if (data.hasOwnProperty('osName')) {
                obj['osName'] = ApiClient.convertToType(data['osName'], 'String');
            }
            if (data.hasOwnProperty('osVersion')) {
                obj['osVersion'] = ApiClient.convertToType(data['osVersion'], 'String');
            }
            if (data.hasOwnProperty('serverTime')) {
                obj['serverTime'] = ApiClient.convertToType(data['serverTime'], 'String');
            }
            if (data.hasOwnProperty('uptime')) {
                obj['uptime'] = ApiClient.convertToType(data['uptime'], 'String');
            }
            if (data.hasOwnProperty('uptimeMillis')) {
                obj['uptimeMillis'] = ApiClient.convertToType(data['uptimeMillis'], 'Number');
            }
            if (data.hasOwnProperty('userDir')) {
                obj['userDir'] = ApiClient.convertToType(data['userDir'], 'String');
            }
            if (data.hasOwnProperty('userLocale')) {
                obj['userLocale'] = ApiClient.convertToType(data['userLocale'], 'String');
            }
            if (data.hasOwnProperty('userName')) {
                obj['userName'] = ApiClient.convertToType(data['userName'], 'String');
            }
            if (data.hasOwnProperty('userTimezone')) {
                obj['userTimezone'] = ApiClient.convertToType(data['userTimezone'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SystemInfoRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SystemInfoRepresentation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['fileEncoding'] && !(typeof data['fileEncoding'] === 'string' || data['fileEncoding'] instanceof String)) {
            throw new Error("Expected the field `fileEncoding` to be a primitive type in the JSON string but got " + data['fileEncoding']);
        }
        // ensure the json data is a string
        if (data['javaHome'] && !(typeof data['javaHome'] === 'string' || data['javaHome'] instanceof String)) {
            throw new Error("Expected the field `javaHome` to be a primitive type in the JSON string but got " + data['javaHome']);
        }
        // ensure the json data is a string
        if (data['javaRuntime'] && !(typeof data['javaRuntime'] === 'string' || data['javaRuntime'] instanceof String)) {
            throw new Error("Expected the field `javaRuntime` to be a primitive type in the JSON string but got " + data['javaRuntime']);
        }
        // ensure the json data is a string
        if (data['javaVendor'] && !(typeof data['javaVendor'] === 'string' || data['javaVendor'] instanceof String)) {
            throw new Error("Expected the field `javaVendor` to be a primitive type in the JSON string but got " + data['javaVendor']);
        }
        // ensure the json data is a string
        if (data['javaVersion'] && !(typeof data['javaVersion'] === 'string' || data['javaVersion'] instanceof String)) {
            throw new Error("Expected the field `javaVersion` to be a primitive type in the JSON string but got " + data['javaVersion']);
        }
        // ensure the json data is a string
        if (data['javaVm'] && !(typeof data['javaVm'] === 'string' || data['javaVm'] instanceof String)) {
            throw new Error("Expected the field `javaVm` to be a primitive type in the JSON string but got " + data['javaVm']);
        }
        // ensure the json data is a string
        if (data['javaVmVersion'] && !(typeof data['javaVmVersion'] === 'string' || data['javaVmVersion'] instanceof String)) {
            throw new Error("Expected the field `javaVmVersion` to be a primitive type in the JSON string but got " + data['javaVmVersion']);
        }
        // ensure the json data is a string
        if (data['osArchitecture'] && !(typeof data['osArchitecture'] === 'string' || data['osArchitecture'] instanceof String)) {
            throw new Error("Expected the field `osArchitecture` to be a primitive type in the JSON string but got " + data['osArchitecture']);
        }
        // ensure the json data is a string
        if (data['osName'] && !(typeof data['osName'] === 'string' || data['osName'] instanceof String)) {
            throw new Error("Expected the field `osName` to be a primitive type in the JSON string but got " + data['osName']);
        }
        // ensure the json data is a string
        if (data['osVersion'] && !(typeof data['osVersion'] === 'string' || data['osVersion'] instanceof String)) {
            throw new Error("Expected the field `osVersion` to be a primitive type in the JSON string but got " + data['osVersion']);
        }
        // ensure the json data is a string
        if (data['serverTime'] && !(typeof data['serverTime'] === 'string' || data['serverTime'] instanceof String)) {
            throw new Error("Expected the field `serverTime` to be a primitive type in the JSON string but got " + data['serverTime']);
        }
        // ensure the json data is a string
        if (data['uptime'] && !(typeof data['uptime'] === 'string' || data['uptime'] instanceof String)) {
            throw new Error("Expected the field `uptime` to be a primitive type in the JSON string but got " + data['uptime']);
        }
        // ensure the json data is a string
        if (data['userDir'] && !(typeof data['userDir'] === 'string' || data['userDir'] instanceof String)) {
            throw new Error("Expected the field `userDir` to be a primitive type in the JSON string but got " + data['userDir']);
        }
        // ensure the json data is a string
        if (data['userLocale'] && !(typeof data['userLocale'] === 'string' || data['userLocale'] instanceof String)) {
            throw new Error("Expected the field `userLocale` to be a primitive type in the JSON string but got " + data['userLocale']);
        }
        // ensure the json data is a string
        if (data['userName'] && !(typeof data['userName'] === 'string' || data['userName'] instanceof String)) {
            throw new Error("Expected the field `userName` to be a primitive type in the JSON string but got " + data['userName']);
        }
        // ensure the json data is a string
        if (data['userTimezone'] && !(typeof data['userTimezone'] === 'string' || data['userTimezone'] instanceof String)) {
            throw new Error("Expected the field `userTimezone` to be a primitive type in the JSON string but got " + data['userTimezone']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {String} fileEncoding
 */
SystemInfoRepresentation.prototype['fileEncoding'] = undefined;

/**
 * @member {String} javaHome
 */
SystemInfoRepresentation.prototype['javaHome'] = undefined;

/**
 * @member {String} javaRuntime
 */
SystemInfoRepresentation.prototype['javaRuntime'] = undefined;

/**
 * @member {String} javaVendor
 */
SystemInfoRepresentation.prototype['javaVendor'] = undefined;

/**
 * @member {String} javaVersion
 */
SystemInfoRepresentation.prototype['javaVersion'] = undefined;

/**
 * @member {String} javaVm
 */
SystemInfoRepresentation.prototype['javaVm'] = undefined;

/**
 * @member {String} javaVmVersion
 */
SystemInfoRepresentation.prototype['javaVmVersion'] = undefined;

/**
 * @member {String} osArchitecture
 */
SystemInfoRepresentation.prototype['osArchitecture'] = undefined;

/**
 * @member {String} osName
 */
SystemInfoRepresentation.prototype['osName'] = undefined;

/**
 * @member {String} osVersion
 */
SystemInfoRepresentation.prototype['osVersion'] = undefined;

/**
 * @member {String} serverTime
 */
SystemInfoRepresentation.prototype['serverTime'] = undefined;

/**
 * @member {String} uptime
 */
SystemInfoRepresentation.prototype['uptime'] = undefined;

/**
 * @member {Number} uptimeMillis
 */
SystemInfoRepresentation.prototype['uptimeMillis'] = undefined;

/**
 * @member {String} userDir
 */
SystemInfoRepresentation.prototype['userDir'] = undefined;

/**
 * @member {String} userLocale
 */
SystemInfoRepresentation.prototype['userLocale'] = undefined;

/**
 * @member {String} userName
 */
SystemInfoRepresentation.prototype['userName'] = undefined;

/**
 * @member {String} userTimezone
 */
SystemInfoRepresentation.prototype['userTimezone'] = undefined;

/**
 * @member {String} version
 */
SystemInfoRepresentation.prototype['version'] = undefined;






export default SystemInfoRepresentation;

