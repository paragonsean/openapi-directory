/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AuthenticationExecutionExportRepresentation from './AuthenticationExecutionExportRepresentation';

/**
 * The AuthenticationFlowRepresentation model module.
 * @module model/AuthenticationFlowRepresentation
 * @version 1
 */
class AuthenticationFlowRepresentation {
    /**
     * Constructs a new <code>AuthenticationFlowRepresentation</code>.
     * @alias module:model/AuthenticationFlowRepresentation
     */
    constructor() { 
        
        AuthenticationFlowRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AuthenticationFlowRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthenticationFlowRepresentation} obj Optional instance to populate.
     * @return {module:model/AuthenticationFlowRepresentation} The populated <code>AuthenticationFlowRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthenticationFlowRepresentation();

            if (data.hasOwnProperty('alias')) {
                obj['alias'] = ApiClient.convertToType(data['alias'], 'String');
            }
            if (data.hasOwnProperty('authenticationExecutions')) {
                obj['authenticationExecutions'] = ApiClient.convertToType(data['authenticationExecutions'], [AuthenticationExecutionExportRepresentation]);
            }
            if (data.hasOwnProperty('builtIn')) {
                obj['builtIn'] = ApiClient.convertToType(data['builtIn'], 'Boolean');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('providerId')) {
                obj['providerId'] = ApiClient.convertToType(data['providerId'], 'String');
            }
            if (data.hasOwnProperty('topLevel')) {
                obj['topLevel'] = ApiClient.convertToType(data['topLevel'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthenticationFlowRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthenticationFlowRepresentation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['alias'] && !(typeof data['alias'] === 'string' || data['alias'] instanceof String)) {
            throw new Error("Expected the field `alias` to be a primitive type in the JSON string but got " + data['alias']);
        }
        if (data['authenticationExecutions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['authenticationExecutions'])) {
                throw new Error("Expected the field `authenticationExecutions` to be an array in the JSON data but got " + data['authenticationExecutions']);
            }
            // validate the optional field `authenticationExecutions` (array)
            for (const item of data['authenticationExecutions']) {
                AuthenticationExecutionExportRepresentation.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['providerId'] && !(typeof data['providerId'] === 'string' || data['providerId'] instanceof String)) {
            throw new Error("Expected the field `providerId` to be a primitive type in the JSON string but got " + data['providerId']);
        }

        return true;
    }


}



/**
 * @member {String} alias
 */
AuthenticationFlowRepresentation.prototype['alias'] = undefined;

/**
 * @member {Array.<module:model/AuthenticationExecutionExportRepresentation>} authenticationExecutions
 */
AuthenticationFlowRepresentation.prototype['authenticationExecutions'] = undefined;

/**
 * @member {Boolean} builtIn
 */
AuthenticationFlowRepresentation.prototype['builtIn'] = undefined;

/**
 * @member {String} description
 */
AuthenticationFlowRepresentation.prototype['description'] = undefined;

/**
 * @member {String} id
 */
AuthenticationFlowRepresentation.prototype['id'] = undefined;

/**
 * @member {String} providerId
 */
AuthenticationFlowRepresentation.prototype['providerId'] = undefined;

/**
 * @member {Boolean} topLevel
 */
AuthenticationFlowRepresentation.prototype['topLevel'] = undefined;






export default AuthenticationFlowRepresentation;

