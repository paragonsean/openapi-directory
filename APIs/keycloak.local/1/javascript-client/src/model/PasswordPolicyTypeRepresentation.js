/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PasswordPolicyTypeRepresentation model module.
 * @module model/PasswordPolicyTypeRepresentation
 * @version 1
 */
class PasswordPolicyTypeRepresentation {
    /**
     * Constructs a new <code>PasswordPolicyTypeRepresentation</code>.
     * @alias module:model/PasswordPolicyTypeRepresentation
     */
    constructor() { 
        
        PasswordPolicyTypeRepresentation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PasswordPolicyTypeRepresentation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordPolicyTypeRepresentation} obj Optional instance to populate.
     * @return {module:model/PasswordPolicyTypeRepresentation} The populated <code>PasswordPolicyTypeRepresentation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PasswordPolicyTypeRepresentation();

            if (data.hasOwnProperty('configType')) {
                obj['configType'] = ApiClient.convertToType(data['configType'], 'String');
            }
            if (data.hasOwnProperty('defaultValue')) {
                obj['defaultValue'] = ApiClient.convertToType(data['defaultValue'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('multipleSupported')) {
                obj['multipleSupported'] = ApiClient.convertToType(data['multipleSupported'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PasswordPolicyTypeRepresentation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PasswordPolicyTypeRepresentation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['configType'] && !(typeof data['configType'] === 'string' || data['configType'] instanceof String)) {
            throw new Error("Expected the field `configType` to be a primitive type in the JSON string but got " + data['configType']);
        }
        // ensure the json data is a string
        if (data['defaultValue'] && !(typeof data['defaultValue'] === 'string' || data['defaultValue'] instanceof String)) {
            throw new Error("Expected the field `defaultValue` to be a primitive type in the JSON string but got " + data['defaultValue']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }

        return true;
    }


}



/**
 * @member {String} configType
 */
PasswordPolicyTypeRepresentation.prototype['configType'] = undefined;

/**
 * @member {String} defaultValue
 */
PasswordPolicyTypeRepresentation.prototype['defaultValue'] = undefined;

/**
 * @member {String} displayName
 */
PasswordPolicyTypeRepresentation.prototype['displayName'] = undefined;

/**
 * @member {String} id
 */
PasswordPolicyTypeRepresentation.prototype['id'] = undefined;

/**
 * @member {Boolean} multipleSupported
 */
PasswordPolicyTypeRepresentation.prototype['multipleSupported'] = undefined;






export default PasswordPolicyTypeRepresentation;

