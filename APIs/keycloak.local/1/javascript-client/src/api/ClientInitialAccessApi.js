/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ClientInitialAccessCreatePresentation from '../model/ClientInitialAccessCreatePresentation';
import ClientInitialAccessPresentation from '../model/ClientInitialAccessPresentation';

/**
* ClientInitialAccess service.
* @module api/ClientInitialAccessApi
* @version 1
*/
export default class ClientInitialAccessApi {

    /**
    * Constructs a new ClientInitialAccessApi. 
    * @alias module:api/ClientInitialAccessApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the realmClientsInitialAccessGet operation.
     * @callback module:api/ClientInitialAccessApi~realmClientsInitialAccessGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ClientInitialAccessPresentation>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} realm realm name (not id!)
     * @param {module:api/ClientInitialAccessApi~realmClientsInitialAccessGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ClientInitialAccessPresentation>}
     */
    realmClientsInitialAccessGet(realm, callback) {
      let postBody = null;
      // verify the required parameter 'realm' is set
      if (realm === undefined || realm === null) {
        throw new Error("Missing the required parameter 'realm' when calling realmClientsInitialAccessGet");
      }

      let pathParams = {
        'realm': realm
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ClientInitialAccessPresentation];
      return this.apiClient.callApi(
        '/{realm}/clients-initial-access', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the realmClientsInitialAccessIdDelete operation.
     * @callback module:api/ClientInitialAccessApi~realmClientsInitialAccessIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {String} realm realm name (not id!)
     * @param {String} id 
     * @param {module:api/ClientInitialAccessApi~realmClientsInitialAccessIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    realmClientsInitialAccessIdDelete(realm, id, callback) {
      let postBody = null;
      // verify the required parameter 'realm' is set
      if (realm === undefined || realm === null) {
        throw new Error("Missing the required parameter 'realm' when calling realmClientsInitialAccessIdDelete");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling realmClientsInitialAccessIdDelete");
      }

      let pathParams = {
        'realm': realm,
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/{realm}/clients-initial-access/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the realmClientsInitialAccessPost operation.
     * @callback module:api/ClientInitialAccessApi~realmClientsInitialAccessPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ClientInitialAccessPresentation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new initial access token.
     * @param {String} realm realm name (not id!)
     * @param {module:model/ClientInitialAccessCreatePresentation} clientInitialAccessCreatePresentation 
     * @param {module:api/ClientInitialAccessApi~realmClientsInitialAccessPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ClientInitialAccessPresentation}
     */
    realmClientsInitialAccessPost(realm, clientInitialAccessCreatePresentation, callback) {
      let postBody = clientInitialAccessCreatePresentation;
      // verify the required parameter 'realm' is set
      if (realm === undefined || realm === null) {
        throw new Error("Missing the required parameter 'realm' when calling realmClientsInitialAccessPost");
      }
      // verify the required parameter 'clientInitialAccessCreatePresentation' is set
      if (clientInitialAccessCreatePresentation === undefined || clientInitialAccessCreatePresentation === null) {
        throw new Error("Missing the required parameter 'clientInitialAccessCreatePresentation' when calling realmClientsInitialAccessPost");
      }

      let pathParams = {
        'realm': realm
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ClientInitialAccessPresentation;
      return this.apiClient.callApi(
        '/{realm}/clients-initial-access', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
