/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KeycloakAdminRestApi);
  }
}(this, function(expect, KeycloakAdminRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KeycloakAdminRestApi.RoleMapperApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('RoleMapperApi', function() {
    describe('realmGroupsIdRoleMappingsGet', function() {
      it('should call realmGroupsIdRoleMappingsGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdRoleMappingsGet
        //instance.realmGroupsIdRoleMappingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdRoleMappingsRealmAvailableGet', function() {
      it('should call realmGroupsIdRoleMappingsRealmAvailableGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdRoleMappingsRealmAvailableGet
        //instance.realmGroupsIdRoleMappingsRealmAvailableGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdRoleMappingsRealmCompositeGet', function() {
      it('should call realmGroupsIdRoleMappingsRealmCompositeGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdRoleMappingsRealmCompositeGet
        //instance.realmGroupsIdRoleMappingsRealmCompositeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdRoleMappingsRealmDelete', function() {
      it('should call realmGroupsIdRoleMappingsRealmDelete successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdRoleMappingsRealmDelete
        //instance.realmGroupsIdRoleMappingsRealmDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdRoleMappingsRealmGet', function() {
      it('should call realmGroupsIdRoleMappingsRealmGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdRoleMappingsRealmGet
        //instance.realmGroupsIdRoleMappingsRealmGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdRoleMappingsRealmPost', function() {
      it('should call realmGroupsIdRoleMappingsRealmPost successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdRoleMappingsRealmPost
        //instance.realmGroupsIdRoleMappingsRealmPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdRoleMappingsGet', function() {
      it('should call realmUsersIdRoleMappingsGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdRoleMappingsGet
        //instance.realmUsersIdRoleMappingsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdRoleMappingsRealmAvailableGet', function() {
      it('should call realmUsersIdRoleMappingsRealmAvailableGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdRoleMappingsRealmAvailableGet
        //instance.realmUsersIdRoleMappingsRealmAvailableGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdRoleMappingsRealmCompositeGet', function() {
      it('should call realmUsersIdRoleMappingsRealmCompositeGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdRoleMappingsRealmCompositeGet
        //instance.realmUsersIdRoleMappingsRealmCompositeGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdRoleMappingsRealmDelete', function() {
      it('should call realmUsersIdRoleMappingsRealmDelete successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdRoleMappingsRealmDelete
        //instance.realmUsersIdRoleMappingsRealmDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdRoleMappingsRealmGet', function() {
      it('should call realmUsersIdRoleMappingsRealmGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdRoleMappingsRealmGet
        //instance.realmUsersIdRoleMappingsRealmGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdRoleMappingsRealmPost', function() {
      it('should call realmUsersIdRoleMappingsRealmPost successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdRoleMappingsRealmPost
        //instance.realmUsersIdRoleMappingsRealmPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
