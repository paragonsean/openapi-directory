/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KeycloakAdminRestApi);
  }
}(this, function(expect, KeycloakAdminRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KeycloakAdminRestApi.AuthenticationManagementApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AuthenticationManagementApi', function() {
    describe('realmAuthenticationAuthenticatorProvidersGet', function() {
      it('should call realmAuthenticationAuthenticatorProvidersGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationAuthenticatorProvidersGet
        //instance.realmAuthenticationAuthenticatorProvidersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationClientAuthenticatorProvidersGet', function() {
      it('should call realmAuthenticationClientAuthenticatorProvidersGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationClientAuthenticatorProvidersGet
        //instance.realmAuthenticationClientAuthenticatorProvidersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationConfigDescriptionProviderIdGet', function() {
      it('should call realmAuthenticationConfigDescriptionProviderIdGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationConfigDescriptionProviderIdGet
        //instance.realmAuthenticationConfigDescriptionProviderIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationConfigIdDelete', function() {
      it('should call realmAuthenticationConfigIdDelete successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationConfigIdDelete
        //instance.realmAuthenticationConfigIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationConfigIdGet', function() {
      it('should call realmAuthenticationConfigIdGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationConfigIdGet
        //instance.realmAuthenticationConfigIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationConfigIdPut', function() {
      it('should call realmAuthenticationConfigIdPut successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationConfigIdPut
        //instance.realmAuthenticationConfigIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationExecutionsExecutionIdConfigPost', function() {
      it('should call realmAuthenticationExecutionsExecutionIdConfigPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationExecutionsExecutionIdConfigPost
        //instance.realmAuthenticationExecutionsExecutionIdConfigPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationExecutionsExecutionIdDelete', function() {
      it('should call realmAuthenticationExecutionsExecutionIdDelete successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationExecutionsExecutionIdDelete
        //instance.realmAuthenticationExecutionsExecutionIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationExecutionsExecutionIdGet', function() {
      it('should call realmAuthenticationExecutionsExecutionIdGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationExecutionsExecutionIdGet
        //instance.realmAuthenticationExecutionsExecutionIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationExecutionsExecutionIdLowerPriorityPost', function() {
      it('should call realmAuthenticationExecutionsExecutionIdLowerPriorityPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationExecutionsExecutionIdLowerPriorityPost
        //instance.realmAuthenticationExecutionsExecutionIdLowerPriorityPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationExecutionsExecutionIdRaisePriorityPost', function() {
      it('should call realmAuthenticationExecutionsExecutionIdRaisePriorityPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationExecutionsExecutionIdRaisePriorityPost
        //instance.realmAuthenticationExecutionsExecutionIdRaisePriorityPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationExecutionsPost', function() {
      it('should call realmAuthenticationExecutionsPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationExecutionsPost
        //instance.realmAuthenticationExecutionsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsFlowAliasCopyPost', function() {
      it('should call realmAuthenticationFlowsFlowAliasCopyPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsFlowAliasCopyPost
        //instance.realmAuthenticationFlowsFlowAliasCopyPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsFlowAliasExecutionsExecutionPost', function() {
      it('should call realmAuthenticationFlowsFlowAliasExecutionsExecutionPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsFlowAliasExecutionsExecutionPost
        //instance.realmAuthenticationFlowsFlowAliasExecutionsExecutionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsFlowAliasExecutionsFlowPost', function() {
      it('should call realmAuthenticationFlowsFlowAliasExecutionsFlowPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsFlowAliasExecutionsFlowPost
        //instance.realmAuthenticationFlowsFlowAliasExecutionsFlowPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsFlowAliasExecutionsGet', function() {
      it('should call realmAuthenticationFlowsFlowAliasExecutionsGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsFlowAliasExecutionsGet
        //instance.realmAuthenticationFlowsFlowAliasExecutionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsFlowAliasExecutionsPut', function() {
      it('should call realmAuthenticationFlowsFlowAliasExecutionsPut successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsFlowAliasExecutionsPut
        //instance.realmAuthenticationFlowsFlowAliasExecutionsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsGet', function() {
      it('should call realmAuthenticationFlowsGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsGet
        //instance.realmAuthenticationFlowsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsIdDelete', function() {
      it('should call realmAuthenticationFlowsIdDelete successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsIdDelete
        //instance.realmAuthenticationFlowsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsIdGet', function() {
      it('should call realmAuthenticationFlowsIdGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsIdGet
        //instance.realmAuthenticationFlowsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsIdPut', function() {
      it('should call realmAuthenticationFlowsIdPut successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsIdPut
        //instance.realmAuthenticationFlowsIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFlowsPost', function() {
      it('should call realmAuthenticationFlowsPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFlowsPost
        //instance.realmAuthenticationFlowsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFormActionProvidersGet', function() {
      it('should call realmAuthenticationFormActionProvidersGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFormActionProvidersGet
        //instance.realmAuthenticationFormActionProvidersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationFormProvidersGet', function() {
      it('should call realmAuthenticationFormProvidersGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationFormProvidersGet
        //instance.realmAuthenticationFormProvidersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationPerClientConfigDescriptionGet', function() {
      it('should call realmAuthenticationPerClientConfigDescriptionGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationPerClientConfigDescriptionGet
        //instance.realmAuthenticationPerClientConfigDescriptionGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationRegisterRequiredActionPost', function() {
      it('should call realmAuthenticationRegisterRequiredActionPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationRegisterRequiredActionPost
        //instance.realmAuthenticationRegisterRequiredActionPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationRequiredActionsAliasDelete', function() {
      it('should call realmAuthenticationRequiredActionsAliasDelete successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationRequiredActionsAliasDelete
        //instance.realmAuthenticationRequiredActionsAliasDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationRequiredActionsAliasGet', function() {
      it('should call realmAuthenticationRequiredActionsAliasGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationRequiredActionsAliasGet
        //instance.realmAuthenticationRequiredActionsAliasGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationRequiredActionsAliasLowerPriorityPost', function() {
      it('should call realmAuthenticationRequiredActionsAliasLowerPriorityPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationRequiredActionsAliasLowerPriorityPost
        //instance.realmAuthenticationRequiredActionsAliasLowerPriorityPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationRequiredActionsAliasPut', function() {
      it('should call realmAuthenticationRequiredActionsAliasPut successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationRequiredActionsAliasPut
        //instance.realmAuthenticationRequiredActionsAliasPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationRequiredActionsAliasRaisePriorityPost', function() {
      it('should call realmAuthenticationRequiredActionsAliasRaisePriorityPost successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationRequiredActionsAliasRaisePriorityPost
        //instance.realmAuthenticationRequiredActionsAliasRaisePriorityPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationRequiredActionsGet', function() {
      it('should call realmAuthenticationRequiredActionsGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationRequiredActionsGet
        //instance.realmAuthenticationRequiredActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmAuthenticationUnregisteredRequiredActionsGet', function() {
      it('should call realmAuthenticationUnregisteredRequiredActionsGet successfully', function(done) {
        //uncomment below and update the code to test realmAuthenticationUnregisteredRequiredActionsGet
        //instance.realmAuthenticationUnregisteredRequiredActionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
