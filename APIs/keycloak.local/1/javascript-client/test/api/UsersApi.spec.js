/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KeycloakAdminRestApi);
  }
}(this, function(expect, KeycloakAdminRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KeycloakAdminRestApi.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('realmUsersCountGet', function() {
      it('should call realmUsersCountGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersCountGet
        //instance.realmUsersCountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersGet', function() {
      it('should call realmUsersGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersGet
        //instance.realmUsersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdConfiguredUserStorageCredentialTypesGet', function() {
      it('should call realmUsersIdConfiguredUserStorageCredentialTypesGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdConfiguredUserStorageCredentialTypesGet
        //instance.realmUsersIdConfiguredUserStorageCredentialTypesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdConsentsClientDelete', function() {
      it('should call realmUsersIdConsentsClientDelete successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdConsentsClientDelete
        //instance.realmUsersIdConsentsClientDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdConsentsGet', function() {
      it('should call realmUsersIdConsentsGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdConsentsGet
        //instance.realmUsersIdConsentsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdCredentialsCredentialIdDelete', function() {
      it('should call realmUsersIdCredentialsCredentialIdDelete successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdCredentialsCredentialIdDelete
        //instance.realmUsersIdCredentialsCredentialIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdCredentialsCredentialIdMoveAfterNewPreviousCredentialIdPost', function() {
      it('should call realmUsersIdCredentialsCredentialIdMoveAfterNewPreviousCredentialIdPost successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdCredentialsCredentialIdMoveAfterNewPreviousCredentialIdPost
        //instance.realmUsersIdCredentialsCredentialIdMoveAfterNewPreviousCredentialIdPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdCredentialsCredentialIdMoveToFirstPost', function() {
      it('should call realmUsersIdCredentialsCredentialIdMoveToFirstPost successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdCredentialsCredentialIdMoveToFirstPost
        //instance.realmUsersIdCredentialsCredentialIdMoveToFirstPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdCredentialsCredentialIdUserLabelPut', function() {
      it('should call realmUsersIdCredentialsCredentialIdUserLabelPut successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdCredentialsCredentialIdUserLabelPut
        //instance.realmUsersIdCredentialsCredentialIdUserLabelPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdCredentialsGet', function() {
      it('should call realmUsersIdCredentialsGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdCredentialsGet
        //instance.realmUsersIdCredentialsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdDelete', function() {
      it('should call realmUsersIdDelete successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdDelete
        //instance.realmUsersIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdDisableCredentialTypesPut', function() {
      it('should call realmUsersIdDisableCredentialTypesPut successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdDisableCredentialTypesPut
        //instance.realmUsersIdDisableCredentialTypesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdExecuteActionsEmailPut', function() {
      it('should call realmUsersIdExecuteActionsEmailPut successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdExecuteActionsEmailPut
        //instance.realmUsersIdExecuteActionsEmailPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdFederatedIdentityGet', function() {
      it('should call realmUsersIdFederatedIdentityGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdFederatedIdentityGet
        //instance.realmUsersIdFederatedIdentityGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdFederatedIdentityProviderDelete', function() {
      it('should call realmUsersIdFederatedIdentityProviderDelete successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdFederatedIdentityProviderDelete
        //instance.realmUsersIdFederatedIdentityProviderDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdFederatedIdentityProviderPost', function() {
      it('should call realmUsersIdFederatedIdentityProviderPost successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdFederatedIdentityProviderPost
        //instance.realmUsersIdFederatedIdentityProviderPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdGet', function() {
      it('should call realmUsersIdGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdGet
        //instance.realmUsersIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdGroupsCountGet', function() {
      it('should call realmUsersIdGroupsCountGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdGroupsCountGet
        //instance.realmUsersIdGroupsCountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdGroupsGet', function() {
      it('should call realmUsersIdGroupsGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdGroupsGet
        //instance.realmUsersIdGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdGroupsGroupIdDelete', function() {
      it('should call realmUsersIdGroupsGroupIdDelete successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdGroupsGroupIdDelete
        //instance.realmUsersIdGroupsGroupIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdGroupsGroupIdPut', function() {
      it('should call realmUsersIdGroupsGroupIdPut successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdGroupsGroupIdPut
        //instance.realmUsersIdGroupsGroupIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdImpersonationPost', function() {
      it('should call realmUsersIdImpersonationPost successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdImpersonationPost
        //instance.realmUsersIdImpersonationPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdLogoutPost', function() {
      it('should call realmUsersIdLogoutPost successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdLogoutPost
        //instance.realmUsersIdLogoutPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdOfflineSessionsClientIdGet', function() {
      it('should call realmUsersIdOfflineSessionsClientIdGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdOfflineSessionsClientIdGet
        //instance.realmUsersIdOfflineSessionsClientIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdPut', function() {
      it('should call realmUsersIdPut successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdPut
        //instance.realmUsersIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdResetPasswordPut', function() {
      it('should call realmUsersIdResetPasswordPut successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdResetPasswordPut
        //instance.realmUsersIdResetPasswordPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdSendVerifyEmailPut', function() {
      it('should call realmUsersIdSendVerifyEmailPut successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdSendVerifyEmailPut
        //instance.realmUsersIdSendVerifyEmailPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersIdSessionsGet', function() {
      it('should call realmUsersIdSessionsGet successfully', function(done) {
        //uncomment below and update the code to test realmUsersIdSessionsGet
        //instance.realmUsersIdSessionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmUsersPost', function() {
      it('should call realmUsersPost successfully', function(done) {
        //uncomment below and update the code to test realmUsersPost
        //instance.realmUsersPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
