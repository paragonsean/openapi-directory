/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KeycloakAdminRestApi);
  }
}(this, function(expect, KeycloakAdminRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KeycloakAdminRestApi.GroupsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GroupsApi', function() {
    describe('realmGroupsCountGet', function() {
      it('should call realmGroupsCountGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsCountGet
        //instance.realmGroupsCountGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsGet', function() {
      it('should call realmGroupsGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsGet
        //instance.realmGroupsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdChildrenPost', function() {
      it('should call realmGroupsIdChildrenPost successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdChildrenPost
        //instance.realmGroupsIdChildrenPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdDelete', function() {
      it('should call realmGroupsIdDelete successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdDelete
        //instance.realmGroupsIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdGet', function() {
      it('should call realmGroupsIdGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdGet
        //instance.realmGroupsIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdManagementPermissionsGet', function() {
      it('should call realmGroupsIdManagementPermissionsGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdManagementPermissionsGet
        //instance.realmGroupsIdManagementPermissionsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdManagementPermissionsPut', function() {
      it('should call realmGroupsIdManagementPermissionsPut successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdManagementPermissionsPut
        //instance.realmGroupsIdManagementPermissionsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdMembersGet', function() {
      it('should call realmGroupsIdMembersGet successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdMembersGet
        //instance.realmGroupsIdMembersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsIdPut', function() {
      it('should call realmGroupsIdPut successfully', function(done) {
        //uncomment below and update the code to test realmGroupsIdPut
        //instance.realmGroupsIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('realmGroupsPost', function() {
      it('should call realmGroupsPost successfully', function(done) {
        //uncomment below and update the code to test realmGroupsPost
        //instance.realmGroupsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
