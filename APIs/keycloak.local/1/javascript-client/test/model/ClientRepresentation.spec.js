/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.KeycloakAdminRestApi);
  }
}(this, function(expect, KeycloakAdminRestApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new KeycloakAdminRestApi.ClientRepresentation();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ClientRepresentation', function() {
    it('should create an instance of ClientRepresentation', function() {
      // uncomment below and update the code to test ClientRepresentation
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be.a(KeycloakAdminRestApi.ClientRepresentation);
    });

    it('should have the property access (base name: "access")', function() {
      // uncomment below and update the code to test the property access
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property adminUrl (base name: "adminUrl")', function() {
      // uncomment below and update the code to test the property adminUrl
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property alwaysDisplayInConsole (base name: "alwaysDisplayInConsole")', function() {
      // uncomment below and update the code to test the property alwaysDisplayInConsole
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property authenticationFlowBindingOverrides (base name: "authenticationFlowBindingOverrides")', function() {
      // uncomment below and update the code to test the property authenticationFlowBindingOverrides
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property authorizationServicesEnabled (base name: "authorizationServicesEnabled")', function() {
      // uncomment below and update the code to test the property authorizationServicesEnabled
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property authorizationSettings (base name: "authorizationSettings")', function() {
      // uncomment below and update the code to test the property authorizationSettings
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property baseUrl (base name: "baseUrl")', function() {
      // uncomment below and update the code to test the property baseUrl
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property bearerOnly (base name: "bearerOnly")', function() {
      // uncomment below and update the code to test the property bearerOnly
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property clientAuthenticatorType (base name: "clientAuthenticatorType")', function() {
      // uncomment below and update the code to test the property clientAuthenticatorType
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property clientId (base name: "clientId")', function() {
      // uncomment below and update the code to test the property clientId
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property consentRequired (base name: "consentRequired")', function() {
      // uncomment below and update the code to test the property consentRequired
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property defaultClientScopes (base name: "defaultClientScopes")', function() {
      // uncomment below and update the code to test the property defaultClientScopes
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property defaultRoles (base name: "defaultRoles")', function() {
      // uncomment below and update the code to test the property defaultRoles
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property directAccessGrantsEnabled (base name: "directAccessGrantsEnabled")', function() {
      // uncomment below and update the code to test the property directAccessGrantsEnabled
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property frontchannelLogout (base name: "frontchannelLogout")', function() {
      // uncomment below and update the code to test the property frontchannelLogout
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property fullScopeAllowed (base name: "fullScopeAllowed")', function() {
      // uncomment below and update the code to test the property fullScopeAllowed
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property implicitFlowEnabled (base name: "implicitFlowEnabled")', function() {
      // uncomment below and update the code to test the property implicitFlowEnabled
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property nodeReRegistrationTimeout (base name: "nodeReRegistrationTimeout")', function() {
      // uncomment below and update the code to test the property nodeReRegistrationTimeout
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property notBefore (base name: "notBefore")', function() {
      // uncomment below and update the code to test the property notBefore
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property optionalClientScopes (base name: "optionalClientScopes")', function() {
      // uncomment below and update the code to test the property optionalClientScopes
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property origin (base name: "origin")', function() {
      // uncomment below and update the code to test the property origin
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property protocolMappers (base name: "protocolMappers")', function() {
      // uncomment below and update the code to test the property protocolMappers
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property publicClient (base name: "publicClient")', function() {
      // uncomment below and update the code to test the property publicClient
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property redirectUris (base name: "redirectUris")', function() {
      // uncomment below and update the code to test the property redirectUris
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property registeredNodes (base name: "registeredNodes")', function() {
      // uncomment below and update the code to test the property registeredNodes
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property registrationAccessToken (base name: "registrationAccessToken")', function() {
      // uncomment below and update the code to test the property registrationAccessToken
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property rootUrl (base name: "rootUrl")', function() {
      // uncomment below and update the code to test the property rootUrl
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property secret (base name: "secret")', function() {
      // uncomment below and update the code to test the property secret
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property serviceAccountsEnabled (base name: "serviceAccountsEnabled")', function() {
      // uncomment below and update the code to test the property serviceAccountsEnabled
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property standardFlowEnabled (base name: "standardFlowEnabled")', function() {
      // uncomment below and update the code to test the property standardFlowEnabled
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property surrogateAuthRequired (base name: "surrogateAuthRequired")', function() {
      // uncomment below and update the code to test the property surrogateAuthRequired
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

    it('should have the property webOrigins (base name: "webOrigins")', function() {
      // uncomment below and update the code to test the property webOrigins
      //var instance = new KeycloakAdminRestApi.ClientRepresentation();
      //expect(instance).to.be();
    });

  });

}));
