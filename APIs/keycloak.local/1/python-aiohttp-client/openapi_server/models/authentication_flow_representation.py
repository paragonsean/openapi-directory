# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authentication_execution_export_representation import AuthenticationExecutionExportRepresentation
from openapi_server import util


class AuthenticationFlowRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alias: str=None, authentication_executions: List[AuthenticationExecutionExportRepresentation]=None, built_in: bool=None, description: str=None, id: str=None, provider_id: str=None, top_level: bool=None):
        """AuthenticationFlowRepresentation - a model defined in OpenAPI

        :param alias: The alias of this AuthenticationFlowRepresentation.
        :param authentication_executions: The authentication_executions of this AuthenticationFlowRepresentation.
        :param built_in: The built_in of this AuthenticationFlowRepresentation.
        :param description: The description of this AuthenticationFlowRepresentation.
        :param id: The id of this AuthenticationFlowRepresentation.
        :param provider_id: The provider_id of this AuthenticationFlowRepresentation.
        :param top_level: The top_level of this AuthenticationFlowRepresentation.
        """
        self.openapi_types = {
            'alias': str,
            'authentication_executions': List[AuthenticationExecutionExportRepresentation],
            'built_in': bool,
            'description': str,
            'id': str,
            'provider_id': str,
            'top_level': bool
        }

        self.attribute_map = {
            'alias': 'alias',
            'authentication_executions': 'authenticationExecutions',
            'built_in': 'builtIn',
            'description': 'description',
            'id': 'id',
            'provider_id': 'providerId',
            'top_level': 'topLevel'
        }

        self._alias = alias
        self._authentication_executions = authentication_executions
        self._built_in = built_in
        self._description = description
        self._id = id
        self._provider_id = provider_id
        self._top_level = top_level

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticationFlowRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticationFlowRepresentation of this AuthenticationFlowRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alias(self):
        """Gets the alias of this AuthenticationFlowRepresentation.


        :return: The alias of this AuthenticationFlowRepresentation.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this AuthenticationFlowRepresentation.


        :param alias: The alias of this AuthenticationFlowRepresentation.
        :type alias: str
        """

        self._alias = alias

    @property
    def authentication_executions(self):
        """Gets the authentication_executions of this AuthenticationFlowRepresentation.


        :return: The authentication_executions of this AuthenticationFlowRepresentation.
        :rtype: List[AuthenticationExecutionExportRepresentation]
        """
        return self._authentication_executions

    @authentication_executions.setter
    def authentication_executions(self, authentication_executions):
        """Sets the authentication_executions of this AuthenticationFlowRepresentation.


        :param authentication_executions: The authentication_executions of this AuthenticationFlowRepresentation.
        :type authentication_executions: List[AuthenticationExecutionExportRepresentation]
        """

        self._authentication_executions = authentication_executions

    @property
    def built_in(self):
        """Gets the built_in of this AuthenticationFlowRepresentation.


        :return: The built_in of this AuthenticationFlowRepresentation.
        :rtype: bool
        """
        return self._built_in

    @built_in.setter
    def built_in(self, built_in):
        """Sets the built_in of this AuthenticationFlowRepresentation.


        :param built_in: The built_in of this AuthenticationFlowRepresentation.
        :type built_in: bool
        """

        self._built_in = built_in

    @property
    def description(self):
        """Gets the description of this AuthenticationFlowRepresentation.


        :return: The description of this AuthenticationFlowRepresentation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this AuthenticationFlowRepresentation.


        :param description: The description of this AuthenticationFlowRepresentation.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this AuthenticationFlowRepresentation.


        :return: The id of this AuthenticationFlowRepresentation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AuthenticationFlowRepresentation.


        :param id: The id of this AuthenticationFlowRepresentation.
        :type id: str
        """

        self._id = id

    @property
    def provider_id(self):
        """Gets the provider_id of this AuthenticationFlowRepresentation.


        :return: The provider_id of this AuthenticationFlowRepresentation.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this AuthenticationFlowRepresentation.


        :param provider_id: The provider_id of this AuthenticationFlowRepresentation.
        :type provider_id: str
        """

        self._provider_id = provider_id

    @property
    def top_level(self):
        """Gets the top_level of this AuthenticationFlowRepresentation.


        :return: The top_level of this AuthenticationFlowRepresentation.
        :rtype: bool
        """
        return self._top_level

    @top_level.setter
    def top_level(self, top_level):
        """Sets the top_level of this AuthenticationFlowRepresentation.


        :param top_level: The top_level of this AuthenticationFlowRepresentation.
        :type top_level: bool
        """

        self._top_level = top_level
