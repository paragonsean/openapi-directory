# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyStoreConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: str=None, key_alias: str=None, key_password: str=None, realm_alias: str=None, realm_certificate: bool=None, store_password: str=None):
        """KeyStoreConfig - a model defined in OpenAPI

        :param format: The format of this KeyStoreConfig.
        :param key_alias: The key_alias of this KeyStoreConfig.
        :param key_password: The key_password of this KeyStoreConfig.
        :param realm_alias: The realm_alias of this KeyStoreConfig.
        :param realm_certificate: The realm_certificate of this KeyStoreConfig.
        :param store_password: The store_password of this KeyStoreConfig.
        """
        self.openapi_types = {
            'format': str,
            'key_alias': str,
            'key_password': str,
            'realm_alias': str,
            'realm_certificate': bool,
            'store_password': str
        }

        self.attribute_map = {
            'format': 'format',
            'key_alias': 'keyAlias',
            'key_password': 'keyPassword',
            'realm_alias': 'realmAlias',
            'realm_certificate': 'realmCertificate',
            'store_password': 'storePassword'
        }

        self._format = format
        self._key_alias = key_alias
        self._key_password = key_password
        self._realm_alias = realm_alias
        self._realm_certificate = realm_certificate
        self._store_password = store_password

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyStoreConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyStoreConfig of this KeyStoreConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this KeyStoreConfig.


        :return: The format of this KeyStoreConfig.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this KeyStoreConfig.


        :param format: The format of this KeyStoreConfig.
        :type format: str
        """

        self._format = format

    @property
    def key_alias(self):
        """Gets the key_alias of this KeyStoreConfig.


        :return: The key_alias of this KeyStoreConfig.
        :rtype: str
        """
        return self._key_alias

    @key_alias.setter
    def key_alias(self, key_alias):
        """Sets the key_alias of this KeyStoreConfig.


        :param key_alias: The key_alias of this KeyStoreConfig.
        :type key_alias: str
        """

        self._key_alias = key_alias

    @property
    def key_password(self):
        """Gets the key_password of this KeyStoreConfig.


        :return: The key_password of this KeyStoreConfig.
        :rtype: str
        """
        return self._key_password

    @key_password.setter
    def key_password(self, key_password):
        """Sets the key_password of this KeyStoreConfig.


        :param key_password: The key_password of this KeyStoreConfig.
        :type key_password: str
        """

        self._key_password = key_password

    @property
    def realm_alias(self):
        """Gets the realm_alias of this KeyStoreConfig.


        :return: The realm_alias of this KeyStoreConfig.
        :rtype: str
        """
        return self._realm_alias

    @realm_alias.setter
    def realm_alias(self, realm_alias):
        """Sets the realm_alias of this KeyStoreConfig.


        :param realm_alias: The realm_alias of this KeyStoreConfig.
        :type realm_alias: str
        """

        self._realm_alias = realm_alias

    @property
    def realm_certificate(self):
        """Gets the realm_certificate of this KeyStoreConfig.


        :return: The realm_certificate of this KeyStoreConfig.
        :rtype: bool
        """
        return self._realm_certificate

    @realm_certificate.setter
    def realm_certificate(self, realm_certificate):
        """Sets the realm_certificate of this KeyStoreConfig.


        :param realm_certificate: The realm_certificate of this KeyStoreConfig.
        :type realm_certificate: bool
        """

        self._realm_certificate = realm_certificate

    @property
    def store_password(self):
        """Gets the store_password of this KeyStoreConfig.


        :return: The store_password of this KeyStoreConfig.
        :rtype: str
        """
        return self._store_password

    @store_password.setter
    def store_password(self, store_password):
        """Sets the store_password of this KeyStoreConfig.


        :param store_password: The store_password of this KeyStoreConfig.
        :type store_password: str
        """

        self._store_password = store_password
