# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.config_property_representation import ConfigPropertyRepresentation
from openapi_server import util


class AuthenticatorConfigInfoRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, help_text: str=None, name: str=None, properties: List[ConfigPropertyRepresentation]=None, provider_id: str=None):
        """AuthenticatorConfigInfoRepresentation - a model defined in OpenAPI

        :param help_text: The help_text of this AuthenticatorConfigInfoRepresentation.
        :param name: The name of this AuthenticatorConfigInfoRepresentation.
        :param properties: The properties of this AuthenticatorConfigInfoRepresentation.
        :param provider_id: The provider_id of this AuthenticatorConfigInfoRepresentation.
        """
        self.openapi_types = {
            'help_text': str,
            'name': str,
            'properties': List[ConfigPropertyRepresentation],
            'provider_id': str
        }

        self.attribute_map = {
            'help_text': 'helpText',
            'name': 'name',
            'properties': 'properties',
            'provider_id': 'providerId'
        }

        self._help_text = help_text
        self._name = name
        self._properties = properties
        self._provider_id = provider_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthenticatorConfigInfoRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthenticatorConfigInfoRepresentation of this AuthenticatorConfigInfoRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def help_text(self):
        """Gets the help_text of this AuthenticatorConfigInfoRepresentation.


        :return: The help_text of this AuthenticatorConfigInfoRepresentation.
        :rtype: str
        """
        return self._help_text

    @help_text.setter
    def help_text(self, help_text):
        """Sets the help_text of this AuthenticatorConfigInfoRepresentation.


        :param help_text: The help_text of this AuthenticatorConfigInfoRepresentation.
        :type help_text: str
        """

        self._help_text = help_text

    @property
    def name(self):
        """Gets the name of this AuthenticatorConfigInfoRepresentation.


        :return: The name of this AuthenticatorConfigInfoRepresentation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AuthenticatorConfigInfoRepresentation.


        :param name: The name of this AuthenticatorConfigInfoRepresentation.
        :type name: str
        """

        self._name = name

    @property
    def properties(self):
        """Gets the properties of this AuthenticatorConfigInfoRepresentation.


        :return: The properties of this AuthenticatorConfigInfoRepresentation.
        :rtype: List[ConfigPropertyRepresentation]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this AuthenticatorConfigInfoRepresentation.


        :param properties: The properties of this AuthenticatorConfigInfoRepresentation.
        :type properties: List[ConfigPropertyRepresentation]
        """

        self._properties = properties

    @property
    def provider_id(self):
        """Gets the provider_id of this AuthenticatorConfigInfoRepresentation.


        :return: The provider_id of this AuthenticatorConfigInfoRepresentation.
        :rtype: str
        """
        return self._provider_id

    @provider_id.setter
    def provider_id(self, provider_id):
        """Sets the provider_id of this AuthenticatorConfigInfoRepresentation.


        :param provider_id: The provider_id of this AuthenticatorConfigInfoRepresentation.
        :type provider_id: str
        """

        self._provider_id = provider_id
