# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SpiInfoRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, internal: bool=None, providers: Dict[str, object]=None):
        """SpiInfoRepresentation - a model defined in OpenAPI

        :param internal: The internal of this SpiInfoRepresentation.
        :param providers: The providers of this SpiInfoRepresentation.
        """
        self.openapi_types = {
            'internal': bool,
            'providers': Dict[str, object]
        }

        self.attribute_map = {
            'internal': 'internal',
            'providers': 'providers'
        }

        self._internal = internal
        self._providers = providers

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SpiInfoRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SpiInfoRepresentation of this SpiInfoRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def internal(self):
        """Gets the internal of this SpiInfoRepresentation.


        :return: The internal of this SpiInfoRepresentation.
        :rtype: bool
        """
        return self._internal

    @internal.setter
    def internal(self, internal):
        """Sets the internal of this SpiInfoRepresentation.


        :param internal: The internal of this SpiInfoRepresentation.
        :type internal: bool
        """

        self._internal = internal

    @property
    def providers(self):
        """Gets the providers of this SpiInfoRepresentation.


        :return: The providers of this SpiInfoRepresentation.
        :rtype: Dict[str, object]
        """
        return self._providers

    @providers.setter
    def providers(self, providers):
        """Sets the providers of this SpiInfoRepresentation.


        :param providers: The providers of this SpiInfoRepresentation.
        :type providers: Dict[str, object]
        """

        self._providers = providers
