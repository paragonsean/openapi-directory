# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FederatedIdentityRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identity_provider: str=None, user_id: str=None, user_name: str=None):
        """FederatedIdentityRepresentation - a model defined in OpenAPI

        :param identity_provider: The identity_provider of this FederatedIdentityRepresentation.
        :param user_id: The user_id of this FederatedIdentityRepresentation.
        :param user_name: The user_name of this FederatedIdentityRepresentation.
        """
        self.openapi_types = {
            'identity_provider': str,
            'user_id': str,
            'user_name': str
        }

        self.attribute_map = {
            'identity_provider': 'identityProvider',
            'user_id': 'userId',
            'user_name': 'userName'
        }

        self._identity_provider = identity_provider
        self._user_id = user_id
        self._user_name = user_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FederatedIdentityRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FederatedIdentityRepresentation of this FederatedIdentityRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identity_provider(self):
        """Gets the identity_provider of this FederatedIdentityRepresentation.


        :return: The identity_provider of this FederatedIdentityRepresentation.
        :rtype: str
        """
        return self._identity_provider

    @identity_provider.setter
    def identity_provider(self, identity_provider):
        """Sets the identity_provider of this FederatedIdentityRepresentation.


        :param identity_provider: The identity_provider of this FederatedIdentityRepresentation.
        :type identity_provider: str
        """

        self._identity_provider = identity_provider

    @property
    def user_id(self):
        """Gets the user_id of this FederatedIdentityRepresentation.


        :return: The user_id of this FederatedIdentityRepresentation.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this FederatedIdentityRepresentation.


        :param user_id: The user_id of this FederatedIdentityRepresentation.
        :type user_id: str
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """Gets the user_name of this FederatedIdentityRepresentation.


        :return: The user_name of this FederatedIdentityRepresentation.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """Sets the user_name of this FederatedIdentityRepresentation.


        :param user_name: The user_name of this FederatedIdentityRepresentation.
        :type user_name: str
        """

        self._user_name = user_name
