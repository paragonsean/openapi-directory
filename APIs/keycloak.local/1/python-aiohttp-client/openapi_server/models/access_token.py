# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.access_token_access import AccessTokenAccess
from openapi_server.models.access_token_authorization import AccessTokenAuthorization
from openapi_server.models.access_token_cert_conf import AccessTokenCertConf
from openapi_server.models.address_claim_set import AddressClaimSet
from openapi_server import util


class AccessToken(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acr: str=None, address: AddressClaimSet=None, allowed_origins: List[str]=None, at_hash: str=None, auth_time: int=None, authorization: AccessTokenAuthorization=None, azp: str=None, birthdate: str=None, c_hash: str=None, category: str=None, claims_locales: str=None, cnf: AccessTokenCertConf=None, email: str=None, email_verified: bool=None, exp: int=None, family_name: str=None, gender: str=None, given_name: str=None, iat: int=None, iss: str=None, jti: str=None, locale: str=None, middle_name: str=None, name: str=None, nbf: int=None, nickname: str=None, nonce: str=None, other_claims: Dict[str, object]=None, phone_number: str=None, phone_number_verified: bool=None, picture: str=None, preferred_username: str=None, profile: str=None, realm_access: AccessTokenAccess=None, s_hash: str=None, scope: str=None, session_state: str=None, sub: str=None, trusted_certs: List[str]=None, typ: str=None, updated_at: int=None, website: str=None, zoneinfo: str=None):
        """AccessToken - a model defined in OpenAPI

        :param acr: The acr of this AccessToken.
        :param address: The address of this AccessToken.
        :param allowed_origins: The allowed_origins of this AccessToken.
        :param at_hash: The at_hash of this AccessToken.
        :param auth_time: The auth_time of this AccessToken.
        :param authorization: The authorization of this AccessToken.
        :param azp: The azp of this AccessToken.
        :param birthdate: The birthdate of this AccessToken.
        :param c_hash: The c_hash of this AccessToken.
        :param category: The category of this AccessToken.
        :param claims_locales: The claims_locales of this AccessToken.
        :param cnf: The cnf of this AccessToken.
        :param email: The email of this AccessToken.
        :param email_verified: The email_verified of this AccessToken.
        :param exp: The exp of this AccessToken.
        :param family_name: The family_name of this AccessToken.
        :param gender: The gender of this AccessToken.
        :param given_name: The given_name of this AccessToken.
        :param iat: The iat of this AccessToken.
        :param iss: The iss of this AccessToken.
        :param jti: The jti of this AccessToken.
        :param locale: The locale of this AccessToken.
        :param middle_name: The middle_name of this AccessToken.
        :param name: The name of this AccessToken.
        :param nbf: The nbf of this AccessToken.
        :param nickname: The nickname of this AccessToken.
        :param nonce: The nonce of this AccessToken.
        :param other_claims: The other_claims of this AccessToken.
        :param phone_number: The phone_number of this AccessToken.
        :param phone_number_verified: The phone_number_verified of this AccessToken.
        :param picture: The picture of this AccessToken.
        :param preferred_username: The preferred_username of this AccessToken.
        :param profile: The profile of this AccessToken.
        :param realm_access: The realm_access of this AccessToken.
        :param s_hash: The s_hash of this AccessToken.
        :param scope: The scope of this AccessToken.
        :param session_state: The session_state of this AccessToken.
        :param sub: The sub of this AccessToken.
        :param trusted_certs: The trusted_certs of this AccessToken.
        :param typ: The typ of this AccessToken.
        :param updated_at: The updated_at of this AccessToken.
        :param website: The website of this AccessToken.
        :param zoneinfo: The zoneinfo of this AccessToken.
        """
        self.openapi_types = {
            'acr': str,
            'address': AddressClaimSet,
            'allowed_origins': List[str],
            'at_hash': str,
            'auth_time': int,
            'authorization': AccessTokenAuthorization,
            'azp': str,
            'birthdate': str,
            'c_hash': str,
            'category': str,
            'claims_locales': str,
            'cnf': AccessTokenCertConf,
            'email': str,
            'email_verified': bool,
            'exp': int,
            'family_name': str,
            'gender': str,
            'given_name': str,
            'iat': int,
            'iss': str,
            'jti': str,
            'locale': str,
            'middle_name': str,
            'name': str,
            'nbf': int,
            'nickname': str,
            'nonce': str,
            'other_claims': Dict[str, object],
            'phone_number': str,
            'phone_number_verified': bool,
            'picture': str,
            'preferred_username': str,
            'profile': str,
            'realm_access': AccessTokenAccess,
            's_hash': str,
            'scope': str,
            'session_state': str,
            'sub': str,
            'trusted_certs': List[str],
            'typ': str,
            'updated_at': int,
            'website': str,
            'zoneinfo': str
        }

        self.attribute_map = {
            'acr': 'acr',
            'address': 'address',
            'allowed_origins': 'allowed-origins',
            'at_hash': 'at_hash',
            'auth_time': 'auth_time',
            'authorization': 'authorization',
            'azp': 'azp',
            'birthdate': 'birthdate',
            'c_hash': 'c_hash',
            'category': 'category',
            'claims_locales': 'claims_locales',
            'cnf': 'cnf',
            'email': 'email',
            'email_verified': 'email_verified',
            'exp': 'exp',
            'family_name': 'family_name',
            'gender': 'gender',
            'given_name': 'given_name',
            'iat': 'iat',
            'iss': 'iss',
            'jti': 'jti',
            'locale': 'locale',
            'middle_name': 'middle_name',
            'name': 'name',
            'nbf': 'nbf',
            'nickname': 'nickname',
            'nonce': 'nonce',
            'other_claims': 'otherClaims',
            'phone_number': 'phone_number',
            'phone_number_verified': 'phone_number_verified',
            'picture': 'picture',
            'preferred_username': 'preferred_username',
            'profile': 'profile',
            'realm_access': 'realm_access',
            's_hash': 's_hash',
            'scope': 'scope',
            'session_state': 'session_state',
            'sub': 'sub',
            'trusted_certs': 'trusted-certs',
            'typ': 'typ',
            'updated_at': 'updated_at',
            'website': 'website',
            'zoneinfo': 'zoneinfo'
        }

        self._acr = acr
        self._address = address
        self._allowed_origins = allowed_origins
        self._at_hash = at_hash
        self._auth_time = auth_time
        self._authorization = authorization
        self._azp = azp
        self._birthdate = birthdate
        self._c_hash = c_hash
        self._category = category
        self._claims_locales = claims_locales
        self._cnf = cnf
        self._email = email
        self._email_verified = email_verified
        self._exp = exp
        self._family_name = family_name
        self._gender = gender
        self._given_name = given_name
        self._iat = iat
        self._iss = iss
        self._jti = jti
        self._locale = locale
        self._middle_name = middle_name
        self._name = name
        self._nbf = nbf
        self._nickname = nickname
        self._nonce = nonce
        self._other_claims = other_claims
        self._phone_number = phone_number
        self._phone_number_verified = phone_number_verified
        self._picture = picture
        self._preferred_username = preferred_username
        self._profile = profile
        self._realm_access = realm_access
        self._s_hash = s_hash
        self._scope = scope
        self._session_state = session_state
        self._sub = sub
        self._trusted_certs = trusted_certs
        self._typ = typ
        self._updated_at = updated_at
        self._website = website
        self._zoneinfo = zoneinfo

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccessToken':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccessToken of this AccessToken.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acr(self):
        """Gets the acr of this AccessToken.


        :return: The acr of this AccessToken.
        :rtype: str
        """
        return self._acr

    @acr.setter
    def acr(self, acr):
        """Sets the acr of this AccessToken.


        :param acr: The acr of this AccessToken.
        :type acr: str
        """

        self._acr = acr

    @property
    def address(self):
        """Gets the address of this AccessToken.


        :return: The address of this AccessToken.
        :rtype: AddressClaimSet
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this AccessToken.


        :param address: The address of this AccessToken.
        :type address: AddressClaimSet
        """

        self._address = address

    @property
    def allowed_origins(self):
        """Gets the allowed_origins of this AccessToken.


        :return: The allowed_origins of this AccessToken.
        :rtype: List[str]
        """
        return self._allowed_origins

    @allowed_origins.setter
    def allowed_origins(self, allowed_origins):
        """Sets the allowed_origins of this AccessToken.


        :param allowed_origins: The allowed_origins of this AccessToken.
        :type allowed_origins: List[str]
        """

        self._allowed_origins = allowed_origins

    @property
    def at_hash(self):
        """Gets the at_hash of this AccessToken.


        :return: The at_hash of this AccessToken.
        :rtype: str
        """
        return self._at_hash

    @at_hash.setter
    def at_hash(self, at_hash):
        """Sets the at_hash of this AccessToken.


        :param at_hash: The at_hash of this AccessToken.
        :type at_hash: str
        """

        self._at_hash = at_hash

    @property
    def auth_time(self):
        """Gets the auth_time of this AccessToken.


        :return: The auth_time of this AccessToken.
        :rtype: int
        """
        return self._auth_time

    @auth_time.setter
    def auth_time(self, auth_time):
        """Sets the auth_time of this AccessToken.


        :param auth_time: The auth_time of this AccessToken.
        :type auth_time: int
        """

        self._auth_time = auth_time

    @property
    def authorization(self):
        """Gets the authorization of this AccessToken.


        :return: The authorization of this AccessToken.
        :rtype: AccessTokenAuthorization
        """
        return self._authorization

    @authorization.setter
    def authorization(self, authorization):
        """Sets the authorization of this AccessToken.


        :param authorization: The authorization of this AccessToken.
        :type authorization: AccessTokenAuthorization
        """

        self._authorization = authorization

    @property
    def azp(self):
        """Gets the azp of this AccessToken.


        :return: The azp of this AccessToken.
        :rtype: str
        """
        return self._azp

    @azp.setter
    def azp(self, azp):
        """Sets the azp of this AccessToken.


        :param azp: The azp of this AccessToken.
        :type azp: str
        """

        self._azp = azp

    @property
    def birthdate(self):
        """Gets the birthdate of this AccessToken.


        :return: The birthdate of this AccessToken.
        :rtype: str
        """
        return self._birthdate

    @birthdate.setter
    def birthdate(self, birthdate):
        """Sets the birthdate of this AccessToken.


        :param birthdate: The birthdate of this AccessToken.
        :type birthdate: str
        """

        self._birthdate = birthdate

    @property
    def c_hash(self):
        """Gets the c_hash of this AccessToken.


        :return: The c_hash of this AccessToken.
        :rtype: str
        """
        return self._c_hash

    @c_hash.setter
    def c_hash(self, c_hash):
        """Sets the c_hash of this AccessToken.


        :param c_hash: The c_hash of this AccessToken.
        :type c_hash: str
        """

        self._c_hash = c_hash

    @property
    def category(self):
        """Gets the category of this AccessToken.


        :return: The category of this AccessToken.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this AccessToken.


        :param category: The category of this AccessToken.
        :type category: str
        """
        allowed_values = ["INTERNAL", "ACCESS", "ID", "ADMIN", "USERINFO"]  # noqa: E501
        if category not in allowed_values:
            raise ValueError(
                "Invalid value for `category` ({0}), must be one of {1}"
                .format(category, allowed_values)
            )

        self._category = category

    @property
    def claims_locales(self):
        """Gets the claims_locales of this AccessToken.


        :return: The claims_locales of this AccessToken.
        :rtype: str
        """
        return self._claims_locales

    @claims_locales.setter
    def claims_locales(self, claims_locales):
        """Sets the claims_locales of this AccessToken.


        :param claims_locales: The claims_locales of this AccessToken.
        :type claims_locales: str
        """

        self._claims_locales = claims_locales

    @property
    def cnf(self):
        """Gets the cnf of this AccessToken.


        :return: The cnf of this AccessToken.
        :rtype: AccessTokenCertConf
        """
        return self._cnf

    @cnf.setter
    def cnf(self, cnf):
        """Sets the cnf of this AccessToken.


        :param cnf: The cnf of this AccessToken.
        :type cnf: AccessTokenCertConf
        """

        self._cnf = cnf

    @property
    def email(self):
        """Gets the email of this AccessToken.


        :return: The email of this AccessToken.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this AccessToken.


        :param email: The email of this AccessToken.
        :type email: str
        """

        self._email = email

    @property
    def email_verified(self):
        """Gets the email_verified of this AccessToken.


        :return: The email_verified of this AccessToken.
        :rtype: bool
        """
        return self._email_verified

    @email_verified.setter
    def email_verified(self, email_verified):
        """Sets the email_verified of this AccessToken.


        :param email_verified: The email_verified of this AccessToken.
        :type email_verified: bool
        """

        self._email_verified = email_verified

    @property
    def exp(self):
        """Gets the exp of this AccessToken.


        :return: The exp of this AccessToken.
        :rtype: int
        """
        return self._exp

    @exp.setter
    def exp(self, exp):
        """Sets the exp of this AccessToken.


        :param exp: The exp of this AccessToken.
        :type exp: int
        """

        self._exp = exp

    @property
    def family_name(self):
        """Gets the family_name of this AccessToken.


        :return: The family_name of this AccessToken.
        :rtype: str
        """
        return self._family_name

    @family_name.setter
    def family_name(self, family_name):
        """Sets the family_name of this AccessToken.


        :param family_name: The family_name of this AccessToken.
        :type family_name: str
        """

        self._family_name = family_name

    @property
    def gender(self):
        """Gets the gender of this AccessToken.


        :return: The gender of this AccessToken.
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this AccessToken.


        :param gender: The gender of this AccessToken.
        :type gender: str
        """

        self._gender = gender

    @property
    def given_name(self):
        """Gets the given_name of this AccessToken.


        :return: The given_name of this AccessToken.
        :rtype: str
        """
        return self._given_name

    @given_name.setter
    def given_name(self, given_name):
        """Sets the given_name of this AccessToken.


        :param given_name: The given_name of this AccessToken.
        :type given_name: str
        """

        self._given_name = given_name

    @property
    def iat(self):
        """Gets the iat of this AccessToken.


        :return: The iat of this AccessToken.
        :rtype: int
        """
        return self._iat

    @iat.setter
    def iat(self, iat):
        """Sets the iat of this AccessToken.


        :param iat: The iat of this AccessToken.
        :type iat: int
        """

        self._iat = iat

    @property
    def iss(self):
        """Gets the iss of this AccessToken.


        :return: The iss of this AccessToken.
        :rtype: str
        """
        return self._iss

    @iss.setter
    def iss(self, iss):
        """Sets the iss of this AccessToken.


        :param iss: The iss of this AccessToken.
        :type iss: str
        """

        self._iss = iss

    @property
    def jti(self):
        """Gets the jti of this AccessToken.


        :return: The jti of this AccessToken.
        :rtype: str
        """
        return self._jti

    @jti.setter
    def jti(self, jti):
        """Sets the jti of this AccessToken.


        :param jti: The jti of this AccessToken.
        :type jti: str
        """

        self._jti = jti

    @property
    def locale(self):
        """Gets the locale of this AccessToken.


        :return: The locale of this AccessToken.
        :rtype: str
        """
        return self._locale

    @locale.setter
    def locale(self, locale):
        """Sets the locale of this AccessToken.


        :param locale: The locale of this AccessToken.
        :type locale: str
        """

        self._locale = locale

    @property
    def middle_name(self):
        """Gets the middle_name of this AccessToken.


        :return: The middle_name of this AccessToken.
        :rtype: str
        """
        return self._middle_name

    @middle_name.setter
    def middle_name(self, middle_name):
        """Sets the middle_name of this AccessToken.


        :param middle_name: The middle_name of this AccessToken.
        :type middle_name: str
        """

        self._middle_name = middle_name

    @property
    def name(self):
        """Gets the name of this AccessToken.


        :return: The name of this AccessToken.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AccessToken.


        :param name: The name of this AccessToken.
        :type name: str
        """

        self._name = name

    @property
    def nbf(self):
        """Gets the nbf of this AccessToken.


        :return: The nbf of this AccessToken.
        :rtype: int
        """
        return self._nbf

    @nbf.setter
    def nbf(self, nbf):
        """Sets the nbf of this AccessToken.


        :param nbf: The nbf of this AccessToken.
        :type nbf: int
        """

        self._nbf = nbf

    @property
    def nickname(self):
        """Gets the nickname of this AccessToken.


        :return: The nickname of this AccessToken.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this AccessToken.


        :param nickname: The nickname of this AccessToken.
        :type nickname: str
        """

        self._nickname = nickname

    @property
    def nonce(self):
        """Gets the nonce of this AccessToken.


        :return: The nonce of this AccessToken.
        :rtype: str
        """
        return self._nonce

    @nonce.setter
    def nonce(self, nonce):
        """Sets the nonce of this AccessToken.


        :param nonce: The nonce of this AccessToken.
        :type nonce: str
        """

        self._nonce = nonce

    @property
    def other_claims(self):
        """Gets the other_claims of this AccessToken.


        :return: The other_claims of this AccessToken.
        :rtype: Dict[str, object]
        """
        return self._other_claims

    @other_claims.setter
    def other_claims(self, other_claims):
        """Sets the other_claims of this AccessToken.


        :param other_claims: The other_claims of this AccessToken.
        :type other_claims: Dict[str, object]
        """

        self._other_claims = other_claims

    @property
    def phone_number(self):
        """Gets the phone_number of this AccessToken.


        :return: The phone_number of this AccessToken.
        :rtype: str
        """
        return self._phone_number

    @phone_number.setter
    def phone_number(self, phone_number):
        """Sets the phone_number of this AccessToken.


        :param phone_number: The phone_number of this AccessToken.
        :type phone_number: str
        """

        self._phone_number = phone_number

    @property
    def phone_number_verified(self):
        """Gets the phone_number_verified of this AccessToken.


        :return: The phone_number_verified of this AccessToken.
        :rtype: bool
        """
        return self._phone_number_verified

    @phone_number_verified.setter
    def phone_number_verified(self, phone_number_verified):
        """Sets the phone_number_verified of this AccessToken.


        :param phone_number_verified: The phone_number_verified of this AccessToken.
        :type phone_number_verified: bool
        """

        self._phone_number_verified = phone_number_verified

    @property
    def picture(self):
        """Gets the picture of this AccessToken.


        :return: The picture of this AccessToken.
        :rtype: str
        """
        return self._picture

    @picture.setter
    def picture(self, picture):
        """Sets the picture of this AccessToken.


        :param picture: The picture of this AccessToken.
        :type picture: str
        """

        self._picture = picture

    @property
    def preferred_username(self):
        """Gets the preferred_username of this AccessToken.


        :return: The preferred_username of this AccessToken.
        :rtype: str
        """
        return self._preferred_username

    @preferred_username.setter
    def preferred_username(self, preferred_username):
        """Sets the preferred_username of this AccessToken.


        :param preferred_username: The preferred_username of this AccessToken.
        :type preferred_username: str
        """

        self._preferred_username = preferred_username

    @property
    def profile(self):
        """Gets the profile of this AccessToken.


        :return: The profile of this AccessToken.
        :rtype: str
        """
        return self._profile

    @profile.setter
    def profile(self, profile):
        """Sets the profile of this AccessToken.


        :param profile: The profile of this AccessToken.
        :type profile: str
        """

        self._profile = profile

    @property
    def realm_access(self):
        """Gets the realm_access of this AccessToken.


        :return: The realm_access of this AccessToken.
        :rtype: AccessTokenAccess
        """
        return self._realm_access

    @realm_access.setter
    def realm_access(self, realm_access):
        """Sets the realm_access of this AccessToken.


        :param realm_access: The realm_access of this AccessToken.
        :type realm_access: AccessTokenAccess
        """

        self._realm_access = realm_access

    @property
    def s_hash(self):
        """Gets the s_hash of this AccessToken.


        :return: The s_hash of this AccessToken.
        :rtype: str
        """
        return self._s_hash

    @s_hash.setter
    def s_hash(self, s_hash):
        """Sets the s_hash of this AccessToken.


        :param s_hash: The s_hash of this AccessToken.
        :type s_hash: str
        """

        self._s_hash = s_hash

    @property
    def scope(self):
        """Gets the scope of this AccessToken.


        :return: The scope of this AccessToken.
        :rtype: str
        """
        return self._scope

    @scope.setter
    def scope(self, scope):
        """Sets the scope of this AccessToken.


        :param scope: The scope of this AccessToken.
        :type scope: str
        """

        self._scope = scope

    @property
    def session_state(self):
        """Gets the session_state of this AccessToken.


        :return: The session_state of this AccessToken.
        :rtype: str
        """
        return self._session_state

    @session_state.setter
    def session_state(self, session_state):
        """Sets the session_state of this AccessToken.


        :param session_state: The session_state of this AccessToken.
        :type session_state: str
        """

        self._session_state = session_state

    @property
    def sub(self):
        """Gets the sub of this AccessToken.


        :return: The sub of this AccessToken.
        :rtype: str
        """
        return self._sub

    @sub.setter
    def sub(self, sub):
        """Sets the sub of this AccessToken.


        :param sub: The sub of this AccessToken.
        :type sub: str
        """

        self._sub = sub

    @property
    def trusted_certs(self):
        """Gets the trusted_certs of this AccessToken.


        :return: The trusted_certs of this AccessToken.
        :rtype: List[str]
        """
        return self._trusted_certs

    @trusted_certs.setter
    def trusted_certs(self, trusted_certs):
        """Sets the trusted_certs of this AccessToken.


        :param trusted_certs: The trusted_certs of this AccessToken.
        :type trusted_certs: List[str]
        """

        self._trusted_certs = trusted_certs

    @property
    def typ(self):
        """Gets the typ of this AccessToken.


        :return: The typ of this AccessToken.
        :rtype: str
        """
        return self._typ

    @typ.setter
    def typ(self, typ):
        """Sets the typ of this AccessToken.


        :param typ: The typ of this AccessToken.
        :type typ: str
        """

        self._typ = typ

    @property
    def updated_at(self):
        """Gets the updated_at of this AccessToken.


        :return: The updated_at of this AccessToken.
        :rtype: int
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this AccessToken.


        :param updated_at: The updated_at of this AccessToken.
        :type updated_at: int
        """

        self._updated_at = updated_at

    @property
    def website(self):
        """Gets the website of this AccessToken.


        :return: The website of this AccessToken.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this AccessToken.


        :param website: The website of this AccessToken.
        :type website: str
        """

        self._website = website

    @property
    def zoneinfo(self):
        """Gets the zoneinfo of this AccessToken.


        :return: The zoneinfo of this AccessToken.
        :rtype: str
        """
        return self._zoneinfo

    @zoneinfo.setter
    def zoneinfo(self, zoneinfo):
        """Sets the zoneinfo of this AccessToken.


        :param zoneinfo: The zoneinfo of this AccessToken.
        :type zoneinfo: str
        """

        self._zoneinfo = zoneinfo
