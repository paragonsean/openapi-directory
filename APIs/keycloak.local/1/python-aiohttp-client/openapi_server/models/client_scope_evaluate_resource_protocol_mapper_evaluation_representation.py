# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container_id: str=None, container_name: str=None, container_type: str=None, mapper_id: str=None, mapper_name: str=None, protocol_mapper: str=None):
        """ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation - a model defined in OpenAPI

        :param container_id: The container_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :param container_name: The container_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :param container_type: The container_type of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :param mapper_id: The mapper_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :param mapper_name: The mapper_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :param protocol_mapper: The protocol_mapper of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        """
        self.openapi_types = {
            'container_id': str,
            'container_name': str,
            'container_type': str,
            'mapper_id': str,
            'mapper_name': str,
            'protocol_mapper': str
        }

        self.attribute_map = {
            'container_id': 'containerId',
            'container_name': 'containerName',
            'container_type': 'containerType',
            'mapper_id': 'mapperId',
            'mapper_name': 'mapperName',
            'protocol_mapper': 'protocolMapper'
        }

        self._container_id = container_id
        self._container_name = container_name
        self._container_type = container_type
        self._mapper_id = mapper_id
        self._mapper_name = mapper_name
        self._protocol_mapper = protocol_mapper

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClientScopeEvaluateResource-ProtocolMapperEvaluationRepresentation of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container_id(self):
        """Gets the container_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :return: The container_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :rtype: str
        """
        return self._container_id

    @container_id.setter
    def container_id(self, container_id):
        """Sets the container_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :param container_id: The container_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :type container_id: str
        """

        self._container_id = container_id

    @property
    def container_name(self):
        """Gets the container_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :return: The container_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :rtype: str
        """
        return self._container_name

    @container_name.setter
    def container_name(self, container_name):
        """Sets the container_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :param container_name: The container_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :type container_name: str
        """

        self._container_name = container_name

    @property
    def container_type(self):
        """Gets the container_type of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :return: The container_type of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :rtype: str
        """
        return self._container_type

    @container_type.setter
    def container_type(self, container_type):
        """Sets the container_type of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :param container_type: The container_type of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :type container_type: str
        """

        self._container_type = container_type

    @property
    def mapper_id(self):
        """Gets the mapper_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :return: The mapper_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :rtype: str
        """
        return self._mapper_id

    @mapper_id.setter
    def mapper_id(self, mapper_id):
        """Sets the mapper_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :param mapper_id: The mapper_id of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :type mapper_id: str
        """

        self._mapper_id = mapper_id

    @property
    def mapper_name(self):
        """Gets the mapper_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :return: The mapper_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :rtype: str
        """
        return self._mapper_name

    @mapper_name.setter
    def mapper_name(self, mapper_name):
        """Sets the mapper_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :param mapper_name: The mapper_name of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :type mapper_name: str
        """

        self._mapper_name = mapper_name

    @property
    def protocol_mapper(self):
        """Gets the protocol_mapper of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :return: The protocol_mapper of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :rtype: str
        """
        return self._protocol_mapper

    @protocol_mapper.setter
    def protocol_mapper(self, protocol_mapper):
        """Sets the protocol_mapper of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.


        :param protocol_mapper: The protocol_mapper of this ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.
        :type protocol_mapper: str
        """

        self._protocol_mapper = protocol_mapper
