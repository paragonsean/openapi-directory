# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.role_representation import RoleRepresentation
from openapi_server import util


class MappingsRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_mappings: Dict[str, object]=None, realm_mappings: List[RoleRepresentation]=None):
        """MappingsRepresentation - a model defined in OpenAPI

        :param client_mappings: The client_mappings of this MappingsRepresentation.
        :param realm_mappings: The realm_mappings of this MappingsRepresentation.
        """
        self.openapi_types = {
            'client_mappings': Dict[str, object],
            'realm_mappings': List[RoleRepresentation]
        }

        self.attribute_map = {
            'client_mappings': 'clientMappings',
            'realm_mappings': 'realmMappings'
        }

        self._client_mappings = client_mappings
        self._realm_mappings = realm_mappings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MappingsRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MappingsRepresentation of this MappingsRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_mappings(self):
        """Gets the client_mappings of this MappingsRepresentation.


        :return: The client_mappings of this MappingsRepresentation.
        :rtype: Dict[str, object]
        """
        return self._client_mappings

    @client_mappings.setter
    def client_mappings(self, client_mappings):
        """Sets the client_mappings of this MappingsRepresentation.


        :param client_mappings: The client_mappings of this MappingsRepresentation.
        :type client_mappings: Dict[str, object]
        """

        self._client_mappings = client_mappings

    @property
    def realm_mappings(self):
        """Gets the realm_mappings of this MappingsRepresentation.


        :return: The realm_mappings of this MappingsRepresentation.
        :rtype: List[RoleRepresentation]
        """
        return self._realm_mappings

    @realm_mappings.setter
    def realm_mappings(self, realm_mappings):
        """Sets the realm_mappings of this MappingsRepresentation.


        :param realm_mappings: The realm_mappings of this MappingsRepresentation.
        :type realm_mappings: List[RoleRepresentation]
        """

        self._realm_mappings = realm_mappings
