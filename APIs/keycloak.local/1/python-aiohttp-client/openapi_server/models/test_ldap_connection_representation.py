# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestLdapConnectionRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action: str=None, bind_credential: str=None, bind_dn: str=None, component_id: str=None, connection_timeout: str=None, connection_url: str=None, start_tls: str=None, use_truststore_spi: str=None):
        """TestLdapConnectionRepresentation - a model defined in OpenAPI

        :param action: The action of this TestLdapConnectionRepresentation.
        :param bind_credential: The bind_credential of this TestLdapConnectionRepresentation.
        :param bind_dn: The bind_dn of this TestLdapConnectionRepresentation.
        :param component_id: The component_id of this TestLdapConnectionRepresentation.
        :param connection_timeout: The connection_timeout of this TestLdapConnectionRepresentation.
        :param connection_url: The connection_url of this TestLdapConnectionRepresentation.
        :param start_tls: The start_tls of this TestLdapConnectionRepresentation.
        :param use_truststore_spi: The use_truststore_spi of this TestLdapConnectionRepresentation.
        """
        self.openapi_types = {
            'action': str,
            'bind_credential': str,
            'bind_dn': str,
            'component_id': str,
            'connection_timeout': str,
            'connection_url': str,
            'start_tls': str,
            'use_truststore_spi': str
        }

        self.attribute_map = {
            'action': 'action',
            'bind_credential': 'bindCredential',
            'bind_dn': 'bindDn',
            'component_id': 'componentId',
            'connection_timeout': 'connectionTimeout',
            'connection_url': 'connectionUrl',
            'start_tls': 'startTls',
            'use_truststore_spi': 'useTruststoreSpi'
        }

        self._action = action
        self._bind_credential = bind_credential
        self._bind_dn = bind_dn
        self._component_id = component_id
        self._connection_timeout = connection_timeout
        self._connection_url = connection_url
        self._start_tls = start_tls
        self._use_truststore_spi = use_truststore_spi

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestLdapConnectionRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestLdapConnectionRepresentation of this TestLdapConnectionRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action(self):
        """Gets the action of this TestLdapConnectionRepresentation.


        :return: The action of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this TestLdapConnectionRepresentation.


        :param action: The action of this TestLdapConnectionRepresentation.
        :type action: str
        """

        self._action = action

    @property
    def bind_credential(self):
        """Gets the bind_credential of this TestLdapConnectionRepresentation.


        :return: The bind_credential of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._bind_credential

    @bind_credential.setter
    def bind_credential(self, bind_credential):
        """Sets the bind_credential of this TestLdapConnectionRepresentation.


        :param bind_credential: The bind_credential of this TestLdapConnectionRepresentation.
        :type bind_credential: str
        """

        self._bind_credential = bind_credential

    @property
    def bind_dn(self):
        """Gets the bind_dn of this TestLdapConnectionRepresentation.


        :return: The bind_dn of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._bind_dn

    @bind_dn.setter
    def bind_dn(self, bind_dn):
        """Sets the bind_dn of this TestLdapConnectionRepresentation.


        :param bind_dn: The bind_dn of this TestLdapConnectionRepresentation.
        :type bind_dn: str
        """

        self._bind_dn = bind_dn

    @property
    def component_id(self):
        """Gets the component_id of this TestLdapConnectionRepresentation.


        :return: The component_id of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._component_id

    @component_id.setter
    def component_id(self, component_id):
        """Sets the component_id of this TestLdapConnectionRepresentation.


        :param component_id: The component_id of this TestLdapConnectionRepresentation.
        :type component_id: str
        """

        self._component_id = component_id

    @property
    def connection_timeout(self):
        """Gets the connection_timeout of this TestLdapConnectionRepresentation.


        :return: The connection_timeout of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._connection_timeout

    @connection_timeout.setter
    def connection_timeout(self, connection_timeout):
        """Sets the connection_timeout of this TestLdapConnectionRepresentation.


        :param connection_timeout: The connection_timeout of this TestLdapConnectionRepresentation.
        :type connection_timeout: str
        """

        self._connection_timeout = connection_timeout

    @property
    def connection_url(self):
        """Gets the connection_url of this TestLdapConnectionRepresentation.


        :return: The connection_url of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._connection_url

    @connection_url.setter
    def connection_url(self, connection_url):
        """Sets the connection_url of this TestLdapConnectionRepresentation.


        :param connection_url: The connection_url of this TestLdapConnectionRepresentation.
        :type connection_url: str
        """

        self._connection_url = connection_url

    @property
    def start_tls(self):
        """Gets the start_tls of this TestLdapConnectionRepresentation.


        :return: The start_tls of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._start_tls

    @start_tls.setter
    def start_tls(self, start_tls):
        """Sets the start_tls of this TestLdapConnectionRepresentation.


        :param start_tls: The start_tls of this TestLdapConnectionRepresentation.
        :type start_tls: str
        """

        self._start_tls = start_tls

    @property
    def use_truststore_spi(self):
        """Gets the use_truststore_spi of this TestLdapConnectionRepresentation.


        :return: The use_truststore_spi of this TestLdapConnectionRepresentation.
        :rtype: str
        """
        return self._use_truststore_spi

    @use_truststore_spi.setter
    def use_truststore_spi(self, use_truststore_spi):
        """Sets the use_truststore_spi of this TestLdapConnectionRepresentation.


        :param use_truststore_spi: The use_truststore_spi of this TestLdapConnectionRepresentation.
        :type use_truststore_spi: str
        """

        self._use_truststore_spi = use_truststore_spi
