# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProtocolMapperRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: Dict[str, object]=None, id: str=None, name: str=None, protocol: str=None, protocol_mapper: str=None):
        """ProtocolMapperRepresentation - a model defined in OpenAPI

        :param config: The config of this ProtocolMapperRepresentation.
        :param id: The id of this ProtocolMapperRepresentation.
        :param name: The name of this ProtocolMapperRepresentation.
        :param protocol: The protocol of this ProtocolMapperRepresentation.
        :param protocol_mapper: The protocol_mapper of this ProtocolMapperRepresentation.
        """
        self.openapi_types = {
            'config': Dict[str, object],
            'id': str,
            'name': str,
            'protocol': str,
            'protocol_mapper': str
        }

        self.attribute_map = {
            'config': 'config',
            'id': 'id',
            'name': 'name',
            'protocol': 'protocol',
            'protocol_mapper': 'protocolMapper'
        }

        self._config = config
        self._id = id
        self._name = name
        self._protocol = protocol
        self._protocol_mapper = protocol_mapper

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProtocolMapperRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProtocolMapperRepresentation of this ProtocolMapperRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this ProtocolMapperRepresentation.


        :return: The config of this ProtocolMapperRepresentation.
        :rtype: Dict[str, object]
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this ProtocolMapperRepresentation.


        :param config: The config of this ProtocolMapperRepresentation.
        :type config: Dict[str, object]
        """

        self._config = config

    @property
    def id(self):
        """Gets the id of this ProtocolMapperRepresentation.


        :return: The id of this ProtocolMapperRepresentation.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProtocolMapperRepresentation.


        :param id: The id of this ProtocolMapperRepresentation.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ProtocolMapperRepresentation.


        :return: The name of this ProtocolMapperRepresentation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProtocolMapperRepresentation.


        :param name: The name of this ProtocolMapperRepresentation.
        :type name: str
        """

        self._name = name

    @property
    def protocol(self):
        """Gets the protocol of this ProtocolMapperRepresentation.


        :return: The protocol of this ProtocolMapperRepresentation.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this ProtocolMapperRepresentation.


        :param protocol: The protocol of this ProtocolMapperRepresentation.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def protocol_mapper(self):
        """Gets the protocol_mapper of this ProtocolMapperRepresentation.


        :return: The protocol_mapper of this ProtocolMapperRepresentation.
        :rtype: str
        """
        return self._protocol_mapper

    @protocol_mapper.setter
    def protocol_mapper(self, protocol_mapper):
        """Sets the protocol_mapper of this ProtocolMapperRepresentation.


        :param protocol_mapper: The protocol_mapper of this ProtocolMapperRepresentation.
        :type protocol_mapper: str
        """

        self._protocol_mapper = protocol_mapper
