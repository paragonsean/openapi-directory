# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UserConsentRepresentation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_id: str=None, created_date: int=None, granted_client_scopes: List[str]=None, last_updated_date: int=None):
        """UserConsentRepresentation - a model defined in OpenAPI

        :param client_id: The client_id of this UserConsentRepresentation.
        :param created_date: The created_date of this UserConsentRepresentation.
        :param granted_client_scopes: The granted_client_scopes of this UserConsentRepresentation.
        :param last_updated_date: The last_updated_date of this UserConsentRepresentation.
        """
        self.openapi_types = {
            'client_id': str,
            'created_date': int,
            'granted_client_scopes': List[str],
            'last_updated_date': int
        }

        self.attribute_map = {
            'client_id': 'clientId',
            'created_date': 'createdDate',
            'granted_client_scopes': 'grantedClientScopes',
            'last_updated_date': 'lastUpdatedDate'
        }

        self._client_id = client_id
        self._created_date = created_date
        self._granted_client_scopes = granted_client_scopes
        self._last_updated_date = last_updated_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserConsentRepresentation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserConsentRepresentation of this UserConsentRepresentation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_id(self):
        """Gets the client_id of this UserConsentRepresentation.


        :return: The client_id of this UserConsentRepresentation.
        :rtype: str
        """
        return self._client_id

    @client_id.setter
    def client_id(self, client_id):
        """Sets the client_id of this UserConsentRepresentation.


        :param client_id: The client_id of this UserConsentRepresentation.
        :type client_id: str
        """

        self._client_id = client_id

    @property
    def created_date(self):
        """Gets the created_date of this UserConsentRepresentation.


        :return: The created_date of this UserConsentRepresentation.
        :rtype: int
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this UserConsentRepresentation.


        :param created_date: The created_date of this UserConsentRepresentation.
        :type created_date: int
        """

        self._created_date = created_date

    @property
    def granted_client_scopes(self):
        """Gets the granted_client_scopes of this UserConsentRepresentation.


        :return: The granted_client_scopes of this UserConsentRepresentation.
        :rtype: List[str]
        """
        return self._granted_client_scopes

    @granted_client_scopes.setter
    def granted_client_scopes(self, granted_client_scopes):
        """Sets the granted_client_scopes of this UserConsentRepresentation.


        :param granted_client_scopes: The granted_client_scopes of this UserConsentRepresentation.
        :type granted_client_scopes: List[str]
        """

        self._granted_client_scopes = granted_client_scopes

    @property
    def last_updated_date(self):
        """Gets the last_updated_date of this UserConsentRepresentation.


        :return: The last_updated_date of this UserConsentRepresentation.
        :rtype: int
        """
        return self._last_updated_date

    @last_updated_date.setter
    def last_updated_date(self, last_updated_date):
        """Sets the last_updated_date of this UserConsentRepresentation.


        :param last_updated_date: The last_updated_date of this UserConsentRepresentation.
        :type last_updated_date: int
        """

        self._last_updated_date = last_updated_date
