openapi: 3.0.2
info:
  description: This is a REST API reference for the Keycloak Admin
  title: Keycloak Admin REST API
  version: "1"
  x-apisguru-categories:
  - developer_tools
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/ccouzens/keycloak-openapi/master/keycloak/10.0.json
    version: "3.0"
  x-providerName: keycloak.local
externalDocs:
  description: Schema source code
  url: https://github.com/keycloak/keycloak/tree/6.0.1/core/src/main/java/org/keycloak/representations
servers:
- url: http://keycloak.local
security:
- access_token: []
paths:
  /:
    get:
      operationId: root_get
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInfoRepresentation'
          description: success
      summary: "Get themes, social providers, auth providers, and event listeners\
        \ available on this server"
      tags:
      - Root
      x-openapi-router-controller: openapi_server.controllers.root_controller
    post:
      operationId: root_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealmRepresentation'
        description: JSON representation of the realm
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Import a realm   Imports a realm from a full representation of that
        realm.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{id}/name:
    get:
      operationId: id_name_get
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: Need this for admin console to display simple name of provider when
        displaying client detail   KEYCLOAK-4328
      tags:
      - User Storage Provider
      x-openapi-router-controller: openapi_server.controllers.user_storage_provider_controller
  /{realm}:
    delete:
      operationId: realm_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the realm
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    get:
      operationId: realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmRepresentation'
          description: success
      summary: Get the top-level representation of the realm   It will not include
        nested information like User and Client representations.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    put:
      operationId: realm_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealmRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: "Update the top-level information of the realm   Any user, roles or\
        \ client information in the representation  will be ignored."
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{realm}/admin-events:
    delete:
      operationId: realm_admin_events_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete all admin events
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    get:
      operationId: realm_admin_events_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: authClient
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: authIpAddress
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: authRealm
        required: false
        schema:
          type: string
        style: form
      - description: user id
        explode: true
        in: query
        name: authUser
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: dateFrom
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: dateTo
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum results size (defaults to 100)
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: operationTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - explode: true
        in: query
        name: resourcePath
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: resourceTypes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AdminEventRepresentation'
                type: array
          description: success
      summary: "Get admin events   Returns all admin events, or filters events based\
        \ on URL query parameters listed here"
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/attack-detection/brute-force/users:
    delete:
      operationId: realm_attack_detection_brute_force_users_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Clear any user login failures for all users   This can release temporary
        disabled users
      tags:
      - Attack Detection
      x-openapi-router-controller: openapi_server.controllers.attack_detection_controller
  /{realm}/attack-detection/brute-force/users/{userId}:
    delete:
      operationId: realm_attack_detection_brute_force_users_user_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Clear any user login failures for the user   This can release temporary
        disabled user
      tags:
      - Attack Detection
      x-openapi-router-controller: openapi_server.controllers.attack_detection_controller
    get:
      operationId: realm_attack_detection_brute_force_users_user_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: Get status of a username in brute force detection
      tags:
      - Attack Detection
      x-openapi-router-controller: openapi_server.controllers.attack_detection_controller
  /{realm}/authentication/authenticator-providers:
    get:
      operationId: realm_authentication_authenticator_providers_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: success
      summary: Get authenticator providers   Returns a list of authenticator providers.
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/client-authenticator-providers:
    get:
      operationId: realm_authentication_client_authenticator_providers_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: success
      summary: Get client authenticator providers   Returns a list of client authenticator
        providers.
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/config-description/{providerId}:
    get:
      operationId: realm_authentication_config_description_provider_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorConfigInfoRepresentation'
          description: success
      summary: Get authenticator provider’s configuration description
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/config/{id}:
    delete:
      operationId: realm_authentication_config_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Configuration id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete authenticator configuration
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    get:
      operationId: realm_authentication_config_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Configuration id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticatorConfigRepresentation'
          description: success
      summary: Get authenticator configuration
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    put:
      operationId: realm_authentication_config_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Configuration id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorConfigRepresentation'
        description: JSON describing new state of authenticator configuration
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update authenticator configuration
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/executions:
    post:
      operationId: realm_authentication_executions_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationExecutionRepresentation'
        description: JSON model describing authentication execution
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add new authentication execution
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/executions/{executionId}:
    delete:
      operationId: realm_authentication_executions_execution_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete execution
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    get:
      operationId: realm_authentication_executions_execution_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Get Single Execution
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/executions/{executionId}/config:
    post:
      operationId: realm_authentication_executions_execution_id_config_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticatorConfigRepresentation'
        description: JSON with new configuration
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update execution with new configuration
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/executions/{executionId}/lower-priority:
    post:
      operationId: realm_authentication_executions_execution_id_lower_priority_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Lower execution’s priority
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/executions/{executionId}/raise-priority:
    post:
      operationId: realm_authentication_executions_execution_id_raise_priority_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Execution id
        explode: false
        in: path
        name: executionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Raise execution’s priority
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/flows:
    get:
      operationId: realm_authentication_flows_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthenticationFlowRepresentation'
                type: array
          description: success
      summary: Get authentication flows   Returns a list of authentication flows.
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    post:
      operationId: realm_authentication_flows_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationFlowRepresentation'
        description: Authentication flow representation
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a new authentication flow
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/flows/{flowAlias}/copy:
    post:
      operationId: realm_authentication_flows_flow_alias_copy_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the existing authentication flow
        explode: false
        in: path
        name: flowAlias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: JSON containing 'newName' attribute
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Copy existing authentication flow under a new name   The new name is
        given as 'newName' attribute of the passed JSON object
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/flows/{flowAlias}/executions:
    get:
      operationId: realm_authentication_flows_flow_alias_executions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Flow alias
        explode: false
        in: path
        name: flowAlias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Get authentication executions for a flow
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    put:
      operationId: realm_authentication_flows_flow_alias_executions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Flow alias
        explode: false
        in: path
        name: flowAlias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationExecutionInfoRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update authentication executions of a flow
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/flows/{flowAlias}/executions/execution:
    post:
      operationId: realm_authentication_flows_flow_alias_executions_execution_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Alias of parent flow
        explode: false
        in: path
        name: flowAlias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: New execution JSON data containing 'provider' attribute
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add new authentication execution to a flow
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/flows/{flowAlias}/executions/flow:
    post:
      operationId: realm_authentication_flows_flow_alias_executions_flow_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Alias of parent authentication flow
        explode: false
        in: path
        name: flowAlias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: "New authentication flow / execution JSON data containing 'alias',\
          \ 'type', 'provider', and 'description' attributes"
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add new flow with new execution to existing flow
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/flows/{id}:
    delete:
      operationId: realm_authentication_flows_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete an authentication flow
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    get:
      operationId: realm_authentication_flows_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationFlowRepresentation'
          description: success
      summary: Get authentication flow for id
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    put:
      operationId: realm_authentication_flows_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Flow id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationFlowRepresentation'
        description: Authentication flow representation
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update an authentication flow
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/form-action-providers:
    get:
      operationId: realm_authentication_form_action_providers_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: success
      summary: Get form action providers   Returns a list of form action providers.
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/form-providers:
    get:
      operationId: realm_authentication_form_providers_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: success
      summary: Get form providers   Returns a list of form providers.
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/per-client-config-description:
    get:
      operationId: realm_authentication_per_client_config_description_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: Get configuration descriptions for all clients
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/register-required-action:
    post:
      operationId: realm_authentication_register_required_action_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        description: "JSON containing 'providerId', and 'name' attributes."
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Register a new required actions
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/required-actions:
    get:
      operationId: realm_authentication_required_actions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RequiredActionProviderRepresentation'
                type: array
          description: success
      summary: Get required actions   Returns a list of required actions.
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/required-actions/{alias}:
    delete:
      operationId: realm_authentication_required_actions_alias_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Alias of required action
        explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete required action
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    get:
      operationId: realm_authentication_required_actions_alias_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Alias of required action
        explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RequiredActionProviderRepresentation'
          description: success
      summary: Get required action for alias
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
    put:
      operationId: realm_authentication_required_actions_alias_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Alias of required action
        explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequiredActionProviderRepresentation'
        description: JSON describing new state of required action
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update required action
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
      x-codegen-request-body-name: body
  /{realm}/authentication/required-actions/{alias}/lower-priority:
    post:
      operationId: realm_authentication_required_actions_alias_lower_priority_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Alias of required action
        explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Lower required action’s priority
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/required-actions/{alias}/raise-priority:
    post:
      operationId: realm_authentication_required_actions_alias_raise_priority_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Alias of required action
        explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Raise required action’s priority
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/authentication/unregistered-required-actions:
    get:
      operationId: realm_authentication_unregistered_required_actions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: success
      summary: Get unregistered required actions   Returns a list of unregistered
        required actions.
      tags:
      - Authentication Management
      x-openapi-router-controller: openapi_server.controllers.authentication_management_controller
  /{realm}/clear-keys-cache:
    post:
      operationId: realm_clear_keys_cache_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Clear cache of external public keys (Public keys of clients or Identity
        providers)
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/clear-realm-cache:
    post:
      operationId: realm_clear_realm_cache_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Clear realm cache
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/clear-user-cache:
    post:
      operationId: realm_clear_user_cache_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Clear user cache
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/client-description-converter:
    post:
      operationId: realm_client_description_converter_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRepresentation'
          description: success
      summary: Base path for importing clients under this realm.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{realm}/client-registration-policy/providers:
    get:
      operationId: realm_client_registration_policy_providers_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentTypeRepresentation'
                type: array
          description: success
      summary: Base path for retrieve providers with the configProperties properly
        filled
      tags:
      - Client Registration Policy
      x-openapi-router-controller: openapi_server.controllers.client_registration_policy_controller
  /{realm}/client-scopes:
    get:
      operationId: realm_client_scopes_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientScopeRepresentation'
                type: array
          description: success
      summary: Get client scopes belonging to the realm   Returns a list of client
        scopes belonging to the realm
      tags:
      - Client Scopes
      x-openapi-router-controller: openapi_server.controllers.client_scopes_controller
    post:
      operationId: realm_client_scopes_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientScopeRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a new client scope   Client Scope’s name must be unique!
      tags:
      - Client Scopes
      x-openapi-router-controller: openapi_server.controllers.client_scopes_controller
      x-codegen-request-body-name: body
  /{realm}/client-scopes/{id1}/protocol-mappers/models/{id2}:
    delete:
      operationId: realm_client_scopes_id1_protocol_mappers_models_id2_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id1
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the mapper
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
    get:
      operationId: realm_client_scopes_id1_protocol_mappers_models_id2_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id1
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtocolMapperRepresentation'
          description: success
      summary: Get mapper by id
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
    put:
      operationId: realm_client_scopes_id1_protocol_mappers_models_id2_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id1
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id2
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolMapperRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the mapper
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
      x-codegen-request-body-name: body
  /{realm}/client-scopes/{id}:
    delete:
      operationId: realm_client_scopes_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the client scope
      tags:
      - Client Scopes
      x-openapi-router-controller: openapi_server.controllers.client_scopes_controller
    get:
      operationId: realm_client_scopes_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientScopeRepresentation'
          description: success
      summary: Get representation of the client scope
      tags:
      - Client Scopes
      x-openapi-router-controller: openapi_server.controllers.client_scopes_controller
    put:
      operationId: realm_client_scopes_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientScopeRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the client scope
      tags:
      - Client Scopes
      x-openapi-router-controller: openapi_server.controllers.client_scopes_controller
      x-codegen-request-body-name: body
  /{realm}/client-scopes/{id}/protocol-mappers/add-models:
    post:
      operationId: realm_client_scopes_id_protocol_mappers_add_models_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProtocolMapperRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create multiple mappers
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
      x-codegen-request-body-name: body
  /{realm}/client-scopes/{id}/protocol-mappers/models:
    get:
      operationId: realm_client_scopes_id_protocol_mappers_models_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
                type: array
          description: success
      summary: Get mappers
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
    post:
      operationId: realm_client_scopes_id_protocol_mappers_models_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolMapperRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a mapper
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
      x-codegen-request-body-name: body
  /{realm}/client-scopes/{id}/protocol-mappers/protocol/{protocol}:
    get:
      operationId: realm_client_scopes_id_protocol_mappers_protocol_protocol_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: protocol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
                type: array
          description: success
      summary: Get mappers by name for a specific protocol
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
  /{realm}/client-scopes/{id}/scope-mappings:
    get:
      operationId: realm_client_scopes_id_scope_mappings_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingsRepresentation'
          description: success
      summary: Get all scope mappings for the client
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/client-scopes/{id}/scope-mappings/clients/{client}:
    delete:
      operationId: realm_client_scopes_id_scope_mappings_clients_client_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Remove client-level roles from the client’s scope.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_client_scopes_id_scope_mappings_clients_client_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get the roles associated with a client’s scope   Returns roles for
        the client.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
    post:
      operationId: realm_client_scopes_id_scope_mappings_clients_client_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add client-level roles to the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
  /{realm}/client-scopes/{id}/scope-mappings/clients/{client}/available:
    get:
      operationId: realm_client_scopes_id_scope_mappings_clients_client_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: The available client-level roles   Returns the roles for the client
        that can be associated with the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/client-scopes/{id}/scope-mappings/clients/{client}/composite:
    get:
      operationId: realm_client_scopes_id_scope_mappings_clients_client_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective client roles   Returns the roles for the client that
        are associated with the client’s scope.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/client-scopes/{id}/scope-mappings/realm:
    delete:
      operationId: realm_client_scopes_id_scope_mappings_realm_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Remove a set of realm-level roles from the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_client_scopes_id_scope_mappings_realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles associated with the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
    post:
      operationId: realm_client_scopes_id_scope_mappings_realm_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add a set of realm-level roles to the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
  /{realm}/client-scopes/{id}/scope-mappings/realm/available:
    get:
      operationId: realm_client_scopes_id_scope_mappings_realm_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles that are available to attach to this client’s
        scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/client-scopes/{id}/scope-mappings/realm/composite:
    get:
      operationId: realm_client_scopes_id_scope_mappings_realm_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client scope (not name)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective realm-level roles associated with the client’s scope   What
        this does is recurse  any composite roles associated with the client’s scope
        and adds the roles to this lists.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/client-session-stats:
    get:
      operationId: realm_client_session_stats_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: success
      summary: Get client session stats   Returns a JSON map.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/clients:
    get:
      operationId: realm_clients_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: filter by clientId
        explode: true
        in: query
        name: clientId
        required: false
        schema:
          type: string
        style: form
      - description: the first result
        explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: the max results to return
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: whether this is a search query or a getClientById query
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: boolean
        style: form
      - description: filter clients that cannot be viewed in full by admin
        explode: true
        in: query
        name: viewableOnly
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientRepresentation'
                type: array
          description: success
      summary: Get clients belonging to the realm   Returns a list of clients belonging
        to the realm
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    post:
      operationId: realm_clients_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a new client   Client’s client_id must be unique!
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /{realm}/clients-initial-access:
    get:
      operationId: realm_clients_initial_access_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientInitialAccessPresentation'
                type: array
          description: success
      tags:
      - Client Initial Access
      x-openapi-router-controller: openapi_server.controllers.client_initial_access_controller
    post:
      operationId: realm_clients_initial_access_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientInitialAccessCreatePresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInitialAccessPresentation'
          description: success
      summary: Create a new initial access token.
      tags:
      - Client Initial Access
      x-openapi-router-controller: openapi_server.controllers.client_initial_access_controller
      x-codegen-request-body-name: body
  /{realm}/clients-initial-access/{id}:
    delete:
      operationId: realm_clients_initial_access_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Client Initial Access
      x-openapi-router-controller: openapi_server.controllers.client_initial_access_controller
  /{realm}/clients/{id1}/protocol-mappers/models/{id2}:
    delete:
      operationId: realm_clients_id1_protocol_mappers_models_id2_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id1
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the mapper
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
    get:
      operationId: realm_clients_id1_protocol_mappers_models_id2_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id1
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id2
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProtocolMapperRepresentation'
          description: success
      summary: Get mapper by id
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
    put:
      operationId: realm_clients_id1_protocol_mappers_models_id2_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id1
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id2
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolMapperRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the mapper
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}:
    delete:
      operationId: realm_clients_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    get:
      operationId: realm_clients_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRepresentation'
          description: success
      summary: Get representation of the client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      operationId: realm_clients_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/certificates/{attr}:
    get:
      operationId: realm_clients_id_certificates_attr_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateRepresentation'
          description: success
      summary: Get key info
      tags:
      - Client Attribute Certificate
      x-openapi-router-controller: openapi_server.controllers.client_attribute_certificate_controller
  /{realm}/clients/{id}/certificates/{attr}/download:
    post:
      operationId: realm_clients_id_certificates_attr_download_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyStoreConfig'
        description: Keystore configuration as JSON
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: success
      summary: "Get a keystore file for the client, containing private key and public\
        \ certificate"
      tags:
      - Client Attribute Certificate
      x-openapi-router-controller: openapi_server.controllers.client_attribute_certificate_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/certificates/{attr}/generate:
    post:
      operationId: realm_clients_id_certificates_attr_generate_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateRepresentation'
          description: success
      summary: Generate a new certificate with new key pair
      tags:
      - Client Attribute Certificate
      x-openapi-router-controller: openapi_server.controllers.client_attribute_certificate_controller
  /{realm}/clients/{id}/certificates/{attr}/generate-and-download:
    post:
      operationId: realm_clients_id_certificates_attr_generate_and_download_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyStoreConfig'
        description: Keystore configuration as JSON
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/octet-stream:
              schema:
                format: byte
                type: string
          description: success
      summary: "Generate a new keypair and certificate, and get the private key file\
        \   Generates a keypair and certificate and serves the private key in a specified\
        \ keystore format."
      tags:
      - Client Attribute Certificate
      x-openapi-router-controller: openapi_server.controllers.client_attribute_certificate_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/certificates/{attr}/upload:
    post:
      operationId: realm_clients_id_certificates_attr_upload_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateRepresentation'
          description: success
      summary: Upload certificate and eventually private key
      tags:
      - Client Attribute Certificate
      x-openapi-router-controller: openapi_server.controllers.client_attribute_certificate_controller
  /{realm}/clients/{id}/certificates/{attr}/upload-certificate:
    post:
      operationId: realm_clients_id_certificates_attr_upload_certificate_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: attr
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CertificateRepresentation'
          description: success
      summary: "Upload only certificate, not private key"
      tags:
      - Client Attribute Certificate
      x-openapi-router-controller: openapi_server.controllers.client_attribute_certificate_controller
  /{realm}/clients/{id}/client-secret:
    get:
      operationId: realm_clients_id_client_secret_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialRepresentation'
          description: success
      summary: Get the client secret
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    post:
      operationId: realm_clients_id_client_secret_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CredentialRepresentation'
          description: success
      summary: Generate a new secret for the client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/default-client-scopes:
    get:
      operationId: realm_clients_id_default_client_scopes_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientScopeRepresentation'
                type: array
          description: success
      summary: Get default client scopes.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/default-client-scopes/{clientScopeId}:
    delete:
      operationId: realm_clients_id_default_client_scopes_client_scope_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      operationId: realm_clients_id_default_client_scopes_client_scope_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/evaluate-scopes/generate-example-access-token:
    get:
      operationId: realm_clients_id_evaluate_scopes_generate_example_access_token_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: userId
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessToken'
          description: success
      summary: Create JSON with payload of example access token
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/evaluate-scopes/protocol-mappers:
    get:
      operationId: realm_clients_id_evaluate_scopes_protocol_mappers_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientScopeEvaluateResource-ProtocolMapperEvaluationRepresentation'
                type: array
          description: success
      summary: "Return list of all protocol mappers, which will be used when generating\
        \ tokens issued for particular client."
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/evaluate-scopes/scope-mappings/{roleContainerId}/granted:
    get:
      operationId: realm_clients_id_evaluate_scopes_scope_mappings_role_container_id_granted_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: either realm name OR client UUID
        explode: false
        in: path
        name: roleContainerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: "Get effective scope mapping of all roles of particular role container,\
        \ which this client is defacto allowed to have in the accessToken issued for\
        \ him."
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/evaluate-scopes/scope-mappings/{roleContainerId}/not-granted:
    get:
      operationId: realm_clients_id_evaluate_scopes_scope_mappings_role_container_id_not_granted_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: either realm name OR client UUID
        explode: false
        in: path
        name: roleContainerId
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: scope
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: "Get roles, which this client doesn’t have scope for and can’t have\
        \ them in the accessToken issued for him."
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/installation/providers/{providerId}:
    get:
      operationId: realm_clients_id_installation_providers_provider_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: providerId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/management/permissions:
    get:
      operationId: realm_clients_id_management_permissions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether client Authorization permissions have
        been initialized or not and a reference
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      operationId: realm_clients_id_management_permissions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPermissionReference'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether client Authorization permissions have
        been initialized or not and a reference
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/nodes:
    post:
      operationId: realm_clients_id_nodes_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Register a cluster node with the client   Manually register cluster
        node to this client - usually it’s not needed to call this directly as adapter
        should handle  by sending registration request to Keycloak
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/nodes/{node}:
    delete:
      operationId: realm_clients_id_nodes_node_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: node
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Unregister a cluster node from the client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/offline-session-count:
    get:
      operationId: realm_clients_id_offline_session_count_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: "Get application offline session count   Returns a number of offline\
        \ user sessions associated with this client   {      \"count\": number  }"
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/offline-sessions:
    get:
      operationId: realm_clients_id_offline_sessions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Paging offset
        explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum results size (defaults to 100)
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSessionRepresentation'
                type: array
          description: success
      summary: Get offline sessions for client   Returns a list of offline user sessions
        associated with this client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/optional-client-scopes:
    get:
      operationId: realm_clients_id_optional_client_scopes_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientScopeRepresentation'
                type: array
          description: success
      summary: Get optional client scopes.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/optional-client-scopes/{clientScopeId}:
    delete:
      operationId: realm_clients_id_optional_client_scopes_client_scope_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
    put:
      operationId: realm_clients_id_optional_client_scopes_client_scope_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/protocol-mappers/add-models:
    post:
      operationId: realm_clients_id_protocol_mappers_add_models_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/ProtocolMapperRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create multiple mappers
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/protocol-mappers/models:
    get:
      operationId: realm_clients_id_protocol_mappers_models_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
                type: array
          description: success
      summary: Get mappers
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
    post:
      operationId: realm_clients_id_protocol_mappers_models_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProtocolMapperRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a mapper
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/protocol-mappers/protocol/{protocol}:
    get:
      operationId: realm_clients_id_protocol_mappers_protocol_protocol_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: protocol
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProtocolMapperRepresentation'
                type: array
          description: success
      summary: Get mappers by name for a specific protocol
      tags:
      - Protocol Mappers
      x-openapi-router-controller: openapi_server.controllers.protocol_mappers_controller
  /{realm}/clients/{id}/push-revocation:
    post:
      operationId: realm_clients_id_push_revocation_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalRequestResult'
          description: success
      summary: "Push the client’s revocation policy to its admin URL   If the client\
        \ has an admin URL, push revocation policy to it."
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/registration-access-token:
    post:
      operationId: realm_clients_id_registration_access_token_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRepresentation'
          description: success
      summary: Generate a new registration access token for the client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/roles:
    get:
      operationId: realm_clients_id_roles_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get all roles for the realm or client
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    post:
      operationId: realm_clients_id_roles_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a new role for the realm or client
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/roles/{role-name}:
    delete:
      operationId: realm_clients_id_roles_role_name_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete a role by name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    get:
      operationId: realm_clients_id_roles_role_name_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleRepresentation'
          description: success
      summary: Get a role by name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    put:
      operationId: realm_clients_id_roles_role_name_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update a role by name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/roles/{role-name}/composites:
    delete:
      operationId: realm_clients_id_roles_role_name_composites_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        description: roles to remove
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Remove roles from the role’s composite
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_clients_id_roles_role_name_composites_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get composites of the role
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    post:
      operationId: realm_clients_id_roles_role_name_composites_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add a composite to the role
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/roles/{role-name}/composites/clients/{client}:
    get:
      operationId: realm_clients_id_roles_role_name_composites_clients_client_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: An app-level roles for the specified app for the role’s composite
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/clients/{id}/roles/{role-name}/composites/realm:
    get:
      operationId: realm_clients_id_roles_role_name_composites_realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles of the role’s composite
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/clients/{id}/roles/{role-name}/groups:
    get:
      operationId: realm_clients_id_roles_role_name_groups_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      - description: "if false, return a full representation of the GroupRepresentation\
          \ objects"
        explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRepresentation'
                type: array
          description: success
      summary: Return List of Groups that have the specified role name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/clients/{id}/roles/{role-name}/management/permissions:
    get:
      operationId: realm_clients_id_roles_role_name_management_permissions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether role Authoirzation permissions have been
        initialized or not and a reference
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    put:
      operationId: realm_clients_id_roles_role_name_management_permissions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPermissionReference'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether role Authoirzation permissions have been
        initialized or not and a reference
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/roles/{role-name}/users:
    get:
      operationId: realm_clients_id_roles_role_name_users_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserRepresentation'
                type: array
          description: success
      summary: Return List of Users that have the specified role name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/clients/{id}/scope-mappings:
    get:
      operationId: realm_clients_id_scope_mappings_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingsRepresentation'
          description: success
      summary: Get all scope mappings for the client
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/clients/{id}/scope-mappings/clients/{client}:
    delete:
      operationId: realm_clients_id_scope_mappings_clients_client_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Remove client-level roles from the client’s scope.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_clients_id_scope_mappings_clients_client_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get the roles associated with a client’s scope   Returns roles for
        the client.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
    post:
      operationId: realm_clients_id_scope_mappings_clients_client_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add client-level roles to the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/scope-mappings/clients/{client}/available:
    get:
      operationId: realm_clients_id_scope_mappings_clients_client_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: The available client-level roles   Returns the roles for the client
        that can be associated with the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/clients/{id}/scope-mappings/clients/{client}/composite:
    get:
      operationId: realm_clients_id_scope_mappings_clients_client_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective client roles   Returns the roles for the client that
        are associated with the client’s scope.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/clients/{id}/scope-mappings/realm:
    delete:
      operationId: realm_clients_id_scope_mappings_realm_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Remove a set of realm-level roles from the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_clients_id_scope_mappings_realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles associated with the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
    post:
      operationId: realm_clients_id_scope_mappings_realm_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add a set of realm-level roles to the client’s scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
      x-codegen-request-body-name: body
  /{realm}/clients/{id}/scope-mappings/realm/available:
    get:
      operationId: realm_clients_id_scope_mappings_realm_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles that are available to attach to this client’s
        scope
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/clients/{id}/scope-mappings/realm/composite:
    get:
      operationId: realm_clients_id_scope_mappings_realm_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective realm-level roles associated with the client’s scope   What
        this does is recurse  any composite roles associated with the client’s scope
        and adds the roles to this lists.
      tags:
      - Scope Mappings
      x-openapi-router-controller: openapi_server.controllers.scope_mappings_controller
  /{realm}/clients/{id}/service-account-user:
    get:
      operationId: realm_clients_id_service_account_user_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRepresentation'
          description: success
      summary: Get a user dedicated to the service account
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/session-count:
    get:
      operationId: realm_clients_id_session_count_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: "Get application session count   Returns a number of user sessions\
        \ associated with this client   {      \"count\": number  }"
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/test-nodes-available:
    get:
      operationId: realm_clients_id_test_nodes_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalRequestResult'
          description: success
      summary: Test if registered cluster nodes are available   Tests availability
        by sending 'ping' request to all cluster nodes.
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/clients/{id}/user-sessions:
    get:
      operationId: realm_clients_id_user_sessions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of client (not client-id)
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Paging offset
        explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum results size (defaults to 100)
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSessionRepresentation'
                type: array
          description: success
      summary: Get user sessions for client   Returns a list of user sessions associated
        with this client
      tags:
      - Clients
      x-openapi-router-controller: openapi_server.controllers.clients_controller
  /{realm}/components:
    get:
      operationId: realm_components_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: parent
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentRepresentation'
                type: array
          description: success
      tags:
      - Component
      x-openapi-router-controller: openapi_server.controllers.component_controller
    post:
      operationId: realm_components_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      tags:
      - Component
      x-openapi-router-controller: openapi_server.controllers.component_controller
      x-codegen-request-body-name: body
  /{realm}/components/{id}:
    delete:
      operationId: realm_components_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Component
      x-openapi-router-controller: openapi_server.controllers.component_controller
    get:
      operationId: realm_components_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComponentRepresentation'
          description: success
      tags:
      - Component
      x-openapi-router-controller: openapi_server.controllers.component_controller
    put:
      operationId: realm_components_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ComponentRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      tags:
      - Component
      x-openapi-router-controller: openapi_server.controllers.component_controller
      x-codegen-request-body-name: body
  /{realm}/components/{id}/sub-component-types:
    get:
      operationId: realm_components_id_sub_component_types_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: type
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ComponentTypeRepresentation'
                type: array
          description: success
      summary: List of subcomponent types that are available to configure for a particular
        parent component.
      tags:
      - Component
      x-openapi-router-controller: openapi_server.controllers.component_controller
  /{realm}/credential-registrators:
    get:
      operationId: realm_credential_registrators_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/default-default-client-scopes:
    get:
      operationId: realm_default_default_client_scopes_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientScopeRepresentation'
                type: array
          description: success
      summary: Get realm default client scopes.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/default-default-client-scopes/{clientScopeId}:
    delete:
      operationId: realm_default_default_client_scopes_client_scope_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    put:
      operationId: realm_default_default_client_scopes_client_scope_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/default-groups:
    get:
      operationId: realm_default_groups_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRepresentation'
                type: array
          description: success
      summary: Get group hierarchy.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/default-groups/{groupId}:
    delete:
      operationId: realm_default_groups_group_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    put:
      operationId: realm_default_groups_group_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/default-optional-client-scopes:
    get:
      operationId: realm_default_optional_client_scopes_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ClientScopeRepresentation'
                type: array
          description: success
      summary: Get realm optional client scopes.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/default-optional-client-scopes/{clientScopeId}:
    delete:
      operationId: realm_default_optional_client_scopes_client_scope_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    put:
      operationId: realm_default_optional_client_scopes_client_scope_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientScopeId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/events:
    delete:
      operationId: realm_events_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete all events
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    get:
      operationId: realm_events_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: App or oauth client name
        explode: true
        in: query
        name: client
        required: false
        schema:
          type: string
        style: form
      - description: From date
        explode: true
        in: query
        name: dateFrom
        required: false
        schema:
          type: string
        style: form
      - description: To date
        explode: true
        in: query
        name: dateTo
        required: false
        schema:
          type: string
        style: form
      - description: Paging offset
        explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: IP address
        explode: true
        in: query
        name: ipAddress
        required: false
        schema:
          type: string
        style: form
      - description: Maximum results size (defaults to 100)
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: The types of events to return
        explode: true
        in: query
        name: type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: User id
        explode: true
        in: query
        name: user
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/EventRepresentation'
                type: array
          description: success
      summary: "Get events   Returns all events, or filters them based on URL query\
        \ parameters listed here"
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/events/config:
    get:
      operationId: realm_events_config_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmEventsConfigRepresentation'
          description: success
      summary: Get the events provider configuration   Returns JSON object with events
        provider configuration
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    put:
      operationId: realm_events_config_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RealmEventsConfigRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the events provider   Change the events provider and/or its
        configuration
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{realm}/group-by-path/{path}:
    get:
      operationId: realm_group_by_path_path_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: path
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRepresentation'
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/groups:
    get:
      operationId: realm_groups_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRepresentation'
                type: array
          description: success
      summary: Get group hierarchy.
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    post:
      operationId: realm_groups_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: create or add a top level realm groupSet or create child.
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /{realm}/groups/count:
    get:
      operationId: realm_groups_count_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: top
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: Returns the groups counts.
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /{realm}/groups/{id}:
    delete:
      operationId: realm_groups_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    get:
      operationId: realm_groups_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRepresentation'
          description: success
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    put:
      operationId: realm_groups_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: "Update group, ignores subgroups."
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /{realm}/groups/{id}/children:
    post:
      operationId: realm_groups_id_children_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Set or create child.
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /{realm}/groups/{id}/management/permissions:
    get:
      operationId: realm_groups_id_management_permissions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether client Authorization permissions have
        been initialized or not and a reference
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
    put:
      operationId: realm_groups_id_management_permissions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPermissionReference'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether client Authorization permissions have
        been initialized or not and a reference
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
      x-codegen-request-body-name: body
  /{realm}/groups/{id}/members:
    get:
      operationId: realm_groups_id_members_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: |-
          Only return basic information (only guaranteed to return id, username, created, first and last name,
           email, enabled state, email verification state, federation link, and access.
           Note that it means that namely user attributes, required actions, and not before are not returned.)
        explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - description: Pagination offset
        explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Maximum results size (defaults to 100)
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserRepresentation'
                type: array
          description: success
      summary: "Get users   Returns a list of users, filtered according to query parameters"
      tags:
      - Groups
      x-openapi-router-controller: openapi_server.controllers.groups_controller
  /{realm}/groups/{id}/role-mappings:
    get:
      operationId: realm_groups_id_role_mappings_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingsRepresentation'
          description: success
      summary: Get role mappings
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
  /{realm}/groups/{id}/role-mappings/clients/{client}:
    delete:
      operationId: realm_groups_id_role_mappings_clients_client_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Delete client-level roles from user role mapping
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_groups_id_role_mappings_clients_client_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: "Get client-level role mappings for the user, and the app"
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
    post:
      operationId: realm_groups_id_role_mappings_clients_client_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add client-level roles to the user role mapping
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
      x-codegen-request-body-name: body
  /{realm}/groups/{id}/role-mappings/clients/{client}/available:
    get:
      operationId: realm_groups_id_role_mappings_clients_client_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get available client-level roles that can be mapped to the user
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
  /{realm}/groups/{id}/role-mappings/clients/{client}/composite:
    get:
      operationId: realm_groups_id_role_mappings_clients_client_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective client-level role mappings   This recurses any composite
        roles
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
  /{realm}/groups/{id}/role-mappings/realm:
    delete:
      operationId: realm_groups_id_role_mappings_realm_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Delete realm-level role mappings
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_groups_id_role_mappings_realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level role mappings
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
    post:
      operationId: realm_groups_id_role_mappings_realm_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        description: Roles to add
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add realm-level role mappings to the user
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
      x-codegen-request-body-name: body
  /{realm}/groups/{id}/role-mappings/realm/available:
    get:
      operationId: realm_groups_id_role_mappings_realm_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles that can be mapped
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
  /{realm}/groups/{id}/role-mappings/realm/composite:
    get:
      operationId: realm_groups_id_role_mappings_realm_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective realm-level role mappings   This will recurse all composite
        roles to get the result.
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
  /{realm}/identity-provider/import-config:
    post:
      operationId: realm_identity_provider_import_config_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: Import identity provider from uploaded JSON file
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
  /{realm}/identity-provider/instances:
    get:
      operationId: realm_identity_provider_instances_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProviderRepresentation'
                type: array
          description: success
      summary: Get identity providers
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
    post:
      operationId: realm_identity_provider_instances_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderRepresentation'
        description: JSON body
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a new identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
      x-codegen-request-body-name: body
  /{realm}/identity-provider/instances/{alias}:
    delete:
      operationId: realm_identity_provider_instances_alias_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
    get:
      operationId: realm_identity_provider_instances_alias_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderRepresentation'
          description: success
      summary: Get the identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
    put:
      operationId: realm_identity_provider_instances_alias_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
      x-codegen-request-body-name: body
  /{realm}/identity-provider/instances/{alias}/export:
    get:
      operationId: realm_identity_provider_instances_alias_export_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      - description: Format to use
        explode: true
        in: query
        name: format
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          description: success
      summary: Export public broker configuration for identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
  /{realm}/identity-provider/instances/{alias}/management/permissions:
    get:
      operationId: realm_identity_provider_instances_alias_management_permissions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether client Authorization permissions have
        been initialized or not and a reference
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
    put:
      operationId: realm_identity_provider_instances_alias_management_permissions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPermissionReference'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether client Authorization permissions have
        been initialized or not and a reference
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
      x-codegen-request-body-name: body
  /{realm}/identity-provider/instances/{alias}/mapper-types:
    get:
      operationId: realm_identity_provider_instances_alias_mapper_types_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Get mapper types for identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
  /{realm}/identity-provider/instances/{alias}/mappers:
    get:
      operationId: realm_identity_provider_instances_alias_mappers_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
                type: array
          description: success
      summary: Get mappers for identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
    post:
      operationId: realm_identity_provider_instances_alias_mappers_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add a mapper to identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
      x-codegen-request-body-name: body
  /{realm}/identity-provider/instances/{alias}/mappers/{id}:
    delete:
      operationId: realm_identity_provider_instances_alias_mappers_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      - description: Mapper id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete a mapper for the identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
    get:
      operationId: realm_identity_provider_instances_alias_mappers_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      - description: Mapper id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
          description: success
      summary: Get mapper by id for the identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
    put:
      operationId: realm_identity_provider_instances_alias_mappers_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: alias
        required: true
        schema:
          type: string
        style: simple
      - description: Mapper id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update a mapper for the identity provider
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
      x-codegen-request-body-name: body
  /{realm}/identity-provider/providers/{provider_id}:
    get:
      operationId: realm_identity_provider_providers_provider_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Provider id
        explode: false
        in: path
        name: provider_id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Get identity providers
      tags:
      - Identity Providers
      x-openapi-router-controller: openapi_server.controllers.identity_providers_controller
  /{realm}/keys:
    get:
      operationId: realm_keys_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeysMetadataRepresentation'
          description: success
      tags:
      - Key
      x-openapi-router-controller: openapi_server.controllers.key_controller
  /{realm}/logout-all:
    post:
      operationId: realm_logout_all_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Removes all user sessions.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/partial-export:
    post:
      operationId: realm_partial_export_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: exportClients
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: exportGroupsAndRoles
        required: false
        schema:
          type: boolean
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RealmRepresentation'
          description: success
      summary: Partial export of existing realm into a JSON file.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/partialImport:
    post:
      operationId: realm_partial_import_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartialImportRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Partial import from a JSON file to an existing realm.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{realm}/push-revocation:
    post:
      operationId: realm_push_revocation_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Push the realm’s revocation policy to any client that has an admin
        url associated with it.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/roles:
    get:
      operationId: realm_roles_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get all roles for the realm or client
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    post:
      operationId: realm_roles_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a new role for the realm or client
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/roles-by-id/{role-id}:
    delete:
      operationId: realm_roles_by_id_role_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of role
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the role
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
    get:
      operationId: realm_roles_by_id_role_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of role
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleRepresentation'
          description: success
      summary: Get a specific role’s representation
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
    put:
      operationId: realm_roles_by_id_role_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: id of role
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the role
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
      x-codegen-request-body-name: body
  /{realm}/roles-by-id/{role-id}/composites:
    delete:
      operationId: realm_roles_by_id_role_id_composites_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Role id
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        description: A set of roles to be removed
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Remove a set of roles from the role’s composite
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_roles_by_id_role_id_composites_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Role id
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get role’s children   Returns a set of role’s children provided the
        role is a composite.
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
    post:
      operationId: realm_roles_by_id_role_id_composites_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: Role id
        explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Make the role a composite role by associating some child roles
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
      x-codegen-request-body-name: body
  /{realm}/roles-by-id/{role-id}/composites/clients/{client}:
    get:
      operationId: realm_roles_by_id_role_id_composites_clients_client_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get client-level roles for the client that are in the role’s composite
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
  /{realm}/roles-by-id/{role-id}/composites/realm:
    get:
      operationId: realm_roles_by_id_role_id_composites_realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles that are in the role’s composite
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
  /{realm}/roles-by-id/{role-id}/management/permissions:
    get:
      operationId: realm_roles_by_id_role_id_management_permissions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether role Authoirzation permissions have been
        initialized or not and a reference
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
    put:
      operationId: realm_roles_by_id_role_id_management_permissions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPermissionReference'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether role Authoirzation permissions have been
        initialized or not and a reference
      tags:
      - Roles (by ID)
      x-openapi-router-controller: openapi_server.controllers.roles_(by_id)controller
      x-codegen-request-body-name: body
  /{realm}/roles/{role-name}:
    delete:
      operationId: realm_roles_role_name_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete a role by name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    get:
      operationId: realm_roles_role_name_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleRepresentation'
          description: success
      summary: Get a role by name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    put:
      operationId: realm_roles_role_name_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update a role by name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/roles/{role-name}/composites:
    delete:
      operationId: realm_roles_role_name_composites_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        description: roles to remove
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Remove roles from the role’s composite
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_roles_role_name_composites_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get composites of the role
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    post:
      operationId: realm_roles_role_name_composites_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add a composite to the role
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/roles/{role-name}/composites/clients/{client}:
    get:
      operationId: realm_roles_role_name_composites_clients_client_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: An app-level roles for the specified app for the role’s composite
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/roles/{role-name}/composites/realm:
    get:
      operationId: realm_roles_role_name_composites_realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: role’s name (not id!)
        explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles of the role’s composite
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/roles/{role-name}/groups:
    get:
      operationId: realm_roles_role_name_groups_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      - description: "if false, return a full representation of the GroupRepresentation\
          \ objects"
        explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRepresentation'
                type: array
          description: success
      summary: Return List of Groups that have the specified role name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/roles/{role-name}/management/permissions:
    get:
      operationId: realm_roles_role_name_management_permissions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether role Authoirzation permissions have been
        initialized or not and a reference
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
    put:
      operationId: realm_roles_role_name_management_permissions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPermissionReference'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      summary: Return object stating whether role Authoirzation permissions have been
        initialized or not and a reference
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
      x-codegen-request-body-name: body
  /{realm}/roles/{role-name}/users:
    get:
      operationId: realm_roles_role_name_users_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: role-name
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserRepresentation'
                type: array
          description: success
      summary: Return List of Users that have the specified role name
      tags:
      - Roles
      x-openapi-router-controller: openapi_server.controllers.roles_controller
  /{realm}/sessions/{session}:
    delete:
      operationId: realm_sessions_session_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: session
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Remove a specific user session.
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
  /{realm}/testLDAPConnection:
    post:
      operationId: realm_test_ldap_connection_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TestLdapConnectionRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Test LDAP connection
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{realm}/testSMTPConnection:
    post:
      operationId: realm_test_smtp_connection_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              additionalProperties: true
              type: object
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{realm}/user-storage/{id}/name:
    get:
      operationId: realm_user_storage_id_name_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: Need this for admin console to display simple name of provider when
        displaying user detail   KEYCLOAK-4328
      tags:
      - User Storage Provider
      x-openapi-router-controller: openapi_server.controllers.user_storage_provider_controller
  /{realm}/user-storage/{id}/remove-imported-users:
    post:
      operationId: realm_user_storage_id_remove_imported_users_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Remove imported users
      tags:
      - User Storage Provider
      x-openapi-router-controller: openapi_server.controllers.user_storage_provider_controller
  /{realm}/user-storage/{id}/sync:
    post:
      operationId: realm_user_storage_id_sync_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: action
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationResult'
          description: success
      summary: Trigger sync of users   Action can be "triggerFullSync" or "triggerChangedUsersSync"
      tags:
      - User Storage Provider
      x-openapi-router-controller: openapi_server.controllers.user_storage_provider_controller
  /{realm}/user-storage/{id}/unlink-users:
    post:
      operationId: realm_user_storage_id_unlink_users_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Unlink imported users from a storage provider
      tags:
      - User Storage Provider
      x-openapi-router-controller: openapi_server.controllers.user_storage_provider_controller
  /{realm}/user-storage/{parentId}/mappers/{id}/sync:
    post:
      operationId: realm_user_storage_parent_id_mappers_id_sync_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: parentId
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: direction
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SynchronizationResult'
          description: success
      summary: "Trigger sync of mapper data related to ldap mapper (roles, groups,\
        \ …​)   direction is \"fedToKeycloak\" or \"keycloakToFed\""
      tags:
      - User Storage Provider
      x-openapi-router-controller: openapi_server.controllers.user_storage_provider_controller
  /{realm}/users:
    get:
      operationId: realm_users_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: firstName
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: lastName
        required: false
        schema:
          type: string
        style: form
      - description: Maximum results size (defaults to 100)
        explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: "A String contained in username, first or last name, or email"
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserRepresentation'
                type: array
          description: success
      summary: "Get users   Returns a list of users, filtered according to query parameters"
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      operationId: realm_users_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Create a new user   Username must be unique.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /{realm}/users-management-permissions:
    get:
      operationId: realm_users_management_permissions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
    put:
      operationId: realm_users_management_permissions_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManagementPermissionReference'
        required: true
        x-body-name: body
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ManagementPermissionReference'
          description: success
      tags:
      - Realms Admin
      x-openapi-router-controller: openapi_server.controllers.realms_admin_controller
      x-codegen-request-body-name: body
  /{realm}/users/count:
    get:
      operationId: realm_users_count_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: email filter
        explode: true
        in: query
        name: email
        required: false
        schema:
          type: string
        style: form
      - description: first name filter
        explode: true
        in: query
        name: firstName
        required: false
        schema:
          type: string
        style: form
      - description: last name filter
        explode: true
        in: query
        name: lastName
        required: false
        schema:
          type: string
        style: form
      - description: arbitrary search string for all the fields below
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: username filter
        explode: true
        in: query
        name: username
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                format: int32
                type: integer
          description: success
      summary: Returns the number of users that match the given criteria.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}:
    delete:
      operationId: realm_users_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Delete the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    get:
      operationId: realm_users_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRepresentation'
          description: success
      summary: Get representation of the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    put:
      operationId: realm_users_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/configured-user-storage-credential-types:
    get:
      operationId: realm_users_id_configured_user_storage_credential_types_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: success
      summary: "Return credential types, which are provided by the user storage where\
        \ user is stored."
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/consents:
    get:
      operationId: realm_users_id_consents_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  additionalProperties: true
                  type: object
                type: array
          description: success
      summary: Get consents granted by the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/consents/{client}:
    delete:
      operationId: realm_users_id_consents_client_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Client id
        explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Revoke consent and offline tokens for particular client from user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/credentials:
    get:
      operationId: realm_users_id_credentials_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/CredentialRepresentation'
                type: array
          description: success
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/credentials/{credentialId}:
    delete:
      operationId: realm_users_id_credentials_credential_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Remove a credential for a user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/credentials/{credentialId}/moveAfter/{newPreviousCredentialId}:
    post:
      operationId: realm_users_id_credentials_credential_id_move_after_new_previous_credential_id_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The credential to move
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      - description: "The credential that will be the previous element in the list.\
          \ If set to null, the moved credential will be the first element in the\
          \ list."
        explode: false
        in: path
        name: newPreviousCredentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Move a credential to a position behind another credential
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/credentials/{credentialId}/moveToFirst:
    post:
      operationId: realm_users_id_credentials_credential_id_move_to_first_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: The credential to move
        explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Move a credential to a first position in the credentials list of the
        user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/credentials/{credentialId}/userLabel:
    put:
      operationId: realm_users_id_credentials_credential_id_user_label_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: credentialId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/plain:
            schema:
              type: string
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Update a credential label for a user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/disable-credential-types:
    put:
      operationId: realm_users_id_disable_credential_types_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Disable all credentials for a user of a specific type
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/execute-actions-email:
    put:
      operationId: realm_users_id_execute_actions_email_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Client id
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - description: Number of seconds after which the generated token expires
        explode: true
        in: query
        name: lifespan
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - description: Redirect uri
        explode: true
        in: query
        name: redirect_uri
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: required actions the user needs to complete
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Send a update account email to the user   An email contains a link
        the user can click to perform a set of required actions.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/federated-identity:
    get:
      operationId: realm_users_id_federated_identity_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/FederatedIdentityRepresentation'
                type: array
          description: success
      summary: Get social logins associated with the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/federated-identity/{provider}:
    delete:
      operationId: realm_users_id_federated_identity_provider_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Social login provider id
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Remove a social login provider from user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    post:
      operationId: realm_users_id_federated_identity_provider_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Social login provider id
        explode: false
        in: path
        name: provider
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FederatedIdentityRepresentation'
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add a social login provider to the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/groups:
    get:
      operationId: realm_users_id_groups_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: briefRepresentation
        required: false
        schema:
          type: boolean
        style: form
      - explode: true
        in: query
        name: first
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: max
        required: false
        schema:
          format: int32
          type: integer
        style: form
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRepresentation'
                type: array
          description: success
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/groups/count:
    get:
      operationId: realm_users_id_groups_count_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/groups/{groupId}:
    delete:
      operationId: realm_users_id_groups_group_id_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
    put:
      operationId: realm_users_id_groups_group_id_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: groupId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/impersonation:
    post:
      operationId: realm_users_id_impersonation_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: success
      summary: Impersonate the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/logout:
    post:
      operationId: realm_users_id_logout_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          description: success
      summary: Remove all user sessions associated with the user   Also send notification
        to all clients that have an admin URL to invalidate the sessions for the particular
        user.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/offline-sessions/{clientId}:
    get:
      operationId: realm_users_id_offline_sessions_client_id_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: clientId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSessionRepresentation'
                type: array
          description: success
      summary: Get offline sessions associated with the user and client
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/reset-password:
    put:
      operationId: realm_users_id_reset_password_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CredentialRepresentation'
        description: The representation must contain a rawPassword with the plain-text
          password
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Set up a new password for the user.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/role-mappings:
    get:
      operationId: realm_users_id_role_mappings_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MappingsRepresentation'
          description: success
      summary: Get role mappings
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
  /{realm}/users/{id}/role-mappings/clients/{client}:
    delete:
      operationId: realm_users_id_role_mappings_clients_client_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Delete client-level roles from user role mapping
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_users_id_role_mappings_clients_client_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: "Get client-level role mappings for the user, and the app"
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
    post:
      operationId: realm_users_id_role_mappings_clients_client_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add client-level roles to the user role mapping
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/role-mappings/clients/{client}/available:
    get:
      operationId: realm_users_id_role_mappings_clients_client_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get available client-level roles that can be mapped to the user
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
  /{realm}/users/{id}/role-mappings/clients/{client}/composite:
    get:
      operationId: realm_users_id_role_mappings_clients_client_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - explode: false
        in: path
        name: client
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective client-level role mappings   This recurses any composite
        roles
      tags:
      - Client Role Mappings
      x-openapi-router-controller: openapi_server.controllers.client_role_mappings_controller
  /{realm}/users/{id}/role-mappings/realm:
    delete:
      operationId: realm_users_id_role_mappings_realm_delete
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Delete realm-level role mappings
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
      x-codegen-request-body-name: body
    get:
      operationId: realm_users_id_role_mappings_realm_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level role mappings
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
    post:
      operationId: realm_users_id_role_mappings_realm_post
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/RoleRepresentation'
              type: array
        description: Roles to add
        required: true
        x-body-name: body
      responses:
        "2XX":
          description: success
      summary: Add realm-level role mappings to the user
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
      x-codegen-request-body-name: body
  /{realm}/users/{id}/role-mappings/realm/available:
    get:
      operationId: realm_users_id_role_mappings_realm_available_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get realm-level roles that can be mapped
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
  /{realm}/users/{id}/role-mappings/realm/composite:
    get:
      operationId: realm_users_id_role_mappings_realm_composite_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/RoleRepresentation'
                type: array
          description: success
      summary: Get effective realm-level role mappings   This will recurse all composite
        roles to get the result.
      tags:
      - Role Mapper
      x-openapi-router-controller: openapi_server.controllers.role_mapper_controller
  /{realm}/users/{id}/send-verify-email:
    put:
      operationId: realm_users_id_send_verify_email_put
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      - description: Client id
        explode: true
        in: query
        name: client_id
        required: false
        schema:
          type: string
        style: form
      - description: Redirect uri
        explode: true
        in: query
        name: redirect_uri
        required: false
        schema:
          type: string
        style: form
      responses:
        "2XX":
          description: success
      summary: Send an email-verification email to the user   An email contains a
        link the user can click to verify their email address.
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
  /{realm}/users/{id}/sessions:
    get:
      operationId: realm_users_id_sessions_get
      parameters:
      - description: realm name (not id!)
        explode: false
        in: path
        name: realm
        required: true
        schema:
          type: string
        style: simple
      - description: User id
        explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "2XX":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserSessionRepresentation'
                type: array
          description: success
      summary: Get sessions associated with the user
      tags:
      - Users
      x-openapi-router-controller: openapi_server.controllers.users_controller
components:
  schemas:
    AccessToken:
      example:
        at_hash: at_hash
        sub: sub
        zoneinfo: zoneinfo
        birthdate: birthdate
        gender: gender
        allowed-origins:
        - allowed-origins
        - allowed-origins
        iss: iss
        trusted-certs:
        - trusted-certs
        - trusted-certs
        typ: typ
        preferred_username: preferred_username
        locale: locale
        authorization:
          permissions:
          - claims:
              key: ""
            rsid: rsid
            scopes:
            - scopes
            - scopes
            rsname: rsname
          - claims:
              key: ""
            rsid: rsid
            scopes:
            - scopes
            - scopes
            rsname: rsname
        acr: acr
        realm_access:
          roles:
          - roles
          - roles
          verify_caller: true
        updated_at: 5
        azp: azp
        auth_time: 0
        scope: scope
        nickname: nickname
        cnf:
          x5t#S256: x5t#S256
        exp: 6
        session_state: session_state
        iat: 1
        email: email
        jti: jti
        website: website
        address:
          country: country
          street_address: street_address
          formatted: formatted
          locality: locality
          postal_code: postal_code
          region: region
        email_verified: true
        profile: profile
        otherClaims:
          key: ""
        phone_number_verified: true
        given_name: given_name
        middle_name: middle_name
        nonce: nonce
        picture: picture
        c_hash: c_hash
        s_hash: s_hash
        nbf: 5
        claims_locales: claims_locales
        name: name
        phone_number: phone_number
        category: INTERNAL
        family_name: family_name
      properties:
        acr:
          title: acr
          type: string
        address:
          $ref: '#/components/schemas/AddressClaimSet'
        allowed-origins:
          items:
            type: string
          title: allowed-origins
          type: array
        at_hash:
          title: at_hash
          type: string
        auth_time:
          format: int64
          title: auth_time
          type: integer
        authorization:
          $ref: '#/components/schemas/AccessToken-Authorization'
        azp:
          title: azp
          type: string
        birthdate:
          title: birthdate
          type: string
        c_hash:
          title: c_hash
          type: string
        category:
          enum:
          - INTERNAL
          - ACCESS
          - ID
          - ADMIN
          - USERINFO
          title: category
          type: string
        claims_locales:
          title: claims_locales
          type: string
        cnf:
          $ref: '#/components/schemas/AccessToken-CertConf'
        email:
          title: email
          type: string
        email_verified:
          title: email_verified
          type: boolean
        exp:
          format: int64
          title: exp
          type: integer
        family_name:
          title: family_name
          type: string
        gender:
          title: gender
          type: string
        given_name:
          title: given_name
          type: string
        iat:
          format: int64
          title: iat
          type: integer
        iss:
          title: iss
          type: string
        jti:
          title: jti
          type: string
        locale:
          title: locale
          type: string
        middle_name:
          title: middle_name
          type: string
        name:
          title: name
          type: string
        nbf:
          format: int64
          title: nbf
          type: integer
        nickname:
          title: nickname
          type: string
        nonce:
          title: nonce
          type: string
        otherClaims:
          additionalProperties: true
          title: otherClaims
          type: object
        phone_number:
          title: phone_number
          type: string
        phone_number_verified:
          title: phone_number_verified
          type: boolean
        picture:
          title: picture
          type: string
        preferred_username:
          title: preferred_username
          type: string
        profile:
          title: profile
          type: string
        realm_access:
          $ref: '#/components/schemas/AccessToken-Access'
        s_hash:
          title: s_hash
          type: string
        scope:
          title: scope
          type: string
        session_state:
          title: session_state
          type: string
        sub:
          title: sub
          type: string
        trusted-certs:
          items:
            type: string
          title: trusted-certs
          type: array
        typ:
          title: typ
          type: string
        updated_at:
          format: int64
          title: updated_at
          type: integer
        website:
          title: website
          type: string
        zoneinfo:
          title: zoneinfo
          type: string
      title: AccessToken
      type: object
    AccessToken-Access:
      example:
        roles:
        - roles
        - roles
        verify_caller: true
      properties:
        roles:
          items:
            type: string
          title: roles
          type: array
        verify_caller:
          title: verify_caller
          type: boolean
      title: AccessToken-Access
      type: object
    AccessToken-Authorization:
      example:
        permissions:
        - claims:
            key: ""
          rsid: rsid
          scopes:
          - scopes
          - scopes
          rsname: rsname
        - claims:
            key: ""
          rsid: rsid
          scopes:
          - scopes
          - scopes
          rsname: rsname
      properties:
        permissions:
          items:
            $ref: '#/components/schemas/Permission'
          title: permissions
          type: array
      title: AccessToken-Authorization
      type: object
    AccessToken-CertConf:
      example:
        x5t#S256: x5t#S256
      properties:
        x5t#S256:
          title: x5t#S256
          type: string
      title: AccessToken-CertConf
      type: object
    AddressClaimSet:
      example:
        country: country
        street_address: street_address
        formatted: formatted
        locality: locality
        postal_code: postal_code
        region: region
      properties:
        country:
          title: country
          type: string
        formatted:
          title: formatted
          type: string
        locality:
          title: locality
          type: string
        postal_code:
          title: postal_code
          type: string
        region:
          title: region
          type: string
        street_address:
          title: street_address
          type: string
      title: AddressClaimSet
      type: object
    AdminEventRepresentation:
      example:
        realmId: realmId
        resourcePath: resourcePath
        operationType: operationType
        time: 0
        authDetails:
          clientId: clientId
          realmId: realmId
          ipAddress: ipAddress
          userId: userId
        error: error
        representation: representation
        resourceType: resourceType
      properties:
        authDetails:
          $ref: '#/components/schemas/AuthDetailsRepresentation'
        error:
          title: error
          type: string
        operationType:
          title: operationType
          type: string
        realmId:
          title: realmId
          type: string
        representation:
          title: representation
          type: string
        resourcePath:
          title: resourcePath
          type: string
        resourceType:
          title: resourceType
          type: string
        time:
          format: int64
          title: time
          type: integer
      title: AdminEventRepresentation
      type: object
    AuthDetailsRepresentation:
      example:
        clientId: clientId
        realmId: realmId
        ipAddress: ipAddress
        userId: userId
      properties:
        clientId:
          title: clientId
          type: string
        ipAddress:
          title: ipAddress
          type: string
        realmId:
          title: realmId
          type: string
        userId:
          title: userId
          type: string
      title: AuthDetailsRepresentation
      type: object
    AuthenticationExecutionExportRepresentation:
      example:
        authenticatorConfig: authenticatorConfig
        authenticatorFlow: true
        userSetupAllowed: true
        requirement: requirement
        flowAlias: flowAlias
        priority: 9
        authenticator: authenticator
        autheticatorFlow: true
      properties:
        authenticator:
          title: authenticator
          type: string
        authenticatorConfig:
          title: authenticatorConfig
          type: string
        authenticatorFlow:
          title: authenticatorFlow
          type: boolean
        autheticatorFlow:
          title: autheticatorFlow
          type: boolean
        flowAlias:
          title: flowAlias
          type: string
        priority:
          format: int32
          title: priority
          type: integer
        requirement:
          title: requirement
          type: string
        userSetupAllowed:
          title: userSetupAllowed
          type: boolean
      title: AuthenticationExecutionExportRepresentation
      type: object
    AuthenticationExecutionInfoRepresentation:
      example:
        requirementChoices:
        - requirementChoices
        - requirementChoices
        authenticationFlow: true
        level: 6
        displayName: displayName
        providerId: providerId
        alias: alias
        index: 0
        id: id
        requirement: requirement
        authenticationConfig: authenticationConfig
        flowId: flowId
        configurable: true
      properties:
        alias:
          title: alias
          type: string
        authenticationConfig:
          title: authenticationConfig
          type: string
        authenticationFlow:
          title: authenticationFlow
          type: boolean
        configurable:
          title: configurable
          type: boolean
        displayName:
          title: displayName
          type: string
        flowId:
          title: flowId
          type: string
        id:
          title: id
          type: string
        index:
          format: int32
          title: index
          type: integer
        level:
          format: int32
          title: level
          type: integer
        providerId:
          title: providerId
          type: string
        requirement:
          title: requirement
          type: string
        requirementChoices:
          items:
            type: string
          title: requirementChoices
          type: array
      title: AuthenticationExecutionInfoRepresentation
      type: object
    AuthenticationExecutionRepresentation:
      example:
        authenticatorConfig: authenticatorConfig
        authenticatorFlow: true
        id: id
        requirement: requirement
        parentFlow: parentFlow
        priority: 0
        authenticator: authenticator
        flowId: flowId
        autheticatorFlow: true
      properties:
        authenticator:
          title: authenticator
          type: string
        authenticatorConfig:
          title: authenticatorConfig
          type: string
        authenticatorFlow:
          title: authenticatorFlow
          type: boolean
        autheticatorFlow:
          title: autheticatorFlow
          type: boolean
        flowId:
          title: flowId
          type: string
        id:
          title: id
          type: string
        parentFlow:
          title: parentFlow
          type: string
        priority:
          format: int32
          title: priority
          type: integer
        requirement:
          title: requirement
          type: string
      title: AuthenticationExecutionRepresentation
      type: object
    AuthenticationFlowRepresentation:
      example:
        authenticationExecutions:
        - authenticatorConfig: authenticatorConfig
          authenticatorFlow: true
          userSetupAllowed: true
          requirement: requirement
          flowAlias: flowAlias
          priority: 9
          authenticator: authenticator
          autheticatorFlow: true
        - authenticatorConfig: authenticatorConfig
          authenticatorFlow: true
          userSetupAllowed: true
          requirement: requirement
          flowAlias: flowAlias
          priority: 9
          authenticator: authenticator
          autheticatorFlow: true
        providerId: providerId
        topLevel: true
        builtIn: true
        alias: alias
        description: description
        id: id
      properties:
        alias:
          title: alias
          type: string
        authenticationExecutions:
          items:
            $ref: '#/components/schemas/AuthenticationExecutionExportRepresentation'
          title: authenticationExecutions
          type: array
        builtIn:
          title: builtIn
          type: boolean
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        providerId:
          title: providerId
          type: string
        topLevel:
          title: topLevel
          type: boolean
      title: AuthenticationFlowRepresentation
      type: object
    AuthenticatorConfigInfoRepresentation:
      example:
        helpText: helpText
        providerId: providerId
        name: name
        properties:
        - helpText: helpText
          defaultValue: "{}"
          name: name
          options:
          - options
          - options
          label: label
          secret: true
          type: type
        - helpText: helpText
          defaultValue: "{}"
          name: name
          options:
          - options
          - options
          label: label
          secret: true
          type: type
      properties:
        helpText:
          title: helpText
          type: string
        name:
          title: name
          type: string
        properties:
          items:
            $ref: '#/components/schemas/ConfigPropertyRepresentation'
          title: properties
          type: array
        providerId:
          title: providerId
          type: string
      title: AuthenticatorConfigInfoRepresentation
      type: object
    AuthenticatorConfigRepresentation:
      example:
        alias: alias
        id: id
        config:
          key: ""
      properties:
        alias:
          title: alias
          type: string
        config:
          additionalProperties: true
          title: config
          type: object
        id:
          title: id
          type: string
      title: AuthenticatorConfigRepresentation
      type: object
    CertificateRepresentation:
      example:
        privateKey: privateKey
        kid: kid
        certificate: certificate
        publicKey: publicKey
      properties:
        certificate:
          title: certificate
          type: string
        kid:
          title: kid
          type: string
        privateKey:
          title: privateKey
          type: string
        publicKey:
          title: publicKey
          type: string
      title: CertificateRepresentation
      type: object
    ClientInitialAccessCreatePresentation:
      example:
        count: 0
        expiration: 6
      properties:
        count:
          format: int32
          title: count
          type: integer
        expiration:
          format: int32
          title: expiration
          type: integer
      title: ClientInitialAccessCreatePresentation
      type: object
    ClientInitialAccessPresentation:
      example:
        count: 0
        expiration: 6
        id: id
        remainingCount: 1
        timestamp: 5
        token: token
      properties:
        count:
          format: int32
          title: count
          type: integer
        expiration:
          format: int32
          title: expiration
          type: integer
        id:
          title: id
          type: string
        remainingCount:
          format: int32
          title: remainingCount
          type: integer
        timestamp:
          format: int32
          title: timestamp
          type: integer
        token:
          title: token
          type: string
      title: ClientInitialAccessPresentation
      type: object
    ClientMappingsRepresentation:
      properties:
        client:
          type: string
        id:
          type: string
        mappings:
          items:
            $ref: '#/components/schemas/RoleRepresentation'
          type: array
      type: object
    ClientRepresentation:
      example:
        optionalClientScopes:
        - optionalClientScopes
        - optionalClientScopes
        publicClient: true
        access:
          key: ""
        authorizationSettings:
          clientId: clientId
          name: name
          policies:
          - owner: owner
            policies:
            - policies
            - policies
            resourcesData:
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            description: description
            resources:
            - resources
            - resources
            type: type
            scopesData:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            name: name
            id: id
            logic: POSITIVE
            scopes:
            - scopes
            - scopes
            config:
              key: ""
            decisionStrategy: AFFIRMATIVE
          - owner: owner
            policies:
            - policies
            - policies
            resourcesData:
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            description: description
            resources:
            - resources
            - resources
            type: type
            scopesData:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            name: name
            id: id
            logic: POSITIVE
            scopes:
            - scopes
            - scopes
            config:
              key: ""
            decisionStrategy: AFFIRMATIVE
          resources:
          - uris:
            - uris
            - uris
            ownerManagedAccess: true
            displayName: displayName
            name: name
            attributes:
              key: ""
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            type: type
            icon_uri: icon_uri
          - uris:
            - uris
            - uris
            ownerManagedAccess: true
            displayName: displayName
            name: name
            attributes:
              key: ""
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            type: type
            icon_uri: icon_uri
          id: id
          scopes:
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          allowRemoteResourceManagement: true
          decisionStrategy: AFFIRMATIVE
          policyEnforcementMode: ENFORCING
        registeredNodes:
          key: ""
        authorizationServicesEnabled: true
        origin: origin
        description: description
        alwaysDisplayInConsole: true
        serviceAccountsEnabled: true
        secret: secret
        consentRequired: true
        clientAuthenticatorType: clientAuthenticatorType
        enabled: true
        notBefore: 7
        frontchannelLogout: true
        surrogateAuthRequired: true
        protocol: protocol
        defaultClientScopes:
        - defaultClientScopes
        - defaultClientScopes
        bearerOnly: true
        nodeReRegistrationTimeout: 4
        id: id
        adminUrl: adminUrl
        clientId: clientId
        registrationAccessToken: registrationAccessToken
        protocolMappers:
        - protocol: protocol
          protocolMapper: protocolMapper
          name: name
          id: id
          config:
            key: ""
        - protocol: protocol
          protocolMapper: protocolMapper
          name: name
          id: id
          config:
            key: ""
        redirectUris:
        - redirectUris
        - redirectUris
        fullScopeAllowed: true
        rootUrl: rootUrl
        directAccessGrantsEnabled: true
        implicitFlowEnabled: true
        baseUrl: baseUrl
        authenticationFlowBindingOverrides:
          key: ""
        defaultRoles:
        - defaultRoles
        - defaultRoles
        name: name
        standardFlowEnabled: true
        attributes:
          key: ""
        webOrigins:
        - webOrigins
        - webOrigins
      properties:
        access:
          additionalProperties: true
          title: access
          type: object
        adminUrl:
          title: adminUrl
          type: string
        alwaysDisplayInConsole:
          title: alwaysDisplayInConsole
          type: boolean
        attributes:
          additionalProperties: true
          title: attributes
          type: object
        authenticationFlowBindingOverrides:
          additionalProperties: true
          title: authenticationFlowBindingOverrides
          type: object
        authorizationServicesEnabled:
          title: authorizationServicesEnabled
          type: boolean
        authorizationSettings:
          $ref: '#/components/schemas/ResourceServerRepresentation'
        baseUrl:
          title: baseUrl
          type: string
        bearerOnly:
          title: bearerOnly
          type: boolean
        clientAuthenticatorType:
          title: clientAuthenticatorType
          type: string
        clientId:
          title: clientId
          type: string
        consentRequired:
          title: consentRequired
          type: boolean
        defaultClientScopes:
          items:
            type: string
          title: defaultClientScopes
          type: array
        defaultRoles:
          items:
            type: string
          title: defaultRoles
          type: array
        description:
          title: description
          type: string
        directAccessGrantsEnabled:
          title: directAccessGrantsEnabled
          type: boolean
        enabled:
          title: enabled
          type: boolean
        frontchannelLogout:
          title: frontchannelLogout
          type: boolean
        fullScopeAllowed:
          title: fullScopeAllowed
          type: boolean
        id:
          title: id
          type: string
        implicitFlowEnabled:
          title: implicitFlowEnabled
          type: boolean
        name:
          title: name
          type: string
        nodeReRegistrationTimeout:
          format: int32
          title: nodeReRegistrationTimeout
          type: integer
        notBefore:
          format: int32
          title: notBefore
          type: integer
        optionalClientScopes:
          items:
            type: string
          title: optionalClientScopes
          type: array
        origin:
          title: origin
          type: string
        protocol:
          title: protocol
          type: string
        protocolMappers:
          items:
            $ref: '#/components/schemas/ProtocolMapperRepresentation'
          title: protocolMappers
          type: array
        publicClient:
          title: publicClient
          type: boolean
        redirectUris:
          items:
            type: string
          title: redirectUris
          type: array
        registeredNodes:
          additionalProperties: true
          title: registeredNodes
          type: object
        registrationAccessToken:
          title: registrationAccessToken
          type: string
        rootUrl:
          title: rootUrl
          type: string
        secret:
          title: secret
          type: string
        serviceAccountsEnabled:
          title: serviceAccountsEnabled
          type: boolean
        standardFlowEnabled:
          title: standardFlowEnabled
          type: boolean
        surrogateAuthRequired:
          title: surrogateAuthRequired
          type: boolean
        webOrigins:
          items:
            type: string
          title: webOrigins
          type: array
      title: ClientRepresentation
      type: object
    ClientScopeEvaluateResource-ProtocolMapperEvaluationRepresentation:
      example:
        protocolMapper: protocolMapper
        containerName: containerName
        containerType: containerType
        mapperId: mapperId
        mapperName: mapperName
        containerId: containerId
      properties:
        containerId:
          title: containerId
          type: string
        containerName:
          title: containerName
          type: string
        containerType:
          title: containerType
          type: string
        mapperId:
          title: mapperId
          type: string
        mapperName:
          title: mapperName
          type: string
        protocolMapper:
          title: protocolMapper
          type: string
      title: ClientScopeEvaluateResource-ProtocolMapperEvaluationRepresentation
      type: object
    ClientScopeRepresentation:
      example:
        protocol: protocol
        name: name
        description: description
        attributes:
          key: ""
        protocolMappers:
        - protocol: protocol
          protocolMapper: protocolMapper
          name: name
          id: id
          config:
            key: ""
        - protocol: protocol
          protocolMapper: protocolMapper
          name: name
          id: id
          config:
            key: ""
        id: id
      properties:
        attributes:
          additionalProperties: true
          title: attributes
          type: object
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        protocol:
          title: protocol
          type: string
        protocolMappers:
          items:
            $ref: '#/components/schemas/ProtocolMapperRepresentation'
          title: protocolMappers
          type: array
      title: ClientScopeRepresentation
      type: object
    ComponentExportRepresentation:
      properties:
        config:
          $ref: '#/components/schemas/MultivaluedHashMap'
        id:
          type: string
        name:
          type: string
        providerId:
          type: string
        subComponents:
          $ref: '#/components/schemas/MultivaluedHashMap'
        subType:
          type: string
      type: object
    ComponentRepresentation:
      example:
        providerId: providerId
        name: name
        subType: subType
        id: id
        config:
          loadFactor: 1.2315135
          threshold: 1
          empty: true
        parentId: parentId
        providerType: providerType
      properties:
        config:
          $ref: '#/components/schemas/MultivaluedHashMap'
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        parentId:
          title: parentId
          type: string
        providerId:
          title: providerId
          type: string
        providerType:
          title: providerType
          type: string
        subType:
          title: subType
          type: string
      title: ComponentRepresentation
      type: object
    ComponentTypeRepresentation:
      example:
        metadata:
          key: ""
        helpText: helpText
        id: id
        properties:
        - helpText: helpText
          defaultValue: "{}"
          name: name
          options:
          - options
          - options
          label: label
          secret: true
          type: type
        - helpText: helpText
          defaultValue: "{}"
          name: name
          options:
          - options
          - options
          label: label
          secret: true
          type: type
      properties:
        helpText:
          title: helpText
          type: string
        id:
          title: id
          type: string
        metadata:
          additionalProperties: true
          title: metadata
          type: object
        properties:
          items:
            $ref: '#/components/schemas/ConfigPropertyRepresentation'
          title: properties
          type: array
      title: ComponentTypeRepresentation
      type: object
    ConfigPropertyRepresentation:
      example:
        helpText: helpText
        defaultValue: "{}"
        name: name
        options:
        - options
        - options
        label: label
        secret: true
        type: type
      properties:
        defaultValue:
          title: defaultValue
          type: object
        helpText:
          title: helpText
          type: string
        label:
          title: label
          type: string
        name:
          title: name
          type: string
        options:
          items:
            type: string
          title: options
          type: array
        secret:
          title: secret
          type: boolean
        type:
          title: type
          type: string
      title: ConfigPropertyRepresentation
      type: object
    CredentialRepresentation:
      example:
        temporary: true
        userLabel: userLabel
        createdDate: 5
        credentialData: credentialData
        id: id
        priority: 9
        type: type
        value: value
        secretData: secretData
      properties:
        createdDate:
          format: int64
          title: createdDate
          type: integer
        credentialData:
          title: credentialData
          type: string
        id:
          title: id
          type: string
        priority:
          format: int32
          title: priority
          type: integer
        secretData:
          title: secretData
          type: string
        temporary:
          title: temporary
          type: boolean
        type:
          title: type
          type: string
        userLabel:
          title: userLabel
          type: string
        value:
          title: value
          type: string
      title: CredentialRepresentation
      type: object
    EventRepresentation:
      example:
        clientId: clientId
        realmId: realmId
        ipAddress: ipAddress
        details:
          key: ""
        sessionId: sessionId
        time: 0
        error: error
        type: type
        userId: userId
      properties:
        clientId:
          title: clientId
          type: string
        details:
          additionalProperties: true
          title: details
          type: object
        error:
          title: error
          type: string
        ipAddress:
          title: ipAddress
          type: string
        realmId:
          title: realmId
          type: string
        sessionId:
          title: sessionId
          type: string
        time:
          format: int64
          title: time
          type: integer
        type:
          title: type
          type: string
        userId:
          title: userId
          type: string
      title: EventRepresentation
      type: object
    FederatedIdentityRepresentation:
      example:
        userName: userName
        userId: userId
        identityProvider: identityProvider
      properties:
        identityProvider:
          title: identityProvider
          type: string
        userId:
          title: userId
          type: string
        userName:
          title: userName
          type: string
      title: FederatedIdentityRepresentation
      type: object
    GlobalRequestResult:
      example:
        failedRequests:
        - failedRequests
        - failedRequests
        successRequests:
        - successRequests
        - successRequests
      properties:
        failedRequests:
          items:
            type: string
          title: failedRequests
          type: array
        successRequests:
          items:
            type: string
          title: successRequests
          type: array
      title: GlobalRequestResult
      type: object
    GroupRepresentation:
      example:
        path: path
        realmRoles:
        - realmRoles
        - realmRoles
        access:
          key: ""
        name: name
        subGroups:
        - null
        - null
        attributes:
          key: ""
        id: id
        clientRoles:
          key: ""
      properties:
        access:
          additionalProperties: true
          title: access
          type: object
        attributes:
          additionalProperties: true
          title: attributes
          type: object
        clientRoles:
          additionalProperties: true
          title: clientRoles
          type: object
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        path:
          title: path
          type: string
        realmRoles:
          items:
            type: string
          title: realmRoles
          type: array
        subGroups:
          items:
            $ref: '#/components/schemas/GroupRepresentation'
          title: subGroups
          type: array
      title: GroupRepresentation
      type: object
    IdentityProviderMapperRepresentation:
      example:
        identityProviderAlias: identityProviderAlias
        name: name
        id: id
        config:
          key: ""
        identityProviderMapper: identityProviderMapper
      properties:
        config:
          additionalProperties: true
          title: config
          type: object
        id:
          title: id
          type: string
        identityProviderAlias:
          title: identityProviderAlias
          type: string
        identityProviderMapper:
          title: identityProviderMapper
          type: string
        name:
          title: name
          type: string
      title: IdentityProviderMapperRepresentation
      type: object
    IdentityProviderRepresentation:
      example:
        firstBrokerLoginFlowAlias: firstBrokerLoginFlowAlias
        internalId: internalId
        addReadTokenRoleOnCreate: true
        displayName: displayName
        providerId: providerId
        postBrokerLoginFlowAlias: postBrokerLoginFlowAlias
        alias: alias
        trustEmail: true
        config:
          key: ""
        linkOnly: true
        enabled: true
        storeToken: true
      properties:
        addReadTokenRoleOnCreate:
          title: addReadTokenRoleOnCreate
          type: boolean
        alias:
          title: alias
          type: string
        config:
          additionalProperties: true
          title: config
          type: object
        displayName:
          title: displayName
          type: string
        enabled:
          title: enabled
          type: boolean
        firstBrokerLoginFlowAlias:
          title: firstBrokerLoginFlowAlias
          type: string
        internalId:
          title: internalId
          type: string
        linkOnly:
          title: linkOnly
          type: boolean
        postBrokerLoginFlowAlias:
          title: postBrokerLoginFlowAlias
          type: string
        providerId:
          title: providerId
          type: string
        storeToken:
          title: storeToken
          type: boolean
        trustEmail:
          title: trustEmail
          type: boolean
      title: IdentityProviderRepresentation
      type: object
    KeyStoreConfig:
      example:
        storePassword: storePassword
        keyAlias: keyAlias
        keyPassword: keyPassword
        format: format
        realmCertificate: true
        realmAlias: realmAlias
      properties:
        format:
          title: format
          type: string
        keyAlias:
          title: keyAlias
          type: string
        keyPassword:
          title: keyPassword
          type: string
        realmAlias:
          title: realmAlias
          type: string
        realmCertificate:
          title: realmCertificate
          type: boolean
        storePassword:
          title: storePassword
          type: string
      title: KeyStoreConfig
      type: object
    KeysMetadataRepresentation:
      example:
        keys:
        - providerId: providerId
          kid: kid
          certificate: certificate
          providerPriority: 0
          publicKey: publicKey
          type: type
          algorithm: algorithm
          status: status
        - providerId: providerId
          kid: kid
          certificate: certificate
          providerPriority: 0
          publicKey: publicKey
          type: type
          algorithm: algorithm
          status: status
        active:
          key: ""
      properties:
        active:
          additionalProperties: true
          title: active
          type: object
        keys:
          items:
            $ref: '#/components/schemas/KeysMetadataRepresentation-KeyMetadataRepresentation'
          title: keys
          type: array
      title: KeysMetadataRepresentation
      type: object
    KeysMetadataRepresentation-KeyMetadataRepresentation:
      example:
        providerId: providerId
        kid: kid
        certificate: certificate
        providerPriority: 0
        publicKey: publicKey
        type: type
        algorithm: algorithm
        status: status
      properties:
        algorithm:
          title: algorithm
          type: string
        certificate:
          title: certificate
          type: string
        kid:
          title: kid
          type: string
        providerId:
          title: providerId
          type: string
        providerPriority:
          format: int64
          title: providerPriority
          type: integer
        publicKey:
          title: publicKey
          type: string
        status:
          title: status
          type: string
        type:
          title: type
          type: string
      title: KeysMetadataRepresentation-KeyMetadataRepresentation
      type: object
    ManagementPermissionReference:
      example:
        scopePermissions:
          key: ""
        resource: resource
        enabled: true
      properties:
        enabled:
          title: enabled
          type: boolean
        resource:
          title: resource
          type: string
        scopePermissions:
          additionalProperties: true
          title: scopePermissions
          type: object
      title: ManagementPermissionReference
      type: object
    MappingsRepresentation:
      example:
        realmMappings:
        - composites:
            client:
              key: ""
            realm:
            - realm
            - realm
          clientRole: true
          composite: true
          name: name
          description: description
          attributes:
            key: ""
          id: id
          containerId: containerId
        - composites:
            client:
              key: ""
            realm:
            - realm
            - realm
          clientRole: true
          composite: true
          name: name
          description: description
          attributes:
            key: ""
          id: id
          containerId: containerId
        clientMappings:
          key: ""
      properties:
        clientMappings:
          additionalProperties: true
          title: clientMappings
          type: object
        realmMappings:
          items:
            $ref: '#/components/schemas/RoleRepresentation'
          title: realmMappings
          type: array
      title: MappingsRepresentation
      type: object
    MemoryInfoRepresentation:
      example:
        freePercentage: 6
        total: 1
        freeFormated: freeFormated
        used: 5
        free: 0
        usedFormated: usedFormated
        totalFormated: totalFormated
      properties:
        free:
          format: int64
          title: free
          type: integer
        freeFormated:
          title: freeFormated
          type: string
        freePercentage:
          format: int64
          title: freePercentage
          type: integer
        total:
          format: int64
          title: total
          type: integer
        totalFormated:
          title: totalFormated
          type: string
        used:
          format: int64
          title: used
          type: integer
        usedFormated:
          title: usedFormated
          type: string
      title: MemoryInfoRepresentation
      type: object
    MultivaluedHashMap:
      example:
        loadFactor: 1.2315135
        threshold: 1
        empty: true
      properties:
        empty:
          title: empty
          type: boolean
        loadFactor:
          format: float
          title: loadFactor
          type: number
        threshold:
          format: int32
          title: threshold
          type: integer
      title: MultivaluedHashMap
      type: object
    PartialImportRepresentation:
      example:
        identityProviders:
        - firstBrokerLoginFlowAlias: firstBrokerLoginFlowAlias
          internalId: internalId
          addReadTokenRoleOnCreate: true
          displayName: displayName
          providerId: providerId
          postBrokerLoginFlowAlias: postBrokerLoginFlowAlias
          alias: alias
          trustEmail: true
          config:
            key: ""
          linkOnly: true
          enabled: true
          storeToken: true
        - firstBrokerLoginFlowAlias: firstBrokerLoginFlowAlias
          internalId: internalId
          addReadTokenRoleOnCreate: true
          displayName: displayName
          providerId: providerId
          postBrokerLoginFlowAlias: postBrokerLoginFlowAlias
          alias: alias
          trustEmail: true
          config:
            key: ""
          linkOnly: true
          enabled: true
          storeToken: true
        clients:
        - optionalClientScopes:
          - optionalClientScopes
          - optionalClientScopes
          publicClient: true
          access:
            key: ""
          authorizationSettings:
            clientId: clientId
            name: name
            policies:
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            resources:
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            allowRemoteResourceManagement: true
            decisionStrategy: AFFIRMATIVE
            policyEnforcementMode: ENFORCING
          registeredNodes:
            key: ""
          authorizationServicesEnabled: true
          origin: origin
          description: description
          alwaysDisplayInConsole: true
          serviceAccountsEnabled: true
          secret: secret
          consentRequired: true
          clientAuthenticatorType: clientAuthenticatorType
          enabled: true
          notBefore: 7
          frontchannelLogout: true
          surrogateAuthRequired: true
          protocol: protocol
          defaultClientScopes:
          - defaultClientScopes
          - defaultClientScopes
          bearerOnly: true
          nodeReRegistrationTimeout: 4
          id: id
          adminUrl: adminUrl
          clientId: clientId
          registrationAccessToken: registrationAccessToken
          protocolMappers:
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          redirectUris:
          - redirectUris
          - redirectUris
          fullScopeAllowed: true
          rootUrl: rootUrl
          directAccessGrantsEnabled: true
          implicitFlowEnabled: true
          baseUrl: baseUrl
          authenticationFlowBindingOverrides:
            key: ""
          defaultRoles:
          - defaultRoles
          - defaultRoles
          name: name
          standardFlowEnabled: true
          attributes:
            key: ""
          webOrigins:
          - webOrigins
          - webOrigins
        - optionalClientScopes:
          - optionalClientScopes
          - optionalClientScopes
          publicClient: true
          access:
            key: ""
          authorizationSettings:
            clientId: clientId
            name: name
            policies:
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            resources:
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            allowRemoteResourceManagement: true
            decisionStrategy: AFFIRMATIVE
            policyEnforcementMode: ENFORCING
          registeredNodes:
            key: ""
          authorizationServicesEnabled: true
          origin: origin
          description: description
          alwaysDisplayInConsole: true
          serviceAccountsEnabled: true
          secret: secret
          consentRequired: true
          clientAuthenticatorType: clientAuthenticatorType
          enabled: true
          notBefore: 7
          frontchannelLogout: true
          surrogateAuthRequired: true
          protocol: protocol
          defaultClientScopes:
          - defaultClientScopes
          - defaultClientScopes
          bearerOnly: true
          nodeReRegistrationTimeout: 4
          id: id
          adminUrl: adminUrl
          clientId: clientId
          registrationAccessToken: registrationAccessToken
          protocolMappers:
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          redirectUris:
          - redirectUris
          - redirectUris
          fullScopeAllowed: true
          rootUrl: rootUrl
          directAccessGrantsEnabled: true
          implicitFlowEnabled: true
          baseUrl: baseUrl
          authenticationFlowBindingOverrides:
            key: ""
          defaultRoles:
          - defaultRoles
          - defaultRoles
          name: name
          standardFlowEnabled: true
          attributes:
            key: ""
          webOrigins:
          - webOrigins
          - webOrigins
        ifResourceExists: ifResourceExists
        roles:
          client:
            key: ""
          realm:
          - composites:
              client:
                key: ""
              realm:
              - realm
              - realm
            clientRole: true
            composite: true
            name: name
            description: description
            attributes:
              key: ""
            id: id
            containerId: containerId
          - composites:
              client:
                key: ""
              realm:
              - realm
              - realm
            clientRole: true
            composite: true
            name: name
            description: description
            attributes:
              key: ""
            id: id
            containerId: containerId
        groups:
        - path: path
          realmRoles:
          - realmRoles
          - realmRoles
          access:
            key: ""
          name: name
          subGroups:
          - null
          - null
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
        - path: path
          realmRoles:
          - realmRoles
          - realmRoles
          access:
            key: ""
          name: name
          subGroups:
          - null
          - null
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
        users:
        - lastName: lastName
          serviceAccountClientId: serviceAccountClientId
          access:
            key: ""
          federatedIdentities:
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          credentials:
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          createdTimestamp: 4
          origin: origin
          groups:
          - groups
          - groups
          clientConsents:
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          enabled: true
          notBefore: 9
          disableableCredentialTypes:
          - disableableCredentialTypes
          - disableableCredentialTypes
          emailVerified: true
          firstName: firstName
          realmRoles:
          - realmRoles
          - realmRoles
          requiredActions:
          - requiredActions
          - requiredActions
          federationLink: federationLink
          self: self
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
          email: email
          username: username
        - lastName: lastName
          serviceAccountClientId: serviceAccountClientId
          access:
            key: ""
          federatedIdentities:
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          credentials:
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          createdTimestamp: 4
          origin: origin
          groups:
          - groups
          - groups
          clientConsents:
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          enabled: true
          notBefore: 9
          disableableCredentialTypes:
          - disableableCredentialTypes
          - disableableCredentialTypes
          emailVerified: true
          firstName: firstName
          realmRoles:
          - realmRoles
          - realmRoles
          requiredActions:
          - requiredActions
          - requiredActions
          federationLink: federationLink
          self: self
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
          email: email
          username: username
        policy: SKIP
      properties:
        clients:
          items:
            $ref: '#/components/schemas/ClientRepresentation'
          title: clients
          type: array
        groups:
          items:
            $ref: '#/components/schemas/GroupRepresentation'
          title: groups
          type: array
        identityProviders:
          items:
            $ref: '#/components/schemas/IdentityProviderRepresentation'
          title: identityProviders
          type: array
        ifResourceExists:
          title: ifResourceExists
          type: string
        policy:
          enum:
          - SKIP
          - OVERWRITE
          - FAIL
          title: policy
          type: string
        roles:
          $ref: '#/components/schemas/RolesRepresentation'
        users:
          items:
            $ref: '#/components/schemas/UserRepresentation'
          title: users
          type: array
      title: PartialImportRepresentation
      type: object
    PasswordPolicyTypeRepresentation:
      example:
        multipleSupported: true
        defaultValue: defaultValue
        displayName: displayName
        id: id
        configType: configType
      properties:
        configType:
          title: configType
          type: string
        defaultValue:
          title: defaultValue
          type: string
        displayName:
          title: displayName
          type: string
        id:
          title: id
          type: string
        multipleSupported:
          title: multipleSupported
          type: boolean
      title: PasswordPolicyTypeRepresentation
      type: object
    Permission:
      example:
        claims:
          key: ""
        rsid: rsid
        scopes:
        - scopes
        - scopes
        rsname: rsname
      properties:
        claims:
          additionalProperties: true
          title: claims
          type: object
        rsid:
          title: rsid
          type: string
        rsname:
          title: rsname
          type: string
        scopes:
          items:
            type: string
          title: scopes
          type: array
      title: Permission
      type: object
    PolicyRepresentation:
      example:
        owner: owner
        policies:
        - policies
        - policies
        resourcesData:
        - uris:
          - uris
          - uris
          ownerManagedAccess: true
          displayName: displayName
          name: name
          attributes:
            key: ""
          id: id
          scopes:
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          type: type
          icon_uri: icon_uri
        - uris:
          - uris
          - uris
          ownerManagedAccess: true
          displayName: displayName
          name: name
          attributes:
            key: ""
          id: id
          scopes:
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          type: type
          icon_uri: icon_uri
        description: description
        resources:
        - resources
        - resources
        type: type
        scopesData:
        - displayName: displayName
          name: name
          policies:
          - null
          - null
          resources:
          - null
          - null
          id: id
          iconUri: iconUri
        - displayName: displayName
          name: name
          policies:
          - null
          - null
          resources:
          - null
          - null
          id: id
          iconUri: iconUri
        name: name
        id: id
        logic: POSITIVE
        scopes:
        - scopes
        - scopes
        config:
          key: ""
        decisionStrategy: AFFIRMATIVE
      properties:
        config:
          additionalProperties: true
          title: config
          type: object
        decisionStrategy:
          enum:
          - AFFIRMATIVE
          - UNANIMOUS
          - CONSENSUS
          title: decisionStrategy
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        logic:
          enum:
          - POSITIVE
          - NEGATIVE
          title: logic
          type: string
        name:
          title: name
          type: string
        owner:
          title: owner
          type: string
        policies:
          items:
            type: string
          title: policies
          type: array
        resources:
          items:
            type: string
          title: resources
          type: array
        resourcesData:
          items:
            $ref: '#/components/schemas/ResourceRepresentation'
          title: resourcesData
          type: array
        scopes:
          items:
            type: string
          title: scopes
          type: array
        scopesData:
          items:
            $ref: '#/components/schemas/ScopeRepresentation'
          title: scopesData
          type: array
        type:
          title: type
          type: string
      title: PolicyRepresentation
      type: object
    ProfileInfoRepresentation:
      example:
        disabledFeatures:
        - disabledFeatures
        - disabledFeatures
        previewFeatures:
        - previewFeatures
        - previewFeatures
        experimentalFeatures:
        - experimentalFeatures
        - experimentalFeatures
        name: name
      properties:
        disabledFeatures:
          items:
            type: string
          title: disabledFeatures
          type: array
        experimentalFeatures:
          items:
            type: string
          title: experimentalFeatures
          type: array
        name:
          title: name
          type: string
        previewFeatures:
          items:
            type: string
          title: previewFeatures
          type: array
      title: ProfileInfoRepresentation
      type: object
    ProtocolMapperRepresentation:
      example:
        protocol: protocol
        protocolMapper: protocolMapper
        name: name
        id: id
        config:
          key: ""
      properties:
        config:
          additionalProperties: true
          title: config
          type: object
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        protocol:
          title: protocol
          type: string
        protocolMapper:
          title: protocolMapper
          type: string
      title: ProtocolMapperRepresentation
      type: object
    ProviderRepresentation:
      properties:
        operationalInfo:
          additionalProperties: true
          type: object
        order:
          format: int32
          type: integer
      type: object
    RealmEventsConfigRepresentation:
      example:
        adminEventsDetailsEnabled: true
        enabledEventTypes:
        - enabledEventTypes
        - enabledEventTypes
        eventsEnabled: true
        eventsExpiration: 0
        eventsListeners:
        - eventsListeners
        - eventsListeners
        adminEventsEnabled: true
      properties:
        adminEventsDetailsEnabled:
          title: adminEventsDetailsEnabled
          type: boolean
        adminEventsEnabled:
          title: adminEventsEnabled
          type: boolean
        enabledEventTypes:
          items:
            type: string
          title: enabledEventTypes
          type: array
        eventsEnabled:
          title: eventsEnabled
          type: boolean
        eventsExpiration:
          format: int64
          title: eventsExpiration
          type: integer
        eventsListeners:
          items:
            type: string
          title: eventsListeners
          type: array
      title: RealmEventsConfigRepresentation
      type: object
    RealmRepresentation:
      example:
        otpPolicyLookAheadWindow: 6
        defaultGroups:
        - defaultGroups
        - defaultGroups
        webAuthnPolicyPasswordlessAcceptableAaguids:
        - webAuthnPolicyPasswordlessAcceptableAaguids
        - webAuthnPolicyPasswordlessAcceptableAaguids
        directGrantFlow: directGrantFlow
        otpPolicyDigits: 1
        webAuthnPolicySignatureAlgorithms:
        - webAuthnPolicySignatureAlgorithms
        - webAuthnPolicySignatureAlgorithms
        offlineSessionMaxLifespan: 6
        eventsListeners:
        - eventsListeners
        - eventsListeners
        id: id
        adminEventsDetailsEnabled: true
        ssoSessionIdleTimeoutRememberMe: 7
        accessCodeLifespanLogin: 6
        clientSessionIdleTimeout: 3
        quickLoginCheckMilliSeconds: 5
        eventsEnabled: true
        registrationFlow: registrationFlow
        clientAuthenticationFlow: clientAuthenticationFlow
        defaultLocale: defaultLocale
        authenticatorConfig:
        - alias: alias
          id: id
          config:
            key: ""
        - alias: alias
          id: id
          config:
            key: ""
        defaultSignatureAlgorithm: defaultSignatureAlgorithm
        duplicateEmailsAllowed: true
        accessCodeLifespan: 0
        eventsExpiration: 1
        webAuthnPolicyPasswordlessCreateTimeout: 3
        otpPolicyType: otpPolicyType
        components:
          loadFactor: 1.2315135
          threshold: 1
          empty: true
        clients:
        - optionalClientScopes:
          - optionalClientScopes
          - optionalClientScopes
          publicClient: true
          access:
            key: ""
          authorizationSettings:
            clientId: clientId
            name: name
            policies:
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            resources:
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            allowRemoteResourceManagement: true
            decisionStrategy: AFFIRMATIVE
            policyEnforcementMode: ENFORCING
          registeredNodes:
            key: ""
          authorizationServicesEnabled: true
          origin: origin
          description: description
          alwaysDisplayInConsole: true
          serviceAccountsEnabled: true
          secret: secret
          consentRequired: true
          clientAuthenticatorType: clientAuthenticatorType
          enabled: true
          notBefore: 7
          frontchannelLogout: true
          surrogateAuthRequired: true
          protocol: protocol
          defaultClientScopes:
          - defaultClientScopes
          - defaultClientScopes
          bearerOnly: true
          nodeReRegistrationTimeout: 4
          id: id
          adminUrl: adminUrl
          clientId: clientId
          registrationAccessToken: registrationAccessToken
          protocolMappers:
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          redirectUris:
          - redirectUris
          - redirectUris
          fullScopeAllowed: true
          rootUrl: rootUrl
          directAccessGrantsEnabled: true
          implicitFlowEnabled: true
          baseUrl: baseUrl
          authenticationFlowBindingOverrides:
            key: ""
          defaultRoles:
          - defaultRoles
          - defaultRoles
          name: name
          standardFlowEnabled: true
          attributes:
            key: ""
          webOrigins:
          - webOrigins
          - webOrigins
        - optionalClientScopes:
          - optionalClientScopes
          - optionalClientScopes
          publicClient: true
          access:
            key: ""
          authorizationSettings:
            clientId: clientId
            name: name
            policies:
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            - owner: owner
              policies:
              - policies
              - policies
              resourcesData:
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              - uris:
                - uris
                - uris
                ownerManagedAccess: true
                displayName: displayName
                name: name
                attributes:
                  key: ""
                id: id
                scopes:
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                - displayName: displayName
                  name: name
                  policies:
                  - null
                  - null
                  resources:
                  - null
                  - null
                  id: id
                  iconUri: iconUri
                type: type
                icon_uri: icon_uri
              description: description
              resources:
              - resources
              - resources
              type: type
              scopesData:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              name: name
              id: id
              logic: POSITIVE
              scopes:
              - scopes
              - scopes
              config:
                key: ""
              decisionStrategy: AFFIRMATIVE
            resources:
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            - uris:
              - uris
              - uris
              ownerManagedAccess: true
              displayName: displayName
              name: name
              attributes:
                key: ""
              id: id
              scopes:
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              - displayName: displayName
                name: name
                policies:
                - null
                - null
                resources:
                - null
                - null
                id: id
                iconUri: iconUri
              type: type
              icon_uri: icon_uri
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            allowRemoteResourceManagement: true
            decisionStrategy: AFFIRMATIVE
            policyEnforcementMode: ENFORCING
          registeredNodes:
            key: ""
          authorizationServicesEnabled: true
          origin: origin
          description: description
          alwaysDisplayInConsole: true
          serviceAccountsEnabled: true
          secret: secret
          consentRequired: true
          clientAuthenticatorType: clientAuthenticatorType
          enabled: true
          notBefore: 7
          frontchannelLogout: true
          surrogateAuthRequired: true
          protocol: protocol
          defaultClientScopes:
          - defaultClientScopes
          - defaultClientScopes
          bearerOnly: true
          nodeReRegistrationTimeout: 4
          id: id
          adminUrl: adminUrl
          clientId: clientId
          registrationAccessToken: registrationAccessToken
          protocolMappers:
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          redirectUris:
          - redirectUris
          - redirectUris
          fullScopeAllowed: true
          rootUrl: rootUrl
          directAccessGrantsEnabled: true
          implicitFlowEnabled: true
          baseUrl: baseUrl
          authenticationFlowBindingOverrides:
            key: ""
          defaultRoles:
          - defaultRoles
          - defaultRoles
          name: name
          standardFlowEnabled: true
          attributes:
            key: ""
          webOrigins:
          - webOrigins
          - webOrigins
        displayName: displayName
        otpPolicyAlgorithm: otpPolicyAlgorithm
        webAuthnPolicyAuthenticatorAttachment: webAuthnPolicyAuthenticatorAttachment
        enabled: true
        maxDeltaTimeSeconds: 6
        internationalizationEnabled: true
        ssoSessionMaxLifespan: 0
        bruteForceProtected: true
        accessTokenLifespanForImplicitFlow: 5
        webAuthnPolicyPasswordlessSignatureAlgorithms:
        - webAuthnPolicyPasswordlessSignatureAlgorithms
        - webAuthnPolicyPasswordlessSignatureAlgorithms
        userFederationProviders:
        - changedSyncPeriod: 6
          fullSyncPeriod: 0
          lastSync: 4
          displayName: displayName
          id: id
          priority: 8
          config:
            key: ""
          providerName: providerName
        - changedSyncPeriod: 6
          fullSyncPeriod: 0
          lastSync: 4
          displayName: displayName
          id: id
          priority: 8
          config:
            key: ""
          providerName: providerName
        identityProviders:
        - firstBrokerLoginFlowAlias: firstBrokerLoginFlowAlias
          internalId: internalId
          addReadTokenRoleOnCreate: true
          displayName: displayName
          providerId: providerId
          postBrokerLoginFlowAlias: postBrokerLoginFlowAlias
          alias: alias
          trustEmail: true
          config:
            key: ""
          linkOnly: true
          enabled: true
          storeToken: true
        - firstBrokerLoginFlowAlias: firstBrokerLoginFlowAlias
          internalId: internalId
          addReadTokenRoleOnCreate: true
          displayName: displayName
          providerId: providerId
          postBrokerLoginFlowAlias: postBrokerLoginFlowAlias
          alias: alias
          trustEmail: true
          config:
            key: ""
          linkOnly: true
          enabled: true
          storeToken: true
        supportedLocales:
        - supportedLocales
        - supportedLocales
        webAuthnPolicyAttestationConveyancePreference: webAuthnPolicyAttestationConveyancePreference
        browserSecurityHeaders:
          key: ""
        webAuthnPolicyPasswordlessUserVerificationRequirement: webAuthnPolicyPasswordlessUserVerificationRequirement
        webAuthnPolicyPasswordlessAuthenticatorAttachment: webAuthnPolicyPasswordlessAuthenticatorAttachment
        smtpServer:
          key: ""
        emailTheme: emailTheme
        enabledEventTypes:
        - enabledEventTypes
        - enabledEventTypes
        otpSupportedApplications:
        - otpSupportedApplications
        - otpSupportedApplications
        actionTokenGeneratedByAdminLifespan: 2
        defaultRoles:
        - defaultRoles
        - defaultRoles
        attributes:
          key: ""
        registrationEmailAsUsername: true
        otpPolicyPeriod: 6
        ssoSessionMaxLifespanRememberMe: 7
        otpPolicyInitialCounter: 2
        userManagedAccessAllowed: true
        notBefore: 6
        resetPasswordAllowed: true
        scopeMappings:
        - roles:
          - roles
          - roles
          client: client
          self: self
          clientScope: clientScope
        - roles:
          - roles
          - roles
          client: client
          self: self
          clientScope: clientScope
        actionTokenGeneratedByUserLifespan: 7
        clientScopeMappings:
          key: ""
        defaultOptionalClientScopes:
        - defaultOptionalClientScopes
        - defaultOptionalClientScopes
        webAuthnPolicyPasswordlessRpEntityName: webAuthnPolicyPasswordlessRpEntityName
        webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister: true
        webAuthnPolicyPasswordlessRequireResidentKey: webAuthnPolicyPasswordlessRequireResidentKey
        resetCredentialsFlow: resetCredentialsFlow
        webAuthnPolicyUserVerificationRequirement: webAuthnPolicyUserVerificationRequirement
        passwordPolicy: passwordPolicy
        webAuthnPolicyCreateTimeout: 3
        keycloakVersion: keycloakVersion
        authenticationFlows:
        - authenticationExecutions:
          - authenticatorConfig: authenticatorConfig
            authenticatorFlow: true
            userSetupAllowed: true
            requirement: requirement
            flowAlias: flowAlias
            priority: 9
            authenticator: authenticator
            autheticatorFlow: true
          - authenticatorConfig: authenticatorConfig
            authenticatorFlow: true
            userSetupAllowed: true
            requirement: requirement
            flowAlias: flowAlias
            priority: 9
            authenticator: authenticator
            autheticatorFlow: true
          providerId: providerId
          topLevel: true
          builtIn: true
          alias: alias
          description: description
          id: id
        - authenticationExecutions:
          - authenticatorConfig: authenticatorConfig
            authenticatorFlow: true
            userSetupAllowed: true
            requirement: requirement
            flowAlias: flowAlias
            priority: 9
            authenticator: authenticator
            autheticatorFlow: true
          - authenticatorConfig: authenticatorConfig
            authenticatorFlow: true
            userSetupAllowed: true
            requirement: requirement
            flowAlias: flowAlias
            priority: 9
            authenticator: authenticator
            autheticatorFlow: true
          providerId: providerId
          topLevel: true
          builtIn: true
          alias: alias
          description: description
          id: id
        revokeRefreshToken: true
        minimumQuickLoginWaitSeconds: 9
        adminEventsEnabled: true
        users:
        - lastName: lastName
          serviceAccountClientId: serviceAccountClientId
          access:
            key: ""
          federatedIdentities:
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          credentials:
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          createdTimestamp: 4
          origin: origin
          groups:
          - groups
          - groups
          clientConsents:
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          enabled: true
          notBefore: 9
          disableableCredentialTypes:
          - disableableCredentialTypes
          - disableableCredentialTypes
          emailVerified: true
          firstName: firstName
          realmRoles:
          - realmRoles
          - realmRoles
          requiredActions:
          - requiredActions
          - requiredActions
          federationLink: federationLink
          self: self
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
          email: email
          username: username
        - lastName: lastName
          serviceAccountClientId: serviceAccountClientId
          access:
            key: ""
          federatedIdentities:
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          credentials:
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          createdTimestamp: 4
          origin: origin
          groups:
          - groups
          - groups
          clientConsents:
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          enabled: true
          notBefore: 9
          disableableCredentialTypes:
          - disableableCredentialTypes
          - disableableCredentialTypes
          emailVerified: true
          firstName: firstName
          realmRoles:
          - realmRoles
          - realmRoles
          requiredActions:
          - requiredActions
          - requiredActions
          federationLink: federationLink
          self: self
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
          email: email
          username: username
        browserFlow: browserFlow
        loginWithEmailAllowed: true
        accessCodeLifespanUserAction: 1
        editUsernameAllowed: true
        ssoSessionIdleTimeout: 3
        clientSessionMaxLifespan: 2
        offlineSessionMaxLifespanEnabled: true
        waitIncrementSeconds: 7
        roles:
          client:
            key: ""
          realm:
          - composites:
              client:
                key: ""
              realm:
              - realm
              - realm
            clientRole: true
            composite: true
            name: name
            description: description
            attributes:
              key: ""
            id: id
            containerId: containerId
          - composites:
              client:
                key: ""
              realm:
              - realm
              - realm
            clientRole: true
            composite: true
            name: name
            description: description
            attributes:
              key: ""
            id: id
            containerId: containerId
        registrationAllowed: true
        displayNameHtml: displayNameHtml
        verifyEmail: true
        sslRequired: sslRequired
        webAuthnPolicyRpEntityName: webAuthnPolicyRpEntityName
        failureFactor: 6
        federatedUsers:
        - lastName: lastName
          serviceAccountClientId: serviceAccountClientId
          access:
            key: ""
          federatedIdentities:
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          credentials:
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          createdTimestamp: 4
          origin: origin
          groups:
          - groups
          - groups
          clientConsents:
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          enabled: true
          notBefore: 9
          disableableCredentialTypes:
          - disableableCredentialTypes
          - disableableCredentialTypes
          emailVerified: true
          firstName: firstName
          realmRoles:
          - realmRoles
          - realmRoles
          requiredActions:
          - requiredActions
          - requiredActions
          federationLink: federationLink
          self: self
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
          email: email
          username: username
        - lastName: lastName
          serviceAccountClientId: serviceAccountClientId
          access:
            key: ""
          federatedIdentities:
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          - userName: userName
            userId: userId
            identityProvider: identityProvider
          credentials:
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          - temporary: true
            userLabel: userLabel
            createdDate: 5
            credentialData: credentialData
            id: id
            priority: 9
            type: type
            value: value
            secretData: secretData
          createdTimestamp: 4
          origin: origin
          groups:
          - groups
          - groups
          clientConsents:
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          - lastUpdatedDate: 1
            clientId: clientId
            createdDate: 7
            grantedClientScopes:
            - grantedClientScopes
            - grantedClientScopes
          enabled: true
          notBefore: 9
          disableableCredentialTypes:
          - disableableCredentialTypes
          - disableableCredentialTypes
          emailVerified: true
          firstName: firstName
          realmRoles:
          - realmRoles
          - realmRoles
          requiredActions:
          - requiredActions
          - requiredActions
          federationLink: federationLink
          self: self
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
          email: email
          username: username
        loginTheme: loginTheme
        identityProviderMappers:
        - identityProviderAlias: identityProviderAlias
          name: name
          id: id
          config:
            key: ""
          identityProviderMapper: identityProviderMapper
        - identityProviderAlias: identityProviderAlias
          name: name
          id: id
          config:
            key: ""
          identityProviderMapper: identityProviderMapper
        adminTheme: adminTheme
        accessTokenLifespan: 5
        refreshTokenMaxReuse: 6
        clientScopes:
        - protocol: protocol
          name: name
          description: description
          attributes:
            key: ""
          protocolMappers:
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          id: id
        - protocol: protocol
          name: name
          description: description
          attributes:
            key: ""
          protocolMappers:
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          - protocol: protocol
            protocolMapper: protocolMapper
            name: name
            id: id
            config:
              key: ""
          id: id
        defaultDefaultClientScopes:
        - defaultDefaultClientScopes
        - defaultDefaultClientScopes
        permanentLockout: true
        webAuthnPolicyRequireResidentKey: webAuthnPolicyRequireResidentKey
        dockerAuthenticationFlow: dockerAuthenticationFlow
        webAuthnPolicyPasswordlessRpId: webAuthnPolicyPasswordlessRpId
        webAuthnPolicyRpId: webAuthnPolicyRpId
        groups:
        - path: path
          realmRoles:
          - realmRoles
          - realmRoles
          access:
            key: ""
          name: name
          subGroups:
          - null
          - null
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
        - path: path
          realmRoles:
          - realmRoles
          - realmRoles
          access:
            key: ""
          name: name
          subGroups:
          - null
          - null
          attributes:
            key: ""
          id: id
          clientRoles:
            key: ""
        maxFailureWaitSeconds: 8
        protocolMappers:
        - protocol: protocol
          protocolMapper: protocolMapper
          name: name
          id: id
          config:
            key: ""
        - protocol: protocol
          protocolMapper: protocolMapper
          name: name
          id: id
          config:
            key: ""
        accountTheme: accountTheme
        requiredActions:
        - defaultAction: true
          providerId: providerId
          name: name
          alias: alias
          priority: 3
          config:
            key: ""
          enabled: true
        - defaultAction: true
          providerId: providerId
          name: name
          alias: alias
          priority: 3
          config:
            key: ""
          enabled: true
        webAuthnPolicyAvoidSameAuthenticatorRegister: true
        webAuthnPolicyPasswordlessAttestationConveyancePreference: webAuthnPolicyPasswordlessAttestationConveyancePreference
        realm: realm
        rememberMe: true
        offlineSessionIdleTimeout: 3
        webAuthnPolicyAcceptableAaguids:
        - webAuthnPolicyAcceptableAaguids
        - webAuthnPolicyAcceptableAaguids
        userFederationMappers:
        - federationProviderDisplayName: federationProviderDisplayName
          name: name
          id: id
          config:
            key: ""
          federationMapperType: federationMapperType
        - federationProviderDisplayName: federationProviderDisplayName
          name: name
          id: id
          config:
            key: ""
          federationMapperType: federationMapperType
      properties:
        accessCodeLifespan:
          format: int32
          title: accessCodeLifespan
          type: integer
        accessCodeLifespanLogin:
          format: int32
          title: accessCodeLifespanLogin
          type: integer
        accessCodeLifespanUserAction:
          format: int32
          title: accessCodeLifespanUserAction
          type: integer
        accessTokenLifespan:
          format: int32
          title: accessTokenLifespan
          type: integer
        accessTokenLifespanForImplicitFlow:
          format: int32
          title: accessTokenLifespanForImplicitFlow
          type: integer
        accountTheme:
          title: accountTheme
          type: string
        actionTokenGeneratedByAdminLifespan:
          format: int32
          title: actionTokenGeneratedByAdminLifespan
          type: integer
        actionTokenGeneratedByUserLifespan:
          format: int32
          title: actionTokenGeneratedByUserLifespan
          type: integer
        adminEventsDetailsEnabled:
          title: adminEventsDetailsEnabled
          type: boolean
        adminEventsEnabled:
          title: adminEventsEnabled
          type: boolean
        adminTheme:
          title: adminTheme
          type: string
        attributes:
          additionalProperties: true
          title: attributes
          type: object
        authenticationFlows:
          items:
            $ref: '#/components/schemas/AuthenticationFlowRepresentation'
          title: authenticationFlows
          type: array
        authenticatorConfig:
          items:
            $ref: '#/components/schemas/AuthenticatorConfigRepresentation'
          title: authenticatorConfig
          type: array
        browserFlow:
          title: browserFlow
          type: string
        browserSecurityHeaders:
          additionalProperties: true
          title: browserSecurityHeaders
          type: object
        bruteForceProtected:
          title: bruteForceProtected
          type: boolean
        clientAuthenticationFlow:
          title: clientAuthenticationFlow
          type: string
        clientScopeMappings:
          additionalProperties: true
          title: clientScopeMappings
          type: object
        clientScopes:
          items:
            $ref: '#/components/schemas/ClientScopeRepresentation'
          title: clientScopes
          type: array
        clientSessionIdleTimeout:
          format: int32
          title: clientSessionIdleTimeout
          type: integer
        clientSessionMaxLifespan:
          format: int32
          title: clientSessionMaxLifespan
          type: integer
        clients:
          items:
            $ref: '#/components/schemas/ClientRepresentation'
          title: clients
          type: array
        components:
          $ref: '#/components/schemas/MultivaluedHashMap'
        defaultDefaultClientScopes:
          items:
            type: string
          title: defaultDefaultClientScopes
          type: array
        defaultGroups:
          items:
            type: string
          title: defaultGroups
          type: array
        defaultLocale:
          title: defaultLocale
          type: string
        defaultOptionalClientScopes:
          items:
            type: string
          title: defaultOptionalClientScopes
          type: array
        defaultRoles:
          items:
            type: string
          title: defaultRoles
          type: array
        defaultSignatureAlgorithm:
          title: defaultSignatureAlgorithm
          type: string
        directGrantFlow:
          title: directGrantFlow
          type: string
        displayName:
          title: displayName
          type: string
        displayNameHtml:
          title: displayNameHtml
          type: string
        dockerAuthenticationFlow:
          title: dockerAuthenticationFlow
          type: string
        duplicateEmailsAllowed:
          title: duplicateEmailsAllowed
          type: boolean
        editUsernameAllowed:
          title: editUsernameAllowed
          type: boolean
        emailTheme:
          title: emailTheme
          type: string
        enabled:
          title: enabled
          type: boolean
        enabledEventTypes:
          items:
            type: string
          title: enabledEventTypes
          type: array
        eventsEnabled:
          title: eventsEnabled
          type: boolean
        eventsExpiration:
          format: int64
          title: eventsExpiration
          type: integer
        eventsListeners:
          items:
            type: string
          title: eventsListeners
          type: array
        failureFactor:
          format: int32
          title: failureFactor
          type: integer
        federatedUsers:
          items:
            $ref: '#/components/schemas/UserRepresentation'
          title: federatedUsers
          type: array
        groups:
          items:
            $ref: '#/components/schemas/GroupRepresentation'
          title: groups
          type: array
        id:
          title: id
          type: string
        identityProviderMappers:
          items:
            $ref: '#/components/schemas/IdentityProviderMapperRepresentation'
          title: identityProviderMappers
          type: array
        identityProviders:
          items:
            $ref: '#/components/schemas/IdentityProviderRepresentation'
          title: identityProviders
          type: array
        internationalizationEnabled:
          title: internationalizationEnabled
          type: boolean
        keycloakVersion:
          title: keycloakVersion
          type: string
        loginTheme:
          title: loginTheme
          type: string
        loginWithEmailAllowed:
          title: loginWithEmailAllowed
          type: boolean
        maxDeltaTimeSeconds:
          format: int32
          title: maxDeltaTimeSeconds
          type: integer
        maxFailureWaitSeconds:
          format: int32
          title: maxFailureWaitSeconds
          type: integer
        minimumQuickLoginWaitSeconds:
          format: int32
          title: minimumQuickLoginWaitSeconds
          type: integer
        notBefore:
          format: int32
          title: notBefore
          type: integer
        offlineSessionIdleTimeout:
          format: int32
          title: offlineSessionIdleTimeout
          type: integer
        offlineSessionMaxLifespan:
          format: int32
          title: offlineSessionMaxLifespan
          type: integer
        offlineSessionMaxLifespanEnabled:
          title: offlineSessionMaxLifespanEnabled
          type: boolean
        otpPolicyAlgorithm:
          title: otpPolicyAlgorithm
          type: string
        otpPolicyDigits:
          format: int32
          title: otpPolicyDigits
          type: integer
        otpPolicyInitialCounter:
          format: int32
          title: otpPolicyInitialCounter
          type: integer
        otpPolicyLookAheadWindow:
          format: int32
          title: otpPolicyLookAheadWindow
          type: integer
        otpPolicyPeriod:
          format: int32
          title: otpPolicyPeriod
          type: integer
        otpPolicyType:
          title: otpPolicyType
          type: string
        otpSupportedApplications:
          items:
            type: string
          title: otpSupportedApplications
          type: array
        passwordPolicy:
          title: passwordPolicy
          type: string
        permanentLockout:
          title: permanentLockout
          type: boolean
        protocolMappers:
          items:
            $ref: '#/components/schemas/ProtocolMapperRepresentation'
          title: protocolMappers
          type: array
        quickLoginCheckMilliSeconds:
          format: int64
          title: quickLoginCheckMilliSeconds
          type: integer
        realm:
          title: realm
          type: string
        refreshTokenMaxReuse:
          format: int32
          title: refreshTokenMaxReuse
          type: integer
        registrationAllowed:
          title: registrationAllowed
          type: boolean
        registrationEmailAsUsername:
          title: registrationEmailAsUsername
          type: boolean
        registrationFlow:
          title: registrationFlow
          type: string
        rememberMe:
          title: rememberMe
          type: boolean
        requiredActions:
          items:
            $ref: '#/components/schemas/RequiredActionProviderRepresentation'
          title: requiredActions
          type: array
        resetCredentialsFlow:
          title: resetCredentialsFlow
          type: string
        resetPasswordAllowed:
          title: resetPasswordAllowed
          type: boolean
        revokeRefreshToken:
          title: revokeRefreshToken
          type: boolean
        roles:
          $ref: '#/components/schemas/RolesRepresentation'
        scopeMappings:
          items:
            $ref: '#/components/schemas/ScopeMappingRepresentation'
          title: scopeMappings
          type: array
        smtpServer:
          additionalProperties: true
          title: smtpServer
          type: object
        sslRequired:
          title: sslRequired
          type: string
        ssoSessionIdleTimeout:
          format: int32
          title: ssoSessionIdleTimeout
          type: integer
        ssoSessionIdleTimeoutRememberMe:
          format: int32
          title: ssoSessionIdleTimeoutRememberMe
          type: integer
        ssoSessionMaxLifespan:
          format: int32
          title: ssoSessionMaxLifespan
          type: integer
        ssoSessionMaxLifespanRememberMe:
          format: int32
          title: ssoSessionMaxLifespanRememberMe
          type: integer
        supportedLocales:
          items:
            type: string
          title: supportedLocales
          type: array
        userFederationMappers:
          items:
            $ref: '#/components/schemas/UserFederationMapperRepresentation'
          title: userFederationMappers
          type: array
        userFederationProviders:
          items:
            $ref: '#/components/schemas/UserFederationProviderRepresentation'
          title: userFederationProviders
          type: array
        userManagedAccessAllowed:
          title: userManagedAccessAllowed
          type: boolean
        users:
          items:
            $ref: '#/components/schemas/UserRepresentation'
          title: users
          type: array
        verifyEmail:
          title: verifyEmail
          type: boolean
        waitIncrementSeconds:
          format: int32
          title: waitIncrementSeconds
          type: integer
        webAuthnPolicyAcceptableAaguids:
          items:
            type: string
          title: webAuthnPolicyAcceptableAaguids
          type: array
        webAuthnPolicyAttestationConveyancePreference:
          title: webAuthnPolicyAttestationConveyancePreference
          type: string
        webAuthnPolicyAuthenticatorAttachment:
          title: webAuthnPolicyAuthenticatorAttachment
          type: string
        webAuthnPolicyAvoidSameAuthenticatorRegister:
          title: webAuthnPolicyAvoidSameAuthenticatorRegister
          type: boolean
        webAuthnPolicyCreateTimeout:
          format: int32
          title: webAuthnPolicyCreateTimeout
          type: integer
        webAuthnPolicyPasswordlessAcceptableAaguids:
          items:
            type: string
          title: webAuthnPolicyPasswordlessAcceptableAaguids
          type: array
        webAuthnPolicyPasswordlessAttestationConveyancePreference:
          title: webAuthnPolicyPasswordlessAttestationConveyancePreference
          type: string
        webAuthnPolicyPasswordlessAuthenticatorAttachment:
          title: webAuthnPolicyPasswordlessAuthenticatorAttachment
          type: string
        webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister:
          title: webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister
          type: boolean
        webAuthnPolicyPasswordlessCreateTimeout:
          format: int32
          title: webAuthnPolicyPasswordlessCreateTimeout
          type: integer
        webAuthnPolicyPasswordlessRequireResidentKey:
          title: webAuthnPolicyPasswordlessRequireResidentKey
          type: string
        webAuthnPolicyPasswordlessRpEntityName:
          title: webAuthnPolicyPasswordlessRpEntityName
          type: string
        webAuthnPolicyPasswordlessRpId:
          title: webAuthnPolicyPasswordlessRpId
          type: string
        webAuthnPolicyPasswordlessSignatureAlgorithms:
          items:
            type: string
          title: webAuthnPolicyPasswordlessSignatureAlgorithms
          type: array
        webAuthnPolicyPasswordlessUserVerificationRequirement:
          title: webAuthnPolicyPasswordlessUserVerificationRequirement
          type: string
        webAuthnPolicyRequireResidentKey:
          title: webAuthnPolicyRequireResidentKey
          type: string
        webAuthnPolicyRpEntityName:
          title: webAuthnPolicyRpEntityName
          type: string
        webAuthnPolicyRpId:
          title: webAuthnPolicyRpId
          type: string
        webAuthnPolicySignatureAlgorithms:
          items:
            type: string
          title: webAuthnPolicySignatureAlgorithms
          type: array
        webAuthnPolicyUserVerificationRequirement:
          title: webAuthnPolicyUserVerificationRequirement
          type: string
      title: RealmRepresentation
      type: object
    RequiredActionProviderRepresentation:
      example:
        defaultAction: true
        providerId: providerId
        name: name
        alias: alias
        priority: 3
        config:
          key: ""
        enabled: true
      properties:
        alias:
          title: alias
          type: string
        config:
          additionalProperties: true
          title: config
          type: object
        defaultAction:
          title: defaultAction
          type: boolean
        enabled:
          title: enabled
          type: boolean
        name:
          title: name
          type: string
        priority:
          format: int32
          title: priority
          type: integer
        providerId:
          title: providerId
          type: string
      title: RequiredActionProviderRepresentation
      type: object
    ResourceRepresentation:
      example:
        uris:
        - uris
        - uris
        ownerManagedAccess: true
        displayName: displayName
        name: name
        attributes:
          key: ""
        id: id
        scopes:
        - displayName: displayName
          name: name
          policies:
          - null
          - null
          resources:
          - null
          - null
          id: id
          iconUri: iconUri
        - displayName: displayName
          name: name
          policies:
          - null
          - null
          resources:
          - null
          - null
          id: id
          iconUri: iconUri
        type: type
        icon_uri: icon_uri
      properties:
        attributes:
          additionalProperties: true
          title: attributes
          type: object
        displayName:
          title: displayName
          type: string
        icon_uri:
          title: icon_uri
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        ownerManagedAccess:
          title: ownerManagedAccess
          type: boolean
        scopes:
          items:
            $ref: '#/components/schemas/ScopeRepresentation'
          title: scopes
          type: array
        type:
          title: type
          type: string
        uris:
          items:
            type: string
          title: uris
          type: array
      title: ResourceRepresentation
      type: object
    ResourceServerRepresentation:
      example:
        clientId: clientId
        name: name
        policies:
        - owner: owner
          policies:
          - policies
          - policies
          resourcesData:
          - uris:
            - uris
            - uris
            ownerManagedAccess: true
            displayName: displayName
            name: name
            attributes:
              key: ""
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            type: type
            icon_uri: icon_uri
          - uris:
            - uris
            - uris
            ownerManagedAccess: true
            displayName: displayName
            name: name
            attributes:
              key: ""
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            type: type
            icon_uri: icon_uri
          description: description
          resources:
          - resources
          - resources
          type: type
          scopesData:
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          name: name
          id: id
          logic: POSITIVE
          scopes:
          - scopes
          - scopes
          config:
            key: ""
          decisionStrategy: AFFIRMATIVE
        - owner: owner
          policies:
          - policies
          - policies
          resourcesData:
          - uris:
            - uris
            - uris
            ownerManagedAccess: true
            displayName: displayName
            name: name
            attributes:
              key: ""
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            type: type
            icon_uri: icon_uri
          - uris:
            - uris
            - uris
            ownerManagedAccess: true
            displayName: displayName
            name: name
            attributes:
              key: ""
            id: id
            scopes:
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            - displayName: displayName
              name: name
              policies:
              - null
              - null
              resources:
              - null
              - null
              id: id
              iconUri: iconUri
            type: type
            icon_uri: icon_uri
          description: description
          resources:
          - resources
          - resources
          type: type
          scopesData:
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          name: name
          id: id
          logic: POSITIVE
          scopes:
          - scopes
          - scopes
          config:
            key: ""
          decisionStrategy: AFFIRMATIVE
        resources:
        - uris:
          - uris
          - uris
          ownerManagedAccess: true
          displayName: displayName
          name: name
          attributes:
            key: ""
          id: id
          scopes:
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          type: type
          icon_uri: icon_uri
        - uris:
          - uris
          - uris
          ownerManagedAccess: true
          displayName: displayName
          name: name
          attributes:
            key: ""
          id: id
          scopes:
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          - displayName: displayName
            name: name
            policies:
            - null
            - null
            resources:
            - null
            - null
            id: id
            iconUri: iconUri
          type: type
          icon_uri: icon_uri
        id: id
        scopes:
        - displayName: displayName
          name: name
          policies:
          - null
          - null
          resources:
          - null
          - null
          id: id
          iconUri: iconUri
        - displayName: displayName
          name: name
          policies:
          - null
          - null
          resources:
          - null
          - null
          id: id
          iconUri: iconUri
        allowRemoteResourceManagement: true
        decisionStrategy: AFFIRMATIVE
        policyEnforcementMode: ENFORCING
      properties:
        allowRemoteResourceManagement:
          title: allowRemoteResourceManagement
          type: boolean
        clientId:
          title: clientId
          type: string
        decisionStrategy:
          enum:
          - AFFIRMATIVE
          - UNANIMOUS
          - CONSENSUS
          title: decisionStrategy
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        policies:
          items:
            $ref: '#/components/schemas/PolicyRepresentation'
          title: policies
          type: array
        policyEnforcementMode:
          enum:
          - ENFORCING
          - PERMISSIVE
          - DISABLED
          title: policyEnforcementMode
          type: string
        resources:
          items:
            $ref: '#/components/schemas/ResourceRepresentation'
          title: resources
          type: array
        scopes:
          items:
            $ref: '#/components/schemas/ScopeRepresentation'
          title: scopes
          type: array
      title: ResourceServerRepresentation
      type: object
    RoleRepresentation:
      example:
        composites:
          client:
            key: ""
          realm:
          - realm
          - realm
        clientRole: true
        composite: true
        name: name
        description: description
        attributes:
          key: ""
        id: id
        containerId: containerId
      properties:
        attributes:
          additionalProperties: true
          title: attributes
          type: object
        clientRole:
          title: clientRole
          type: boolean
        composite:
          title: composite
          type: boolean
        composites:
          $ref: '#/components/schemas/RoleRepresentation-Composites'
        containerId:
          title: containerId
          type: string
        description:
          title: description
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
      title: RoleRepresentation
      type: object
    RoleRepresentation-Composites:
      example:
        client:
          key: ""
        realm:
        - realm
        - realm
      properties:
        client:
          additionalProperties: true
          title: client
          type: object
        realm:
          items:
            type: string
          title: realm
          type: array
      title: RoleRepresentation-Composites
      type: object
    RolesRepresentation:
      example:
        client:
          key: ""
        realm:
        - composites:
            client:
              key: ""
            realm:
            - realm
            - realm
          clientRole: true
          composite: true
          name: name
          description: description
          attributes:
            key: ""
          id: id
          containerId: containerId
        - composites:
            client:
              key: ""
            realm:
            - realm
            - realm
          clientRole: true
          composite: true
          name: name
          description: description
          attributes:
            key: ""
          id: id
          containerId: containerId
      properties:
        client:
          additionalProperties: true
          title: client
          type: object
        realm:
          items:
            $ref: '#/components/schemas/RoleRepresentation'
          title: realm
          type: array
      title: RolesRepresentation
      type: object
    ScopeMappingRepresentation:
      example:
        roles:
        - roles
        - roles
        client: client
        self: self
        clientScope: clientScope
      properties:
        client:
          title: client
          type: string
        clientScope:
          title: clientScope
          type: string
        roles:
          items:
            type: string
          title: roles
          type: array
        self:
          title: self
          type: string
      title: ScopeMappingRepresentation
      type: object
    ScopeRepresentation:
      example:
        displayName: displayName
        name: name
        policies:
        - null
        - null
        resources:
        - null
        - null
        id: id
        iconUri: iconUri
      properties:
        displayName:
          title: displayName
          type: string
        iconUri:
          title: iconUri
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
        policies:
          items:
            $ref: '#/components/schemas/PolicyRepresentation'
          title: policies
          type: array
        resources:
          items:
            $ref: '#/components/schemas/ResourceRepresentation'
          title: resources
          type: array
      title: ScopeRepresentation
      type: object
    ServerInfoRepresentation:
      example:
        socialProviders:
        - key: ""
        - key: ""
        clientInstallations:
          key: ""
        identityProviders:
        - key: ""
        - key: ""
        memoryInfo:
          freePercentage: 6
          total: 1
          freeFormated: freeFormated
          used: 5
          free: 0
          usedFormated: usedFormated
          totalFormated: totalFormated
        builtinProtocolMappers:
          key: ""
        profileInfo:
          disabledFeatures:
          - disabledFeatures
          - disabledFeatures
          previewFeatures:
          - previewFeatures
          - previewFeatures
          experimentalFeatures:
          - experimentalFeatures
          - experimentalFeatures
          name: name
        componentTypes:
          key: ""
        enums:
          key: ""
        systemInfo:
          uptimeMillis: 5
          userLocale: userLocale
          fileEncoding: fileEncoding
          javaVersion: javaVersion
          javaVmVersion: javaVmVersion
          osArchitecture: osArchitecture
          javaVendor: javaVendor
          osName: osName
          userName: userName
          version: version
          javaHome: javaHome
          uptime: uptime
          osVersion: osVersion
          javaVm: javaVm
          userDir: userDir
          serverTime: serverTime
          javaRuntime: javaRuntime
          userTimezone: userTimezone
        themes:
          key: ""
        protocolMapperTypes:
          key: ""
        clientImporters:
        - key: ""
        - key: ""
        passwordPolicies:
        - multipleSupported: true
          defaultValue: defaultValue
          displayName: displayName
          id: id
          configType: configType
        - multipleSupported: true
          defaultValue: defaultValue
          displayName: displayName
          id: id
          configType: configType
        providers:
          key: ""
      properties:
        builtinProtocolMappers:
          additionalProperties: true
          title: builtinProtocolMappers
          type: object
        clientImporters:
          items:
            additionalProperties: true
            type: object
          title: clientImporters
          type: array
        clientInstallations:
          additionalProperties: true
          title: clientInstallations
          type: object
        componentTypes:
          additionalProperties: true
          title: componentTypes
          type: object
        enums:
          additionalProperties: true
          title: enums
          type: object
        identityProviders:
          items:
            additionalProperties: true
            type: object
          title: identityProviders
          type: array
        memoryInfo:
          $ref: '#/components/schemas/MemoryInfoRepresentation'
        passwordPolicies:
          items:
            $ref: '#/components/schemas/PasswordPolicyTypeRepresentation'
          title: passwordPolicies
          type: array
        profileInfo:
          $ref: '#/components/schemas/ProfileInfoRepresentation'
        protocolMapperTypes:
          additionalProperties: true
          title: protocolMapperTypes
          type: object
        providers:
          additionalProperties: true
          title: providers
          type: object
        socialProviders:
          items:
            additionalProperties: true
            type: object
          title: socialProviders
          type: array
        systemInfo:
          $ref: '#/components/schemas/SystemInfoRepresentation'
        themes:
          additionalProperties: true
          title: themes
          type: object
      title: ServerInfoRepresentation
      type: object
    SpiInfoRepresentation:
      properties:
        internal:
          type: boolean
        providers:
          additionalProperties: true
          type: object
      type: object
    SynchronizationResult:
      example:
        ignored: true
        removed: 1
        added: 0
        failed: 6
        updated: 5
        status: status
      properties:
        added:
          format: int32
          title: added
          type: integer
        failed:
          format: int32
          title: failed
          type: integer
        ignored:
          title: ignored
          type: boolean
        removed:
          format: int32
          title: removed
          type: integer
        status:
          title: status
          type: string
        updated:
          format: int32
          title: updated
          type: integer
      title: SynchronizationResult
      type: object
    SystemInfoRepresentation:
      example:
        uptimeMillis: 5
        userLocale: userLocale
        fileEncoding: fileEncoding
        javaVersion: javaVersion
        javaVmVersion: javaVmVersion
        osArchitecture: osArchitecture
        javaVendor: javaVendor
        osName: osName
        userName: userName
        version: version
        javaHome: javaHome
        uptime: uptime
        osVersion: osVersion
        javaVm: javaVm
        userDir: userDir
        serverTime: serverTime
        javaRuntime: javaRuntime
        userTimezone: userTimezone
      properties:
        fileEncoding:
          title: fileEncoding
          type: string
        javaHome:
          title: javaHome
          type: string
        javaRuntime:
          title: javaRuntime
          type: string
        javaVendor:
          title: javaVendor
          type: string
        javaVersion:
          title: javaVersion
          type: string
        javaVm:
          title: javaVm
          type: string
        javaVmVersion:
          title: javaVmVersion
          type: string
        osArchitecture:
          title: osArchitecture
          type: string
        osName:
          title: osName
          type: string
        osVersion:
          title: osVersion
          type: string
        serverTime:
          title: serverTime
          type: string
        uptime:
          title: uptime
          type: string
        uptimeMillis:
          format: int64
          title: uptimeMillis
          type: integer
        userDir:
          title: userDir
          type: string
        userLocale:
          title: userLocale
          type: string
        userName:
          title: userName
          type: string
        userTimezone:
          title: userTimezone
          type: string
        version:
          title: version
          type: string
      title: SystemInfoRepresentation
      type: object
    TestLdapConnectionRepresentation:
      example:
        bindCredential: bindCredential
        bindDn: bindDn
        componentId: componentId
        startTls: startTls
        useTruststoreSpi: useTruststoreSpi
        action: action
        connectionUrl: connectionUrl
        connectionTimeout: connectionTimeout
      properties:
        action:
          title: action
          type: string
        bindCredential:
          title: bindCredential
          type: string
        bindDn:
          title: bindDn
          type: string
        componentId:
          title: componentId
          type: string
        connectionTimeout:
          title: connectionTimeout
          type: string
        connectionUrl:
          title: connectionUrl
          type: string
        startTls:
          title: startTls
          type: string
        useTruststoreSpi:
          title: useTruststoreSpi
          type: string
      title: TestLdapConnectionRepresentation
      type: object
    UserConsentRepresentation:
      example:
        lastUpdatedDate: 1
        clientId: clientId
        createdDate: 7
        grantedClientScopes:
        - grantedClientScopes
        - grantedClientScopes
      properties:
        clientId:
          title: clientId
          type: string
        createdDate:
          format: int64
          title: createdDate
          type: integer
        grantedClientScopes:
          items:
            type: string
          title: grantedClientScopes
          type: array
        lastUpdatedDate:
          format: int64
          title: lastUpdatedDate
          type: integer
      title: UserConsentRepresentation
      type: object
    UserFederationMapperRepresentation:
      example:
        federationProviderDisplayName: federationProviderDisplayName
        name: name
        id: id
        config:
          key: ""
        federationMapperType: federationMapperType
      properties:
        config:
          additionalProperties: true
          title: config
          type: object
        federationMapperType:
          title: federationMapperType
          type: string
        federationProviderDisplayName:
          title: federationProviderDisplayName
          type: string
        id:
          title: id
          type: string
        name:
          title: name
          type: string
      title: UserFederationMapperRepresentation
      type: object
    UserFederationProviderRepresentation:
      example:
        changedSyncPeriod: 6
        fullSyncPeriod: 0
        lastSync: 4
        displayName: displayName
        id: id
        priority: 8
        config:
          key: ""
        providerName: providerName
      properties:
        changedSyncPeriod:
          format: int32
          title: changedSyncPeriod
          type: integer
        config:
          additionalProperties: true
          title: config
          type: object
        displayName:
          title: displayName
          type: string
        fullSyncPeriod:
          format: int32
          title: fullSyncPeriod
          type: integer
        id:
          title: id
          type: string
        lastSync:
          format: int32
          title: lastSync
          type: integer
        priority:
          format: int32
          title: priority
          type: integer
        providerName:
          title: providerName
          type: string
      title: UserFederationProviderRepresentation
      type: object
    UserRepresentation:
      example:
        lastName: lastName
        serviceAccountClientId: serviceAccountClientId
        access:
          key: ""
        federatedIdentities:
        - userName: userName
          userId: userId
          identityProvider: identityProvider
        - userName: userName
          userId: userId
          identityProvider: identityProvider
        credentials:
        - temporary: true
          userLabel: userLabel
          createdDate: 5
          credentialData: credentialData
          id: id
          priority: 9
          type: type
          value: value
          secretData: secretData
        - temporary: true
          userLabel: userLabel
          createdDate: 5
          credentialData: credentialData
          id: id
          priority: 9
          type: type
          value: value
          secretData: secretData
        createdTimestamp: 4
        origin: origin
        groups:
        - groups
        - groups
        clientConsents:
        - lastUpdatedDate: 1
          clientId: clientId
          createdDate: 7
          grantedClientScopes:
          - grantedClientScopes
          - grantedClientScopes
        - lastUpdatedDate: 1
          clientId: clientId
          createdDate: 7
          grantedClientScopes:
          - grantedClientScopes
          - grantedClientScopes
        enabled: true
        notBefore: 9
        disableableCredentialTypes:
        - disableableCredentialTypes
        - disableableCredentialTypes
        emailVerified: true
        firstName: firstName
        realmRoles:
        - realmRoles
        - realmRoles
        requiredActions:
        - requiredActions
        - requiredActions
        federationLink: federationLink
        self: self
        attributes:
          key: ""
        id: id
        clientRoles:
          key: ""
        email: email
        username: username
      properties:
        access:
          additionalProperties: true
          title: access
          type: object
        attributes:
          additionalProperties: true
          title: attributes
          type: object
        clientConsents:
          items:
            $ref: '#/components/schemas/UserConsentRepresentation'
          title: clientConsents
          type: array
        clientRoles:
          additionalProperties: true
          title: clientRoles
          type: object
        createdTimestamp:
          format: int64
          title: createdTimestamp
          type: integer
        credentials:
          items:
            $ref: '#/components/schemas/CredentialRepresentation'
          title: credentials
          type: array
        disableableCredentialTypes:
          items:
            type: string
          title: disableableCredentialTypes
          type: array
        email:
          title: email
          type: string
        emailVerified:
          title: emailVerified
          type: boolean
        enabled:
          title: enabled
          type: boolean
        federatedIdentities:
          items:
            $ref: '#/components/schemas/FederatedIdentityRepresentation'
          title: federatedIdentities
          type: array
        federationLink:
          title: federationLink
          type: string
        firstName:
          title: firstName
          type: string
        groups:
          items:
            type: string
          title: groups
          type: array
        id:
          title: id
          type: string
        lastName:
          title: lastName
          type: string
        notBefore:
          format: int32
          title: notBefore
          type: integer
        origin:
          title: origin
          type: string
        realmRoles:
          items:
            type: string
          title: realmRoles
          type: array
        requiredActions:
          items:
            type: string
          title: requiredActions
          type: array
        self:
          title: self
          type: string
        serviceAccountClientId:
          title: serviceAccountClientId
          type: string
        username:
          title: username
          type: string
      title: UserRepresentation
      type: object
    UserSessionRepresentation:
      example:
        clients:
          key: ""
        ipAddress: ipAddress
        start: 6
        lastAccess: 0
        id: id
        userId: userId
        username: username
      properties:
        clients:
          additionalProperties: true
          title: clients
          type: object
        id:
          title: id
          type: string
        ipAddress:
          title: ipAddress
          type: string
        lastAccess:
          format: int64
          title: lastAccess
          type: integer
        start:
          format: int64
          title: start
          type: integer
        userId:
          title: userId
          type: string
        username:
          title: username
          type: string
      title: UserSessionRepresentation
      type: object
  securitySchemes:
    access_token:
      scheme: bearer
      type: http
      x-bearerInfoFunc: openapi_server.controllers.security_controller.info_from_access_token
