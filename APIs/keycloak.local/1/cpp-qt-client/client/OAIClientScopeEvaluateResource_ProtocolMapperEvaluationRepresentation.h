/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation.h
 *
 * 
 */

#ifndef OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation_H
#define OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation : public OAIObject {
public:
    OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation();
    OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation(QString json);
    ~OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getContainerId() const;
    void setContainerId(const QString &container_id);
    bool is_container_id_Set() const;
    bool is_container_id_Valid() const;

    QString getContainerName() const;
    void setContainerName(const QString &container_name);
    bool is_container_name_Set() const;
    bool is_container_name_Valid() const;

    QString getContainerType() const;
    void setContainerType(const QString &container_type);
    bool is_container_type_Set() const;
    bool is_container_type_Valid() const;

    QString getMapperId() const;
    void setMapperId(const QString &mapper_id);
    bool is_mapper_id_Set() const;
    bool is_mapper_id_Valid() const;

    QString getMapperName() const;
    void setMapperName(const QString &mapper_name);
    bool is_mapper_name_Set() const;
    bool is_mapper_name_Valid() const;

    QString getProtocolMapper() const;
    void setProtocolMapper(const QString &protocol_mapper);
    bool is_protocol_mapper_Set() const;
    bool is_protocol_mapper_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_container_id;
    bool m_container_id_isSet;
    bool m_container_id_isValid;

    QString m_container_name;
    bool m_container_name_isSet;
    bool m_container_name_isValid;

    QString m_container_type;
    bool m_container_type_isSet;
    bool m_container_type_isValid;

    QString m_mapper_id;
    bool m_mapper_id_isSet;
    bool m_mapper_id_isValid;

    QString m_mapper_name;
    bool m_mapper_name_isSet;
    bool m_mapper_name_isValid;

    QString m_protocol_mapper;
    bool m_protocol_mapper_isSet;
    bool m_protocol_mapper_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation)

#endif // OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation_H
