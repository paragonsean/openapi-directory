/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation() {
    this->initializeModel();
}

OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::~OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation() {}

void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::initializeModel() {

    m_container_id_isSet = false;
    m_container_id_isValid = false;

    m_container_name_isSet = false;
    m_container_name_isValid = false;

    m_container_type_isSet = false;
    m_container_type_isValid = false;

    m_mapper_id_isSet = false;
    m_mapper_id_isValid = false;

    m_mapper_name_isSet = false;
    m_mapper_name_isValid = false;

    m_protocol_mapper_isSet = false;
    m_protocol_mapper_isValid = false;
}

void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::fromJsonObject(QJsonObject json) {

    m_container_id_isValid = ::OpenAPI::fromJsonValue(m_container_id, json[QString("containerId")]);
    m_container_id_isSet = !json[QString("containerId")].isNull() && m_container_id_isValid;

    m_container_name_isValid = ::OpenAPI::fromJsonValue(m_container_name, json[QString("containerName")]);
    m_container_name_isSet = !json[QString("containerName")].isNull() && m_container_name_isValid;

    m_container_type_isValid = ::OpenAPI::fromJsonValue(m_container_type, json[QString("containerType")]);
    m_container_type_isSet = !json[QString("containerType")].isNull() && m_container_type_isValid;

    m_mapper_id_isValid = ::OpenAPI::fromJsonValue(m_mapper_id, json[QString("mapperId")]);
    m_mapper_id_isSet = !json[QString("mapperId")].isNull() && m_mapper_id_isValid;

    m_mapper_name_isValid = ::OpenAPI::fromJsonValue(m_mapper_name, json[QString("mapperName")]);
    m_mapper_name_isSet = !json[QString("mapperName")].isNull() && m_mapper_name_isValid;

    m_protocol_mapper_isValid = ::OpenAPI::fromJsonValue(m_protocol_mapper, json[QString("protocolMapper")]);
    m_protocol_mapper_isSet = !json[QString("protocolMapper")].isNull() && m_protocol_mapper_isValid;
}

QString OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::asJsonObject() const {
    QJsonObject obj;
    if (m_container_id_isSet) {
        obj.insert(QString("containerId"), ::OpenAPI::toJsonValue(m_container_id));
    }
    if (m_container_name_isSet) {
        obj.insert(QString("containerName"), ::OpenAPI::toJsonValue(m_container_name));
    }
    if (m_container_type_isSet) {
        obj.insert(QString("containerType"), ::OpenAPI::toJsonValue(m_container_type));
    }
    if (m_mapper_id_isSet) {
        obj.insert(QString("mapperId"), ::OpenAPI::toJsonValue(m_mapper_id));
    }
    if (m_mapper_name_isSet) {
        obj.insert(QString("mapperName"), ::OpenAPI::toJsonValue(m_mapper_name));
    }
    if (m_protocol_mapper_isSet) {
        obj.insert(QString("protocolMapper"), ::OpenAPI::toJsonValue(m_protocol_mapper));
    }
    return obj;
}

QString OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::getContainerId() const {
    return m_container_id;
}
void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::setContainerId(const QString &container_id) {
    m_container_id = container_id;
    m_container_id_isSet = true;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_container_id_Set() const{
    return m_container_id_isSet;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_container_id_Valid() const{
    return m_container_id_isValid;
}

QString OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::getContainerName() const {
    return m_container_name;
}
void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::setContainerName(const QString &container_name) {
    m_container_name = container_name;
    m_container_name_isSet = true;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_container_name_Set() const{
    return m_container_name_isSet;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_container_name_Valid() const{
    return m_container_name_isValid;
}

QString OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::getContainerType() const {
    return m_container_type;
}
void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::setContainerType(const QString &container_type) {
    m_container_type = container_type;
    m_container_type_isSet = true;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_container_type_Set() const{
    return m_container_type_isSet;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_container_type_Valid() const{
    return m_container_type_isValid;
}

QString OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::getMapperId() const {
    return m_mapper_id;
}
void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::setMapperId(const QString &mapper_id) {
    m_mapper_id = mapper_id;
    m_mapper_id_isSet = true;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_mapper_id_Set() const{
    return m_mapper_id_isSet;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_mapper_id_Valid() const{
    return m_mapper_id_isValid;
}

QString OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::getMapperName() const {
    return m_mapper_name;
}
void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::setMapperName(const QString &mapper_name) {
    m_mapper_name = mapper_name;
    m_mapper_name_isSet = true;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_mapper_name_Set() const{
    return m_mapper_name_isSet;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_mapper_name_Valid() const{
    return m_mapper_name_isValid;
}

QString OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::getProtocolMapper() const {
    return m_protocol_mapper;
}
void OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::setProtocolMapper(const QString &protocol_mapper) {
    m_protocol_mapper = protocol_mapper;
    m_protocol_mapper_isSet = true;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_protocol_mapper_Set() const{
    return m_protocol_mapper_isSet;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::is_protocol_mapper_Valid() const{
    return m_protocol_mapper_isValid;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_container_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_container_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mapper_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mapper_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_protocol_mapper_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIClientScopeEvaluateResource_ProtocolMapperEvaluationRepresentation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
