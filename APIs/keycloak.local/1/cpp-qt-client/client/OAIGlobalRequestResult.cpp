/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGlobalRequestResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGlobalRequestResult::OAIGlobalRequestResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGlobalRequestResult::OAIGlobalRequestResult() {
    this->initializeModel();
}

OAIGlobalRequestResult::~OAIGlobalRequestResult() {}

void OAIGlobalRequestResult::initializeModel() {

    m_failed_requests_isSet = false;
    m_failed_requests_isValid = false;

    m_success_requests_isSet = false;
    m_success_requests_isValid = false;
}

void OAIGlobalRequestResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGlobalRequestResult::fromJsonObject(QJsonObject json) {

    m_failed_requests_isValid = ::OpenAPI::fromJsonValue(m_failed_requests, json[QString("failedRequests")]);
    m_failed_requests_isSet = !json[QString("failedRequests")].isNull() && m_failed_requests_isValid;

    m_success_requests_isValid = ::OpenAPI::fromJsonValue(m_success_requests, json[QString("successRequests")]);
    m_success_requests_isSet = !json[QString("successRequests")].isNull() && m_success_requests_isValid;
}

QString OAIGlobalRequestResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGlobalRequestResult::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_requests.size() > 0) {
        obj.insert(QString("failedRequests"), ::OpenAPI::toJsonValue(m_failed_requests));
    }
    if (m_success_requests.size() > 0) {
        obj.insert(QString("successRequests"), ::OpenAPI::toJsonValue(m_success_requests));
    }
    return obj;
}

QList<QString> OAIGlobalRequestResult::getFailedRequests() const {
    return m_failed_requests;
}
void OAIGlobalRequestResult::setFailedRequests(const QList<QString> &failed_requests) {
    m_failed_requests = failed_requests;
    m_failed_requests_isSet = true;
}

bool OAIGlobalRequestResult::is_failed_requests_Set() const{
    return m_failed_requests_isSet;
}

bool OAIGlobalRequestResult::is_failed_requests_Valid() const{
    return m_failed_requests_isValid;
}

QList<QString> OAIGlobalRequestResult::getSuccessRequests() const {
    return m_success_requests;
}
void OAIGlobalRequestResult::setSuccessRequests(const QList<QString> &success_requests) {
    m_success_requests = success_requests;
    m_success_requests_isSet = true;
}

bool OAIGlobalRequestResult::is_success_requests_Set() const{
    return m_success_requests_isSet;
}

bool OAIGlobalRequestResult::is_success_requests_Valid() const{
    return m_success_requests_isValid;
}

bool OAIGlobalRequestResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_success_requests.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGlobalRequestResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
