/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRealmEventsConfigRepresentation.h
 *
 * 
 */

#ifndef OAIRealmEventsConfigRepresentation_H
#define OAIRealmEventsConfigRepresentation_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRealmEventsConfigRepresentation : public OAIObject {
public:
    OAIRealmEventsConfigRepresentation();
    OAIRealmEventsConfigRepresentation(QString json);
    ~OAIRealmEventsConfigRepresentation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdminEventsDetailsEnabled() const;
    void setAdminEventsDetailsEnabled(const bool &admin_events_details_enabled);
    bool is_admin_events_details_enabled_Set() const;
    bool is_admin_events_details_enabled_Valid() const;

    bool isAdminEventsEnabled() const;
    void setAdminEventsEnabled(const bool &admin_events_enabled);
    bool is_admin_events_enabled_Set() const;
    bool is_admin_events_enabled_Valid() const;

    QList<QString> getEnabledEventTypes() const;
    void setEnabledEventTypes(const QList<QString> &enabled_event_types);
    bool is_enabled_event_types_Set() const;
    bool is_enabled_event_types_Valid() const;

    bool isEventsEnabled() const;
    void setEventsEnabled(const bool &events_enabled);
    bool is_events_enabled_Set() const;
    bool is_events_enabled_Valid() const;

    qint64 getEventsExpiration() const;
    void setEventsExpiration(const qint64 &events_expiration);
    bool is_events_expiration_Set() const;
    bool is_events_expiration_Valid() const;

    QList<QString> getEventsListeners() const;
    void setEventsListeners(const QList<QString> &events_listeners);
    bool is_events_listeners_Set() const;
    bool is_events_listeners_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_admin_events_details_enabled;
    bool m_admin_events_details_enabled_isSet;
    bool m_admin_events_details_enabled_isValid;

    bool m_admin_events_enabled;
    bool m_admin_events_enabled_isSet;
    bool m_admin_events_enabled_isValid;

    QList<QString> m_enabled_event_types;
    bool m_enabled_event_types_isSet;
    bool m_enabled_event_types_isValid;

    bool m_events_enabled;
    bool m_events_enabled_isSet;
    bool m_events_enabled_isValid;

    qint64 m_events_expiration;
    bool m_events_expiration_isSet;
    bool m_events_expiration_isValid;

    QList<QString> m_events_listeners;
    bool m_events_listeners_isSet;
    bool m_events_listeners_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRealmEventsConfigRepresentation)

#endif // OAIRealmEventsConfigRepresentation_H
