/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICredentialRepresentation.h
 *
 * 
 */

#ifndef OAICredentialRepresentation_H
#define OAICredentialRepresentation_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICredentialRepresentation : public OAIObject {
public:
    OAICredentialRepresentation();
    OAICredentialRepresentation(QString json);
    ~OAICredentialRepresentation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getCreatedDate() const;
    void setCreatedDate(const qint64 &created_date);
    bool is_created_date_Set() const;
    bool is_created_date_Valid() const;

    QString getCredentialData() const;
    void setCredentialData(const QString &credential_data);
    bool is_credential_data_Set() const;
    bool is_credential_data_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getPriority() const;
    void setPriority(const qint32 &priority);
    bool is_priority_Set() const;
    bool is_priority_Valid() const;

    QString getSecretData() const;
    void setSecretData(const QString &secret_data);
    bool is_secret_data_Set() const;
    bool is_secret_data_Valid() const;

    bool isTemporary() const;
    void setTemporary(const bool &temporary);
    bool is_temporary_Set() const;
    bool is_temporary_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUserLabel() const;
    void setUserLabel(const QString &user_label);
    bool is_user_label_Set() const;
    bool is_user_label_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_created_date;
    bool m_created_date_isSet;
    bool m_created_date_isValid;

    QString m_credential_data;
    bool m_credential_data_isSet;
    bool m_credential_data_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_priority;
    bool m_priority_isSet;
    bool m_priority_isValid;

    QString m_secret_data;
    bool m_secret_data_isSet;
    bool m_secret_data_isValid;

    bool m_temporary;
    bool m_temporary_isSet;
    bool m_temporary_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_user_label;
    bool m_user_label_isSet;
    bool m_user_label_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICredentialRepresentation)

#endif // OAICredentialRepresentation_H
