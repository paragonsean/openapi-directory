/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUserRepresentation.h
 *
 * 
 */

#ifndef OAIUserRepresentation_H
#define OAIUserRepresentation_H

#include <QJsonObject>

#include "OAICredentialRepresentation.h"
#include "OAIFederatedIdentityRepresentation.h"
#include "OAIUserConsentRepresentation.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUserConsentRepresentation;
class OAICredentialRepresentation;
class OAIFederatedIdentityRepresentation;

class OAIUserRepresentation : public OAIObject {
public:
    OAIUserRepresentation();
    OAIUserRepresentation(QString json);
    ~OAIUserRepresentation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getAccess() const;
    void setAccess(const QMap<QString, QJsonValue> &access);
    bool is_access_Set() const;
    bool is_access_Valid() const;

    QMap<QString, QJsonValue> getAttributes() const;
    void setAttributes(const QMap<QString, QJsonValue> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QList<OAIUserConsentRepresentation> getClientConsents() const;
    void setClientConsents(const QList<OAIUserConsentRepresentation> &client_consents);
    bool is_client_consents_Set() const;
    bool is_client_consents_Valid() const;

    QMap<QString, QJsonValue> getClientRoles() const;
    void setClientRoles(const QMap<QString, QJsonValue> &client_roles);
    bool is_client_roles_Set() const;
    bool is_client_roles_Valid() const;

    qint64 getCreatedTimestamp() const;
    void setCreatedTimestamp(const qint64 &created_timestamp);
    bool is_created_timestamp_Set() const;
    bool is_created_timestamp_Valid() const;

    QList<OAICredentialRepresentation> getCredentials() const;
    void setCredentials(const QList<OAICredentialRepresentation> &credentials);
    bool is_credentials_Set() const;
    bool is_credentials_Valid() const;

    QList<QString> getDisableableCredentialTypes() const;
    void setDisableableCredentialTypes(const QList<QString> &disableable_credential_types);
    bool is_disableable_credential_types_Set() const;
    bool is_disableable_credential_types_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    bool isEmailVerified() const;
    void setEmailVerified(const bool &email_verified);
    bool is_email_verified_Set() const;
    bool is_email_verified_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QList<OAIFederatedIdentityRepresentation> getFederatedIdentities() const;
    void setFederatedIdentities(const QList<OAIFederatedIdentityRepresentation> &federated_identities);
    bool is_federated_identities_Set() const;
    bool is_federated_identities_Valid() const;

    QString getFederationLink() const;
    void setFederationLink(const QString &federation_link);
    bool is_federation_link_Set() const;
    bool is_federation_link_Valid() const;

    QString getFirstName() const;
    void setFirstName(const QString &first_name);
    bool is_first_name_Set() const;
    bool is_first_name_Valid() const;

    QList<QString> getGroups() const;
    void setGroups(const QList<QString> &groups);
    bool is_groups_Set() const;
    bool is_groups_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLastName() const;
    void setLastName(const QString &last_name);
    bool is_last_name_Set() const;
    bool is_last_name_Valid() const;

    qint32 getNotBefore() const;
    void setNotBefore(const qint32 &not_before);
    bool is_not_before_Set() const;
    bool is_not_before_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    QList<QString> getRealmRoles() const;
    void setRealmRoles(const QList<QString> &realm_roles);
    bool is_realm_roles_Set() const;
    bool is_realm_roles_Valid() const;

    QList<QString> getRequiredActions() const;
    void setRequiredActions(const QList<QString> &required_actions);
    bool is_required_actions_Set() const;
    bool is_required_actions_Valid() const;

    QString getSelf() const;
    void setSelf(const QString &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    QString getServiceAccountClientId() const;
    void setServiceAccountClientId(const QString &service_account_client_id);
    bool is_service_account_client_id_Set() const;
    bool is_service_account_client_id_Valid() const;

    QString getUsername() const;
    void setUsername(const QString &username);
    bool is_username_Set() const;
    bool is_username_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_access;
    bool m_access_isSet;
    bool m_access_isValid;

    QMap<QString, QJsonValue> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QList<OAIUserConsentRepresentation> m_client_consents;
    bool m_client_consents_isSet;
    bool m_client_consents_isValid;

    QMap<QString, QJsonValue> m_client_roles;
    bool m_client_roles_isSet;
    bool m_client_roles_isValid;

    qint64 m_created_timestamp;
    bool m_created_timestamp_isSet;
    bool m_created_timestamp_isValid;

    QList<OAICredentialRepresentation> m_credentials;
    bool m_credentials_isSet;
    bool m_credentials_isValid;

    QList<QString> m_disableable_credential_types;
    bool m_disableable_credential_types_isSet;
    bool m_disableable_credential_types_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    bool m_email_verified;
    bool m_email_verified_isSet;
    bool m_email_verified_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QList<OAIFederatedIdentityRepresentation> m_federated_identities;
    bool m_federated_identities_isSet;
    bool m_federated_identities_isValid;

    QString m_federation_link;
    bool m_federation_link_isSet;
    bool m_federation_link_isValid;

    QString m_first_name;
    bool m_first_name_isSet;
    bool m_first_name_isValid;

    QList<QString> m_groups;
    bool m_groups_isSet;
    bool m_groups_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_last_name;
    bool m_last_name_isSet;
    bool m_last_name_isValid;

    qint32 m_not_before;
    bool m_not_before_isSet;
    bool m_not_before_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    QList<QString> m_realm_roles;
    bool m_realm_roles_isSet;
    bool m_realm_roles_isValid;

    QList<QString> m_required_actions;
    bool m_required_actions_isSet;
    bool m_required_actions_isValid;

    QString m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    QString m_service_account_client_id;
    bool m_service_account_client_id_isSet;
    bool m_service_account_client_id_isValid;

    QString m_username;
    bool m_username_isSet;
    bool m_username_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUserRepresentation)

#endif // OAIUserRepresentation_H
