/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIManagementPermissionReference.h
 *
 * 
 */

#ifndef OAIManagementPermissionReference_H
#define OAIManagementPermissionReference_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIManagementPermissionReference : public OAIObject {
public:
    OAIManagementPermissionReference();
    OAIManagementPermissionReference(QString json);
    ~OAIManagementPermissionReference() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    QString getResource() const;
    void setResource(const QString &resource);
    bool is_resource_Set() const;
    bool is_resource_Valid() const;

    QMap<QString, QJsonValue> getScopePermissions() const;
    void setScopePermissions(const QMap<QString, QJsonValue> &scope_permissions);
    bool is_scope_permissions_Set() const;
    bool is_scope_permissions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    QString m_resource;
    bool m_resource_isSet;
    bool m_resource_isValid;

    QMap<QString, QJsonValue> m_scope_permissions;
    bool m_scope_permissions_isSet;
    bool m_scope_permissions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIManagementPermissionReference)

#endif // OAIManagementPermissionReference_H
