/**
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIResourceRepresentation.h
 *
 * 
 */

#ifndef OAIResourceRepresentation_H
#define OAIResourceRepresentation_H

#include <QJsonObject>

#include "OAIScopeRepresentation.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIScopeRepresentation;

class OAIResourceRepresentation : public OAIObject {
public:
    OAIResourceRepresentation();
    OAIResourceRepresentation(QString json);
    ~OAIResourceRepresentation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getAttributes() const;
    void setAttributes(const QMap<QString, QJsonValue> &attributes);
    bool is_attributes_Set() const;
    bool is_attributes_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getIconUri() const;
    void setIconUri(const QString &icon_uri);
    bool is_icon_uri_Set() const;
    bool is_icon_uri_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    bool isOwnerManagedAccess() const;
    void setOwnerManagedAccess(const bool &owner_managed_access);
    bool is_owner_managed_access_Set() const;
    bool is_owner_managed_access_Valid() const;

    QList<OAIScopeRepresentation> getScopes() const;
    void setScopes(const QList<OAIScopeRepresentation> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QList<QString> getUris() const;
    void setUris(const QList<QString> &uris);
    bool is_uris_Set() const;
    bool is_uris_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_attributes;
    bool m_attributes_isSet;
    bool m_attributes_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_icon_uri;
    bool m_icon_uri_isSet;
    bool m_icon_uri_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    bool m_owner_managed_access;
    bool m_owner_managed_access_isSet;
    bool m_owner_managed_access_isValid;

    QList<OAIScopeRepresentation> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QList<QString> m_uris;
    bool m_uris_isSet;
    bool m_uris_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIResourceRepresentation)

#endif // OAIResourceRepresentation_H
