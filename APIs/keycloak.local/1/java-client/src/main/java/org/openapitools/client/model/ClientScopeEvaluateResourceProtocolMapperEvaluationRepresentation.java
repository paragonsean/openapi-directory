/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:16.227825-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation {
  public static final String SERIALIZED_NAME_CONTAINER_ID = "containerId";
  @SerializedName(SERIALIZED_NAME_CONTAINER_ID)
  private String containerId;

  public static final String SERIALIZED_NAME_CONTAINER_NAME = "containerName";
  @SerializedName(SERIALIZED_NAME_CONTAINER_NAME)
  private String containerName;

  public static final String SERIALIZED_NAME_CONTAINER_TYPE = "containerType";
  @SerializedName(SERIALIZED_NAME_CONTAINER_TYPE)
  private String containerType;

  public static final String SERIALIZED_NAME_MAPPER_ID = "mapperId";
  @SerializedName(SERIALIZED_NAME_MAPPER_ID)
  private String mapperId;

  public static final String SERIALIZED_NAME_MAPPER_NAME = "mapperName";
  @SerializedName(SERIALIZED_NAME_MAPPER_NAME)
  private String mapperName;

  public static final String SERIALIZED_NAME_PROTOCOL_MAPPER = "protocolMapper";
  @SerializedName(SERIALIZED_NAME_PROTOCOL_MAPPER)
  private String protocolMapper;

  public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation() {
  }

  public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation containerId(String containerId) {
    this.containerId = containerId;
    return this;
  }

  /**
   * Get containerId
   * @return containerId
   */
  @javax.annotation.Nullable
  public String getContainerId() {
    return containerId;
  }

  public void setContainerId(String containerId) {
    this.containerId = containerId;
  }


  public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation containerName(String containerName) {
    this.containerName = containerName;
    return this;
  }

  /**
   * Get containerName
   * @return containerName
   */
  @javax.annotation.Nullable
  public String getContainerName() {
    return containerName;
  }

  public void setContainerName(String containerName) {
    this.containerName = containerName;
  }


  public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation containerType(String containerType) {
    this.containerType = containerType;
    return this;
  }

  /**
   * Get containerType
   * @return containerType
   */
  @javax.annotation.Nullable
  public String getContainerType() {
    return containerType;
  }

  public void setContainerType(String containerType) {
    this.containerType = containerType;
  }


  public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation mapperId(String mapperId) {
    this.mapperId = mapperId;
    return this;
  }

  /**
   * Get mapperId
   * @return mapperId
   */
  @javax.annotation.Nullable
  public String getMapperId() {
    return mapperId;
  }

  public void setMapperId(String mapperId) {
    this.mapperId = mapperId;
  }


  public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation mapperName(String mapperName) {
    this.mapperName = mapperName;
    return this;
  }

  /**
   * Get mapperName
   * @return mapperName
   */
  @javax.annotation.Nullable
  public String getMapperName() {
    return mapperName;
  }

  public void setMapperName(String mapperName) {
    this.mapperName = mapperName;
  }


  public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation protocolMapper(String protocolMapper) {
    this.protocolMapper = protocolMapper;
    return this;
  }

  /**
   * Get protocolMapper
   * @return protocolMapper
   */
  @javax.annotation.Nullable
  public String getProtocolMapper() {
    return protocolMapper;
  }

  public void setProtocolMapper(String protocolMapper) {
    this.protocolMapper = protocolMapper;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation clientScopeEvaluateResourceProtocolMapperEvaluationRepresentation = (ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation) o;
    return Objects.equals(this.containerId, clientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.containerId) &&
        Objects.equals(this.containerName, clientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.containerName) &&
        Objects.equals(this.containerType, clientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.containerType) &&
        Objects.equals(this.mapperId, clientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.mapperId) &&
        Objects.equals(this.mapperName, clientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.mapperName) &&
        Objects.equals(this.protocolMapper, clientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.protocolMapper);
  }

  @Override
  public int hashCode() {
    return Objects.hash(containerId, containerName, containerType, mapperId, mapperName, protocolMapper);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation {\n");
    sb.append("    containerId: ").append(toIndentedString(containerId)).append("\n");
    sb.append("    containerName: ").append(toIndentedString(containerName)).append("\n");
    sb.append("    containerType: ").append(toIndentedString(containerType)).append("\n");
    sb.append("    mapperId: ").append(toIndentedString(mapperId)).append("\n");
    sb.append("    mapperName: ").append(toIndentedString(mapperName)).append("\n");
    sb.append("    protocolMapper: ").append(toIndentedString(protocolMapper)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("containerId");
    openapiFields.add("containerName");
    openapiFields.add("containerType");
    openapiFields.add("mapperId");
    openapiFields.add("mapperName");
    openapiFields.add("protocolMapper");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation is not found in the empty JSON string", ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("containerId") != null && !jsonObj.get("containerId").isJsonNull()) && !jsonObj.get("containerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `containerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("containerId").toString()));
      }
      if ((jsonObj.get("containerName") != null && !jsonObj.get("containerName").isJsonNull()) && !jsonObj.get("containerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `containerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("containerName").toString()));
      }
      if ((jsonObj.get("containerType") != null && !jsonObj.get("containerType").isJsonNull()) && !jsonObj.get("containerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `containerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("containerType").toString()));
      }
      if ((jsonObj.get("mapperId") != null && !jsonObj.get("mapperId").isJsonNull()) && !jsonObj.get("mapperId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mapperId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mapperId").toString()));
      }
      if ((jsonObj.get("mapperName") != null && !jsonObj.get("mapperName").isJsonNull()) && !jsonObj.get("mapperName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `mapperName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("mapperName").toString()));
      }
      if ((jsonObj.get("protocolMapper") != null && !jsonObj.get("protocolMapper").isJsonNull()) && !jsonObj.get("protocolMapper").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `protocolMapper` to be a primitive type in the JSON string but got `%s`", jsonObj.get("protocolMapper").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.class));

       return (TypeAdapter<T>) new TypeAdapter<ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation>() {
           @Override
           public void write(JsonWriter out, ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation
   * @throws IOException if the JSON string is invalid with respect to ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation
   */
  public static ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation.class);
  }

  /**
   * Convert an instance of ClientScopeEvaluateResourceProtocolMapperEvaluationRepresentation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

