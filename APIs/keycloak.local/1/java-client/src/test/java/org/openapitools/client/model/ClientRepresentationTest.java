/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ProtocolMapperRepresentation;
import org.openapitools.client.model.ResourceServerRepresentation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ClientRepresentation
 */
public class ClientRepresentationTest {
    private final ClientRepresentation model = new ClientRepresentation();

    /**
     * Model tests for ClientRepresentation
     */
    @Test
    public void testClientRepresentation() {
        // TODO: test ClientRepresentation
    }

    /**
     * Test the property 'access'
     */
    @Test
    public void accessTest() {
        // TODO: test access
    }

    /**
     * Test the property 'adminUrl'
     */
    @Test
    public void adminUrlTest() {
        // TODO: test adminUrl
    }

    /**
     * Test the property 'alwaysDisplayInConsole'
     */
    @Test
    public void alwaysDisplayInConsoleTest() {
        // TODO: test alwaysDisplayInConsole
    }

    /**
     * Test the property 'attributes'
     */
    @Test
    public void attributesTest() {
        // TODO: test attributes
    }

    /**
     * Test the property 'authenticationFlowBindingOverrides'
     */
    @Test
    public void authenticationFlowBindingOverridesTest() {
        // TODO: test authenticationFlowBindingOverrides
    }

    /**
     * Test the property 'authorizationServicesEnabled'
     */
    @Test
    public void authorizationServicesEnabledTest() {
        // TODO: test authorizationServicesEnabled
    }

    /**
     * Test the property 'authorizationSettings'
     */
    @Test
    public void authorizationSettingsTest() {
        // TODO: test authorizationSettings
    }

    /**
     * Test the property 'baseUrl'
     */
    @Test
    public void baseUrlTest() {
        // TODO: test baseUrl
    }

    /**
     * Test the property 'bearerOnly'
     */
    @Test
    public void bearerOnlyTest() {
        // TODO: test bearerOnly
    }

    /**
     * Test the property 'clientAuthenticatorType'
     */
    @Test
    public void clientAuthenticatorTypeTest() {
        // TODO: test clientAuthenticatorType
    }

    /**
     * Test the property 'clientId'
     */
    @Test
    public void clientIdTest() {
        // TODO: test clientId
    }

    /**
     * Test the property 'consentRequired'
     */
    @Test
    public void consentRequiredTest() {
        // TODO: test consentRequired
    }

    /**
     * Test the property 'defaultClientScopes'
     */
    @Test
    public void defaultClientScopesTest() {
        // TODO: test defaultClientScopes
    }

    /**
     * Test the property 'defaultRoles'
     */
    @Test
    public void defaultRolesTest() {
        // TODO: test defaultRoles
    }

    /**
     * Test the property 'description'
     */
    @Test
    public void descriptionTest() {
        // TODO: test description
    }

    /**
     * Test the property 'directAccessGrantsEnabled'
     */
    @Test
    public void directAccessGrantsEnabledTest() {
        // TODO: test directAccessGrantsEnabled
    }

    /**
     * Test the property 'enabled'
     */
    @Test
    public void enabledTest() {
        // TODO: test enabled
    }

    /**
     * Test the property 'frontchannelLogout'
     */
    @Test
    public void frontchannelLogoutTest() {
        // TODO: test frontchannelLogout
    }

    /**
     * Test the property 'fullScopeAllowed'
     */
    @Test
    public void fullScopeAllowedTest() {
        // TODO: test fullScopeAllowed
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'implicitFlowEnabled'
     */
    @Test
    public void implicitFlowEnabledTest() {
        // TODO: test implicitFlowEnabled
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'nodeReRegistrationTimeout'
     */
    @Test
    public void nodeReRegistrationTimeoutTest() {
        // TODO: test nodeReRegistrationTimeout
    }

    /**
     * Test the property 'notBefore'
     */
    @Test
    public void notBeforeTest() {
        // TODO: test notBefore
    }

    /**
     * Test the property 'optionalClientScopes'
     */
    @Test
    public void optionalClientScopesTest() {
        // TODO: test optionalClientScopes
    }

    /**
     * Test the property 'origin'
     */
    @Test
    public void originTest() {
        // TODO: test origin
    }

    /**
     * Test the property 'protocol'
     */
    @Test
    public void protocolTest() {
        // TODO: test protocol
    }

    /**
     * Test the property 'protocolMappers'
     */
    @Test
    public void protocolMappersTest() {
        // TODO: test protocolMappers
    }

    /**
     * Test the property 'publicClient'
     */
    @Test
    public void publicClientTest() {
        // TODO: test publicClient
    }

    /**
     * Test the property 'redirectUris'
     */
    @Test
    public void redirectUrisTest() {
        // TODO: test redirectUris
    }

    /**
     * Test the property 'registeredNodes'
     */
    @Test
    public void registeredNodesTest() {
        // TODO: test registeredNodes
    }

    /**
     * Test the property 'registrationAccessToken'
     */
    @Test
    public void registrationAccessTokenTest() {
        // TODO: test registrationAccessToken
    }

    /**
     * Test the property 'rootUrl'
     */
    @Test
    public void rootUrlTest() {
        // TODO: test rootUrl
    }

    /**
     * Test the property 'secret'
     */
    @Test
    public void secretTest() {
        // TODO: test secret
    }

    /**
     * Test the property 'serviceAccountsEnabled'
     */
    @Test
    public void serviceAccountsEnabledTest() {
        // TODO: test serviceAccountsEnabled
    }

    /**
     * Test the property 'standardFlowEnabled'
     */
    @Test
    public void standardFlowEnabledTest() {
        // TODO: test standardFlowEnabled
    }

    /**
     * Test the property 'surrogateAuthRequired'
     */
    @Test
    public void surrogateAuthRequiredTest() {
        // TODO: test surrogateAuthRequired
    }

    /**
     * Test the property 'webOrigins'
     */
    @Test
    public void webOriginsTest() {
        // TODO: test webOrigins
    }

}
