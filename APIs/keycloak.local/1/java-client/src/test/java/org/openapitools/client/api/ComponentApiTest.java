/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ComponentRepresentation;
import org.openapitools.client.model.ComponentTypeRepresentation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ComponentApi
 */
@Disabled
public class ComponentApiTest {

    private final ComponentApi api = new ComponentApi();

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmComponentsGetTest() throws ApiException {
        String realm = null;
        String name = null;
        String parent = null;
        String type = null;
        List<ComponentRepresentation> response = api.realmComponentsGet(realm, name, parent, type);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmComponentsIdDeleteTest() throws ApiException {
        String realm = null;
        String id = null;
        api.realmComponentsIdDelete(realm, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmComponentsIdGetTest() throws ApiException {
        String realm = null;
        String id = null;
        ComponentRepresentation response = api.realmComponentsIdGet(realm, id);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmComponentsIdPutTest() throws ApiException {
        String realm = null;
        String id = null;
        ComponentRepresentation componentRepresentation = null;
        api.realmComponentsIdPut(realm, id, componentRepresentation);
        // TODO: test validations
    }

    /**
     * List of subcomponent types that are available to configure for a particular parent component.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmComponentsIdSubComponentTypesGetTest() throws ApiException {
        String realm = null;
        String id = null;
        String type = null;
        List<ComponentTypeRepresentation> response = api.realmComponentsIdSubComponentTypesGet(realm, id, type);
        // TODO: test validations
    }

    /**
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmComponentsPostTest() throws ApiException {
        String realm = null;
        ComponentRepresentation componentRepresentation = null;
        api.realmComponentsPost(realm, componentRepresentation);
        // TODO: test validations
    }

}
