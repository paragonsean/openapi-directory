/*
 * Keycloak Admin REST API
 * This is a REST API reference for the Keycloak Admin
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ProtocolMapperRepresentation;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ProtocolMappersApi
 */
@Disabled
public class ProtocolMappersApiTest {

    private final ProtocolMappersApi api = new ProtocolMappersApi();

    /**
     * Delete the mapper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientScopesId1ProtocolMappersModelsId2DeleteTest() throws ApiException {
        String realm = null;
        String id1 = null;
        String id2 = null;
        api.realmClientScopesId1ProtocolMappersModelsId2Delete(realm, id1, id2);
        // TODO: test validations
    }

    /**
     * Get mapper by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientScopesId1ProtocolMappersModelsId2GetTest() throws ApiException {
        String realm = null;
        String id1 = null;
        String id2 = null;
        ProtocolMapperRepresentation response = api.realmClientScopesId1ProtocolMappersModelsId2Get(realm, id1, id2);
        // TODO: test validations
    }

    /**
     * Update the mapper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientScopesId1ProtocolMappersModelsId2PutTest() throws ApiException {
        String realm = null;
        String id1 = null;
        String id2 = null;
        ProtocolMapperRepresentation protocolMapperRepresentation = null;
        api.realmClientScopesId1ProtocolMappersModelsId2Put(realm, id1, id2, protocolMapperRepresentation);
        // TODO: test validations
    }

    /**
     * Create multiple mappers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientScopesIdProtocolMappersAddModelsPostTest() throws ApiException {
        String realm = null;
        String id = null;
        List<ProtocolMapperRepresentation> protocolMapperRepresentation = null;
        api.realmClientScopesIdProtocolMappersAddModelsPost(realm, id, protocolMapperRepresentation);
        // TODO: test validations
    }

    /**
     * Get mappers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientScopesIdProtocolMappersModelsGetTest() throws ApiException {
        String realm = null;
        String id = null;
        List<ProtocolMapperRepresentation> response = api.realmClientScopesIdProtocolMappersModelsGet(realm, id);
        // TODO: test validations
    }

    /**
     * Create a mapper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientScopesIdProtocolMappersModelsPostTest() throws ApiException {
        String realm = null;
        String id = null;
        ProtocolMapperRepresentation protocolMapperRepresentation = null;
        api.realmClientScopesIdProtocolMappersModelsPost(realm, id, protocolMapperRepresentation);
        // TODO: test validations
    }

    /**
     * Get mappers by name for a specific protocol
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientScopesIdProtocolMappersProtocolProtocolGetTest() throws ApiException {
        String realm = null;
        String id = null;
        String protocol = null;
        List<ProtocolMapperRepresentation> response = api.realmClientScopesIdProtocolMappersProtocolProtocolGet(realm, id, protocol);
        // TODO: test validations
    }

    /**
     * Delete the mapper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientsId1ProtocolMappersModelsId2DeleteTest() throws ApiException {
        String realm = null;
        String id1 = null;
        String id2 = null;
        api.realmClientsId1ProtocolMappersModelsId2Delete(realm, id1, id2);
        // TODO: test validations
    }

    /**
     * Get mapper by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientsId1ProtocolMappersModelsId2GetTest() throws ApiException {
        String realm = null;
        String id1 = null;
        String id2 = null;
        ProtocolMapperRepresentation response = api.realmClientsId1ProtocolMappersModelsId2Get(realm, id1, id2);
        // TODO: test validations
    }

    /**
     * Update the mapper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientsId1ProtocolMappersModelsId2PutTest() throws ApiException {
        String realm = null;
        String id1 = null;
        String id2 = null;
        ProtocolMapperRepresentation protocolMapperRepresentation = null;
        api.realmClientsId1ProtocolMappersModelsId2Put(realm, id1, id2, protocolMapperRepresentation);
        // TODO: test validations
    }

    /**
     * Create multiple mappers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientsIdProtocolMappersAddModelsPostTest() throws ApiException {
        String realm = null;
        String id = null;
        List<ProtocolMapperRepresentation> protocolMapperRepresentation = null;
        api.realmClientsIdProtocolMappersAddModelsPost(realm, id, protocolMapperRepresentation);
        // TODO: test validations
    }

    /**
     * Get mappers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientsIdProtocolMappersModelsGetTest() throws ApiException {
        String realm = null;
        String id = null;
        List<ProtocolMapperRepresentation> response = api.realmClientsIdProtocolMappersModelsGet(realm, id);
        // TODO: test validations
    }

    /**
     * Create a mapper
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientsIdProtocolMappersModelsPostTest() throws ApiException {
        String realm = null;
        String id = null;
        ProtocolMapperRepresentation protocolMapperRepresentation = null;
        api.realmClientsIdProtocolMappersModelsPost(realm, id, protocolMapperRepresentation);
        // TODO: test validations
    }

    /**
     * Get mappers by name for a specific protocol
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void realmClientsIdProtocolMappersProtocolProtocolGetTest() throws ApiException {
        String realm = null;
        String id = null;
        String protocol = null;
        List<ProtocolMapperRepresentation> response = api.realmClientsIdProtocolMappersProtocolProtocolGet(realm, id, protocol);
        // TODO: test validations
    }

}
