/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OauthAccessTokenPost200Response from '../model/OauthAccessTokenPost200Response';
import OauthAccessTokenPostRequest from '../model/OauthAccessTokenPostRequest';
import OauthLiveSessionTokenPost200Response from '../model/OauthLiveSessionTokenPost200Response';
import OauthLiveSessionTokenPostRequest from '../model/OauthLiveSessionTokenPostRequest';
import OauthRequestTokenPost200Response from '../model/OauthRequestTokenPost200Response';
import OauthRequestTokenPostRequest from '../model/OauthRequestTokenPostRequest';

/**
* OAuth service.
* @module api/OAuthApi
* @version 1.0.0
*/
export default class OAuthApi {

    /**
    * Constructs a new OAuthApi. 
    * @alias module:api/OAuthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the oauthAccessTokenPost operation.
     * @callback module:api/OAuthApi~oauthAccessTokenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OauthAccessTokenPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtain a access token
     * Obtain an access token using the request token and the verification code you received after the user provided authorization. See section 6.3 of the OAuth v1.0a specification for more details.  
     * @param {module:model/OauthAccessTokenPostRequest} oauthAccessTokenPostRequest OAuth Parameters
     * @param {module:api/OAuthApi~oauthAccessTokenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OauthAccessTokenPost200Response}
     */
    oauthAccessTokenPost(oauthAccessTokenPostRequest, callback) {
      let postBody = oauthAccessTokenPostRequest;
      // verify the required parameter 'oauthAccessTokenPostRequest' is set
      if (oauthAccessTokenPostRequest === undefined || oauthAccessTokenPostRequest === null) {
        throw new Error("Missing the required parameter 'oauthAccessTokenPostRequest' when calling oauthAccessTokenPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OauthAccessTokenPost200Response;
      return this.apiClient.callApi(
        '/oauth/access_token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthLiveSessionTokenPost operation.
     * @callback module:api/OAuthApi~oauthLiveSessionTokenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OauthLiveSessionTokenPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtain a live session token
     * In order to access protected IB resources, a live session token is required. This endpoint allows consumers to obtain a live session token to access these resources using an OAuth access token and the Diffie-Hellman prime and generator supplied during the registration process. Note this is an additional IB-specific step, and not part of the OAuth v1.0a specification. Please refer to the \"OAuth at Interactive Brokers\" document for more details.  https://www.interactivebrokers.com/webtradingapi/oauth.pdf 
     * @param {module:model/OauthLiveSessionTokenPostRequest} oauthLiveSessionTokenPostRequest OAuth Parameters
     * @param {module:api/OAuthApi~oauthLiveSessionTokenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OauthLiveSessionTokenPost200Response}
     */
    oauthLiveSessionTokenPost(oauthLiveSessionTokenPostRequest, callback) {
      let postBody = oauthLiveSessionTokenPostRequest;
      // verify the required parameter 'oauthLiveSessionTokenPostRequest' is set
      if (oauthLiveSessionTokenPostRequest === undefined || oauthLiveSessionTokenPostRequest === null) {
        throw new Error("Missing the required parameter 'oauthLiveSessionTokenPostRequest' when calling oauthLiveSessionTokenPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OauthLiveSessionTokenPost200Response;
      return this.apiClient.callApi(
        '/oauth/live_session_token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the oauthRequestTokenPost operation.
     * @callback module:api/OAuthApi~oauthRequestTokenPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OauthRequestTokenPost200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Obtain a request token
     * Obtain a request token. See section 6.1 of the OAuth v1.0a specification for more information. http://oauth.net/core/1.0a/#auth_step1  Note we do not return an oauth_token_secret in the response as we are using RSA signatures rather than PLAINTEXT authentication.  
     * @param {module:model/OauthRequestTokenPostRequest} oauthRequestTokenPostRequest OAuth Parameters
     * @param {module:api/OAuthApi~oauthRequestTokenPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OauthRequestTokenPost200Response}
     */
    oauthRequestTokenPost(oauthRequestTokenPostRequest, callback) {
      let postBody = oauthRequestTokenPostRequest;
      // verify the required parameter 'oauthRequestTokenPostRequest' is set
      if (oauthRequestTokenPostRequest === undefined || oauthRequestTokenPostRequest === null) {
        throw new Error("Missing the required parameter 'oauthRequestTokenPostRequest' when calling oauthRequestTokenPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['cookieAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = OauthRequestTokenPost200Response;
      return this.apiClient.callApi(
        '/oauth/request_token', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
