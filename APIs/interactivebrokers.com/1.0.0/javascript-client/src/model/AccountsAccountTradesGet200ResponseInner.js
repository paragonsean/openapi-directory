/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OrderType from './OrderType';

/**
 * The AccountsAccountTradesGet200ResponseInner model module.
 * @module model/AccountsAccountTradesGet200ResponseInner
 * @version 1.0.0
 */
class AccountsAccountTradesGet200ResponseInner {
    /**
     * Constructs a new <code>AccountsAccountTradesGet200ResponseInner</code>.
     * @alias module:model/AccountsAccountTradesGet200ResponseInner
     */
    constructor() { 
        
        AccountsAccountTradesGet200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountsAccountTradesGet200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountsAccountTradesGet200ResponseInner} obj Optional instance to populate.
     * @return {module:model/AccountsAccountTradesGet200ResponseInner} The populated <code>AccountsAccountTradesGet200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountsAccountTradesGet200ResponseInner();

            if (data.hasOwnProperty('AvgPrice')) {
                obj['AvgPrice'] = ApiClient.convertToType(data['AvgPrice'], 'Number');
            }
            if (data.hasOwnProperty('Commission')) {
                obj['Commission'] = ApiClient.convertToType(data['Commission'], 'Number');
            }
            if (data.hasOwnProperty('CommissionCurrency')) {
                obj['CommissionCurrency'] = ApiClient.convertToType(data['CommissionCurrency'], 'String');
            }
            if (data.hasOwnProperty('ContractId')) {
                obj['ContractId'] = ApiClient.convertToType(data['ContractId'], 'Number');
            }
            if (data.hasOwnProperty('Currency')) {
                obj['Currency'] = ApiClient.convertToType(data['Currency'], 'String');
            }
            if (data.hasOwnProperty('CustomerOrderId')) {
                obj['CustomerOrderId'] = ApiClient.convertToType(data['CustomerOrderId'], 'Number');
            }
            if (data.hasOwnProperty('ExecId')) {
                obj['ExecId'] = ApiClient.convertToType(data['ExecId'], 'String');
            }
            if (data.hasOwnProperty('ExecutionTime')) {
                obj['ExecutionTime'] = ApiClient.convertToType(data['ExecutionTime'], 'String');
            }
            if (data.hasOwnProperty('FilledQuantity')) {
                obj['FilledQuantity'] = ApiClient.convertToType(data['FilledQuantity'], 'Number');
            }
            if (data.hasOwnProperty('LastMarket')) {
                obj['LastMarket'] = ApiClient.convertToType(data['LastMarket'], 'String');
            }
            if (data.hasOwnProperty('ListingExchange')) {
                obj['ListingExchange'] = ApiClient.convertToType(data['ListingExchange'], 'String');
            }
            if (data.hasOwnProperty('OrderId')) {
                obj['OrderId'] = ApiClient.convertToType(data['OrderId'], 'String');
            }
            if (data.hasOwnProperty('OrderType')) {
                obj['OrderType'] = OrderType.constructFromObject(data['OrderType']);
            }
            if (data.hasOwnProperty('Quantity')) {
                obj['Quantity'] = ApiClient.convertToType(data['Quantity'], 'Number');
            }
            if (data.hasOwnProperty('RemainingQuantity')) {
                obj['RemainingQuantity'] = ApiClient.convertToType(data['RemainingQuantity'], 'Number');
            }
            if (data.hasOwnProperty('Side')) {
                obj['Side'] = ApiClient.convertToType(data['Side'], 'String');
            }
            if (data.hasOwnProperty('Ticker')) {
                obj['Ticker'] = ApiClient.convertToType(data['Ticker'], 'String');
            }
            if (data.hasOwnProperty('TradePrice')) {
                obj['TradePrice'] = ApiClient.convertToType(data['TradePrice'], 'Number');
            }
            if (data.hasOwnProperty('TradeSize')) {
                obj['TradeSize'] = ApiClient.convertToType(data['TradeSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountsAccountTradesGet200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountsAccountTradesGet200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['CommissionCurrency'] && !(typeof data['CommissionCurrency'] === 'string' || data['CommissionCurrency'] instanceof String)) {
            throw new Error("Expected the field `CommissionCurrency` to be a primitive type in the JSON string but got " + data['CommissionCurrency']);
        }
        // ensure the json data is a string
        if (data['Currency'] && !(typeof data['Currency'] === 'string' || data['Currency'] instanceof String)) {
            throw new Error("Expected the field `Currency` to be a primitive type in the JSON string but got " + data['Currency']);
        }
        // ensure the json data is a string
        if (data['ExecId'] && !(typeof data['ExecId'] === 'string' || data['ExecId'] instanceof String)) {
            throw new Error("Expected the field `ExecId` to be a primitive type in the JSON string but got " + data['ExecId']);
        }
        // ensure the json data is a string
        if (data['ExecutionTime'] && !(typeof data['ExecutionTime'] === 'string' || data['ExecutionTime'] instanceof String)) {
            throw new Error("Expected the field `ExecutionTime` to be a primitive type in the JSON string but got " + data['ExecutionTime']);
        }
        // ensure the json data is a string
        if (data['LastMarket'] && !(typeof data['LastMarket'] === 'string' || data['LastMarket'] instanceof String)) {
            throw new Error("Expected the field `LastMarket` to be a primitive type in the JSON string but got " + data['LastMarket']);
        }
        // ensure the json data is a string
        if (data['ListingExchange'] && !(typeof data['ListingExchange'] === 'string' || data['ListingExchange'] instanceof String)) {
            throw new Error("Expected the field `ListingExchange` to be a primitive type in the JSON string but got " + data['ListingExchange']);
        }
        // ensure the json data is a string
        if (data['OrderId'] && !(typeof data['OrderId'] === 'string' || data['OrderId'] instanceof String)) {
            throw new Error("Expected the field `OrderId` to be a primitive type in the JSON string but got " + data['OrderId']);
        }
        // ensure the json data is a string
        if (data['Side'] && !(typeof data['Side'] === 'string' || data['Side'] instanceof String)) {
            throw new Error("Expected the field `Side` to be a primitive type in the JSON string but got " + data['Side']);
        }
        // ensure the json data is a string
        if (data['Ticker'] && !(typeof data['Ticker'] === 'string' || data['Ticker'] instanceof String)) {
            throw new Error("Expected the field `Ticker` to be a primitive type in the JSON string but got " + data['Ticker']);
        }

        return true;
    }


}



/**
 * @member {Number} AvgPrice
 */
AccountsAccountTradesGet200ResponseInner.prototype['AvgPrice'] = undefined;

/**
 * @member {Number} Commission
 */
AccountsAccountTradesGet200ResponseInner.prototype['Commission'] = undefined;

/**
 * @member {String} CommissionCurrency
 */
AccountsAccountTradesGet200ResponseInner.prototype['CommissionCurrency'] = undefined;

/**
 * @member {Number} ContractId
 */
AccountsAccountTradesGet200ResponseInner.prototype['ContractId'] = undefined;

/**
 * @member {String} Currency
 */
AccountsAccountTradesGet200ResponseInner.prototype['Currency'] = undefined;

/**
 * @member {Number} CustomerOrderId
 */
AccountsAccountTradesGet200ResponseInner.prototype['CustomerOrderId'] = undefined;

/**
 * @member {String} ExecId
 */
AccountsAccountTradesGet200ResponseInner.prototype['ExecId'] = undefined;

/**
 * @member {String} ExecutionTime
 */
AccountsAccountTradesGet200ResponseInner.prototype['ExecutionTime'] = undefined;

/**
 * @member {Number} FilledQuantity
 */
AccountsAccountTradesGet200ResponseInner.prototype['FilledQuantity'] = undefined;

/**
 * @member {String} LastMarket
 */
AccountsAccountTradesGet200ResponseInner.prototype['LastMarket'] = undefined;

/**
 * @member {String} ListingExchange
 */
AccountsAccountTradesGet200ResponseInner.prototype['ListingExchange'] = undefined;

/**
 * @member {String} OrderId
 */
AccountsAccountTradesGet200ResponseInner.prototype['OrderId'] = undefined;

/**
 * @member {module:model/OrderType} OrderType
 */
AccountsAccountTradesGet200ResponseInner.prototype['OrderType'] = undefined;

/**
 * @member {Number} Quantity
 */
AccountsAccountTradesGet200ResponseInner.prototype['Quantity'] = undefined;

/**
 * @member {Number} RemainingQuantity
 */
AccountsAccountTradesGet200ResponseInner.prototype['RemainingQuantity'] = undefined;

/**
 * @member {module:model/AccountsAccountTradesGet200ResponseInner.SideEnum} Side
 */
AccountsAccountTradesGet200ResponseInner.prototype['Side'] = undefined;

/**
 * @member {String} Ticker
 */
AccountsAccountTradesGet200ResponseInner.prototype['Ticker'] = undefined;

/**
 * @member {Number} TradePrice
 */
AccountsAccountTradesGet200ResponseInner.prototype['TradePrice'] = undefined;

/**
 * @member {Number} TradeSize
 */
AccountsAccountTradesGet200ResponseInner.prototype['TradeSize'] = undefined;





/**
 * Allowed values for the <code>Side</code> property.
 * @enum {String}
 * @readonly
 */
AccountsAccountTradesGet200ResponseInner['SideEnum'] = {

    /**
     * value: "1"
     * @const
     */
    "1": "1",

    /**
     * value: "2"
     * @const
     */
    "2": "2"
};



export default AccountsAccountTradesGet200ResponseInner;

