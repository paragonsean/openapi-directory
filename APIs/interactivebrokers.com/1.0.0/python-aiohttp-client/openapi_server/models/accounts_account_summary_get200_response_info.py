# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountsAccountSummaryGet200ResponseInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_code: str=None, account_ready: str=None, account_type: str=None, cushion: str=None, day_trades_remaining: str=None, day_trades_remaining_t: str=None, day_trades_remaining_t2: str=None, day_trades_remaining_t3: str=None, day_trades_remaining_t4: str=None, highest_severity: str=None, leverage_s: str=None, look_ahead_next_change: str=None, segment_title_c: str=None, segment_title_s: str=None, trading_type_s: str=None, what_if_pm_enabled: str=None):
        """AccountsAccountSummaryGet200ResponseInfo - a model defined in OpenAPI

        :param account_code: The account_code of this AccountsAccountSummaryGet200ResponseInfo.
        :param account_ready: The account_ready of this AccountsAccountSummaryGet200ResponseInfo.
        :param account_type: The account_type of this AccountsAccountSummaryGet200ResponseInfo.
        :param cushion: The cushion of this AccountsAccountSummaryGet200ResponseInfo.
        :param day_trades_remaining: The day_trades_remaining of this AccountsAccountSummaryGet200ResponseInfo.
        :param day_trades_remaining_t: The day_trades_remaining_t of this AccountsAccountSummaryGet200ResponseInfo.
        :param day_trades_remaining_t2: The day_trades_remaining_t2 of this AccountsAccountSummaryGet200ResponseInfo.
        :param day_trades_remaining_t3: The day_trades_remaining_t3 of this AccountsAccountSummaryGet200ResponseInfo.
        :param day_trades_remaining_t4: The day_trades_remaining_t4 of this AccountsAccountSummaryGet200ResponseInfo.
        :param highest_severity: The highest_severity of this AccountsAccountSummaryGet200ResponseInfo.
        :param leverage_s: The leverage_s of this AccountsAccountSummaryGet200ResponseInfo.
        :param look_ahead_next_change: The look_ahead_next_change of this AccountsAccountSummaryGet200ResponseInfo.
        :param segment_title_c: The segment_title_c of this AccountsAccountSummaryGet200ResponseInfo.
        :param segment_title_s: The segment_title_s of this AccountsAccountSummaryGet200ResponseInfo.
        :param trading_type_s: The trading_type_s of this AccountsAccountSummaryGet200ResponseInfo.
        :param what_if_pm_enabled: The what_if_pm_enabled of this AccountsAccountSummaryGet200ResponseInfo.
        """
        self.openapi_types = {
            'account_code': str,
            'account_ready': str,
            'account_type': str,
            'cushion': str,
            'day_trades_remaining': str,
            'day_trades_remaining_t': str,
            'day_trades_remaining_t2': str,
            'day_trades_remaining_t3': str,
            'day_trades_remaining_t4': str,
            'highest_severity': str,
            'leverage_s': str,
            'look_ahead_next_change': str,
            'segment_title_c': str,
            'segment_title_s': str,
            'trading_type_s': str,
            'what_if_pm_enabled': str
        }

        self.attribute_map = {
            'account_code': 'AccountCode',
            'account_ready': 'AccountReady',
            'account_type': 'AccountType',
            'cushion': 'Cushion',
            'day_trades_remaining': 'DayTradesRemaining',
            'day_trades_remaining_t': 'DayTradesRemainingT',
            'day_trades_remaining_t2': 'DayTradesRemainingT+2',
            'day_trades_remaining_t3': 'DayTradesRemainingT+3',
            'day_trades_remaining_t4': 'DayTradesRemainingT+4',
            'highest_severity': 'HighestSeverity',
            'leverage_s': 'Leverage-S',
            'look_ahead_next_change': 'LookAheadNextChange',
            'segment_title_c': 'SegmentTitle-C',
            'segment_title_s': 'SegmentTitle-S',
            'trading_type_s': 'TradingType-S',
            'what_if_pm_enabled': 'WhatIfPMEnabled'
        }

        self._account_code = account_code
        self._account_ready = account_ready
        self._account_type = account_type
        self._cushion = cushion
        self._day_trades_remaining = day_trades_remaining
        self._day_trades_remaining_t = day_trades_remaining_t
        self._day_trades_remaining_t2 = day_trades_remaining_t2
        self._day_trades_remaining_t3 = day_trades_remaining_t3
        self._day_trades_remaining_t4 = day_trades_remaining_t4
        self._highest_severity = highest_severity
        self._leverage_s = leverage_s
        self._look_ahead_next_change = look_ahead_next_change
        self._segment_title_c = segment_title_c
        self._segment_title_s = segment_title_s
        self._trading_type_s = trading_type_s
        self._what_if_pm_enabled = what_if_pm_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountsAccountSummaryGet200ResponseInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _accounts__account__summary_get_200_response_Info of this AccountsAccountSummaryGet200ResponseInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_code(self):
        """Gets the account_code of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The account_code of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._account_code

    @account_code.setter
    def account_code(self, account_code):
        """Sets the account_code of this AccountsAccountSummaryGet200ResponseInfo.


        :param account_code: The account_code of this AccountsAccountSummaryGet200ResponseInfo.
        :type account_code: str
        """

        self._account_code = account_code

    @property
    def account_ready(self):
        """Gets the account_ready of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The account_ready of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._account_ready

    @account_ready.setter
    def account_ready(self, account_ready):
        """Sets the account_ready of this AccountsAccountSummaryGet200ResponseInfo.


        :param account_ready: The account_ready of this AccountsAccountSummaryGet200ResponseInfo.
        :type account_ready: str
        """

        self._account_ready = account_ready

    @property
    def account_type(self):
        """Gets the account_type of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The account_type of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._account_type

    @account_type.setter
    def account_type(self, account_type):
        """Sets the account_type of this AccountsAccountSummaryGet200ResponseInfo.


        :param account_type: The account_type of this AccountsAccountSummaryGet200ResponseInfo.
        :type account_type: str
        """

        self._account_type = account_type

    @property
    def cushion(self):
        """Gets the cushion of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The cushion of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._cushion

    @cushion.setter
    def cushion(self, cushion):
        """Sets the cushion of this AccountsAccountSummaryGet200ResponseInfo.


        :param cushion: The cushion of this AccountsAccountSummaryGet200ResponseInfo.
        :type cushion: str
        """

        self._cushion = cushion

    @property
    def day_trades_remaining(self):
        """Gets the day_trades_remaining of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The day_trades_remaining of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._day_trades_remaining

    @day_trades_remaining.setter
    def day_trades_remaining(self, day_trades_remaining):
        """Sets the day_trades_remaining of this AccountsAccountSummaryGet200ResponseInfo.


        :param day_trades_remaining: The day_trades_remaining of this AccountsAccountSummaryGet200ResponseInfo.
        :type day_trades_remaining: str
        """

        self._day_trades_remaining = day_trades_remaining

    @property
    def day_trades_remaining_t(self):
        """Gets the day_trades_remaining_t of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The day_trades_remaining_t of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._day_trades_remaining_t

    @day_trades_remaining_t.setter
    def day_trades_remaining_t(self, day_trades_remaining_t):
        """Sets the day_trades_remaining_t of this AccountsAccountSummaryGet200ResponseInfo.


        :param day_trades_remaining_t: The day_trades_remaining_t of this AccountsAccountSummaryGet200ResponseInfo.
        :type day_trades_remaining_t: str
        """

        self._day_trades_remaining_t = day_trades_remaining_t

    @property
    def day_trades_remaining_t2(self):
        """Gets the day_trades_remaining_t2 of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The day_trades_remaining_t2 of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._day_trades_remaining_t2

    @day_trades_remaining_t2.setter
    def day_trades_remaining_t2(self, day_trades_remaining_t2):
        """Sets the day_trades_remaining_t2 of this AccountsAccountSummaryGet200ResponseInfo.


        :param day_trades_remaining_t2: The day_trades_remaining_t2 of this AccountsAccountSummaryGet200ResponseInfo.
        :type day_trades_remaining_t2: str
        """

        self._day_trades_remaining_t2 = day_trades_remaining_t2

    @property
    def day_trades_remaining_t3(self):
        """Gets the day_trades_remaining_t3 of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The day_trades_remaining_t3 of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._day_trades_remaining_t3

    @day_trades_remaining_t3.setter
    def day_trades_remaining_t3(self, day_trades_remaining_t3):
        """Sets the day_trades_remaining_t3 of this AccountsAccountSummaryGet200ResponseInfo.


        :param day_trades_remaining_t3: The day_trades_remaining_t3 of this AccountsAccountSummaryGet200ResponseInfo.
        :type day_trades_remaining_t3: str
        """

        self._day_trades_remaining_t3 = day_trades_remaining_t3

    @property
    def day_trades_remaining_t4(self):
        """Gets the day_trades_remaining_t4 of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The day_trades_remaining_t4 of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._day_trades_remaining_t4

    @day_trades_remaining_t4.setter
    def day_trades_remaining_t4(self, day_trades_remaining_t4):
        """Sets the day_trades_remaining_t4 of this AccountsAccountSummaryGet200ResponseInfo.


        :param day_trades_remaining_t4: The day_trades_remaining_t4 of this AccountsAccountSummaryGet200ResponseInfo.
        :type day_trades_remaining_t4: str
        """

        self._day_trades_remaining_t4 = day_trades_remaining_t4

    @property
    def highest_severity(self):
        """Gets the highest_severity of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The highest_severity of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._highest_severity

    @highest_severity.setter
    def highest_severity(self, highest_severity):
        """Sets the highest_severity of this AccountsAccountSummaryGet200ResponseInfo.


        :param highest_severity: The highest_severity of this AccountsAccountSummaryGet200ResponseInfo.
        :type highest_severity: str
        """

        self._highest_severity = highest_severity

    @property
    def leverage_s(self):
        """Gets the leverage_s of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The leverage_s of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._leverage_s

    @leverage_s.setter
    def leverage_s(self, leverage_s):
        """Sets the leverage_s of this AccountsAccountSummaryGet200ResponseInfo.


        :param leverage_s: The leverage_s of this AccountsAccountSummaryGet200ResponseInfo.
        :type leverage_s: str
        """

        self._leverage_s = leverage_s

    @property
    def look_ahead_next_change(self):
        """Gets the look_ahead_next_change of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The look_ahead_next_change of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._look_ahead_next_change

    @look_ahead_next_change.setter
    def look_ahead_next_change(self, look_ahead_next_change):
        """Sets the look_ahead_next_change of this AccountsAccountSummaryGet200ResponseInfo.


        :param look_ahead_next_change: The look_ahead_next_change of this AccountsAccountSummaryGet200ResponseInfo.
        :type look_ahead_next_change: str
        """

        self._look_ahead_next_change = look_ahead_next_change

    @property
    def segment_title_c(self):
        """Gets the segment_title_c of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The segment_title_c of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._segment_title_c

    @segment_title_c.setter
    def segment_title_c(self, segment_title_c):
        """Sets the segment_title_c of this AccountsAccountSummaryGet200ResponseInfo.


        :param segment_title_c: The segment_title_c of this AccountsAccountSummaryGet200ResponseInfo.
        :type segment_title_c: str
        """

        self._segment_title_c = segment_title_c

    @property
    def segment_title_s(self):
        """Gets the segment_title_s of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The segment_title_s of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._segment_title_s

    @segment_title_s.setter
    def segment_title_s(self, segment_title_s):
        """Sets the segment_title_s of this AccountsAccountSummaryGet200ResponseInfo.


        :param segment_title_s: The segment_title_s of this AccountsAccountSummaryGet200ResponseInfo.
        :type segment_title_s: str
        """

        self._segment_title_s = segment_title_s

    @property
    def trading_type_s(self):
        """Gets the trading_type_s of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The trading_type_s of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._trading_type_s

    @trading_type_s.setter
    def trading_type_s(self, trading_type_s):
        """Sets the trading_type_s of this AccountsAccountSummaryGet200ResponseInfo.


        :param trading_type_s: The trading_type_s of this AccountsAccountSummaryGet200ResponseInfo.
        :type trading_type_s: str
        """

        self._trading_type_s = trading_type_s

    @property
    def what_if_pm_enabled(self):
        """Gets the what_if_pm_enabled of this AccountsAccountSummaryGet200ResponseInfo.


        :return: The what_if_pm_enabled of this AccountsAccountSummaryGet200ResponseInfo.
        :rtype: str
        """
        return self._what_if_pm_enabled

    @what_if_pm_enabled.setter
    def what_if_pm_enabled(self, what_if_pm_enabled):
        """Sets the what_if_pm_enabled of this AccountsAccountSummaryGet200ResponseInfo.


        :param what_if_pm_enabled: The what_if_pm_enabled of this AccountsAccountSummaryGet200ResponseInfo.
        :type what_if_pm_enabled: str
        """

        self._what_if_pm_enabled = what_if_pm_enabled
