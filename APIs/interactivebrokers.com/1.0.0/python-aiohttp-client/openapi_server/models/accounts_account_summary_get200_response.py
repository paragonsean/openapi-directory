# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.accounts_account_summary_get200_response_info import AccountsAccountSummaryGet200ResponseInfo
from openapi_server.models.accounts_account_summary_get200_response_ledger_inner import AccountsAccountSummaryGet200ResponseLedgerInner
from openapi_server.models.accounts_account_summary_get200_response_summary import AccountsAccountSummaryGet200ResponseSummary
from openapi_server import util


class AccountsAccountSummaryGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, info: AccountsAccountSummaryGet200ResponseInfo=None, ledger: List[AccountsAccountSummaryGet200ResponseLedgerInner]=None, summary: AccountsAccountSummaryGet200ResponseSummary=None):
        """AccountsAccountSummaryGet200Response - a model defined in OpenAPI

        :param info: The info of this AccountsAccountSummaryGet200Response.
        :param ledger: The ledger of this AccountsAccountSummaryGet200Response.
        :param summary: The summary of this AccountsAccountSummaryGet200Response.
        """
        self.openapi_types = {
            'info': AccountsAccountSummaryGet200ResponseInfo,
            'ledger': List[AccountsAccountSummaryGet200ResponseLedgerInner],
            'summary': AccountsAccountSummaryGet200ResponseSummary
        }

        self.attribute_map = {
            'info': 'Info',
            'ledger': 'Ledger',
            'summary': 'Summary'
        }

        self._info = info
        self._ledger = ledger
        self._summary = summary

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountsAccountSummaryGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _accounts__account__summary_get_200_response of this AccountsAccountSummaryGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def info(self):
        """Gets the info of this AccountsAccountSummaryGet200Response.


        :return: The info of this AccountsAccountSummaryGet200Response.
        :rtype: AccountsAccountSummaryGet200ResponseInfo
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this AccountsAccountSummaryGet200Response.


        :param info: The info of this AccountsAccountSummaryGet200Response.
        :type info: AccountsAccountSummaryGet200ResponseInfo
        """

        self._info = info

    @property
    def ledger(self):
        """Gets the ledger of this AccountsAccountSummaryGet200Response.


        :return: The ledger of this AccountsAccountSummaryGet200Response.
        :rtype: List[AccountsAccountSummaryGet200ResponseLedgerInner]
        """
        return self._ledger

    @ledger.setter
    def ledger(self, ledger):
        """Sets the ledger of this AccountsAccountSummaryGet200Response.


        :param ledger: The ledger of this AccountsAccountSummaryGet200Response.
        :type ledger: List[AccountsAccountSummaryGet200ResponseLedgerInner]
        """

        self._ledger = ledger

    @property
    def summary(self):
        """Gets the summary of this AccountsAccountSummaryGet200Response.


        :return: The summary of this AccountsAccountSummaryGet200Response.
        :rtype: AccountsAccountSummaryGet200ResponseSummary
        """
        return self._summary

    @summary.setter
    def summary(self, summary):
        """Sets the summary of this AccountsAccountSummaryGet200Response.


        :param summary: The summary of this AccountsAccountSummaryGet200Response.
        :type summary: AccountsAccountSummaryGet200ResponseSummary
        """

        self._summary = summary
