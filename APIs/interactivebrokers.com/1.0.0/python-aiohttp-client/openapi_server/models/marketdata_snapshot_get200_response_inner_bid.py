# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MarketdataSnapshotGet200ResponseInnerBid(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, market: float=None, price: float=None, size: float=None):
        """MarketdataSnapshotGet200ResponseInnerBid - a model defined in OpenAPI

        :param market: The market of this MarketdataSnapshotGet200ResponseInnerBid.
        :param price: The price of this MarketdataSnapshotGet200ResponseInnerBid.
        :param size: The size of this MarketdataSnapshotGet200ResponseInnerBid.
        """
        self.openapi_types = {
            'market': float,
            'price': float,
            'size': float
        }

        self.attribute_map = {
            'market': 'market',
            'price': 'price',
            'size': 'size'
        }

        self._market = market
        self._price = price
        self._size = size

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MarketdataSnapshotGet200ResponseInnerBid':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _marketdata_snapshot_get_200_response_inner_Bid of this MarketdataSnapshotGet200ResponseInnerBid.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def market(self):
        """Gets the market of this MarketdataSnapshotGet200ResponseInnerBid.


        :return: The market of this MarketdataSnapshotGet200ResponseInnerBid.
        :rtype: float
        """
        return self._market

    @market.setter
    def market(self, market):
        """Sets the market of this MarketdataSnapshotGet200ResponseInnerBid.


        :param market: The market of this MarketdataSnapshotGet200ResponseInnerBid.
        :type market: float
        """

        self._market = market

    @property
    def price(self):
        """Gets the price of this MarketdataSnapshotGet200ResponseInnerBid.


        :return: The price of this MarketdataSnapshotGet200ResponseInnerBid.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this MarketdataSnapshotGet200ResponseInnerBid.


        :param price: The price of this MarketdataSnapshotGet200ResponseInnerBid.
        :type price: float
        """

        self._price = price

    @property
    def size(self):
        """Gets the size of this MarketdataSnapshotGet200ResponseInnerBid.


        :return: The size of this MarketdataSnapshotGet200ResponseInnerBid.
        :rtype: float
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this MarketdataSnapshotGet200ResponseInnerBid.


        :param size: The size of this MarketdataSnapshotGet200ResponseInnerBid.
        :type size: float
        """

        self._size = size
