# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountsAccountPositionsGet200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, average_cost: float=None, contract_id: float=None, position: float=None):
        """AccountsAccountPositionsGet200ResponseInner - a model defined in OpenAPI

        :param average_cost: The average_cost of this AccountsAccountPositionsGet200ResponseInner.
        :param contract_id: The contract_id of this AccountsAccountPositionsGet200ResponseInner.
        :param position: The position of this AccountsAccountPositionsGet200ResponseInner.
        """
        self.openapi_types = {
            'average_cost': float,
            'contract_id': float,
            'position': float
        }

        self.attribute_map = {
            'average_cost': 'AverageCost',
            'contract_id': 'ContractId',
            'position': 'Position'
        }

        self._average_cost = average_cost
        self._contract_id = contract_id
        self._position = position

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountsAccountPositionsGet200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _accounts__account__positions_get_200_response_inner of this AccountsAccountPositionsGet200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def average_cost(self):
        """Gets the average_cost of this AccountsAccountPositionsGet200ResponseInner.


        :return: The average_cost of this AccountsAccountPositionsGet200ResponseInner.
        :rtype: float
        """
        return self._average_cost

    @average_cost.setter
    def average_cost(self, average_cost):
        """Sets the average_cost of this AccountsAccountPositionsGet200ResponseInner.


        :param average_cost: The average_cost of this AccountsAccountPositionsGet200ResponseInner.
        :type average_cost: float
        """

        self._average_cost = average_cost

    @property
    def contract_id(self):
        """Gets the contract_id of this AccountsAccountPositionsGet200ResponseInner.


        :return: The contract_id of this AccountsAccountPositionsGet200ResponseInner.
        :rtype: float
        """
        return self._contract_id

    @contract_id.setter
    def contract_id(self, contract_id):
        """Sets the contract_id of this AccountsAccountPositionsGet200ResponseInner.


        :param contract_id: The contract_id of this AccountsAccountPositionsGet200ResponseInner.
        :type contract_id: float
        """

        self._contract_id = contract_id

    @property
    def position(self):
        """Gets the position of this AccountsAccountPositionsGet200ResponseInner.


        :return: The position of this AccountsAccountPositionsGet200ResponseInner.
        :rtype: float
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this AccountsAccountPositionsGet200ResponseInner.


        :param position: The position of this AccountsAccountPositionsGet200ResponseInner.
        :type position: float
        """

        self._position = position
