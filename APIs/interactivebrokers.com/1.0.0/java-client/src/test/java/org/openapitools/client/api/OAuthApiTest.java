/*
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.OauthAccessTokenPost200Response;
import org.openapitools.client.model.OauthAccessTokenPostRequest;
import org.openapitools.client.model.OauthLiveSessionTokenPost200Response;
import org.openapitools.client.model.OauthLiveSessionTokenPostRequest;
import org.openapitools.client.model.OauthRequestTokenPost200Response;
import org.openapitools.client.model.OauthRequestTokenPostRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OAuthApi
 */
@Disabled
public class OAuthApiTest {

    private final OAuthApi api = new OAuthApi();

    /**
     * Obtain a access token
     *
     * Obtain an access token using the request token and the verification code you received after the user provided authorization. See section 6.3 of the OAuth v1.0a specification for more details.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthAccessTokenPostTest() throws ApiException {
        OauthAccessTokenPostRequest oauthAccessTokenPostRequest = null;
        OauthAccessTokenPost200Response response = api.oauthAccessTokenPost(oauthAccessTokenPostRequest);
        // TODO: test validations
    }

    /**
     * Obtain a live session token
     *
     * In order to access protected IB resources, a live session token is required. This endpoint allows consumers to obtain a live session token to access these resources using an OAuth access token and the Diffie-Hellman prime and generator supplied during the registration process. Note this is an additional IB-specific step, and not part of the OAuth v1.0a specification. Please refer to the \&quot;OAuth at Interactive Brokers\&quot; document for more details.  https://www.interactivebrokers.com/webtradingapi/oauth.pdf 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthLiveSessionTokenPostTest() throws ApiException {
        OauthLiveSessionTokenPostRequest oauthLiveSessionTokenPostRequest = null;
        OauthLiveSessionTokenPost200Response response = api.oauthLiveSessionTokenPost(oauthLiveSessionTokenPostRequest);
        // TODO: test validations
    }

    /**
     * Obtain a request token
     *
     * Obtain a request token. See section 6.1 of the OAuth v1.0a specification for more information. http://oauth.net/core/1.0a/#auth_step1  Note we do not return an oauth_token_secret in the response as we are using RSA signatures rather than PLAINTEXT authentication.  
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oauthRequestTokenPostTest() throws ApiException {
        OauthRequestTokenPostRequest oauthRequestTokenPostRequest = null;
        OauthRequestTokenPost200Response response = api.oauthRequestTokenPost(oauthRequestTokenPostRequest);
        // TODO: test validations
    }

}
