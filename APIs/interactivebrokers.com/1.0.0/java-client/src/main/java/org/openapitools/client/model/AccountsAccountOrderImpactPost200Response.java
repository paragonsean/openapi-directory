/*
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountsAccountOrderImpactPost200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:29:32.094088-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountsAccountOrderImpactPost200Response {
  public static final String SERIALIZED_NAME_COMMISSION = "Commission";
  @SerializedName(SERIALIZED_NAME_COMMISSION)
  private BigDecimal commission;

  public static final String SERIALIZED_NAME_COMMISSIONS_CURRENCY = "CommissionsCurrency";
  @SerializedName(SERIALIZED_NAME_COMMISSIONS_CURRENCY)
  private String commissionsCurrency;

  public static final String SERIALIZED_NAME_EQUITY_WITH_LOAN = "EquityWithLoan";
  @SerializedName(SERIALIZED_NAME_EQUITY_WITH_LOAN)
  private BigDecimal equityWithLoan;

  public static final String SERIALIZED_NAME_INIT_MARGIN = "InitMargin";
  @SerializedName(SERIALIZED_NAME_INIT_MARGIN)
  private BigDecimal initMargin;

  public static final String SERIALIZED_NAME_INIT_MARGIN_BEFORE = "InitMarginBefore";
  @SerializedName(SERIALIZED_NAME_INIT_MARGIN_BEFORE)
  private BigDecimal initMarginBefore;

  public static final String SERIALIZED_NAME_MAINT_MARGIN = "MaintMargin";
  @SerializedName(SERIALIZED_NAME_MAINT_MARGIN)
  private BigDecimal maintMargin;

  public static final String SERIALIZED_NAME_MAINT_MARGIN_BEFORE = "MaintMarginBefore";
  @SerializedName(SERIALIZED_NAME_MAINT_MARGIN_BEFORE)
  private BigDecimal maintMarginBefore;

  public static final String SERIALIZED_NAME_MARGIN_CURRENCY = "MarginCurrency";
  @SerializedName(SERIALIZED_NAME_MARGIN_CURRENCY)
  private String marginCurrency;

  public static final String SERIALIZED_NAME_MAX_COMMISSIONS = "MaxCommissions";
  @SerializedName(SERIALIZED_NAME_MAX_COMMISSIONS)
  private BigDecimal maxCommissions;

  public static final String SERIALIZED_NAME_MIN_COMMISSIONS = "MinCommissions";
  @SerializedName(SERIALIZED_NAME_MIN_COMMISSIONS)
  private BigDecimal minCommissions;

  public AccountsAccountOrderImpactPost200Response() {
  }

  public AccountsAccountOrderImpactPost200Response commission(BigDecimal commission) {
    this.commission = commission;
    return this;
  }

  /**
   * Get commission
   * @return commission
   */
  @javax.annotation.Nullable
  public BigDecimal getCommission() {
    return commission;
  }

  public void setCommission(BigDecimal commission) {
    this.commission = commission;
  }


  public AccountsAccountOrderImpactPost200Response commissionsCurrency(String commissionsCurrency) {
    this.commissionsCurrency = commissionsCurrency;
    return this;
  }

  /**
   * Get commissionsCurrency
   * @return commissionsCurrency
   */
  @javax.annotation.Nullable
  public String getCommissionsCurrency() {
    return commissionsCurrency;
  }

  public void setCommissionsCurrency(String commissionsCurrency) {
    this.commissionsCurrency = commissionsCurrency;
  }


  public AccountsAccountOrderImpactPost200Response equityWithLoan(BigDecimal equityWithLoan) {
    this.equityWithLoan = equityWithLoan;
    return this;
  }

  /**
   * Get equityWithLoan
   * @return equityWithLoan
   */
  @javax.annotation.Nullable
  public BigDecimal getEquityWithLoan() {
    return equityWithLoan;
  }

  public void setEquityWithLoan(BigDecimal equityWithLoan) {
    this.equityWithLoan = equityWithLoan;
  }


  public AccountsAccountOrderImpactPost200Response initMargin(BigDecimal initMargin) {
    this.initMargin = initMargin;
    return this;
  }

  /**
   * Get initMargin
   * @return initMargin
   */
  @javax.annotation.Nullable
  public BigDecimal getInitMargin() {
    return initMargin;
  }

  public void setInitMargin(BigDecimal initMargin) {
    this.initMargin = initMargin;
  }


  public AccountsAccountOrderImpactPost200Response initMarginBefore(BigDecimal initMarginBefore) {
    this.initMarginBefore = initMarginBefore;
    return this;
  }

  /**
   * Get initMarginBefore
   * @return initMarginBefore
   */
  @javax.annotation.Nullable
  public BigDecimal getInitMarginBefore() {
    return initMarginBefore;
  }

  public void setInitMarginBefore(BigDecimal initMarginBefore) {
    this.initMarginBefore = initMarginBefore;
  }


  public AccountsAccountOrderImpactPost200Response maintMargin(BigDecimal maintMargin) {
    this.maintMargin = maintMargin;
    return this;
  }

  /**
   * Get maintMargin
   * @return maintMargin
   */
  @javax.annotation.Nullable
  public BigDecimal getMaintMargin() {
    return maintMargin;
  }

  public void setMaintMargin(BigDecimal maintMargin) {
    this.maintMargin = maintMargin;
  }


  public AccountsAccountOrderImpactPost200Response maintMarginBefore(BigDecimal maintMarginBefore) {
    this.maintMarginBefore = maintMarginBefore;
    return this;
  }

  /**
   * Get maintMarginBefore
   * @return maintMarginBefore
   */
  @javax.annotation.Nullable
  public BigDecimal getMaintMarginBefore() {
    return maintMarginBefore;
  }

  public void setMaintMarginBefore(BigDecimal maintMarginBefore) {
    this.maintMarginBefore = maintMarginBefore;
  }


  public AccountsAccountOrderImpactPost200Response marginCurrency(String marginCurrency) {
    this.marginCurrency = marginCurrency;
    return this;
  }

  /**
   * Get marginCurrency
   * @return marginCurrency
   */
  @javax.annotation.Nullable
  public String getMarginCurrency() {
    return marginCurrency;
  }

  public void setMarginCurrency(String marginCurrency) {
    this.marginCurrency = marginCurrency;
  }


  public AccountsAccountOrderImpactPost200Response maxCommissions(BigDecimal maxCommissions) {
    this.maxCommissions = maxCommissions;
    return this;
  }

  /**
   * Get maxCommissions
   * @return maxCommissions
   */
  @javax.annotation.Nullable
  public BigDecimal getMaxCommissions() {
    return maxCommissions;
  }

  public void setMaxCommissions(BigDecimal maxCommissions) {
    this.maxCommissions = maxCommissions;
  }


  public AccountsAccountOrderImpactPost200Response minCommissions(BigDecimal minCommissions) {
    this.minCommissions = minCommissions;
    return this;
  }

  /**
   * Get minCommissions
   * @return minCommissions
   */
  @javax.annotation.Nullable
  public BigDecimal getMinCommissions() {
    return minCommissions;
  }

  public void setMinCommissions(BigDecimal minCommissions) {
    this.minCommissions = minCommissions;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountsAccountOrderImpactPost200Response accountsAccountOrderImpactPost200Response = (AccountsAccountOrderImpactPost200Response) o;
    return Objects.equals(this.commission, accountsAccountOrderImpactPost200Response.commission) &&
        Objects.equals(this.commissionsCurrency, accountsAccountOrderImpactPost200Response.commissionsCurrency) &&
        Objects.equals(this.equityWithLoan, accountsAccountOrderImpactPost200Response.equityWithLoan) &&
        Objects.equals(this.initMargin, accountsAccountOrderImpactPost200Response.initMargin) &&
        Objects.equals(this.initMarginBefore, accountsAccountOrderImpactPost200Response.initMarginBefore) &&
        Objects.equals(this.maintMargin, accountsAccountOrderImpactPost200Response.maintMargin) &&
        Objects.equals(this.maintMarginBefore, accountsAccountOrderImpactPost200Response.maintMarginBefore) &&
        Objects.equals(this.marginCurrency, accountsAccountOrderImpactPost200Response.marginCurrency) &&
        Objects.equals(this.maxCommissions, accountsAccountOrderImpactPost200Response.maxCommissions) &&
        Objects.equals(this.minCommissions, accountsAccountOrderImpactPost200Response.minCommissions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(commission, commissionsCurrency, equityWithLoan, initMargin, initMarginBefore, maintMargin, maintMarginBefore, marginCurrency, maxCommissions, minCommissions);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountsAccountOrderImpactPost200Response {\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    commissionsCurrency: ").append(toIndentedString(commissionsCurrency)).append("\n");
    sb.append("    equityWithLoan: ").append(toIndentedString(equityWithLoan)).append("\n");
    sb.append("    initMargin: ").append(toIndentedString(initMargin)).append("\n");
    sb.append("    initMarginBefore: ").append(toIndentedString(initMarginBefore)).append("\n");
    sb.append("    maintMargin: ").append(toIndentedString(maintMargin)).append("\n");
    sb.append("    maintMarginBefore: ").append(toIndentedString(maintMarginBefore)).append("\n");
    sb.append("    marginCurrency: ").append(toIndentedString(marginCurrency)).append("\n");
    sb.append("    maxCommissions: ").append(toIndentedString(maxCommissions)).append("\n");
    sb.append("    minCommissions: ").append(toIndentedString(minCommissions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Commission");
    openapiFields.add("CommissionsCurrency");
    openapiFields.add("EquityWithLoan");
    openapiFields.add("InitMargin");
    openapiFields.add("InitMarginBefore");
    openapiFields.add("MaintMargin");
    openapiFields.add("MaintMarginBefore");
    openapiFields.add("MarginCurrency");
    openapiFields.add("MaxCommissions");
    openapiFields.add("MinCommissions");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountsAccountOrderImpactPost200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountsAccountOrderImpactPost200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountsAccountOrderImpactPost200Response is not found in the empty JSON string", AccountsAccountOrderImpactPost200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountsAccountOrderImpactPost200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountsAccountOrderImpactPost200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CommissionsCurrency") != null && !jsonObj.get("CommissionsCurrency").isJsonNull()) && !jsonObj.get("CommissionsCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CommissionsCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CommissionsCurrency").toString()));
      }
      if ((jsonObj.get("MarginCurrency") != null && !jsonObj.get("MarginCurrency").isJsonNull()) && !jsonObj.get("MarginCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MarginCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MarginCurrency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountsAccountOrderImpactPost200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountsAccountOrderImpactPost200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountsAccountOrderImpactPost200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountsAccountOrderImpactPost200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountsAccountOrderImpactPost200Response>() {
           @Override
           public void write(JsonWriter out, AccountsAccountOrderImpactPost200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountsAccountOrderImpactPost200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountsAccountOrderImpactPost200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountsAccountOrderImpactPost200Response
   * @throws IOException if the JSON string is invalid with respect to AccountsAccountOrderImpactPost200Response
   */
  public static AccountsAccountOrderImpactPost200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountsAccountOrderImpactPost200Response.class);
  }

  /**
   * Convert an instance of AccountsAccountOrderImpactPost200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

