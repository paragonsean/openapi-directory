/*
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AccountsAccountSummaryGet200ResponseInfo;
import org.openapitools.client.model.AccountsAccountSummaryGet200ResponseLedgerInner;
import org.openapitools.client.model.AccountsAccountSummaryGet200ResponseSummary;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountsAccountSummaryGet200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:29:32.094088-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountsAccountSummaryGet200Response {
  public static final String SERIALIZED_NAME_INFO = "Info";
  @SerializedName(SERIALIZED_NAME_INFO)
  private AccountsAccountSummaryGet200ResponseInfo info;

  public static final String SERIALIZED_NAME_LEDGER = "Ledger";
  @SerializedName(SERIALIZED_NAME_LEDGER)
  private List<AccountsAccountSummaryGet200ResponseLedgerInner> ledger = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUMMARY = "Summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private AccountsAccountSummaryGet200ResponseSummary summary;

  public AccountsAccountSummaryGet200Response() {
  }

  public AccountsAccountSummaryGet200Response info(AccountsAccountSummaryGet200ResponseInfo info) {
    this.info = info;
    return this;
  }

  /**
   * Get info
   * @return info
   */
  @javax.annotation.Nullable
  public AccountsAccountSummaryGet200ResponseInfo getInfo() {
    return info;
  }

  public void setInfo(AccountsAccountSummaryGet200ResponseInfo info) {
    this.info = info;
  }


  public AccountsAccountSummaryGet200Response ledger(List<AccountsAccountSummaryGet200ResponseLedgerInner> ledger) {
    this.ledger = ledger;
    return this;
  }

  public AccountsAccountSummaryGet200Response addLedgerItem(AccountsAccountSummaryGet200ResponseLedgerInner ledgerItem) {
    if (this.ledger == null) {
      this.ledger = new ArrayList<>();
    }
    this.ledger.add(ledgerItem);
    return this;
  }

  /**
   * Get ledger
   * @return ledger
   */
  @javax.annotation.Nullable
  public List<AccountsAccountSummaryGet200ResponseLedgerInner> getLedger() {
    return ledger;
  }

  public void setLedger(List<AccountsAccountSummaryGet200ResponseLedgerInner> ledger) {
    this.ledger = ledger;
  }


  public AccountsAccountSummaryGet200Response summary(AccountsAccountSummaryGet200ResponseSummary summary) {
    this.summary = summary;
    return this;
  }

  /**
   * Get summary
   * @return summary
   */
  @javax.annotation.Nullable
  public AccountsAccountSummaryGet200ResponseSummary getSummary() {
    return summary;
  }

  public void setSummary(AccountsAccountSummaryGet200ResponseSummary summary) {
    this.summary = summary;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountsAccountSummaryGet200Response accountsAccountSummaryGet200Response = (AccountsAccountSummaryGet200Response) o;
    return Objects.equals(this.info, accountsAccountSummaryGet200Response.info) &&
        Objects.equals(this.ledger, accountsAccountSummaryGet200Response.ledger) &&
        Objects.equals(this.summary, accountsAccountSummaryGet200Response.summary);
  }

  @Override
  public int hashCode() {
    return Objects.hash(info, ledger, summary);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountsAccountSummaryGet200Response {\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    ledger: ").append(toIndentedString(ledger)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Info");
    openapiFields.add("Ledger");
    openapiFields.add("Summary");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountsAccountSummaryGet200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountsAccountSummaryGet200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountsAccountSummaryGet200Response is not found in the empty JSON string", AccountsAccountSummaryGet200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountsAccountSummaryGet200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountsAccountSummaryGet200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `Info`
      if (jsonObj.get("Info") != null && !jsonObj.get("Info").isJsonNull()) {
        AccountsAccountSummaryGet200ResponseInfo.validateJsonElement(jsonObj.get("Info"));
      }
      if (jsonObj.get("Ledger") != null && !jsonObj.get("Ledger").isJsonNull()) {
        JsonArray jsonArrayledger = jsonObj.getAsJsonArray("Ledger");
        if (jsonArrayledger != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Ledger").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Ledger` to be an array in the JSON string but got `%s`", jsonObj.get("Ledger").toString()));
          }

          // validate the optional field `Ledger` (array)
          for (int i = 0; i < jsonArrayledger.size(); i++) {
            AccountsAccountSummaryGet200ResponseLedgerInner.validateJsonElement(jsonArrayledger.get(i));
          };
        }
      }
      // validate the optional field `Summary`
      if (jsonObj.get("Summary") != null && !jsonObj.get("Summary").isJsonNull()) {
        AccountsAccountSummaryGet200ResponseSummary.validateJsonElement(jsonObj.get("Summary"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountsAccountSummaryGet200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountsAccountSummaryGet200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountsAccountSummaryGet200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountsAccountSummaryGet200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountsAccountSummaryGet200Response>() {
           @Override
           public void write(JsonWriter out, AccountsAccountSummaryGet200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountsAccountSummaryGet200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountsAccountSummaryGet200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountsAccountSummaryGet200Response
   * @throws IOException if the JSON string is invalid with respect to AccountsAccountSummaryGet200Response
   */
  public static AccountsAccountSummaryGet200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountsAccountSummaryGet200Response.class);
  }

  /**
   * Convert an instance of AccountsAccountSummaryGet200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

