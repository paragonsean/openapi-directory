/*
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AccountsAccountSummaryGet200ResponseInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:29:32.094088-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountsAccountSummaryGet200ResponseInfo {
  public static final String SERIALIZED_NAME_ACCOUNT_CODE = "AccountCode";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_CODE)
  private String accountCode;

  public static final String SERIALIZED_NAME_ACCOUNT_READY = "AccountReady";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_READY)
  private String accountReady;

  public static final String SERIALIZED_NAME_ACCOUNT_TYPE = "AccountType";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_TYPE)
  private String accountType;

  public static final String SERIALIZED_NAME_CUSHION = "Cushion";
  @SerializedName(SERIALIZED_NAME_CUSHION)
  private String cushion;

  public static final String SERIALIZED_NAME_DAY_TRADES_REMAINING = "DayTradesRemaining";
  @SerializedName(SERIALIZED_NAME_DAY_TRADES_REMAINING)
  private String dayTradesRemaining;

  public static final String SERIALIZED_NAME_DAY_TRADES_REMAINING_T = "DayTradesRemainingT";
  @SerializedName(SERIALIZED_NAME_DAY_TRADES_REMAINING_T)
  private String dayTradesRemainingT;

  public static final String SERIALIZED_NAME_DAY_TRADES_REMAINING_T_PLUS2 = "DayTradesRemainingT+2";
  @SerializedName(SERIALIZED_NAME_DAY_TRADES_REMAINING_T_PLUS2)
  private String dayTradesRemainingTPlus2;

  public static final String SERIALIZED_NAME_DAY_TRADES_REMAINING_T_PLUS3 = "DayTradesRemainingT+3";
  @SerializedName(SERIALIZED_NAME_DAY_TRADES_REMAINING_T_PLUS3)
  private String dayTradesRemainingTPlus3;

  public static final String SERIALIZED_NAME_DAY_TRADES_REMAINING_T_PLUS4 = "DayTradesRemainingT+4";
  @SerializedName(SERIALIZED_NAME_DAY_TRADES_REMAINING_T_PLUS4)
  private String dayTradesRemainingTPlus4;

  public static final String SERIALIZED_NAME_HIGHEST_SEVERITY = "HighestSeverity";
  @SerializedName(SERIALIZED_NAME_HIGHEST_SEVERITY)
  private String highestSeverity;

  public static final String SERIALIZED_NAME_LEVERAGE_S = "Leverage-S";
  @SerializedName(SERIALIZED_NAME_LEVERAGE_S)
  private String leverageS;

  public static final String SERIALIZED_NAME_LOOK_AHEAD_NEXT_CHANGE = "LookAheadNextChange";
  @SerializedName(SERIALIZED_NAME_LOOK_AHEAD_NEXT_CHANGE)
  private String lookAheadNextChange;

  public static final String SERIALIZED_NAME_SEGMENT_TITLE_C = "SegmentTitle-C";
  @SerializedName(SERIALIZED_NAME_SEGMENT_TITLE_C)
  private String segmentTitleC;

  public static final String SERIALIZED_NAME_SEGMENT_TITLE_S = "SegmentTitle-S";
  @SerializedName(SERIALIZED_NAME_SEGMENT_TITLE_S)
  private String segmentTitleS;

  public static final String SERIALIZED_NAME_TRADING_TYPE_S = "TradingType-S";
  @SerializedName(SERIALIZED_NAME_TRADING_TYPE_S)
  private String tradingTypeS;

  public static final String SERIALIZED_NAME_WHAT_IF_P_M_ENABLED = "WhatIfPMEnabled";
  @SerializedName(SERIALIZED_NAME_WHAT_IF_P_M_ENABLED)
  private String whatIfPMEnabled;

  public AccountsAccountSummaryGet200ResponseInfo() {
  }

  public AccountsAccountSummaryGet200ResponseInfo accountCode(String accountCode) {
    this.accountCode = accountCode;
    return this;
  }

  /**
   * Get accountCode
   * @return accountCode
   */
  @javax.annotation.Nullable
  public String getAccountCode() {
    return accountCode;
  }

  public void setAccountCode(String accountCode) {
    this.accountCode = accountCode;
  }


  public AccountsAccountSummaryGet200ResponseInfo accountReady(String accountReady) {
    this.accountReady = accountReady;
    return this;
  }

  /**
   * Get accountReady
   * @return accountReady
   */
  @javax.annotation.Nullable
  public String getAccountReady() {
    return accountReady;
  }

  public void setAccountReady(String accountReady) {
    this.accountReady = accountReady;
  }


  public AccountsAccountSummaryGet200ResponseInfo accountType(String accountType) {
    this.accountType = accountType;
    return this;
  }

  /**
   * Get accountType
   * @return accountType
   */
  @javax.annotation.Nullable
  public String getAccountType() {
    return accountType;
  }

  public void setAccountType(String accountType) {
    this.accountType = accountType;
  }


  public AccountsAccountSummaryGet200ResponseInfo cushion(String cushion) {
    this.cushion = cushion;
    return this;
  }

  /**
   * Get cushion
   * @return cushion
   */
  @javax.annotation.Nullable
  public String getCushion() {
    return cushion;
  }

  public void setCushion(String cushion) {
    this.cushion = cushion;
  }


  public AccountsAccountSummaryGet200ResponseInfo dayTradesRemaining(String dayTradesRemaining) {
    this.dayTradesRemaining = dayTradesRemaining;
    return this;
  }

  /**
   * Get dayTradesRemaining
   * @return dayTradesRemaining
   */
  @javax.annotation.Nullable
  public String getDayTradesRemaining() {
    return dayTradesRemaining;
  }

  public void setDayTradesRemaining(String dayTradesRemaining) {
    this.dayTradesRemaining = dayTradesRemaining;
  }


  public AccountsAccountSummaryGet200ResponseInfo dayTradesRemainingT(String dayTradesRemainingT) {
    this.dayTradesRemainingT = dayTradesRemainingT;
    return this;
  }

  /**
   * Get dayTradesRemainingT
   * @return dayTradesRemainingT
   */
  @javax.annotation.Nullable
  public String getDayTradesRemainingT() {
    return dayTradesRemainingT;
  }

  public void setDayTradesRemainingT(String dayTradesRemainingT) {
    this.dayTradesRemainingT = dayTradesRemainingT;
  }


  public AccountsAccountSummaryGet200ResponseInfo dayTradesRemainingTPlus2(String dayTradesRemainingTPlus2) {
    this.dayTradesRemainingTPlus2 = dayTradesRemainingTPlus2;
    return this;
  }

  /**
   * Get dayTradesRemainingTPlus2
   * @return dayTradesRemainingTPlus2
   */
  @javax.annotation.Nullable
  public String getDayTradesRemainingTPlus2() {
    return dayTradesRemainingTPlus2;
  }

  public void setDayTradesRemainingTPlus2(String dayTradesRemainingTPlus2) {
    this.dayTradesRemainingTPlus2 = dayTradesRemainingTPlus2;
  }


  public AccountsAccountSummaryGet200ResponseInfo dayTradesRemainingTPlus3(String dayTradesRemainingTPlus3) {
    this.dayTradesRemainingTPlus3 = dayTradesRemainingTPlus3;
    return this;
  }

  /**
   * Get dayTradesRemainingTPlus3
   * @return dayTradesRemainingTPlus3
   */
  @javax.annotation.Nullable
  public String getDayTradesRemainingTPlus3() {
    return dayTradesRemainingTPlus3;
  }

  public void setDayTradesRemainingTPlus3(String dayTradesRemainingTPlus3) {
    this.dayTradesRemainingTPlus3 = dayTradesRemainingTPlus3;
  }


  public AccountsAccountSummaryGet200ResponseInfo dayTradesRemainingTPlus4(String dayTradesRemainingTPlus4) {
    this.dayTradesRemainingTPlus4 = dayTradesRemainingTPlus4;
    return this;
  }

  /**
   * Get dayTradesRemainingTPlus4
   * @return dayTradesRemainingTPlus4
   */
  @javax.annotation.Nullable
  public String getDayTradesRemainingTPlus4() {
    return dayTradesRemainingTPlus4;
  }

  public void setDayTradesRemainingTPlus4(String dayTradesRemainingTPlus4) {
    this.dayTradesRemainingTPlus4 = dayTradesRemainingTPlus4;
  }


  public AccountsAccountSummaryGet200ResponseInfo highestSeverity(String highestSeverity) {
    this.highestSeverity = highestSeverity;
    return this;
  }

  /**
   * Get highestSeverity
   * @return highestSeverity
   */
  @javax.annotation.Nullable
  public String getHighestSeverity() {
    return highestSeverity;
  }

  public void setHighestSeverity(String highestSeverity) {
    this.highestSeverity = highestSeverity;
  }


  public AccountsAccountSummaryGet200ResponseInfo leverageS(String leverageS) {
    this.leverageS = leverageS;
    return this;
  }

  /**
   * Get leverageS
   * @return leverageS
   */
  @javax.annotation.Nullable
  public String getLeverageS() {
    return leverageS;
  }

  public void setLeverageS(String leverageS) {
    this.leverageS = leverageS;
  }


  public AccountsAccountSummaryGet200ResponseInfo lookAheadNextChange(String lookAheadNextChange) {
    this.lookAheadNextChange = lookAheadNextChange;
    return this;
  }

  /**
   * Get lookAheadNextChange
   * @return lookAheadNextChange
   */
  @javax.annotation.Nullable
  public String getLookAheadNextChange() {
    return lookAheadNextChange;
  }

  public void setLookAheadNextChange(String lookAheadNextChange) {
    this.lookAheadNextChange = lookAheadNextChange;
  }


  public AccountsAccountSummaryGet200ResponseInfo segmentTitleC(String segmentTitleC) {
    this.segmentTitleC = segmentTitleC;
    return this;
  }

  /**
   * Get segmentTitleC
   * @return segmentTitleC
   */
  @javax.annotation.Nullable
  public String getSegmentTitleC() {
    return segmentTitleC;
  }

  public void setSegmentTitleC(String segmentTitleC) {
    this.segmentTitleC = segmentTitleC;
  }


  public AccountsAccountSummaryGet200ResponseInfo segmentTitleS(String segmentTitleS) {
    this.segmentTitleS = segmentTitleS;
    return this;
  }

  /**
   * Get segmentTitleS
   * @return segmentTitleS
   */
  @javax.annotation.Nullable
  public String getSegmentTitleS() {
    return segmentTitleS;
  }

  public void setSegmentTitleS(String segmentTitleS) {
    this.segmentTitleS = segmentTitleS;
  }


  public AccountsAccountSummaryGet200ResponseInfo tradingTypeS(String tradingTypeS) {
    this.tradingTypeS = tradingTypeS;
    return this;
  }

  /**
   * Get tradingTypeS
   * @return tradingTypeS
   */
  @javax.annotation.Nullable
  public String getTradingTypeS() {
    return tradingTypeS;
  }

  public void setTradingTypeS(String tradingTypeS) {
    this.tradingTypeS = tradingTypeS;
  }


  public AccountsAccountSummaryGet200ResponseInfo whatIfPMEnabled(String whatIfPMEnabled) {
    this.whatIfPMEnabled = whatIfPMEnabled;
    return this;
  }

  /**
   * Get whatIfPMEnabled
   * @return whatIfPMEnabled
   */
  @javax.annotation.Nullable
  public String getWhatIfPMEnabled() {
    return whatIfPMEnabled;
  }

  public void setWhatIfPMEnabled(String whatIfPMEnabled) {
    this.whatIfPMEnabled = whatIfPMEnabled;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountsAccountSummaryGet200ResponseInfo accountsAccountSummaryGet200ResponseInfo = (AccountsAccountSummaryGet200ResponseInfo) o;
    return Objects.equals(this.accountCode, accountsAccountSummaryGet200ResponseInfo.accountCode) &&
        Objects.equals(this.accountReady, accountsAccountSummaryGet200ResponseInfo.accountReady) &&
        Objects.equals(this.accountType, accountsAccountSummaryGet200ResponseInfo.accountType) &&
        Objects.equals(this.cushion, accountsAccountSummaryGet200ResponseInfo.cushion) &&
        Objects.equals(this.dayTradesRemaining, accountsAccountSummaryGet200ResponseInfo.dayTradesRemaining) &&
        Objects.equals(this.dayTradesRemainingT, accountsAccountSummaryGet200ResponseInfo.dayTradesRemainingT) &&
        Objects.equals(this.dayTradesRemainingTPlus2, accountsAccountSummaryGet200ResponseInfo.dayTradesRemainingTPlus2) &&
        Objects.equals(this.dayTradesRemainingTPlus3, accountsAccountSummaryGet200ResponseInfo.dayTradesRemainingTPlus3) &&
        Objects.equals(this.dayTradesRemainingTPlus4, accountsAccountSummaryGet200ResponseInfo.dayTradesRemainingTPlus4) &&
        Objects.equals(this.highestSeverity, accountsAccountSummaryGet200ResponseInfo.highestSeverity) &&
        Objects.equals(this.leverageS, accountsAccountSummaryGet200ResponseInfo.leverageS) &&
        Objects.equals(this.lookAheadNextChange, accountsAccountSummaryGet200ResponseInfo.lookAheadNextChange) &&
        Objects.equals(this.segmentTitleC, accountsAccountSummaryGet200ResponseInfo.segmentTitleC) &&
        Objects.equals(this.segmentTitleS, accountsAccountSummaryGet200ResponseInfo.segmentTitleS) &&
        Objects.equals(this.tradingTypeS, accountsAccountSummaryGet200ResponseInfo.tradingTypeS) &&
        Objects.equals(this.whatIfPMEnabled, accountsAccountSummaryGet200ResponseInfo.whatIfPMEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountCode, accountReady, accountType, cushion, dayTradesRemaining, dayTradesRemainingT, dayTradesRemainingTPlus2, dayTradesRemainingTPlus3, dayTradesRemainingTPlus4, highestSeverity, leverageS, lookAheadNextChange, segmentTitleC, segmentTitleS, tradingTypeS, whatIfPMEnabled);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountsAccountSummaryGet200ResponseInfo {\n");
    sb.append("    accountCode: ").append(toIndentedString(accountCode)).append("\n");
    sb.append("    accountReady: ").append(toIndentedString(accountReady)).append("\n");
    sb.append("    accountType: ").append(toIndentedString(accountType)).append("\n");
    sb.append("    cushion: ").append(toIndentedString(cushion)).append("\n");
    sb.append("    dayTradesRemaining: ").append(toIndentedString(dayTradesRemaining)).append("\n");
    sb.append("    dayTradesRemainingT: ").append(toIndentedString(dayTradesRemainingT)).append("\n");
    sb.append("    dayTradesRemainingTPlus2: ").append(toIndentedString(dayTradesRemainingTPlus2)).append("\n");
    sb.append("    dayTradesRemainingTPlus3: ").append(toIndentedString(dayTradesRemainingTPlus3)).append("\n");
    sb.append("    dayTradesRemainingTPlus4: ").append(toIndentedString(dayTradesRemainingTPlus4)).append("\n");
    sb.append("    highestSeverity: ").append(toIndentedString(highestSeverity)).append("\n");
    sb.append("    leverageS: ").append(toIndentedString(leverageS)).append("\n");
    sb.append("    lookAheadNextChange: ").append(toIndentedString(lookAheadNextChange)).append("\n");
    sb.append("    segmentTitleC: ").append(toIndentedString(segmentTitleC)).append("\n");
    sb.append("    segmentTitleS: ").append(toIndentedString(segmentTitleS)).append("\n");
    sb.append("    tradingTypeS: ").append(toIndentedString(tradingTypeS)).append("\n");
    sb.append("    whatIfPMEnabled: ").append(toIndentedString(whatIfPMEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AccountCode");
    openapiFields.add("AccountReady");
    openapiFields.add("AccountType");
    openapiFields.add("Cushion");
    openapiFields.add("DayTradesRemaining");
    openapiFields.add("DayTradesRemainingT");
    openapiFields.add("DayTradesRemainingT+2");
    openapiFields.add("DayTradesRemainingT+3");
    openapiFields.add("DayTradesRemainingT+4");
    openapiFields.add("HighestSeverity");
    openapiFields.add("Leverage-S");
    openapiFields.add("LookAheadNextChange");
    openapiFields.add("SegmentTitle-C");
    openapiFields.add("SegmentTitle-S");
    openapiFields.add("TradingType-S");
    openapiFields.add("WhatIfPMEnabled");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountsAccountSummaryGet200ResponseInfo
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountsAccountSummaryGet200ResponseInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountsAccountSummaryGet200ResponseInfo is not found in the empty JSON string", AccountsAccountSummaryGet200ResponseInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountsAccountSummaryGet200ResponseInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountsAccountSummaryGet200ResponseInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AccountCode") != null && !jsonObj.get("AccountCode").isJsonNull()) && !jsonObj.get("AccountCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccountCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccountCode").toString()));
      }
      if ((jsonObj.get("AccountReady") != null && !jsonObj.get("AccountReady").isJsonNull()) && !jsonObj.get("AccountReady").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccountReady` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccountReady").toString()));
      }
      if ((jsonObj.get("AccountType") != null && !jsonObj.get("AccountType").isJsonNull()) && !jsonObj.get("AccountType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AccountType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AccountType").toString()));
      }
      if ((jsonObj.get("Cushion") != null && !jsonObj.get("Cushion").isJsonNull()) && !jsonObj.get("Cushion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Cushion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Cushion").toString()));
      }
      if ((jsonObj.get("DayTradesRemaining") != null && !jsonObj.get("DayTradesRemaining").isJsonNull()) && !jsonObj.get("DayTradesRemaining").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DayTradesRemaining` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DayTradesRemaining").toString()));
      }
      if ((jsonObj.get("DayTradesRemainingT") != null && !jsonObj.get("DayTradesRemainingT").isJsonNull()) && !jsonObj.get("DayTradesRemainingT").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DayTradesRemainingT` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DayTradesRemainingT").toString()));
      }
      if ((jsonObj.get("DayTradesRemainingT+2") != null && !jsonObj.get("DayTradesRemainingT+2").isJsonNull()) && !jsonObj.get("DayTradesRemainingT+2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DayTradesRemainingT+2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DayTradesRemainingT+2").toString()));
      }
      if ((jsonObj.get("DayTradesRemainingT+3") != null && !jsonObj.get("DayTradesRemainingT+3").isJsonNull()) && !jsonObj.get("DayTradesRemainingT+3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DayTradesRemainingT+3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DayTradesRemainingT+3").toString()));
      }
      if ((jsonObj.get("DayTradesRemainingT+4") != null && !jsonObj.get("DayTradesRemainingT+4").isJsonNull()) && !jsonObj.get("DayTradesRemainingT+4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DayTradesRemainingT+4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DayTradesRemainingT+4").toString()));
      }
      if ((jsonObj.get("HighestSeverity") != null && !jsonObj.get("HighestSeverity").isJsonNull()) && !jsonObj.get("HighestSeverity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `HighestSeverity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("HighestSeverity").toString()));
      }
      if ((jsonObj.get("Leverage-S") != null && !jsonObj.get("Leverage-S").isJsonNull()) && !jsonObj.get("Leverage-S").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Leverage-S` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Leverage-S").toString()));
      }
      if ((jsonObj.get("LookAheadNextChange") != null && !jsonObj.get("LookAheadNextChange").isJsonNull()) && !jsonObj.get("LookAheadNextChange").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LookAheadNextChange` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LookAheadNextChange").toString()));
      }
      if ((jsonObj.get("SegmentTitle-C") != null && !jsonObj.get("SegmentTitle-C").isJsonNull()) && !jsonObj.get("SegmentTitle-C").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SegmentTitle-C` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SegmentTitle-C").toString()));
      }
      if ((jsonObj.get("SegmentTitle-S") != null && !jsonObj.get("SegmentTitle-S").isJsonNull()) && !jsonObj.get("SegmentTitle-S").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SegmentTitle-S` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SegmentTitle-S").toString()));
      }
      if ((jsonObj.get("TradingType-S") != null && !jsonObj.get("TradingType-S").isJsonNull()) && !jsonObj.get("TradingType-S").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TradingType-S` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TradingType-S").toString()));
      }
      if ((jsonObj.get("WhatIfPMEnabled") != null && !jsonObj.get("WhatIfPMEnabled").isJsonNull()) && !jsonObj.get("WhatIfPMEnabled").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `WhatIfPMEnabled` to be a primitive type in the JSON string but got `%s`", jsonObj.get("WhatIfPMEnabled").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountsAccountSummaryGet200ResponseInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountsAccountSummaryGet200ResponseInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountsAccountSummaryGet200ResponseInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountsAccountSummaryGet200ResponseInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountsAccountSummaryGet200ResponseInfo>() {
           @Override
           public void write(JsonWriter out, AccountsAccountSummaryGet200ResponseInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountsAccountSummaryGet200ResponseInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountsAccountSummaryGet200ResponseInfo given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountsAccountSummaryGet200ResponseInfo
   * @throws IOException if the JSON string is invalid with respect to AccountsAccountSummaryGet200ResponseInfo
   */
  public static AccountsAccountSummaryGet200ResponseInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountsAccountSummaryGet200ResponseInfo.class);
  }

  /**
   * Convert an instance of AccountsAccountSummaryGet200ResponseInfo to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

