/*
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Status of the order InvalidOrderStatus &#x3D; &#39;-1&#39; New &#x3D; &#39;0&#39; PartiallyFilled &#x3D; &#39;1&#39; Filled &#x3D; &#39;2&#39; DoneForTheDay &#x3D; &#39;3&#39; Canceled &#x3D; &#39;4&#39; Replaced &#x3D; &#39;5&#39; PendingCancelReplace &#x3D; &#39;6&#39; Stopped &#x3D; &#39;7&#39; Rejected &#x3D; &#39;8&#39; Suspended &#x3D; &#39;9&#39; PendingNew &#x3D; &#39;A&#39; Calculated &#x3D; &#39;B&#39; Expired &#x3D; &#39;C&#39; AcceptedForBidding &#x3D; &#39;D&#39; PendingReplace &#x3D; &#39;E&#39; 
 */
@JsonAdapter(OrderStatus.Adapter.class)
public enum OrderStatus {
  
  _1("-1"),
  
  _0("0"),
  
  _12("1"),
  
  _2("2"),
  
  _3("3"),
  
  _4("4"),
  
  _5("5"),
  
  _6("6"),
  
  _7("7"),
  
  _8("8"),
  
  _9("9"),
  
  A("A"),
  
  B("B"),
  
  C("C"),
  
  D("D"),
  
  E("E");

  private String value;

  OrderStatus(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static OrderStatus fromValue(String value) {
    for (OrderStatus b : OrderStatus.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<OrderStatus> {
    @Override
    public void write(final JsonWriter jsonWriter, final OrderStatus enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public OrderStatus read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return OrderStatus.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    OrderStatus.fromValue(value);
  }
}

