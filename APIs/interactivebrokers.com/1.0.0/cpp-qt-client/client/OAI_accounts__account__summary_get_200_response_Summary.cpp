/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_accounts__account__summary_get_200_response_Summary.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_accounts__account__summary_get_200_response_Summary::OAI_accounts__account__summary_get_200_response_Summary(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_accounts__account__summary_get_200_response_Summary::OAI_accounts__account__summary_get_200_response_Summary() {
    this->initializeModel();
}

OAI_accounts__account__summary_get_200_response_Summary::~OAI_accounts__account__summary_get_200_response_Summary() {}

void OAI_accounts__account__summary_get_200_response_Summary::initializeModel() {

    m_accrued_cash_isSet = false;
    m_accrued_cash_isValid = false;

    m_accrued_cash_c_isSet = false;
    m_accrued_cash_c_isValid = false;

    m_accrued_cash_s_isSet = false;
    m_accrued_cash_s_isValid = false;

    m_accrued_dividend_isSet = false;
    m_accrued_dividend_isValid = false;

    m_accrued_dividend_c_isSet = false;
    m_accrued_dividend_c_isValid = false;

    m_accrued_dividend_s_isSet = false;
    m_accrued_dividend_s_isValid = false;

    m_available_funds_isSet = false;
    m_available_funds_isValid = false;

    m_available_funds_c_isSet = false;
    m_available_funds_c_isValid = false;

    m_available_funds_s_isSet = false;
    m_available_funds_s_isValid = false;

    m_billable_isSet = false;
    m_billable_isValid = false;

    m_billable_c_isSet = false;
    m_billable_c_isValid = false;

    m_billable_s_isSet = false;
    m_billable_s_isValid = false;

    m_buying_power_isSet = false;
    m_buying_power_isValid = false;

    m_equity_with_loan_value_isSet = false;
    m_equity_with_loan_value_isValid = false;

    m_equity_with_loan_value_c_isSet = false;
    m_equity_with_loan_value_c_isValid = false;

    m_equity_with_loan_value_s_isSet = false;
    m_equity_with_loan_value_s_isValid = false;

    m_excess_liquidity_isSet = false;
    m_excess_liquidity_isValid = false;

    m_excess_liquidity_c_isSet = false;
    m_excess_liquidity_c_isValid = false;

    m_excess_liquidity_s_isSet = false;
    m_excess_liquidity_s_isValid = false;

    m_full_available_funds_isSet = false;
    m_full_available_funds_isValid = false;

    m_full_available_funds_c_isSet = false;
    m_full_available_funds_c_isValid = false;

    m_full_available_funds_s_isSet = false;
    m_full_available_funds_s_isValid = false;

    m_full_excess_liquidity_isSet = false;
    m_full_excess_liquidity_isValid = false;

    m_full_excess_liquidity_c_isSet = false;
    m_full_excess_liquidity_c_isValid = false;

    m_full_excess_liquidity_s_isSet = false;
    m_full_excess_liquidity_s_isValid = false;

    m_full_init_margin_req_isSet = false;
    m_full_init_margin_req_isValid = false;

    m_full_init_margin_req_c_isSet = false;
    m_full_init_margin_req_c_isValid = false;

    m_full_init_margin_req_s_isSet = false;
    m_full_init_margin_req_s_isValid = false;

    m_full_maint_margin_req_isSet = false;
    m_full_maint_margin_req_isValid = false;

    m_full_maint_margin_req_c_isSet = false;
    m_full_maint_margin_req_c_isValid = false;

    m_full_maint_margin_req_s_isSet = false;
    m_full_maint_margin_req_s_isValid = false;

    m_gross_position_value_isSet = false;
    m_gross_position_value_isValid = false;

    m_gross_position_value_c_isSet = false;
    m_gross_position_value_c_isValid = false;

    m_gross_position_value_s_isSet = false;
    m_gross_position_value_s_isValid = false;

    m_indian_stock_haircut_isSet = false;
    m_indian_stock_haircut_isValid = false;

    m_indian_stock_haircut_c_isSet = false;
    m_indian_stock_haircut_c_isValid = false;

    m_indian_stock_haircut_s_isSet = false;
    m_indian_stock_haircut_s_isValid = false;

    m_init_margin_req_isSet = false;
    m_init_margin_req_isValid = false;

    m_init_margin_req_c_isSet = false;
    m_init_margin_req_c_isValid = false;

    m_init_margin_req_s_isSet = false;
    m_init_margin_req_s_isValid = false;

    m_insured_deposit_isSet = false;
    m_insured_deposit_isValid = false;

    m_insured_deposit_c_isSet = false;
    m_insured_deposit_c_isValid = false;

    m_insured_deposit_s_isSet = false;
    m_insured_deposit_s_isValid = false;

    m_look_ahead_available_funds_isSet = false;
    m_look_ahead_available_funds_isValid = false;

    m_look_ahead_available_funds_c_isSet = false;
    m_look_ahead_available_funds_c_isValid = false;

    m_look_ahead_available_funds_s_isSet = false;
    m_look_ahead_available_funds_s_isValid = false;

    m_look_ahead_excess_liquidity_isSet = false;
    m_look_ahead_excess_liquidity_isValid = false;

    m_look_ahead_excess_liquidity_c_isSet = false;
    m_look_ahead_excess_liquidity_c_isValid = false;

    m_look_ahead_excess_liquidity_s_isSet = false;
    m_look_ahead_excess_liquidity_s_isValid = false;

    m_look_ahead_init_margin_req_isSet = false;
    m_look_ahead_init_margin_req_isValid = false;

    m_look_ahead_init_margin_req_c_isSet = false;
    m_look_ahead_init_margin_req_c_isValid = false;

    m_look_ahead_init_margin_req_s_isSet = false;
    m_look_ahead_init_margin_req_s_isValid = false;

    m_look_ahead_maint_margin_req_isSet = false;
    m_look_ahead_maint_margin_req_isValid = false;

    m_look_ahead_maint_margin_req_c_isSet = false;
    m_look_ahead_maint_margin_req_c_isValid = false;

    m_look_ahead_maint_margin_req_s_isSet = false;
    m_look_ahead_maint_margin_req_s_isValid = false;

    m_maint_margin_req_isSet = false;
    m_maint_margin_req_isValid = false;

    m_maint_margin_req_c_isSet = false;
    m_maint_margin_req_c_isValid = false;

    m_maint_margin_req_s_isSet = false;
    m_maint_margin_req_s_isValid = false;

    m_net_liquidation_isSet = false;
    m_net_liquidation_isValid = false;

    m_net_liquidation_c_isSet = false;
    m_net_liquidation_c_isValid = false;

    m_net_liquidation_s_isSet = false;
    m_net_liquidation_s_isValid = false;

    m_net_liquidation_uncertainty_isSet = false;
    m_net_liquidation_uncertainty_isValid = false;

    m_pa_shares_value_isSet = false;
    m_pa_shares_value_isValid = false;

    m_pa_shares_value_c_isSet = false;
    m_pa_shares_value_c_isValid = false;

    m_pa_shares_value_s_isSet = false;
    m_pa_shares_value_s_isValid = false;

    m_post_expiration_excess_isSet = false;
    m_post_expiration_excess_isValid = false;

    m_post_expiration_excess_c_isSet = false;
    m_post_expiration_excess_c_isValid = false;

    m_post_expiration_excess_s_isSet = false;
    m_post_expiration_excess_s_isValid = false;

    m_post_expiration_margin_isSet = false;
    m_post_expiration_margin_isValid = false;

    m_post_expiration_margin_c_isSet = false;
    m_post_expiration_margin_c_isValid = false;

    m_post_expiration_margin_s_isSet = false;
    m_post_expiration_margin_s_isValid = false;

    m_reg_t_equity_isSet = false;
    m_reg_t_equity_isValid = false;

    m_reg_t_equity_s_isSet = false;
    m_reg_t_equity_s_isValid = false;

    m_reg_t_margin_isSet = false;
    m_reg_t_margin_isValid = false;

    m_reg_t_margin_s_isSet = false;
    m_reg_t_margin_s_isValid = false;

    m_sma_isSet = false;
    m_sma_isValid = false;

    m_sma_s_isSet = false;
    m_sma_s_isValid = false;

    m_total_cash_value_isSet = false;
    m_total_cash_value_isValid = false;

    m_total_cash_value_c_isSet = false;
    m_total_cash_value_c_isValid = false;

    m_total_cash_value_s_isSet = false;
    m_total_cash_value_s_isValid = false;
}

void OAI_accounts__account__summary_get_200_response_Summary::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_accounts__account__summary_get_200_response_Summary::fromJsonObject(QJsonObject json) {

    m_accrued_cash_isValid = ::OpenAPI::fromJsonValue(m_accrued_cash, json[QString("AccruedCash")]);
    m_accrued_cash_isSet = !json[QString("AccruedCash")].isNull() && m_accrued_cash_isValid;

    m_accrued_cash_c_isValid = ::OpenAPI::fromJsonValue(m_accrued_cash_c, json[QString("AccruedCash-C")]);
    m_accrued_cash_c_isSet = !json[QString("AccruedCash-C")].isNull() && m_accrued_cash_c_isValid;

    m_accrued_cash_s_isValid = ::OpenAPI::fromJsonValue(m_accrued_cash_s, json[QString("AccruedCash-S")]);
    m_accrued_cash_s_isSet = !json[QString("AccruedCash-S")].isNull() && m_accrued_cash_s_isValid;

    m_accrued_dividend_isValid = ::OpenAPI::fromJsonValue(m_accrued_dividend, json[QString("AccruedDividend")]);
    m_accrued_dividend_isSet = !json[QString("AccruedDividend")].isNull() && m_accrued_dividend_isValid;

    m_accrued_dividend_c_isValid = ::OpenAPI::fromJsonValue(m_accrued_dividend_c, json[QString("AccruedDividend-C")]);
    m_accrued_dividend_c_isSet = !json[QString("AccruedDividend-C")].isNull() && m_accrued_dividend_c_isValid;

    m_accrued_dividend_s_isValid = ::OpenAPI::fromJsonValue(m_accrued_dividend_s, json[QString("AccruedDividend-S")]);
    m_accrued_dividend_s_isSet = !json[QString("AccruedDividend-S")].isNull() && m_accrued_dividend_s_isValid;

    m_available_funds_isValid = ::OpenAPI::fromJsonValue(m_available_funds, json[QString("AvailableFunds")]);
    m_available_funds_isSet = !json[QString("AvailableFunds")].isNull() && m_available_funds_isValid;

    m_available_funds_c_isValid = ::OpenAPI::fromJsonValue(m_available_funds_c, json[QString("AvailableFunds-C")]);
    m_available_funds_c_isSet = !json[QString("AvailableFunds-C")].isNull() && m_available_funds_c_isValid;

    m_available_funds_s_isValid = ::OpenAPI::fromJsonValue(m_available_funds_s, json[QString("AvailableFunds-S")]);
    m_available_funds_s_isSet = !json[QString("AvailableFunds-S")].isNull() && m_available_funds_s_isValid;

    m_billable_isValid = ::OpenAPI::fromJsonValue(m_billable, json[QString("Billable")]);
    m_billable_isSet = !json[QString("Billable")].isNull() && m_billable_isValid;

    m_billable_c_isValid = ::OpenAPI::fromJsonValue(m_billable_c, json[QString("Billable-C")]);
    m_billable_c_isSet = !json[QString("Billable-C")].isNull() && m_billable_c_isValid;

    m_billable_s_isValid = ::OpenAPI::fromJsonValue(m_billable_s, json[QString("Billable-S")]);
    m_billable_s_isSet = !json[QString("Billable-S")].isNull() && m_billable_s_isValid;

    m_buying_power_isValid = ::OpenAPI::fromJsonValue(m_buying_power, json[QString("BuyingPower")]);
    m_buying_power_isSet = !json[QString("BuyingPower")].isNull() && m_buying_power_isValid;

    m_equity_with_loan_value_isValid = ::OpenAPI::fromJsonValue(m_equity_with_loan_value, json[QString("EquityWithLoanValue")]);
    m_equity_with_loan_value_isSet = !json[QString("EquityWithLoanValue")].isNull() && m_equity_with_loan_value_isValid;

    m_equity_with_loan_value_c_isValid = ::OpenAPI::fromJsonValue(m_equity_with_loan_value_c, json[QString("EquityWithLoanValue-C")]);
    m_equity_with_loan_value_c_isSet = !json[QString("EquityWithLoanValue-C")].isNull() && m_equity_with_loan_value_c_isValid;

    m_equity_with_loan_value_s_isValid = ::OpenAPI::fromJsonValue(m_equity_with_loan_value_s, json[QString("EquityWithLoanValue-S")]);
    m_equity_with_loan_value_s_isSet = !json[QString("EquityWithLoanValue-S")].isNull() && m_equity_with_loan_value_s_isValid;

    m_excess_liquidity_isValid = ::OpenAPI::fromJsonValue(m_excess_liquidity, json[QString("ExcessLiquidity")]);
    m_excess_liquidity_isSet = !json[QString("ExcessLiquidity")].isNull() && m_excess_liquidity_isValid;

    m_excess_liquidity_c_isValid = ::OpenAPI::fromJsonValue(m_excess_liquidity_c, json[QString("ExcessLiquidity-C")]);
    m_excess_liquidity_c_isSet = !json[QString("ExcessLiquidity-C")].isNull() && m_excess_liquidity_c_isValid;

    m_excess_liquidity_s_isValid = ::OpenAPI::fromJsonValue(m_excess_liquidity_s, json[QString("ExcessLiquidity-S")]);
    m_excess_liquidity_s_isSet = !json[QString("ExcessLiquidity-S")].isNull() && m_excess_liquidity_s_isValid;

    m_full_available_funds_isValid = ::OpenAPI::fromJsonValue(m_full_available_funds, json[QString("FullAvailableFunds")]);
    m_full_available_funds_isSet = !json[QString("FullAvailableFunds")].isNull() && m_full_available_funds_isValid;

    m_full_available_funds_c_isValid = ::OpenAPI::fromJsonValue(m_full_available_funds_c, json[QString("FullAvailableFunds-C")]);
    m_full_available_funds_c_isSet = !json[QString("FullAvailableFunds-C")].isNull() && m_full_available_funds_c_isValid;

    m_full_available_funds_s_isValid = ::OpenAPI::fromJsonValue(m_full_available_funds_s, json[QString("FullAvailableFunds-S")]);
    m_full_available_funds_s_isSet = !json[QString("FullAvailableFunds-S")].isNull() && m_full_available_funds_s_isValid;

    m_full_excess_liquidity_isValid = ::OpenAPI::fromJsonValue(m_full_excess_liquidity, json[QString("FullExcessLiquidity")]);
    m_full_excess_liquidity_isSet = !json[QString("FullExcessLiquidity")].isNull() && m_full_excess_liquidity_isValid;

    m_full_excess_liquidity_c_isValid = ::OpenAPI::fromJsonValue(m_full_excess_liquidity_c, json[QString("FullExcessLiquidity-C")]);
    m_full_excess_liquidity_c_isSet = !json[QString("FullExcessLiquidity-C")].isNull() && m_full_excess_liquidity_c_isValid;

    m_full_excess_liquidity_s_isValid = ::OpenAPI::fromJsonValue(m_full_excess_liquidity_s, json[QString("FullExcessLiquidity-S")]);
    m_full_excess_liquidity_s_isSet = !json[QString("FullExcessLiquidity-S")].isNull() && m_full_excess_liquidity_s_isValid;

    m_full_init_margin_req_isValid = ::OpenAPI::fromJsonValue(m_full_init_margin_req, json[QString("FullInitMarginReq")]);
    m_full_init_margin_req_isSet = !json[QString("FullInitMarginReq")].isNull() && m_full_init_margin_req_isValid;

    m_full_init_margin_req_c_isValid = ::OpenAPI::fromJsonValue(m_full_init_margin_req_c, json[QString("FullInitMarginReq-C")]);
    m_full_init_margin_req_c_isSet = !json[QString("FullInitMarginReq-C")].isNull() && m_full_init_margin_req_c_isValid;

    m_full_init_margin_req_s_isValid = ::OpenAPI::fromJsonValue(m_full_init_margin_req_s, json[QString("FullInitMarginReq-S")]);
    m_full_init_margin_req_s_isSet = !json[QString("FullInitMarginReq-S")].isNull() && m_full_init_margin_req_s_isValid;

    m_full_maint_margin_req_isValid = ::OpenAPI::fromJsonValue(m_full_maint_margin_req, json[QString("FullMaintMarginReq")]);
    m_full_maint_margin_req_isSet = !json[QString("FullMaintMarginReq")].isNull() && m_full_maint_margin_req_isValid;

    m_full_maint_margin_req_c_isValid = ::OpenAPI::fromJsonValue(m_full_maint_margin_req_c, json[QString("FullMaintMarginReq-C")]);
    m_full_maint_margin_req_c_isSet = !json[QString("FullMaintMarginReq-C")].isNull() && m_full_maint_margin_req_c_isValid;

    m_full_maint_margin_req_s_isValid = ::OpenAPI::fromJsonValue(m_full_maint_margin_req_s, json[QString("FullMaintMarginReq-S")]);
    m_full_maint_margin_req_s_isSet = !json[QString("FullMaintMarginReq-S")].isNull() && m_full_maint_margin_req_s_isValid;

    m_gross_position_value_isValid = ::OpenAPI::fromJsonValue(m_gross_position_value, json[QString("GrossPositionValue")]);
    m_gross_position_value_isSet = !json[QString("GrossPositionValue")].isNull() && m_gross_position_value_isValid;

    m_gross_position_value_c_isValid = ::OpenAPI::fromJsonValue(m_gross_position_value_c, json[QString("GrossPositionValue-C")]);
    m_gross_position_value_c_isSet = !json[QString("GrossPositionValue-C")].isNull() && m_gross_position_value_c_isValid;

    m_gross_position_value_s_isValid = ::OpenAPI::fromJsonValue(m_gross_position_value_s, json[QString("GrossPositionValue-S")]);
    m_gross_position_value_s_isSet = !json[QString("GrossPositionValue-S")].isNull() && m_gross_position_value_s_isValid;

    m_indian_stock_haircut_isValid = ::OpenAPI::fromJsonValue(m_indian_stock_haircut, json[QString("IndianStockHaircut")]);
    m_indian_stock_haircut_isSet = !json[QString("IndianStockHaircut")].isNull() && m_indian_stock_haircut_isValid;

    m_indian_stock_haircut_c_isValid = ::OpenAPI::fromJsonValue(m_indian_stock_haircut_c, json[QString("IndianStockHaircut-C")]);
    m_indian_stock_haircut_c_isSet = !json[QString("IndianStockHaircut-C")].isNull() && m_indian_stock_haircut_c_isValid;

    m_indian_stock_haircut_s_isValid = ::OpenAPI::fromJsonValue(m_indian_stock_haircut_s, json[QString("IndianStockHaircut-S")]);
    m_indian_stock_haircut_s_isSet = !json[QString("IndianStockHaircut-S")].isNull() && m_indian_stock_haircut_s_isValid;

    m_init_margin_req_isValid = ::OpenAPI::fromJsonValue(m_init_margin_req, json[QString("InitMarginReq")]);
    m_init_margin_req_isSet = !json[QString("InitMarginReq")].isNull() && m_init_margin_req_isValid;

    m_init_margin_req_c_isValid = ::OpenAPI::fromJsonValue(m_init_margin_req_c, json[QString("InitMarginReq-C")]);
    m_init_margin_req_c_isSet = !json[QString("InitMarginReq-C")].isNull() && m_init_margin_req_c_isValid;

    m_init_margin_req_s_isValid = ::OpenAPI::fromJsonValue(m_init_margin_req_s, json[QString("InitMarginReq-S")]);
    m_init_margin_req_s_isSet = !json[QString("InitMarginReq-S")].isNull() && m_init_margin_req_s_isValid;

    m_insured_deposit_isValid = ::OpenAPI::fromJsonValue(m_insured_deposit, json[QString("InsuredDeposit")]);
    m_insured_deposit_isSet = !json[QString("InsuredDeposit")].isNull() && m_insured_deposit_isValid;

    m_insured_deposit_c_isValid = ::OpenAPI::fromJsonValue(m_insured_deposit_c, json[QString("InsuredDeposit-C")]);
    m_insured_deposit_c_isSet = !json[QString("InsuredDeposit-C")].isNull() && m_insured_deposit_c_isValid;

    m_insured_deposit_s_isValid = ::OpenAPI::fromJsonValue(m_insured_deposit_s, json[QString("InsuredDeposit-S")]);
    m_insured_deposit_s_isSet = !json[QString("InsuredDeposit-S")].isNull() && m_insured_deposit_s_isValid;

    m_look_ahead_available_funds_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_available_funds, json[QString("LookAheadAvailableFunds")]);
    m_look_ahead_available_funds_isSet = !json[QString("LookAheadAvailableFunds")].isNull() && m_look_ahead_available_funds_isValid;

    m_look_ahead_available_funds_c_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_available_funds_c, json[QString("LookAheadAvailableFunds-C")]);
    m_look_ahead_available_funds_c_isSet = !json[QString("LookAheadAvailableFunds-C")].isNull() && m_look_ahead_available_funds_c_isValid;

    m_look_ahead_available_funds_s_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_available_funds_s, json[QString("LookAheadAvailableFunds-S")]);
    m_look_ahead_available_funds_s_isSet = !json[QString("LookAheadAvailableFunds-S")].isNull() && m_look_ahead_available_funds_s_isValid;

    m_look_ahead_excess_liquidity_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_excess_liquidity, json[QString("LookAheadExcessLiquidity")]);
    m_look_ahead_excess_liquidity_isSet = !json[QString("LookAheadExcessLiquidity")].isNull() && m_look_ahead_excess_liquidity_isValid;

    m_look_ahead_excess_liquidity_c_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_excess_liquidity_c, json[QString("LookAheadExcessLiquidity-C")]);
    m_look_ahead_excess_liquidity_c_isSet = !json[QString("LookAheadExcessLiquidity-C")].isNull() && m_look_ahead_excess_liquidity_c_isValid;

    m_look_ahead_excess_liquidity_s_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_excess_liquidity_s, json[QString("LookAheadExcessLiquidity-S")]);
    m_look_ahead_excess_liquidity_s_isSet = !json[QString("LookAheadExcessLiquidity-S")].isNull() && m_look_ahead_excess_liquidity_s_isValid;

    m_look_ahead_init_margin_req_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_init_margin_req, json[QString("LookAheadInitMarginReq")]);
    m_look_ahead_init_margin_req_isSet = !json[QString("LookAheadInitMarginReq")].isNull() && m_look_ahead_init_margin_req_isValid;

    m_look_ahead_init_margin_req_c_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_init_margin_req_c, json[QString("LookAheadInitMarginReq-C")]);
    m_look_ahead_init_margin_req_c_isSet = !json[QString("LookAheadInitMarginReq-C")].isNull() && m_look_ahead_init_margin_req_c_isValid;

    m_look_ahead_init_margin_req_s_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_init_margin_req_s, json[QString("LookAheadInitMarginReq-S")]);
    m_look_ahead_init_margin_req_s_isSet = !json[QString("LookAheadInitMarginReq-S")].isNull() && m_look_ahead_init_margin_req_s_isValid;

    m_look_ahead_maint_margin_req_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_maint_margin_req, json[QString("LookAheadMaintMarginReq")]);
    m_look_ahead_maint_margin_req_isSet = !json[QString("LookAheadMaintMarginReq")].isNull() && m_look_ahead_maint_margin_req_isValid;

    m_look_ahead_maint_margin_req_c_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_maint_margin_req_c, json[QString("LookAheadMaintMarginReq-C")]);
    m_look_ahead_maint_margin_req_c_isSet = !json[QString("LookAheadMaintMarginReq-C")].isNull() && m_look_ahead_maint_margin_req_c_isValid;

    m_look_ahead_maint_margin_req_s_isValid = ::OpenAPI::fromJsonValue(m_look_ahead_maint_margin_req_s, json[QString("LookAheadMaintMarginReq-S")]);
    m_look_ahead_maint_margin_req_s_isSet = !json[QString("LookAheadMaintMarginReq-S")].isNull() && m_look_ahead_maint_margin_req_s_isValid;

    m_maint_margin_req_isValid = ::OpenAPI::fromJsonValue(m_maint_margin_req, json[QString("MaintMarginReq")]);
    m_maint_margin_req_isSet = !json[QString("MaintMarginReq")].isNull() && m_maint_margin_req_isValid;

    m_maint_margin_req_c_isValid = ::OpenAPI::fromJsonValue(m_maint_margin_req_c, json[QString("MaintMarginReq-C")]);
    m_maint_margin_req_c_isSet = !json[QString("MaintMarginReq-C")].isNull() && m_maint_margin_req_c_isValid;

    m_maint_margin_req_s_isValid = ::OpenAPI::fromJsonValue(m_maint_margin_req_s, json[QString("MaintMarginReq-S")]);
    m_maint_margin_req_s_isSet = !json[QString("MaintMarginReq-S")].isNull() && m_maint_margin_req_s_isValid;

    m_net_liquidation_isValid = ::OpenAPI::fromJsonValue(m_net_liquidation, json[QString("NetLiquidation")]);
    m_net_liquidation_isSet = !json[QString("NetLiquidation")].isNull() && m_net_liquidation_isValid;

    m_net_liquidation_c_isValid = ::OpenAPI::fromJsonValue(m_net_liquidation_c, json[QString("NetLiquidation-C")]);
    m_net_liquidation_c_isSet = !json[QString("NetLiquidation-C")].isNull() && m_net_liquidation_c_isValid;

    m_net_liquidation_s_isValid = ::OpenAPI::fromJsonValue(m_net_liquidation_s, json[QString("NetLiquidation-S")]);
    m_net_liquidation_s_isSet = !json[QString("NetLiquidation-S")].isNull() && m_net_liquidation_s_isValid;

    m_net_liquidation_uncertainty_isValid = ::OpenAPI::fromJsonValue(m_net_liquidation_uncertainty, json[QString("NetLiquidationUncertainty")]);
    m_net_liquidation_uncertainty_isSet = !json[QString("NetLiquidationUncertainty")].isNull() && m_net_liquidation_uncertainty_isValid;

    m_pa_shares_value_isValid = ::OpenAPI::fromJsonValue(m_pa_shares_value, json[QString("PASharesValue")]);
    m_pa_shares_value_isSet = !json[QString("PASharesValue")].isNull() && m_pa_shares_value_isValid;

    m_pa_shares_value_c_isValid = ::OpenAPI::fromJsonValue(m_pa_shares_value_c, json[QString("PASharesValue-C")]);
    m_pa_shares_value_c_isSet = !json[QString("PASharesValue-C")].isNull() && m_pa_shares_value_c_isValid;

    m_pa_shares_value_s_isValid = ::OpenAPI::fromJsonValue(m_pa_shares_value_s, json[QString("PASharesValue-S")]);
    m_pa_shares_value_s_isSet = !json[QString("PASharesValue-S")].isNull() && m_pa_shares_value_s_isValid;

    m_post_expiration_excess_isValid = ::OpenAPI::fromJsonValue(m_post_expiration_excess, json[QString("PostExpirationExcess")]);
    m_post_expiration_excess_isSet = !json[QString("PostExpirationExcess")].isNull() && m_post_expiration_excess_isValid;

    m_post_expiration_excess_c_isValid = ::OpenAPI::fromJsonValue(m_post_expiration_excess_c, json[QString("PostExpirationExcess-C")]);
    m_post_expiration_excess_c_isSet = !json[QString("PostExpirationExcess-C")].isNull() && m_post_expiration_excess_c_isValid;

    m_post_expiration_excess_s_isValid = ::OpenAPI::fromJsonValue(m_post_expiration_excess_s, json[QString("PostExpirationExcess-S")]);
    m_post_expiration_excess_s_isSet = !json[QString("PostExpirationExcess-S")].isNull() && m_post_expiration_excess_s_isValid;

    m_post_expiration_margin_isValid = ::OpenAPI::fromJsonValue(m_post_expiration_margin, json[QString("PostExpirationMargin")]);
    m_post_expiration_margin_isSet = !json[QString("PostExpirationMargin")].isNull() && m_post_expiration_margin_isValid;

    m_post_expiration_margin_c_isValid = ::OpenAPI::fromJsonValue(m_post_expiration_margin_c, json[QString("PostExpirationMargin-C")]);
    m_post_expiration_margin_c_isSet = !json[QString("PostExpirationMargin-C")].isNull() && m_post_expiration_margin_c_isValid;

    m_post_expiration_margin_s_isValid = ::OpenAPI::fromJsonValue(m_post_expiration_margin_s, json[QString("PostExpirationMargin-S")]);
    m_post_expiration_margin_s_isSet = !json[QString("PostExpirationMargin-S")].isNull() && m_post_expiration_margin_s_isValid;

    m_reg_t_equity_isValid = ::OpenAPI::fromJsonValue(m_reg_t_equity, json[QString("RegTEquity")]);
    m_reg_t_equity_isSet = !json[QString("RegTEquity")].isNull() && m_reg_t_equity_isValid;

    m_reg_t_equity_s_isValid = ::OpenAPI::fromJsonValue(m_reg_t_equity_s, json[QString("RegTEquity-S")]);
    m_reg_t_equity_s_isSet = !json[QString("RegTEquity-S")].isNull() && m_reg_t_equity_s_isValid;

    m_reg_t_margin_isValid = ::OpenAPI::fromJsonValue(m_reg_t_margin, json[QString("RegTMargin")]);
    m_reg_t_margin_isSet = !json[QString("RegTMargin")].isNull() && m_reg_t_margin_isValid;

    m_reg_t_margin_s_isValid = ::OpenAPI::fromJsonValue(m_reg_t_margin_s, json[QString("RegTMargin-S")]);
    m_reg_t_margin_s_isSet = !json[QString("RegTMargin-S")].isNull() && m_reg_t_margin_s_isValid;

    m_sma_isValid = ::OpenAPI::fromJsonValue(m_sma, json[QString("SMA")]);
    m_sma_isSet = !json[QString("SMA")].isNull() && m_sma_isValid;

    m_sma_s_isValid = ::OpenAPI::fromJsonValue(m_sma_s, json[QString("SMA-S")]);
    m_sma_s_isSet = !json[QString("SMA-S")].isNull() && m_sma_s_isValid;

    m_total_cash_value_isValid = ::OpenAPI::fromJsonValue(m_total_cash_value, json[QString("TotalCashValue")]);
    m_total_cash_value_isSet = !json[QString("TotalCashValue")].isNull() && m_total_cash_value_isValid;

    m_total_cash_value_c_isValid = ::OpenAPI::fromJsonValue(m_total_cash_value_c, json[QString("TotalCashValue-C")]);
    m_total_cash_value_c_isSet = !json[QString("TotalCashValue-C")].isNull() && m_total_cash_value_c_isValid;

    m_total_cash_value_s_isValid = ::OpenAPI::fromJsonValue(m_total_cash_value_s, json[QString("TotalCashValue-S")]);
    m_total_cash_value_s_isSet = !json[QString("TotalCashValue-S")].isNull() && m_total_cash_value_s_isValid;
}

QString OAI_accounts__account__summary_get_200_response_Summary::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_accounts__account__summary_get_200_response_Summary::asJsonObject() const {
    QJsonObject obj;
    if (m_accrued_cash_isSet) {
        obj.insert(QString("AccruedCash"), ::OpenAPI::toJsonValue(m_accrued_cash));
    }
    if (m_accrued_cash_c_isSet) {
        obj.insert(QString("AccruedCash-C"), ::OpenAPI::toJsonValue(m_accrued_cash_c));
    }
    if (m_accrued_cash_s_isSet) {
        obj.insert(QString("AccruedCash-S"), ::OpenAPI::toJsonValue(m_accrued_cash_s));
    }
    if (m_accrued_dividend_isSet) {
        obj.insert(QString("AccruedDividend"), ::OpenAPI::toJsonValue(m_accrued_dividend));
    }
    if (m_accrued_dividend_c_isSet) {
        obj.insert(QString("AccruedDividend-C"), ::OpenAPI::toJsonValue(m_accrued_dividend_c));
    }
    if (m_accrued_dividend_s_isSet) {
        obj.insert(QString("AccruedDividend-S"), ::OpenAPI::toJsonValue(m_accrued_dividend_s));
    }
    if (m_available_funds_isSet) {
        obj.insert(QString("AvailableFunds"), ::OpenAPI::toJsonValue(m_available_funds));
    }
    if (m_available_funds_c_isSet) {
        obj.insert(QString("AvailableFunds-C"), ::OpenAPI::toJsonValue(m_available_funds_c));
    }
    if (m_available_funds_s_isSet) {
        obj.insert(QString("AvailableFunds-S"), ::OpenAPI::toJsonValue(m_available_funds_s));
    }
    if (m_billable_isSet) {
        obj.insert(QString("Billable"), ::OpenAPI::toJsonValue(m_billable));
    }
    if (m_billable_c_isSet) {
        obj.insert(QString("Billable-C"), ::OpenAPI::toJsonValue(m_billable_c));
    }
    if (m_billable_s_isSet) {
        obj.insert(QString("Billable-S"), ::OpenAPI::toJsonValue(m_billable_s));
    }
    if (m_buying_power_isSet) {
        obj.insert(QString("BuyingPower"), ::OpenAPI::toJsonValue(m_buying_power));
    }
    if (m_equity_with_loan_value_isSet) {
        obj.insert(QString("EquityWithLoanValue"), ::OpenAPI::toJsonValue(m_equity_with_loan_value));
    }
    if (m_equity_with_loan_value_c_isSet) {
        obj.insert(QString("EquityWithLoanValue-C"), ::OpenAPI::toJsonValue(m_equity_with_loan_value_c));
    }
    if (m_equity_with_loan_value_s_isSet) {
        obj.insert(QString("EquityWithLoanValue-S"), ::OpenAPI::toJsonValue(m_equity_with_loan_value_s));
    }
    if (m_excess_liquidity_isSet) {
        obj.insert(QString("ExcessLiquidity"), ::OpenAPI::toJsonValue(m_excess_liquidity));
    }
    if (m_excess_liquidity_c_isSet) {
        obj.insert(QString("ExcessLiquidity-C"), ::OpenAPI::toJsonValue(m_excess_liquidity_c));
    }
    if (m_excess_liquidity_s_isSet) {
        obj.insert(QString("ExcessLiquidity-S"), ::OpenAPI::toJsonValue(m_excess_liquidity_s));
    }
    if (m_full_available_funds_isSet) {
        obj.insert(QString("FullAvailableFunds"), ::OpenAPI::toJsonValue(m_full_available_funds));
    }
    if (m_full_available_funds_c_isSet) {
        obj.insert(QString("FullAvailableFunds-C"), ::OpenAPI::toJsonValue(m_full_available_funds_c));
    }
    if (m_full_available_funds_s_isSet) {
        obj.insert(QString("FullAvailableFunds-S"), ::OpenAPI::toJsonValue(m_full_available_funds_s));
    }
    if (m_full_excess_liquidity_isSet) {
        obj.insert(QString("FullExcessLiquidity"), ::OpenAPI::toJsonValue(m_full_excess_liquidity));
    }
    if (m_full_excess_liquidity_c_isSet) {
        obj.insert(QString("FullExcessLiquidity-C"), ::OpenAPI::toJsonValue(m_full_excess_liquidity_c));
    }
    if (m_full_excess_liquidity_s_isSet) {
        obj.insert(QString("FullExcessLiquidity-S"), ::OpenAPI::toJsonValue(m_full_excess_liquidity_s));
    }
    if (m_full_init_margin_req_isSet) {
        obj.insert(QString("FullInitMarginReq"), ::OpenAPI::toJsonValue(m_full_init_margin_req));
    }
    if (m_full_init_margin_req_c_isSet) {
        obj.insert(QString("FullInitMarginReq-C"), ::OpenAPI::toJsonValue(m_full_init_margin_req_c));
    }
    if (m_full_init_margin_req_s_isSet) {
        obj.insert(QString("FullInitMarginReq-S"), ::OpenAPI::toJsonValue(m_full_init_margin_req_s));
    }
    if (m_full_maint_margin_req_isSet) {
        obj.insert(QString("FullMaintMarginReq"), ::OpenAPI::toJsonValue(m_full_maint_margin_req));
    }
    if (m_full_maint_margin_req_c_isSet) {
        obj.insert(QString("FullMaintMarginReq-C"), ::OpenAPI::toJsonValue(m_full_maint_margin_req_c));
    }
    if (m_full_maint_margin_req_s_isSet) {
        obj.insert(QString("FullMaintMarginReq-S"), ::OpenAPI::toJsonValue(m_full_maint_margin_req_s));
    }
    if (m_gross_position_value_isSet) {
        obj.insert(QString("GrossPositionValue"), ::OpenAPI::toJsonValue(m_gross_position_value));
    }
    if (m_gross_position_value_c_isSet) {
        obj.insert(QString("GrossPositionValue-C"), ::OpenAPI::toJsonValue(m_gross_position_value_c));
    }
    if (m_gross_position_value_s_isSet) {
        obj.insert(QString("GrossPositionValue-S"), ::OpenAPI::toJsonValue(m_gross_position_value_s));
    }
    if (m_indian_stock_haircut_isSet) {
        obj.insert(QString("IndianStockHaircut"), ::OpenAPI::toJsonValue(m_indian_stock_haircut));
    }
    if (m_indian_stock_haircut_c_isSet) {
        obj.insert(QString("IndianStockHaircut-C"), ::OpenAPI::toJsonValue(m_indian_stock_haircut_c));
    }
    if (m_indian_stock_haircut_s_isSet) {
        obj.insert(QString("IndianStockHaircut-S"), ::OpenAPI::toJsonValue(m_indian_stock_haircut_s));
    }
    if (m_init_margin_req_isSet) {
        obj.insert(QString("InitMarginReq"), ::OpenAPI::toJsonValue(m_init_margin_req));
    }
    if (m_init_margin_req_c_isSet) {
        obj.insert(QString("InitMarginReq-C"), ::OpenAPI::toJsonValue(m_init_margin_req_c));
    }
    if (m_init_margin_req_s_isSet) {
        obj.insert(QString("InitMarginReq-S"), ::OpenAPI::toJsonValue(m_init_margin_req_s));
    }
    if (m_insured_deposit_isSet) {
        obj.insert(QString("InsuredDeposit"), ::OpenAPI::toJsonValue(m_insured_deposit));
    }
    if (m_insured_deposit_c_isSet) {
        obj.insert(QString("InsuredDeposit-C"), ::OpenAPI::toJsonValue(m_insured_deposit_c));
    }
    if (m_insured_deposit_s_isSet) {
        obj.insert(QString("InsuredDeposit-S"), ::OpenAPI::toJsonValue(m_insured_deposit_s));
    }
    if (m_look_ahead_available_funds_isSet) {
        obj.insert(QString("LookAheadAvailableFunds"), ::OpenAPI::toJsonValue(m_look_ahead_available_funds));
    }
    if (m_look_ahead_available_funds_c_isSet) {
        obj.insert(QString("LookAheadAvailableFunds-C"), ::OpenAPI::toJsonValue(m_look_ahead_available_funds_c));
    }
    if (m_look_ahead_available_funds_s_isSet) {
        obj.insert(QString("LookAheadAvailableFunds-S"), ::OpenAPI::toJsonValue(m_look_ahead_available_funds_s));
    }
    if (m_look_ahead_excess_liquidity_isSet) {
        obj.insert(QString("LookAheadExcessLiquidity"), ::OpenAPI::toJsonValue(m_look_ahead_excess_liquidity));
    }
    if (m_look_ahead_excess_liquidity_c_isSet) {
        obj.insert(QString("LookAheadExcessLiquidity-C"), ::OpenAPI::toJsonValue(m_look_ahead_excess_liquidity_c));
    }
    if (m_look_ahead_excess_liquidity_s_isSet) {
        obj.insert(QString("LookAheadExcessLiquidity-S"), ::OpenAPI::toJsonValue(m_look_ahead_excess_liquidity_s));
    }
    if (m_look_ahead_init_margin_req_isSet) {
        obj.insert(QString("LookAheadInitMarginReq"), ::OpenAPI::toJsonValue(m_look_ahead_init_margin_req));
    }
    if (m_look_ahead_init_margin_req_c_isSet) {
        obj.insert(QString("LookAheadInitMarginReq-C"), ::OpenAPI::toJsonValue(m_look_ahead_init_margin_req_c));
    }
    if (m_look_ahead_init_margin_req_s_isSet) {
        obj.insert(QString("LookAheadInitMarginReq-S"), ::OpenAPI::toJsonValue(m_look_ahead_init_margin_req_s));
    }
    if (m_look_ahead_maint_margin_req_isSet) {
        obj.insert(QString("LookAheadMaintMarginReq"), ::OpenAPI::toJsonValue(m_look_ahead_maint_margin_req));
    }
    if (m_look_ahead_maint_margin_req_c_isSet) {
        obj.insert(QString("LookAheadMaintMarginReq-C"), ::OpenAPI::toJsonValue(m_look_ahead_maint_margin_req_c));
    }
    if (m_look_ahead_maint_margin_req_s_isSet) {
        obj.insert(QString("LookAheadMaintMarginReq-S"), ::OpenAPI::toJsonValue(m_look_ahead_maint_margin_req_s));
    }
    if (m_maint_margin_req_isSet) {
        obj.insert(QString("MaintMarginReq"), ::OpenAPI::toJsonValue(m_maint_margin_req));
    }
    if (m_maint_margin_req_c_isSet) {
        obj.insert(QString("MaintMarginReq-C"), ::OpenAPI::toJsonValue(m_maint_margin_req_c));
    }
    if (m_maint_margin_req_s_isSet) {
        obj.insert(QString("MaintMarginReq-S"), ::OpenAPI::toJsonValue(m_maint_margin_req_s));
    }
    if (m_net_liquidation_isSet) {
        obj.insert(QString("NetLiquidation"), ::OpenAPI::toJsonValue(m_net_liquidation));
    }
    if (m_net_liquidation_c_isSet) {
        obj.insert(QString("NetLiquidation-C"), ::OpenAPI::toJsonValue(m_net_liquidation_c));
    }
    if (m_net_liquidation_s_isSet) {
        obj.insert(QString("NetLiquidation-S"), ::OpenAPI::toJsonValue(m_net_liquidation_s));
    }
    if (m_net_liquidation_uncertainty_isSet) {
        obj.insert(QString("NetLiquidationUncertainty"), ::OpenAPI::toJsonValue(m_net_liquidation_uncertainty));
    }
    if (m_pa_shares_value_isSet) {
        obj.insert(QString("PASharesValue"), ::OpenAPI::toJsonValue(m_pa_shares_value));
    }
    if (m_pa_shares_value_c_isSet) {
        obj.insert(QString("PASharesValue-C"), ::OpenAPI::toJsonValue(m_pa_shares_value_c));
    }
    if (m_pa_shares_value_s_isSet) {
        obj.insert(QString("PASharesValue-S"), ::OpenAPI::toJsonValue(m_pa_shares_value_s));
    }
    if (m_post_expiration_excess_isSet) {
        obj.insert(QString("PostExpirationExcess"), ::OpenAPI::toJsonValue(m_post_expiration_excess));
    }
    if (m_post_expiration_excess_c_isSet) {
        obj.insert(QString("PostExpirationExcess-C"), ::OpenAPI::toJsonValue(m_post_expiration_excess_c));
    }
    if (m_post_expiration_excess_s_isSet) {
        obj.insert(QString("PostExpirationExcess-S"), ::OpenAPI::toJsonValue(m_post_expiration_excess_s));
    }
    if (m_post_expiration_margin_isSet) {
        obj.insert(QString("PostExpirationMargin"), ::OpenAPI::toJsonValue(m_post_expiration_margin));
    }
    if (m_post_expiration_margin_c_isSet) {
        obj.insert(QString("PostExpirationMargin-C"), ::OpenAPI::toJsonValue(m_post_expiration_margin_c));
    }
    if (m_post_expiration_margin_s_isSet) {
        obj.insert(QString("PostExpirationMargin-S"), ::OpenAPI::toJsonValue(m_post_expiration_margin_s));
    }
    if (m_reg_t_equity_isSet) {
        obj.insert(QString("RegTEquity"), ::OpenAPI::toJsonValue(m_reg_t_equity));
    }
    if (m_reg_t_equity_s_isSet) {
        obj.insert(QString("RegTEquity-S"), ::OpenAPI::toJsonValue(m_reg_t_equity_s));
    }
    if (m_reg_t_margin_isSet) {
        obj.insert(QString("RegTMargin"), ::OpenAPI::toJsonValue(m_reg_t_margin));
    }
    if (m_reg_t_margin_s_isSet) {
        obj.insert(QString("RegTMargin-S"), ::OpenAPI::toJsonValue(m_reg_t_margin_s));
    }
    if (m_sma_isSet) {
        obj.insert(QString("SMA"), ::OpenAPI::toJsonValue(m_sma));
    }
    if (m_sma_s_isSet) {
        obj.insert(QString("SMA-S"), ::OpenAPI::toJsonValue(m_sma_s));
    }
    if (m_total_cash_value_isSet) {
        obj.insert(QString("TotalCashValue"), ::OpenAPI::toJsonValue(m_total_cash_value));
    }
    if (m_total_cash_value_c_isSet) {
        obj.insert(QString("TotalCashValue-C"), ::OpenAPI::toJsonValue(m_total_cash_value_c));
    }
    if (m_total_cash_value_s_isSet) {
        obj.insert(QString("TotalCashValue-S"), ::OpenAPI::toJsonValue(m_total_cash_value_s));
    }
    return obj;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAccruedCash() const {
    return m_accrued_cash;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAccruedCash(const double &accrued_cash) {
    m_accrued_cash = accrued_cash;
    m_accrued_cash_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_cash_Set() const{
    return m_accrued_cash_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_cash_Valid() const{
    return m_accrued_cash_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAccruedCashC() const {
    return m_accrued_cash_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAccruedCashC(const double &accrued_cash_c) {
    m_accrued_cash_c = accrued_cash_c;
    m_accrued_cash_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_cash_c_Set() const{
    return m_accrued_cash_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_cash_c_Valid() const{
    return m_accrued_cash_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAccruedCashS() const {
    return m_accrued_cash_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAccruedCashS(const double &accrued_cash_s) {
    m_accrued_cash_s = accrued_cash_s;
    m_accrued_cash_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_cash_s_Set() const{
    return m_accrued_cash_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_cash_s_Valid() const{
    return m_accrued_cash_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAccruedDividend() const {
    return m_accrued_dividend;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAccruedDividend(const double &accrued_dividend) {
    m_accrued_dividend = accrued_dividend;
    m_accrued_dividend_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_dividend_Set() const{
    return m_accrued_dividend_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_dividend_Valid() const{
    return m_accrued_dividend_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAccruedDividendC() const {
    return m_accrued_dividend_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAccruedDividendC(const double &accrued_dividend_c) {
    m_accrued_dividend_c = accrued_dividend_c;
    m_accrued_dividend_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_dividend_c_Set() const{
    return m_accrued_dividend_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_dividend_c_Valid() const{
    return m_accrued_dividend_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAccruedDividendS() const {
    return m_accrued_dividend_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAccruedDividendS(const double &accrued_dividend_s) {
    m_accrued_dividend_s = accrued_dividend_s;
    m_accrued_dividend_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_dividend_s_Set() const{
    return m_accrued_dividend_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_accrued_dividend_s_Valid() const{
    return m_accrued_dividend_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAvailableFunds() const {
    return m_available_funds;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAvailableFunds(const double &available_funds) {
    m_available_funds = available_funds;
    m_available_funds_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_available_funds_Set() const{
    return m_available_funds_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_available_funds_Valid() const{
    return m_available_funds_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAvailableFundsC() const {
    return m_available_funds_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAvailableFundsC(const double &available_funds_c) {
    m_available_funds_c = available_funds_c;
    m_available_funds_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_available_funds_c_Set() const{
    return m_available_funds_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_available_funds_c_Valid() const{
    return m_available_funds_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getAvailableFundsS() const {
    return m_available_funds_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setAvailableFundsS(const double &available_funds_s) {
    m_available_funds_s = available_funds_s;
    m_available_funds_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_available_funds_s_Set() const{
    return m_available_funds_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_available_funds_s_Valid() const{
    return m_available_funds_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getBillable() const {
    return m_billable;
}
void OAI_accounts__account__summary_get_200_response_Summary::setBillable(const double &billable) {
    m_billable = billable;
    m_billable_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_billable_Set() const{
    return m_billable_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_billable_Valid() const{
    return m_billable_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getBillableC() const {
    return m_billable_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setBillableC(const double &billable_c) {
    m_billable_c = billable_c;
    m_billable_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_billable_c_Set() const{
    return m_billable_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_billable_c_Valid() const{
    return m_billable_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getBillableS() const {
    return m_billable_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setBillableS(const double &billable_s) {
    m_billable_s = billable_s;
    m_billable_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_billable_s_Set() const{
    return m_billable_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_billable_s_Valid() const{
    return m_billable_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getBuyingPower() const {
    return m_buying_power;
}
void OAI_accounts__account__summary_get_200_response_Summary::setBuyingPower(const double &buying_power) {
    m_buying_power = buying_power;
    m_buying_power_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_buying_power_Set() const{
    return m_buying_power_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_buying_power_Valid() const{
    return m_buying_power_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getEquityWithLoanValue() const {
    return m_equity_with_loan_value;
}
void OAI_accounts__account__summary_get_200_response_Summary::setEquityWithLoanValue(const double &equity_with_loan_value) {
    m_equity_with_loan_value = equity_with_loan_value;
    m_equity_with_loan_value_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_equity_with_loan_value_Set() const{
    return m_equity_with_loan_value_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_equity_with_loan_value_Valid() const{
    return m_equity_with_loan_value_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getEquityWithLoanValueC() const {
    return m_equity_with_loan_value_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setEquityWithLoanValueC(const double &equity_with_loan_value_c) {
    m_equity_with_loan_value_c = equity_with_loan_value_c;
    m_equity_with_loan_value_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_equity_with_loan_value_c_Set() const{
    return m_equity_with_loan_value_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_equity_with_loan_value_c_Valid() const{
    return m_equity_with_loan_value_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getEquityWithLoanValueS() const {
    return m_equity_with_loan_value_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setEquityWithLoanValueS(const double &equity_with_loan_value_s) {
    m_equity_with_loan_value_s = equity_with_loan_value_s;
    m_equity_with_loan_value_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_equity_with_loan_value_s_Set() const{
    return m_equity_with_loan_value_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_equity_with_loan_value_s_Valid() const{
    return m_equity_with_loan_value_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getExcessLiquidity() const {
    return m_excess_liquidity;
}
void OAI_accounts__account__summary_get_200_response_Summary::setExcessLiquidity(const double &excess_liquidity) {
    m_excess_liquidity = excess_liquidity;
    m_excess_liquidity_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_excess_liquidity_Set() const{
    return m_excess_liquidity_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_excess_liquidity_Valid() const{
    return m_excess_liquidity_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getExcessLiquidityC() const {
    return m_excess_liquidity_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setExcessLiquidityC(const double &excess_liquidity_c) {
    m_excess_liquidity_c = excess_liquidity_c;
    m_excess_liquidity_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_excess_liquidity_c_Set() const{
    return m_excess_liquidity_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_excess_liquidity_c_Valid() const{
    return m_excess_liquidity_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getExcessLiquidityS() const {
    return m_excess_liquidity_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setExcessLiquidityS(const double &excess_liquidity_s) {
    m_excess_liquidity_s = excess_liquidity_s;
    m_excess_liquidity_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_excess_liquidity_s_Set() const{
    return m_excess_liquidity_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_excess_liquidity_s_Valid() const{
    return m_excess_liquidity_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullAvailableFunds() const {
    return m_full_available_funds;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullAvailableFunds(const double &full_available_funds) {
    m_full_available_funds = full_available_funds;
    m_full_available_funds_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_available_funds_Set() const{
    return m_full_available_funds_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_available_funds_Valid() const{
    return m_full_available_funds_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullAvailableFundsC() const {
    return m_full_available_funds_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullAvailableFundsC(const double &full_available_funds_c) {
    m_full_available_funds_c = full_available_funds_c;
    m_full_available_funds_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_available_funds_c_Set() const{
    return m_full_available_funds_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_available_funds_c_Valid() const{
    return m_full_available_funds_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullAvailableFundsS() const {
    return m_full_available_funds_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullAvailableFundsS(const double &full_available_funds_s) {
    m_full_available_funds_s = full_available_funds_s;
    m_full_available_funds_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_available_funds_s_Set() const{
    return m_full_available_funds_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_available_funds_s_Valid() const{
    return m_full_available_funds_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullExcessLiquidity() const {
    return m_full_excess_liquidity;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullExcessLiquidity(const double &full_excess_liquidity) {
    m_full_excess_liquidity = full_excess_liquidity;
    m_full_excess_liquidity_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_excess_liquidity_Set() const{
    return m_full_excess_liquidity_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_excess_liquidity_Valid() const{
    return m_full_excess_liquidity_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullExcessLiquidityC() const {
    return m_full_excess_liquidity_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullExcessLiquidityC(const double &full_excess_liquidity_c) {
    m_full_excess_liquidity_c = full_excess_liquidity_c;
    m_full_excess_liquidity_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_excess_liquidity_c_Set() const{
    return m_full_excess_liquidity_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_excess_liquidity_c_Valid() const{
    return m_full_excess_liquidity_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullExcessLiquidityS() const {
    return m_full_excess_liquidity_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullExcessLiquidityS(const double &full_excess_liquidity_s) {
    m_full_excess_liquidity_s = full_excess_liquidity_s;
    m_full_excess_liquidity_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_excess_liquidity_s_Set() const{
    return m_full_excess_liquidity_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_excess_liquidity_s_Valid() const{
    return m_full_excess_liquidity_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullInitMarginReq() const {
    return m_full_init_margin_req;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullInitMarginReq(const double &full_init_margin_req) {
    m_full_init_margin_req = full_init_margin_req;
    m_full_init_margin_req_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_init_margin_req_Set() const{
    return m_full_init_margin_req_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_init_margin_req_Valid() const{
    return m_full_init_margin_req_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullInitMarginReqC() const {
    return m_full_init_margin_req_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullInitMarginReqC(const double &full_init_margin_req_c) {
    m_full_init_margin_req_c = full_init_margin_req_c;
    m_full_init_margin_req_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_init_margin_req_c_Set() const{
    return m_full_init_margin_req_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_init_margin_req_c_Valid() const{
    return m_full_init_margin_req_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullInitMarginReqS() const {
    return m_full_init_margin_req_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullInitMarginReqS(const double &full_init_margin_req_s) {
    m_full_init_margin_req_s = full_init_margin_req_s;
    m_full_init_margin_req_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_init_margin_req_s_Set() const{
    return m_full_init_margin_req_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_init_margin_req_s_Valid() const{
    return m_full_init_margin_req_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullMaintMarginReq() const {
    return m_full_maint_margin_req;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullMaintMarginReq(const double &full_maint_margin_req) {
    m_full_maint_margin_req = full_maint_margin_req;
    m_full_maint_margin_req_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_maint_margin_req_Set() const{
    return m_full_maint_margin_req_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_maint_margin_req_Valid() const{
    return m_full_maint_margin_req_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullMaintMarginReqC() const {
    return m_full_maint_margin_req_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullMaintMarginReqC(const double &full_maint_margin_req_c) {
    m_full_maint_margin_req_c = full_maint_margin_req_c;
    m_full_maint_margin_req_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_maint_margin_req_c_Set() const{
    return m_full_maint_margin_req_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_maint_margin_req_c_Valid() const{
    return m_full_maint_margin_req_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getFullMaintMarginReqS() const {
    return m_full_maint_margin_req_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setFullMaintMarginReqS(const double &full_maint_margin_req_s) {
    m_full_maint_margin_req_s = full_maint_margin_req_s;
    m_full_maint_margin_req_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_maint_margin_req_s_Set() const{
    return m_full_maint_margin_req_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_full_maint_margin_req_s_Valid() const{
    return m_full_maint_margin_req_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getGrossPositionValue() const {
    return m_gross_position_value;
}
void OAI_accounts__account__summary_get_200_response_Summary::setGrossPositionValue(const double &gross_position_value) {
    m_gross_position_value = gross_position_value;
    m_gross_position_value_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_gross_position_value_Set() const{
    return m_gross_position_value_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_gross_position_value_Valid() const{
    return m_gross_position_value_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getGrossPositionValueC() const {
    return m_gross_position_value_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setGrossPositionValueC(const double &gross_position_value_c) {
    m_gross_position_value_c = gross_position_value_c;
    m_gross_position_value_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_gross_position_value_c_Set() const{
    return m_gross_position_value_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_gross_position_value_c_Valid() const{
    return m_gross_position_value_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getGrossPositionValueS() const {
    return m_gross_position_value_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setGrossPositionValueS(const double &gross_position_value_s) {
    m_gross_position_value_s = gross_position_value_s;
    m_gross_position_value_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_gross_position_value_s_Set() const{
    return m_gross_position_value_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_gross_position_value_s_Valid() const{
    return m_gross_position_value_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getIndianStockHaircut() const {
    return m_indian_stock_haircut;
}
void OAI_accounts__account__summary_get_200_response_Summary::setIndianStockHaircut(const double &indian_stock_haircut) {
    m_indian_stock_haircut = indian_stock_haircut;
    m_indian_stock_haircut_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_indian_stock_haircut_Set() const{
    return m_indian_stock_haircut_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_indian_stock_haircut_Valid() const{
    return m_indian_stock_haircut_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getIndianStockHaircutC() const {
    return m_indian_stock_haircut_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setIndianStockHaircutC(const double &indian_stock_haircut_c) {
    m_indian_stock_haircut_c = indian_stock_haircut_c;
    m_indian_stock_haircut_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_indian_stock_haircut_c_Set() const{
    return m_indian_stock_haircut_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_indian_stock_haircut_c_Valid() const{
    return m_indian_stock_haircut_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getIndianStockHaircutS() const {
    return m_indian_stock_haircut_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setIndianStockHaircutS(const double &indian_stock_haircut_s) {
    m_indian_stock_haircut_s = indian_stock_haircut_s;
    m_indian_stock_haircut_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_indian_stock_haircut_s_Set() const{
    return m_indian_stock_haircut_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_indian_stock_haircut_s_Valid() const{
    return m_indian_stock_haircut_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getInitMarginReq() const {
    return m_init_margin_req;
}
void OAI_accounts__account__summary_get_200_response_Summary::setInitMarginReq(const double &init_margin_req) {
    m_init_margin_req = init_margin_req;
    m_init_margin_req_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_init_margin_req_Set() const{
    return m_init_margin_req_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_init_margin_req_Valid() const{
    return m_init_margin_req_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getInitMarginReqC() const {
    return m_init_margin_req_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setInitMarginReqC(const double &init_margin_req_c) {
    m_init_margin_req_c = init_margin_req_c;
    m_init_margin_req_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_init_margin_req_c_Set() const{
    return m_init_margin_req_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_init_margin_req_c_Valid() const{
    return m_init_margin_req_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getInitMarginReqS() const {
    return m_init_margin_req_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setInitMarginReqS(const double &init_margin_req_s) {
    m_init_margin_req_s = init_margin_req_s;
    m_init_margin_req_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_init_margin_req_s_Set() const{
    return m_init_margin_req_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_init_margin_req_s_Valid() const{
    return m_init_margin_req_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getInsuredDeposit() const {
    return m_insured_deposit;
}
void OAI_accounts__account__summary_get_200_response_Summary::setInsuredDeposit(const double &insured_deposit) {
    m_insured_deposit = insured_deposit;
    m_insured_deposit_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_insured_deposit_Set() const{
    return m_insured_deposit_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_insured_deposit_Valid() const{
    return m_insured_deposit_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getInsuredDepositC() const {
    return m_insured_deposit_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setInsuredDepositC(const double &insured_deposit_c) {
    m_insured_deposit_c = insured_deposit_c;
    m_insured_deposit_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_insured_deposit_c_Set() const{
    return m_insured_deposit_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_insured_deposit_c_Valid() const{
    return m_insured_deposit_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getInsuredDepositS() const {
    return m_insured_deposit_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setInsuredDepositS(const double &insured_deposit_s) {
    m_insured_deposit_s = insured_deposit_s;
    m_insured_deposit_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_insured_deposit_s_Set() const{
    return m_insured_deposit_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_insured_deposit_s_Valid() const{
    return m_insured_deposit_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadAvailableFunds() const {
    return m_look_ahead_available_funds;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadAvailableFunds(const double &look_ahead_available_funds) {
    m_look_ahead_available_funds = look_ahead_available_funds;
    m_look_ahead_available_funds_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_available_funds_Set() const{
    return m_look_ahead_available_funds_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_available_funds_Valid() const{
    return m_look_ahead_available_funds_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadAvailableFundsC() const {
    return m_look_ahead_available_funds_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadAvailableFundsC(const double &look_ahead_available_funds_c) {
    m_look_ahead_available_funds_c = look_ahead_available_funds_c;
    m_look_ahead_available_funds_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_available_funds_c_Set() const{
    return m_look_ahead_available_funds_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_available_funds_c_Valid() const{
    return m_look_ahead_available_funds_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadAvailableFundsS() const {
    return m_look_ahead_available_funds_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadAvailableFundsS(const double &look_ahead_available_funds_s) {
    m_look_ahead_available_funds_s = look_ahead_available_funds_s;
    m_look_ahead_available_funds_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_available_funds_s_Set() const{
    return m_look_ahead_available_funds_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_available_funds_s_Valid() const{
    return m_look_ahead_available_funds_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadExcessLiquidity() const {
    return m_look_ahead_excess_liquidity;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadExcessLiquidity(const double &look_ahead_excess_liquidity) {
    m_look_ahead_excess_liquidity = look_ahead_excess_liquidity;
    m_look_ahead_excess_liquidity_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_excess_liquidity_Set() const{
    return m_look_ahead_excess_liquidity_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_excess_liquidity_Valid() const{
    return m_look_ahead_excess_liquidity_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadExcessLiquidityC() const {
    return m_look_ahead_excess_liquidity_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadExcessLiquidityC(const double &look_ahead_excess_liquidity_c) {
    m_look_ahead_excess_liquidity_c = look_ahead_excess_liquidity_c;
    m_look_ahead_excess_liquidity_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_excess_liquidity_c_Set() const{
    return m_look_ahead_excess_liquidity_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_excess_liquidity_c_Valid() const{
    return m_look_ahead_excess_liquidity_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadExcessLiquidityS() const {
    return m_look_ahead_excess_liquidity_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadExcessLiquidityS(const double &look_ahead_excess_liquidity_s) {
    m_look_ahead_excess_liquidity_s = look_ahead_excess_liquidity_s;
    m_look_ahead_excess_liquidity_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_excess_liquidity_s_Set() const{
    return m_look_ahead_excess_liquidity_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_excess_liquidity_s_Valid() const{
    return m_look_ahead_excess_liquidity_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadInitMarginReq() const {
    return m_look_ahead_init_margin_req;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadInitMarginReq(const double &look_ahead_init_margin_req) {
    m_look_ahead_init_margin_req = look_ahead_init_margin_req;
    m_look_ahead_init_margin_req_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_init_margin_req_Set() const{
    return m_look_ahead_init_margin_req_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_init_margin_req_Valid() const{
    return m_look_ahead_init_margin_req_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadInitMarginReqC() const {
    return m_look_ahead_init_margin_req_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadInitMarginReqC(const double &look_ahead_init_margin_req_c) {
    m_look_ahead_init_margin_req_c = look_ahead_init_margin_req_c;
    m_look_ahead_init_margin_req_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_init_margin_req_c_Set() const{
    return m_look_ahead_init_margin_req_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_init_margin_req_c_Valid() const{
    return m_look_ahead_init_margin_req_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadInitMarginReqS() const {
    return m_look_ahead_init_margin_req_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadInitMarginReqS(const double &look_ahead_init_margin_req_s) {
    m_look_ahead_init_margin_req_s = look_ahead_init_margin_req_s;
    m_look_ahead_init_margin_req_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_init_margin_req_s_Set() const{
    return m_look_ahead_init_margin_req_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_init_margin_req_s_Valid() const{
    return m_look_ahead_init_margin_req_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadMaintMarginReq() const {
    return m_look_ahead_maint_margin_req;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadMaintMarginReq(const double &look_ahead_maint_margin_req) {
    m_look_ahead_maint_margin_req = look_ahead_maint_margin_req;
    m_look_ahead_maint_margin_req_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_maint_margin_req_Set() const{
    return m_look_ahead_maint_margin_req_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_maint_margin_req_Valid() const{
    return m_look_ahead_maint_margin_req_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadMaintMarginReqC() const {
    return m_look_ahead_maint_margin_req_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadMaintMarginReqC(const double &look_ahead_maint_margin_req_c) {
    m_look_ahead_maint_margin_req_c = look_ahead_maint_margin_req_c;
    m_look_ahead_maint_margin_req_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_maint_margin_req_c_Set() const{
    return m_look_ahead_maint_margin_req_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_maint_margin_req_c_Valid() const{
    return m_look_ahead_maint_margin_req_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getLookAheadMaintMarginReqS() const {
    return m_look_ahead_maint_margin_req_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setLookAheadMaintMarginReqS(const double &look_ahead_maint_margin_req_s) {
    m_look_ahead_maint_margin_req_s = look_ahead_maint_margin_req_s;
    m_look_ahead_maint_margin_req_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_maint_margin_req_s_Set() const{
    return m_look_ahead_maint_margin_req_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_look_ahead_maint_margin_req_s_Valid() const{
    return m_look_ahead_maint_margin_req_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getMaintMarginReq() const {
    return m_maint_margin_req;
}
void OAI_accounts__account__summary_get_200_response_Summary::setMaintMarginReq(const double &maint_margin_req) {
    m_maint_margin_req = maint_margin_req;
    m_maint_margin_req_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_maint_margin_req_Set() const{
    return m_maint_margin_req_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_maint_margin_req_Valid() const{
    return m_maint_margin_req_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getMaintMarginReqC() const {
    return m_maint_margin_req_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setMaintMarginReqC(const double &maint_margin_req_c) {
    m_maint_margin_req_c = maint_margin_req_c;
    m_maint_margin_req_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_maint_margin_req_c_Set() const{
    return m_maint_margin_req_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_maint_margin_req_c_Valid() const{
    return m_maint_margin_req_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getMaintMarginReqS() const {
    return m_maint_margin_req_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setMaintMarginReqS(const double &maint_margin_req_s) {
    m_maint_margin_req_s = maint_margin_req_s;
    m_maint_margin_req_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_maint_margin_req_s_Set() const{
    return m_maint_margin_req_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_maint_margin_req_s_Valid() const{
    return m_maint_margin_req_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getNetLiquidation() const {
    return m_net_liquidation;
}
void OAI_accounts__account__summary_get_200_response_Summary::setNetLiquidation(const double &net_liquidation) {
    m_net_liquidation = net_liquidation;
    m_net_liquidation_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_Set() const{
    return m_net_liquidation_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_Valid() const{
    return m_net_liquidation_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getNetLiquidationC() const {
    return m_net_liquidation_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setNetLiquidationC(const double &net_liquidation_c) {
    m_net_liquidation_c = net_liquidation_c;
    m_net_liquidation_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_c_Set() const{
    return m_net_liquidation_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_c_Valid() const{
    return m_net_liquidation_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getNetLiquidationS() const {
    return m_net_liquidation_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setNetLiquidationS(const double &net_liquidation_s) {
    m_net_liquidation_s = net_liquidation_s;
    m_net_liquidation_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_s_Set() const{
    return m_net_liquidation_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_s_Valid() const{
    return m_net_liquidation_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getNetLiquidationUncertainty() const {
    return m_net_liquidation_uncertainty;
}
void OAI_accounts__account__summary_get_200_response_Summary::setNetLiquidationUncertainty(const double &net_liquidation_uncertainty) {
    m_net_liquidation_uncertainty = net_liquidation_uncertainty;
    m_net_liquidation_uncertainty_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_uncertainty_Set() const{
    return m_net_liquidation_uncertainty_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_net_liquidation_uncertainty_Valid() const{
    return m_net_liquidation_uncertainty_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPaSharesValue() const {
    return m_pa_shares_value;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPaSharesValue(const double &pa_shares_value) {
    m_pa_shares_value = pa_shares_value;
    m_pa_shares_value_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_pa_shares_value_Set() const{
    return m_pa_shares_value_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_pa_shares_value_Valid() const{
    return m_pa_shares_value_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPaSharesValueC() const {
    return m_pa_shares_value_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPaSharesValueC(const double &pa_shares_value_c) {
    m_pa_shares_value_c = pa_shares_value_c;
    m_pa_shares_value_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_pa_shares_value_c_Set() const{
    return m_pa_shares_value_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_pa_shares_value_c_Valid() const{
    return m_pa_shares_value_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPaSharesValueS() const {
    return m_pa_shares_value_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPaSharesValueS(const double &pa_shares_value_s) {
    m_pa_shares_value_s = pa_shares_value_s;
    m_pa_shares_value_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_pa_shares_value_s_Set() const{
    return m_pa_shares_value_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_pa_shares_value_s_Valid() const{
    return m_pa_shares_value_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPostExpirationExcess() const {
    return m_post_expiration_excess;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPostExpirationExcess(const double &post_expiration_excess) {
    m_post_expiration_excess = post_expiration_excess;
    m_post_expiration_excess_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_excess_Set() const{
    return m_post_expiration_excess_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_excess_Valid() const{
    return m_post_expiration_excess_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPostExpirationExcessC() const {
    return m_post_expiration_excess_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPostExpirationExcessC(const double &post_expiration_excess_c) {
    m_post_expiration_excess_c = post_expiration_excess_c;
    m_post_expiration_excess_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_excess_c_Set() const{
    return m_post_expiration_excess_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_excess_c_Valid() const{
    return m_post_expiration_excess_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPostExpirationExcessS() const {
    return m_post_expiration_excess_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPostExpirationExcessS(const double &post_expiration_excess_s) {
    m_post_expiration_excess_s = post_expiration_excess_s;
    m_post_expiration_excess_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_excess_s_Set() const{
    return m_post_expiration_excess_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_excess_s_Valid() const{
    return m_post_expiration_excess_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPostExpirationMargin() const {
    return m_post_expiration_margin;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPostExpirationMargin(const double &post_expiration_margin) {
    m_post_expiration_margin = post_expiration_margin;
    m_post_expiration_margin_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_margin_Set() const{
    return m_post_expiration_margin_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_margin_Valid() const{
    return m_post_expiration_margin_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPostExpirationMarginC() const {
    return m_post_expiration_margin_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPostExpirationMarginC(const double &post_expiration_margin_c) {
    m_post_expiration_margin_c = post_expiration_margin_c;
    m_post_expiration_margin_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_margin_c_Set() const{
    return m_post_expiration_margin_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_margin_c_Valid() const{
    return m_post_expiration_margin_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getPostExpirationMarginS() const {
    return m_post_expiration_margin_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setPostExpirationMarginS(const double &post_expiration_margin_s) {
    m_post_expiration_margin_s = post_expiration_margin_s;
    m_post_expiration_margin_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_margin_s_Set() const{
    return m_post_expiration_margin_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_post_expiration_margin_s_Valid() const{
    return m_post_expiration_margin_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getRegTEquity() const {
    return m_reg_t_equity;
}
void OAI_accounts__account__summary_get_200_response_Summary::setRegTEquity(const double &reg_t_equity) {
    m_reg_t_equity = reg_t_equity;
    m_reg_t_equity_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_equity_Set() const{
    return m_reg_t_equity_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_equity_Valid() const{
    return m_reg_t_equity_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getRegTEquityS() const {
    return m_reg_t_equity_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setRegTEquityS(const double &reg_t_equity_s) {
    m_reg_t_equity_s = reg_t_equity_s;
    m_reg_t_equity_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_equity_s_Set() const{
    return m_reg_t_equity_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_equity_s_Valid() const{
    return m_reg_t_equity_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getRegTMargin() const {
    return m_reg_t_margin;
}
void OAI_accounts__account__summary_get_200_response_Summary::setRegTMargin(const double &reg_t_margin) {
    m_reg_t_margin = reg_t_margin;
    m_reg_t_margin_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_margin_Set() const{
    return m_reg_t_margin_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_margin_Valid() const{
    return m_reg_t_margin_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getRegTMarginS() const {
    return m_reg_t_margin_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setRegTMarginS(const double &reg_t_margin_s) {
    m_reg_t_margin_s = reg_t_margin_s;
    m_reg_t_margin_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_margin_s_Set() const{
    return m_reg_t_margin_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_reg_t_margin_s_Valid() const{
    return m_reg_t_margin_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getSma() const {
    return m_sma;
}
void OAI_accounts__account__summary_get_200_response_Summary::setSma(const double &sma) {
    m_sma = sma;
    m_sma_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_sma_Set() const{
    return m_sma_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_sma_Valid() const{
    return m_sma_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getSmaS() const {
    return m_sma_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setSmaS(const double &sma_s) {
    m_sma_s = sma_s;
    m_sma_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_sma_s_Set() const{
    return m_sma_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_sma_s_Valid() const{
    return m_sma_s_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getTotalCashValue() const {
    return m_total_cash_value;
}
void OAI_accounts__account__summary_get_200_response_Summary::setTotalCashValue(const double &total_cash_value) {
    m_total_cash_value = total_cash_value;
    m_total_cash_value_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_total_cash_value_Set() const{
    return m_total_cash_value_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_total_cash_value_Valid() const{
    return m_total_cash_value_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getTotalCashValueC() const {
    return m_total_cash_value_c;
}
void OAI_accounts__account__summary_get_200_response_Summary::setTotalCashValueC(const double &total_cash_value_c) {
    m_total_cash_value_c = total_cash_value_c;
    m_total_cash_value_c_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_total_cash_value_c_Set() const{
    return m_total_cash_value_c_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_total_cash_value_c_Valid() const{
    return m_total_cash_value_c_isValid;
}

double OAI_accounts__account__summary_get_200_response_Summary::getTotalCashValueS() const {
    return m_total_cash_value_s;
}
void OAI_accounts__account__summary_get_200_response_Summary::setTotalCashValueS(const double &total_cash_value_s) {
    m_total_cash_value_s = total_cash_value_s;
    m_total_cash_value_s_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_total_cash_value_s_Set() const{
    return m_total_cash_value_s_isSet;
}

bool OAI_accounts__account__summary_get_200_response_Summary::is_total_cash_value_s_Valid() const{
    return m_total_cash_value_s_isValid;
}

bool OAI_accounts__account__summary_get_200_response_Summary::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_accrued_cash_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accrued_cash_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accrued_cash_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accrued_dividend_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accrued_dividend_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_accrued_dividend_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_funds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_funds_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_available_funds_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billable_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billable_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_buying_power_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_equity_with_loan_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_equity_with_loan_value_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_equity_with_loan_value_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_excess_liquidity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_excess_liquidity_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_excess_liquidity_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_available_funds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_available_funds_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_available_funds_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_excess_liquidity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_excess_liquidity_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_excess_liquidity_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_init_margin_req_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_init_margin_req_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_init_margin_req_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_maint_margin_req_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_maint_margin_req_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_full_maint_margin_req_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_position_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_position_value_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gross_position_value_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_indian_stock_haircut_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_indian_stock_haircut_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_indian_stock_haircut_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_init_margin_req_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_init_margin_req_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_init_margin_req_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insured_deposit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insured_deposit_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_insured_deposit_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_available_funds_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_available_funds_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_available_funds_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_excess_liquidity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_excess_liquidity_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_excess_liquidity_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_init_margin_req_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_init_margin_req_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_init_margin_req_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_maint_margin_req_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_maint_margin_req_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_look_ahead_maint_margin_req_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maint_margin_req_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maint_margin_req_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maint_margin_req_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_liquidation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_liquidation_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_liquidation_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_net_liquidation_uncertainty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pa_shares_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pa_shares_value_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pa_shares_value_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_expiration_excess_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_expiration_excess_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_expiration_excess_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_expiration_margin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_expiration_margin_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_post_expiration_margin_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_t_equity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_t_equity_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_t_margin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reg_t_margin_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sma_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sma_s_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_cash_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_cash_value_c_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_cash_value_s_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_accounts__account__summary_get_200_response_Summary::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
