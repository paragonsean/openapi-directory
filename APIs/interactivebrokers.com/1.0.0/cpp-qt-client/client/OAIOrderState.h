/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderState.h
 *
 * An object containing all the properties defining an order
 */

#ifndef OAIOrderState_H
#define OAIOrderState_H

#include <QJsonObject>

#include "OAIOrderStatus.h"
#include "OAIOrderType.h"
#include "OAITimeInForce.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrderState : public OAIObject {
public:
    OAIOrderState();
    OAIOrderState(QString json);
    ~OAIOrderState() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getContractId() const;
    void setContractId(const double &contract_id);
    bool is_contract_id_Set() const;
    bool is_contract_id_Valid() const;

    double getCustomerOrderId() const;
    void setCustomerOrderId(const double &customer_order_id);
    bool is_customer_order_id_Set() const;
    bool is_customer_order_id_Valid() const;

    double getFilledQuantity() const;
    void setFilledQuantity(const double &filled_quantity);
    bool is_filled_quantity_Set() const;
    bool is_filled_quantity_Valid() const;

    QString getListingExchange() const;
    void setListingExchange(const QString &listing_exchange);
    bool is_listing_exchange_Set() const;
    bool is_listing_exchange_Valid() const;

    OAIOrderType getOrderType() const;
    void setOrderType(const OAIOrderType &order_type);
    bool is_order_type_Set() const;
    bool is_order_type_Valid() const;

    QString getOutsideRth() const;
    void setOutsideRth(const QString &outside_rth);
    bool is_outside_rth_Set() const;
    bool is_outside_rth_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getRemainingQuantity() const;
    void setRemainingQuantity(const double &remaining_quantity);
    bool is_remaining_quantity_Set() const;
    bool is_remaining_quantity_Valid() const;

    QString getSide() const;
    void setSide(const QString &side);
    bool is_side_Set() const;
    bool is_side_Valid() const;

    OAIOrderStatus getStatus() const;
    void setStatus(const OAIOrderStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getTicker() const;
    void setTicker(const QString &ticker);
    bool is_ticker_Set() const;
    bool is_ticker_Valid() const;

    OAITimeInForce getTimeInForce() const;
    void setTimeInForce(const OAITimeInForce &time_in_force);
    bool is_time_in_force_Set() const;
    bool is_time_in_force_Valid() const;

    QString getTransactionTime() const;
    void setTransactionTime(const QString &transaction_time);
    bool is_transaction_time_Set() const;
    bool is_transaction_time_Valid() const;

    QString getWarning() const;
    void setWarning(const QString &warning);
    bool is_warning_Set() const;
    bool is_warning_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_contract_id;
    bool m_contract_id_isSet;
    bool m_contract_id_isValid;

    double m_customer_order_id;
    bool m_customer_order_id_isSet;
    bool m_customer_order_id_isValid;

    double m_filled_quantity;
    bool m_filled_quantity_isSet;
    bool m_filled_quantity_isValid;

    QString m_listing_exchange;
    bool m_listing_exchange_isSet;
    bool m_listing_exchange_isValid;

    OAIOrderType m_order_type;
    bool m_order_type_isSet;
    bool m_order_type_isValid;

    QString m_outside_rth;
    bool m_outside_rth_isSet;
    bool m_outside_rth_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_remaining_quantity;
    bool m_remaining_quantity_isSet;
    bool m_remaining_quantity_isValid;

    QString m_side;
    bool m_side_isSet;
    bool m_side_isValid;

    OAIOrderStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_ticker;
    bool m_ticker_isSet;
    bool m_ticker_isValid;

    OAITimeInForce m_time_in_force;
    bool m_time_in_force_isSet;
    bool m_time_in_force_isValid;

    QString m_transaction_time;
    bool m_transaction_time_isSet;
    bool m_transaction_time_isValid;

    QString m_warning;
    bool m_warning_isSet;
    bool m_warning_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderState)

#endif // OAIOrderState_H
