/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_accounts__account__summary_get_200_response_Info.h
 *
 * 
 */

#ifndef OAI_accounts__account__summary_get_200_response_Info_H
#define OAI_accounts__account__summary_get_200_response_Info_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_accounts__account__summary_get_200_response_Info : public OAIObject {
public:
    OAI_accounts__account__summary_get_200_response_Info();
    OAI_accounts__account__summary_get_200_response_Info(QString json);
    ~OAI_accounts__account__summary_get_200_response_Info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAccountCode() const;
    void setAccountCode(const QString &account_code);
    bool is_account_code_Set() const;
    bool is_account_code_Valid() const;

    QString getAccountReady() const;
    void setAccountReady(const QString &account_ready);
    bool is_account_ready_Set() const;
    bool is_account_ready_Valid() const;

    QString getAccountType() const;
    void setAccountType(const QString &account_type);
    bool is_account_type_Set() const;
    bool is_account_type_Valid() const;

    QString getCushion() const;
    void setCushion(const QString &cushion);
    bool is_cushion_Set() const;
    bool is_cushion_Valid() const;

    QString getDayTradesRemaining() const;
    void setDayTradesRemaining(const QString &day_trades_remaining);
    bool is_day_trades_remaining_Set() const;
    bool is_day_trades_remaining_Valid() const;

    QString getDayTradesRemainingT() const;
    void setDayTradesRemainingT(const QString &day_trades_remaining_t);
    bool is_day_trades_remaining_t_Set() const;
    bool is_day_trades_remaining_t_Valid() const;

    QString getDayTradesRemainingT2() const;
    void setDayTradesRemainingT2(const QString &day_trades_remaining_t2);
    bool is_day_trades_remaining_t2_Set() const;
    bool is_day_trades_remaining_t2_Valid() const;

    QString getDayTradesRemainingT3() const;
    void setDayTradesRemainingT3(const QString &day_trades_remaining_t3);
    bool is_day_trades_remaining_t3_Set() const;
    bool is_day_trades_remaining_t3_Valid() const;

    QString getDayTradesRemainingT4() const;
    void setDayTradesRemainingT4(const QString &day_trades_remaining_t4);
    bool is_day_trades_remaining_t4_Set() const;
    bool is_day_trades_remaining_t4_Valid() const;

    QString getHighestSeverity() const;
    void setHighestSeverity(const QString &highest_severity);
    bool is_highest_severity_Set() const;
    bool is_highest_severity_Valid() const;

    QString getLeverageS() const;
    void setLeverageS(const QString &leverage_s);
    bool is_leverage_s_Set() const;
    bool is_leverage_s_Valid() const;

    QString getLookAheadNextChange() const;
    void setLookAheadNextChange(const QString &look_ahead_next_change);
    bool is_look_ahead_next_change_Set() const;
    bool is_look_ahead_next_change_Valid() const;

    QString getSegmentTitleC() const;
    void setSegmentTitleC(const QString &segment_title_c);
    bool is_segment_title_c_Set() const;
    bool is_segment_title_c_Valid() const;

    QString getSegmentTitleS() const;
    void setSegmentTitleS(const QString &segment_title_s);
    bool is_segment_title_s_Set() const;
    bool is_segment_title_s_Valid() const;

    QString getTradingTypeS() const;
    void setTradingTypeS(const QString &trading_type_s);
    bool is_trading_type_s_Set() const;
    bool is_trading_type_s_Valid() const;

    QString getWhatIfPmEnabled() const;
    void setWhatIfPmEnabled(const QString &what_if_pm_enabled);
    bool is_what_if_pm_enabled_Set() const;
    bool is_what_if_pm_enabled_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_account_code;
    bool m_account_code_isSet;
    bool m_account_code_isValid;

    QString m_account_ready;
    bool m_account_ready_isSet;
    bool m_account_ready_isValid;

    QString m_account_type;
    bool m_account_type_isSet;
    bool m_account_type_isValid;

    QString m_cushion;
    bool m_cushion_isSet;
    bool m_cushion_isValid;

    QString m_day_trades_remaining;
    bool m_day_trades_remaining_isSet;
    bool m_day_trades_remaining_isValid;

    QString m_day_trades_remaining_t;
    bool m_day_trades_remaining_t_isSet;
    bool m_day_trades_remaining_t_isValid;

    QString m_day_trades_remaining_t2;
    bool m_day_trades_remaining_t2_isSet;
    bool m_day_trades_remaining_t2_isValid;

    QString m_day_trades_remaining_t3;
    bool m_day_trades_remaining_t3_isSet;
    bool m_day_trades_remaining_t3_isValid;

    QString m_day_trades_remaining_t4;
    bool m_day_trades_remaining_t4_isSet;
    bool m_day_trades_remaining_t4_isValid;

    QString m_highest_severity;
    bool m_highest_severity_isSet;
    bool m_highest_severity_isValid;

    QString m_leverage_s;
    bool m_leverage_s_isSet;
    bool m_leverage_s_isValid;

    QString m_look_ahead_next_change;
    bool m_look_ahead_next_change_isSet;
    bool m_look_ahead_next_change_isValid;

    QString m_segment_title_c;
    bool m_segment_title_c_isSet;
    bool m_segment_title_c_isValid;

    QString m_segment_title_s;
    bool m_segment_title_s_isSet;
    bool m_segment_title_s_isValid;

    QString m_trading_type_s;
    bool m_trading_type_s_isSet;
    bool m_trading_type_s_isValid;

    QString m_what_if_pm_enabled;
    bool m_what_if_pm_enabled_isSet;
    bool m_what_if_pm_enabled_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_accounts__account__summary_get_200_response_Info)

#endif // OAI_accounts__account__summary_get_200_response_Info_H
