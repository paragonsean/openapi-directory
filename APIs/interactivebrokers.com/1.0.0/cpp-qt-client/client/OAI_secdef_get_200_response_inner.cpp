/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_secdef_get_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_secdef_get_200_response_inner::OAI_secdef_get_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_secdef_get_200_response_inner::OAI_secdef_get_200_response_inner() {
    this->initializeModel();
}

OAI_secdef_get_200_response_inner::~OAI_secdef_get_200_response_inner() {}

void OAI_secdef_get_200_response_inner::initializeModel() {

    m_company_name_isSet = false;
    m_company_name_isValid = false;

    m_contract_id_isSet = false;
    m_contract_id_isValid = false;

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_exchange_isSet = false;
    m_exchange_isValid = false;

    m_security_type_isSet = false;
    m_security_type_isValid = false;

    m_ticker_isSet = false;
    m_ticker_isValid = false;
}

void OAI_secdef_get_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_secdef_get_200_response_inner::fromJsonObject(QJsonObject json) {

    m_company_name_isValid = ::OpenAPI::fromJsonValue(m_company_name, json[QString("CompanyName")]);
    m_company_name_isSet = !json[QString("CompanyName")].isNull() && m_company_name_isValid;

    m_contract_id_isValid = ::OpenAPI::fromJsonValue(m_contract_id, json[QString("ContractId")]);
    m_contract_id_isSet = !json[QString("ContractId")].isNull() && m_contract_id_isValid;

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("Currency")]);
    m_currency_isSet = !json[QString("Currency")].isNull() && m_currency_isValid;

    m_exchange_isValid = ::OpenAPI::fromJsonValue(m_exchange, json[QString("Exchange")]);
    m_exchange_isSet = !json[QString("Exchange")].isNull() && m_exchange_isValid;

    m_security_type_isValid = ::OpenAPI::fromJsonValue(m_security_type, json[QString("SecurityType")]);
    m_security_type_isSet = !json[QString("SecurityType")].isNull() && m_security_type_isValid;

    m_ticker_isValid = ::OpenAPI::fromJsonValue(m_ticker, json[QString("Ticker")]);
    m_ticker_isSet = !json[QString("Ticker")].isNull() && m_ticker_isValid;
}

QString OAI_secdef_get_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_secdef_get_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_company_name_isSet) {
        obj.insert(QString("CompanyName"), ::OpenAPI::toJsonValue(m_company_name));
    }
    if (m_contract_id_isSet) {
        obj.insert(QString("ContractId"), ::OpenAPI::toJsonValue(m_contract_id));
    }
    if (m_currency_isSet) {
        obj.insert(QString("Currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_exchange_isSet) {
        obj.insert(QString("Exchange"), ::OpenAPI::toJsonValue(m_exchange));
    }
    if (m_security_type_isSet) {
        obj.insert(QString("SecurityType"), ::OpenAPI::toJsonValue(m_security_type));
    }
    if (m_ticker_isSet) {
        obj.insert(QString("Ticker"), ::OpenAPI::toJsonValue(m_ticker));
    }
    return obj;
}

QString OAI_secdef_get_200_response_inner::getCompanyName() const {
    return m_company_name;
}
void OAI_secdef_get_200_response_inner::setCompanyName(const QString &company_name) {
    m_company_name = company_name;
    m_company_name_isSet = true;
}

bool OAI_secdef_get_200_response_inner::is_company_name_Set() const{
    return m_company_name_isSet;
}

bool OAI_secdef_get_200_response_inner::is_company_name_Valid() const{
    return m_company_name_isValid;
}

double OAI_secdef_get_200_response_inner::getContractId() const {
    return m_contract_id;
}
void OAI_secdef_get_200_response_inner::setContractId(const double &contract_id) {
    m_contract_id = contract_id;
    m_contract_id_isSet = true;
}

bool OAI_secdef_get_200_response_inner::is_contract_id_Set() const{
    return m_contract_id_isSet;
}

bool OAI_secdef_get_200_response_inner::is_contract_id_Valid() const{
    return m_contract_id_isValid;
}

QString OAI_secdef_get_200_response_inner::getCurrency() const {
    return m_currency;
}
void OAI_secdef_get_200_response_inner::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAI_secdef_get_200_response_inner::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAI_secdef_get_200_response_inner::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAI_secdef_get_200_response_inner::getExchange() const {
    return m_exchange;
}
void OAI_secdef_get_200_response_inner::setExchange(const QString &exchange) {
    m_exchange = exchange;
    m_exchange_isSet = true;
}

bool OAI_secdef_get_200_response_inner::is_exchange_Set() const{
    return m_exchange_isSet;
}

bool OAI_secdef_get_200_response_inner::is_exchange_Valid() const{
    return m_exchange_isValid;
}

QString OAI_secdef_get_200_response_inner::getSecurityType() const {
    return m_security_type;
}
void OAI_secdef_get_200_response_inner::setSecurityType(const QString &security_type) {
    m_security_type = security_type;
    m_security_type_isSet = true;
}

bool OAI_secdef_get_200_response_inner::is_security_type_Set() const{
    return m_security_type_isSet;
}

bool OAI_secdef_get_200_response_inner::is_security_type_Valid() const{
    return m_security_type_isValid;
}

QString OAI_secdef_get_200_response_inner::getTicker() const {
    return m_ticker;
}
void OAI_secdef_get_200_response_inner::setTicker(const QString &ticker) {
    m_ticker = ticker;
    m_ticker_isSet = true;
}

bool OAI_secdef_get_200_response_inner::is_ticker_Set() const{
    return m_ticker_isSet;
}

bool OAI_secdef_get_200_response_inner::is_ticker_Valid() const{
    return m_ticker_isValid;
}

bool OAI_secdef_get_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contract_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ticker_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_secdef_get_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
