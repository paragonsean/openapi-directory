/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_accounts__account__positions_get_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_accounts__account__positions_get_200_response_inner::OAI_accounts__account__positions_get_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_accounts__account__positions_get_200_response_inner::OAI_accounts__account__positions_get_200_response_inner() {
    this->initializeModel();
}

OAI_accounts__account__positions_get_200_response_inner::~OAI_accounts__account__positions_get_200_response_inner() {}

void OAI_accounts__account__positions_get_200_response_inner::initializeModel() {

    m_average_cost_isSet = false;
    m_average_cost_isValid = false;

    m_contract_id_isSet = false;
    m_contract_id_isValid = false;

    m_position_isSet = false;
    m_position_isValid = false;
}

void OAI_accounts__account__positions_get_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_accounts__account__positions_get_200_response_inner::fromJsonObject(QJsonObject json) {

    m_average_cost_isValid = ::OpenAPI::fromJsonValue(m_average_cost, json[QString("AverageCost")]);
    m_average_cost_isSet = !json[QString("AverageCost")].isNull() && m_average_cost_isValid;

    m_contract_id_isValid = ::OpenAPI::fromJsonValue(m_contract_id, json[QString("ContractId")]);
    m_contract_id_isSet = !json[QString("ContractId")].isNull() && m_contract_id_isValid;

    m_position_isValid = ::OpenAPI::fromJsonValue(m_position, json[QString("Position")]);
    m_position_isSet = !json[QString("Position")].isNull() && m_position_isValid;
}

QString OAI_accounts__account__positions_get_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_accounts__account__positions_get_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_average_cost_isSet) {
        obj.insert(QString("AverageCost"), ::OpenAPI::toJsonValue(m_average_cost));
    }
    if (m_contract_id_isSet) {
        obj.insert(QString("ContractId"), ::OpenAPI::toJsonValue(m_contract_id));
    }
    if (m_position_isSet) {
        obj.insert(QString("Position"), ::OpenAPI::toJsonValue(m_position));
    }
    return obj;
}

double OAI_accounts__account__positions_get_200_response_inner::getAverageCost() const {
    return m_average_cost;
}
void OAI_accounts__account__positions_get_200_response_inner::setAverageCost(const double &average_cost) {
    m_average_cost = average_cost;
    m_average_cost_isSet = true;
}

bool OAI_accounts__account__positions_get_200_response_inner::is_average_cost_Set() const{
    return m_average_cost_isSet;
}

bool OAI_accounts__account__positions_get_200_response_inner::is_average_cost_Valid() const{
    return m_average_cost_isValid;
}

double OAI_accounts__account__positions_get_200_response_inner::getContractId() const {
    return m_contract_id;
}
void OAI_accounts__account__positions_get_200_response_inner::setContractId(const double &contract_id) {
    m_contract_id = contract_id;
    m_contract_id_isSet = true;
}

bool OAI_accounts__account__positions_get_200_response_inner::is_contract_id_Set() const{
    return m_contract_id_isSet;
}

bool OAI_accounts__account__positions_get_200_response_inner::is_contract_id_Valid() const{
    return m_contract_id_isValid;
}

double OAI_accounts__account__positions_get_200_response_inner::getPosition() const {
    return m_position;
}
void OAI_accounts__account__positions_get_200_response_inner::setPosition(const double &position) {
    m_position = position;
    m_position_isSet = true;
}

bool OAI_accounts__account__positions_get_200_response_inner::is_position_Set() const{
    return m_position_isSet;
}

bool OAI_accounts__account__positions_get_200_response_inner::is_position_Valid() const{
    return m_position_isValid;
}

bool OAI_accounts__account__positions_get_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_average_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contract_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_position_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_accounts__account__positions_get_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
