/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_marketdata_exchange_components_get_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_marketdata_exchange_components_get_200_response_inner::OAI_marketdata_exchange_components_get_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_marketdata_exchange_components_get_200_response_inner::OAI_marketdata_exchange_components_get_200_response_inner() {
    this->initializeModel();
}

OAI_marketdata_exchange_components_get_200_response_inner::~OAI_marketdata_exchange_components_get_200_response_inner() {}

void OAI_marketdata_exchange_components_get_200_response_inner::initializeModel() {

    m_complete_isSet = false;
    m_complete_isValid = false;

    m_con_id_isSet = false;
    m_con_id_isValid = false;

    m_mapping_isSet = false;
    m_mapping_isValid = false;
}

void OAI_marketdata_exchange_components_get_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_marketdata_exchange_components_get_200_response_inner::fromJsonObject(QJsonObject json) {

    m_complete_isValid = ::OpenAPI::fromJsonValue(m_complete, json[QString("Complete")]);
    m_complete_isSet = !json[QString("Complete")].isNull() && m_complete_isValid;

    m_con_id_isValid = ::OpenAPI::fromJsonValue(m_con_id, json[QString("ConId")]);
    m_con_id_isSet = !json[QString("ConId")].isNull() && m_con_id_isValid;

    m_mapping_isValid = ::OpenAPI::fromJsonValue(m_mapping, json[QString("mapping")]);
    m_mapping_isSet = !json[QString("mapping")].isNull() && m_mapping_isValid;
}

QString OAI_marketdata_exchange_components_get_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_marketdata_exchange_components_get_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_complete_isSet) {
        obj.insert(QString("Complete"), ::OpenAPI::toJsonValue(m_complete));
    }
    if (m_con_id_isSet) {
        obj.insert(QString("ConId"), ::OpenAPI::toJsonValue(m_con_id));
    }
    if (m_mapping.size() > 0) {
        obj.insert(QString("mapping"), ::OpenAPI::toJsonValue(m_mapping));
    }
    return obj;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::isComplete() const {
    return m_complete;
}
void OAI_marketdata_exchange_components_get_200_response_inner::setComplete(const bool &complete) {
    m_complete = complete;
    m_complete_isSet = true;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::is_complete_Set() const{
    return m_complete_isSet;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::is_complete_Valid() const{
    return m_complete_isValid;
}

double OAI_marketdata_exchange_components_get_200_response_inner::getConId() const {
    return m_con_id;
}
void OAI_marketdata_exchange_components_get_200_response_inner::setConId(const double &con_id) {
    m_con_id = con_id;
    m_con_id_isSet = true;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::is_con_id_Set() const{
    return m_con_id_isSet;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::is_con_id_Valid() const{
    return m_con_id_isValid;
}

QList<OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner> OAI_marketdata_exchange_components_get_200_response_inner::getMapping() const {
    return m_mapping;
}
void OAI_marketdata_exchange_components_get_200_response_inner::setMapping(const QList<OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner> &mapping) {
    m_mapping = mapping;
    m_mapping_isSet = true;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::is_mapping_Set() const{
    return m_mapping_isSet;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::is_mapping_Valid() const{
    return m_mapping_isValid;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_complete_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_con_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mapping.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_marketdata_exchange_components_get_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
