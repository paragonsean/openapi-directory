/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner() {
    this->initializeModel();
}

OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::~OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner() {}

void OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::initializeModel() {

    m_bit_isSet = false;
    m_bit_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_exchange_isSet = false;
    m_exchange_isValid = false;
}

void OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::fromJsonObject(QJsonObject json) {

    m_bit_isValid = ::OpenAPI::fromJsonValue(m_bit, json[QString("bit")]);
    m_bit_isSet = !json[QString("bit")].isNull() && m_bit_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_exchange_isValid = ::OpenAPI::fromJsonValue(m_exchange, json[QString("exchange")]);
    m_exchange_isSet = !json[QString("exchange")].isNull() && m_exchange_isValid;
}

QString OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_bit_isSet) {
        obj.insert(QString("bit"), ::OpenAPI::toJsonValue(m_bit));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_exchange_isSet) {
        obj.insert(QString("exchange"), ::OpenAPI::toJsonValue(m_exchange));
    }
    return obj;
}

double OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::getBit() const {
    return m_bit;
}
void OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::setBit(const double &bit) {
    m_bit = bit;
    m_bit_isSet = true;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::is_bit_Set() const{
    return m_bit_isSet;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::is_bit_Valid() const{
    return m_bit_isValid;
}

QString OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::getCode() const {
    return m_code;
}
void OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::is_code_Set() const{
    return m_code_isSet;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::is_code_Valid() const{
    return m_code_isValid;
}

QString OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::getExchange() const {
    return m_exchange;
}
void OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::setExchange(const QString &exchange) {
    m_exchange = exchange;
    m_exchange_isSet = true;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::is_exchange_Set() const{
    return m_exchange_isSet;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::is_exchange_Valid() const{
    return m_exchange_isValid;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_marketdata_exchange_components_get_200_response_inner_mapping_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
