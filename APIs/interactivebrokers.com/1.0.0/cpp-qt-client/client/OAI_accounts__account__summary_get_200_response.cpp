/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_accounts__account__summary_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_accounts__account__summary_get_200_response::OAI_accounts__account__summary_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_accounts__account__summary_get_200_response::OAI_accounts__account__summary_get_200_response() {
    this->initializeModel();
}

OAI_accounts__account__summary_get_200_response::~OAI_accounts__account__summary_get_200_response() {}

void OAI_accounts__account__summary_get_200_response::initializeModel() {

    m_info_isSet = false;
    m_info_isValid = false;

    m_ledger_isSet = false;
    m_ledger_isValid = false;

    m_summary_isSet = false;
    m_summary_isValid = false;
}

void OAI_accounts__account__summary_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_accounts__account__summary_get_200_response::fromJsonObject(QJsonObject json) {

    m_info_isValid = ::OpenAPI::fromJsonValue(m_info, json[QString("Info")]);
    m_info_isSet = !json[QString("Info")].isNull() && m_info_isValid;

    m_ledger_isValid = ::OpenAPI::fromJsonValue(m_ledger, json[QString("Ledger")]);
    m_ledger_isSet = !json[QString("Ledger")].isNull() && m_ledger_isValid;

    m_summary_isValid = ::OpenAPI::fromJsonValue(m_summary, json[QString("Summary")]);
    m_summary_isSet = !json[QString("Summary")].isNull() && m_summary_isValid;
}

QString OAI_accounts__account__summary_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_accounts__account__summary_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_info.isSet()) {
        obj.insert(QString("Info"), ::OpenAPI::toJsonValue(m_info));
    }
    if (m_ledger.size() > 0) {
        obj.insert(QString("Ledger"), ::OpenAPI::toJsonValue(m_ledger));
    }
    if (m_summary.isSet()) {
        obj.insert(QString("Summary"), ::OpenAPI::toJsonValue(m_summary));
    }
    return obj;
}

OAI_accounts__account__summary_get_200_response_Info OAI_accounts__account__summary_get_200_response::getInfo() const {
    return m_info;
}
void OAI_accounts__account__summary_get_200_response::setInfo(const OAI_accounts__account__summary_get_200_response_Info &info) {
    m_info = info;
    m_info_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response::is_info_Set() const{
    return m_info_isSet;
}

bool OAI_accounts__account__summary_get_200_response::is_info_Valid() const{
    return m_info_isValid;
}

QList<OAI_accounts__account__summary_get_200_response_Ledger_inner> OAI_accounts__account__summary_get_200_response::getLedger() const {
    return m_ledger;
}
void OAI_accounts__account__summary_get_200_response::setLedger(const QList<OAI_accounts__account__summary_get_200_response_Ledger_inner> &ledger) {
    m_ledger = ledger;
    m_ledger_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response::is_ledger_Set() const{
    return m_ledger_isSet;
}

bool OAI_accounts__account__summary_get_200_response::is_ledger_Valid() const{
    return m_ledger_isValid;
}

OAI_accounts__account__summary_get_200_response_Summary OAI_accounts__account__summary_get_200_response::getSummary() const {
    return m_summary;
}
void OAI_accounts__account__summary_get_200_response::setSummary(const OAI_accounts__account__summary_get_200_response_Summary &summary) {
    m_summary = summary;
    m_summary_isSet = true;
}

bool OAI_accounts__account__summary_get_200_response::is_summary_Set() const{
    return m_summary_isSet;
}

bool OAI_accounts__account__summary_get_200_response::is_summary_Valid() const{
    return m_summary_isValid;
}

bool OAI_accounts__account__summary_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ledger.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_summary.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_accounts__account__summary_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
