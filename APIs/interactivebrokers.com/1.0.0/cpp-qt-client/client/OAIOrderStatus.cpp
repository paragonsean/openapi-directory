/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderStatus::OAIOrderStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderStatus::OAIOrderStatus() {
    this->initializeModel();
}

OAIOrderStatus::~OAIOrderStatus() {}

void OAIOrderStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIOrderStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIOrderStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("-1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_1;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("0", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_0;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("1", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_12;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("2", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_2;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("3", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_3;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("4", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_4;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("5", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_5;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("6", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_6;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("7", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_7;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("8", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_8;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("9", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::_9;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("A", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::A;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("B", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::B;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("C", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::C;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("D", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::D;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("E", Qt::CaseInsensitive) == 0) {
        m_value = eOAIOrderStatus::E;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIOrderStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIOrderStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIOrderStatus::_1:
            val = "-1";
            break;
        case eOAIOrderStatus::_0:
            val = "0";
            break;
        case eOAIOrderStatus::_12:
            val = "1";
            break;
        case eOAIOrderStatus::_2:
            val = "2";
            break;
        case eOAIOrderStatus::_3:
            val = "3";
            break;
        case eOAIOrderStatus::_4:
            val = "4";
            break;
        case eOAIOrderStatus::_5:
            val = "5";
            break;
        case eOAIOrderStatus::_6:
            val = "6";
            break;
        case eOAIOrderStatus::_7:
            val = "7";
            break;
        case eOAIOrderStatus::_8:
            val = "8";
            break;
        case eOAIOrderStatus::_9:
            val = "9";
            break;
        case eOAIOrderStatus::A:
            val = "A";
            break;
        case eOAIOrderStatus::B:
            val = "B";
            break;
        case eOAIOrderStatus::C:
            val = "C";
            break;
        case eOAIOrderStatus::D:
            val = "D";
            break;
        case eOAIOrderStatus::E:
            val = "E";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIOrderStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIOrderStatus::eOAIOrderStatus OAIOrderStatus::getValue() const {
    return m_value;
}

void OAIOrderStatus::setValue(const OAIOrderStatus::eOAIOrderStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIOrderStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIOrderStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
