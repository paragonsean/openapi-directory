/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_accounts__account__order_impact_post_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_accounts__account__order_impact_post_200_response::OAI_accounts__account__order_impact_post_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_accounts__account__order_impact_post_200_response::OAI_accounts__account__order_impact_post_200_response() {
    this->initializeModel();
}

OAI_accounts__account__order_impact_post_200_response::~OAI_accounts__account__order_impact_post_200_response() {}

void OAI_accounts__account__order_impact_post_200_response::initializeModel() {

    m_commission_isSet = false;
    m_commission_isValid = false;

    m_commissions_currency_isSet = false;
    m_commissions_currency_isValid = false;

    m_equity_with_loan_isSet = false;
    m_equity_with_loan_isValid = false;

    m_init_margin_isSet = false;
    m_init_margin_isValid = false;

    m_init_margin_before_isSet = false;
    m_init_margin_before_isValid = false;

    m_maint_margin_isSet = false;
    m_maint_margin_isValid = false;

    m_maint_margin_before_isSet = false;
    m_maint_margin_before_isValid = false;

    m_margin_currency_isSet = false;
    m_margin_currency_isValid = false;

    m_max_commissions_isSet = false;
    m_max_commissions_isValid = false;

    m_min_commissions_isSet = false;
    m_min_commissions_isValid = false;
}

void OAI_accounts__account__order_impact_post_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_accounts__account__order_impact_post_200_response::fromJsonObject(QJsonObject json) {

    m_commission_isValid = ::OpenAPI::fromJsonValue(m_commission, json[QString("Commission")]);
    m_commission_isSet = !json[QString("Commission")].isNull() && m_commission_isValid;

    m_commissions_currency_isValid = ::OpenAPI::fromJsonValue(m_commissions_currency, json[QString("CommissionsCurrency")]);
    m_commissions_currency_isSet = !json[QString("CommissionsCurrency")].isNull() && m_commissions_currency_isValid;

    m_equity_with_loan_isValid = ::OpenAPI::fromJsonValue(m_equity_with_loan, json[QString("EquityWithLoan")]);
    m_equity_with_loan_isSet = !json[QString("EquityWithLoan")].isNull() && m_equity_with_loan_isValid;

    m_init_margin_isValid = ::OpenAPI::fromJsonValue(m_init_margin, json[QString("InitMargin")]);
    m_init_margin_isSet = !json[QString("InitMargin")].isNull() && m_init_margin_isValid;

    m_init_margin_before_isValid = ::OpenAPI::fromJsonValue(m_init_margin_before, json[QString("InitMarginBefore")]);
    m_init_margin_before_isSet = !json[QString("InitMarginBefore")].isNull() && m_init_margin_before_isValid;

    m_maint_margin_isValid = ::OpenAPI::fromJsonValue(m_maint_margin, json[QString("MaintMargin")]);
    m_maint_margin_isSet = !json[QString("MaintMargin")].isNull() && m_maint_margin_isValid;

    m_maint_margin_before_isValid = ::OpenAPI::fromJsonValue(m_maint_margin_before, json[QString("MaintMarginBefore")]);
    m_maint_margin_before_isSet = !json[QString("MaintMarginBefore")].isNull() && m_maint_margin_before_isValid;

    m_margin_currency_isValid = ::OpenAPI::fromJsonValue(m_margin_currency, json[QString("MarginCurrency")]);
    m_margin_currency_isSet = !json[QString("MarginCurrency")].isNull() && m_margin_currency_isValid;

    m_max_commissions_isValid = ::OpenAPI::fromJsonValue(m_max_commissions, json[QString("MaxCommissions")]);
    m_max_commissions_isSet = !json[QString("MaxCommissions")].isNull() && m_max_commissions_isValid;

    m_min_commissions_isValid = ::OpenAPI::fromJsonValue(m_min_commissions, json[QString("MinCommissions")]);
    m_min_commissions_isSet = !json[QString("MinCommissions")].isNull() && m_min_commissions_isValid;
}

QString OAI_accounts__account__order_impact_post_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_accounts__account__order_impact_post_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_commission_isSet) {
        obj.insert(QString("Commission"), ::OpenAPI::toJsonValue(m_commission));
    }
    if (m_commissions_currency_isSet) {
        obj.insert(QString("CommissionsCurrency"), ::OpenAPI::toJsonValue(m_commissions_currency));
    }
    if (m_equity_with_loan_isSet) {
        obj.insert(QString("EquityWithLoan"), ::OpenAPI::toJsonValue(m_equity_with_loan));
    }
    if (m_init_margin_isSet) {
        obj.insert(QString("InitMargin"), ::OpenAPI::toJsonValue(m_init_margin));
    }
    if (m_init_margin_before_isSet) {
        obj.insert(QString("InitMarginBefore"), ::OpenAPI::toJsonValue(m_init_margin_before));
    }
    if (m_maint_margin_isSet) {
        obj.insert(QString("MaintMargin"), ::OpenAPI::toJsonValue(m_maint_margin));
    }
    if (m_maint_margin_before_isSet) {
        obj.insert(QString("MaintMarginBefore"), ::OpenAPI::toJsonValue(m_maint_margin_before));
    }
    if (m_margin_currency_isSet) {
        obj.insert(QString("MarginCurrency"), ::OpenAPI::toJsonValue(m_margin_currency));
    }
    if (m_max_commissions_isSet) {
        obj.insert(QString("MaxCommissions"), ::OpenAPI::toJsonValue(m_max_commissions));
    }
    if (m_min_commissions_isSet) {
        obj.insert(QString("MinCommissions"), ::OpenAPI::toJsonValue(m_min_commissions));
    }
    return obj;
}

double OAI_accounts__account__order_impact_post_200_response::getCommission() const {
    return m_commission;
}
void OAI_accounts__account__order_impact_post_200_response::setCommission(const double &commission) {
    m_commission = commission;
    m_commission_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_commission_Set() const{
    return m_commission_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_commission_Valid() const{
    return m_commission_isValid;
}

QString OAI_accounts__account__order_impact_post_200_response::getCommissionsCurrency() const {
    return m_commissions_currency;
}
void OAI_accounts__account__order_impact_post_200_response::setCommissionsCurrency(const QString &commissions_currency) {
    m_commissions_currency = commissions_currency;
    m_commissions_currency_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_commissions_currency_Set() const{
    return m_commissions_currency_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_commissions_currency_Valid() const{
    return m_commissions_currency_isValid;
}

double OAI_accounts__account__order_impact_post_200_response::getEquityWithLoan() const {
    return m_equity_with_loan;
}
void OAI_accounts__account__order_impact_post_200_response::setEquityWithLoan(const double &equity_with_loan) {
    m_equity_with_loan = equity_with_loan;
    m_equity_with_loan_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_equity_with_loan_Set() const{
    return m_equity_with_loan_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_equity_with_loan_Valid() const{
    return m_equity_with_loan_isValid;
}

double OAI_accounts__account__order_impact_post_200_response::getInitMargin() const {
    return m_init_margin;
}
void OAI_accounts__account__order_impact_post_200_response::setInitMargin(const double &init_margin) {
    m_init_margin = init_margin;
    m_init_margin_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_init_margin_Set() const{
    return m_init_margin_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_init_margin_Valid() const{
    return m_init_margin_isValid;
}

double OAI_accounts__account__order_impact_post_200_response::getInitMarginBefore() const {
    return m_init_margin_before;
}
void OAI_accounts__account__order_impact_post_200_response::setInitMarginBefore(const double &init_margin_before) {
    m_init_margin_before = init_margin_before;
    m_init_margin_before_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_init_margin_before_Set() const{
    return m_init_margin_before_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_init_margin_before_Valid() const{
    return m_init_margin_before_isValid;
}

double OAI_accounts__account__order_impact_post_200_response::getMaintMargin() const {
    return m_maint_margin;
}
void OAI_accounts__account__order_impact_post_200_response::setMaintMargin(const double &maint_margin) {
    m_maint_margin = maint_margin;
    m_maint_margin_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_maint_margin_Set() const{
    return m_maint_margin_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_maint_margin_Valid() const{
    return m_maint_margin_isValid;
}

double OAI_accounts__account__order_impact_post_200_response::getMaintMarginBefore() const {
    return m_maint_margin_before;
}
void OAI_accounts__account__order_impact_post_200_response::setMaintMarginBefore(const double &maint_margin_before) {
    m_maint_margin_before = maint_margin_before;
    m_maint_margin_before_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_maint_margin_before_Set() const{
    return m_maint_margin_before_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_maint_margin_before_Valid() const{
    return m_maint_margin_before_isValid;
}

QString OAI_accounts__account__order_impact_post_200_response::getMarginCurrency() const {
    return m_margin_currency;
}
void OAI_accounts__account__order_impact_post_200_response::setMarginCurrency(const QString &margin_currency) {
    m_margin_currency = margin_currency;
    m_margin_currency_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_margin_currency_Set() const{
    return m_margin_currency_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_margin_currency_Valid() const{
    return m_margin_currency_isValid;
}

double OAI_accounts__account__order_impact_post_200_response::getMaxCommissions() const {
    return m_max_commissions;
}
void OAI_accounts__account__order_impact_post_200_response::setMaxCommissions(const double &max_commissions) {
    m_max_commissions = max_commissions;
    m_max_commissions_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_max_commissions_Set() const{
    return m_max_commissions_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_max_commissions_Valid() const{
    return m_max_commissions_isValid;
}

double OAI_accounts__account__order_impact_post_200_response::getMinCommissions() const {
    return m_min_commissions;
}
void OAI_accounts__account__order_impact_post_200_response::setMinCommissions(const double &min_commissions) {
    m_min_commissions = min_commissions;
    m_min_commissions_isSet = true;
}

bool OAI_accounts__account__order_impact_post_200_response::is_min_commissions_Set() const{
    return m_min_commissions_isSet;
}

bool OAI_accounts__account__order_impact_post_200_response::is_min_commissions_Valid() const{
    return m_min_commissions_isValid;
}

bool OAI_accounts__account__order_impact_post_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_commission_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_commissions_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_equity_with_loan_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_init_margin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_init_margin_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maint_margin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_maint_margin_before_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_margin_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_commissions_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_commissions_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_accounts__account__order_impact_post_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
