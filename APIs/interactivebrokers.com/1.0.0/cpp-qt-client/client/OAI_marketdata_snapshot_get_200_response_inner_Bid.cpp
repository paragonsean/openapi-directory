/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_marketdata_snapshot_get_200_response_inner_Bid.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_marketdata_snapshot_get_200_response_inner_Bid::OAI_marketdata_snapshot_get_200_response_inner_Bid(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_marketdata_snapshot_get_200_response_inner_Bid::OAI_marketdata_snapshot_get_200_response_inner_Bid() {
    this->initializeModel();
}

OAI_marketdata_snapshot_get_200_response_inner_Bid::~OAI_marketdata_snapshot_get_200_response_inner_Bid() {}

void OAI_marketdata_snapshot_get_200_response_inner_Bid::initializeModel() {

    m_market_isSet = false;
    m_market_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;
}

void OAI_marketdata_snapshot_get_200_response_inner_Bid::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_marketdata_snapshot_get_200_response_inner_Bid::fromJsonObject(QJsonObject json) {

    m_market_isValid = ::OpenAPI::fromJsonValue(m_market, json[QString("market")]);
    m_market_isSet = !json[QString("market")].isNull() && m_market_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("size")]);
    m_size_isSet = !json[QString("size")].isNull() && m_size_isValid;
}

QString OAI_marketdata_snapshot_get_200_response_inner_Bid::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_marketdata_snapshot_get_200_response_inner_Bid::asJsonObject() const {
    QJsonObject obj;
    if (m_market_isSet) {
        obj.insert(QString("market"), ::OpenAPI::toJsonValue(m_market));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_size_isSet) {
        obj.insert(QString("size"), ::OpenAPI::toJsonValue(m_size));
    }
    return obj;
}

double OAI_marketdata_snapshot_get_200_response_inner_Bid::getMarket() const {
    return m_market;
}
void OAI_marketdata_snapshot_get_200_response_inner_Bid::setMarket(const double &market) {
    m_market = market;
    m_market_isSet = true;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::is_market_Set() const{
    return m_market_isSet;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::is_market_Valid() const{
    return m_market_isValid;
}

double OAI_marketdata_snapshot_get_200_response_inner_Bid::getPrice() const {
    return m_price;
}
void OAI_marketdata_snapshot_get_200_response_inner_Bid::setPrice(const double &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::is_price_Set() const{
    return m_price_isSet;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::is_price_Valid() const{
    return m_price_isValid;
}

double OAI_marketdata_snapshot_get_200_response_inner_Bid::getSize() const {
    return m_size;
}
void OAI_marketdata_snapshot_get_200_response_inner_Bid::setSize(const double &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::is_size_Set() const{
    return m_size_isSet;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::is_size_Valid() const{
    return m_size_isValid;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_market_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_marketdata_snapshot_get_200_response_inner_Bid::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
