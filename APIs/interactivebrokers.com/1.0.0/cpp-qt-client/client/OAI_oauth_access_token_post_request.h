/**
 * IBKR 3rd Party Web API
 * Interactive Brokers Web API for 3rd Party Companies
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_oauth_access_token_post_request.h
 *
 * 
 */

#ifndef OAI_oauth_access_token_post_request_H
#define OAI_oauth_access_token_post_request_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAI_oauth_access_token_post_request : public OAIObject {
public:
    OAI_oauth_access_token_post_request();
    OAI_oauth_access_token_post_request(QString json);
    ~OAI_oauth_access_token_post_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOauthConsumerKey() const;
    void setOauthConsumerKey(const QString &oauth_consumer_key);
    bool is_oauth_consumer_key_Set() const;
    bool is_oauth_consumer_key_Valid() const;

    QString getOauthNonce() const;
    void setOauthNonce(const QString &oauth_nonce);
    bool is_oauth_nonce_Set() const;
    bool is_oauth_nonce_Valid() const;

    QString getOauthSignature() const;
    void setOauthSignature(const QString &oauth_signature);
    bool is_oauth_signature_Set() const;
    bool is_oauth_signature_Valid() const;

    QString getOauthSignatureMethod() const;
    void setOauthSignatureMethod(const QString &oauth_signature_method);
    bool is_oauth_signature_method_Set() const;
    bool is_oauth_signature_method_Valid() const;

    QString getOauthTimestamp() const;
    void setOauthTimestamp(const QString &oauth_timestamp);
    bool is_oauth_timestamp_Set() const;
    bool is_oauth_timestamp_Valid() const;

    QString getOauthToken() const;
    void setOauthToken(const QString &oauth_token);
    bool is_oauth_token_Set() const;
    bool is_oauth_token_Valid() const;

    QString getOauthVerifier() const;
    void setOauthVerifier(const QString &oauth_verifier);
    bool is_oauth_verifier_Set() const;
    bool is_oauth_verifier_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_oauth_consumer_key;
    bool m_oauth_consumer_key_isSet;
    bool m_oauth_consumer_key_isValid;

    QString m_oauth_nonce;
    bool m_oauth_nonce_isSet;
    bool m_oauth_nonce_isValid;

    QString m_oauth_signature;
    bool m_oauth_signature_isSet;
    bool m_oauth_signature_isValid;

    QString m_oauth_signature_method;
    bool m_oauth_signature_method_isSet;
    bool m_oauth_signature_method_isValid;

    QString m_oauth_timestamp;
    bool m_oauth_timestamp_isSet;
    bool m_oauth_timestamp_isValid;

    QString m_oauth_token;
    bool m_oauth_token_isSet;
    bool m_oauth_token_isValid;

    QString m_oauth_verifier;
    bool m_oauth_verifier_isSet;
    bool m_oauth_verifier_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_oauth_access_token_post_request)

#endif // OAI_oauth_access_token_post_request_H
