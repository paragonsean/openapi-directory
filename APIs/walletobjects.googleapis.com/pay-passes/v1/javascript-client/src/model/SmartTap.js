/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IssuerToUserInfo from './IssuerToUserInfo';

/**
 * The SmartTap model module.
 * @module model/SmartTap
 * @version v1
 */
class SmartTap {
    /**
     * Constructs a new <code>SmartTap</code>.
     * @alias module:model/SmartTap
     */
    constructor() { 
        
        SmartTap.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SmartTap</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SmartTap} obj Optional instance to populate.
     * @return {module:model/SmartTap} The populated <code>SmartTap</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SmartTap();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('infos')) {
                obj['infos'] = ApiClient.convertToType(data['infos'], [IssuerToUserInfo]);
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('merchantId')) {
                obj['merchantId'] = ApiClient.convertToType(data['merchantId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SmartTap</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SmartTap</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        if (data['infos']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['infos'])) {
                throw new Error("Expected the field `infos` to be an array in the JSON data but got " + data['infos']);
            }
            // validate the optional field `infos` (array)
            for (const item of data['infos']) {
                IssuerToUserInfo.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['merchantId'] && !(typeof data['merchantId'] === 'string' || data['merchantId'] instanceof String)) {
            throw new Error("Expected the field `merchantId` to be a primitive type in the JSON string but got " + data['merchantId']);
        }

        return true;
    }


}



/**
 * The unique identifier for a smart tap. This value should follow the format issuer ID.identifier where the former is issued by Google and latter is the Smart Tap id. The Smart Tap id is a Base64 encoded string which represents the id which was generated by the Google Pay app.
 * @member {String} id
 */
SmartTap.prototype['id'] = undefined;

/**
 * Communication from merchant to user.
 * @member {Array.<module:model/IssuerToUserInfo>} infos
 */
SmartTap.prototype['infos'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#smartTap\"`.
 * @member {String} kind
 */
SmartTap.prototype['kind'] = undefined;

/**
 * Smart Tap merchant ID of who engaged in the Smart Tap interaction.
 * @member {String} merchantId
 */
SmartTap.prototype['merchantId'] = undefined;






export default SmartTap;

