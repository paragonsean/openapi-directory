/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ModifyLinkedOfferObjects model module.
 * @module model/ModifyLinkedOfferObjects
 * @version v1
 */
class ModifyLinkedOfferObjects {
    /**
     * Constructs a new <code>ModifyLinkedOfferObjects</code>.
     * @alias module:model/ModifyLinkedOfferObjects
     */
    constructor() { 
        
        ModifyLinkedOfferObjects.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ModifyLinkedOfferObjects</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ModifyLinkedOfferObjects} obj Optional instance to populate.
     * @return {module:model/ModifyLinkedOfferObjects} The populated <code>ModifyLinkedOfferObjects</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ModifyLinkedOfferObjects();

            if (data.hasOwnProperty('addLinkedOfferObjectIds')) {
                obj['addLinkedOfferObjectIds'] = ApiClient.convertToType(data['addLinkedOfferObjectIds'], ['String']);
            }
            if (data.hasOwnProperty('removeLinkedOfferObjectIds')) {
                obj['removeLinkedOfferObjectIds'] = ApiClient.convertToType(data['removeLinkedOfferObjectIds'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ModifyLinkedOfferObjects</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ModifyLinkedOfferObjects</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['addLinkedOfferObjectIds'])) {
            throw new Error("Expected the field `addLinkedOfferObjectIds` to be an array in the JSON data but got " + data['addLinkedOfferObjectIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['removeLinkedOfferObjectIds'])) {
            throw new Error("Expected the field `removeLinkedOfferObjectIds` to be an array in the JSON data but got " + data['removeLinkedOfferObjectIds']);
        }

        return true;
    }


}



/**
 * The linked offer object ids to add to the object.
 * @member {Array.<String>} addLinkedOfferObjectIds
 */
ModifyLinkedOfferObjects.prototype['addLinkedOfferObjectIds'] = undefined;

/**
 * The linked offer object ids to remove from the object.
 * @member {Array.<String>} removeLinkedOfferObjectIds
 */
ModifyLinkedOfferObjects.prototype['removeLinkedOfferObjectIds'] = undefined;






export default ModifyLinkedOfferObjects;

