/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SecurityAnimation model module.
 * @module model/SecurityAnimation
 * @version v1
 */
class SecurityAnimation {
    /**
     * Constructs a new <code>SecurityAnimation</code>.
     * @alias module:model/SecurityAnimation
     */
    constructor() { 
        
        SecurityAnimation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SecurityAnimation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SecurityAnimation} obj Optional instance to populate.
     * @return {module:model/SecurityAnimation} The populated <code>SecurityAnimation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SecurityAnimation();

            if (data.hasOwnProperty('animationType')) {
                obj['animationType'] = ApiClient.convertToType(data['animationType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SecurityAnimation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SecurityAnimation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['animationType'] && !(typeof data['animationType'] === 'string' || data['animationType'] instanceof String)) {
            throw new Error("Expected the field `animationType` to be a primitive type in the JSON string but got " + data['animationType']);
        }

        return true;
    }


}



/**
 * Type of animation.
 * @member {module:model/SecurityAnimation.AnimationTypeEnum} animationType
 */
SecurityAnimation.prototype['animationType'] = undefined;





/**
 * Allowed values for the <code>animationType</code> property.
 * @enum {String}
 * @readonly
 */
SecurityAnimation['AnimationTypeEnum'] = {

    /**
     * value: "ANIMATION_UNSPECIFIED"
     * @const
     */
    "ANIMATION_UNSPECIFIED": "ANIMATION_UNSPECIFIED",

    /**
     * value: "FOIL_SHIMMER"
     * @const
     */
    "FOIL_SHIMMER": "FOIL_SHIMMER",

    /**
     * value: "foilShimmer"
     * @const
     */
    "foilShimmer": "foilShimmer"
};



export default SecurityAnimation;

