/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LabelValueRow from './LabelValueRow';

/**
 * The InfoModuleData model module.
 * @module model/InfoModuleData
 * @version v1
 */
class InfoModuleData {
    /**
     * Constructs a new <code>InfoModuleData</code>.
     * @alias module:model/InfoModuleData
     */
    constructor() { 
        
        InfoModuleData.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InfoModuleData</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InfoModuleData} obj Optional instance to populate.
     * @return {module:model/InfoModuleData} The populated <code>InfoModuleData</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InfoModuleData();

            if (data.hasOwnProperty('labelValueRows')) {
                obj['labelValueRows'] = ApiClient.convertToType(data['labelValueRows'], [LabelValueRow]);
            }
            if (data.hasOwnProperty('showLastUpdateTime')) {
                obj['showLastUpdateTime'] = ApiClient.convertToType(data['showLastUpdateTime'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InfoModuleData</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InfoModuleData</code>.
     */
    static validateJSON(data) {
        if (data['labelValueRows']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['labelValueRows'])) {
                throw new Error("Expected the field `labelValueRows` to be an array in the JSON data but got " + data['labelValueRows']);
            }
            // validate the optional field `labelValueRows` (array)
            for (const item of data['labelValueRows']) {
                LabelValueRow.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * A list of collections of labels and values. These will be displayed one after the other in a singular column.
 * @member {Array.<module:model/LabelValueRow>} labelValueRows
 */
InfoModuleData.prototype['labelValueRows'] = undefined;

/**
 * @member {Boolean} showLastUpdateTime
 */
InfoModuleData.prototype['showLastUpdateTime'] = undefined;






export default InfoModuleData;

