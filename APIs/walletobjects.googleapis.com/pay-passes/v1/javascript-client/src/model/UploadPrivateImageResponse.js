/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadPrivateImageResponse model module.
 * @module model/UploadPrivateImageResponse
 * @version v1
 */
class UploadPrivateImageResponse {
    /**
     * Constructs a new <code>UploadPrivateImageResponse</code>.
     * Response for uploading the private image
     * @alias module:model/UploadPrivateImageResponse
     */
    constructor() { 
        
        UploadPrivateImageResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UploadPrivateImageResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadPrivateImageResponse} obj Optional instance to populate.
     * @return {module:model/UploadPrivateImageResponse} The populated <code>UploadPrivateImageResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadPrivateImageResponse();

            if (data.hasOwnProperty('privateContentId')) {
                obj['privateContentId'] = ApiClient.convertToType(data['privateContentId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadPrivateImageResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadPrivateImageResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['privateContentId'] && !(typeof data['privateContentId'] === 'string' || data['privateContentId'] instanceof String)) {
            throw new Error("Expected the field `privateContentId` to be a primitive type in the JSON string but got " + data['privateContentId']);
        }

        return true;
    }


}



/**
 * A 64-bit content id for the image that was uploaded by the Issuer.
 * @member {String} privateContentId
 */
UploadPrivateImageResponse.prototype['privateContentId'] = undefined;






export default UploadPrivateImageResponse;

