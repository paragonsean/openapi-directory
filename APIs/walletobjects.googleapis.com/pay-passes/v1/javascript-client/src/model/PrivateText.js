/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LocalizedString from './LocalizedString';

/**
 * The PrivateText model module.
 * @module model/PrivateText
 * @version v1
 */
class PrivateText {
    /**
     * Constructs a new <code>PrivateText</code>.
     * Private data for TextModule. This data will be rendered as a TextModule for a pass.
     * @alias module:model/PrivateText
     */
    constructor() { 
        
        PrivateText.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PrivateText</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PrivateText} obj Optional instance to populate.
     * @return {module:model/PrivateText} The populated <code>PrivateText</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PrivateText();

            if (data.hasOwnProperty('body')) {
                obj['body'] = LocalizedString.constructFromObject(data['body']);
            }
            if (data.hasOwnProperty('header')) {
                obj['header'] = LocalizedString.constructFromObject(data['header']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PrivateText</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PrivateText</code>.
     */
    static validateJSON(data) {
        // validate the optional field `body`
        if (data['body']) { // data not null
          LocalizedString.validateJSON(data['body']);
        }
        // validate the optional field `header`
        if (data['header']) { // data not null
          LocalizedString.validateJSON(data['header']);
        }

        return true;
    }


}



/**
 * @member {module:model/LocalizedString} body
 */
PrivateText.prototype['body'] = undefined;

/**
 * @member {module:model/LocalizedString} header
 */
PrivateText.prototype['header'] = undefined;






export default PrivateText;

