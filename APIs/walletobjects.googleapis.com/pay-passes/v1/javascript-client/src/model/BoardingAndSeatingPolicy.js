/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BoardingAndSeatingPolicy model module.
 * @module model/BoardingAndSeatingPolicy
 * @version v1
 */
class BoardingAndSeatingPolicy {
    /**
     * Constructs a new <code>BoardingAndSeatingPolicy</code>.
     * @alias module:model/BoardingAndSeatingPolicy
     */
    constructor() { 
        
        BoardingAndSeatingPolicy.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BoardingAndSeatingPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BoardingAndSeatingPolicy} obj Optional instance to populate.
     * @return {module:model/BoardingAndSeatingPolicy} The populated <code>BoardingAndSeatingPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BoardingAndSeatingPolicy();

            if (data.hasOwnProperty('boardingPolicy')) {
                obj['boardingPolicy'] = ApiClient.convertToType(data['boardingPolicy'], 'String');
            }
            if (data.hasOwnProperty('kind')) {
                obj['kind'] = ApiClient.convertToType(data['kind'], 'String');
            }
            if (data.hasOwnProperty('seatClassPolicy')) {
                obj['seatClassPolicy'] = ApiClient.convertToType(data['seatClassPolicy'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BoardingAndSeatingPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BoardingAndSeatingPolicy</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['boardingPolicy'] && !(typeof data['boardingPolicy'] === 'string' || data['boardingPolicy'] instanceof String)) {
            throw new Error("Expected the field `boardingPolicy` to be a primitive type in the JSON string but got " + data['boardingPolicy']);
        }
        // ensure the json data is a string
        if (data['kind'] && !(typeof data['kind'] === 'string' || data['kind'] instanceof String)) {
            throw new Error("Expected the field `kind` to be a primitive type in the JSON string but got " + data['kind']);
        }
        // ensure the json data is a string
        if (data['seatClassPolicy'] && !(typeof data['seatClassPolicy'] === 'string' || data['seatClassPolicy'] instanceof String)) {
            throw new Error("Expected the field `seatClassPolicy` to be a primitive type in the JSON string but got " + data['seatClassPolicy']);
        }

        return true;
    }


}



/**
 * Indicates the policy the airline uses for boarding. If unset, Google will default to `zoneBased`.
 * @member {module:model/BoardingAndSeatingPolicy.BoardingPolicyEnum} boardingPolicy
 */
BoardingAndSeatingPolicy.prototype['boardingPolicy'] = undefined;

/**
 * Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#boardingAndSeatingPolicy\"`.
 * @member {String} kind
 */
BoardingAndSeatingPolicy.prototype['kind'] = undefined;

/**
 * Seating policy which dictates how we display the seat class. If unset, Google will default to `cabinBased`.
 * @member {module:model/BoardingAndSeatingPolicy.SeatClassPolicyEnum} seatClassPolicy
 */
BoardingAndSeatingPolicy.prototype['seatClassPolicy'] = undefined;





/**
 * Allowed values for the <code>boardingPolicy</code> property.
 * @enum {String}
 * @readonly
 */
BoardingAndSeatingPolicy['BoardingPolicyEnum'] = {

    /**
     * value: "BOARDING_POLICY_UNSPECIFIED"
     * @const
     */
    "BOARDING_POLICY_UNSPECIFIED": "BOARDING_POLICY_UNSPECIFIED",

    /**
     * value: "ZONE_BASED"
     * @const
     */
    "ZONE_BASED": "ZONE_BASED",

    /**
     * value: "zoneBased"
     * @const
     */
    "zoneBased": "zoneBased",

    /**
     * value: "GROUP_BASED"
     * @const
     */
    "GROUP_BASED": "GROUP_BASED",

    /**
     * value: "groupBased"
     * @const
     */
    "groupBased": "groupBased",

    /**
     * value: "BOARDING_POLICY_OTHER"
     * @const
     */
    "BOARDING_POLICY_OTHER": "BOARDING_POLICY_OTHER",

    /**
     * value: "boardingPolicyOther"
     * @const
     */
    "boardingPolicyOther": "boardingPolicyOther"
};


/**
 * Allowed values for the <code>seatClassPolicy</code> property.
 * @enum {String}
 * @readonly
 */
BoardingAndSeatingPolicy['SeatClassPolicyEnum'] = {

    /**
     * value: "SEAT_CLASS_POLICY_UNSPECIFIED"
     * @const
     */
    "SEAT_CLASS_POLICY_UNSPECIFIED": "SEAT_CLASS_POLICY_UNSPECIFIED",

    /**
     * value: "CABIN_BASED"
     * @const
     */
    "CABIN_BASED": "CABIN_BASED",

    /**
     * value: "cabinBased"
     * @const
     */
    "cabinBased": "cabinBased",

    /**
     * value: "CLASS_BASED"
     * @const
     */
    "CLASS_BASED": "CLASS_BASED",

    /**
     * value: "classBased"
     * @const
     */
    "classBased": "classBased",

    /**
     * value: "TIER_BASED"
     * @const
     */
    "TIER_BASED": "TIER_BASED",

    /**
     * value: "tierBased"
     * @const
     */
    "tierBased": "tierBased",

    /**
     * value: "SEAT_CLASS_POLICY_OTHER"
     * @const
     */
    "SEAT_CLASS_POLICY_OTHER": "SEAT_CLASS_POLICY_OTHER",

    /**
     * value: "seatClassPolicyOther"
     * @const
     */
    "seatClassPolicyOther": "seatClassPolicyOther"
};



export default BoardingAndSeatingPolicy;

