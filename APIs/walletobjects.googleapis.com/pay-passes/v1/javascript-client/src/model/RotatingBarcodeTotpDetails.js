/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RotatingBarcodeTotpDetailsTotpParameters from './RotatingBarcodeTotpDetailsTotpParameters';

/**
 * The RotatingBarcodeTotpDetails model module.
 * @module model/RotatingBarcodeTotpDetails
 * @version v1
 */
class RotatingBarcodeTotpDetails {
    /**
     * Constructs a new <code>RotatingBarcodeTotpDetails</code>.
     * Configuration for the time-based OTP substitutions. See https://tools.ietf.org/html/rfc6238
     * @alias module:model/RotatingBarcodeTotpDetails
     */
    constructor() { 
        
        RotatingBarcodeTotpDetails.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RotatingBarcodeTotpDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RotatingBarcodeTotpDetails} obj Optional instance to populate.
     * @return {module:model/RotatingBarcodeTotpDetails} The populated <code>RotatingBarcodeTotpDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RotatingBarcodeTotpDetails();

            if (data.hasOwnProperty('algorithm')) {
                obj['algorithm'] = ApiClient.convertToType(data['algorithm'], 'String');
            }
            if (data.hasOwnProperty('parameters')) {
                obj['parameters'] = ApiClient.convertToType(data['parameters'], [RotatingBarcodeTotpDetailsTotpParameters]);
            }
            if (data.hasOwnProperty('periodMillis')) {
                obj['periodMillis'] = ApiClient.convertToType(data['periodMillis'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RotatingBarcodeTotpDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RotatingBarcodeTotpDetails</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['algorithm'] && !(typeof data['algorithm'] === 'string' || data['algorithm'] instanceof String)) {
            throw new Error("Expected the field `algorithm` to be a primitive type in the JSON string but got " + data['algorithm']);
        }
        if (data['parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['parameters'])) {
                throw new Error("Expected the field `parameters` to be an array in the JSON data but got " + data['parameters']);
            }
            // validate the optional field `parameters` (array)
            for (const item of data['parameters']) {
                RotatingBarcodeTotpDetailsTotpParameters.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['periodMillis'] && !(typeof data['periodMillis'] === 'string' || data['periodMillis'] instanceof String)) {
            throw new Error("Expected the field `periodMillis` to be a primitive type in the JSON string but got " + data['periodMillis']);
        }

        return true;
    }


}



/**
 * The TOTP algorithm used to generate the OTP.
 * @member {module:model/RotatingBarcodeTotpDetails.AlgorithmEnum} algorithm
 */
RotatingBarcodeTotpDetails.prototype['algorithm'] = undefined;

/**
 * The TOTP parameters for each of the {totp_value_*} substitutions. The TotpParameters at index n is used for the {totp_value_n} substitution.
 * @member {Array.<module:model/RotatingBarcodeTotpDetailsTotpParameters>} parameters
 */
RotatingBarcodeTotpDetails.prototype['parameters'] = undefined;

/**
 * The time interval used for the TOTP value generation, in milliseconds.
 * @member {String} periodMillis
 */
RotatingBarcodeTotpDetails.prototype['periodMillis'] = undefined;





/**
 * Allowed values for the <code>algorithm</code> property.
 * @enum {String}
 * @readonly
 */
RotatingBarcodeTotpDetails['AlgorithmEnum'] = {

    /**
     * value: "TOTP_ALGORITHM_UNSPECIFIED"
     * @const
     */
    "ALGORITHM_UNSPECIFIED": "TOTP_ALGORITHM_UNSPECIFIED",

    /**
     * value: "TOTP_SHA1"
     * @const
     */
    "SHA1": "TOTP_SHA1"
};



export default RotatingBarcodeTotpDetails;

