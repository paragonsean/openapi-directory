/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GooglePayPassesApi);
  }
}(this, function(expect, GooglePayPassesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GooglePayPassesApi.Blobstore2Info();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Blobstore2Info', function() {
    it('should create an instance of Blobstore2Info', function() {
      // uncomment below and update the code to test Blobstore2Info
      //var instance = new GooglePayPassesApi.Blobstore2Info();
      //expect(instance).to.be.a(GooglePayPassesApi.Blobstore2Info);
    });

    it('should have the property blobGeneration (base name: "blobGeneration")', function() {
      // uncomment below and update the code to test the property blobGeneration
      //var instance = new GooglePayPassesApi.Blobstore2Info();
      //expect(instance).to.be();
    });

    it('should have the property blobId (base name: "blobId")', function() {
      // uncomment below and update the code to test the property blobId
      //var instance = new GooglePayPassesApi.Blobstore2Info();
      //expect(instance).to.be();
    });

    it('should have the property downloadReadHandle (base name: "downloadReadHandle")', function() {
      // uncomment below and update the code to test the property downloadReadHandle
      //var instance = new GooglePayPassesApi.Blobstore2Info();
      //expect(instance).to.be();
    });

    it('should have the property readToken (base name: "readToken")', function() {
      // uncomment below and update the code to test the property readToken
      //var instance = new GooglePayPassesApi.Blobstore2Info();
      //expect(instance).to.be();
    });

    it('should have the property uploadMetadataContainer (base name: "uploadMetadataContainer")', function() {
      // uncomment below and update the code to test the property uploadMetadataContainer
      //var instance = new GooglePayPassesApi.Blobstore2Info();
      //expect(instance).to.be();
    });

  });

}));
