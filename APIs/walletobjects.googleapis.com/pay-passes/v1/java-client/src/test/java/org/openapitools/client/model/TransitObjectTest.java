/*
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ActivationStatus;
import org.openapitools.client.model.AppLinkData;
import org.openapitools.client.model.Barcode;
import org.openapitools.client.model.DeviceContext;
import org.openapitools.client.model.GroupingInfo;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ImageModuleData;
import org.openapitools.client.model.InfoModuleData;
import org.openapitools.client.model.LatLongPoint;
import org.openapitools.client.model.LinksModuleData;
import org.openapitools.client.model.LocalizedString;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.PassConstraints;
import org.openapitools.client.model.PurchaseDetails;
import org.openapitools.client.model.RotatingBarcode;
import org.openapitools.client.model.TextModuleData;
import org.openapitools.client.model.TicketLeg;
import org.openapitools.client.model.TicketRestrictions;
import org.openapitools.client.model.TimeInterval;
import org.openapitools.client.model.TransitClass;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for TransitObject
 */
public class TransitObjectTest {
    private final TransitObject model = new TransitObject();

    /**
     * Model tests for TransitObject
     */
    @Test
    public void testTransitObject() {
        // TODO: test TransitObject
    }

    /**
     * Test the property 'activationStatus'
     */
    @Test
    public void activationStatusTest() {
        // TODO: test activationStatus
    }

    /**
     * Test the property 'appLinkData'
     */
    @Test
    public void appLinkDataTest() {
        // TODO: test appLinkData
    }

    /**
     * Test the property 'barcode'
     */
    @Test
    public void barcodeTest() {
        // TODO: test barcode
    }

    /**
     * Test the property 'classId'
     */
    @Test
    public void classIdTest() {
        // TODO: test classId
    }

    /**
     * Test the property 'classReference'
     */
    @Test
    public void classReferenceTest() {
        // TODO: test classReference
    }

    /**
     * Test the property 'concessionCategory'
     */
    @Test
    public void concessionCategoryTest() {
        // TODO: test concessionCategory
    }

    /**
     * Test the property 'customConcessionCategory'
     */
    @Test
    public void customConcessionCategoryTest() {
        // TODO: test customConcessionCategory
    }

    /**
     * Test the property 'customTicketStatus'
     */
    @Test
    public void customTicketStatusTest() {
        // TODO: test customTicketStatus
    }

    /**
     * Test the property 'deviceContext'
     */
    @Test
    public void deviceContextTest() {
        // TODO: test deviceContext
    }

    /**
     * Test the property 'disableExpirationNotification'
     */
    @Test
    public void disableExpirationNotificationTest() {
        // TODO: test disableExpirationNotification
    }

    /**
     * Test the property 'groupingInfo'
     */
    @Test
    public void groupingInfoTest() {
        // TODO: test groupingInfo
    }

    /**
     * Test the property 'hasLinkedDevice'
     */
    @Test
    public void hasLinkedDeviceTest() {
        // TODO: test hasLinkedDevice
    }

    /**
     * Test the property 'hasUsers'
     */
    @Test
    public void hasUsersTest() {
        // TODO: test hasUsers
    }

    /**
     * Test the property 'heroImage'
     */
    @Test
    public void heroImageTest() {
        // TODO: test heroImage
    }

    /**
     * Test the property 'hexBackgroundColor'
     */
    @Test
    public void hexBackgroundColorTest() {
        // TODO: test hexBackgroundColor
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageModulesData'
     */
    @Test
    public void imageModulesDataTest() {
        // TODO: test imageModulesData
    }

    /**
     * Test the property 'infoModuleData'
     */
    @Test
    public void infoModuleDataTest() {
        // TODO: test infoModuleData
    }

    /**
     * Test the property 'linksModuleData'
     */
    @Test
    public void linksModuleDataTest() {
        // TODO: test linksModuleData
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'passConstraints'
     */
    @Test
    public void passConstraintsTest() {
        // TODO: test passConstraints
    }

    /**
     * Test the property 'passengerNames'
     */
    @Test
    public void passengerNamesTest() {
        // TODO: test passengerNames
    }

    /**
     * Test the property 'passengerType'
     */
    @Test
    public void passengerTypeTest() {
        // TODO: test passengerType
    }

    /**
     * Test the property 'purchaseDetails'
     */
    @Test
    public void purchaseDetailsTest() {
        // TODO: test purchaseDetails
    }

    /**
     * Test the property 'rotatingBarcode'
     */
    @Test
    public void rotatingBarcodeTest() {
        // TODO: test rotatingBarcode
    }

    /**
     * Test the property 'smartTapRedemptionValue'
     */
    @Test
    public void smartTapRedemptionValueTest() {
        // TODO: test smartTapRedemptionValue
    }

    /**
     * Test the property 'state'
     */
    @Test
    public void stateTest() {
        // TODO: test state
    }

    /**
     * Test the property 'textModulesData'
     */
    @Test
    public void textModulesDataTest() {
        // TODO: test textModulesData
    }

    /**
     * Test the property 'ticketLeg'
     */
    @Test
    public void ticketLegTest() {
        // TODO: test ticketLeg
    }

    /**
     * Test the property 'ticketLegs'
     */
    @Test
    public void ticketLegsTest() {
        // TODO: test ticketLegs
    }

    /**
     * Test the property 'ticketNumber'
     */
    @Test
    public void ticketNumberTest() {
        // TODO: test ticketNumber
    }

    /**
     * Test the property 'ticketRestrictions'
     */
    @Test
    public void ticketRestrictionsTest() {
        // TODO: test ticketRestrictions
    }

    /**
     * Test the property 'ticketStatus'
     */
    @Test
    public void ticketStatusTest() {
        // TODO: test ticketStatus
    }

    /**
     * Test the property 'tripId'
     */
    @Test
    public void tripIdTest() {
        // TODO: test tripId
    }

    /**
     * Test the property 'tripType'
     */
    @Test
    public void tripTypeTest() {
        // TODO: test tripType
    }

    /**
     * Test the property 'validTimeInterval'
     */
    @Test
    public void validTimeIntervalTest() {
        // TODO: test validTimeInterval
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

}
