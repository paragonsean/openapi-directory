/*
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CallbackOptions;
import org.openapitools.client.model.ClassTemplateInfo;
import org.openapitools.client.model.EventDateTime;
import org.openapitools.client.model.EventVenue;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ImageModuleData;
import org.openapitools.client.model.InfoModuleData;
import org.openapitools.client.model.LatLongPoint;
import org.openapitools.client.model.LinksModuleData;
import org.openapitools.client.model.LocalizedString;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.Review;
import org.openapitools.client.model.SecurityAnimation;
import org.openapitools.client.model.TextModuleData;
import org.openapitools.client.model.Uri;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for EventTicketClass
 */
public class EventTicketClassTest {
    private final EventTicketClass model = new EventTicketClass();

    /**
     * Model tests for EventTicketClass
     */
    @Test
    public void testEventTicketClass() {
        // TODO: test EventTicketClass
    }

    /**
     * Test the property 'allowMultipleUsersPerObject'
     */
    @Test
    public void allowMultipleUsersPerObjectTest() {
        // TODO: test allowMultipleUsersPerObject
    }

    /**
     * Test the property 'callbackOptions'
     */
    @Test
    public void callbackOptionsTest() {
        // TODO: test callbackOptions
    }

    /**
     * Test the property 'classTemplateInfo'
     */
    @Test
    public void classTemplateInfoTest() {
        // TODO: test classTemplateInfo
    }

    /**
     * Test the property 'confirmationCodeLabel'
     */
    @Test
    public void confirmationCodeLabelTest() {
        // TODO: test confirmationCodeLabel
    }

    /**
     * Test the property 'countryCode'
     */
    @Test
    public void countryCodeTest() {
        // TODO: test countryCode
    }

    /**
     * Test the property 'customConfirmationCodeLabel'
     */
    @Test
    public void customConfirmationCodeLabelTest() {
        // TODO: test customConfirmationCodeLabel
    }

    /**
     * Test the property 'customGateLabel'
     */
    @Test
    public void customGateLabelTest() {
        // TODO: test customGateLabel
    }

    /**
     * Test the property 'customRowLabel'
     */
    @Test
    public void customRowLabelTest() {
        // TODO: test customRowLabel
    }

    /**
     * Test the property 'customSeatLabel'
     */
    @Test
    public void customSeatLabelTest() {
        // TODO: test customSeatLabel
    }

    /**
     * Test the property 'customSectionLabel'
     */
    @Test
    public void customSectionLabelTest() {
        // TODO: test customSectionLabel
    }

    /**
     * Test the property 'dateTime'
     */
    @Test
    public void dateTimeTest() {
        // TODO: test dateTime
    }

    /**
     * Test the property 'enableSmartTap'
     */
    @Test
    public void enableSmartTapTest() {
        // TODO: test enableSmartTap
    }

    /**
     * Test the property 'eventId'
     */
    @Test
    public void eventIdTest() {
        // TODO: test eventId
    }

    /**
     * Test the property 'eventName'
     */
    @Test
    public void eventNameTest() {
        // TODO: test eventName
    }

    /**
     * Test the property 'finePrint'
     */
    @Test
    public void finePrintTest() {
        // TODO: test finePrint
    }

    /**
     * Test the property 'gateLabel'
     */
    @Test
    public void gateLabelTest() {
        // TODO: test gateLabel
    }

    /**
     * Test the property 'heroImage'
     */
    @Test
    public void heroImageTest() {
        // TODO: test heroImage
    }

    /**
     * Test the property 'hexBackgroundColor'
     */
    @Test
    public void hexBackgroundColorTest() {
        // TODO: test hexBackgroundColor
    }

    /**
     * Test the property 'homepageUri'
     */
    @Test
    public void homepageUriTest() {
        // TODO: test homepageUri
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'imageModulesData'
     */
    @Test
    public void imageModulesDataTest() {
        // TODO: test imageModulesData
    }

    /**
     * Test the property 'infoModuleData'
     */
    @Test
    public void infoModuleDataTest() {
        // TODO: test infoModuleData
    }

    /**
     * Test the property 'issuerName'
     */
    @Test
    public void issuerNameTest() {
        // TODO: test issuerName
    }

    /**
     * Test the property 'kind'
     */
    @Test
    public void kindTest() {
        // TODO: test kind
    }

    /**
     * Test the property 'linksModuleData'
     */
    @Test
    public void linksModuleDataTest() {
        // TODO: test linksModuleData
    }

    /**
     * Test the property 'localizedIssuerName'
     */
    @Test
    public void localizedIssuerNameTest() {
        // TODO: test localizedIssuerName
    }

    /**
     * Test the property 'locations'
     */
    @Test
    public void locationsTest() {
        // TODO: test locations
    }

    /**
     * Test the property 'logo'
     */
    @Test
    public void logoTest() {
        // TODO: test logo
    }

    /**
     * Test the property 'messages'
     */
    @Test
    public void messagesTest() {
        // TODO: test messages
    }

    /**
     * Test the property 'multipleDevicesAndHoldersAllowedStatus'
     */
    @Test
    public void multipleDevicesAndHoldersAllowedStatusTest() {
        // TODO: test multipleDevicesAndHoldersAllowedStatus
    }

    /**
     * Test the property 'redemptionIssuers'
     */
    @Test
    public void redemptionIssuersTest() {
        // TODO: test redemptionIssuers
    }

    /**
     * Test the property 'review'
     */
    @Test
    public void reviewTest() {
        // TODO: test review
    }

    /**
     * Test the property 'reviewStatus'
     */
    @Test
    public void reviewStatusTest() {
        // TODO: test reviewStatus
    }

    /**
     * Test the property 'rowLabel'
     */
    @Test
    public void rowLabelTest() {
        // TODO: test rowLabel
    }

    /**
     * Test the property 'seatLabel'
     */
    @Test
    public void seatLabelTest() {
        // TODO: test seatLabel
    }

    /**
     * Test the property 'sectionLabel'
     */
    @Test
    public void sectionLabelTest() {
        // TODO: test sectionLabel
    }

    /**
     * Test the property 'securityAnimation'
     */
    @Test
    public void securityAnimationTest() {
        // TODO: test securityAnimation
    }

    /**
     * Test the property 'textModulesData'
     */
    @Test
    public void textModulesDataTest() {
        // TODO: test textModulesData
    }

    /**
     * Test the property 'venue'
     */
    @Test
    public void venueTest() {
        // TODO: test venue
    }

    /**
     * Test the property 'version'
     */
    @Test
    public void versionTest() {
        // TODO: test version
    }

    /**
     * Test the property 'viewUnlockRequirement'
     */
    @Test
    public void viewUnlockRequirementTest() {
        // TODO: test viewUnlockRequirement
    }

    /**
     * Test the property 'wordMark'
     */
    @Test
    public void wordMarkTest() {
        // TODO: test wordMark
    }

}
