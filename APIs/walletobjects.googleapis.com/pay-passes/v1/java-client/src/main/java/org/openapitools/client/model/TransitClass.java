/*
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.ActivationOptions;
import org.openapitools.client.model.CallbackOptions;
import org.openapitools.client.model.ClassTemplateInfo;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ImageModuleData;
import org.openapitools.client.model.InfoModuleData;
import org.openapitools.client.model.LatLongPoint;
import org.openapitools.client.model.LinksModuleData;
import org.openapitools.client.model.LocalizedString;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.Review;
import org.openapitools.client.model.SecurityAnimation;
import org.openapitools.client.model.TextModuleData;
import org.openapitools.client.model.Uri;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * TransitClass
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:07.622305-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class TransitClass {
  public static final String SERIALIZED_NAME_ACTIVATION_OPTIONS = "activationOptions";
  @SerializedName(SERIALIZED_NAME_ACTIVATION_OPTIONS)
  private ActivationOptions activationOptions;

  public static final String SERIALIZED_NAME_ALLOW_MULTIPLE_USERS_PER_OBJECT = "allowMultipleUsersPerObject";
  @SerializedName(SERIALIZED_NAME_ALLOW_MULTIPLE_USERS_PER_OBJECT)
  private Boolean allowMultipleUsersPerObject;

  public static final String SERIALIZED_NAME_CALLBACK_OPTIONS = "callbackOptions";
  @SerializedName(SERIALIZED_NAME_CALLBACK_OPTIONS)
  private CallbackOptions callbackOptions;

  public static final String SERIALIZED_NAME_CLASS_TEMPLATE_INFO = "classTemplateInfo";
  @SerializedName(SERIALIZED_NAME_CLASS_TEMPLATE_INFO)
  private ClassTemplateInfo classTemplateInfo;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_CUSTOM_CARRIAGE_LABEL = "customCarriageLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CARRIAGE_LABEL)
  private LocalizedString customCarriageLabel;

  public static final String SERIALIZED_NAME_CUSTOM_COACH_LABEL = "customCoachLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_COACH_LABEL)
  private LocalizedString customCoachLabel;

  public static final String SERIALIZED_NAME_CUSTOM_CONCESSION_CATEGORY_LABEL = "customConcessionCategoryLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CONCESSION_CATEGORY_LABEL)
  private LocalizedString customConcessionCategoryLabel;

  public static final String SERIALIZED_NAME_CUSTOM_CONFIRMATION_CODE_LABEL = "customConfirmationCodeLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_CONFIRMATION_CODE_LABEL)
  private LocalizedString customConfirmationCodeLabel;

  public static final String SERIALIZED_NAME_CUSTOM_DISCOUNT_MESSAGE_LABEL = "customDiscountMessageLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DISCOUNT_MESSAGE_LABEL)
  private LocalizedString customDiscountMessageLabel;

  public static final String SERIALIZED_NAME_CUSTOM_FARE_CLASS_LABEL = "customFareClassLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FARE_CLASS_LABEL)
  private LocalizedString customFareClassLabel;

  public static final String SERIALIZED_NAME_CUSTOM_FARE_NAME_LABEL = "customFareNameLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FARE_NAME_LABEL)
  private LocalizedString customFareNameLabel;

  public static final String SERIALIZED_NAME_CUSTOM_OTHER_RESTRICTIONS_LABEL = "customOtherRestrictionsLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_OTHER_RESTRICTIONS_LABEL)
  private LocalizedString customOtherRestrictionsLabel;

  public static final String SERIALIZED_NAME_CUSTOM_PLATFORM_LABEL = "customPlatformLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PLATFORM_LABEL)
  private LocalizedString customPlatformLabel;

  public static final String SERIALIZED_NAME_CUSTOM_PURCHASE_FACE_VALUE_LABEL = "customPurchaseFaceValueLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PURCHASE_FACE_VALUE_LABEL)
  private LocalizedString customPurchaseFaceValueLabel;

  public static final String SERIALIZED_NAME_CUSTOM_PURCHASE_PRICE_LABEL = "customPurchasePriceLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PURCHASE_PRICE_LABEL)
  private LocalizedString customPurchasePriceLabel;

  public static final String SERIALIZED_NAME_CUSTOM_PURCHASE_RECEIPT_NUMBER_LABEL = "customPurchaseReceiptNumberLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_PURCHASE_RECEIPT_NUMBER_LABEL)
  private LocalizedString customPurchaseReceiptNumberLabel;

  public static final String SERIALIZED_NAME_CUSTOM_ROUTE_RESTRICTIONS_DETAILS_LABEL = "customRouteRestrictionsDetailsLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ROUTE_RESTRICTIONS_DETAILS_LABEL)
  private LocalizedString customRouteRestrictionsDetailsLabel;

  public static final String SERIALIZED_NAME_CUSTOM_ROUTE_RESTRICTIONS_LABEL = "customRouteRestrictionsLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ROUTE_RESTRICTIONS_LABEL)
  private LocalizedString customRouteRestrictionsLabel;

  public static final String SERIALIZED_NAME_CUSTOM_SEAT_LABEL = "customSeatLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_SEAT_LABEL)
  private LocalizedString customSeatLabel;

  public static final String SERIALIZED_NAME_CUSTOM_TICKET_NUMBER_LABEL = "customTicketNumberLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TICKET_NUMBER_LABEL)
  private LocalizedString customTicketNumberLabel;

  public static final String SERIALIZED_NAME_CUSTOM_TIME_RESTRICTIONS_LABEL = "customTimeRestrictionsLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TIME_RESTRICTIONS_LABEL)
  private LocalizedString customTimeRestrictionsLabel;

  public static final String SERIALIZED_NAME_CUSTOM_TRANSIT_TERMINUS_NAME_LABEL = "customTransitTerminusNameLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_TRANSIT_TERMINUS_NAME_LABEL)
  private LocalizedString customTransitTerminusNameLabel;

  public static final String SERIALIZED_NAME_CUSTOM_ZONE_LABEL = "customZoneLabel";
  @SerializedName(SERIALIZED_NAME_CUSTOM_ZONE_LABEL)
  private LocalizedString customZoneLabel;

  public static final String SERIALIZED_NAME_ENABLE_SINGLE_LEG_ITINERARY = "enableSingleLegItinerary";
  @SerializedName(SERIALIZED_NAME_ENABLE_SINGLE_LEG_ITINERARY)
  private Boolean enableSingleLegItinerary;

  public static final String SERIALIZED_NAME_ENABLE_SMART_TAP = "enableSmartTap";
  @SerializedName(SERIALIZED_NAME_ENABLE_SMART_TAP)
  private Boolean enableSmartTap;

  public static final String SERIALIZED_NAME_HERO_IMAGE = "heroImage";
  @SerializedName(SERIALIZED_NAME_HERO_IMAGE)
  private Image heroImage;

  public static final String SERIALIZED_NAME_HEX_BACKGROUND_COLOR = "hexBackgroundColor";
  @SerializedName(SERIALIZED_NAME_HEX_BACKGROUND_COLOR)
  private String hexBackgroundColor;

  public static final String SERIALIZED_NAME_HOMEPAGE_URI = "homepageUri";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_URI)
  private Uri homepageUri;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGE_MODULES_DATA = "imageModulesData";
  @SerializedName(SERIALIZED_NAME_IMAGE_MODULES_DATA)
  private List<ImageModuleData> imageModulesData = new ArrayList<>();

  public static final String SERIALIZED_NAME_INFO_MODULE_DATA = "infoModuleData";
  @SerializedName(SERIALIZED_NAME_INFO_MODULE_DATA)
  private InfoModuleData infoModuleData;

  public static final String SERIALIZED_NAME_ISSUER_NAME = "issuerName";
  @SerializedName(SERIALIZED_NAME_ISSUER_NAME)
  private String issuerName;

  public static final String SERIALIZED_NAME_LANGUAGE_OVERRIDE = "languageOverride";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_OVERRIDE)
  private String languageOverride;

  public static final String SERIALIZED_NAME_LINKS_MODULE_DATA = "linksModuleData";
  @SerializedName(SERIALIZED_NAME_LINKS_MODULE_DATA)
  private LinksModuleData linksModuleData;

  public static final String SERIALIZED_NAME_LOCALIZED_ISSUER_NAME = "localizedIssuerName";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_ISSUER_NAME)
  private LocalizedString localizedIssuerName;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private List<LatLongPoint> locations = new ArrayList<>();

  public static final String SERIALIZED_NAME_LOGO = "logo";
  @SerializedName(SERIALIZED_NAME_LOGO)
  private Image logo;

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<Message> messages = new ArrayList<>();

  /**
   * Identifies whether multiple users and devices will save the same object referencing this class.
   */
  @JsonAdapter(MultipleDevicesAndHoldersAllowedStatusEnum.Adapter.class)
  public enum MultipleDevicesAndHoldersAllowedStatusEnum {
    STATUS_UNSPECIFIED("STATUS_UNSPECIFIED"),
    
    MULTIPLE_HOLDERS("MULTIPLE_HOLDERS"),
    
    MULTIPLE_HOLDERS2("multipleHolders"),
    
    ONE_USER_ALL_DEVICES("ONE_USER_ALL_DEVICES"),
    
    ONE_USER_ALL_DEVICES2("oneUserAllDevices"),
    
    ONE_USER_ONE_DEVICE("ONE_USER_ONE_DEVICE"),
    
    ONE_USER_ONE_DEVICE2("oneUserOneDevice");

    private String value;

    MultipleDevicesAndHoldersAllowedStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MultipleDevicesAndHoldersAllowedStatusEnum fromValue(String value) {
      for (MultipleDevicesAndHoldersAllowedStatusEnum b : MultipleDevicesAndHoldersAllowedStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MultipleDevicesAndHoldersAllowedStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MultipleDevicesAndHoldersAllowedStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MultipleDevicesAndHoldersAllowedStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MultipleDevicesAndHoldersAllowedStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MultipleDevicesAndHoldersAllowedStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MULTIPLE_DEVICES_AND_HOLDERS_ALLOWED_STATUS = "multipleDevicesAndHoldersAllowedStatus";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_DEVICES_AND_HOLDERS_ALLOWED_STATUS)
  private MultipleDevicesAndHoldersAllowedStatusEnum multipleDevicesAndHoldersAllowedStatus;

  public static final String SERIALIZED_NAME_REDEMPTION_ISSUERS = "redemptionIssuers";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_ISSUERS)
  private List<String> redemptionIssuers = new ArrayList<>();

  public static final String SERIALIZED_NAME_REVIEW = "review";
  @SerializedName(SERIALIZED_NAME_REVIEW)
  private Review review;

  /**
   * Required. The status of the class. This field can be set to &#x60;draft&#x60; or &#x60;underReview&#x60; using the insert, patch, or update API calls. Once the review state is changed from &#x60;draft&#x60; it may not be changed back to &#x60;draft&#x60;. You should keep this field to &#x60;draft&#x60; when the class is under development. A &#x60;draft&#x60; class cannot be used to create any object. You should set this field to &#x60;underReview&#x60; when you believe the class is ready for use. The platform will automatically set this field to &#x60;approved&#x60; and it can be immediately used to create or migrate objects. When updating an already &#x60;approved&#x60; class you should keep setting this field to &#x60;underReview&#x60;.
   */
  @JsonAdapter(ReviewStatusEnum.Adapter.class)
  public enum ReviewStatusEnum {
    REVIEW_STATUS_UNSPECIFIED("REVIEW_STATUS_UNSPECIFIED"),
    
    UNDER_REVIEW("UNDER_REVIEW"),
    
    UNDER_REVIEW2("underReview"),
    
    APPROVED("APPROVED"),
    
    APPROVED2("approved"),
    
    REJECTED("REJECTED"),
    
    REJECTED2("rejected"),
    
    DRAFT("DRAFT"),
    
    DRAFT2("draft");

    private String value;

    ReviewStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReviewStatusEnum fromValue(String value) {
      for (ReviewStatusEnum b : ReviewStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReviewStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReviewStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReviewStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReviewStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ReviewStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REVIEW_STATUS = "reviewStatus";
  @SerializedName(SERIALIZED_NAME_REVIEW_STATUS)
  private ReviewStatusEnum reviewStatus;

  public static final String SERIALIZED_NAME_SECURITY_ANIMATION = "securityAnimation";
  @SerializedName(SERIALIZED_NAME_SECURITY_ANIMATION)
  private SecurityAnimation securityAnimation;

  public static final String SERIALIZED_NAME_TEXT_MODULES_DATA = "textModulesData";
  @SerializedName(SERIALIZED_NAME_TEXT_MODULES_DATA)
  private List<TextModuleData> textModulesData = new ArrayList<>();

  public static final String SERIALIZED_NAME_TRANSIT_OPERATOR_NAME = "transitOperatorName";
  @SerializedName(SERIALIZED_NAME_TRANSIT_OPERATOR_NAME)
  private LocalizedString transitOperatorName;

  /**
   * Required. The type of transit this class represents, such as \&quot;bus\&quot;.
   */
  @JsonAdapter(TransitTypeEnum.Adapter.class)
  public enum TransitTypeEnum {
    TRANSIT_TYPE_UNSPECIFIED("TRANSIT_TYPE_UNSPECIFIED"),
    
    BUS("BUS"),
    
    BUS2("bus"),
    
    RAIL("RAIL"),
    
    RAIL2("rail"),
    
    TRAM("TRAM"),
    
    TRAM2("tram"),
    
    FERRY("FERRY"),
    
    FERRY2("ferry"),
    
    OTHER("OTHER"),
    
    OTHER2("other");

    private String value;

    TransitTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransitTypeEnum fromValue(String value) {
      for (TransitTypeEnum b : TransitTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TransitTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransitTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransitTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TransitTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TransitTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TRANSIT_TYPE = "transitType";
  @SerializedName(SERIALIZED_NAME_TRANSIT_TYPE)
  private TransitTypeEnum transitType;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  /**
   * View Unlock Requirement options for the transit ticket.
   */
  @JsonAdapter(ViewUnlockRequirementEnum.Adapter.class)
  public enum ViewUnlockRequirementEnum {
    VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED("VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED"),
    
    UNLOCK_NOT_REQUIRED("UNLOCK_NOT_REQUIRED"),
    
    UNLOCK_REQUIRED_TO_VIEW("UNLOCK_REQUIRED_TO_VIEW");

    private String value;

    ViewUnlockRequirementEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ViewUnlockRequirementEnum fromValue(String value) {
      for (ViewUnlockRequirementEnum b : ViewUnlockRequirementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ViewUnlockRequirementEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ViewUnlockRequirementEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ViewUnlockRequirementEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ViewUnlockRequirementEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ViewUnlockRequirementEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VIEW_UNLOCK_REQUIREMENT = "viewUnlockRequirement";
  @SerializedName(SERIALIZED_NAME_VIEW_UNLOCK_REQUIREMENT)
  private ViewUnlockRequirementEnum viewUnlockRequirement;

  public static final String SERIALIZED_NAME_WATERMARK = "watermark";
  @SerializedName(SERIALIZED_NAME_WATERMARK)
  private Image watermark;

  public static final String SERIALIZED_NAME_WORD_MARK = "wordMark";
  @SerializedName(SERIALIZED_NAME_WORD_MARK)
  private Image wordMark;

  public TransitClass() {
  }

  public TransitClass activationOptions(ActivationOptions activationOptions) {
    this.activationOptions = activationOptions;
    return this;
  }

  /**
   * Get activationOptions
   * @return activationOptions
   */
  @javax.annotation.Nullable
  public ActivationOptions getActivationOptions() {
    return activationOptions;
  }

  public void setActivationOptions(ActivationOptions activationOptions) {
    this.activationOptions = activationOptions;
  }


  public TransitClass allowMultipleUsersPerObject(Boolean allowMultipleUsersPerObject) {
    this.allowMultipleUsersPerObject = allowMultipleUsersPerObject;
    return this;
  }

  /**
   * Deprecated. Use &#x60;multipleDevicesAndHoldersAllowedStatus&#x60; instead.
   * @return allowMultipleUsersPerObject
   */
  @javax.annotation.Nullable
  public Boolean getAllowMultipleUsersPerObject() {
    return allowMultipleUsersPerObject;
  }

  public void setAllowMultipleUsersPerObject(Boolean allowMultipleUsersPerObject) {
    this.allowMultipleUsersPerObject = allowMultipleUsersPerObject;
  }


  public TransitClass callbackOptions(CallbackOptions callbackOptions) {
    this.callbackOptions = callbackOptions;
    return this;
  }

  /**
   * Get callbackOptions
   * @return callbackOptions
   */
  @javax.annotation.Nullable
  public CallbackOptions getCallbackOptions() {
    return callbackOptions;
  }

  public void setCallbackOptions(CallbackOptions callbackOptions) {
    this.callbackOptions = callbackOptions;
  }


  public TransitClass classTemplateInfo(ClassTemplateInfo classTemplateInfo) {
    this.classTemplateInfo = classTemplateInfo;
    return this;
  }

  /**
   * Get classTemplateInfo
   * @return classTemplateInfo
   */
  @javax.annotation.Nullable
  public ClassTemplateInfo getClassTemplateInfo() {
    return classTemplateInfo;
  }

  public void setClassTemplateInfo(ClassTemplateInfo classTemplateInfo) {
    this.classTemplateInfo = classTemplateInfo;
  }


  public TransitClass countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Country code used to display the card&#39;s country (when the user is not in that country), as well as to display localized content when content is not available in the user&#39;s locale.
   * @return countryCode
   */
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public TransitClass customCarriageLabel(LocalizedString customCarriageLabel) {
    this.customCarriageLabel = customCarriageLabel;
    return this;
  }

  /**
   * Get customCarriageLabel
   * @return customCarriageLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomCarriageLabel() {
    return customCarriageLabel;
  }

  public void setCustomCarriageLabel(LocalizedString customCarriageLabel) {
    this.customCarriageLabel = customCarriageLabel;
  }


  public TransitClass customCoachLabel(LocalizedString customCoachLabel) {
    this.customCoachLabel = customCoachLabel;
    return this;
  }

  /**
   * Get customCoachLabel
   * @return customCoachLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomCoachLabel() {
    return customCoachLabel;
  }

  public void setCustomCoachLabel(LocalizedString customCoachLabel) {
    this.customCoachLabel = customCoachLabel;
  }


  public TransitClass customConcessionCategoryLabel(LocalizedString customConcessionCategoryLabel) {
    this.customConcessionCategoryLabel = customConcessionCategoryLabel;
    return this;
  }

  /**
   * Get customConcessionCategoryLabel
   * @return customConcessionCategoryLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomConcessionCategoryLabel() {
    return customConcessionCategoryLabel;
  }

  public void setCustomConcessionCategoryLabel(LocalizedString customConcessionCategoryLabel) {
    this.customConcessionCategoryLabel = customConcessionCategoryLabel;
  }


  public TransitClass customConfirmationCodeLabel(LocalizedString customConfirmationCodeLabel) {
    this.customConfirmationCodeLabel = customConfirmationCodeLabel;
    return this;
  }

  /**
   * Get customConfirmationCodeLabel
   * @return customConfirmationCodeLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomConfirmationCodeLabel() {
    return customConfirmationCodeLabel;
  }

  public void setCustomConfirmationCodeLabel(LocalizedString customConfirmationCodeLabel) {
    this.customConfirmationCodeLabel = customConfirmationCodeLabel;
  }


  public TransitClass customDiscountMessageLabel(LocalizedString customDiscountMessageLabel) {
    this.customDiscountMessageLabel = customDiscountMessageLabel;
    return this;
  }

  /**
   * Get customDiscountMessageLabel
   * @return customDiscountMessageLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomDiscountMessageLabel() {
    return customDiscountMessageLabel;
  }

  public void setCustomDiscountMessageLabel(LocalizedString customDiscountMessageLabel) {
    this.customDiscountMessageLabel = customDiscountMessageLabel;
  }


  public TransitClass customFareClassLabel(LocalizedString customFareClassLabel) {
    this.customFareClassLabel = customFareClassLabel;
    return this;
  }

  /**
   * Get customFareClassLabel
   * @return customFareClassLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomFareClassLabel() {
    return customFareClassLabel;
  }

  public void setCustomFareClassLabel(LocalizedString customFareClassLabel) {
    this.customFareClassLabel = customFareClassLabel;
  }


  public TransitClass customFareNameLabel(LocalizedString customFareNameLabel) {
    this.customFareNameLabel = customFareNameLabel;
    return this;
  }

  /**
   * Get customFareNameLabel
   * @return customFareNameLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomFareNameLabel() {
    return customFareNameLabel;
  }

  public void setCustomFareNameLabel(LocalizedString customFareNameLabel) {
    this.customFareNameLabel = customFareNameLabel;
  }


  public TransitClass customOtherRestrictionsLabel(LocalizedString customOtherRestrictionsLabel) {
    this.customOtherRestrictionsLabel = customOtherRestrictionsLabel;
    return this;
  }

  /**
   * Get customOtherRestrictionsLabel
   * @return customOtherRestrictionsLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomOtherRestrictionsLabel() {
    return customOtherRestrictionsLabel;
  }

  public void setCustomOtherRestrictionsLabel(LocalizedString customOtherRestrictionsLabel) {
    this.customOtherRestrictionsLabel = customOtherRestrictionsLabel;
  }


  public TransitClass customPlatformLabel(LocalizedString customPlatformLabel) {
    this.customPlatformLabel = customPlatformLabel;
    return this;
  }

  /**
   * Get customPlatformLabel
   * @return customPlatformLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomPlatformLabel() {
    return customPlatformLabel;
  }

  public void setCustomPlatformLabel(LocalizedString customPlatformLabel) {
    this.customPlatformLabel = customPlatformLabel;
  }


  public TransitClass customPurchaseFaceValueLabel(LocalizedString customPurchaseFaceValueLabel) {
    this.customPurchaseFaceValueLabel = customPurchaseFaceValueLabel;
    return this;
  }

  /**
   * Get customPurchaseFaceValueLabel
   * @return customPurchaseFaceValueLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomPurchaseFaceValueLabel() {
    return customPurchaseFaceValueLabel;
  }

  public void setCustomPurchaseFaceValueLabel(LocalizedString customPurchaseFaceValueLabel) {
    this.customPurchaseFaceValueLabel = customPurchaseFaceValueLabel;
  }


  public TransitClass customPurchasePriceLabel(LocalizedString customPurchasePriceLabel) {
    this.customPurchasePriceLabel = customPurchasePriceLabel;
    return this;
  }

  /**
   * Get customPurchasePriceLabel
   * @return customPurchasePriceLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomPurchasePriceLabel() {
    return customPurchasePriceLabel;
  }

  public void setCustomPurchasePriceLabel(LocalizedString customPurchasePriceLabel) {
    this.customPurchasePriceLabel = customPurchasePriceLabel;
  }


  public TransitClass customPurchaseReceiptNumberLabel(LocalizedString customPurchaseReceiptNumberLabel) {
    this.customPurchaseReceiptNumberLabel = customPurchaseReceiptNumberLabel;
    return this;
  }

  /**
   * Get customPurchaseReceiptNumberLabel
   * @return customPurchaseReceiptNumberLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomPurchaseReceiptNumberLabel() {
    return customPurchaseReceiptNumberLabel;
  }

  public void setCustomPurchaseReceiptNumberLabel(LocalizedString customPurchaseReceiptNumberLabel) {
    this.customPurchaseReceiptNumberLabel = customPurchaseReceiptNumberLabel;
  }


  public TransitClass customRouteRestrictionsDetailsLabel(LocalizedString customRouteRestrictionsDetailsLabel) {
    this.customRouteRestrictionsDetailsLabel = customRouteRestrictionsDetailsLabel;
    return this;
  }

  /**
   * Get customRouteRestrictionsDetailsLabel
   * @return customRouteRestrictionsDetailsLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomRouteRestrictionsDetailsLabel() {
    return customRouteRestrictionsDetailsLabel;
  }

  public void setCustomRouteRestrictionsDetailsLabel(LocalizedString customRouteRestrictionsDetailsLabel) {
    this.customRouteRestrictionsDetailsLabel = customRouteRestrictionsDetailsLabel;
  }


  public TransitClass customRouteRestrictionsLabel(LocalizedString customRouteRestrictionsLabel) {
    this.customRouteRestrictionsLabel = customRouteRestrictionsLabel;
    return this;
  }

  /**
   * Get customRouteRestrictionsLabel
   * @return customRouteRestrictionsLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomRouteRestrictionsLabel() {
    return customRouteRestrictionsLabel;
  }

  public void setCustomRouteRestrictionsLabel(LocalizedString customRouteRestrictionsLabel) {
    this.customRouteRestrictionsLabel = customRouteRestrictionsLabel;
  }


  public TransitClass customSeatLabel(LocalizedString customSeatLabel) {
    this.customSeatLabel = customSeatLabel;
    return this;
  }

  /**
   * Get customSeatLabel
   * @return customSeatLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomSeatLabel() {
    return customSeatLabel;
  }

  public void setCustomSeatLabel(LocalizedString customSeatLabel) {
    this.customSeatLabel = customSeatLabel;
  }


  public TransitClass customTicketNumberLabel(LocalizedString customTicketNumberLabel) {
    this.customTicketNumberLabel = customTicketNumberLabel;
    return this;
  }

  /**
   * Get customTicketNumberLabel
   * @return customTicketNumberLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomTicketNumberLabel() {
    return customTicketNumberLabel;
  }

  public void setCustomTicketNumberLabel(LocalizedString customTicketNumberLabel) {
    this.customTicketNumberLabel = customTicketNumberLabel;
  }


  public TransitClass customTimeRestrictionsLabel(LocalizedString customTimeRestrictionsLabel) {
    this.customTimeRestrictionsLabel = customTimeRestrictionsLabel;
    return this;
  }

  /**
   * Get customTimeRestrictionsLabel
   * @return customTimeRestrictionsLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomTimeRestrictionsLabel() {
    return customTimeRestrictionsLabel;
  }

  public void setCustomTimeRestrictionsLabel(LocalizedString customTimeRestrictionsLabel) {
    this.customTimeRestrictionsLabel = customTimeRestrictionsLabel;
  }


  public TransitClass customTransitTerminusNameLabel(LocalizedString customTransitTerminusNameLabel) {
    this.customTransitTerminusNameLabel = customTransitTerminusNameLabel;
    return this;
  }

  /**
   * Get customTransitTerminusNameLabel
   * @return customTransitTerminusNameLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomTransitTerminusNameLabel() {
    return customTransitTerminusNameLabel;
  }

  public void setCustomTransitTerminusNameLabel(LocalizedString customTransitTerminusNameLabel) {
    this.customTransitTerminusNameLabel = customTransitTerminusNameLabel;
  }


  public TransitClass customZoneLabel(LocalizedString customZoneLabel) {
    this.customZoneLabel = customZoneLabel;
    return this;
  }

  /**
   * Get customZoneLabel
   * @return customZoneLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getCustomZoneLabel() {
    return customZoneLabel;
  }

  public void setCustomZoneLabel(LocalizedString customZoneLabel) {
    this.customZoneLabel = customZoneLabel;
  }


  public TransitClass enableSingleLegItinerary(Boolean enableSingleLegItinerary) {
    this.enableSingleLegItinerary = enableSingleLegItinerary;
    return this;
  }

  /**
   * Controls the display of the single-leg itinerary for this class. By default, an itinerary will only display for multi-leg trips.
   * @return enableSingleLegItinerary
   */
  @javax.annotation.Nullable
  public Boolean getEnableSingleLegItinerary() {
    return enableSingleLegItinerary;
  }

  public void setEnableSingleLegItinerary(Boolean enableSingleLegItinerary) {
    this.enableSingleLegItinerary = enableSingleLegItinerary;
  }


  public TransitClass enableSmartTap(Boolean enableSmartTap) {
    this.enableSmartTap = enableSmartTap;
    return this;
  }

  /**
   * Identifies whether this class supports Smart Tap. The &#x60;redemptionIssuers&#x60; and object level &#x60;smartTapRedemptionLevel&#x60; fields must also be set up correctly in order for a pass to support Smart Tap.
   * @return enableSmartTap
   */
  @javax.annotation.Nullable
  public Boolean getEnableSmartTap() {
    return enableSmartTap;
  }

  public void setEnableSmartTap(Boolean enableSmartTap) {
    this.enableSmartTap = enableSmartTap;
  }


  public TransitClass heroImage(Image heroImage) {
    this.heroImage = heroImage;
    return this;
  }

  /**
   * Get heroImage
   * @return heroImage
   */
  @javax.annotation.Nullable
  public Image getHeroImage() {
    return heroImage;
  }

  public void setHeroImage(Image heroImage) {
    this.heroImage = heroImage;
  }


  public TransitClass hexBackgroundColor(String hexBackgroundColor) {
    this.hexBackgroundColor = hexBackgroundColor;
    return this;
  }

  /**
   * The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as &#x60;#ffcc00&#x60;. You can also use the shorthand version of the RGB triplet which is #rgb, such as &#x60;#fc0&#x60;.
   * @return hexBackgroundColor
   */
  @javax.annotation.Nullable
  public String getHexBackgroundColor() {
    return hexBackgroundColor;
  }

  public void setHexBackgroundColor(String hexBackgroundColor) {
    this.hexBackgroundColor = hexBackgroundColor;
  }


  public TransitClass homepageUri(Uri homepageUri) {
    this.homepageUri = homepageUri;
    return this;
  }

  /**
   * Get homepageUri
   * @return homepageUri
   */
  @javax.annotation.Nullable
  public Uri getHomepageUri() {
    return homepageUri;
  }

  public void setHomepageUri(Uri homepageUri) {
    this.homepageUri = homepageUri;
  }


  public TransitClass id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, &#39;.&#39;, &#39;_&#39;, or &#39;-&#39;.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public TransitClass imageModulesData(List<ImageModuleData> imageModulesData) {
    this.imageModulesData = imageModulesData;
    return this;
  }

  public TransitClass addImageModulesDataItem(ImageModuleData imageModulesDataItem) {
    if (this.imageModulesData == null) {
      this.imageModulesData = new ArrayList<>();
    }
    this.imageModulesData.add(imageModulesDataItem);
    return this;
  }

  /**
   * Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.
   * @return imageModulesData
   */
  @javax.annotation.Nullable
  public List<ImageModuleData> getImageModulesData() {
    return imageModulesData;
  }

  public void setImageModulesData(List<ImageModuleData> imageModulesData) {
    this.imageModulesData = imageModulesData;
  }


  public TransitClass infoModuleData(InfoModuleData infoModuleData) {
    this.infoModuleData = infoModuleData;
    return this;
  }

  /**
   * Get infoModuleData
   * @return infoModuleData
   */
  @javax.annotation.Nullable
  public InfoModuleData getInfoModuleData() {
    return infoModuleData;
  }

  public void setInfoModuleData(InfoModuleData infoModuleData) {
    this.infoModuleData = infoModuleData;
  }


  public TransitClass issuerName(String issuerName) {
    this.issuerName = issuerName;
    return this;
  }

  /**
   * Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.
   * @return issuerName
   */
  @javax.annotation.Nullable
  public String getIssuerName() {
    return issuerName;
  }

  public void setIssuerName(String issuerName) {
    this.issuerName = issuerName;
  }


  public TransitClass languageOverride(String languageOverride) {
    this.languageOverride = languageOverride;
    return this;
  }

  /**
   * If this field is present, transit tickets served to a user&#39;s device will always be in this language. Represents the BCP 47 language tag. Example values are \&quot;en-US\&quot;, \&quot;en-GB\&quot;, \&quot;de\&quot;, or \&quot;de-AT\&quot;.
   * @return languageOverride
   */
  @javax.annotation.Nullable
  public String getLanguageOverride() {
    return languageOverride;
  }

  public void setLanguageOverride(String languageOverride) {
    this.languageOverride = languageOverride;
  }


  public TransitClass linksModuleData(LinksModuleData linksModuleData) {
    this.linksModuleData = linksModuleData;
    return this;
  }

  /**
   * Get linksModuleData
   * @return linksModuleData
   */
  @javax.annotation.Nullable
  public LinksModuleData getLinksModuleData() {
    return linksModuleData;
  }

  public void setLinksModuleData(LinksModuleData linksModuleData) {
    this.linksModuleData = linksModuleData;
  }


  public TransitClass localizedIssuerName(LocalizedString localizedIssuerName) {
    this.localizedIssuerName = localizedIssuerName;
    return this;
  }

  /**
   * Get localizedIssuerName
   * @return localizedIssuerName
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedIssuerName() {
    return localizedIssuerName;
  }

  public void setLocalizedIssuerName(LocalizedString localizedIssuerName) {
    this.localizedIssuerName = localizedIssuerName;
  }


  public TransitClass locations(List<LatLongPoint> locations) {
    this.locations = locations;
    return this;
  }

  public TransitClass addLocationsItem(LatLongPoint locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

  /**
   * Note: This field is currently not supported to trigger geo notifications.
   * @return locations
   */
  @javax.annotation.Nullable
  public List<LatLongPoint> getLocations() {
    return locations;
  }

  public void setLocations(List<LatLongPoint> locations) {
    this.locations = locations;
  }


  public TransitClass logo(Image logo) {
    this.logo = logo;
    return this;
  }

  /**
   * Get logo
   * @return logo
   */
  @javax.annotation.Nullable
  public Image getLogo() {
    return logo;
  }

  public void setLogo(Image logo) {
    this.logo = logo;
  }


  public TransitClass messages(List<Message> messages) {
    this.messages = messages;
    return this;
  }

  public TransitClass addMessagesItem(Message messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.
   * @return messages
   */
  @javax.annotation.Nullable
  public List<Message> getMessages() {
    return messages;
  }

  public void setMessages(List<Message> messages) {
    this.messages = messages;
  }


  public TransitClass multipleDevicesAndHoldersAllowedStatus(MultipleDevicesAndHoldersAllowedStatusEnum multipleDevicesAndHoldersAllowedStatus) {
    this.multipleDevicesAndHoldersAllowedStatus = multipleDevicesAndHoldersAllowedStatus;
    return this;
  }

  /**
   * Identifies whether multiple users and devices will save the same object referencing this class.
   * @return multipleDevicesAndHoldersAllowedStatus
   */
  @javax.annotation.Nullable
  public MultipleDevicesAndHoldersAllowedStatusEnum getMultipleDevicesAndHoldersAllowedStatus() {
    return multipleDevicesAndHoldersAllowedStatus;
  }

  public void setMultipleDevicesAndHoldersAllowedStatus(MultipleDevicesAndHoldersAllowedStatusEnum multipleDevicesAndHoldersAllowedStatus) {
    this.multipleDevicesAndHoldersAllowedStatus = multipleDevicesAndHoldersAllowedStatus;
  }


  public TransitClass redemptionIssuers(List<String> redemptionIssuers) {
    this.redemptionIssuers = redemptionIssuers;
    return this;
  }

  public TransitClass addRedemptionIssuersItem(String redemptionIssuersItem) {
    if (this.redemptionIssuers == null) {
      this.redemptionIssuers = new ArrayList<>();
    }
    this.redemptionIssuers.add(redemptionIssuersItem);
    return this;
  }

  /**
   * Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The &#x60;enableSmartTap&#x60; and object level &#x60;smartTapRedemptionLevel&#x60; fields must also be set up correctly in order for a pass to support Smart Tap.
   * @return redemptionIssuers
   */
  @javax.annotation.Nullable
  public List<String> getRedemptionIssuers() {
    return redemptionIssuers;
  }

  public void setRedemptionIssuers(List<String> redemptionIssuers) {
    this.redemptionIssuers = redemptionIssuers;
  }


  public TransitClass review(Review review) {
    this.review = review;
    return this;
  }

  /**
   * Get review
   * @return review
   */
  @javax.annotation.Nullable
  public Review getReview() {
    return review;
  }

  public void setReview(Review review) {
    this.review = review;
  }


  public TransitClass reviewStatus(ReviewStatusEnum reviewStatus) {
    this.reviewStatus = reviewStatus;
    return this;
  }

  /**
   * Required. The status of the class. This field can be set to &#x60;draft&#x60; or &#x60;underReview&#x60; using the insert, patch, or update API calls. Once the review state is changed from &#x60;draft&#x60; it may not be changed back to &#x60;draft&#x60;. You should keep this field to &#x60;draft&#x60; when the class is under development. A &#x60;draft&#x60; class cannot be used to create any object. You should set this field to &#x60;underReview&#x60; when you believe the class is ready for use. The platform will automatically set this field to &#x60;approved&#x60; and it can be immediately used to create or migrate objects. When updating an already &#x60;approved&#x60; class you should keep setting this field to &#x60;underReview&#x60;.
   * @return reviewStatus
   */
  @javax.annotation.Nullable
  public ReviewStatusEnum getReviewStatus() {
    return reviewStatus;
  }

  public void setReviewStatus(ReviewStatusEnum reviewStatus) {
    this.reviewStatus = reviewStatus;
  }


  public TransitClass securityAnimation(SecurityAnimation securityAnimation) {
    this.securityAnimation = securityAnimation;
    return this;
  }

  /**
   * Get securityAnimation
   * @return securityAnimation
   */
  @javax.annotation.Nullable
  public SecurityAnimation getSecurityAnimation() {
    return securityAnimation;
  }

  public void setSecurityAnimation(SecurityAnimation securityAnimation) {
    this.securityAnimation = securityAnimation;
  }


  public TransitClass textModulesData(List<TextModuleData> textModulesData) {
    this.textModulesData = textModulesData;
    return this;
  }

  public TransitClass addTextModulesDataItem(TextModuleData textModulesDataItem) {
    if (this.textModulesData == null) {
      this.textModulesData = new ArrayList<>();
    }
    this.textModulesData.add(textModulesDataItem);
    return this;
  }

  /**
   * Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.
   * @return textModulesData
   */
  @javax.annotation.Nullable
  public List<TextModuleData> getTextModulesData() {
    return textModulesData;
  }

  public void setTextModulesData(List<TextModuleData> textModulesData) {
    this.textModulesData = textModulesData;
  }


  public TransitClass transitOperatorName(LocalizedString transitOperatorName) {
    this.transitOperatorName = transitOperatorName;
    return this;
  }

  /**
   * Get transitOperatorName
   * @return transitOperatorName
   */
  @javax.annotation.Nullable
  public LocalizedString getTransitOperatorName() {
    return transitOperatorName;
  }

  public void setTransitOperatorName(LocalizedString transitOperatorName) {
    this.transitOperatorName = transitOperatorName;
  }


  public TransitClass transitType(TransitTypeEnum transitType) {
    this.transitType = transitType;
    return this;
  }

  /**
   * Required. The type of transit this class represents, such as \&quot;bus\&quot;.
   * @return transitType
   */
  @javax.annotation.Nullable
  public TransitTypeEnum getTransitType() {
    return transitType;
  }

  public void setTransitType(TransitTypeEnum transitType) {
    this.transitType = transitType;
  }


  public TransitClass version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Deprecated
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public TransitClass viewUnlockRequirement(ViewUnlockRequirementEnum viewUnlockRequirement) {
    this.viewUnlockRequirement = viewUnlockRequirement;
    return this;
  }

  /**
   * View Unlock Requirement options for the transit ticket.
   * @return viewUnlockRequirement
   */
  @javax.annotation.Nullable
  public ViewUnlockRequirementEnum getViewUnlockRequirement() {
    return viewUnlockRequirement;
  }

  public void setViewUnlockRequirement(ViewUnlockRequirementEnum viewUnlockRequirement) {
    this.viewUnlockRequirement = viewUnlockRequirement;
  }


  public TransitClass watermark(Image watermark) {
    this.watermark = watermark;
    return this;
  }

  /**
   * Get watermark
   * @return watermark
   */
  @javax.annotation.Nullable
  public Image getWatermark() {
    return watermark;
  }

  public void setWatermark(Image watermark) {
    this.watermark = watermark;
  }


  public TransitClass wordMark(Image wordMark) {
    this.wordMark = wordMark;
    return this;
  }

  /**
   * Get wordMark
   * @return wordMark
   */
  @javax.annotation.Nullable
  public Image getWordMark() {
    return wordMark;
  }

  public void setWordMark(Image wordMark) {
    this.wordMark = wordMark;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TransitClass transitClass = (TransitClass) o;
    return Objects.equals(this.activationOptions, transitClass.activationOptions) &&
        Objects.equals(this.allowMultipleUsersPerObject, transitClass.allowMultipleUsersPerObject) &&
        Objects.equals(this.callbackOptions, transitClass.callbackOptions) &&
        Objects.equals(this.classTemplateInfo, transitClass.classTemplateInfo) &&
        Objects.equals(this.countryCode, transitClass.countryCode) &&
        Objects.equals(this.customCarriageLabel, transitClass.customCarriageLabel) &&
        Objects.equals(this.customCoachLabel, transitClass.customCoachLabel) &&
        Objects.equals(this.customConcessionCategoryLabel, transitClass.customConcessionCategoryLabel) &&
        Objects.equals(this.customConfirmationCodeLabel, transitClass.customConfirmationCodeLabel) &&
        Objects.equals(this.customDiscountMessageLabel, transitClass.customDiscountMessageLabel) &&
        Objects.equals(this.customFareClassLabel, transitClass.customFareClassLabel) &&
        Objects.equals(this.customFareNameLabel, transitClass.customFareNameLabel) &&
        Objects.equals(this.customOtherRestrictionsLabel, transitClass.customOtherRestrictionsLabel) &&
        Objects.equals(this.customPlatformLabel, transitClass.customPlatformLabel) &&
        Objects.equals(this.customPurchaseFaceValueLabel, transitClass.customPurchaseFaceValueLabel) &&
        Objects.equals(this.customPurchasePriceLabel, transitClass.customPurchasePriceLabel) &&
        Objects.equals(this.customPurchaseReceiptNumberLabel, transitClass.customPurchaseReceiptNumberLabel) &&
        Objects.equals(this.customRouteRestrictionsDetailsLabel, transitClass.customRouteRestrictionsDetailsLabel) &&
        Objects.equals(this.customRouteRestrictionsLabel, transitClass.customRouteRestrictionsLabel) &&
        Objects.equals(this.customSeatLabel, transitClass.customSeatLabel) &&
        Objects.equals(this.customTicketNumberLabel, transitClass.customTicketNumberLabel) &&
        Objects.equals(this.customTimeRestrictionsLabel, transitClass.customTimeRestrictionsLabel) &&
        Objects.equals(this.customTransitTerminusNameLabel, transitClass.customTransitTerminusNameLabel) &&
        Objects.equals(this.customZoneLabel, transitClass.customZoneLabel) &&
        Objects.equals(this.enableSingleLegItinerary, transitClass.enableSingleLegItinerary) &&
        Objects.equals(this.enableSmartTap, transitClass.enableSmartTap) &&
        Objects.equals(this.heroImage, transitClass.heroImage) &&
        Objects.equals(this.hexBackgroundColor, transitClass.hexBackgroundColor) &&
        Objects.equals(this.homepageUri, transitClass.homepageUri) &&
        Objects.equals(this.id, transitClass.id) &&
        Objects.equals(this.imageModulesData, transitClass.imageModulesData) &&
        Objects.equals(this.infoModuleData, transitClass.infoModuleData) &&
        Objects.equals(this.issuerName, transitClass.issuerName) &&
        Objects.equals(this.languageOverride, transitClass.languageOverride) &&
        Objects.equals(this.linksModuleData, transitClass.linksModuleData) &&
        Objects.equals(this.localizedIssuerName, transitClass.localizedIssuerName) &&
        Objects.equals(this.locations, transitClass.locations) &&
        Objects.equals(this.logo, transitClass.logo) &&
        Objects.equals(this.messages, transitClass.messages) &&
        Objects.equals(this.multipleDevicesAndHoldersAllowedStatus, transitClass.multipleDevicesAndHoldersAllowedStatus) &&
        Objects.equals(this.redemptionIssuers, transitClass.redemptionIssuers) &&
        Objects.equals(this.review, transitClass.review) &&
        Objects.equals(this.reviewStatus, transitClass.reviewStatus) &&
        Objects.equals(this.securityAnimation, transitClass.securityAnimation) &&
        Objects.equals(this.textModulesData, transitClass.textModulesData) &&
        Objects.equals(this.transitOperatorName, transitClass.transitOperatorName) &&
        Objects.equals(this.transitType, transitClass.transitType) &&
        Objects.equals(this.version, transitClass.version) &&
        Objects.equals(this.viewUnlockRequirement, transitClass.viewUnlockRequirement) &&
        Objects.equals(this.watermark, transitClass.watermark) &&
        Objects.equals(this.wordMark, transitClass.wordMark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activationOptions, allowMultipleUsersPerObject, callbackOptions, classTemplateInfo, countryCode, customCarriageLabel, customCoachLabel, customConcessionCategoryLabel, customConfirmationCodeLabel, customDiscountMessageLabel, customFareClassLabel, customFareNameLabel, customOtherRestrictionsLabel, customPlatformLabel, customPurchaseFaceValueLabel, customPurchasePriceLabel, customPurchaseReceiptNumberLabel, customRouteRestrictionsDetailsLabel, customRouteRestrictionsLabel, customSeatLabel, customTicketNumberLabel, customTimeRestrictionsLabel, customTransitTerminusNameLabel, customZoneLabel, enableSingleLegItinerary, enableSmartTap, heroImage, hexBackgroundColor, homepageUri, id, imageModulesData, infoModuleData, issuerName, languageOverride, linksModuleData, localizedIssuerName, locations, logo, messages, multipleDevicesAndHoldersAllowedStatus, redemptionIssuers, review, reviewStatus, securityAnimation, textModulesData, transitOperatorName, transitType, version, viewUnlockRequirement, watermark, wordMark);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TransitClass {\n");
    sb.append("    activationOptions: ").append(toIndentedString(activationOptions)).append("\n");
    sb.append("    allowMultipleUsersPerObject: ").append(toIndentedString(allowMultipleUsersPerObject)).append("\n");
    sb.append("    callbackOptions: ").append(toIndentedString(callbackOptions)).append("\n");
    sb.append("    classTemplateInfo: ").append(toIndentedString(classTemplateInfo)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    customCarriageLabel: ").append(toIndentedString(customCarriageLabel)).append("\n");
    sb.append("    customCoachLabel: ").append(toIndentedString(customCoachLabel)).append("\n");
    sb.append("    customConcessionCategoryLabel: ").append(toIndentedString(customConcessionCategoryLabel)).append("\n");
    sb.append("    customConfirmationCodeLabel: ").append(toIndentedString(customConfirmationCodeLabel)).append("\n");
    sb.append("    customDiscountMessageLabel: ").append(toIndentedString(customDiscountMessageLabel)).append("\n");
    sb.append("    customFareClassLabel: ").append(toIndentedString(customFareClassLabel)).append("\n");
    sb.append("    customFareNameLabel: ").append(toIndentedString(customFareNameLabel)).append("\n");
    sb.append("    customOtherRestrictionsLabel: ").append(toIndentedString(customOtherRestrictionsLabel)).append("\n");
    sb.append("    customPlatformLabel: ").append(toIndentedString(customPlatformLabel)).append("\n");
    sb.append("    customPurchaseFaceValueLabel: ").append(toIndentedString(customPurchaseFaceValueLabel)).append("\n");
    sb.append("    customPurchasePriceLabel: ").append(toIndentedString(customPurchasePriceLabel)).append("\n");
    sb.append("    customPurchaseReceiptNumberLabel: ").append(toIndentedString(customPurchaseReceiptNumberLabel)).append("\n");
    sb.append("    customRouteRestrictionsDetailsLabel: ").append(toIndentedString(customRouteRestrictionsDetailsLabel)).append("\n");
    sb.append("    customRouteRestrictionsLabel: ").append(toIndentedString(customRouteRestrictionsLabel)).append("\n");
    sb.append("    customSeatLabel: ").append(toIndentedString(customSeatLabel)).append("\n");
    sb.append("    customTicketNumberLabel: ").append(toIndentedString(customTicketNumberLabel)).append("\n");
    sb.append("    customTimeRestrictionsLabel: ").append(toIndentedString(customTimeRestrictionsLabel)).append("\n");
    sb.append("    customTransitTerminusNameLabel: ").append(toIndentedString(customTransitTerminusNameLabel)).append("\n");
    sb.append("    customZoneLabel: ").append(toIndentedString(customZoneLabel)).append("\n");
    sb.append("    enableSingleLegItinerary: ").append(toIndentedString(enableSingleLegItinerary)).append("\n");
    sb.append("    enableSmartTap: ").append(toIndentedString(enableSmartTap)).append("\n");
    sb.append("    heroImage: ").append(toIndentedString(heroImage)).append("\n");
    sb.append("    hexBackgroundColor: ").append(toIndentedString(hexBackgroundColor)).append("\n");
    sb.append("    homepageUri: ").append(toIndentedString(homepageUri)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageModulesData: ").append(toIndentedString(imageModulesData)).append("\n");
    sb.append("    infoModuleData: ").append(toIndentedString(infoModuleData)).append("\n");
    sb.append("    issuerName: ").append(toIndentedString(issuerName)).append("\n");
    sb.append("    languageOverride: ").append(toIndentedString(languageOverride)).append("\n");
    sb.append("    linksModuleData: ").append(toIndentedString(linksModuleData)).append("\n");
    sb.append("    localizedIssuerName: ").append(toIndentedString(localizedIssuerName)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    logo: ").append(toIndentedString(logo)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    multipleDevicesAndHoldersAllowedStatus: ").append(toIndentedString(multipleDevicesAndHoldersAllowedStatus)).append("\n");
    sb.append("    redemptionIssuers: ").append(toIndentedString(redemptionIssuers)).append("\n");
    sb.append("    review: ").append(toIndentedString(review)).append("\n");
    sb.append("    reviewStatus: ").append(toIndentedString(reviewStatus)).append("\n");
    sb.append("    securityAnimation: ").append(toIndentedString(securityAnimation)).append("\n");
    sb.append("    textModulesData: ").append(toIndentedString(textModulesData)).append("\n");
    sb.append("    transitOperatorName: ").append(toIndentedString(transitOperatorName)).append("\n");
    sb.append("    transitType: ").append(toIndentedString(transitType)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    viewUnlockRequirement: ").append(toIndentedString(viewUnlockRequirement)).append("\n");
    sb.append("    watermark: ").append(toIndentedString(watermark)).append("\n");
    sb.append("    wordMark: ").append(toIndentedString(wordMark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activationOptions");
    openapiFields.add("allowMultipleUsersPerObject");
    openapiFields.add("callbackOptions");
    openapiFields.add("classTemplateInfo");
    openapiFields.add("countryCode");
    openapiFields.add("customCarriageLabel");
    openapiFields.add("customCoachLabel");
    openapiFields.add("customConcessionCategoryLabel");
    openapiFields.add("customConfirmationCodeLabel");
    openapiFields.add("customDiscountMessageLabel");
    openapiFields.add("customFareClassLabel");
    openapiFields.add("customFareNameLabel");
    openapiFields.add("customOtherRestrictionsLabel");
    openapiFields.add("customPlatformLabel");
    openapiFields.add("customPurchaseFaceValueLabel");
    openapiFields.add("customPurchasePriceLabel");
    openapiFields.add("customPurchaseReceiptNumberLabel");
    openapiFields.add("customRouteRestrictionsDetailsLabel");
    openapiFields.add("customRouteRestrictionsLabel");
    openapiFields.add("customSeatLabel");
    openapiFields.add("customTicketNumberLabel");
    openapiFields.add("customTimeRestrictionsLabel");
    openapiFields.add("customTransitTerminusNameLabel");
    openapiFields.add("customZoneLabel");
    openapiFields.add("enableSingleLegItinerary");
    openapiFields.add("enableSmartTap");
    openapiFields.add("heroImage");
    openapiFields.add("hexBackgroundColor");
    openapiFields.add("homepageUri");
    openapiFields.add("id");
    openapiFields.add("imageModulesData");
    openapiFields.add("infoModuleData");
    openapiFields.add("issuerName");
    openapiFields.add("languageOverride");
    openapiFields.add("linksModuleData");
    openapiFields.add("localizedIssuerName");
    openapiFields.add("locations");
    openapiFields.add("logo");
    openapiFields.add("messages");
    openapiFields.add("multipleDevicesAndHoldersAllowedStatus");
    openapiFields.add("redemptionIssuers");
    openapiFields.add("review");
    openapiFields.add("reviewStatus");
    openapiFields.add("securityAnimation");
    openapiFields.add("textModulesData");
    openapiFields.add("transitOperatorName");
    openapiFields.add("transitType");
    openapiFields.add("version");
    openapiFields.add("viewUnlockRequirement");
    openapiFields.add("watermark");
    openapiFields.add("wordMark");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to TransitClass
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TransitClass.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TransitClass is not found in the empty JSON string", TransitClass.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TransitClass.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TransitClass` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `activationOptions`
      if (jsonObj.get("activationOptions") != null && !jsonObj.get("activationOptions").isJsonNull()) {
        ActivationOptions.validateJsonElement(jsonObj.get("activationOptions"));
      }
      // validate the optional field `callbackOptions`
      if (jsonObj.get("callbackOptions") != null && !jsonObj.get("callbackOptions").isJsonNull()) {
        CallbackOptions.validateJsonElement(jsonObj.get("callbackOptions"));
      }
      // validate the optional field `classTemplateInfo`
      if (jsonObj.get("classTemplateInfo") != null && !jsonObj.get("classTemplateInfo").isJsonNull()) {
        ClassTemplateInfo.validateJsonElement(jsonObj.get("classTemplateInfo"));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      // validate the optional field `customCarriageLabel`
      if (jsonObj.get("customCarriageLabel") != null && !jsonObj.get("customCarriageLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customCarriageLabel"));
      }
      // validate the optional field `customCoachLabel`
      if (jsonObj.get("customCoachLabel") != null && !jsonObj.get("customCoachLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customCoachLabel"));
      }
      // validate the optional field `customConcessionCategoryLabel`
      if (jsonObj.get("customConcessionCategoryLabel") != null && !jsonObj.get("customConcessionCategoryLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customConcessionCategoryLabel"));
      }
      // validate the optional field `customConfirmationCodeLabel`
      if (jsonObj.get("customConfirmationCodeLabel") != null && !jsonObj.get("customConfirmationCodeLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customConfirmationCodeLabel"));
      }
      // validate the optional field `customDiscountMessageLabel`
      if (jsonObj.get("customDiscountMessageLabel") != null && !jsonObj.get("customDiscountMessageLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customDiscountMessageLabel"));
      }
      // validate the optional field `customFareClassLabel`
      if (jsonObj.get("customFareClassLabel") != null && !jsonObj.get("customFareClassLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customFareClassLabel"));
      }
      // validate the optional field `customFareNameLabel`
      if (jsonObj.get("customFareNameLabel") != null && !jsonObj.get("customFareNameLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customFareNameLabel"));
      }
      // validate the optional field `customOtherRestrictionsLabel`
      if (jsonObj.get("customOtherRestrictionsLabel") != null && !jsonObj.get("customOtherRestrictionsLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customOtherRestrictionsLabel"));
      }
      // validate the optional field `customPlatformLabel`
      if (jsonObj.get("customPlatformLabel") != null && !jsonObj.get("customPlatformLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customPlatformLabel"));
      }
      // validate the optional field `customPurchaseFaceValueLabel`
      if (jsonObj.get("customPurchaseFaceValueLabel") != null && !jsonObj.get("customPurchaseFaceValueLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customPurchaseFaceValueLabel"));
      }
      // validate the optional field `customPurchasePriceLabel`
      if (jsonObj.get("customPurchasePriceLabel") != null && !jsonObj.get("customPurchasePriceLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customPurchasePriceLabel"));
      }
      // validate the optional field `customPurchaseReceiptNumberLabel`
      if (jsonObj.get("customPurchaseReceiptNumberLabel") != null && !jsonObj.get("customPurchaseReceiptNumberLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customPurchaseReceiptNumberLabel"));
      }
      // validate the optional field `customRouteRestrictionsDetailsLabel`
      if (jsonObj.get("customRouteRestrictionsDetailsLabel") != null && !jsonObj.get("customRouteRestrictionsDetailsLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customRouteRestrictionsDetailsLabel"));
      }
      // validate the optional field `customRouteRestrictionsLabel`
      if (jsonObj.get("customRouteRestrictionsLabel") != null && !jsonObj.get("customRouteRestrictionsLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customRouteRestrictionsLabel"));
      }
      // validate the optional field `customSeatLabel`
      if (jsonObj.get("customSeatLabel") != null && !jsonObj.get("customSeatLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customSeatLabel"));
      }
      // validate the optional field `customTicketNumberLabel`
      if (jsonObj.get("customTicketNumberLabel") != null && !jsonObj.get("customTicketNumberLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customTicketNumberLabel"));
      }
      // validate the optional field `customTimeRestrictionsLabel`
      if (jsonObj.get("customTimeRestrictionsLabel") != null && !jsonObj.get("customTimeRestrictionsLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customTimeRestrictionsLabel"));
      }
      // validate the optional field `customTransitTerminusNameLabel`
      if (jsonObj.get("customTransitTerminusNameLabel") != null && !jsonObj.get("customTransitTerminusNameLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customTransitTerminusNameLabel"));
      }
      // validate the optional field `customZoneLabel`
      if (jsonObj.get("customZoneLabel") != null && !jsonObj.get("customZoneLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("customZoneLabel"));
      }
      // validate the optional field `heroImage`
      if (jsonObj.get("heroImage") != null && !jsonObj.get("heroImage").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("heroImage"));
      }
      if ((jsonObj.get("hexBackgroundColor") != null && !jsonObj.get("hexBackgroundColor").isJsonNull()) && !jsonObj.get("hexBackgroundColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hexBackgroundColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hexBackgroundColor").toString()));
      }
      // validate the optional field `homepageUri`
      if (jsonObj.get("homepageUri") != null && !jsonObj.get("homepageUri").isJsonNull()) {
        Uri.validateJsonElement(jsonObj.get("homepageUri"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("imageModulesData") != null && !jsonObj.get("imageModulesData").isJsonNull()) {
        JsonArray jsonArrayimageModulesData = jsonObj.getAsJsonArray("imageModulesData");
        if (jsonArrayimageModulesData != null) {
          // ensure the json data is an array
          if (!jsonObj.get("imageModulesData").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `imageModulesData` to be an array in the JSON string but got `%s`", jsonObj.get("imageModulesData").toString()));
          }

          // validate the optional field `imageModulesData` (array)
          for (int i = 0; i < jsonArrayimageModulesData.size(); i++) {
            ImageModuleData.validateJsonElement(jsonArrayimageModulesData.get(i));
          };
        }
      }
      // validate the optional field `infoModuleData`
      if (jsonObj.get("infoModuleData") != null && !jsonObj.get("infoModuleData").isJsonNull()) {
        InfoModuleData.validateJsonElement(jsonObj.get("infoModuleData"));
      }
      if ((jsonObj.get("issuerName") != null && !jsonObj.get("issuerName").isJsonNull()) && !jsonObj.get("issuerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuerName").toString()));
      }
      if ((jsonObj.get("languageOverride") != null && !jsonObj.get("languageOverride").isJsonNull()) && !jsonObj.get("languageOverride").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `languageOverride` to be a primitive type in the JSON string but got `%s`", jsonObj.get("languageOverride").toString()));
      }
      // validate the optional field `linksModuleData`
      if (jsonObj.get("linksModuleData") != null && !jsonObj.get("linksModuleData").isJsonNull()) {
        LinksModuleData.validateJsonElement(jsonObj.get("linksModuleData"));
      }
      // validate the optional field `localizedIssuerName`
      if (jsonObj.get("localizedIssuerName") != null && !jsonObj.get("localizedIssuerName").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedIssuerName"));
      }
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull()) {
        JsonArray jsonArraylocations = jsonObj.getAsJsonArray("locations");
        if (jsonArraylocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("locations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `locations` to be an array in the JSON string but got `%s`", jsonObj.get("locations").toString()));
          }

          // validate the optional field `locations` (array)
          for (int i = 0; i < jsonArraylocations.size(); i++) {
            LatLongPoint.validateJsonElement(jsonArraylocations.get(i));
          };
        }
      }
      // validate the optional field `logo`
      if (jsonObj.get("logo") != null && !jsonObj.get("logo").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("logo"));
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            Message.validateJsonElement(jsonArraymessages.get(i));
          };
        }
      }
      if ((jsonObj.get("multipleDevicesAndHoldersAllowedStatus") != null && !jsonObj.get("multipleDevicesAndHoldersAllowedStatus").isJsonNull()) && !jsonObj.get("multipleDevicesAndHoldersAllowedStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `multipleDevicesAndHoldersAllowedStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("multipleDevicesAndHoldersAllowedStatus").toString()));
      }
      // validate the optional field `multipleDevicesAndHoldersAllowedStatus`
      if (jsonObj.get("multipleDevicesAndHoldersAllowedStatus") != null && !jsonObj.get("multipleDevicesAndHoldersAllowedStatus").isJsonNull()) {
        MultipleDevicesAndHoldersAllowedStatusEnum.validateJsonElement(jsonObj.get("multipleDevicesAndHoldersAllowedStatus"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("redemptionIssuers") != null && !jsonObj.get("redemptionIssuers").isJsonNull() && !jsonObj.get("redemptionIssuers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `redemptionIssuers` to be an array in the JSON string but got `%s`", jsonObj.get("redemptionIssuers").toString()));
      }
      // validate the optional field `review`
      if (jsonObj.get("review") != null && !jsonObj.get("review").isJsonNull()) {
        Review.validateJsonElement(jsonObj.get("review"));
      }
      if ((jsonObj.get("reviewStatus") != null && !jsonObj.get("reviewStatus").isJsonNull()) && !jsonObj.get("reviewStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reviewStatus").toString()));
      }
      // validate the optional field `reviewStatus`
      if (jsonObj.get("reviewStatus") != null && !jsonObj.get("reviewStatus").isJsonNull()) {
        ReviewStatusEnum.validateJsonElement(jsonObj.get("reviewStatus"));
      }
      // validate the optional field `securityAnimation`
      if (jsonObj.get("securityAnimation") != null && !jsonObj.get("securityAnimation").isJsonNull()) {
        SecurityAnimation.validateJsonElement(jsonObj.get("securityAnimation"));
      }
      if (jsonObj.get("textModulesData") != null && !jsonObj.get("textModulesData").isJsonNull()) {
        JsonArray jsonArraytextModulesData = jsonObj.getAsJsonArray("textModulesData");
        if (jsonArraytextModulesData != null) {
          // ensure the json data is an array
          if (!jsonObj.get("textModulesData").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `textModulesData` to be an array in the JSON string but got `%s`", jsonObj.get("textModulesData").toString()));
          }

          // validate the optional field `textModulesData` (array)
          for (int i = 0; i < jsonArraytextModulesData.size(); i++) {
            TextModuleData.validateJsonElement(jsonArraytextModulesData.get(i));
          };
        }
      }
      // validate the optional field `transitOperatorName`
      if (jsonObj.get("transitOperatorName") != null && !jsonObj.get("transitOperatorName").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("transitOperatorName"));
      }
      if ((jsonObj.get("transitType") != null && !jsonObj.get("transitType").isJsonNull()) && !jsonObj.get("transitType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `transitType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("transitType").toString()));
      }
      // validate the optional field `transitType`
      if (jsonObj.get("transitType") != null && !jsonObj.get("transitType").isJsonNull()) {
        TransitTypeEnum.validateJsonElement(jsonObj.get("transitType"));
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("viewUnlockRequirement") != null && !jsonObj.get("viewUnlockRequirement").isJsonNull()) && !jsonObj.get("viewUnlockRequirement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewUnlockRequirement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewUnlockRequirement").toString()));
      }
      // validate the optional field `viewUnlockRequirement`
      if (jsonObj.get("viewUnlockRequirement") != null && !jsonObj.get("viewUnlockRequirement").isJsonNull()) {
        ViewUnlockRequirementEnum.validateJsonElement(jsonObj.get("viewUnlockRequirement"));
      }
      // validate the optional field `watermark`
      if (jsonObj.get("watermark") != null && !jsonObj.get("watermark").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("watermark"));
      }
      // validate the optional field `wordMark`
      if (jsonObj.get("wordMark") != null && !jsonObj.get("wordMark").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("wordMark"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TransitClass.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TransitClass' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TransitClass> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TransitClass.class));

       return (TypeAdapter<T>) new TypeAdapter<TransitClass>() {
           @Override
           public void write(JsonWriter out, TransitClass value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TransitClass read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of TransitClass given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of TransitClass
   * @throws IOException if the JSON string is invalid with respect to TransitClass
   */
  public static TransitClass fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TransitClass.class);
  }

  /**
   * Convert an instance of TransitClass to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

