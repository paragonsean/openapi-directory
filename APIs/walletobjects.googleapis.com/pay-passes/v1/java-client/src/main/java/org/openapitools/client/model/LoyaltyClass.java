/*
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CallbackOptions;
import org.openapitools.client.model.ClassTemplateInfo;
import org.openapitools.client.model.DiscoverableProgram;
import org.openapitools.client.model.Image;
import org.openapitools.client.model.ImageModuleData;
import org.openapitools.client.model.InfoModuleData;
import org.openapitools.client.model.LatLongPoint;
import org.openapitools.client.model.LinksModuleData;
import org.openapitools.client.model.LocalizedString;
import org.openapitools.client.model.Message;
import org.openapitools.client.model.Review;
import org.openapitools.client.model.SecurityAnimation;
import org.openapitools.client.model.TextModuleData;
import org.openapitools.client.model.Uri;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * LoyaltyClass
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:12:07.622305-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class LoyaltyClass {
  public static final String SERIALIZED_NAME_ACCOUNT_ID_LABEL = "accountIdLabel";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID_LABEL)
  private String accountIdLabel;

  public static final String SERIALIZED_NAME_ACCOUNT_NAME_LABEL = "accountNameLabel";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_NAME_LABEL)
  private String accountNameLabel;

  public static final String SERIALIZED_NAME_ALLOW_MULTIPLE_USERS_PER_OBJECT = "allowMultipleUsersPerObject";
  @SerializedName(SERIALIZED_NAME_ALLOW_MULTIPLE_USERS_PER_OBJECT)
  private Boolean allowMultipleUsersPerObject;

  public static final String SERIALIZED_NAME_CALLBACK_OPTIONS = "callbackOptions";
  @SerializedName(SERIALIZED_NAME_CALLBACK_OPTIONS)
  private CallbackOptions callbackOptions;

  public static final String SERIALIZED_NAME_CLASS_TEMPLATE_INFO = "classTemplateInfo";
  @SerializedName(SERIALIZED_NAME_CLASS_TEMPLATE_INFO)
  private ClassTemplateInfo classTemplateInfo;

  public static final String SERIALIZED_NAME_COUNTRY_CODE = "countryCode";
  @SerializedName(SERIALIZED_NAME_COUNTRY_CODE)
  private String countryCode;

  public static final String SERIALIZED_NAME_DISCOVERABLE_PROGRAM = "discoverableProgram";
  @SerializedName(SERIALIZED_NAME_DISCOVERABLE_PROGRAM)
  private DiscoverableProgram discoverableProgram;

  public static final String SERIALIZED_NAME_ENABLE_SMART_TAP = "enableSmartTap";
  @SerializedName(SERIALIZED_NAME_ENABLE_SMART_TAP)
  private Boolean enableSmartTap;

  public static final String SERIALIZED_NAME_HERO_IMAGE = "heroImage";
  @SerializedName(SERIALIZED_NAME_HERO_IMAGE)
  private Image heroImage;

  public static final String SERIALIZED_NAME_HEX_BACKGROUND_COLOR = "hexBackgroundColor";
  @SerializedName(SERIALIZED_NAME_HEX_BACKGROUND_COLOR)
  private String hexBackgroundColor;

  public static final String SERIALIZED_NAME_HOMEPAGE_URI = "homepageUri";
  @SerializedName(SERIALIZED_NAME_HOMEPAGE_URI)
  private Uri homepageUri;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_IMAGE_MODULES_DATA = "imageModulesData";
  @SerializedName(SERIALIZED_NAME_IMAGE_MODULES_DATA)
  private List<ImageModuleData> imageModulesData = new ArrayList<>();

  public static final String SERIALIZED_NAME_INFO_MODULE_DATA = "infoModuleData";
  @SerializedName(SERIALIZED_NAME_INFO_MODULE_DATA)
  private InfoModuleData infoModuleData;

  public static final String SERIALIZED_NAME_ISSUER_NAME = "issuerName";
  @SerializedName(SERIALIZED_NAME_ISSUER_NAME)
  private String issuerName;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_LINKS_MODULE_DATA = "linksModuleData";
  @SerializedName(SERIALIZED_NAME_LINKS_MODULE_DATA)
  private LinksModuleData linksModuleData;

  public static final String SERIALIZED_NAME_LOCALIZED_ACCOUNT_ID_LABEL = "localizedAccountIdLabel";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_ACCOUNT_ID_LABEL)
  private LocalizedString localizedAccountIdLabel;

  public static final String SERIALIZED_NAME_LOCALIZED_ACCOUNT_NAME_LABEL = "localizedAccountNameLabel";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_ACCOUNT_NAME_LABEL)
  private LocalizedString localizedAccountNameLabel;

  public static final String SERIALIZED_NAME_LOCALIZED_ISSUER_NAME = "localizedIssuerName";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_ISSUER_NAME)
  private LocalizedString localizedIssuerName;

  public static final String SERIALIZED_NAME_LOCALIZED_PROGRAM_NAME = "localizedProgramName";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_PROGRAM_NAME)
  private LocalizedString localizedProgramName;

  public static final String SERIALIZED_NAME_LOCALIZED_REWARDS_TIER = "localizedRewardsTier";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_REWARDS_TIER)
  private LocalizedString localizedRewardsTier;

  public static final String SERIALIZED_NAME_LOCALIZED_REWARDS_TIER_LABEL = "localizedRewardsTierLabel";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_REWARDS_TIER_LABEL)
  private LocalizedString localizedRewardsTierLabel;

  public static final String SERIALIZED_NAME_LOCALIZED_SECONDARY_REWARDS_TIER = "localizedSecondaryRewardsTier";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_SECONDARY_REWARDS_TIER)
  private LocalizedString localizedSecondaryRewardsTier;

  public static final String SERIALIZED_NAME_LOCALIZED_SECONDARY_REWARDS_TIER_LABEL = "localizedSecondaryRewardsTierLabel";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_SECONDARY_REWARDS_TIER_LABEL)
  private LocalizedString localizedSecondaryRewardsTierLabel;

  public static final String SERIALIZED_NAME_LOCATIONS = "locations";
  @SerializedName(SERIALIZED_NAME_LOCATIONS)
  private List<LatLongPoint> locations = new ArrayList<>();

  public static final String SERIALIZED_NAME_MESSAGES = "messages";
  @SerializedName(SERIALIZED_NAME_MESSAGES)
  private List<Message> messages = new ArrayList<>();

  /**
   * Identifies whether multiple users and devices will save the same object referencing this class.
   */
  @JsonAdapter(MultipleDevicesAndHoldersAllowedStatusEnum.Adapter.class)
  public enum MultipleDevicesAndHoldersAllowedStatusEnum {
    STATUS_UNSPECIFIED("STATUS_UNSPECIFIED"),
    
    MULTIPLE_HOLDERS("MULTIPLE_HOLDERS"),
    
    MULTIPLE_HOLDERS2("multipleHolders"),
    
    ONE_USER_ALL_DEVICES("ONE_USER_ALL_DEVICES"),
    
    ONE_USER_ALL_DEVICES2("oneUserAllDevices"),
    
    ONE_USER_ONE_DEVICE("ONE_USER_ONE_DEVICE"),
    
    ONE_USER_ONE_DEVICE2("oneUserOneDevice");

    private String value;

    MultipleDevicesAndHoldersAllowedStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static MultipleDevicesAndHoldersAllowedStatusEnum fromValue(String value) {
      for (MultipleDevicesAndHoldersAllowedStatusEnum b : MultipleDevicesAndHoldersAllowedStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<MultipleDevicesAndHoldersAllowedStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final MultipleDevicesAndHoldersAllowedStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public MultipleDevicesAndHoldersAllowedStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return MultipleDevicesAndHoldersAllowedStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      MultipleDevicesAndHoldersAllowedStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_MULTIPLE_DEVICES_AND_HOLDERS_ALLOWED_STATUS = "multipleDevicesAndHoldersAllowedStatus";
  @SerializedName(SERIALIZED_NAME_MULTIPLE_DEVICES_AND_HOLDERS_ALLOWED_STATUS)
  private MultipleDevicesAndHoldersAllowedStatusEnum multipleDevicesAndHoldersAllowedStatus;

  public static final String SERIALIZED_NAME_PROGRAM_LOGO = "programLogo";
  @SerializedName(SERIALIZED_NAME_PROGRAM_LOGO)
  private Image programLogo;

  public static final String SERIALIZED_NAME_PROGRAM_NAME = "programName";
  @SerializedName(SERIALIZED_NAME_PROGRAM_NAME)
  private String programName;

  public static final String SERIALIZED_NAME_REDEMPTION_ISSUERS = "redemptionIssuers";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_ISSUERS)
  private List<String> redemptionIssuers = new ArrayList<>();

  public static final String SERIALIZED_NAME_REVIEW = "review";
  @SerializedName(SERIALIZED_NAME_REVIEW)
  private Review review;

  /**
   * Required. The status of the class. This field can be set to &#x60;draft&#x60; or &#x60;underReview&#x60; using the insert, patch, or update API calls. Once the review state is changed from &#x60;draft&#x60; it may not be changed back to &#x60;draft&#x60;. You should keep this field to &#x60;draft&#x60; when the class is under development. A &#x60;draft&#x60; class cannot be used to create any object. You should set this field to &#x60;underReview&#x60; when you believe the class is ready for use. The platform will automatically set this field to &#x60;approved&#x60; and it can be immediately used to create or migrate objects. When updating an already &#x60;approved&#x60; class you should keep setting this field to &#x60;underReview&#x60;.
   */
  @JsonAdapter(ReviewStatusEnum.Adapter.class)
  public enum ReviewStatusEnum {
    REVIEW_STATUS_UNSPECIFIED("REVIEW_STATUS_UNSPECIFIED"),
    
    UNDER_REVIEW("UNDER_REVIEW"),
    
    UNDER_REVIEW2("underReview"),
    
    APPROVED("APPROVED"),
    
    APPROVED2("approved"),
    
    REJECTED("REJECTED"),
    
    REJECTED2("rejected"),
    
    DRAFT("DRAFT"),
    
    DRAFT2("draft");

    private String value;

    ReviewStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ReviewStatusEnum fromValue(String value) {
      for (ReviewStatusEnum b : ReviewStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ReviewStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ReviewStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ReviewStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ReviewStatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ReviewStatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_REVIEW_STATUS = "reviewStatus";
  @SerializedName(SERIALIZED_NAME_REVIEW_STATUS)
  private ReviewStatusEnum reviewStatus;

  public static final String SERIALIZED_NAME_REWARDS_TIER = "rewardsTier";
  @SerializedName(SERIALIZED_NAME_REWARDS_TIER)
  private String rewardsTier;

  public static final String SERIALIZED_NAME_REWARDS_TIER_LABEL = "rewardsTierLabel";
  @SerializedName(SERIALIZED_NAME_REWARDS_TIER_LABEL)
  private String rewardsTierLabel;

  public static final String SERIALIZED_NAME_SECONDARY_REWARDS_TIER = "secondaryRewardsTier";
  @SerializedName(SERIALIZED_NAME_SECONDARY_REWARDS_TIER)
  private String secondaryRewardsTier;

  public static final String SERIALIZED_NAME_SECONDARY_REWARDS_TIER_LABEL = "secondaryRewardsTierLabel";
  @SerializedName(SERIALIZED_NAME_SECONDARY_REWARDS_TIER_LABEL)
  private String secondaryRewardsTierLabel;

  public static final String SERIALIZED_NAME_SECURITY_ANIMATION = "securityAnimation";
  @SerializedName(SERIALIZED_NAME_SECURITY_ANIMATION)
  private SecurityAnimation securityAnimation;

  public static final String SERIALIZED_NAME_TEXT_MODULES_DATA = "textModulesData";
  @SerializedName(SERIALIZED_NAME_TEXT_MODULES_DATA)
  private List<TextModuleData> textModulesData = new ArrayList<>();

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private String version;

  /**
   * View Unlock Requirement options for the loyalty card.
   */
  @JsonAdapter(ViewUnlockRequirementEnum.Adapter.class)
  public enum ViewUnlockRequirementEnum {
    VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED("VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED"),
    
    UNLOCK_NOT_REQUIRED("UNLOCK_NOT_REQUIRED"),
    
    UNLOCK_REQUIRED_TO_VIEW("UNLOCK_REQUIRED_TO_VIEW");

    private String value;

    ViewUnlockRequirementEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ViewUnlockRequirementEnum fromValue(String value) {
      for (ViewUnlockRequirementEnum b : ViewUnlockRequirementEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<ViewUnlockRequirementEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ViewUnlockRequirementEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ViewUnlockRequirementEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ViewUnlockRequirementEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      ViewUnlockRequirementEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_VIEW_UNLOCK_REQUIREMENT = "viewUnlockRequirement";
  @SerializedName(SERIALIZED_NAME_VIEW_UNLOCK_REQUIREMENT)
  private ViewUnlockRequirementEnum viewUnlockRequirement;

  public static final String SERIALIZED_NAME_WORD_MARK = "wordMark";
  @SerializedName(SERIALIZED_NAME_WORD_MARK)
  private Image wordMark;

  public LoyaltyClass() {
  }

  public LoyaltyClass accountIdLabel(String accountIdLabel) {
    this.accountIdLabel = accountIdLabel;
    return this;
  }

  /**
   * The account ID label, such as \&quot;Member ID.\&quot; Recommended maximum length is 15 characters to ensure full string is displayed on smaller screens.
   * @return accountIdLabel
   */
  @javax.annotation.Nullable
  public String getAccountIdLabel() {
    return accountIdLabel;
  }

  public void setAccountIdLabel(String accountIdLabel) {
    this.accountIdLabel = accountIdLabel;
  }


  public LoyaltyClass accountNameLabel(String accountNameLabel) {
    this.accountNameLabel = accountNameLabel;
    return this;
  }

  /**
   * The account name label, such as \&quot;Member Name.\&quot; Recommended maximum length is 15 characters to ensure full string is displayed on smaller screens.
   * @return accountNameLabel
   */
  @javax.annotation.Nullable
  public String getAccountNameLabel() {
    return accountNameLabel;
  }

  public void setAccountNameLabel(String accountNameLabel) {
    this.accountNameLabel = accountNameLabel;
  }


  public LoyaltyClass allowMultipleUsersPerObject(Boolean allowMultipleUsersPerObject) {
    this.allowMultipleUsersPerObject = allowMultipleUsersPerObject;
    return this;
  }

  /**
   * Deprecated. Use &#x60;multipleDevicesAndHoldersAllowedStatus&#x60; instead.
   * @return allowMultipleUsersPerObject
   */
  @javax.annotation.Nullable
  public Boolean getAllowMultipleUsersPerObject() {
    return allowMultipleUsersPerObject;
  }

  public void setAllowMultipleUsersPerObject(Boolean allowMultipleUsersPerObject) {
    this.allowMultipleUsersPerObject = allowMultipleUsersPerObject;
  }


  public LoyaltyClass callbackOptions(CallbackOptions callbackOptions) {
    this.callbackOptions = callbackOptions;
    return this;
  }

  /**
   * Get callbackOptions
   * @return callbackOptions
   */
  @javax.annotation.Nullable
  public CallbackOptions getCallbackOptions() {
    return callbackOptions;
  }

  public void setCallbackOptions(CallbackOptions callbackOptions) {
    this.callbackOptions = callbackOptions;
  }


  public LoyaltyClass classTemplateInfo(ClassTemplateInfo classTemplateInfo) {
    this.classTemplateInfo = classTemplateInfo;
    return this;
  }

  /**
   * Get classTemplateInfo
   * @return classTemplateInfo
   */
  @javax.annotation.Nullable
  public ClassTemplateInfo getClassTemplateInfo() {
    return classTemplateInfo;
  }

  public void setClassTemplateInfo(ClassTemplateInfo classTemplateInfo) {
    this.classTemplateInfo = classTemplateInfo;
  }


  public LoyaltyClass countryCode(String countryCode) {
    this.countryCode = countryCode;
    return this;
  }

  /**
   * Country code used to display the card&#39;s country (when the user is not in that country), as well as to display localized content when content is not available in the user&#39;s locale.
   * @return countryCode
   */
  @javax.annotation.Nullable
  public String getCountryCode() {
    return countryCode;
  }

  public void setCountryCode(String countryCode) {
    this.countryCode = countryCode;
  }


  public LoyaltyClass discoverableProgram(DiscoverableProgram discoverableProgram) {
    this.discoverableProgram = discoverableProgram;
    return this;
  }

  /**
   * Get discoverableProgram
   * @return discoverableProgram
   */
  @javax.annotation.Nullable
  public DiscoverableProgram getDiscoverableProgram() {
    return discoverableProgram;
  }

  public void setDiscoverableProgram(DiscoverableProgram discoverableProgram) {
    this.discoverableProgram = discoverableProgram;
  }


  public LoyaltyClass enableSmartTap(Boolean enableSmartTap) {
    this.enableSmartTap = enableSmartTap;
    return this;
  }

  /**
   * Identifies whether this class supports Smart Tap. The &#x60;redemptionIssuers&#x60; and one of object level &#x60;smartTapRedemptionLevel&#x60;, barcode.value&#x60;, or &#x60;accountId&#x60; fields must also be set up correctly in order for a pass to support Smart Tap.
   * @return enableSmartTap
   */
  @javax.annotation.Nullable
  public Boolean getEnableSmartTap() {
    return enableSmartTap;
  }

  public void setEnableSmartTap(Boolean enableSmartTap) {
    this.enableSmartTap = enableSmartTap;
  }


  public LoyaltyClass heroImage(Image heroImage) {
    this.heroImage = heroImage;
    return this;
  }

  /**
   * Get heroImage
   * @return heroImage
   */
  @javax.annotation.Nullable
  public Image getHeroImage() {
    return heroImage;
  }

  public void setHeroImage(Image heroImage) {
    this.heroImage = heroImage;
  }


  public LoyaltyClass hexBackgroundColor(String hexBackgroundColor) {
    this.hexBackgroundColor = hexBackgroundColor;
    return this;
  }

  /**
   * The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as &#x60;#ffcc00&#x60;. You can also use the shorthand version of the RGB triplet which is #rgb, such as &#x60;#fc0&#x60;.
   * @return hexBackgroundColor
   */
  @javax.annotation.Nullable
  public String getHexBackgroundColor() {
    return hexBackgroundColor;
  }

  public void setHexBackgroundColor(String hexBackgroundColor) {
    this.hexBackgroundColor = hexBackgroundColor;
  }


  public LoyaltyClass homepageUri(Uri homepageUri) {
    this.homepageUri = homepageUri;
    return this;
  }

  /**
   * Get homepageUri
   * @return homepageUri
   */
  @javax.annotation.Nullable
  public Uri getHomepageUri() {
    return homepageUri;
  }

  public void setHomepageUri(Uri homepageUri) {
    this.homepageUri = homepageUri;
  }


  public LoyaltyClass id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, &#39;.&#39;, &#39;_&#39;, or &#39;-&#39;.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public LoyaltyClass imageModulesData(List<ImageModuleData> imageModulesData) {
    this.imageModulesData = imageModulesData;
    return this;
  }

  public LoyaltyClass addImageModulesDataItem(ImageModuleData imageModulesDataItem) {
    if (this.imageModulesData == null) {
      this.imageModulesData = new ArrayList<>();
    }
    this.imageModulesData.add(imageModulesDataItem);
    return this;
  }

  /**
   * Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.
   * @return imageModulesData
   */
  @javax.annotation.Nullable
  public List<ImageModuleData> getImageModulesData() {
    return imageModulesData;
  }

  public void setImageModulesData(List<ImageModuleData> imageModulesData) {
    this.imageModulesData = imageModulesData;
  }


  public LoyaltyClass infoModuleData(InfoModuleData infoModuleData) {
    this.infoModuleData = infoModuleData;
    return this;
  }

  /**
   * Get infoModuleData
   * @return infoModuleData
   */
  @javax.annotation.Nullable
  public InfoModuleData getInfoModuleData() {
    return infoModuleData;
  }

  public void setInfoModuleData(InfoModuleData infoModuleData) {
    this.infoModuleData = infoModuleData;
  }


  public LoyaltyClass issuerName(String issuerName) {
    this.issuerName = issuerName;
    return this;
  }

  /**
   * Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.
   * @return issuerName
   */
  @javax.annotation.Nullable
  public String getIssuerName() {
    return issuerName;
  }

  public void setIssuerName(String issuerName) {
    this.issuerName = issuerName;
  }


  public LoyaltyClass kind(String kind) {
    this.kind = kind;
    return this;
  }

  /**
   * Identifies what kind of resource this is. Value: the fixed string &#x60;\&quot;walletobjects#loyaltyClass\&quot;&#x60;.
   * @return kind
   */
  @javax.annotation.Nullable
  public String getKind() {
    return kind;
  }

  public void setKind(String kind) {
    this.kind = kind;
  }


  public LoyaltyClass linksModuleData(LinksModuleData linksModuleData) {
    this.linksModuleData = linksModuleData;
    return this;
  }

  /**
   * Get linksModuleData
   * @return linksModuleData
   */
  @javax.annotation.Nullable
  public LinksModuleData getLinksModuleData() {
    return linksModuleData;
  }

  public void setLinksModuleData(LinksModuleData linksModuleData) {
    this.linksModuleData = linksModuleData;
  }


  public LoyaltyClass localizedAccountIdLabel(LocalizedString localizedAccountIdLabel) {
    this.localizedAccountIdLabel = localizedAccountIdLabel;
    return this;
  }

  /**
   * Get localizedAccountIdLabel
   * @return localizedAccountIdLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedAccountIdLabel() {
    return localizedAccountIdLabel;
  }

  public void setLocalizedAccountIdLabel(LocalizedString localizedAccountIdLabel) {
    this.localizedAccountIdLabel = localizedAccountIdLabel;
  }


  public LoyaltyClass localizedAccountNameLabel(LocalizedString localizedAccountNameLabel) {
    this.localizedAccountNameLabel = localizedAccountNameLabel;
    return this;
  }

  /**
   * Get localizedAccountNameLabel
   * @return localizedAccountNameLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedAccountNameLabel() {
    return localizedAccountNameLabel;
  }

  public void setLocalizedAccountNameLabel(LocalizedString localizedAccountNameLabel) {
    this.localizedAccountNameLabel = localizedAccountNameLabel;
  }


  public LoyaltyClass localizedIssuerName(LocalizedString localizedIssuerName) {
    this.localizedIssuerName = localizedIssuerName;
    return this;
  }

  /**
   * Get localizedIssuerName
   * @return localizedIssuerName
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedIssuerName() {
    return localizedIssuerName;
  }

  public void setLocalizedIssuerName(LocalizedString localizedIssuerName) {
    this.localizedIssuerName = localizedIssuerName;
  }


  public LoyaltyClass localizedProgramName(LocalizedString localizedProgramName) {
    this.localizedProgramName = localizedProgramName;
    return this;
  }

  /**
   * Get localizedProgramName
   * @return localizedProgramName
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedProgramName() {
    return localizedProgramName;
  }

  public void setLocalizedProgramName(LocalizedString localizedProgramName) {
    this.localizedProgramName = localizedProgramName;
  }


  public LoyaltyClass localizedRewardsTier(LocalizedString localizedRewardsTier) {
    this.localizedRewardsTier = localizedRewardsTier;
    return this;
  }

  /**
   * Get localizedRewardsTier
   * @return localizedRewardsTier
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedRewardsTier() {
    return localizedRewardsTier;
  }

  public void setLocalizedRewardsTier(LocalizedString localizedRewardsTier) {
    this.localizedRewardsTier = localizedRewardsTier;
  }


  public LoyaltyClass localizedRewardsTierLabel(LocalizedString localizedRewardsTierLabel) {
    this.localizedRewardsTierLabel = localizedRewardsTierLabel;
    return this;
  }

  /**
   * Get localizedRewardsTierLabel
   * @return localizedRewardsTierLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedRewardsTierLabel() {
    return localizedRewardsTierLabel;
  }

  public void setLocalizedRewardsTierLabel(LocalizedString localizedRewardsTierLabel) {
    this.localizedRewardsTierLabel = localizedRewardsTierLabel;
  }


  public LoyaltyClass localizedSecondaryRewardsTier(LocalizedString localizedSecondaryRewardsTier) {
    this.localizedSecondaryRewardsTier = localizedSecondaryRewardsTier;
    return this;
  }

  /**
   * Get localizedSecondaryRewardsTier
   * @return localizedSecondaryRewardsTier
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedSecondaryRewardsTier() {
    return localizedSecondaryRewardsTier;
  }

  public void setLocalizedSecondaryRewardsTier(LocalizedString localizedSecondaryRewardsTier) {
    this.localizedSecondaryRewardsTier = localizedSecondaryRewardsTier;
  }


  public LoyaltyClass localizedSecondaryRewardsTierLabel(LocalizedString localizedSecondaryRewardsTierLabel) {
    this.localizedSecondaryRewardsTierLabel = localizedSecondaryRewardsTierLabel;
    return this;
  }

  /**
   * Get localizedSecondaryRewardsTierLabel
   * @return localizedSecondaryRewardsTierLabel
   */
  @javax.annotation.Nullable
  public LocalizedString getLocalizedSecondaryRewardsTierLabel() {
    return localizedSecondaryRewardsTierLabel;
  }

  public void setLocalizedSecondaryRewardsTierLabel(LocalizedString localizedSecondaryRewardsTierLabel) {
    this.localizedSecondaryRewardsTierLabel = localizedSecondaryRewardsTierLabel;
  }


  public LoyaltyClass locations(List<LatLongPoint> locations) {
    this.locations = locations;
    return this;
  }

  public LoyaltyClass addLocationsItem(LatLongPoint locationsItem) {
    if (this.locations == null) {
      this.locations = new ArrayList<>();
    }
    this.locations.add(locationsItem);
    return this;
  }

  /**
   * Note: This field is currently not supported to trigger geo notifications.
   * @return locations
   */
  @javax.annotation.Nullable
  public List<LatLongPoint> getLocations() {
    return locations;
  }

  public void setLocations(List<LatLongPoint> locations) {
    this.locations = locations;
  }


  public LoyaltyClass messages(List<Message> messages) {
    this.messages = messages;
    return this;
  }

  public LoyaltyClass addMessagesItem(Message messagesItem) {
    if (this.messages == null) {
      this.messages = new ArrayList<>();
    }
    this.messages.add(messagesItem);
    return this;
  }

  /**
   * An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.
   * @return messages
   */
  @javax.annotation.Nullable
  public List<Message> getMessages() {
    return messages;
  }

  public void setMessages(List<Message> messages) {
    this.messages = messages;
  }


  public LoyaltyClass multipleDevicesAndHoldersAllowedStatus(MultipleDevicesAndHoldersAllowedStatusEnum multipleDevicesAndHoldersAllowedStatus) {
    this.multipleDevicesAndHoldersAllowedStatus = multipleDevicesAndHoldersAllowedStatus;
    return this;
  }

  /**
   * Identifies whether multiple users and devices will save the same object referencing this class.
   * @return multipleDevicesAndHoldersAllowedStatus
   */
  @javax.annotation.Nullable
  public MultipleDevicesAndHoldersAllowedStatusEnum getMultipleDevicesAndHoldersAllowedStatus() {
    return multipleDevicesAndHoldersAllowedStatus;
  }

  public void setMultipleDevicesAndHoldersAllowedStatus(MultipleDevicesAndHoldersAllowedStatusEnum multipleDevicesAndHoldersAllowedStatus) {
    this.multipleDevicesAndHoldersAllowedStatus = multipleDevicesAndHoldersAllowedStatus;
  }


  public LoyaltyClass programLogo(Image programLogo) {
    this.programLogo = programLogo;
    return this;
  }

  /**
   * Get programLogo
   * @return programLogo
   */
  @javax.annotation.Nullable
  public Image getProgramLogo() {
    return programLogo;
  }

  public void setProgramLogo(Image programLogo) {
    this.programLogo = programLogo;
  }


  public LoyaltyClass programName(String programName) {
    this.programName = programName;
    return this;
  }

  /**
   * Required. The program name, such as \&quot;Adam&#39;s Apparel\&quot;. The app may display an ellipsis after the first 20 characters to ensure full string is displayed on smaller screens.
   * @return programName
   */
  @javax.annotation.Nullable
  public String getProgramName() {
    return programName;
  }

  public void setProgramName(String programName) {
    this.programName = programName;
  }


  public LoyaltyClass redemptionIssuers(List<String> redemptionIssuers) {
    this.redemptionIssuers = redemptionIssuers;
    return this;
  }

  public LoyaltyClass addRedemptionIssuersItem(String redemptionIssuersItem) {
    if (this.redemptionIssuers == null) {
      this.redemptionIssuers = new ArrayList<>();
    }
    this.redemptionIssuers.add(redemptionIssuersItem);
    return this;
  }

  /**
   * Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The &#x60;enableSmartTap&#x60; and one of object level &#x60;smartTapRedemptionValue&#x60;, barcode.value&#x60;, or &#x60;accountId&#x60; fields must also be set up correctly in order for a pass to support Smart Tap.
   * @return redemptionIssuers
   */
  @javax.annotation.Nullable
  public List<String> getRedemptionIssuers() {
    return redemptionIssuers;
  }

  public void setRedemptionIssuers(List<String> redemptionIssuers) {
    this.redemptionIssuers = redemptionIssuers;
  }


  public LoyaltyClass review(Review review) {
    this.review = review;
    return this;
  }

  /**
   * Get review
   * @return review
   */
  @javax.annotation.Nullable
  public Review getReview() {
    return review;
  }

  public void setReview(Review review) {
    this.review = review;
  }


  public LoyaltyClass reviewStatus(ReviewStatusEnum reviewStatus) {
    this.reviewStatus = reviewStatus;
    return this;
  }

  /**
   * Required. The status of the class. This field can be set to &#x60;draft&#x60; or &#x60;underReview&#x60; using the insert, patch, or update API calls. Once the review state is changed from &#x60;draft&#x60; it may not be changed back to &#x60;draft&#x60;. You should keep this field to &#x60;draft&#x60; when the class is under development. A &#x60;draft&#x60; class cannot be used to create any object. You should set this field to &#x60;underReview&#x60; when you believe the class is ready for use. The platform will automatically set this field to &#x60;approved&#x60; and it can be immediately used to create or migrate objects. When updating an already &#x60;approved&#x60; class you should keep setting this field to &#x60;underReview&#x60;.
   * @return reviewStatus
   */
  @javax.annotation.Nullable
  public ReviewStatusEnum getReviewStatus() {
    return reviewStatus;
  }

  public void setReviewStatus(ReviewStatusEnum reviewStatus) {
    this.reviewStatus = reviewStatus;
  }


  public LoyaltyClass rewardsTier(String rewardsTier) {
    this.rewardsTier = rewardsTier;
    return this;
  }

  /**
   * The rewards tier, such as \&quot;Gold\&quot; or \&quot;Platinum.\&quot; Recommended maximum length is 7 characters to ensure full string is displayed on smaller screens.
   * @return rewardsTier
   */
  @javax.annotation.Nullable
  public String getRewardsTier() {
    return rewardsTier;
  }

  public void setRewardsTier(String rewardsTier) {
    this.rewardsTier = rewardsTier;
  }


  public LoyaltyClass rewardsTierLabel(String rewardsTierLabel) {
    this.rewardsTierLabel = rewardsTierLabel;
    return this;
  }

  /**
   * The rewards tier label, such as \&quot;Rewards Tier.\&quot; Recommended maximum length is 9 characters to ensure full string is displayed on smaller screens.
   * @return rewardsTierLabel
   */
  @javax.annotation.Nullable
  public String getRewardsTierLabel() {
    return rewardsTierLabel;
  }

  public void setRewardsTierLabel(String rewardsTierLabel) {
    this.rewardsTierLabel = rewardsTierLabel;
  }


  public LoyaltyClass secondaryRewardsTier(String secondaryRewardsTier) {
    this.secondaryRewardsTier = secondaryRewardsTier;
    return this;
  }

  /**
   * The secondary rewards tier, such as \&quot;Gold\&quot; or \&quot;Platinum.\&quot;
   * @return secondaryRewardsTier
   */
  @javax.annotation.Nullable
  public String getSecondaryRewardsTier() {
    return secondaryRewardsTier;
  }

  public void setSecondaryRewardsTier(String secondaryRewardsTier) {
    this.secondaryRewardsTier = secondaryRewardsTier;
  }


  public LoyaltyClass secondaryRewardsTierLabel(String secondaryRewardsTierLabel) {
    this.secondaryRewardsTierLabel = secondaryRewardsTierLabel;
    return this;
  }

  /**
   * The secondary rewards tier label, such as \&quot;Rewards Tier.\&quot;
   * @return secondaryRewardsTierLabel
   */
  @javax.annotation.Nullable
  public String getSecondaryRewardsTierLabel() {
    return secondaryRewardsTierLabel;
  }

  public void setSecondaryRewardsTierLabel(String secondaryRewardsTierLabel) {
    this.secondaryRewardsTierLabel = secondaryRewardsTierLabel;
  }


  public LoyaltyClass securityAnimation(SecurityAnimation securityAnimation) {
    this.securityAnimation = securityAnimation;
    return this;
  }

  /**
   * Get securityAnimation
   * @return securityAnimation
   */
  @javax.annotation.Nullable
  public SecurityAnimation getSecurityAnimation() {
    return securityAnimation;
  }

  public void setSecurityAnimation(SecurityAnimation securityAnimation) {
    this.securityAnimation = securityAnimation;
  }


  public LoyaltyClass textModulesData(List<TextModuleData> textModulesData) {
    this.textModulesData = textModulesData;
    return this;
  }

  public LoyaltyClass addTextModulesDataItem(TextModuleData textModulesDataItem) {
    if (this.textModulesData == null) {
      this.textModulesData = new ArrayList<>();
    }
    this.textModulesData.add(textModulesDataItem);
    return this;
  }

  /**
   * Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.
   * @return textModulesData
   */
  @javax.annotation.Nullable
  public List<TextModuleData> getTextModulesData() {
    return textModulesData;
  }

  public void setTextModulesData(List<TextModuleData> textModulesData) {
    this.textModulesData = textModulesData;
  }


  public LoyaltyClass version(String version) {
    this.version = version;
    return this;
  }

  /**
   * Deprecated
   * @return version
   */
  @javax.annotation.Nullable
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  public LoyaltyClass viewUnlockRequirement(ViewUnlockRequirementEnum viewUnlockRequirement) {
    this.viewUnlockRequirement = viewUnlockRequirement;
    return this;
  }

  /**
   * View Unlock Requirement options for the loyalty card.
   * @return viewUnlockRequirement
   */
  @javax.annotation.Nullable
  public ViewUnlockRequirementEnum getViewUnlockRequirement() {
    return viewUnlockRequirement;
  }

  public void setViewUnlockRequirement(ViewUnlockRequirementEnum viewUnlockRequirement) {
    this.viewUnlockRequirement = viewUnlockRequirement;
  }


  public LoyaltyClass wordMark(Image wordMark) {
    this.wordMark = wordMark;
    return this;
  }

  /**
   * Get wordMark
   * @return wordMark
   */
  @javax.annotation.Nullable
  public Image getWordMark() {
    return wordMark;
  }

  public void setWordMark(Image wordMark) {
    this.wordMark = wordMark;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltyClass loyaltyClass = (LoyaltyClass) o;
    return Objects.equals(this.accountIdLabel, loyaltyClass.accountIdLabel) &&
        Objects.equals(this.accountNameLabel, loyaltyClass.accountNameLabel) &&
        Objects.equals(this.allowMultipleUsersPerObject, loyaltyClass.allowMultipleUsersPerObject) &&
        Objects.equals(this.callbackOptions, loyaltyClass.callbackOptions) &&
        Objects.equals(this.classTemplateInfo, loyaltyClass.classTemplateInfo) &&
        Objects.equals(this.countryCode, loyaltyClass.countryCode) &&
        Objects.equals(this.discoverableProgram, loyaltyClass.discoverableProgram) &&
        Objects.equals(this.enableSmartTap, loyaltyClass.enableSmartTap) &&
        Objects.equals(this.heroImage, loyaltyClass.heroImage) &&
        Objects.equals(this.hexBackgroundColor, loyaltyClass.hexBackgroundColor) &&
        Objects.equals(this.homepageUri, loyaltyClass.homepageUri) &&
        Objects.equals(this.id, loyaltyClass.id) &&
        Objects.equals(this.imageModulesData, loyaltyClass.imageModulesData) &&
        Objects.equals(this.infoModuleData, loyaltyClass.infoModuleData) &&
        Objects.equals(this.issuerName, loyaltyClass.issuerName) &&
        Objects.equals(this.kind, loyaltyClass.kind) &&
        Objects.equals(this.linksModuleData, loyaltyClass.linksModuleData) &&
        Objects.equals(this.localizedAccountIdLabel, loyaltyClass.localizedAccountIdLabel) &&
        Objects.equals(this.localizedAccountNameLabel, loyaltyClass.localizedAccountNameLabel) &&
        Objects.equals(this.localizedIssuerName, loyaltyClass.localizedIssuerName) &&
        Objects.equals(this.localizedProgramName, loyaltyClass.localizedProgramName) &&
        Objects.equals(this.localizedRewardsTier, loyaltyClass.localizedRewardsTier) &&
        Objects.equals(this.localizedRewardsTierLabel, loyaltyClass.localizedRewardsTierLabel) &&
        Objects.equals(this.localizedSecondaryRewardsTier, loyaltyClass.localizedSecondaryRewardsTier) &&
        Objects.equals(this.localizedSecondaryRewardsTierLabel, loyaltyClass.localizedSecondaryRewardsTierLabel) &&
        Objects.equals(this.locations, loyaltyClass.locations) &&
        Objects.equals(this.messages, loyaltyClass.messages) &&
        Objects.equals(this.multipleDevicesAndHoldersAllowedStatus, loyaltyClass.multipleDevicesAndHoldersAllowedStatus) &&
        Objects.equals(this.programLogo, loyaltyClass.programLogo) &&
        Objects.equals(this.programName, loyaltyClass.programName) &&
        Objects.equals(this.redemptionIssuers, loyaltyClass.redemptionIssuers) &&
        Objects.equals(this.review, loyaltyClass.review) &&
        Objects.equals(this.reviewStatus, loyaltyClass.reviewStatus) &&
        Objects.equals(this.rewardsTier, loyaltyClass.rewardsTier) &&
        Objects.equals(this.rewardsTierLabel, loyaltyClass.rewardsTierLabel) &&
        Objects.equals(this.secondaryRewardsTier, loyaltyClass.secondaryRewardsTier) &&
        Objects.equals(this.secondaryRewardsTierLabel, loyaltyClass.secondaryRewardsTierLabel) &&
        Objects.equals(this.securityAnimation, loyaltyClass.securityAnimation) &&
        Objects.equals(this.textModulesData, loyaltyClass.textModulesData) &&
        Objects.equals(this.version, loyaltyClass.version) &&
        Objects.equals(this.viewUnlockRequirement, loyaltyClass.viewUnlockRequirement) &&
        Objects.equals(this.wordMark, loyaltyClass.wordMark);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountIdLabel, accountNameLabel, allowMultipleUsersPerObject, callbackOptions, classTemplateInfo, countryCode, discoverableProgram, enableSmartTap, heroImage, hexBackgroundColor, homepageUri, id, imageModulesData, infoModuleData, issuerName, kind, linksModuleData, localizedAccountIdLabel, localizedAccountNameLabel, localizedIssuerName, localizedProgramName, localizedRewardsTier, localizedRewardsTierLabel, localizedSecondaryRewardsTier, localizedSecondaryRewardsTierLabel, locations, messages, multipleDevicesAndHoldersAllowedStatus, programLogo, programName, redemptionIssuers, review, reviewStatus, rewardsTier, rewardsTierLabel, secondaryRewardsTier, secondaryRewardsTierLabel, securityAnimation, textModulesData, version, viewUnlockRequirement, wordMark);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltyClass {\n");
    sb.append("    accountIdLabel: ").append(toIndentedString(accountIdLabel)).append("\n");
    sb.append("    accountNameLabel: ").append(toIndentedString(accountNameLabel)).append("\n");
    sb.append("    allowMultipleUsersPerObject: ").append(toIndentedString(allowMultipleUsersPerObject)).append("\n");
    sb.append("    callbackOptions: ").append(toIndentedString(callbackOptions)).append("\n");
    sb.append("    classTemplateInfo: ").append(toIndentedString(classTemplateInfo)).append("\n");
    sb.append("    countryCode: ").append(toIndentedString(countryCode)).append("\n");
    sb.append("    discoverableProgram: ").append(toIndentedString(discoverableProgram)).append("\n");
    sb.append("    enableSmartTap: ").append(toIndentedString(enableSmartTap)).append("\n");
    sb.append("    heroImage: ").append(toIndentedString(heroImage)).append("\n");
    sb.append("    hexBackgroundColor: ").append(toIndentedString(hexBackgroundColor)).append("\n");
    sb.append("    homepageUri: ").append(toIndentedString(homepageUri)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imageModulesData: ").append(toIndentedString(imageModulesData)).append("\n");
    sb.append("    infoModuleData: ").append(toIndentedString(infoModuleData)).append("\n");
    sb.append("    issuerName: ").append(toIndentedString(issuerName)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    linksModuleData: ").append(toIndentedString(linksModuleData)).append("\n");
    sb.append("    localizedAccountIdLabel: ").append(toIndentedString(localizedAccountIdLabel)).append("\n");
    sb.append("    localizedAccountNameLabel: ").append(toIndentedString(localizedAccountNameLabel)).append("\n");
    sb.append("    localizedIssuerName: ").append(toIndentedString(localizedIssuerName)).append("\n");
    sb.append("    localizedProgramName: ").append(toIndentedString(localizedProgramName)).append("\n");
    sb.append("    localizedRewardsTier: ").append(toIndentedString(localizedRewardsTier)).append("\n");
    sb.append("    localizedRewardsTierLabel: ").append(toIndentedString(localizedRewardsTierLabel)).append("\n");
    sb.append("    localizedSecondaryRewardsTier: ").append(toIndentedString(localizedSecondaryRewardsTier)).append("\n");
    sb.append("    localizedSecondaryRewardsTierLabel: ").append(toIndentedString(localizedSecondaryRewardsTierLabel)).append("\n");
    sb.append("    locations: ").append(toIndentedString(locations)).append("\n");
    sb.append("    messages: ").append(toIndentedString(messages)).append("\n");
    sb.append("    multipleDevicesAndHoldersAllowedStatus: ").append(toIndentedString(multipleDevicesAndHoldersAllowedStatus)).append("\n");
    sb.append("    programLogo: ").append(toIndentedString(programLogo)).append("\n");
    sb.append("    programName: ").append(toIndentedString(programName)).append("\n");
    sb.append("    redemptionIssuers: ").append(toIndentedString(redemptionIssuers)).append("\n");
    sb.append("    review: ").append(toIndentedString(review)).append("\n");
    sb.append("    reviewStatus: ").append(toIndentedString(reviewStatus)).append("\n");
    sb.append("    rewardsTier: ").append(toIndentedString(rewardsTier)).append("\n");
    sb.append("    rewardsTierLabel: ").append(toIndentedString(rewardsTierLabel)).append("\n");
    sb.append("    secondaryRewardsTier: ").append(toIndentedString(secondaryRewardsTier)).append("\n");
    sb.append("    secondaryRewardsTierLabel: ").append(toIndentedString(secondaryRewardsTierLabel)).append("\n");
    sb.append("    securityAnimation: ").append(toIndentedString(securityAnimation)).append("\n");
    sb.append("    textModulesData: ").append(toIndentedString(textModulesData)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    viewUnlockRequirement: ").append(toIndentedString(viewUnlockRequirement)).append("\n");
    sb.append("    wordMark: ").append(toIndentedString(wordMark)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountIdLabel");
    openapiFields.add("accountNameLabel");
    openapiFields.add("allowMultipleUsersPerObject");
    openapiFields.add("callbackOptions");
    openapiFields.add("classTemplateInfo");
    openapiFields.add("countryCode");
    openapiFields.add("discoverableProgram");
    openapiFields.add("enableSmartTap");
    openapiFields.add("heroImage");
    openapiFields.add("hexBackgroundColor");
    openapiFields.add("homepageUri");
    openapiFields.add("id");
    openapiFields.add("imageModulesData");
    openapiFields.add("infoModuleData");
    openapiFields.add("issuerName");
    openapiFields.add("kind");
    openapiFields.add("linksModuleData");
    openapiFields.add("localizedAccountIdLabel");
    openapiFields.add("localizedAccountNameLabel");
    openapiFields.add("localizedIssuerName");
    openapiFields.add("localizedProgramName");
    openapiFields.add("localizedRewardsTier");
    openapiFields.add("localizedRewardsTierLabel");
    openapiFields.add("localizedSecondaryRewardsTier");
    openapiFields.add("localizedSecondaryRewardsTierLabel");
    openapiFields.add("locations");
    openapiFields.add("messages");
    openapiFields.add("multipleDevicesAndHoldersAllowedStatus");
    openapiFields.add("programLogo");
    openapiFields.add("programName");
    openapiFields.add("redemptionIssuers");
    openapiFields.add("review");
    openapiFields.add("reviewStatus");
    openapiFields.add("rewardsTier");
    openapiFields.add("rewardsTierLabel");
    openapiFields.add("secondaryRewardsTier");
    openapiFields.add("secondaryRewardsTierLabel");
    openapiFields.add("securityAnimation");
    openapiFields.add("textModulesData");
    openapiFields.add("version");
    openapiFields.add("viewUnlockRequirement");
    openapiFields.add("wordMark");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to LoyaltyClass
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!LoyaltyClass.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in LoyaltyClass is not found in the empty JSON string", LoyaltyClass.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!LoyaltyClass.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `LoyaltyClass` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("accountIdLabel") != null && !jsonObj.get("accountIdLabel").isJsonNull()) && !jsonObj.get("accountIdLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountIdLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountIdLabel").toString()));
      }
      if ((jsonObj.get("accountNameLabel") != null && !jsonObj.get("accountNameLabel").isJsonNull()) && !jsonObj.get("accountNameLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountNameLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountNameLabel").toString()));
      }
      // validate the optional field `callbackOptions`
      if (jsonObj.get("callbackOptions") != null && !jsonObj.get("callbackOptions").isJsonNull()) {
        CallbackOptions.validateJsonElement(jsonObj.get("callbackOptions"));
      }
      // validate the optional field `classTemplateInfo`
      if (jsonObj.get("classTemplateInfo") != null && !jsonObj.get("classTemplateInfo").isJsonNull()) {
        ClassTemplateInfo.validateJsonElement(jsonObj.get("classTemplateInfo"));
      }
      if ((jsonObj.get("countryCode") != null && !jsonObj.get("countryCode").isJsonNull()) && !jsonObj.get("countryCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `countryCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("countryCode").toString()));
      }
      // validate the optional field `discoverableProgram`
      if (jsonObj.get("discoverableProgram") != null && !jsonObj.get("discoverableProgram").isJsonNull()) {
        DiscoverableProgram.validateJsonElement(jsonObj.get("discoverableProgram"));
      }
      // validate the optional field `heroImage`
      if (jsonObj.get("heroImage") != null && !jsonObj.get("heroImage").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("heroImage"));
      }
      if ((jsonObj.get("hexBackgroundColor") != null && !jsonObj.get("hexBackgroundColor").isJsonNull()) && !jsonObj.get("hexBackgroundColor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hexBackgroundColor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hexBackgroundColor").toString()));
      }
      // validate the optional field `homepageUri`
      if (jsonObj.get("homepageUri") != null && !jsonObj.get("homepageUri").isJsonNull()) {
        Uri.validateJsonElement(jsonObj.get("homepageUri"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (jsonObj.get("imageModulesData") != null && !jsonObj.get("imageModulesData").isJsonNull()) {
        JsonArray jsonArrayimageModulesData = jsonObj.getAsJsonArray("imageModulesData");
        if (jsonArrayimageModulesData != null) {
          // ensure the json data is an array
          if (!jsonObj.get("imageModulesData").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `imageModulesData` to be an array in the JSON string but got `%s`", jsonObj.get("imageModulesData").toString()));
          }

          // validate the optional field `imageModulesData` (array)
          for (int i = 0; i < jsonArrayimageModulesData.size(); i++) {
            ImageModuleData.validateJsonElement(jsonArrayimageModulesData.get(i));
          };
        }
      }
      // validate the optional field `infoModuleData`
      if (jsonObj.get("infoModuleData") != null && !jsonObj.get("infoModuleData").isJsonNull()) {
        InfoModuleData.validateJsonElement(jsonObj.get("infoModuleData"));
      }
      if ((jsonObj.get("issuerName") != null && !jsonObj.get("issuerName").isJsonNull()) && !jsonObj.get("issuerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `issuerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("issuerName").toString()));
      }
      if ((jsonObj.get("kind") != null && !jsonObj.get("kind").isJsonNull()) && !jsonObj.get("kind").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kind` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kind").toString()));
      }
      // validate the optional field `linksModuleData`
      if (jsonObj.get("linksModuleData") != null && !jsonObj.get("linksModuleData").isJsonNull()) {
        LinksModuleData.validateJsonElement(jsonObj.get("linksModuleData"));
      }
      // validate the optional field `localizedAccountIdLabel`
      if (jsonObj.get("localizedAccountIdLabel") != null && !jsonObj.get("localizedAccountIdLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedAccountIdLabel"));
      }
      // validate the optional field `localizedAccountNameLabel`
      if (jsonObj.get("localizedAccountNameLabel") != null && !jsonObj.get("localizedAccountNameLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedAccountNameLabel"));
      }
      // validate the optional field `localizedIssuerName`
      if (jsonObj.get("localizedIssuerName") != null && !jsonObj.get("localizedIssuerName").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedIssuerName"));
      }
      // validate the optional field `localizedProgramName`
      if (jsonObj.get("localizedProgramName") != null && !jsonObj.get("localizedProgramName").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedProgramName"));
      }
      // validate the optional field `localizedRewardsTier`
      if (jsonObj.get("localizedRewardsTier") != null && !jsonObj.get("localizedRewardsTier").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedRewardsTier"));
      }
      // validate the optional field `localizedRewardsTierLabel`
      if (jsonObj.get("localizedRewardsTierLabel") != null && !jsonObj.get("localizedRewardsTierLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedRewardsTierLabel"));
      }
      // validate the optional field `localizedSecondaryRewardsTier`
      if (jsonObj.get("localizedSecondaryRewardsTier") != null && !jsonObj.get("localizedSecondaryRewardsTier").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedSecondaryRewardsTier"));
      }
      // validate the optional field `localizedSecondaryRewardsTierLabel`
      if (jsonObj.get("localizedSecondaryRewardsTierLabel") != null && !jsonObj.get("localizedSecondaryRewardsTierLabel").isJsonNull()) {
        LocalizedString.validateJsonElement(jsonObj.get("localizedSecondaryRewardsTierLabel"));
      }
      if (jsonObj.get("locations") != null && !jsonObj.get("locations").isJsonNull()) {
        JsonArray jsonArraylocations = jsonObj.getAsJsonArray("locations");
        if (jsonArraylocations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("locations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `locations` to be an array in the JSON string but got `%s`", jsonObj.get("locations").toString()));
          }

          // validate the optional field `locations` (array)
          for (int i = 0; i < jsonArraylocations.size(); i++) {
            LatLongPoint.validateJsonElement(jsonArraylocations.get(i));
          };
        }
      }
      if (jsonObj.get("messages") != null && !jsonObj.get("messages").isJsonNull()) {
        JsonArray jsonArraymessages = jsonObj.getAsJsonArray("messages");
        if (jsonArraymessages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("messages").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `messages` to be an array in the JSON string but got `%s`", jsonObj.get("messages").toString()));
          }

          // validate the optional field `messages` (array)
          for (int i = 0; i < jsonArraymessages.size(); i++) {
            Message.validateJsonElement(jsonArraymessages.get(i));
          };
        }
      }
      if ((jsonObj.get("multipleDevicesAndHoldersAllowedStatus") != null && !jsonObj.get("multipleDevicesAndHoldersAllowedStatus").isJsonNull()) && !jsonObj.get("multipleDevicesAndHoldersAllowedStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `multipleDevicesAndHoldersAllowedStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("multipleDevicesAndHoldersAllowedStatus").toString()));
      }
      // validate the optional field `multipleDevicesAndHoldersAllowedStatus`
      if (jsonObj.get("multipleDevicesAndHoldersAllowedStatus") != null && !jsonObj.get("multipleDevicesAndHoldersAllowedStatus").isJsonNull()) {
        MultipleDevicesAndHoldersAllowedStatusEnum.validateJsonElement(jsonObj.get("multipleDevicesAndHoldersAllowedStatus"));
      }
      // validate the optional field `programLogo`
      if (jsonObj.get("programLogo") != null && !jsonObj.get("programLogo").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("programLogo"));
      }
      if ((jsonObj.get("programName") != null && !jsonObj.get("programName").isJsonNull()) && !jsonObj.get("programName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `programName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("programName").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("redemptionIssuers") != null && !jsonObj.get("redemptionIssuers").isJsonNull() && !jsonObj.get("redemptionIssuers").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `redemptionIssuers` to be an array in the JSON string but got `%s`", jsonObj.get("redemptionIssuers").toString()));
      }
      // validate the optional field `review`
      if (jsonObj.get("review") != null && !jsonObj.get("review").isJsonNull()) {
        Review.validateJsonElement(jsonObj.get("review"));
      }
      if ((jsonObj.get("reviewStatus") != null && !jsonObj.get("reviewStatus").isJsonNull()) && !jsonObj.get("reviewStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `reviewStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("reviewStatus").toString()));
      }
      // validate the optional field `reviewStatus`
      if (jsonObj.get("reviewStatus") != null && !jsonObj.get("reviewStatus").isJsonNull()) {
        ReviewStatusEnum.validateJsonElement(jsonObj.get("reviewStatus"));
      }
      if ((jsonObj.get("rewardsTier") != null && !jsonObj.get("rewardsTier").isJsonNull()) && !jsonObj.get("rewardsTier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rewardsTier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rewardsTier").toString()));
      }
      if ((jsonObj.get("rewardsTierLabel") != null && !jsonObj.get("rewardsTierLabel").isJsonNull()) && !jsonObj.get("rewardsTierLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `rewardsTierLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("rewardsTierLabel").toString()));
      }
      if ((jsonObj.get("secondaryRewardsTier") != null && !jsonObj.get("secondaryRewardsTier").isJsonNull()) && !jsonObj.get("secondaryRewardsTier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryRewardsTier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryRewardsTier").toString()));
      }
      if ((jsonObj.get("secondaryRewardsTierLabel") != null && !jsonObj.get("secondaryRewardsTierLabel").isJsonNull()) && !jsonObj.get("secondaryRewardsTierLabel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `secondaryRewardsTierLabel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("secondaryRewardsTierLabel").toString()));
      }
      // validate the optional field `securityAnimation`
      if (jsonObj.get("securityAnimation") != null && !jsonObj.get("securityAnimation").isJsonNull()) {
        SecurityAnimation.validateJsonElement(jsonObj.get("securityAnimation"));
      }
      if (jsonObj.get("textModulesData") != null && !jsonObj.get("textModulesData").isJsonNull()) {
        JsonArray jsonArraytextModulesData = jsonObj.getAsJsonArray("textModulesData");
        if (jsonArraytextModulesData != null) {
          // ensure the json data is an array
          if (!jsonObj.get("textModulesData").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `textModulesData` to be an array in the JSON string but got `%s`", jsonObj.get("textModulesData").toString()));
          }

          // validate the optional field `textModulesData` (array)
          for (int i = 0; i < jsonArraytextModulesData.size(); i++) {
            TextModuleData.validateJsonElement(jsonArraytextModulesData.get(i));
          };
        }
      }
      if ((jsonObj.get("version") != null && !jsonObj.get("version").isJsonNull()) && !jsonObj.get("version").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `version` to be a primitive type in the JSON string but got `%s`", jsonObj.get("version").toString()));
      }
      if ((jsonObj.get("viewUnlockRequirement") != null && !jsonObj.get("viewUnlockRequirement").isJsonNull()) && !jsonObj.get("viewUnlockRequirement").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `viewUnlockRequirement` to be a primitive type in the JSON string but got `%s`", jsonObj.get("viewUnlockRequirement").toString()));
      }
      // validate the optional field `viewUnlockRequirement`
      if (jsonObj.get("viewUnlockRequirement") != null && !jsonObj.get("viewUnlockRequirement").isJsonNull()) {
        ViewUnlockRequirementEnum.validateJsonElement(jsonObj.get("viewUnlockRequirement"));
      }
      // validate the optional field `wordMark`
      if (jsonObj.get("wordMark") != null && !jsonObj.get("wordMark").isJsonNull()) {
        Image.validateJsonElement(jsonObj.get("wordMark"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoyaltyClass.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoyaltyClass' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoyaltyClass> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoyaltyClass.class));

       return (TypeAdapter<T>) new TypeAdapter<LoyaltyClass>() {
           @Override
           public void write(JsonWriter out, LoyaltyClass value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoyaltyClass read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of LoyaltyClass given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of LoyaltyClass
   * @throws IOException if the JSON string is invalid with respect to LoyaltyClass
   */
  public static LoyaltyClass fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoyaltyClass.class);
  }

  /**
   * Convert an instance of LoyaltyClass to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

