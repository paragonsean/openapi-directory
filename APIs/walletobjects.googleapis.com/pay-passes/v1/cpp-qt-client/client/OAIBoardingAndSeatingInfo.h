/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBoardingAndSeatingInfo.h
 *
 * 
 */

#ifndef OAIBoardingAndSeatingInfo_H
#define OAIBoardingAndSeatingInfo_H

#include <QJsonObject>

#include "OAIImage.h"
#include "OAILocalizedString.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIImage;
class OAILocalizedString;

class OAIBoardingAndSeatingInfo : public OAIObject {
public:
    OAIBoardingAndSeatingInfo();
    OAIBoardingAndSeatingInfo(QString json);
    ~OAIBoardingAndSeatingInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBoardingDoor() const;
    void setBoardingDoor(const QString &boarding_door);
    bool is_boarding_door_Set() const;
    bool is_boarding_door_Valid() const;

    QString getBoardingGroup() const;
    void setBoardingGroup(const QString &boarding_group);
    bool is_boarding_group_Set() const;
    bool is_boarding_group_Valid() const;

    QString getBoardingPosition() const;
    void setBoardingPosition(const QString &boarding_position);
    bool is_boarding_position_Set() const;
    bool is_boarding_position_Valid() const;

    OAIImage getBoardingPrivilegeImage() const;
    void setBoardingPrivilegeImage(const OAIImage &boarding_privilege_image);
    bool is_boarding_privilege_image_Set() const;
    bool is_boarding_privilege_image_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAILocalizedString getSeatAssignment() const;
    void setSeatAssignment(const OAILocalizedString &seat_assignment);
    bool is_seat_assignment_Set() const;
    bool is_seat_assignment_Valid() const;

    QString getSeatClass() const;
    void setSeatClass(const QString &seat_class);
    bool is_seat_class_Set() const;
    bool is_seat_class_Valid() const;

    QString getSeatNumber() const;
    void setSeatNumber(const QString &seat_number);
    bool is_seat_number_Set() const;
    bool is_seat_number_Valid() const;

    QString getSequenceNumber() const;
    void setSequenceNumber(const QString &sequence_number);
    bool is_sequence_number_Set() const;
    bool is_sequence_number_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_boarding_door;
    bool m_boarding_door_isSet;
    bool m_boarding_door_isValid;

    QString m_boarding_group;
    bool m_boarding_group_isSet;
    bool m_boarding_group_isValid;

    QString m_boarding_position;
    bool m_boarding_position_isSet;
    bool m_boarding_position_isValid;

    OAIImage m_boarding_privilege_image;
    bool m_boarding_privilege_image_isSet;
    bool m_boarding_privilege_image_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILocalizedString m_seat_assignment;
    bool m_seat_assignment_isSet;
    bool m_seat_assignment_isValid;

    QString m_seat_class;
    bool m_seat_class_isSet;
    bool m_seat_class_isValid;

    QString m_seat_number;
    bool m_seat_number_isSet;
    bool m_seat_number_isValid;

    QString m_sequence_number;
    bool m_sequence_number_isSet;
    bool m_sequence_number_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBoardingAndSeatingInfo)

#endif // OAIBoardingAndSeatingInfo_H
