/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILoyaltyPoints.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILoyaltyPoints::OAILoyaltyPoints(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILoyaltyPoints::OAILoyaltyPoints() {
    this->initializeModel();
}

OAILoyaltyPoints::~OAILoyaltyPoints() {}

void OAILoyaltyPoints::initializeModel() {

    m_balance_isSet = false;
    m_balance_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_localized_label_isSet = false;
    m_localized_label_isValid = false;
}

void OAILoyaltyPoints::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILoyaltyPoints::fromJsonObject(QJsonObject json) {

    m_balance_isValid = ::OpenAPI::fromJsonValue(m_balance, json[QString("balance")]);
    m_balance_isSet = !json[QString("balance")].isNull() && m_balance_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_localized_label_isValid = ::OpenAPI::fromJsonValue(m_localized_label, json[QString("localizedLabel")]);
    m_localized_label_isSet = !json[QString("localizedLabel")].isNull() && m_localized_label_isValid;
}

QString OAILoyaltyPoints::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILoyaltyPoints::asJsonObject() const {
    QJsonObject obj;
    if (m_balance.isSet()) {
        obj.insert(QString("balance"), ::OpenAPI::toJsonValue(m_balance));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_localized_label.isSet()) {
        obj.insert(QString("localizedLabel"), ::OpenAPI::toJsonValue(m_localized_label));
    }
    return obj;
}

OAILoyaltyPointsBalance OAILoyaltyPoints::getBalance() const {
    return m_balance;
}
void OAILoyaltyPoints::setBalance(const OAILoyaltyPointsBalance &balance) {
    m_balance = balance;
    m_balance_isSet = true;
}

bool OAILoyaltyPoints::is_balance_Set() const{
    return m_balance_isSet;
}

bool OAILoyaltyPoints::is_balance_Valid() const{
    return m_balance_isValid;
}

QString OAILoyaltyPoints::getLabel() const {
    return m_label;
}
void OAILoyaltyPoints::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAILoyaltyPoints::is_label_Set() const{
    return m_label_isSet;
}

bool OAILoyaltyPoints::is_label_Valid() const{
    return m_label_isValid;
}

OAILocalizedString OAILoyaltyPoints::getLocalizedLabel() const {
    return m_localized_label;
}
void OAILoyaltyPoints::setLocalizedLabel(const OAILocalizedString &localized_label) {
    m_localized_label = localized_label;
    m_localized_label_isSet = true;
}

bool OAILoyaltyPoints::is_localized_label_Set() const{
    return m_localized_label_isSet;
}

bool OAILoyaltyPoints::is_localized_label_Valid() const{
    return m_localized_label_isValid;
}

bool OAILoyaltyPoints::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_balance.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_localized_label.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILoyaltyPoints::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
