/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotifications.h
 *
 * Indicates if the object needs to have notification enabled. We support only one of ExpiryNotification/UpcomingNotification. &#x60;expiryNotification&#x60; takes precedence over &#x60;upcomingNotification&#x60;. In other words if &#x60;expiryNotification&#x60; is set, we ignore the &#x60;upcomingNotification&#x60; field.
 */

#ifndef OAINotifications_H
#define OAINotifications_H

#include <QJsonObject>

#include "OAIExpiryNotification.h"
#include "OAIUpcomingNotification.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIExpiryNotification;
class OAIUpcomingNotification;

class OAINotifications : public OAIObject {
public:
    OAINotifications();
    OAINotifications(QString json);
    ~OAINotifications() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIExpiryNotification getExpiryNotification() const;
    void setExpiryNotification(const OAIExpiryNotification &expiry_notification);
    bool is_expiry_notification_Set() const;
    bool is_expiry_notification_Valid() const;

    OAIUpcomingNotification getUpcomingNotification() const;
    void setUpcomingNotification(const OAIUpcomingNotification &upcoming_notification);
    bool is_upcoming_notification_Set() const;
    bool is_upcoming_notification_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIExpiryNotification m_expiry_notification;
    bool m_expiry_notification_isSet;
    bool m_expiry_notification_isValid;

    OAIUpcomingNotification m_upcoming_notification;
    bool m_upcoming_notification_isSet;
    bool m_upcoming_notification_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotifications)

#endif // OAINotifications_H
