/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIFirstRowOption.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIFirstRowOption::OAIFirstRowOption(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIFirstRowOption::OAIFirstRowOption() {
    this->initializeModel();
}

OAIFirstRowOption::~OAIFirstRowOption() {}

void OAIFirstRowOption::initializeModel() {

    m_field_option_isSet = false;
    m_field_option_isValid = false;

    m_transit_option_isSet = false;
    m_transit_option_isValid = false;
}

void OAIFirstRowOption::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIFirstRowOption::fromJsonObject(QJsonObject json) {

    m_field_option_isValid = ::OpenAPI::fromJsonValue(m_field_option, json[QString("fieldOption")]);
    m_field_option_isSet = !json[QString("fieldOption")].isNull() && m_field_option_isValid;

    m_transit_option_isValid = ::OpenAPI::fromJsonValue(m_transit_option, json[QString("transitOption")]);
    m_transit_option_isSet = !json[QString("transitOption")].isNull() && m_transit_option_isValid;
}

QString OAIFirstRowOption::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIFirstRowOption::asJsonObject() const {
    QJsonObject obj;
    if (m_field_option.isSet()) {
        obj.insert(QString("fieldOption"), ::OpenAPI::toJsonValue(m_field_option));
    }
    if (m_transit_option_isSet) {
        obj.insert(QString("transitOption"), ::OpenAPI::toJsonValue(m_transit_option));
    }
    return obj;
}

OAIFieldSelector OAIFirstRowOption::getFieldOption() const {
    return m_field_option;
}
void OAIFirstRowOption::setFieldOption(const OAIFieldSelector &field_option) {
    m_field_option = field_option;
    m_field_option_isSet = true;
}

bool OAIFirstRowOption::is_field_option_Set() const{
    return m_field_option_isSet;
}

bool OAIFirstRowOption::is_field_option_Valid() const{
    return m_field_option_isValid;
}

QString OAIFirstRowOption::getTransitOption() const {
    return m_transit_option;
}
void OAIFirstRowOption::setTransitOption(const QString &transit_option) {
    m_transit_option = transit_option;
    m_transit_option_isSet = true;
}

bool OAIFirstRowOption::is_transit_option_Set() const{
    return m_transit_option_isSet;
}

bool OAIFirstRowOption::is_transit_option_Valid() const{
    return m_transit_option_isValid;
}

bool OAIFirstRowOption::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_option.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_transit_option_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIFirstRowOption::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
