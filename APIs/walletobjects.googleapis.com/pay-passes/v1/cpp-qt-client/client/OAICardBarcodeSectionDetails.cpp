/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICardBarcodeSectionDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICardBarcodeSectionDetails::OAICardBarcodeSectionDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICardBarcodeSectionDetails::OAICardBarcodeSectionDetails() {
    this->initializeModel();
}

OAICardBarcodeSectionDetails::~OAICardBarcodeSectionDetails() {}

void OAICardBarcodeSectionDetails::initializeModel() {

    m_first_bottom_detail_isSet = false;
    m_first_bottom_detail_isValid = false;

    m_first_top_detail_isSet = false;
    m_first_top_detail_isValid = false;

    m_second_top_detail_isSet = false;
    m_second_top_detail_isValid = false;
}

void OAICardBarcodeSectionDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICardBarcodeSectionDetails::fromJsonObject(QJsonObject json) {

    m_first_bottom_detail_isValid = ::OpenAPI::fromJsonValue(m_first_bottom_detail, json[QString("firstBottomDetail")]);
    m_first_bottom_detail_isSet = !json[QString("firstBottomDetail")].isNull() && m_first_bottom_detail_isValid;

    m_first_top_detail_isValid = ::OpenAPI::fromJsonValue(m_first_top_detail, json[QString("firstTopDetail")]);
    m_first_top_detail_isSet = !json[QString("firstTopDetail")].isNull() && m_first_top_detail_isValid;

    m_second_top_detail_isValid = ::OpenAPI::fromJsonValue(m_second_top_detail, json[QString("secondTopDetail")]);
    m_second_top_detail_isSet = !json[QString("secondTopDetail")].isNull() && m_second_top_detail_isValid;
}

QString OAICardBarcodeSectionDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICardBarcodeSectionDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_first_bottom_detail.isSet()) {
        obj.insert(QString("firstBottomDetail"), ::OpenAPI::toJsonValue(m_first_bottom_detail));
    }
    if (m_first_top_detail.isSet()) {
        obj.insert(QString("firstTopDetail"), ::OpenAPI::toJsonValue(m_first_top_detail));
    }
    if (m_second_top_detail.isSet()) {
        obj.insert(QString("secondTopDetail"), ::OpenAPI::toJsonValue(m_second_top_detail));
    }
    return obj;
}

OAIBarcodeSectionDetail OAICardBarcodeSectionDetails::getFirstBottomDetail() const {
    return m_first_bottom_detail;
}
void OAICardBarcodeSectionDetails::setFirstBottomDetail(const OAIBarcodeSectionDetail &first_bottom_detail) {
    m_first_bottom_detail = first_bottom_detail;
    m_first_bottom_detail_isSet = true;
}

bool OAICardBarcodeSectionDetails::is_first_bottom_detail_Set() const{
    return m_first_bottom_detail_isSet;
}

bool OAICardBarcodeSectionDetails::is_first_bottom_detail_Valid() const{
    return m_first_bottom_detail_isValid;
}

OAIBarcodeSectionDetail OAICardBarcodeSectionDetails::getFirstTopDetail() const {
    return m_first_top_detail;
}
void OAICardBarcodeSectionDetails::setFirstTopDetail(const OAIBarcodeSectionDetail &first_top_detail) {
    m_first_top_detail = first_top_detail;
    m_first_top_detail_isSet = true;
}

bool OAICardBarcodeSectionDetails::is_first_top_detail_Set() const{
    return m_first_top_detail_isSet;
}

bool OAICardBarcodeSectionDetails::is_first_top_detail_Valid() const{
    return m_first_top_detail_isValid;
}

OAIBarcodeSectionDetail OAICardBarcodeSectionDetails::getSecondTopDetail() const {
    return m_second_top_detail;
}
void OAICardBarcodeSectionDetails::setSecondTopDetail(const OAIBarcodeSectionDetail &second_top_detail) {
    m_second_top_detail = second_top_detail;
    m_second_top_detail_isSet = true;
}

bool OAICardBarcodeSectionDetails::is_second_top_detail_Set() const{
    return m_second_top_detail_isSet;
}

bool OAICardBarcodeSectionDetails::is_second_top_detail_Valid() const{
    return m_second_top_detail_isValid;
}

bool OAICardBarcodeSectionDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_first_bottom_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_top_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_second_top_detail.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICardBarcodeSectionDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
