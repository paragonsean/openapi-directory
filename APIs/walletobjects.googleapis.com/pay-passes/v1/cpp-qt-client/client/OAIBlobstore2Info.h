/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlobstore2Info.h
 *
 * Information to read/write to blobstore2.
 */

#ifndef OAIBlobstore2Info_H
#define OAIBlobstore2Info_H

#include <QJsonObject>

#include <QByteArray>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBlobstore2Info : public OAIObject {
public:
    OAIBlobstore2Info();
    OAIBlobstore2Info(QString json);
    ~OAIBlobstore2Info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBlobGeneration() const;
    void setBlobGeneration(const QString &blob_generation);
    bool is_blob_generation_Set() const;
    bool is_blob_generation_Valid() const;

    QString getBlobId() const;
    void setBlobId(const QString &blob_id);
    bool is_blob_id_Set() const;
    bool is_blob_id_Valid() const;

    QByteArray getDownloadReadHandle() const;
    void setDownloadReadHandle(const QByteArray &download_read_handle);
    bool is_download_read_handle_Set() const;
    bool is_download_read_handle_Valid() const;

    QString getReadToken() const;
    void setReadToken(const QString &read_token);
    bool is_read_token_Set() const;
    bool is_read_token_Valid() const;

    QByteArray getUploadMetadataContainer() const;
    void setUploadMetadataContainer(const QByteArray &upload_metadata_container);
    bool is_upload_metadata_container_Set() const;
    bool is_upload_metadata_container_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_blob_generation;
    bool m_blob_generation_isSet;
    bool m_blob_generation_isValid;

    QString m_blob_id;
    bool m_blob_id_isSet;
    bool m_blob_id_isValid;

    QByteArray m_download_read_handle;
    bool m_download_read_handle_isSet;
    bool m_download_read_handle_isValid;

    QString m_read_token;
    bool m_read_token_isSet;
    bool m_read_token_isValid;

    QByteArray m_upload_metadata_container;
    bool m_upload_metadata_container_isSet;
    bool m_upload_metadata_container_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlobstore2Info)

#endif // OAIBlobstore2Info_H
