/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessage.h
 *
 * A message that will be displayed with a Valuable
 */

#ifndef OAIMessage_H
#define OAIMessage_H

#include <QJsonObject>

#include "OAILocalizedString.h"
#include "OAITimeInterval.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITimeInterval;
class OAILocalizedString;

class OAIMessage : public OAIObject {
public:
    OAIMessage();
    OAIMessage(QString json);
    ~OAIMessage() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    OAITimeInterval getDisplayInterval() const;
    void setDisplayInterval(const OAITimeInterval &display_interval);
    bool is_display_interval_Set() const;
    bool is_display_interval_Valid() const;

    QString getHeader() const;
    void setHeader(const QString &header);
    bool is_header_Set() const;
    bool is_header_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAILocalizedString getLocalizedBody() const;
    void setLocalizedBody(const OAILocalizedString &localized_body);
    bool is_localized_body_Set() const;
    bool is_localized_body_Valid() const;

    OAILocalizedString getLocalizedHeader() const;
    void setLocalizedHeader(const OAILocalizedString &localized_header);
    bool is_localized_header_Set() const;
    bool is_localized_header_Valid() const;

    QString getMessageType() const;
    void setMessageType(const QString &message_type);
    bool is_message_type_Set() const;
    bool is_message_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    OAITimeInterval m_display_interval;
    bool m_display_interval_isSet;
    bool m_display_interval_isValid;

    QString m_header;
    bool m_header_isSet;
    bool m_header_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAILocalizedString m_localized_body;
    bool m_localized_body_isSet;
    bool m_localized_body_isValid;

    OAILocalizedString m_localized_header;
    bool m_localized_header_isSet;
    bool m_localized_header_isValid;

    QString m_message_type;
    bool m_message_type_isSet;
    bool m_message_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessage)

#endif // OAIMessage_H
