/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRotatingBarcodeTotpDetailsTotpParameters.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRotatingBarcodeTotpDetailsTotpParameters::OAIRotatingBarcodeTotpDetailsTotpParameters(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRotatingBarcodeTotpDetailsTotpParameters::OAIRotatingBarcodeTotpDetailsTotpParameters() {
    this->initializeModel();
}

OAIRotatingBarcodeTotpDetailsTotpParameters::~OAIRotatingBarcodeTotpDetailsTotpParameters() {}

void OAIRotatingBarcodeTotpDetailsTotpParameters::initializeModel() {

    m_key_isSet = false;
    m_key_isValid = false;

    m_value_length_isSet = false;
    m_value_length_isValid = false;
}

void OAIRotatingBarcodeTotpDetailsTotpParameters::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRotatingBarcodeTotpDetailsTotpParameters::fromJsonObject(QJsonObject json) {

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_value_length_isValid = ::OpenAPI::fromJsonValue(m_value_length, json[QString("valueLength")]);
    m_value_length_isSet = !json[QString("valueLength")].isNull() && m_value_length_isValid;
}

QString OAIRotatingBarcodeTotpDetailsTotpParameters::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRotatingBarcodeTotpDetailsTotpParameters::asJsonObject() const {
    QJsonObject obj;
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_value_length_isSet) {
        obj.insert(QString("valueLength"), ::OpenAPI::toJsonValue(m_value_length));
    }
    return obj;
}

QString OAIRotatingBarcodeTotpDetailsTotpParameters::getKey() const {
    return m_key;
}
void OAIRotatingBarcodeTotpDetailsTotpParameters::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIRotatingBarcodeTotpDetailsTotpParameters::is_key_Set() const{
    return m_key_isSet;
}

bool OAIRotatingBarcodeTotpDetailsTotpParameters::is_key_Valid() const{
    return m_key_isValid;
}

qint32 OAIRotatingBarcodeTotpDetailsTotpParameters::getValueLength() const {
    return m_value_length;
}
void OAIRotatingBarcodeTotpDetailsTotpParameters::setValueLength(const qint32 &value_length) {
    m_value_length = value_length;
    m_value_length_isSet = true;
}

bool OAIRotatingBarcodeTotpDetailsTotpParameters::is_value_length_Set() const{
    return m_value_length_isSet;
}

bool OAIRotatingBarcodeTotpDetailsTotpParameters::is_value_length_Valid() const{
    return m_value_length_isValid;
}

bool OAIRotatingBarcodeTotpDetailsTotpParameters::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_length_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRotatingBarcodeTotpDetailsTotpParameters::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
