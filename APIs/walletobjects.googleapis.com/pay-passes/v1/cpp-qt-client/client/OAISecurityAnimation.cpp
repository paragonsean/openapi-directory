/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityAnimation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityAnimation::OAISecurityAnimation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityAnimation::OAISecurityAnimation() {
    this->initializeModel();
}

OAISecurityAnimation::~OAISecurityAnimation() {}

void OAISecurityAnimation::initializeModel() {

    m_animation_type_isSet = false;
    m_animation_type_isValid = false;
}

void OAISecurityAnimation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISecurityAnimation::fromJsonObject(QJsonObject json) {

    m_animation_type_isValid = ::OpenAPI::fromJsonValue(m_animation_type, json[QString("animationType")]);
    m_animation_type_isSet = !json[QString("animationType")].isNull() && m_animation_type_isValid;
}

QString OAISecurityAnimation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISecurityAnimation::asJsonObject() const {
    QJsonObject obj;
    if (m_animation_type_isSet) {
        obj.insert(QString("animationType"), ::OpenAPI::toJsonValue(m_animation_type));
    }
    return obj;
}

QString OAISecurityAnimation::getAnimationType() const {
    return m_animation_type;
}
void OAISecurityAnimation::setAnimationType(const QString &animation_type) {
    m_animation_type = animation_type;
    m_animation_type_isSet = true;
}

bool OAISecurityAnimation::is_animation_type_Set() const{
    return m_animation_type_isSet;
}

bool OAISecurityAnimation::is_animation_type_Valid() const{
    return m_animation_type_isValid;
}

bool OAISecurityAnimation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_animation_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISecurityAnimation::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
