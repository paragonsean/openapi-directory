/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIModifyLinkedOfferObjects.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIModifyLinkedOfferObjects::OAIModifyLinkedOfferObjects(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIModifyLinkedOfferObjects::OAIModifyLinkedOfferObjects() {
    this->initializeModel();
}

OAIModifyLinkedOfferObjects::~OAIModifyLinkedOfferObjects() {}

void OAIModifyLinkedOfferObjects::initializeModel() {

    m_add_linked_offer_object_ids_isSet = false;
    m_add_linked_offer_object_ids_isValid = false;

    m_remove_linked_offer_object_ids_isSet = false;
    m_remove_linked_offer_object_ids_isValid = false;
}

void OAIModifyLinkedOfferObjects::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIModifyLinkedOfferObjects::fromJsonObject(QJsonObject json) {

    m_add_linked_offer_object_ids_isValid = ::OpenAPI::fromJsonValue(m_add_linked_offer_object_ids, json[QString("addLinkedOfferObjectIds")]);
    m_add_linked_offer_object_ids_isSet = !json[QString("addLinkedOfferObjectIds")].isNull() && m_add_linked_offer_object_ids_isValid;

    m_remove_linked_offer_object_ids_isValid = ::OpenAPI::fromJsonValue(m_remove_linked_offer_object_ids, json[QString("removeLinkedOfferObjectIds")]);
    m_remove_linked_offer_object_ids_isSet = !json[QString("removeLinkedOfferObjectIds")].isNull() && m_remove_linked_offer_object_ids_isValid;
}

QString OAIModifyLinkedOfferObjects::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIModifyLinkedOfferObjects::asJsonObject() const {
    QJsonObject obj;
    if (m_add_linked_offer_object_ids.size() > 0) {
        obj.insert(QString("addLinkedOfferObjectIds"), ::OpenAPI::toJsonValue(m_add_linked_offer_object_ids));
    }
    if (m_remove_linked_offer_object_ids.size() > 0) {
        obj.insert(QString("removeLinkedOfferObjectIds"), ::OpenAPI::toJsonValue(m_remove_linked_offer_object_ids));
    }
    return obj;
}

QList<QString> OAIModifyLinkedOfferObjects::getAddLinkedOfferObjectIds() const {
    return m_add_linked_offer_object_ids;
}
void OAIModifyLinkedOfferObjects::setAddLinkedOfferObjectIds(const QList<QString> &add_linked_offer_object_ids) {
    m_add_linked_offer_object_ids = add_linked_offer_object_ids;
    m_add_linked_offer_object_ids_isSet = true;
}

bool OAIModifyLinkedOfferObjects::is_add_linked_offer_object_ids_Set() const{
    return m_add_linked_offer_object_ids_isSet;
}

bool OAIModifyLinkedOfferObjects::is_add_linked_offer_object_ids_Valid() const{
    return m_add_linked_offer_object_ids_isValid;
}

QList<QString> OAIModifyLinkedOfferObjects::getRemoveLinkedOfferObjectIds() const {
    return m_remove_linked_offer_object_ids;
}
void OAIModifyLinkedOfferObjects::setRemoveLinkedOfferObjectIds(const QList<QString> &remove_linked_offer_object_ids) {
    m_remove_linked_offer_object_ids = remove_linked_offer_object_ids;
    m_remove_linked_offer_object_ids_isSet = true;
}

bool OAIModifyLinkedOfferObjects::is_remove_linked_offer_object_ids_Set() const{
    return m_remove_linked_offer_object_ids_isSet;
}

bool OAIModifyLinkedOfferObjects::is_remove_linked_offer_object_ids_Valid() const{
    return m_remove_linked_offer_object_ids_isValid;
}

bool OAIModifyLinkedOfferObjects::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_add_linked_offer_object_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_linked_offer_object_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIModifyLinkedOfferObjects::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
