/**
 * Google Pay Passes API
 * API for issuers to save and manage Google Wallet Objects.
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIObjectId.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIObjectId::OAIObjectId(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIObjectId::OAIObjectId() {
    this->initializeModel();
}

OAIObjectId::~OAIObjectId() {}

void OAIObjectId::initializeModel() {

    m_bucket_name_isSet = false;
    m_bucket_name_isValid = false;

    m_generation_isSet = false;
    m_generation_isValid = false;

    m_object_name_isSet = false;
    m_object_name_isValid = false;
}

void OAIObjectId::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIObjectId::fromJsonObject(QJsonObject json) {

    m_bucket_name_isValid = ::OpenAPI::fromJsonValue(m_bucket_name, json[QString("bucketName")]);
    m_bucket_name_isSet = !json[QString("bucketName")].isNull() && m_bucket_name_isValid;

    m_generation_isValid = ::OpenAPI::fromJsonValue(m_generation, json[QString("generation")]);
    m_generation_isSet = !json[QString("generation")].isNull() && m_generation_isValid;

    m_object_name_isValid = ::OpenAPI::fromJsonValue(m_object_name, json[QString("objectName")]);
    m_object_name_isSet = !json[QString("objectName")].isNull() && m_object_name_isValid;
}

QString OAIObjectId::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIObjectId::asJsonObject() const {
    QJsonObject obj;
    if (m_bucket_name_isSet) {
        obj.insert(QString("bucketName"), ::OpenAPI::toJsonValue(m_bucket_name));
    }
    if (m_generation_isSet) {
        obj.insert(QString("generation"), ::OpenAPI::toJsonValue(m_generation));
    }
    if (m_object_name_isSet) {
        obj.insert(QString("objectName"), ::OpenAPI::toJsonValue(m_object_name));
    }
    return obj;
}

QString OAIObjectId::getBucketName() const {
    return m_bucket_name;
}
void OAIObjectId::setBucketName(const QString &bucket_name) {
    m_bucket_name = bucket_name;
    m_bucket_name_isSet = true;
}

bool OAIObjectId::is_bucket_name_Set() const{
    return m_bucket_name_isSet;
}

bool OAIObjectId::is_bucket_name_Valid() const{
    return m_bucket_name_isValid;
}

QString OAIObjectId::getGeneration() const {
    return m_generation;
}
void OAIObjectId::setGeneration(const QString &generation) {
    m_generation = generation;
    m_generation_isSet = true;
}

bool OAIObjectId::is_generation_Set() const{
    return m_generation_isSet;
}

bool OAIObjectId::is_generation_Valid() const{
    return m_generation_isValid;
}

QString OAIObjectId::getObjectName() const {
    return m_object_name;
}
void OAIObjectId::setObjectName(const QString &object_name) {
    m_object_name = object_name;
    m_object_name_isSet = true;
}

bool OAIObjectId::is_object_name_Set() const{
    return m_object_name_isSet;
}

bool OAIObjectId::is_object_name_Valid() const{
    return m_object_name_isValid;
}

bool OAIObjectId::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_bucket_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_generation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIObjectId::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
