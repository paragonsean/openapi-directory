# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.localized_string import LocalizedString
from openapi_server.models.loyalty_points_balance import LoyaltyPointsBalance
from openapi_server import util


class LoyaltyPoints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, balance: LoyaltyPointsBalance=None, label: str=None, localized_label: LocalizedString=None):
        """LoyaltyPoints - a model defined in OpenAPI

        :param balance: The balance of this LoyaltyPoints.
        :param label: The label of this LoyaltyPoints.
        :param localized_label: The localized_label of this LoyaltyPoints.
        """
        self.openapi_types = {
            'balance': LoyaltyPointsBalance,
            'label': str,
            'localized_label': LocalizedString
        }

        self.attribute_map = {
            'balance': 'balance',
            'label': 'label',
            'localized_label': 'localizedLabel'
        }

        self._balance = balance
        self._label = label
        self._localized_label = localized_label

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoyaltyPoints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LoyaltyPoints of this LoyaltyPoints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def balance(self):
        """Gets the balance of this LoyaltyPoints.


        :return: The balance of this LoyaltyPoints.
        :rtype: LoyaltyPointsBalance
        """
        return self._balance

    @balance.setter
    def balance(self, balance):
        """Sets the balance of this LoyaltyPoints.


        :param balance: The balance of this LoyaltyPoints.
        :type balance: LoyaltyPointsBalance
        """

        self._balance = balance

    @property
    def label(self):
        """Gets the label of this LoyaltyPoints.

        The loyalty points label, such as \"Points\". Recommended maximum length is 9 characters.

        :return: The label of this LoyaltyPoints.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this LoyaltyPoints.

        The loyalty points label, such as \"Points\". Recommended maximum length is 9 characters.

        :param label: The label of this LoyaltyPoints.
        :type label: str
        """

        self._label = label

    @property
    def localized_label(self):
        """Gets the localized_label of this LoyaltyPoints.


        :return: The localized_label of this LoyaltyPoints.
        :rtype: LocalizedString
        """
        return self._localized_label

    @localized_label.setter
    def localized_label(self, localized_label):
        """Sets the localized_label of this LoyaltyPoints.


        :param localized_label: The localized_label of this LoyaltyPoints.
        :type localized_label: LocalizedString
        """

        self._localized_label = localized_label
