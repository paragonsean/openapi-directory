# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TranslatedString(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, kind: str=None, language: str=None, value: str=None):
        """TranslatedString - a model defined in OpenAPI

        :param kind: The kind of this TranslatedString.
        :param language: The language of this TranslatedString.
        :param value: The value of this TranslatedString.
        """
        self.openapi_types = {
            'kind': str,
            'language': str,
            'value': str
        }

        self.attribute_map = {
            'kind': 'kind',
            'language': 'language',
            'value': 'value'
        }

        self._kind = kind
        self._language = language
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TranslatedString':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TranslatedString of this TranslatedString.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def kind(self):
        """Gets the kind of this TranslatedString.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.

        :return: The kind of this TranslatedString.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this TranslatedString.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#translatedString\"`.

        :param kind: The kind of this TranslatedString.
        :type kind: str
        """

        self._kind = kind

    @property
    def language(self):
        """Gets the language of this TranslatedString.

        Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".

        :return: The language of this TranslatedString.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this TranslatedString.

        Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".

        :param language: The language of this TranslatedString.
        :type language: str
        """

        self._language = language

    @property
    def value(self):
        """Gets the value of this TranslatedString.

        The UTF-8 encoded translated string.

        :return: The value of this TranslatedString.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this TranslatedString.

        The UTF-8 encoded translated string.

        :param value: The value of this TranslatedString.
        :type value: str
        """

        self._value = value
