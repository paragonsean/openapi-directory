# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UploadPrivateImageResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, private_content_id: str=None):
        """UploadPrivateImageResponse - a model defined in OpenAPI

        :param private_content_id: The private_content_id of this UploadPrivateImageResponse.
        """
        self.openapi_types = {
            'private_content_id': str
        }

        self.attribute_map = {
            'private_content_id': 'privateContentId'
        }

        self._private_content_id = private_content_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UploadPrivateImageResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UploadPrivateImageResponse of this UploadPrivateImageResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def private_content_id(self):
        """Gets the private_content_id of this UploadPrivateImageResponse.

        A 64-bit content id for the image that was uploaded by the Issuer.

        :return: The private_content_id of this UploadPrivateImageResponse.
        :rtype: str
        """
        return self._private_content_id

    @private_content_id.setter
    def private_content_id(self, private_content_id):
        """Sets the private_content_id of this UploadPrivateImageResponse.

        A 64-bit content id for the image that was uploaded by the Issuer.

        :param private_content_id: The private_content_id of this UploadPrivateImageResponse.
        :type private_content_id: str
        """

        self._private_content_id = private_content_id
