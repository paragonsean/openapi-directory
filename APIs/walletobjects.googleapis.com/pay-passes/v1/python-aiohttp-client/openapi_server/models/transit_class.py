# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.activation_options import ActivationOptions
from openapi_server.models.callback_options import CallbackOptions
from openapi_server.models.class_template_info import ClassTemplateInfo
from openapi_server.models.image import Image
from openapi_server.models.image_module_data import ImageModuleData
from openapi_server.models.info_module_data import InfoModuleData
from openapi_server.models.lat_long_point import LatLongPoint
from openapi_server.models.links_module_data import LinksModuleData
from openapi_server.models.localized_string import LocalizedString
from openapi_server.models.message import Message
from openapi_server.models.review import Review
from openapi_server.models.security_animation import SecurityAnimation
from openapi_server.models.text_module_data import TextModuleData
from openapi_server.models.uri import Uri
from openapi_server import util


class TransitClass(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activation_options: ActivationOptions=None, allow_multiple_users_per_object: bool=None, callback_options: CallbackOptions=None, class_template_info: ClassTemplateInfo=None, country_code: str=None, custom_carriage_label: LocalizedString=None, custom_coach_label: LocalizedString=None, custom_concession_category_label: LocalizedString=None, custom_confirmation_code_label: LocalizedString=None, custom_discount_message_label: LocalizedString=None, custom_fare_class_label: LocalizedString=None, custom_fare_name_label: LocalizedString=None, custom_other_restrictions_label: LocalizedString=None, custom_platform_label: LocalizedString=None, custom_purchase_face_value_label: LocalizedString=None, custom_purchase_price_label: LocalizedString=None, custom_purchase_receipt_number_label: LocalizedString=None, custom_route_restrictions_details_label: LocalizedString=None, custom_route_restrictions_label: LocalizedString=None, custom_seat_label: LocalizedString=None, custom_ticket_number_label: LocalizedString=None, custom_time_restrictions_label: LocalizedString=None, custom_transit_terminus_name_label: LocalizedString=None, custom_zone_label: LocalizedString=None, enable_single_leg_itinerary: bool=None, enable_smart_tap: bool=None, hero_image: Image=None, hex_background_color: str=None, homepage_uri: Uri=None, id: str=None, image_modules_data: List[ImageModuleData]=None, info_module_data: InfoModuleData=None, issuer_name: str=None, language_override: str=None, links_module_data: LinksModuleData=None, localized_issuer_name: LocalizedString=None, locations: List[LatLongPoint]=None, logo: Image=None, messages: List[Message]=None, multiple_devices_and_holders_allowed_status: str=None, redemption_issuers: List[str]=None, review: Review=None, review_status: str=None, security_animation: SecurityAnimation=None, text_modules_data: List[TextModuleData]=None, transit_operator_name: LocalizedString=None, transit_type: str=None, version: str=None, view_unlock_requirement: str=None, watermark: Image=None, word_mark: Image=None):
        """TransitClass - a model defined in OpenAPI

        :param activation_options: The activation_options of this TransitClass.
        :param allow_multiple_users_per_object: The allow_multiple_users_per_object of this TransitClass.
        :param callback_options: The callback_options of this TransitClass.
        :param class_template_info: The class_template_info of this TransitClass.
        :param country_code: The country_code of this TransitClass.
        :param custom_carriage_label: The custom_carriage_label of this TransitClass.
        :param custom_coach_label: The custom_coach_label of this TransitClass.
        :param custom_concession_category_label: The custom_concession_category_label of this TransitClass.
        :param custom_confirmation_code_label: The custom_confirmation_code_label of this TransitClass.
        :param custom_discount_message_label: The custom_discount_message_label of this TransitClass.
        :param custom_fare_class_label: The custom_fare_class_label of this TransitClass.
        :param custom_fare_name_label: The custom_fare_name_label of this TransitClass.
        :param custom_other_restrictions_label: The custom_other_restrictions_label of this TransitClass.
        :param custom_platform_label: The custom_platform_label of this TransitClass.
        :param custom_purchase_face_value_label: The custom_purchase_face_value_label of this TransitClass.
        :param custom_purchase_price_label: The custom_purchase_price_label of this TransitClass.
        :param custom_purchase_receipt_number_label: The custom_purchase_receipt_number_label of this TransitClass.
        :param custom_route_restrictions_details_label: The custom_route_restrictions_details_label of this TransitClass.
        :param custom_route_restrictions_label: The custom_route_restrictions_label of this TransitClass.
        :param custom_seat_label: The custom_seat_label of this TransitClass.
        :param custom_ticket_number_label: The custom_ticket_number_label of this TransitClass.
        :param custom_time_restrictions_label: The custom_time_restrictions_label of this TransitClass.
        :param custom_transit_terminus_name_label: The custom_transit_terminus_name_label of this TransitClass.
        :param custom_zone_label: The custom_zone_label of this TransitClass.
        :param enable_single_leg_itinerary: The enable_single_leg_itinerary of this TransitClass.
        :param enable_smart_tap: The enable_smart_tap of this TransitClass.
        :param hero_image: The hero_image of this TransitClass.
        :param hex_background_color: The hex_background_color of this TransitClass.
        :param homepage_uri: The homepage_uri of this TransitClass.
        :param id: The id of this TransitClass.
        :param image_modules_data: The image_modules_data of this TransitClass.
        :param info_module_data: The info_module_data of this TransitClass.
        :param issuer_name: The issuer_name of this TransitClass.
        :param language_override: The language_override of this TransitClass.
        :param links_module_data: The links_module_data of this TransitClass.
        :param localized_issuer_name: The localized_issuer_name of this TransitClass.
        :param locations: The locations of this TransitClass.
        :param logo: The logo of this TransitClass.
        :param messages: The messages of this TransitClass.
        :param multiple_devices_and_holders_allowed_status: The multiple_devices_and_holders_allowed_status of this TransitClass.
        :param redemption_issuers: The redemption_issuers of this TransitClass.
        :param review: The review of this TransitClass.
        :param review_status: The review_status of this TransitClass.
        :param security_animation: The security_animation of this TransitClass.
        :param text_modules_data: The text_modules_data of this TransitClass.
        :param transit_operator_name: The transit_operator_name of this TransitClass.
        :param transit_type: The transit_type of this TransitClass.
        :param version: The version of this TransitClass.
        :param view_unlock_requirement: The view_unlock_requirement of this TransitClass.
        :param watermark: The watermark of this TransitClass.
        :param word_mark: The word_mark of this TransitClass.
        """
        self.openapi_types = {
            'activation_options': ActivationOptions,
            'allow_multiple_users_per_object': bool,
            'callback_options': CallbackOptions,
            'class_template_info': ClassTemplateInfo,
            'country_code': str,
            'custom_carriage_label': LocalizedString,
            'custom_coach_label': LocalizedString,
            'custom_concession_category_label': LocalizedString,
            'custom_confirmation_code_label': LocalizedString,
            'custom_discount_message_label': LocalizedString,
            'custom_fare_class_label': LocalizedString,
            'custom_fare_name_label': LocalizedString,
            'custom_other_restrictions_label': LocalizedString,
            'custom_platform_label': LocalizedString,
            'custom_purchase_face_value_label': LocalizedString,
            'custom_purchase_price_label': LocalizedString,
            'custom_purchase_receipt_number_label': LocalizedString,
            'custom_route_restrictions_details_label': LocalizedString,
            'custom_route_restrictions_label': LocalizedString,
            'custom_seat_label': LocalizedString,
            'custom_ticket_number_label': LocalizedString,
            'custom_time_restrictions_label': LocalizedString,
            'custom_transit_terminus_name_label': LocalizedString,
            'custom_zone_label': LocalizedString,
            'enable_single_leg_itinerary': bool,
            'enable_smart_tap': bool,
            'hero_image': Image,
            'hex_background_color': str,
            'homepage_uri': Uri,
            'id': str,
            'image_modules_data': List[ImageModuleData],
            'info_module_data': InfoModuleData,
            'issuer_name': str,
            'language_override': str,
            'links_module_data': LinksModuleData,
            'localized_issuer_name': LocalizedString,
            'locations': List[LatLongPoint],
            'logo': Image,
            'messages': List[Message],
            'multiple_devices_and_holders_allowed_status': str,
            'redemption_issuers': List[str],
            'review': Review,
            'review_status': str,
            'security_animation': SecurityAnimation,
            'text_modules_data': List[TextModuleData],
            'transit_operator_name': LocalizedString,
            'transit_type': str,
            'version': str,
            'view_unlock_requirement': str,
            'watermark': Image,
            'word_mark': Image
        }

        self.attribute_map = {
            'activation_options': 'activationOptions',
            'allow_multiple_users_per_object': 'allowMultipleUsersPerObject',
            'callback_options': 'callbackOptions',
            'class_template_info': 'classTemplateInfo',
            'country_code': 'countryCode',
            'custom_carriage_label': 'customCarriageLabel',
            'custom_coach_label': 'customCoachLabel',
            'custom_concession_category_label': 'customConcessionCategoryLabel',
            'custom_confirmation_code_label': 'customConfirmationCodeLabel',
            'custom_discount_message_label': 'customDiscountMessageLabel',
            'custom_fare_class_label': 'customFareClassLabel',
            'custom_fare_name_label': 'customFareNameLabel',
            'custom_other_restrictions_label': 'customOtherRestrictionsLabel',
            'custom_platform_label': 'customPlatformLabel',
            'custom_purchase_face_value_label': 'customPurchaseFaceValueLabel',
            'custom_purchase_price_label': 'customPurchasePriceLabel',
            'custom_purchase_receipt_number_label': 'customPurchaseReceiptNumberLabel',
            'custom_route_restrictions_details_label': 'customRouteRestrictionsDetailsLabel',
            'custom_route_restrictions_label': 'customRouteRestrictionsLabel',
            'custom_seat_label': 'customSeatLabel',
            'custom_ticket_number_label': 'customTicketNumberLabel',
            'custom_time_restrictions_label': 'customTimeRestrictionsLabel',
            'custom_transit_terminus_name_label': 'customTransitTerminusNameLabel',
            'custom_zone_label': 'customZoneLabel',
            'enable_single_leg_itinerary': 'enableSingleLegItinerary',
            'enable_smart_tap': 'enableSmartTap',
            'hero_image': 'heroImage',
            'hex_background_color': 'hexBackgroundColor',
            'homepage_uri': 'homepageUri',
            'id': 'id',
            'image_modules_data': 'imageModulesData',
            'info_module_data': 'infoModuleData',
            'issuer_name': 'issuerName',
            'language_override': 'languageOverride',
            'links_module_data': 'linksModuleData',
            'localized_issuer_name': 'localizedIssuerName',
            'locations': 'locations',
            'logo': 'logo',
            'messages': 'messages',
            'multiple_devices_and_holders_allowed_status': 'multipleDevicesAndHoldersAllowedStatus',
            'redemption_issuers': 'redemptionIssuers',
            'review': 'review',
            'review_status': 'reviewStatus',
            'security_animation': 'securityAnimation',
            'text_modules_data': 'textModulesData',
            'transit_operator_name': 'transitOperatorName',
            'transit_type': 'transitType',
            'version': 'version',
            'view_unlock_requirement': 'viewUnlockRequirement',
            'watermark': 'watermark',
            'word_mark': 'wordMark'
        }

        self._activation_options = activation_options
        self._allow_multiple_users_per_object = allow_multiple_users_per_object
        self._callback_options = callback_options
        self._class_template_info = class_template_info
        self._country_code = country_code
        self._custom_carriage_label = custom_carriage_label
        self._custom_coach_label = custom_coach_label
        self._custom_concession_category_label = custom_concession_category_label
        self._custom_confirmation_code_label = custom_confirmation_code_label
        self._custom_discount_message_label = custom_discount_message_label
        self._custom_fare_class_label = custom_fare_class_label
        self._custom_fare_name_label = custom_fare_name_label
        self._custom_other_restrictions_label = custom_other_restrictions_label
        self._custom_platform_label = custom_platform_label
        self._custom_purchase_face_value_label = custom_purchase_face_value_label
        self._custom_purchase_price_label = custom_purchase_price_label
        self._custom_purchase_receipt_number_label = custom_purchase_receipt_number_label
        self._custom_route_restrictions_details_label = custom_route_restrictions_details_label
        self._custom_route_restrictions_label = custom_route_restrictions_label
        self._custom_seat_label = custom_seat_label
        self._custom_ticket_number_label = custom_ticket_number_label
        self._custom_time_restrictions_label = custom_time_restrictions_label
        self._custom_transit_terminus_name_label = custom_transit_terminus_name_label
        self._custom_zone_label = custom_zone_label
        self._enable_single_leg_itinerary = enable_single_leg_itinerary
        self._enable_smart_tap = enable_smart_tap
        self._hero_image = hero_image
        self._hex_background_color = hex_background_color
        self._homepage_uri = homepage_uri
        self._id = id
        self._image_modules_data = image_modules_data
        self._info_module_data = info_module_data
        self._issuer_name = issuer_name
        self._language_override = language_override
        self._links_module_data = links_module_data
        self._localized_issuer_name = localized_issuer_name
        self._locations = locations
        self._logo = logo
        self._messages = messages
        self._multiple_devices_and_holders_allowed_status = multiple_devices_and_holders_allowed_status
        self._redemption_issuers = redemption_issuers
        self._review = review
        self._review_status = review_status
        self._security_animation = security_animation
        self._text_modules_data = text_modules_data
        self._transit_operator_name = transit_operator_name
        self._transit_type = transit_type
        self._version = version
        self._view_unlock_requirement = view_unlock_requirement
        self._watermark = watermark
        self._word_mark = word_mark

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TransitClass':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TransitClass of this TransitClass.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activation_options(self):
        """Gets the activation_options of this TransitClass.


        :return: The activation_options of this TransitClass.
        :rtype: ActivationOptions
        """
        return self._activation_options

    @activation_options.setter
    def activation_options(self, activation_options):
        """Sets the activation_options of this TransitClass.


        :param activation_options: The activation_options of this TransitClass.
        :type activation_options: ActivationOptions
        """

        self._activation_options = activation_options

    @property
    def allow_multiple_users_per_object(self):
        """Gets the allow_multiple_users_per_object of this TransitClass.

        Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.

        :return: The allow_multiple_users_per_object of this TransitClass.
        :rtype: bool
        """
        return self._allow_multiple_users_per_object

    @allow_multiple_users_per_object.setter
    def allow_multiple_users_per_object(self, allow_multiple_users_per_object):
        """Sets the allow_multiple_users_per_object of this TransitClass.

        Deprecated. Use `multipleDevicesAndHoldersAllowedStatus` instead.

        :param allow_multiple_users_per_object: The allow_multiple_users_per_object of this TransitClass.
        :type allow_multiple_users_per_object: bool
        """

        self._allow_multiple_users_per_object = allow_multiple_users_per_object

    @property
    def callback_options(self):
        """Gets the callback_options of this TransitClass.


        :return: The callback_options of this TransitClass.
        :rtype: CallbackOptions
        """
        return self._callback_options

    @callback_options.setter
    def callback_options(self, callback_options):
        """Sets the callback_options of this TransitClass.


        :param callback_options: The callback_options of this TransitClass.
        :type callback_options: CallbackOptions
        """

        self._callback_options = callback_options

    @property
    def class_template_info(self):
        """Gets the class_template_info of this TransitClass.


        :return: The class_template_info of this TransitClass.
        :rtype: ClassTemplateInfo
        """
        return self._class_template_info

    @class_template_info.setter
    def class_template_info(self, class_template_info):
        """Sets the class_template_info of this TransitClass.


        :param class_template_info: The class_template_info of this TransitClass.
        :type class_template_info: ClassTemplateInfo
        """

        self._class_template_info = class_template_info

    @property
    def country_code(self):
        """Gets the country_code of this TransitClass.

        Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.

        :return: The country_code of this TransitClass.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this TransitClass.

        Country code used to display the card's country (when the user is not in that country), as well as to display localized content when content is not available in the user's locale.

        :param country_code: The country_code of this TransitClass.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def custom_carriage_label(self):
        """Gets the custom_carriage_label of this TransitClass.


        :return: The custom_carriage_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_carriage_label

    @custom_carriage_label.setter
    def custom_carriage_label(self, custom_carriage_label):
        """Sets the custom_carriage_label of this TransitClass.


        :param custom_carriage_label: The custom_carriage_label of this TransitClass.
        :type custom_carriage_label: LocalizedString
        """

        self._custom_carriage_label = custom_carriage_label

    @property
    def custom_coach_label(self):
        """Gets the custom_coach_label of this TransitClass.


        :return: The custom_coach_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_coach_label

    @custom_coach_label.setter
    def custom_coach_label(self, custom_coach_label):
        """Sets the custom_coach_label of this TransitClass.


        :param custom_coach_label: The custom_coach_label of this TransitClass.
        :type custom_coach_label: LocalizedString
        """

        self._custom_coach_label = custom_coach_label

    @property
    def custom_concession_category_label(self):
        """Gets the custom_concession_category_label of this TransitClass.


        :return: The custom_concession_category_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_concession_category_label

    @custom_concession_category_label.setter
    def custom_concession_category_label(self, custom_concession_category_label):
        """Sets the custom_concession_category_label of this TransitClass.


        :param custom_concession_category_label: The custom_concession_category_label of this TransitClass.
        :type custom_concession_category_label: LocalizedString
        """

        self._custom_concession_category_label = custom_concession_category_label

    @property
    def custom_confirmation_code_label(self):
        """Gets the custom_confirmation_code_label of this TransitClass.


        :return: The custom_confirmation_code_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_confirmation_code_label

    @custom_confirmation_code_label.setter
    def custom_confirmation_code_label(self, custom_confirmation_code_label):
        """Sets the custom_confirmation_code_label of this TransitClass.


        :param custom_confirmation_code_label: The custom_confirmation_code_label of this TransitClass.
        :type custom_confirmation_code_label: LocalizedString
        """

        self._custom_confirmation_code_label = custom_confirmation_code_label

    @property
    def custom_discount_message_label(self):
        """Gets the custom_discount_message_label of this TransitClass.


        :return: The custom_discount_message_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_discount_message_label

    @custom_discount_message_label.setter
    def custom_discount_message_label(self, custom_discount_message_label):
        """Sets the custom_discount_message_label of this TransitClass.


        :param custom_discount_message_label: The custom_discount_message_label of this TransitClass.
        :type custom_discount_message_label: LocalizedString
        """

        self._custom_discount_message_label = custom_discount_message_label

    @property
    def custom_fare_class_label(self):
        """Gets the custom_fare_class_label of this TransitClass.


        :return: The custom_fare_class_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_fare_class_label

    @custom_fare_class_label.setter
    def custom_fare_class_label(self, custom_fare_class_label):
        """Sets the custom_fare_class_label of this TransitClass.


        :param custom_fare_class_label: The custom_fare_class_label of this TransitClass.
        :type custom_fare_class_label: LocalizedString
        """

        self._custom_fare_class_label = custom_fare_class_label

    @property
    def custom_fare_name_label(self):
        """Gets the custom_fare_name_label of this TransitClass.


        :return: The custom_fare_name_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_fare_name_label

    @custom_fare_name_label.setter
    def custom_fare_name_label(self, custom_fare_name_label):
        """Sets the custom_fare_name_label of this TransitClass.


        :param custom_fare_name_label: The custom_fare_name_label of this TransitClass.
        :type custom_fare_name_label: LocalizedString
        """

        self._custom_fare_name_label = custom_fare_name_label

    @property
    def custom_other_restrictions_label(self):
        """Gets the custom_other_restrictions_label of this TransitClass.


        :return: The custom_other_restrictions_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_other_restrictions_label

    @custom_other_restrictions_label.setter
    def custom_other_restrictions_label(self, custom_other_restrictions_label):
        """Sets the custom_other_restrictions_label of this TransitClass.


        :param custom_other_restrictions_label: The custom_other_restrictions_label of this TransitClass.
        :type custom_other_restrictions_label: LocalizedString
        """

        self._custom_other_restrictions_label = custom_other_restrictions_label

    @property
    def custom_platform_label(self):
        """Gets the custom_platform_label of this TransitClass.


        :return: The custom_platform_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_platform_label

    @custom_platform_label.setter
    def custom_platform_label(self, custom_platform_label):
        """Sets the custom_platform_label of this TransitClass.


        :param custom_platform_label: The custom_platform_label of this TransitClass.
        :type custom_platform_label: LocalizedString
        """

        self._custom_platform_label = custom_platform_label

    @property
    def custom_purchase_face_value_label(self):
        """Gets the custom_purchase_face_value_label of this TransitClass.


        :return: The custom_purchase_face_value_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_purchase_face_value_label

    @custom_purchase_face_value_label.setter
    def custom_purchase_face_value_label(self, custom_purchase_face_value_label):
        """Sets the custom_purchase_face_value_label of this TransitClass.


        :param custom_purchase_face_value_label: The custom_purchase_face_value_label of this TransitClass.
        :type custom_purchase_face_value_label: LocalizedString
        """

        self._custom_purchase_face_value_label = custom_purchase_face_value_label

    @property
    def custom_purchase_price_label(self):
        """Gets the custom_purchase_price_label of this TransitClass.


        :return: The custom_purchase_price_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_purchase_price_label

    @custom_purchase_price_label.setter
    def custom_purchase_price_label(self, custom_purchase_price_label):
        """Sets the custom_purchase_price_label of this TransitClass.


        :param custom_purchase_price_label: The custom_purchase_price_label of this TransitClass.
        :type custom_purchase_price_label: LocalizedString
        """

        self._custom_purchase_price_label = custom_purchase_price_label

    @property
    def custom_purchase_receipt_number_label(self):
        """Gets the custom_purchase_receipt_number_label of this TransitClass.


        :return: The custom_purchase_receipt_number_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_purchase_receipt_number_label

    @custom_purchase_receipt_number_label.setter
    def custom_purchase_receipt_number_label(self, custom_purchase_receipt_number_label):
        """Sets the custom_purchase_receipt_number_label of this TransitClass.


        :param custom_purchase_receipt_number_label: The custom_purchase_receipt_number_label of this TransitClass.
        :type custom_purchase_receipt_number_label: LocalizedString
        """

        self._custom_purchase_receipt_number_label = custom_purchase_receipt_number_label

    @property
    def custom_route_restrictions_details_label(self):
        """Gets the custom_route_restrictions_details_label of this TransitClass.


        :return: The custom_route_restrictions_details_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_route_restrictions_details_label

    @custom_route_restrictions_details_label.setter
    def custom_route_restrictions_details_label(self, custom_route_restrictions_details_label):
        """Sets the custom_route_restrictions_details_label of this TransitClass.


        :param custom_route_restrictions_details_label: The custom_route_restrictions_details_label of this TransitClass.
        :type custom_route_restrictions_details_label: LocalizedString
        """

        self._custom_route_restrictions_details_label = custom_route_restrictions_details_label

    @property
    def custom_route_restrictions_label(self):
        """Gets the custom_route_restrictions_label of this TransitClass.


        :return: The custom_route_restrictions_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_route_restrictions_label

    @custom_route_restrictions_label.setter
    def custom_route_restrictions_label(self, custom_route_restrictions_label):
        """Sets the custom_route_restrictions_label of this TransitClass.


        :param custom_route_restrictions_label: The custom_route_restrictions_label of this TransitClass.
        :type custom_route_restrictions_label: LocalizedString
        """

        self._custom_route_restrictions_label = custom_route_restrictions_label

    @property
    def custom_seat_label(self):
        """Gets the custom_seat_label of this TransitClass.


        :return: The custom_seat_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_seat_label

    @custom_seat_label.setter
    def custom_seat_label(self, custom_seat_label):
        """Sets the custom_seat_label of this TransitClass.


        :param custom_seat_label: The custom_seat_label of this TransitClass.
        :type custom_seat_label: LocalizedString
        """

        self._custom_seat_label = custom_seat_label

    @property
    def custom_ticket_number_label(self):
        """Gets the custom_ticket_number_label of this TransitClass.


        :return: The custom_ticket_number_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_ticket_number_label

    @custom_ticket_number_label.setter
    def custom_ticket_number_label(self, custom_ticket_number_label):
        """Sets the custom_ticket_number_label of this TransitClass.


        :param custom_ticket_number_label: The custom_ticket_number_label of this TransitClass.
        :type custom_ticket_number_label: LocalizedString
        """

        self._custom_ticket_number_label = custom_ticket_number_label

    @property
    def custom_time_restrictions_label(self):
        """Gets the custom_time_restrictions_label of this TransitClass.


        :return: The custom_time_restrictions_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_time_restrictions_label

    @custom_time_restrictions_label.setter
    def custom_time_restrictions_label(self, custom_time_restrictions_label):
        """Sets the custom_time_restrictions_label of this TransitClass.


        :param custom_time_restrictions_label: The custom_time_restrictions_label of this TransitClass.
        :type custom_time_restrictions_label: LocalizedString
        """

        self._custom_time_restrictions_label = custom_time_restrictions_label

    @property
    def custom_transit_terminus_name_label(self):
        """Gets the custom_transit_terminus_name_label of this TransitClass.


        :return: The custom_transit_terminus_name_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_transit_terminus_name_label

    @custom_transit_terminus_name_label.setter
    def custom_transit_terminus_name_label(self, custom_transit_terminus_name_label):
        """Sets the custom_transit_terminus_name_label of this TransitClass.


        :param custom_transit_terminus_name_label: The custom_transit_terminus_name_label of this TransitClass.
        :type custom_transit_terminus_name_label: LocalizedString
        """

        self._custom_transit_terminus_name_label = custom_transit_terminus_name_label

    @property
    def custom_zone_label(self):
        """Gets the custom_zone_label of this TransitClass.


        :return: The custom_zone_label of this TransitClass.
        :rtype: LocalizedString
        """
        return self._custom_zone_label

    @custom_zone_label.setter
    def custom_zone_label(self, custom_zone_label):
        """Sets the custom_zone_label of this TransitClass.


        :param custom_zone_label: The custom_zone_label of this TransitClass.
        :type custom_zone_label: LocalizedString
        """

        self._custom_zone_label = custom_zone_label

    @property
    def enable_single_leg_itinerary(self):
        """Gets the enable_single_leg_itinerary of this TransitClass.

        Controls the display of the single-leg itinerary for this class. By default, an itinerary will only display for multi-leg trips.

        :return: The enable_single_leg_itinerary of this TransitClass.
        :rtype: bool
        """
        return self._enable_single_leg_itinerary

    @enable_single_leg_itinerary.setter
    def enable_single_leg_itinerary(self, enable_single_leg_itinerary):
        """Sets the enable_single_leg_itinerary of this TransitClass.

        Controls the display of the single-leg itinerary for this class. By default, an itinerary will only display for multi-leg trips.

        :param enable_single_leg_itinerary: The enable_single_leg_itinerary of this TransitClass.
        :type enable_single_leg_itinerary: bool
        """

        self._enable_single_leg_itinerary = enable_single_leg_itinerary

    @property
    def enable_smart_tap(self):
        """Gets the enable_smart_tap of this TransitClass.

        Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.

        :return: The enable_smart_tap of this TransitClass.
        :rtype: bool
        """
        return self._enable_smart_tap

    @enable_smart_tap.setter
    def enable_smart_tap(self, enable_smart_tap):
        """Sets the enable_smart_tap of this TransitClass.

        Identifies whether this class supports Smart Tap. The `redemptionIssuers` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.

        :param enable_smart_tap: The enable_smart_tap of this TransitClass.
        :type enable_smart_tap: bool
        """

        self._enable_smart_tap = enable_smart_tap

    @property
    def hero_image(self):
        """Gets the hero_image of this TransitClass.


        :return: The hero_image of this TransitClass.
        :rtype: Image
        """
        return self._hero_image

    @hero_image.setter
    def hero_image(self, hero_image):
        """Sets the hero_image of this TransitClass.


        :param hero_image: The hero_image of this TransitClass.
        :type hero_image: Image
        """

        self._hero_image = hero_image

    @property
    def hex_background_color(self):
        """Gets the hex_background_color of this TransitClass.

        The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.

        :return: The hex_background_color of this TransitClass.
        :rtype: str
        """
        return self._hex_background_color

    @hex_background_color.setter
    def hex_background_color(self, hex_background_color):
        """Sets the hex_background_color of this TransitClass.

        The background color for the card. If not set the dominant color of the hero image is used, and if no hero image is set, the dominant color of the logo is used. The format is #rrggbb where rrggbb is a hex RGB triplet, such as `#ffcc00`. You can also use the shorthand version of the RGB triplet which is #rgb, such as `#fc0`.

        :param hex_background_color: The hex_background_color of this TransitClass.
        :type hex_background_color: str
        """

        self._hex_background_color = hex_background_color

    @property
    def homepage_uri(self):
        """Gets the homepage_uri of this TransitClass.


        :return: The homepage_uri of this TransitClass.
        :rtype: Uri
        """
        return self._homepage_uri

    @homepage_uri.setter
    def homepage_uri(self, homepage_uri):
        """Sets the homepage_uri of this TransitClass.


        :param homepage_uri: The homepage_uri of this TransitClass.
        :type homepage_uri: Uri
        """

        self._homepage_uri = homepage_uri

    @property
    def id(self):
        """Gets the id of this TransitClass.

        Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.

        :return: The id of this TransitClass.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TransitClass.

        Required. The unique identifier for a class. This ID must be unique across all classes from an issuer. This value should follow the format issuer ID. identifier where the former is issued by Google and latter is chosen by you. Your unique identifier should only include alphanumeric characters, '.', '_', or '-'.

        :param id: The id of this TransitClass.
        :type id: str
        """

        self._id = id

    @property
    def image_modules_data(self):
        """Gets the image_modules_data of this TransitClass.

        Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.

        :return: The image_modules_data of this TransitClass.
        :rtype: List[ImageModuleData]
        """
        return self._image_modules_data

    @image_modules_data.setter
    def image_modules_data(self, image_modules_data):
        """Sets the image_modules_data of this TransitClass.

        Image module data. The maximum number of these fields displayed is 1 from object level and 1 for class object level.

        :param image_modules_data: The image_modules_data of this TransitClass.
        :type image_modules_data: List[ImageModuleData]
        """

        self._image_modules_data = image_modules_data

    @property
    def info_module_data(self):
        """Gets the info_module_data of this TransitClass.


        :return: The info_module_data of this TransitClass.
        :rtype: InfoModuleData
        """
        return self._info_module_data

    @info_module_data.setter
    def info_module_data(self, info_module_data):
        """Sets the info_module_data of this TransitClass.


        :param info_module_data: The info_module_data of this TransitClass.
        :type info_module_data: InfoModuleData
        """

        self._info_module_data = info_module_data

    @property
    def issuer_name(self):
        """Gets the issuer_name of this TransitClass.

        Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.

        :return: The issuer_name of this TransitClass.
        :rtype: str
        """
        return self._issuer_name

    @issuer_name.setter
    def issuer_name(self, issuer_name):
        """Sets the issuer_name of this TransitClass.

        Required. The issuer name. Recommended maximum length is 20 characters to ensure full string is displayed on smaller screens.

        :param issuer_name: The issuer_name of this TransitClass.
        :type issuer_name: str
        """

        self._issuer_name = issuer_name

    @property
    def language_override(self):
        """Gets the language_override of this TransitClass.

        If this field is present, transit tickets served to a user's device will always be in this language. Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".

        :return: The language_override of this TransitClass.
        :rtype: str
        """
        return self._language_override

    @language_override.setter
    def language_override(self, language_override):
        """Sets the language_override of this TransitClass.

        If this field is present, transit tickets served to a user's device will always be in this language. Represents the BCP 47 language tag. Example values are \"en-US\", \"en-GB\", \"de\", or \"de-AT\".

        :param language_override: The language_override of this TransitClass.
        :type language_override: str
        """

        self._language_override = language_override

    @property
    def links_module_data(self):
        """Gets the links_module_data of this TransitClass.


        :return: The links_module_data of this TransitClass.
        :rtype: LinksModuleData
        """
        return self._links_module_data

    @links_module_data.setter
    def links_module_data(self, links_module_data):
        """Sets the links_module_data of this TransitClass.


        :param links_module_data: The links_module_data of this TransitClass.
        :type links_module_data: LinksModuleData
        """

        self._links_module_data = links_module_data

    @property
    def localized_issuer_name(self):
        """Gets the localized_issuer_name of this TransitClass.


        :return: The localized_issuer_name of this TransitClass.
        :rtype: LocalizedString
        """
        return self._localized_issuer_name

    @localized_issuer_name.setter
    def localized_issuer_name(self, localized_issuer_name):
        """Sets the localized_issuer_name of this TransitClass.


        :param localized_issuer_name: The localized_issuer_name of this TransitClass.
        :type localized_issuer_name: LocalizedString
        """

        self._localized_issuer_name = localized_issuer_name

    @property
    def locations(self):
        """Gets the locations of this TransitClass.

        Note: This field is currently not supported to trigger geo notifications.

        :return: The locations of this TransitClass.
        :rtype: List[LatLongPoint]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this TransitClass.

        Note: This field is currently not supported to trigger geo notifications.

        :param locations: The locations of this TransitClass.
        :type locations: List[LatLongPoint]
        """

        self._locations = locations

    @property
    def logo(self):
        """Gets the logo of this TransitClass.


        :return: The logo of this TransitClass.
        :rtype: Image
        """
        return self._logo

    @logo.setter
    def logo(self, logo):
        """Sets the logo of this TransitClass.


        :param logo: The logo of this TransitClass.
        :type logo: Image
        """

        self._logo = logo

    @property
    def messages(self):
        """Gets the messages of this TransitClass.

        An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.

        :return: The messages of this TransitClass.
        :rtype: List[Message]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this TransitClass.

        An array of messages displayed in the app. All users of this object will receive its associated messages. The maximum number of these fields is 10.

        :param messages: The messages of this TransitClass.
        :type messages: List[Message]
        """

        self._messages = messages

    @property
    def multiple_devices_and_holders_allowed_status(self):
        """Gets the multiple_devices_and_holders_allowed_status of this TransitClass.

        Identifies whether multiple users and devices will save the same object referencing this class.

        :return: The multiple_devices_and_holders_allowed_status of this TransitClass.
        :rtype: str
        """
        return self._multiple_devices_and_holders_allowed_status

    @multiple_devices_and_holders_allowed_status.setter
    def multiple_devices_and_holders_allowed_status(self, multiple_devices_and_holders_allowed_status):
        """Sets the multiple_devices_and_holders_allowed_status of this TransitClass.

        Identifies whether multiple users and devices will save the same object referencing this class.

        :param multiple_devices_and_holders_allowed_status: The multiple_devices_and_holders_allowed_status of this TransitClass.
        :type multiple_devices_and_holders_allowed_status: str
        """
        allowed_values = ["STATUS_UNSPECIFIED", "MULTIPLE_HOLDERS", "multipleHolders", "ONE_USER_ALL_DEVICES", "oneUserAllDevices", "ONE_USER_ONE_DEVICE", "oneUserOneDevice"]  # noqa: E501
        if multiple_devices_and_holders_allowed_status not in allowed_values:
            raise ValueError(
                "Invalid value for `multiple_devices_and_holders_allowed_status` ({0}), must be one of {1}"
                .format(multiple_devices_and_holders_allowed_status, allowed_values)
            )

        self._multiple_devices_and_holders_allowed_status = multiple_devices_and_holders_allowed_status

    @property
    def redemption_issuers(self):
        """Gets the redemption_issuers of this TransitClass.

        Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.

        :return: The redemption_issuers of this TransitClass.
        :rtype: List[str]
        """
        return self._redemption_issuers

    @redemption_issuers.setter
    def redemption_issuers(self, redemption_issuers):
        """Sets the redemption_issuers of this TransitClass.

        Identifies which redemption issuers can redeem the pass over Smart Tap. Redemption issuers are identified by their issuer ID. Redemption issuers must have at least one Smart Tap key configured. The `enableSmartTap` and object level `smartTapRedemptionLevel` fields must also be set up correctly in order for a pass to support Smart Tap.

        :param redemption_issuers: The redemption_issuers of this TransitClass.
        :type redemption_issuers: List[str]
        """

        self._redemption_issuers = redemption_issuers

    @property
    def review(self):
        """Gets the review of this TransitClass.


        :return: The review of this TransitClass.
        :rtype: Review
        """
        return self._review

    @review.setter
    def review(self, review):
        """Sets the review of this TransitClass.


        :param review: The review of this TransitClass.
        :type review: Review
        """

        self._review = review

    @property
    def review_status(self):
        """Gets the review_status of this TransitClass.

        Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.

        :return: The review_status of this TransitClass.
        :rtype: str
        """
        return self._review_status

    @review_status.setter
    def review_status(self, review_status):
        """Sets the review_status of this TransitClass.

        Required. The status of the class. This field can be set to `draft` or `underReview` using the insert, patch, or update API calls. Once the review state is changed from `draft` it may not be changed back to `draft`. You should keep this field to `draft` when the class is under development. A `draft` class cannot be used to create any object. You should set this field to `underReview` when you believe the class is ready for use. The platform will automatically set this field to `approved` and it can be immediately used to create or migrate objects. When updating an already `approved` class you should keep setting this field to `underReview`.

        :param review_status: The review_status of this TransitClass.
        :type review_status: str
        """
        allowed_values = ["REVIEW_STATUS_UNSPECIFIED", "UNDER_REVIEW", "underReview", "APPROVED", "approved", "REJECTED", "rejected", "DRAFT", "draft"]  # noqa: E501
        if review_status not in allowed_values:
            raise ValueError(
                "Invalid value for `review_status` ({0}), must be one of {1}"
                .format(review_status, allowed_values)
            )

        self._review_status = review_status

    @property
    def security_animation(self):
        """Gets the security_animation of this TransitClass.


        :return: The security_animation of this TransitClass.
        :rtype: SecurityAnimation
        """
        return self._security_animation

    @security_animation.setter
    def security_animation(self, security_animation):
        """Sets the security_animation of this TransitClass.


        :param security_animation: The security_animation of this TransitClass.
        :type security_animation: SecurityAnimation
        """

        self._security_animation = security_animation

    @property
    def text_modules_data(self):
        """Gets the text_modules_data of this TransitClass.

        Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.

        :return: The text_modules_data of this TransitClass.
        :rtype: List[TextModuleData]
        """
        return self._text_modules_data

    @text_modules_data.setter
    def text_modules_data(self, text_modules_data):
        """Sets the text_modules_data of this TransitClass.

        Text module data. If text module data is also defined on the class, both will be displayed. The maximum number of these fields displayed is 10 from the object and 10 from the class.

        :param text_modules_data: The text_modules_data of this TransitClass.
        :type text_modules_data: List[TextModuleData]
        """

        self._text_modules_data = text_modules_data

    @property
    def transit_operator_name(self):
        """Gets the transit_operator_name of this TransitClass.


        :return: The transit_operator_name of this TransitClass.
        :rtype: LocalizedString
        """
        return self._transit_operator_name

    @transit_operator_name.setter
    def transit_operator_name(self, transit_operator_name):
        """Sets the transit_operator_name of this TransitClass.


        :param transit_operator_name: The transit_operator_name of this TransitClass.
        :type transit_operator_name: LocalizedString
        """

        self._transit_operator_name = transit_operator_name

    @property
    def transit_type(self):
        """Gets the transit_type of this TransitClass.

        Required. The type of transit this class represents, such as \"bus\".

        :return: The transit_type of this TransitClass.
        :rtype: str
        """
        return self._transit_type

    @transit_type.setter
    def transit_type(self, transit_type):
        """Sets the transit_type of this TransitClass.

        Required. The type of transit this class represents, such as \"bus\".

        :param transit_type: The transit_type of this TransitClass.
        :type transit_type: str
        """
        allowed_values = ["TRANSIT_TYPE_UNSPECIFIED", "BUS", "bus", "RAIL", "rail", "TRAM", "tram", "FERRY", "ferry", "OTHER", "other"]  # noqa: E501
        if transit_type not in allowed_values:
            raise ValueError(
                "Invalid value for `transit_type` ({0}), must be one of {1}"
                .format(transit_type, allowed_values)
            )

        self._transit_type = transit_type

    @property
    def version(self):
        """Gets the version of this TransitClass.

        Deprecated

        :return: The version of this TransitClass.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this TransitClass.

        Deprecated

        :param version: The version of this TransitClass.
        :type version: str
        """

        self._version = version

    @property
    def view_unlock_requirement(self):
        """Gets the view_unlock_requirement of this TransitClass.

        View Unlock Requirement options for the transit ticket.

        :return: The view_unlock_requirement of this TransitClass.
        :rtype: str
        """
        return self._view_unlock_requirement

    @view_unlock_requirement.setter
    def view_unlock_requirement(self, view_unlock_requirement):
        """Sets the view_unlock_requirement of this TransitClass.

        View Unlock Requirement options for the transit ticket.

        :param view_unlock_requirement: The view_unlock_requirement of this TransitClass.
        :type view_unlock_requirement: str
        """
        allowed_values = ["VIEW_UNLOCK_REQUIREMENT_UNSPECIFIED", "UNLOCK_NOT_REQUIRED", "UNLOCK_REQUIRED_TO_VIEW"]  # noqa: E501
        if view_unlock_requirement not in allowed_values:
            raise ValueError(
                "Invalid value for `view_unlock_requirement` ({0}), must be one of {1}"
                .format(view_unlock_requirement, allowed_values)
            )

        self._view_unlock_requirement = view_unlock_requirement

    @property
    def watermark(self):
        """Gets the watermark of this TransitClass.


        :return: The watermark of this TransitClass.
        :rtype: Image
        """
        return self._watermark

    @watermark.setter
    def watermark(self, watermark):
        """Sets the watermark of this TransitClass.


        :param watermark: The watermark of this TransitClass.
        :type watermark: Image
        """

        self._watermark = watermark

    @property
    def word_mark(self):
        """Gets the word_mark of this TransitClass.


        :return: The word_mark of this TransitClass.
        :rtype: Image
        """
        return self._word_mark

    @word_mark.setter
    def word_mark(self, word_mark):
        """Sets the word_mark of this TransitClass.


        :param word_mark: The word_mark of this TransitClass.
        :type word_mark: Image
        """

        self._word_mark = word_mark
