# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.localized_string import LocalizedString
from openapi_server import util


class AirportInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, airport_iata_code: str=None, airport_name_override: LocalizedString=None, gate: str=None, kind: str=None, terminal: str=None):
        """AirportInfo - a model defined in OpenAPI

        :param airport_iata_code: The airport_iata_code of this AirportInfo.
        :param airport_name_override: The airport_name_override of this AirportInfo.
        :param gate: The gate of this AirportInfo.
        :param kind: The kind of this AirportInfo.
        :param terminal: The terminal of this AirportInfo.
        """
        self.openapi_types = {
            'airport_iata_code': str,
            'airport_name_override': LocalizedString,
            'gate': str,
            'kind': str,
            'terminal': str
        }

        self.attribute_map = {
            'airport_iata_code': 'airportIataCode',
            'airport_name_override': 'airportNameOverride',
            'gate': 'gate',
            'kind': 'kind',
            'terminal': 'terminal'
        }

        self._airport_iata_code = airport_iata_code
        self._airport_name_override = airport_name_override
        self._gate = gate
        self._kind = kind
        self._terminal = terminal

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AirportInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AirportInfo of this AirportInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def airport_iata_code(self):
        """Gets the airport_iata_code of this AirportInfo.

        Three character IATA airport code. This is a required field for `origin` and `destination`. Eg: \"SFO\"

        :return: The airport_iata_code of this AirportInfo.
        :rtype: str
        """
        return self._airport_iata_code

    @airport_iata_code.setter
    def airport_iata_code(self, airport_iata_code):
        """Sets the airport_iata_code of this AirportInfo.

        Three character IATA airport code. This is a required field for `origin` and `destination`. Eg: \"SFO\"

        :param airport_iata_code: The airport_iata_code of this AirportInfo.
        :type airport_iata_code: str
        """

        self._airport_iata_code = airport_iata_code

    @property
    def airport_name_override(self):
        """Gets the airport_name_override of this AirportInfo.


        :return: The airport_name_override of this AirportInfo.
        :rtype: LocalizedString
        """
        return self._airport_name_override

    @airport_name_override.setter
    def airport_name_override(self, airport_name_override):
        """Sets the airport_name_override of this AirportInfo.


        :param airport_name_override: The airport_name_override of this AirportInfo.
        :type airport_name_override: LocalizedString
        """

        self._airport_name_override = airport_name_override

    @property
    def gate(self):
        """Gets the gate of this AirportInfo.

        A name of the gate. Eg: \"B59\" or \"59\"

        :return: The gate of this AirportInfo.
        :rtype: str
        """
        return self._gate

    @gate.setter
    def gate(self, gate):
        """Sets the gate of this AirportInfo.

        A name of the gate. Eg: \"B59\" or \"59\"

        :param gate: The gate of this AirportInfo.
        :type gate: str
        """

        self._gate = gate

    @property
    def kind(self):
        """Gets the kind of this AirportInfo.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#airportInfo\"`.

        :return: The kind of this AirportInfo.
        :rtype: str
        """
        return self._kind

    @kind.setter
    def kind(self, kind):
        """Sets the kind of this AirportInfo.

        Identifies what kind of resource this is. Value: the fixed string `\"walletobjects#airportInfo\"`.

        :param kind: The kind of this AirportInfo.
        :type kind: str
        """

        self._kind = kind

    @property
    def terminal(self):
        """Gets the terminal of this AirportInfo.

        Terminal name. Eg: \"INTL\" or \"I\"

        :return: The terminal of this AirportInfo.
        :rtype: str
        """
        return self._terminal

    @terminal.setter
    def terminal(self, terminal):
        """Sets the terminal of this AirportInfo.

        Terminal name. Eg: \"INTL\" or \"I\"

        :param terminal: The terminal of this AirportInfo.
        :type terminal: str
        """

        self._terminal = terminal
