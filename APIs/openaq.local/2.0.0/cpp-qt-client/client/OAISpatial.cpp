/**
 * OpenAQ
 * API for OpenAQ LCS
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISpatial.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISpatial::OAISpatial(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISpatial::OAISpatial() {
    this->initializeModel();
}

OAISpatial::~OAISpatial() {}

void OAISpatial::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISpatial::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISpatial::fromJson(QString jsonString) {
    
    if ( jsonString.compare("country", Qt::CaseInsensitive) == 0) {
        m_value = eOAISpatial::COUNTRY;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("location", Qt::CaseInsensitive) == 0) {
        m_value = eOAISpatial::LOCATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("project", Qt::CaseInsensitive) == 0) {
        m_value = eOAISpatial::PROJECT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("total", Qt::CaseInsensitive) == 0) {
        m_value = eOAISpatial::TOTAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISpatial::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISpatial::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISpatial::COUNTRY:
            val = "country";
            break;
        case eOAISpatial::LOCATION:
            val = "location";
            break;
        case eOAISpatial::PROJECT:
            val = "project";
            break;
        case eOAISpatial::TOTAL:
            val = "total";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISpatial::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISpatial::eOAISpatial OAISpatial::getValue() const {
    return m_value;
}

void OAISpatial::setValue(const OAISpatial::eOAISpatial& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISpatial::isSet() const {
    
    return m_value_isSet;
}

bool OAISpatial::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
