/**
 * OpenAQ
 * API for OpenAQ LCS
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectsRow.h
 *
 * 
 */

#ifndef OAIProjectsRow_H
#define OAIProjectsRow_H

#include <QJsonObject>

#include "OAIProjectParameterDetails.h"
#include <QDateTime>
#include <QJsonValue>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIProjectParameterDetails;

class OAIProjectsRow : public OAIObject {
public:
    OAIProjectsRow();
    OAIProjectsRow(QString json);
    ~OAIProjectsRow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<double> getBbox() const;
    void setBbox(const QList<double> &bbox);
    bool is_bbox_Set() const;
    bool is_bbox_Valid() const;

    QList<QString> getCountries() const;
    void setCountries(const QList<QString> &countries);
    bool is_countries_Set() const;
    bool is_countries_Valid() const;

    QString getEntity() const;
    void setEntity(const QString &entity);
    bool is_entity_Set() const;
    bool is_entity_Valid() const;

    QDateTime getFirstUpdated() const;
    void setFirstUpdated(const QDateTime &first_updated);
    bool is_first_updated_Set() const;
    bool is_first_updated_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsAnalysis() const;
    void setIsAnalysis(const bool &is_analysis);
    bool is_is_analysis_Set() const;
    bool is_is_analysis_Valid() const;

    bool isIsMobile() const;
    void setIsMobile(const bool &is_mobile);
    bool is_is_mobile_Set() const;
    bool is_is_mobile_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    QList<qint32> getLocationIds() const;
    void setLocationIds(const QList<qint32> &location_ids);
    bool is_location_ids_Set() const;
    bool is_location_ids_Valid() const;

    qint32 getLocations() const;
    void setLocations(const qint32 &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    qint32 getMeasurements() const;
    void setMeasurements(const qint32 &measurements);
    bool is_measurements_Set() const;
    bool is_measurements_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<OAIProjectParameterDetails> getParameters() const;
    void setParameters(const QList<OAIProjectParameterDetails> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QString getSensorType() const;
    void setSensorType(const QString &sensor_type);
    bool is_sensor_type_Set() const;
    bool is_sensor_type_Valid() const;

    QList<QJsonValue> getSources() const;
    void setSources(const QList<QJsonValue> &sources);
    bool is_sources_Set() const;
    bool is_sources_Valid() const;

    QString getSubtitle() const;
    void setSubtitle(const QString &subtitle);
    bool is_subtitle_Set() const;
    bool is_subtitle_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<double> m_bbox;
    bool m_bbox_isSet;
    bool m_bbox_isValid;

    QList<QString> m_countries;
    bool m_countries_isSet;
    bool m_countries_isValid;

    QString m_entity;
    bool m_entity_isSet;
    bool m_entity_isValid;

    QDateTime m_first_updated;
    bool m_first_updated_isSet;
    bool m_first_updated_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_analysis;
    bool m_is_analysis_isSet;
    bool m_is_analysis_isValid;

    bool m_is_mobile;
    bool m_is_mobile_isSet;
    bool m_is_mobile_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    QList<qint32> m_location_ids;
    bool m_location_ids_isSet;
    bool m_location_ids_isValid;

    qint32 m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    qint32 m_measurements;
    bool m_measurements_isSet;
    bool m_measurements_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<OAIProjectParameterDetails> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QString m_sensor_type;
    bool m_sensor_type_isSet;
    bool m_sensor_type_isValid;

    QList<QJsonValue> m_sources;
    bool m_sources_isSet;
    bool m_sources_isValid;

    QString m_subtitle;
    bool m_subtitle_isSet;
    bool m_subtitle_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectsRow)

#endif // OAIProjectsRow_H
