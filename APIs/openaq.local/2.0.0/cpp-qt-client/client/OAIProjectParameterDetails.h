/**
 * OpenAQ
 * API for OpenAQ LCS
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProjectParameterDetails.h
 *
 * 
 */

#ifndef OAIProjectParameterDetails_H
#define OAIProjectParameterDetails_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProjectParameterDetails : public OAIObject {
public:
    OAIProjectParameterDetails();
    OAIProjectParameterDetails(QString json);
    ~OAIProjectParameterDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAverage() const;
    void setAverage(const double &average);
    bool is_average_Set() const;
    bool is_average_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QDateTime getFirstUpdated() const;
    void setFirstUpdated(const QDateTime &first_updated);
    bool is_first_updated_Set() const;
    bool is_first_updated_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    double getLastValue() const;
    void setLastValue(const double &last_value);
    bool is_last_value_Set() const;
    bool is_last_value_Valid() const;

    qint32 getLocations() const;
    void setLocations(const qint32 &locations);
    bool is_locations_Set() const;
    bool is_locations_Valid() const;

    QString getParameter() const;
    void setParameter(const QString &parameter);
    bool is_parameter_Set() const;
    bool is_parameter_Valid() const;

    qint32 getParameterId() const;
    void setParameterId(const qint32 &parameter_id);
    bool is_parameter_id_Set() const;
    bool is_parameter_id_Valid() const;

    QString getUnit() const;
    void setUnit(const QString &unit);
    bool is_unit_Set() const;
    bool is_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_average;
    bool m_average_isSet;
    bool m_average_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QDateTime m_first_updated;
    bool m_first_updated_isSet;
    bool m_first_updated_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    double m_last_value;
    bool m_last_value_isSet;
    bool m_last_value_isValid;

    qint32 m_locations;
    bool m_locations_isSet;
    bool m_locations_isValid;

    QString m_parameter;
    bool m_parameter_isSet;
    bool m_parameter_isValid;

    qint32 m_parameter_id;
    bool m_parameter_id_isSet;
    bool m_parameter_id_isValid;

    QString m_unit;
    bool m_unit_isSet;
    bool m_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProjectParameterDetails)

#endif // OAIProjectParameterDetails_H
