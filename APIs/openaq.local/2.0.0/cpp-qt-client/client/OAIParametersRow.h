/**
 * OpenAQ
 * API for OpenAQ LCS
 *
 * The version of the OpenAPI document: 2.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIParametersRow.h
 *
 * 
 */

#ifndef OAIParametersRow_H
#define OAIParametersRow_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIParametersRow : public OAIObject {
public:
    OAIParametersRow();
    OAIParametersRow(QString json);
    ~OAIParametersRow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsCore() const;
    void setIsCore(const bool &is_core);
    bool is_is_core_Set() const;
    bool is_is_core_Valid() const;

    double getMaxColorValue() const;
    void setMaxColorValue(const double &max_color_value);
    bool is_max_color_value_Set() const;
    bool is_max_color_value_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPreferredUnit() const;
    void setPreferredUnit(const QString &preferred_unit);
    bool is_preferred_unit_Set() const;
    bool is_preferred_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_core;
    bool m_is_core_isSet;
    bool m_is_core_isValid;

    double m_max_color_value;
    bool m_max_color_value_isSet;
    bool m_max_color_value_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_preferred_unit;
    bool m_preferred_unit_isSet;
    bool m_preferred_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIParametersRow)

#endif // OAIParametersRow_H
