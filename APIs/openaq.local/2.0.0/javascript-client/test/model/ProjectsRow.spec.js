/**
 * OpenAQ
 * API for OpenAQ LCS
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenAq);
  }
}(this, function(expect, OpenAq) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenAq.ProjectsRow();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProjectsRow', function() {
    it('should create an instance of ProjectsRow', function() {
      // uncomment below and update the code to test ProjectsRow
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be.a(OpenAq.ProjectsRow);
    });

    it('should have the property bbox (base name: "bbox")', function() {
      // uncomment below and update the code to test the property bbox
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property countries (base name: "countries")', function() {
      // uncomment below and update the code to test the property countries
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property entity (base name: "entity")', function() {
      // uncomment below and update the code to test the property entity
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property firstUpdated (base name: "firstUpdated")', function() {
      // uncomment below and update the code to test the property firstUpdated
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property isAnalysis (base name: "isAnalysis")', function() {
      // uncomment below and update the code to test the property isAnalysis
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property isMobile (base name: "isMobile")', function() {
      // uncomment below and update the code to test the property isMobile
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "lastUpdated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property locationIds (base name: "locationIds")', function() {
      // uncomment below and update the code to test the property locationIds
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property locations (base name: "locations")', function() {
      // uncomment below and update the code to test the property locations
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property measurements (base name: "measurements")', function() {
      // uncomment below and update the code to test the property measurements
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property parameters (base name: "parameters")', function() {
      // uncomment below and update the code to test the property parameters
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property sensorType (base name: "sensorType")', function() {
      // uncomment below and update the code to test the property sensorType
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property sources (base name: "sources")', function() {
      // uncomment below and update the code to test the property sources
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

    it('should have the property subtitle (base name: "subtitle")', function() {
      // uncomment below and update the code to test the property subtitle
      //var instance = new OpenAq.ProjectsRow();
      //expect(instance).to.be();
    });

  });

}));
