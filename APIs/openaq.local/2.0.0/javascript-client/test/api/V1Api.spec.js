/**
 * OpenAQ
 * API for OpenAQ LCS
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenAq);
  }
}(this, function(expect, OpenAq) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenAq.V1Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('V1Api', function() {
    describe('citiesGetv1V1CitiesGet', function() {
      it('should call citiesGetv1V1CitiesGet successfully', function(done) {
        //uncomment below and update the code to test citiesGetv1V1CitiesGet
        //instance.citiesGetv1V1CitiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countriesGetV1CountriesCountryIdGet', function() {
      it('should call countriesGetV1CountriesCountryIdGet successfully', function(done) {
        //uncomment below and update the code to test countriesGetV1CountriesCountryIdGet
        //instance.countriesGetV1CountriesCountryIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countriesGetv1V1CountriesGet', function() {
      it('should call countriesGetv1V1CountriesGet successfully', function(done) {
        //uncomment below and update the code to test countriesGetv1V1CountriesGet
        //instance.countriesGetv1V1CountriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('latestV1GetV1LatestGet', function() {
      it('should call latestV1GetV1LatestGet successfully', function(done) {
        //uncomment below and update the code to test latestV1GetV1LatestGet
        //instance.latestV1GetV1LatestGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('latestV1GetV1LatestLocationIdGet', function() {
      it('should call latestV1GetV1LatestLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test latestV1GetV1LatestLocationIdGet
        //instance.latestV1GetV1LatestLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationsv1GetV1LocationsGet', function() {
      it('should call locationsv1GetV1LocationsGet successfully', function(done) {
        //uncomment below and update the code to test locationsv1GetV1LocationsGet
        //instance.locationsv1GetV1LocationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationsv1GetV1LocationsLocationIdGet', function() {
      it('should call locationsv1GetV1LocationsLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test locationsv1GetV1LocationsLocationIdGet
        //instance.locationsv1GetV1LocationsLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('measurementsGetV1V1MeasurementsGet', function() {
      it('should call measurementsGetV1V1MeasurementsGet successfully', function(done) {
        //uncomment below and update the code to test measurementsGetV1V1MeasurementsGet
        //instance.measurementsGetV1V1MeasurementsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('parametersGetv1V1ParametersGet', function() {
      it('should call parametersGetv1V1ParametersGet successfully', function(done) {
        //uncomment below and update the code to test parametersGetv1V1ParametersGet
        //instance.parametersGetv1V1ParametersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcesV1GetV1SourcesGet', function() {
      it('should call sourcesV1GetV1SourcesGet successfully', function(done) {
        //uncomment below and update the code to test sourcesV1GetV1SourcesGet
        //instance.sourcesV1GetV1SourcesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
