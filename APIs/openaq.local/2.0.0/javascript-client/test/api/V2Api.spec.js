/**
 * OpenAQ
 * API for OpenAQ LCS
 *
 * The version of the OpenAPI document: 2.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenAq);
  }
}(this, function(expect, OpenAq) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenAq.V2Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('V2Api', function() {
    describe('averagesV2GetV2AveragesGet', function() {
      it('should call averagesV2GetV2AveragesGet successfully', function(done) {
        //uncomment below and update the code to test averagesV2GetV2AveragesGet
        //instance.averagesV2GetV2AveragesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('citiesGetV2CitiesGet', function() {
      it('should call citiesGetV2CitiesGet successfully', function(done) {
        //uncomment below and update the code to test citiesGetV2CitiesGet
        //instance.citiesGetV2CitiesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countriesGetV2CountriesCountryIdGet', function() {
      it('should call countriesGetV2CountriesCountryIdGet successfully', function(done) {
        //uncomment below and update the code to test countriesGetV2CountriesCountryIdGet
        //instance.countriesGetV2CountriesCountryIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('countriesGetV2CountriesGet', function() {
      it('should call countriesGetV2CountriesGet successfully', function(done) {
        //uncomment below and update the code to test countriesGetV2CountriesGet
        //instance.countriesGetV2CountriesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('demoV2LocationsTilesViewerGet', function() {
      it('should call demoV2LocationsTilesViewerGet successfully', function(done) {
        //uncomment below and update the code to test demoV2LocationsTilesViewerGet
        //instance.demoV2LocationsTilesViewerGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMobilegentileV2LocationsTilesMobileGeneralizedZXYPbfGet', function() {
      it('should call getMobilegentileV2LocationsTilesMobileGeneralizedZXYPbfGet successfully', function(done) {
        //uncomment below and update the code to test getMobilegentileV2LocationsTilesMobileGeneralizedZXYPbfGet
        //instance.getMobilegentileV2LocationsTilesMobileGeneralizedZXYPbfGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getMobiletileV2LocationsTilesMobileZXYPbfGet', function() {
      it('should call getMobiletileV2LocationsTilesMobileZXYPbfGet successfully', function(done) {
        //uncomment below and update the code to test getMobiletileV2LocationsTilesMobileZXYPbfGet
        //instance.getMobiletileV2LocationsTilesMobileZXYPbfGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTileV2LocationsTilesZXYPbfGet', function() {
      it('should call getTileV2LocationsTilesZXYPbfGet successfully', function(done) {
        //uncomment below and update the code to test getTileV2LocationsTilesZXYPbfGet
        //instance.getTileV2LocationsTilesZXYPbfGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('latestGetV2LatestGet', function() {
      it('should call latestGetV2LatestGet successfully', function(done) {
        //uncomment below and update the code to test latestGetV2LatestGet
        //instance.latestGetV2LatestGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('latestGetV2LatestLocationIdGet', function() {
      it('should call latestGetV2LatestLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test latestGetV2LatestLocationIdGet
        //instance.latestGetV2LatestLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationsGetV2LocationsGet', function() {
      it('should call locationsGetV2LocationsGet successfully', function(done) {
        //uncomment below and update the code to test locationsGetV2LocationsGet
        //instance.locationsGetV2LocationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('locationsGetV2LocationsLocationIdGet', function() {
      it('should call locationsGetV2LocationsLocationIdGet successfully', function(done) {
        //uncomment below and update the code to test locationsGetV2LocationsLocationIdGet
        //instance.locationsGetV2LocationsLocationIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('measurementsGetV2MeasurementsGet', function() {
      it('should call measurementsGetV2MeasurementsGet successfully', function(done) {
        //uncomment below and update the code to test measurementsGetV2MeasurementsGet
        //instance.measurementsGetV2MeasurementsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mfrGetV2ManufacturersGet', function() {
      it('should call mfrGetV2ManufacturersGet successfully', function(done) {
        //uncomment below and update the code to test mfrGetV2ManufacturersGet
        //instance.mfrGetV2ManufacturersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mobilegentilejsonV2LocationsTilesMobileGeneralizedTilesJsonGet', function() {
      it('should call mobilegentilejsonV2LocationsTilesMobileGeneralizedTilesJsonGet successfully', function(done) {
        //uncomment below and update the code to test mobilegentilejsonV2LocationsTilesMobileGeneralizedTilesJsonGet
        //instance.mobilegentilejsonV2LocationsTilesMobileGeneralizedTilesJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('mobiletilejsonV2LocationsTilesMobileTilesJsonGet', function() {
      it('should call mobiletilejsonV2LocationsTilesMobileTilesJsonGet successfully', function(done) {
        //uncomment below and update the code to test mobiletilejsonV2LocationsTilesMobileTilesJsonGet
        //instance.mobiletilejsonV2LocationsTilesMobileTilesJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('modelGetV2ModelsGet', function() {
      it('should call modelGetV2ModelsGet successfully', function(done) {
        //uncomment below and update the code to test modelGetV2ModelsGet
        //instance.modelGetV2ModelsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('parametersGetV2ParametersGet', function() {
      it('should call parametersGetV2ParametersGet successfully', function(done) {
        //uncomment below and update the code to test parametersGetV2ParametersGet
        //instance.parametersGetV2ParametersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsGetV2ProjectsGet', function() {
      it('should call projectsGetV2ProjectsGet successfully', function(done) {
        //uncomment below and update the code to test projectsGetV2ProjectsGet
        //instance.projectsGetV2ProjectsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('projectsGetV2ProjectsProjectIdGet', function() {
      it('should call projectsGetV2ProjectsProjectIdGet successfully', function(done) {
        //uncomment below and update the code to test projectsGetV2ProjectsProjectIdGet
        //instance.projectsGetV2ProjectsProjectIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('readmeGetV2SourcesReadmeSlugGet', function() {
      it('should call readmeGetV2SourcesReadmeSlugGet successfully', function(done) {
        //uncomment below and update the code to test readmeGetV2SourcesReadmeSlugGet
        //instance.readmeGetV2SourcesReadmeSlugGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sourcesGetV2SourcesGet', function() {
      it('should call sourcesGetV2SourcesGet successfully', function(done) {
        //uncomment below and update the code to test sourcesGetV2SourcesGet
        //instance.sourcesGetV2SourcesGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('summaryGetV2SummaryGet', function() {
      it('should call summaryGetV2SummaryGet successfully', function(done) {
        //uncomment below and update the code to test summaryGetV2SummaryGet
        //instance.summaryGetV2SummaryGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tilejsonV2LocationsTilesTilesJsonGet', function() {
      it('should call tilejsonV2LocationsTilesTilesJsonGet successfully', function(done) {
        //uncomment below and update the code to test tilejsonV2LocationsTilesTilesJsonGet
        //instance.tilejsonV2LocationsTilesTilesJsonGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
