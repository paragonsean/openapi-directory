/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventInput::OAIEventInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventInput::OAIEventInput() {
    this->initializeModel();
}

OAIEventInput::~OAIEventInput() {}

void OAIEventInput::initializeModel() {

    m_advisor_id_isSet = false;
    m_advisor_id_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_event_content_isSet = false;
    m_event_content_isValid = false;

    m_original_url_isSet = false;
    m_original_url_isValid = false;

    m_originator_email_isSet = false;
    m_originator_email_isValid = false;

    m_originator_id_isSet = false;
    m_originator_id_isValid = false;

    m_parent_event_id_isSet = false;
    m_parent_event_id_isValid = false;

    m_referer_isSet = false;
    m_referer_isValid = false;

    m_subject_email_isSet = false;
    m_subject_email_isValid = false;

    m_subject_id_isSet = false;
    m_subject_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIEventInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventInput::fromJsonObject(QJsonObject json) {

    m_advisor_id_isValid = ::OpenAPI::fromJsonValue(m_advisor_id, json[QString("advisor_id")]);
    m_advisor_id_isSet = !json[QString("advisor_id")].isNull() && m_advisor_id_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_event_content_isValid = ::OpenAPI::fromJsonValue(m_event_content, json[QString("event_content")]);
    m_event_content_isSet = !json[QString("event_content")].isNull() && m_event_content_isValid;

    m_original_url_isValid = ::OpenAPI::fromJsonValue(m_original_url, json[QString("original_url")]);
    m_original_url_isSet = !json[QString("original_url")].isNull() && m_original_url_isValid;

    m_originator_email_isValid = ::OpenAPI::fromJsonValue(m_originator_email, json[QString("originator_email")]);
    m_originator_email_isSet = !json[QString("originator_email")].isNull() && m_originator_email_isValid;

    m_originator_id_isValid = ::OpenAPI::fromJsonValue(m_originator_id, json[QString("originator_id")]);
    m_originator_id_isSet = !json[QString("originator_id")].isNull() && m_originator_id_isValid;

    m_parent_event_id_isValid = ::OpenAPI::fromJsonValue(m_parent_event_id, json[QString("parent_event_id")]);
    m_parent_event_id_isSet = !json[QString("parent_event_id")].isNull() && m_parent_event_id_isValid;

    m_referer_isValid = ::OpenAPI::fromJsonValue(m_referer, json[QString("referer")]);
    m_referer_isSet = !json[QString("referer")].isNull() && m_referer_isValid;

    m_subject_email_isValid = ::OpenAPI::fromJsonValue(m_subject_email, json[QString("subject_email")]);
    m_subject_email_isSet = !json[QString("subject_email")].isNull() && m_subject_email_isValid;

    m_subject_id_isValid = ::OpenAPI::fromJsonValue(m_subject_id, json[QString("subject_id")]);
    m_subject_id_isSet = !json[QString("subject_id")].isNull() && m_subject_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIEventInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventInput::asJsonObject() const {
    QJsonObject obj;
    if (m_advisor_id_isSet) {
        obj.insert(QString("advisor_id"), ::OpenAPI::toJsonValue(m_advisor_id));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_event_content.isSet()) {
        obj.insert(QString("event_content"), ::OpenAPI::toJsonValue(m_event_content));
    }
    if (m_original_url_isSet) {
        obj.insert(QString("original_url"), ::OpenAPI::toJsonValue(m_original_url));
    }
    if (m_originator_email_isSet) {
        obj.insert(QString("originator_email"), ::OpenAPI::toJsonValue(m_originator_email));
    }
    if (m_originator_id_isSet) {
        obj.insert(QString("originator_id"), ::OpenAPI::toJsonValue(m_originator_id));
    }
    if (m_parent_event_id_isSet) {
        obj.insert(QString("parent_event_id"), ::OpenAPI::toJsonValue(m_parent_event_id));
    }
    if (m_referer_isSet) {
        obj.insert(QString("referer"), ::OpenAPI::toJsonValue(m_referer));
    }
    if (m_subject_email_isSet) {
        obj.insert(QString("subject_email"), ::OpenAPI::toJsonValue(m_subject_email));
    }
    if (m_subject_id_isSet) {
        obj.insert(QString("subject_id"), ::OpenAPI::toJsonValue(m_subject_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIEventInput::getAdvisorId() const {
    return m_advisor_id;
}
void OAIEventInput::setAdvisorId(const QString &advisor_id) {
    m_advisor_id = advisor_id;
    m_advisor_id_isSet = true;
}

bool OAIEventInput::is_advisor_id_Set() const{
    return m_advisor_id_isSet;
}

bool OAIEventInput::is_advisor_id_Valid() const{
    return m_advisor_id_isValid;
}

QString OAIEventInput::getCreatedAt() const {
    return m_created_at;
}
void OAIEventInput::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIEventInput::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIEventInput::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAIEventContent OAIEventInput::getEventContent() const {
    return m_event_content;
}
void OAIEventInput::setEventContent(const OAIEventContent &event_content) {
    m_event_content = event_content;
    m_event_content_isSet = true;
}

bool OAIEventInput::is_event_content_Set() const{
    return m_event_content_isSet;
}

bool OAIEventInput::is_event_content_Valid() const{
    return m_event_content_isValid;
}

QString OAIEventInput::getOriginalUrl() const {
    return m_original_url;
}
void OAIEventInput::setOriginalUrl(const QString &original_url) {
    m_original_url = original_url;
    m_original_url_isSet = true;
}

bool OAIEventInput::is_original_url_Set() const{
    return m_original_url_isSet;
}

bool OAIEventInput::is_original_url_Valid() const{
    return m_original_url_isValid;
}

QString OAIEventInput::getOriginatorEmail() const {
    return m_originator_email;
}
void OAIEventInput::setOriginatorEmail(const QString &originator_email) {
    m_originator_email = originator_email;
    m_originator_email_isSet = true;
}

bool OAIEventInput::is_originator_email_Set() const{
    return m_originator_email_isSet;
}

bool OAIEventInput::is_originator_email_Valid() const{
    return m_originator_email_isValid;
}

QString OAIEventInput::getOriginatorId() const {
    return m_originator_id;
}
void OAIEventInput::setOriginatorId(const QString &originator_id) {
    m_originator_id = originator_id;
    m_originator_id_isSet = true;
}

bool OAIEventInput::is_originator_id_Set() const{
    return m_originator_id_isSet;
}

bool OAIEventInput::is_originator_id_Valid() const{
    return m_originator_id_isValid;
}

QString OAIEventInput::getParentEventId() const {
    return m_parent_event_id;
}
void OAIEventInput::setParentEventId(const QString &parent_event_id) {
    m_parent_event_id = parent_event_id;
    m_parent_event_id_isSet = true;
}

bool OAIEventInput::is_parent_event_id_Set() const{
    return m_parent_event_id_isSet;
}

bool OAIEventInput::is_parent_event_id_Valid() const{
    return m_parent_event_id_isValid;
}

QString OAIEventInput::getReferer() const {
    return m_referer;
}
void OAIEventInput::setReferer(const QString &referer) {
    m_referer = referer;
    m_referer_isSet = true;
}

bool OAIEventInput::is_referer_Set() const{
    return m_referer_isSet;
}

bool OAIEventInput::is_referer_Valid() const{
    return m_referer_isValid;
}

QString OAIEventInput::getSubjectEmail() const {
    return m_subject_email;
}
void OAIEventInput::setSubjectEmail(const QString &subject_email) {
    m_subject_email = subject_email;
    m_subject_email_isSet = true;
}

bool OAIEventInput::is_subject_email_Set() const{
    return m_subject_email_isSet;
}

bool OAIEventInput::is_subject_email_Valid() const{
    return m_subject_email_isValid;
}

QString OAIEventInput::getSubjectId() const {
    return m_subject_id;
}
void OAIEventInput::setSubjectId(const QString &subject_id) {
    m_subject_id = subject_id;
    m_subject_id_isSet = true;
}

bool OAIEventInput::is_subject_id_Set() const{
    return m_subject_id_isSet;
}

bool OAIEventInput::is_subject_id_Valid() const{
    return m_subject_id_isValid;
}

QString OAIEventInput::getType() const {
    return m_type;
}
void OAIEventInput::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIEventInput::is_type_Set() const{
    return m_type_isSet;
}

bool OAIEventInput::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIEventInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advisor_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_event_content.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_original_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_originator_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_event_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_referer_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_original_url_isValid && m_subject_email_isValid && m_type_isValid && true;
}

} // namespace OpenAPI
