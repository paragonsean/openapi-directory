/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomFeedFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomFeedFilter::OAICustomFeedFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomFeedFilter::OAICustomFeedFilter() {
    this->initializeModel();
}

OAICustomFeedFilter::~OAICustomFeedFilter() {}

void OAICustomFeedFilter::initializeModel() {

    m__id_isSet = false;
    m__id_isValid = false;

    m_custom_feed_id_isSet = false;
    m_custom_feed_id_isValid = false;

    m_source_ids_isSet = false;
    m_source_ids_isValid = false;
}

void OAICustomFeedFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomFeedFilter::fromJsonObject(QJsonObject json) {

    m__id_isValid = ::OpenAPI::fromJsonValue(m__id, json[QString("_id")]);
    m__id_isSet = !json[QString("_id")].isNull() && m__id_isValid;

    m_custom_feed_id_isValid = ::OpenAPI::fromJsonValue(m_custom_feed_id, json[QString("custom_feed_id")]);
    m_custom_feed_id_isSet = !json[QString("custom_feed_id")].isNull() && m_custom_feed_id_isValid;

    m_source_ids_isValid = ::OpenAPI::fromJsonValue(m_source_ids, json[QString("source_ids")]);
    m_source_ids_isSet = !json[QString("source_ids")].isNull() && m_source_ids_isValid;
}

QString OAICustomFeedFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomFeedFilter::asJsonObject() const {
    QJsonObject obj;
    if (m__id_isSet) {
        obj.insert(QString("_id"), ::OpenAPI::toJsonValue(m__id));
    }
    if (m_custom_feed_id_isSet) {
        obj.insert(QString("custom_feed_id"), ::OpenAPI::toJsonValue(m_custom_feed_id));
    }
    if (m_source_ids.size() > 0) {
        obj.insert(QString("source_ids"), ::OpenAPI::toJsonValue(m_source_ids));
    }
    return obj;
}

QString OAICustomFeedFilter::getId() const {
    return m__id;
}
void OAICustomFeedFilter::setId(const QString &_id) {
    m__id = _id;
    m__id_isSet = true;
}

bool OAICustomFeedFilter::is__id_Set() const{
    return m__id_isSet;
}

bool OAICustomFeedFilter::is__id_Valid() const{
    return m__id_isValid;
}

QString OAICustomFeedFilter::getCustomFeedId() const {
    return m_custom_feed_id;
}
void OAICustomFeedFilter::setCustomFeedId(const QString &custom_feed_id) {
    m_custom_feed_id = custom_feed_id;
    m_custom_feed_id_isSet = true;
}

bool OAICustomFeedFilter::is_custom_feed_id_Set() const{
    return m_custom_feed_id_isSet;
}

bool OAICustomFeedFilter::is_custom_feed_id_Valid() const{
    return m_custom_feed_id_isValid;
}

QList<QString> OAICustomFeedFilter::getSourceIds() const {
    return m_source_ids;
}
void OAICustomFeedFilter::setSourceIds(const QList<QString> &source_ids) {
    m_source_ids = source_ids;
    m_source_ids_isSet = true;
}

bool OAICustomFeedFilter::is_source_ids_Set() const{
    return m_source_ids_isSet;
}

bool OAICustomFeedFilter::is_source_ids_Valid() const{
    return m_source_ids_isValid;
}

bool OAICustomFeedFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_feed_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomFeedFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m__id_isValid && m_custom_feed_id_isValid && true;
}

} // namespace OpenAPI
