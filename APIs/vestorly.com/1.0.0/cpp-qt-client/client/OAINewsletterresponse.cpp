/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAINewsletterresponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAINewsletterresponse::OAINewsletterresponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAINewsletterresponse::OAINewsletterresponse() {
    this->initializeModel();
}

OAINewsletterresponse::~OAINewsletterresponse() {}

void OAINewsletterresponse::initializeModel() {

    m_newsletter_isSet = false;
    m_newsletter_isValid = false;
}

void OAINewsletterresponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAINewsletterresponse::fromJsonObject(QJsonObject json) {

    m_newsletter_isValid = ::OpenAPI::fromJsonValue(m_newsletter, json[QString("newsletter")]);
    m_newsletter_isSet = !json[QString("newsletter")].isNull() && m_newsletter_isValid;
}

QString OAINewsletterresponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAINewsletterresponse::asJsonObject() const {
    QJsonObject obj;
    if (m_newsletter.isSet()) {
        obj.insert(QString("newsletter"), ::OpenAPI::toJsonValue(m_newsletter));
    }
    return obj;
}

OAINewsletter OAINewsletterresponse::getNewsletter() const {
    return m_newsletter;
}
void OAINewsletterresponse::setNewsletter(const OAINewsletter &newsletter) {
    m_newsletter = newsletter;
    m_newsletter_isSet = true;
}

bool OAINewsletterresponse::is_newsletter_Set() const{
    return m_newsletter_isSet;
}

bool OAINewsletterresponse::is_newsletter_Valid() const{
    return m_newsletter_isValid;
}

bool OAINewsletterresponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_newsletter.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAINewsletterresponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
