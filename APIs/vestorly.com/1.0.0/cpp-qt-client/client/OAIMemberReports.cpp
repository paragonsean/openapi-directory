/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMemberReports.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMemberReports::OAIMemberReports(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMemberReports::OAIMemberReports() {
    this->initializeModel();
}

OAIMemberReports::~OAIMemberReports() {}

void OAIMemberReports::initializeModel() {

    m_member_reports_isSet = false;
    m_member_reports_isValid = false;
}

void OAIMemberReports::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMemberReports::fromJsonObject(QJsonObject json) {

    m_member_reports_isValid = ::OpenAPI::fromJsonValue(m_member_reports, json[QString("member_reports")]);
    m_member_reports_isSet = !json[QString("member_reports")].isNull() && m_member_reports_isValid;
}

QString OAIMemberReports::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMemberReports::asJsonObject() const {
    QJsonObject obj;
    if (m_member_reports.size() > 0) {
        obj.insert(QString("member_reports"), ::OpenAPI::toJsonValue(m_member_reports));
    }
    return obj;
}

QList<OAIMemberReport> OAIMemberReports::getMemberReports() const {
    return m_member_reports;
}
void OAIMemberReports::setMemberReports(const QList<OAIMemberReport> &member_reports) {
    m_member_reports = member_reports;
    m_member_reports_isSet = true;
}

bool OAIMemberReports::is_member_reports_Set() const{
    return m_member_reports_isSet;
}

bool OAIMemberReports::is_member_reports_Valid() const{
    return m_member_reports_isValid;
}

bool OAIMemberReports::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_member_reports.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMemberReports::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
