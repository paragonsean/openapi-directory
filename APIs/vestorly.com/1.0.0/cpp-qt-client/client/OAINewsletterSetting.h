/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewsletterSetting.h
 *
 * 
 */

#ifndef OAINewsletterSetting_H
#define OAINewsletterSetting_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINewsletterSetting : public OAIObject {
public:
    OAINewsletterSetting();
    OAINewsletterSetting(QString json);
    ~OAINewsletterSetting() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    QString getBannerColor() const;
    void setBannerColor(const QString &banner_color);
    bool is_banner_color_Set() const;
    bool is_banner_color_Valid() const;

    QString getBodyHtml() const;
    void setBodyHtml(const QString &body_html);
    bool is_body_html_Set() const;
    bool is_body_html_Valid() const;

    QString getEmailAccentColor() const;
    void setEmailAccentColor(const QString &email_accent_color);
    bool is_email_accent_color_Set() const;
    bool is_email_accent_color_Valid() const;

    qint32 getEmailDayOfWeek() const;
    void setEmailDayOfWeek(const qint32 &email_day_of_week);
    bool is_email_day_of_week_Set() const;
    bool is_email_day_of_week_Valid() const;

    qint32 getEmailHour() const;
    void setEmailHour(const qint32 &email_hour);
    bool is_email_hour_Set() const;
    bool is_email_hour_Valid() const;

    QString getEmailStatus() const;
    void setEmailStatus(const QString &email_status);
    bool is_email_status_Set() const;
    bool is_email_status_Valid() const;

    QString getFacebookActiveWall() const;
    void setFacebookActiveWall(const QString &facebook_active_wall);
    bool is_facebook_active_wall_Set() const;
    bool is_facebook_active_wall_Valid() const;

    QString getFooterEmailFont() const;
    void setFooterEmailFont(const QString &footer_email_font);
    bool is_footer_email_font_Set() const;
    bool is_footer_email_font_Valid() const;

    QString getFooterHtml() const;
    void setFooterHtml(const QString &footer_html);
    bool is_footer_html_Set() const;
    bool is_footer_html_Valid() const;

    QString getFooterImageUrl() const;
    void setFooterImageUrl(const QString &footer_image_url);
    bool is_footer_image_url_Set() const;
    bool is_footer_image_url_Valid() const;

    QString getGroupId() const;
    void setGroupId(const QString &group_id);
    bool is_group_id_Set() const;
    bool is_group_id_Valid() const;

    QString getHeaderBackgroundColor() const;
    void setHeaderBackgroundColor(const QString &header_background_color);
    bool is_header_background_color_Set() const;
    bool is_header_background_color_Valid() const;

    QString getHeaderImageUrl() const;
    void setHeaderImageUrl(const QString &header_image_url);
    bool is_header_image_url_Set() const;
    bool is_header_image_url_Valid() const;

    QString getIntroText() const;
    void setIntroText(const QString &intro_text);
    bool is_intro_text_Set() const;
    bool is_intro_text_Valid() const;

    QString getLinkedinActiveWall() const;
    void setLinkedinActiveWall(const QString &linkedin_active_wall);
    bool is_linkedin_active_wall_Set() const;
    bool is_linkedin_active_wall_Valid() const;

    bool isMontageEnabled() const;
    void setMontageEnabled(const bool &montage_enabled);
    bool is_montage_enabled_Set() const;
    bool is_montage_enabled_Valid() const;

    QString getMontageFacebookImageUrl() const;
    void setMontageFacebookImageUrl(const QString &montage_facebook_image_url);
    bool is_montage_facebook_image_url_Set() const;
    bool is_montage_facebook_image_url_Valid() const;

    QString getMontageLinkedinImageUrl() const;
    void setMontageLinkedinImageUrl(const QString &montage_linkedin_image_url);
    bool is_montage_linkedin_image_url_Set() const;
    bool is_montage_linkedin_image_url_Valid() const;

    QString getMontageTitle() const;
    void setMontageTitle(const QString &montage_title);
    bool is_montage_title_Set() const;
    bool is_montage_title_Valid() const;

    QString getMontageTwitterImageUrl() const;
    void setMontageTwitterImageUrl(const QString &montage_twitter_image_url);
    bool is_montage_twitter_image_url_Set() const;
    bool is_montage_twitter_image_url_Valid() const;

    QList<QString> getNewsletterIds() const;
    void setNewsletterIds(const QList<QString> &newsletter_ids);
    bool is_newsletter_ids_Set() const;
    bool is_newsletter_ids_Valid() const;

    QString getNewsletterType() const;
    void setNewsletterType(const QString &newsletter_type);
    bool is_newsletter_type_Set() const;
    bool is_newsletter_type_Valid() const;

    QString getPrimaryEmailFont() const;
    void setPrimaryEmailFont(const QString &primary_email_font);
    bool is_primary_email_font_Set() const;
    bool is_primary_email_font_Valid() const;

    QString getSalutationText() const;
    void setSalutationText(const QString &salutation_text);
    bool is_salutation_text_Set() const;
    bool is_salutation_text_Valid() const;

    qint32 getSocialDayOfWeek() const;
    void setSocialDayOfWeek(const qint32 &social_day_of_week);
    bool is_social_day_of_week_Set() const;
    bool is_social_day_of_week_Valid() const;

    QString getSocialDescription() const;
    void setSocialDescription(const QString &social_description);
    bool is_social_description_Set() const;
    bool is_social_description_Valid() const;

    QString getSocialPostingText() const;
    void setSocialPostingText(const QString &social_posting_text);
    bool is_social_posting_text_Set() const;
    bool is_social_posting_text_Valid() const;

    QString getSocialTitle() const;
    void setSocialTitle(const QString &social_title);
    bool is_social_title_Set() const;
    bool is_social_title_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QString getTitleColor() const;
    void setTitleColor(const QString &title_color);
    bool is_title_color_Set() const;
    bool is_title_color_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    QString m_banner_color;
    bool m_banner_color_isSet;
    bool m_banner_color_isValid;

    QString m_body_html;
    bool m_body_html_isSet;
    bool m_body_html_isValid;

    QString m_email_accent_color;
    bool m_email_accent_color_isSet;
    bool m_email_accent_color_isValid;

    qint32 m_email_day_of_week;
    bool m_email_day_of_week_isSet;
    bool m_email_day_of_week_isValid;

    qint32 m_email_hour;
    bool m_email_hour_isSet;
    bool m_email_hour_isValid;

    QString m_email_status;
    bool m_email_status_isSet;
    bool m_email_status_isValid;

    QString m_facebook_active_wall;
    bool m_facebook_active_wall_isSet;
    bool m_facebook_active_wall_isValid;

    QString m_footer_email_font;
    bool m_footer_email_font_isSet;
    bool m_footer_email_font_isValid;

    QString m_footer_html;
    bool m_footer_html_isSet;
    bool m_footer_html_isValid;

    QString m_footer_image_url;
    bool m_footer_image_url_isSet;
    bool m_footer_image_url_isValid;

    QString m_group_id;
    bool m_group_id_isSet;
    bool m_group_id_isValid;

    QString m_header_background_color;
    bool m_header_background_color_isSet;
    bool m_header_background_color_isValid;

    QString m_header_image_url;
    bool m_header_image_url_isSet;
    bool m_header_image_url_isValid;

    QString m_intro_text;
    bool m_intro_text_isSet;
    bool m_intro_text_isValid;

    QString m_linkedin_active_wall;
    bool m_linkedin_active_wall_isSet;
    bool m_linkedin_active_wall_isValid;

    bool m_montage_enabled;
    bool m_montage_enabled_isSet;
    bool m_montage_enabled_isValid;

    QString m_montage_facebook_image_url;
    bool m_montage_facebook_image_url_isSet;
    bool m_montage_facebook_image_url_isValid;

    QString m_montage_linkedin_image_url;
    bool m_montage_linkedin_image_url_isSet;
    bool m_montage_linkedin_image_url_isValid;

    QString m_montage_title;
    bool m_montage_title_isSet;
    bool m_montage_title_isValid;

    QString m_montage_twitter_image_url;
    bool m_montage_twitter_image_url_isSet;
    bool m_montage_twitter_image_url_isValid;

    QList<QString> m_newsletter_ids;
    bool m_newsletter_ids_isSet;
    bool m_newsletter_ids_isValid;

    QString m_newsletter_type;
    bool m_newsletter_type_isSet;
    bool m_newsletter_type_isValid;

    QString m_primary_email_font;
    bool m_primary_email_font_isSet;
    bool m_primary_email_font_isValid;

    QString m_salutation_text;
    bool m_salutation_text_isSet;
    bool m_salutation_text_isValid;

    qint32 m_social_day_of_week;
    bool m_social_day_of_week_isSet;
    bool m_social_day_of_week_isValid;

    QString m_social_description;
    bool m_social_description_isSet;
    bool m_social_description_isValid;

    QString m_social_posting_text;
    bool m_social_posting_text_isSet;
    bool m_social_posting_text_isValid;

    QString m_social_title;
    bool m_social_title_isSet;
    bool m_social_title_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QString m_title_color;
    bool m_title_color_isSet;
    bool m_title_color_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewsletterSetting)

#endif // OAINewsletterSetting_H
