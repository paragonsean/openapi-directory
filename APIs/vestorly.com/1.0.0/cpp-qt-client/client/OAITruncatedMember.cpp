/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITruncatedMember.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITruncatedMember::OAITruncatedMember(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITruncatedMember::OAITruncatedMember() {
    this->initializeModel();
}

OAITruncatedMember::~OAITruncatedMember() {}

void OAITruncatedMember::initializeModel() {

    m__id_isSet = false;
    m__id_isValid = false;

    m_added_on_isSet = false;
    m_added_on_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_picture_url_isSet = false;
    m_picture_url_isValid = false;
}

void OAITruncatedMember::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITruncatedMember::fromJsonObject(QJsonObject json) {

    m__id_isValid = ::OpenAPI::fromJsonValue(m__id, json[QString("_id")]);
    m__id_isSet = !json[QString("_id")].isNull() && m__id_isValid;

    m_added_on_isValid = ::OpenAPI::fromJsonValue(m_added_on, json[QString("added_on")]);
    m_added_on_isSet = !json[QString("added_on")].isNull() && m_added_on_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("first_name")]);
    m_first_name_isSet = !json[QString("first_name")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("last_name")]);
    m_last_name_isSet = !json[QString("last_name")].isNull() && m_last_name_isValid;

    m_picture_url_isValid = ::OpenAPI::fromJsonValue(m_picture_url, json[QString("picture_url")]);
    m_picture_url_isSet = !json[QString("picture_url")].isNull() && m_picture_url_isValid;
}

QString OAITruncatedMember::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITruncatedMember::asJsonObject() const {
    QJsonObject obj;
    if (m__id_isSet) {
        obj.insert(QString("_id"), ::OpenAPI::toJsonValue(m__id));
    }
    if (m_added_on_isSet) {
        obj.insert(QString("added_on"), ::OpenAPI::toJsonValue(m_added_on));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("first_name"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("last_name"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_picture_url_isSet) {
        obj.insert(QString("picture_url"), ::OpenAPI::toJsonValue(m_picture_url));
    }
    return obj;
}

QString OAITruncatedMember::getId() const {
    return m__id;
}
void OAITruncatedMember::setId(const QString &_id) {
    m__id = _id;
    m__id_isSet = true;
}

bool OAITruncatedMember::is__id_Set() const{
    return m__id_isSet;
}

bool OAITruncatedMember::is__id_Valid() const{
    return m__id_isValid;
}

QString OAITruncatedMember::getAddedOn() const {
    return m_added_on;
}
void OAITruncatedMember::setAddedOn(const QString &added_on) {
    m_added_on = added_on;
    m_added_on_isSet = true;
}

bool OAITruncatedMember::is_added_on_Set() const{
    return m_added_on_isSet;
}

bool OAITruncatedMember::is_added_on_Valid() const{
    return m_added_on_isValid;
}

QString OAITruncatedMember::getEmail() const {
    return m_email;
}
void OAITruncatedMember::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAITruncatedMember::is_email_Set() const{
    return m_email_isSet;
}

bool OAITruncatedMember::is_email_Valid() const{
    return m_email_isValid;
}

QString OAITruncatedMember::getFirstName() const {
    return m_first_name;
}
void OAITruncatedMember::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAITruncatedMember::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAITruncatedMember::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAITruncatedMember::getLastName() const {
    return m_last_name;
}
void OAITruncatedMember::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAITruncatedMember::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAITruncatedMember::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAITruncatedMember::getPictureUrl() const {
    return m_picture_url;
}
void OAITruncatedMember::setPictureUrl(const QString &picture_url) {
    m_picture_url = picture_url;
    m_picture_url_isSet = true;
}

bool OAITruncatedMember::is_picture_url_Set() const{
    return m_picture_url_isSet;
}

bool OAITruncatedMember::is_picture_url_Valid() const{
    return m_picture_url_isValid;
}

bool OAITruncatedMember::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_added_on_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_picture_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITruncatedMember::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
