/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomFeeds.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomFeeds::OAICustomFeeds(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomFeeds::OAICustomFeeds() {
    this->initializeModel();
}

OAICustomFeeds::~OAICustomFeeds() {}

void OAICustomFeeds::initializeModel() {

    m_custom_feeds_isSet = false;
    m_custom_feeds_isValid = false;
}

void OAICustomFeeds::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomFeeds::fromJsonObject(QJsonObject json) {

    m_custom_feeds_isValid = ::OpenAPI::fromJsonValue(m_custom_feeds, json[QString("custom_feeds")]);
    m_custom_feeds_isSet = !json[QString("custom_feeds")].isNull() && m_custom_feeds_isValid;
}

QString OAICustomFeeds::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomFeeds::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_feeds.size() > 0) {
        obj.insert(QString("custom_feeds"), ::OpenAPI::toJsonValue(m_custom_feeds));
    }
    return obj;
}

QList<OAICustomFeed> OAICustomFeeds::getCustomFeeds() const {
    return m_custom_feeds;
}
void OAICustomFeeds::setCustomFeeds(const QList<OAICustomFeed> &custom_feeds) {
    m_custom_feeds = custom_feeds;
    m_custom_feeds_isSet = true;
}

bool OAICustomFeeds::is_custom_feeds_Set() const{
    return m_custom_feeds_isSet;
}

bool OAICustomFeeds::is_custom_feeds_Valid() const{
    return m_custom_feeds_isValid;
}

bool OAICustomFeeds::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_feeds.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomFeeds::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
