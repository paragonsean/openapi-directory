/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAdvisorresponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAdvisorresponse::OAIAdvisorresponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAdvisorresponse::OAIAdvisorresponse() {
    this->initializeModel();
}

OAIAdvisorresponse::~OAIAdvisorresponse() {}

void OAIAdvisorresponse::initializeModel() {

    m_advisor_isSet = false;
    m_advisor_isValid = false;
}

void OAIAdvisorresponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAdvisorresponse::fromJsonObject(QJsonObject json) {

    m_advisor_isValid = ::OpenAPI::fromJsonValue(m_advisor, json[QString("advisor")]);
    m_advisor_isSet = !json[QString("advisor")].isNull() && m_advisor_isValid;
}

QString OAIAdvisorresponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAdvisorresponse::asJsonObject() const {
    QJsonObject obj;
    if (m_advisor.isSet()) {
        obj.insert(QString("advisor"), ::OpenAPI::toJsonValue(m_advisor));
    }
    return obj;
}

OAIAdvisor OAIAdvisorresponse::getAdvisor() const {
    return m_advisor;
}
void OAIAdvisorresponse::setAdvisor(const OAIAdvisor &advisor) {
    m_advisor = advisor;
    m_advisor_isSet = true;
}

bool OAIAdvisorresponse::is_advisor_Set() const{
    return m_advisor_isSet;
}

bool OAIAdvisorresponse::is_advisor_Valid() const{
    return m_advisor_isValid;
}

bool OAIAdvisorresponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_advisor.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAdvisorresponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
