/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISeedCustomFeedInput.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISeedCustomFeedInput::OAISeedCustomFeedInput(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISeedCustomFeedInput::OAISeedCustomFeedInput() {
    this->initializeModel();
}

OAISeedCustomFeedInput::~OAISeedCustomFeedInput() {}

void OAISeedCustomFeedInput::initializeModel() {

    m_article_id_isSet = false;
    m_article_id_isValid = false;

    m_custom_feed_id_isSet = false;
    m_custom_feed_id_isValid = false;

    m_not_article_id_isSet = false;
    m_not_article_id_isValid = false;

    m_not_seeds_isSet = false;
    m_not_seeds_isValid = false;

    m_seeds_isSet = false;
    m_seeds_isValid = false;

    m_sort_by_isSet = false;
    m_sort_by_isValid = false;
}

void OAISeedCustomFeedInput::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISeedCustomFeedInput::fromJsonObject(QJsonObject json) {

    m_article_id_isValid = ::OpenAPI::fromJsonValue(m_article_id, json[QString("article_id")]);
    m_article_id_isSet = !json[QString("article_id")].isNull() && m_article_id_isValid;

    m_custom_feed_id_isValid = ::OpenAPI::fromJsonValue(m_custom_feed_id, json[QString("custom_feed_id")]);
    m_custom_feed_id_isSet = !json[QString("custom_feed_id")].isNull() && m_custom_feed_id_isValid;

    m_not_article_id_isValid = ::OpenAPI::fromJsonValue(m_not_article_id, json[QString("not_article_id")]);
    m_not_article_id_isSet = !json[QString("not_article_id")].isNull() && m_not_article_id_isValid;

    m_not_seeds_isValid = ::OpenAPI::fromJsonValue(m_not_seeds, json[QString("not_seeds")]);
    m_not_seeds_isSet = !json[QString("not_seeds")].isNull() && m_not_seeds_isValid;

    m_seeds_isValid = ::OpenAPI::fromJsonValue(m_seeds, json[QString("seeds")]);
    m_seeds_isSet = !json[QString("seeds")].isNull() && m_seeds_isValid;

    m_sort_by_isValid = ::OpenAPI::fromJsonValue(m_sort_by, json[QString("sort_by")]);
    m_sort_by_isSet = !json[QString("sort_by")].isNull() && m_sort_by_isValid;
}

QString OAISeedCustomFeedInput::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISeedCustomFeedInput::asJsonObject() const {
    QJsonObject obj;
    if (m_article_id_isSet) {
        obj.insert(QString("article_id"), ::OpenAPI::toJsonValue(m_article_id));
    }
    if (m_custom_feed_id_isSet) {
        obj.insert(QString("custom_feed_id"), ::OpenAPI::toJsonValue(m_custom_feed_id));
    }
    if (m_not_article_id_isSet) {
        obj.insert(QString("not_article_id"), ::OpenAPI::toJsonValue(m_not_article_id));
    }
    if (m_not_seeds.size() > 0) {
        obj.insert(QString("not_seeds"), ::OpenAPI::toJsonValue(m_not_seeds));
    }
    if (m_seeds.size() > 0) {
        obj.insert(QString("seeds"), ::OpenAPI::toJsonValue(m_seeds));
    }
    if (m_sort_by_isSet) {
        obj.insert(QString("sort_by"), ::OpenAPI::toJsonValue(m_sort_by));
    }
    return obj;
}

QString OAISeedCustomFeedInput::getArticleId() const {
    return m_article_id;
}
void OAISeedCustomFeedInput::setArticleId(const QString &article_id) {
    m_article_id = article_id;
    m_article_id_isSet = true;
}

bool OAISeedCustomFeedInput::is_article_id_Set() const{
    return m_article_id_isSet;
}

bool OAISeedCustomFeedInput::is_article_id_Valid() const{
    return m_article_id_isValid;
}

QString OAISeedCustomFeedInput::getCustomFeedId() const {
    return m_custom_feed_id;
}
void OAISeedCustomFeedInput::setCustomFeedId(const QString &custom_feed_id) {
    m_custom_feed_id = custom_feed_id;
    m_custom_feed_id_isSet = true;
}

bool OAISeedCustomFeedInput::is_custom_feed_id_Set() const{
    return m_custom_feed_id_isSet;
}

bool OAISeedCustomFeedInput::is_custom_feed_id_Valid() const{
    return m_custom_feed_id_isValid;
}

QString OAISeedCustomFeedInput::getNotArticleId() const {
    return m_not_article_id;
}
void OAISeedCustomFeedInput::setNotArticleId(const QString &not_article_id) {
    m_not_article_id = not_article_id;
    m_not_article_id_isSet = true;
}

bool OAISeedCustomFeedInput::is_not_article_id_Set() const{
    return m_not_article_id_isSet;
}

bool OAISeedCustomFeedInput::is_not_article_id_Valid() const{
    return m_not_article_id_isValid;
}

QList<QString> OAISeedCustomFeedInput::getNotSeeds() const {
    return m_not_seeds;
}
void OAISeedCustomFeedInput::setNotSeeds(const QList<QString> &not_seeds) {
    m_not_seeds = not_seeds;
    m_not_seeds_isSet = true;
}

bool OAISeedCustomFeedInput::is_not_seeds_Set() const{
    return m_not_seeds_isSet;
}

bool OAISeedCustomFeedInput::is_not_seeds_Valid() const{
    return m_not_seeds_isValid;
}

QList<QString> OAISeedCustomFeedInput::getSeeds() const {
    return m_seeds;
}
void OAISeedCustomFeedInput::setSeeds(const QList<QString> &seeds) {
    m_seeds = seeds;
    m_seeds_isSet = true;
}

bool OAISeedCustomFeedInput::is_seeds_Set() const{
    return m_seeds_isSet;
}

bool OAISeedCustomFeedInput::is_seeds_Valid() const{
    return m_seeds_isValid;
}

QString OAISeedCustomFeedInput::getSortBy() const {
    return m_sort_by;
}
void OAISeedCustomFeedInput::setSortBy(const QString &sort_by) {
    m_sort_by = sort_by;
    m_sort_by_isSet = true;
}

bool OAISeedCustomFeedInput::is_sort_by_Set() const{
    return m_sort_by_isSet;
}

bool OAISeedCustomFeedInput::is_sort_by_Valid() const{
    return m_sort_by_isValid;
}

bool OAISeedCustomFeedInput::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_article_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_feed_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_not_article_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_not_seeds.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_seeds.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_by_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISeedCustomFeedInput::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_custom_feed_id_isValid && true;
}

} // namespace OpenAPI
