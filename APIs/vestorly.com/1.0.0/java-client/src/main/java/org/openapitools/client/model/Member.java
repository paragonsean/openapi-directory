/*
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Member
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:17.652103-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Member {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private String address;

  public static final String SERIALIZED_NAME_AGE = "age";
  @SerializedName(SERIALIZED_NAME_AGE)
  private String age;

  public static final String SERIALIZED_NAME_ASSETS = "assets";
  @SerializedName(SERIALIZED_NAME_ASSETS)
  private String assets;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_DATA_ESTIMATED = "data_estimated";
  @SerializedName(SERIALIZED_NAME_DATA_ESTIMATED)
  private Boolean dataEstimated;

  public static final String SERIALIZED_NAME_EDUCATION = "education";
  @SerializedName(SERIALIZED_NAME_EDUCATION)
  private String education;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_ESTIMATED_LOCATION = "estimated_location";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_LOCATION)
  private String estimatedLocation;

  public static final String SERIALIZED_NAME_ESTIMATED_ZIP = "estimated_zip";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_ZIP)
  private String estimatedZip;

  public static final String SERIALIZED_NAME_FAMILY = "family";
  @SerializedName(SERIALIZED_NAME_FAMILY)
  private String family;

  public static final String SERIALIZED_NAME_FIRST_NAME = "first_name";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_GENDER = "gender";
  @SerializedName(SERIALIZED_NAME_GENDER)
  private String gender;

  public static final String SERIALIZED_NAME_GENUINE_EMAIL = "genuine_email";
  @SerializedName(SERIALIZED_NAME_GENUINE_EMAIL)
  private Boolean genuineEmail;

  public static final String SERIALIZED_NAME_HIGH_NET_WORTH = "high_net_worth";
  @SerializedName(SERIALIZED_NAME_HIGH_NET_WORTH)
  private Boolean highNetWorth;

  public static final String SERIALIZED_NAME_HOME_MARKET_VALUE = "home_market_value";
  @SerializedName(SERIALIZED_NAME_HOME_MARKET_VALUE)
  private String homeMarketValue;

  public static final String SERIALIZED_NAME_HOME_OWNER_STATUS = "home_owner_status";
  @SerializedName(SERIALIZED_NAME_HOME_OWNER_STATUS)
  private String homeOwnerStatus;

  public static final String SERIALIZED_NAME_HOMETOWN = "hometown";
  @SerializedName(SERIALIZED_NAME_HOMETOWN)
  private String hometown;

  public static final String SERIALIZED_NAME_HOUSEHOLD_INCOME = "household_income";
  @SerializedName(SERIALIZED_NAME_HOUSEHOLD_INCOME)
  private String householdIncome;

  public static final String SERIALIZED_NAME_INTEREST_CONSULTATION = "interest_consultation";
  @SerializedName(SERIALIZED_NAME_INTEREST_CONSULTATION)
  private String interestConsultation;

  public static final String SERIALIZED_NAME_INTEREST_IN_NEW_ADVISOR = "interest_in_new_advisor";
  @SerializedName(SERIALIZED_NAME_INTEREST_IN_NEW_ADVISOR)
  private String interestInNewAdvisor;

  public static final String SERIALIZED_NAME_INVITED_BY = "invited_by";
  @SerializedName(SERIALIZED_NAME_INVITED_BY)
  private String invitedBy;

  public static final String SERIALIZED_NAME_INVITED_ON = "invited_on";
  @SerializedName(SERIALIZED_NAME_INVITED_ON)
  private String invitedOn;

  public static final String SERIALIZED_NAME_IS_CLIENT = "is_client";
  @SerializedName(SERIALIZED_NAME_IS_CLIENT)
  private Boolean isClient;

  public static final String SERIALIZED_NAME_IS_HIDDEN = "is_hidden";
  @SerializedName(SERIALIZED_NAME_IS_HIDDEN)
  private Boolean isHidden;

  public static final String SERIALIZED_NAME_LAST_ACTIVE_DATE = "last_active_date";
  @SerializedName(SERIALIZED_NAME_LAST_ACTIVE_DATE)
  private String lastActiveDate;

  public static final String SERIALIZED_NAME_LAST_NAME = "last_name";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LOCATION = "location";
  @SerializedName(SERIALIZED_NAME_LOCATION)
  private String location;

  public static final String SERIALIZED_NAME_MARITAL_STATUS = "marital_status";
  @SerializedName(SERIALIZED_NAME_MARITAL_STATUS)
  private String maritalStatus;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public static final String SERIALIZED_NAME_OCCUPATION = "occupation";
  @SerializedName(SERIALIZED_NAME_OCCUPATION)
  private String occupation;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_PICTURE_URL = "picture_url";
  @SerializedName(SERIALIZED_NAME_PICTURE_URL)
  private String pictureUrl;

  public static final String SERIALIZED_NAME_PORTFOLIO_SIZE = "portfolio_size";
  @SerializedName(SERIALIZED_NAME_PORTFOLIO_SIZE)
  private String portfolioSize;

  public static final String SERIALIZED_NAME_PROFILE_URL = "profile_url";
  @SerializedName(SERIALIZED_NAME_PROFILE_URL)
  private String profileUrl;

  public static final String SERIALIZED_NAME_REGISTER_IP_ADDR = "register_ip_addr";
  @SerializedName(SERIALIZED_NAME_REGISTER_IP_ADDR)
  private String registerIpAddr;

  public static final String SERIALIZED_NAME_SIGNED_UP_WITH = "signed_up_with";
  @SerializedName(SERIALIZED_NAME_SIGNED_UP_WITH)
  private String signedUpWith;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_SUBSCRIBED_GROUP_IDS = "subscribed_group_ids";
  @SerializedName(SERIALIZED_NAME_SUBSCRIBED_GROUP_IDS)
  private List<String> subscribedGroupIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_UNSUBSCRIBED = "unsubscribed";
  @SerializedName(SERIALIZED_NAME_UNSUBSCRIBED)
  private Boolean unsubscribed;

  public static final String SERIALIZED_NAME_UNSUBSCRIBED_DATE = "unsubscribed_date";
  @SerializedName(SERIALIZED_NAME_UNSUBSCRIBED_DATE)
  private Boolean unsubscribedDate;

  public static final String SERIALIZED_NAME_USER_TYPE = "user_type";
  @SerializedName(SERIALIZED_NAME_USER_TYPE)
  private String userType;

  public static final String SERIALIZED_NAME_ZIP = "zip";
  @SerializedName(SERIALIZED_NAME_ZIP)
  private String zip;

  public Member() {
  }

  public Member id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Member address(String address) {
    this.address = address;
    return this;
  }

  /**
   * Get address
   * @return address
   */
  @javax.annotation.Nullable
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }


  public Member age(String age) {
    this.age = age;
    return this;
  }

  /**
   * Get age
   * @return age
   */
  @javax.annotation.Nullable
  public String getAge() {
    return age;
  }

  public void setAge(String age) {
    this.age = age;
  }


  public Member assets(String assets) {
    this.assets = assets;
    return this;
  }

  /**
   * Get assets
   * @return assets
   */
  @javax.annotation.Nullable
  public String getAssets() {
    return assets;
  }

  public void setAssets(String assets) {
    this.assets = assets;
  }


  public Member city(String city) {
    this.city = city;
    return this;
  }

  /**
   * Get city
   * @return city
   */
  @javax.annotation.Nullable
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }


  public Member dataEstimated(Boolean dataEstimated) {
    this.dataEstimated = dataEstimated;
    return this;
  }

  /**
   * Get dataEstimated
   * @return dataEstimated
   */
  @javax.annotation.Nullable
  public Boolean getDataEstimated() {
    return dataEstimated;
  }

  public void setDataEstimated(Boolean dataEstimated) {
    this.dataEstimated = dataEstimated;
  }


  public Member education(String education) {
    this.education = education;
    return this;
  }

  /**
   * Get education
   * @return education
   */
  @javax.annotation.Nullable
  public String getEducation() {
    return education;
  }

  public void setEducation(String education) {
    this.education = education;
  }


  public Member email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public Member estimatedLocation(String estimatedLocation) {
    this.estimatedLocation = estimatedLocation;
    return this;
  }

  /**
   * Get estimatedLocation
   * @return estimatedLocation
   */
  @javax.annotation.Nullable
  public String getEstimatedLocation() {
    return estimatedLocation;
  }

  public void setEstimatedLocation(String estimatedLocation) {
    this.estimatedLocation = estimatedLocation;
  }


  public Member estimatedZip(String estimatedZip) {
    this.estimatedZip = estimatedZip;
    return this;
  }

  /**
   * Get estimatedZip
   * @return estimatedZip
   */
  @javax.annotation.Nullable
  public String getEstimatedZip() {
    return estimatedZip;
  }

  public void setEstimatedZip(String estimatedZip) {
    this.estimatedZip = estimatedZip;
  }


  public Member family(String family) {
    this.family = family;
    return this;
  }

  /**
   * Get family
   * @return family
   */
  @javax.annotation.Nullable
  public String getFamily() {
    return family;
  }

  public void setFamily(String family) {
    this.family = family;
  }


  public Member firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public Member gender(String gender) {
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @javax.annotation.Nullable
  public String getGender() {
    return gender;
  }

  public void setGender(String gender) {
    this.gender = gender;
  }


  public Member genuineEmail(Boolean genuineEmail) {
    this.genuineEmail = genuineEmail;
    return this;
  }

  /**
   * Get genuineEmail
   * @return genuineEmail
   */
  @javax.annotation.Nullable
  public Boolean getGenuineEmail() {
    return genuineEmail;
  }

  public void setGenuineEmail(Boolean genuineEmail) {
    this.genuineEmail = genuineEmail;
  }


  public Member highNetWorth(Boolean highNetWorth) {
    this.highNetWorth = highNetWorth;
    return this;
  }

  /**
   * Get highNetWorth
   * @return highNetWorth
   */
  @javax.annotation.Nullable
  public Boolean getHighNetWorth() {
    return highNetWorth;
  }

  public void setHighNetWorth(Boolean highNetWorth) {
    this.highNetWorth = highNetWorth;
  }


  public Member homeMarketValue(String homeMarketValue) {
    this.homeMarketValue = homeMarketValue;
    return this;
  }

  /**
   * Get homeMarketValue
   * @return homeMarketValue
   */
  @javax.annotation.Nullable
  public String getHomeMarketValue() {
    return homeMarketValue;
  }

  public void setHomeMarketValue(String homeMarketValue) {
    this.homeMarketValue = homeMarketValue;
  }


  public Member homeOwnerStatus(String homeOwnerStatus) {
    this.homeOwnerStatus = homeOwnerStatus;
    return this;
  }

  /**
   * Get homeOwnerStatus
   * @return homeOwnerStatus
   */
  @javax.annotation.Nullable
  public String getHomeOwnerStatus() {
    return homeOwnerStatus;
  }

  public void setHomeOwnerStatus(String homeOwnerStatus) {
    this.homeOwnerStatus = homeOwnerStatus;
  }


  public Member hometown(String hometown) {
    this.hometown = hometown;
    return this;
  }

  /**
   * Get hometown
   * @return hometown
   */
  @javax.annotation.Nullable
  public String getHometown() {
    return hometown;
  }

  public void setHometown(String hometown) {
    this.hometown = hometown;
  }


  public Member householdIncome(String householdIncome) {
    this.householdIncome = householdIncome;
    return this;
  }

  /**
   * Get householdIncome
   * @return householdIncome
   */
  @javax.annotation.Nullable
  public String getHouseholdIncome() {
    return householdIncome;
  }

  public void setHouseholdIncome(String householdIncome) {
    this.householdIncome = householdIncome;
  }


  public Member interestConsultation(String interestConsultation) {
    this.interestConsultation = interestConsultation;
    return this;
  }

  /**
   * Get interestConsultation
   * @return interestConsultation
   */
  @javax.annotation.Nullable
  public String getInterestConsultation() {
    return interestConsultation;
  }

  public void setInterestConsultation(String interestConsultation) {
    this.interestConsultation = interestConsultation;
  }


  public Member interestInNewAdvisor(String interestInNewAdvisor) {
    this.interestInNewAdvisor = interestInNewAdvisor;
    return this;
  }

  /**
   * Get interestInNewAdvisor
   * @return interestInNewAdvisor
   */
  @javax.annotation.Nullable
  public String getInterestInNewAdvisor() {
    return interestInNewAdvisor;
  }

  public void setInterestInNewAdvisor(String interestInNewAdvisor) {
    this.interestInNewAdvisor = interestInNewAdvisor;
  }


  public Member invitedBy(String invitedBy) {
    this.invitedBy = invitedBy;
    return this;
  }

  /**
   * Get invitedBy
   * @return invitedBy
   */
  @javax.annotation.Nullable
  public String getInvitedBy() {
    return invitedBy;
  }

  public void setInvitedBy(String invitedBy) {
    this.invitedBy = invitedBy;
  }


  public Member invitedOn(String invitedOn) {
    this.invitedOn = invitedOn;
    return this;
  }

  /**
   * Get invitedOn
   * @return invitedOn
   */
  @javax.annotation.Nullable
  public String getInvitedOn() {
    return invitedOn;
  }

  public void setInvitedOn(String invitedOn) {
    this.invitedOn = invitedOn;
  }


  public Member isClient(Boolean isClient) {
    this.isClient = isClient;
    return this;
  }

  /**
   * Get isClient
   * @return isClient
   */
  @javax.annotation.Nullable
  public Boolean getIsClient() {
    return isClient;
  }

  public void setIsClient(Boolean isClient) {
    this.isClient = isClient;
  }


  public Member isHidden(Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

  /**
   * Get isHidden
   * @return isHidden
   */
  @javax.annotation.Nullable
  public Boolean getIsHidden() {
    return isHidden;
  }

  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public Member lastActiveDate(String lastActiveDate) {
    this.lastActiveDate = lastActiveDate;
    return this;
  }

  /**
   * Get lastActiveDate
   * @return lastActiveDate
   */
  @javax.annotation.Nullable
  public String getLastActiveDate() {
    return lastActiveDate;
  }

  public void setLastActiveDate(String lastActiveDate) {
    this.lastActiveDate = lastActiveDate;
  }


  public Member lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public Member location(String location) {
    this.location = location;
    return this;
  }

  /**
   * Get location
   * @return location
   */
  @javax.annotation.Nullable
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }


  public Member maritalStatus(String maritalStatus) {
    this.maritalStatus = maritalStatus;
    return this;
  }

  /**
   * Get maritalStatus
   * @return maritalStatus
   */
  @javax.annotation.Nullable
  public String getMaritalStatus() {
    return maritalStatus;
  }

  public void setMaritalStatus(String maritalStatus) {
    this.maritalStatus = maritalStatus;
  }


  public Member message(String message) {
    this.message = message;
    return this;
  }

  /**
   * Get message
   * @return message
   */
  @javax.annotation.Nullable
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  public Member occupation(String occupation) {
    this.occupation = occupation;
    return this;
  }

  /**
   * Get occupation
   * @return occupation
   */
  @javax.annotation.Nullable
  public String getOccupation() {
    return occupation;
  }

  public void setOccupation(String occupation) {
    this.occupation = occupation;
  }


  public Member phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Get phone
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  public Member pictureUrl(String pictureUrl) {
    this.pictureUrl = pictureUrl;
    return this;
  }

  /**
   * Get pictureUrl
   * @return pictureUrl
   */
  @javax.annotation.Nullable
  public String getPictureUrl() {
    return pictureUrl;
  }

  public void setPictureUrl(String pictureUrl) {
    this.pictureUrl = pictureUrl;
  }


  public Member portfolioSize(String portfolioSize) {
    this.portfolioSize = portfolioSize;
    return this;
  }

  /**
   * Get portfolioSize
   * @return portfolioSize
   */
  @javax.annotation.Nullable
  public String getPortfolioSize() {
    return portfolioSize;
  }

  public void setPortfolioSize(String portfolioSize) {
    this.portfolioSize = portfolioSize;
  }


  public Member profileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
    return this;
  }

  /**
   * Get profileUrl
   * @return profileUrl
   */
  @javax.annotation.Nullable
  public String getProfileUrl() {
    return profileUrl;
  }

  public void setProfileUrl(String profileUrl) {
    this.profileUrl = profileUrl;
  }


  public Member registerIpAddr(String registerIpAddr) {
    this.registerIpAddr = registerIpAddr;
    return this;
  }

  /**
   * Get registerIpAddr
   * @return registerIpAddr
   */
  @javax.annotation.Nullable
  public String getRegisterIpAddr() {
    return registerIpAddr;
  }

  public void setRegisterIpAddr(String registerIpAddr) {
    this.registerIpAddr = registerIpAddr;
  }


  public Member signedUpWith(String signedUpWith) {
    this.signedUpWith = signedUpWith;
    return this;
  }

  /**
   * Get signedUpWith
   * @return signedUpWith
   */
  @javax.annotation.Nullable
  public String getSignedUpWith() {
    return signedUpWith;
  }

  public void setSignedUpWith(String signedUpWith) {
    this.signedUpWith = signedUpWith;
  }


  public Member state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public Member subscribedGroupIds(List<String> subscribedGroupIds) {
    this.subscribedGroupIds = subscribedGroupIds;
    return this;
  }

  public Member addSubscribedGroupIdsItem(String subscribedGroupIdsItem) {
    if (this.subscribedGroupIds == null) {
      this.subscribedGroupIds = new ArrayList<>();
    }
    this.subscribedGroupIds.add(subscribedGroupIdsItem);
    return this;
  }

  /**
   * Get subscribedGroupIds
   * @return subscribedGroupIds
   */
  @javax.annotation.Nullable
  public List<String> getSubscribedGroupIds() {
    return subscribedGroupIds;
  }

  public void setSubscribedGroupIds(List<String> subscribedGroupIds) {
    this.subscribedGroupIds = subscribedGroupIds;
  }


  public Member tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public Member addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public Member unsubscribed(Boolean unsubscribed) {
    this.unsubscribed = unsubscribed;
    return this;
  }

  /**
   * Get unsubscribed
   * @return unsubscribed
   */
  @javax.annotation.Nullable
  public Boolean getUnsubscribed() {
    return unsubscribed;
  }

  public void setUnsubscribed(Boolean unsubscribed) {
    this.unsubscribed = unsubscribed;
  }


  public Member unsubscribedDate(Boolean unsubscribedDate) {
    this.unsubscribedDate = unsubscribedDate;
    return this;
  }

  /**
   * Get unsubscribedDate
   * @return unsubscribedDate
   */
  @javax.annotation.Nullable
  public Boolean getUnsubscribedDate() {
    return unsubscribedDate;
  }

  public void setUnsubscribedDate(Boolean unsubscribedDate) {
    this.unsubscribedDate = unsubscribedDate;
  }


  public Member userType(String userType) {
    this.userType = userType;
    return this;
  }

  /**
   * Get userType
   * @return userType
   */
  @javax.annotation.Nullable
  public String getUserType() {
    return userType;
  }

  public void setUserType(String userType) {
    this.userType = userType;
  }


  public Member zip(String zip) {
    this.zip = zip;
    return this;
  }

  /**
   * Get zip
   * @return zip
   */
  @javax.annotation.Nullable
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Member member = (Member) o;
    return Objects.equals(this.id, member.id) &&
        Objects.equals(this.address, member.address) &&
        Objects.equals(this.age, member.age) &&
        Objects.equals(this.assets, member.assets) &&
        Objects.equals(this.city, member.city) &&
        Objects.equals(this.dataEstimated, member.dataEstimated) &&
        Objects.equals(this.education, member.education) &&
        Objects.equals(this.email, member.email) &&
        Objects.equals(this.estimatedLocation, member.estimatedLocation) &&
        Objects.equals(this.estimatedZip, member.estimatedZip) &&
        Objects.equals(this.family, member.family) &&
        Objects.equals(this.firstName, member.firstName) &&
        Objects.equals(this.gender, member.gender) &&
        Objects.equals(this.genuineEmail, member.genuineEmail) &&
        Objects.equals(this.highNetWorth, member.highNetWorth) &&
        Objects.equals(this.homeMarketValue, member.homeMarketValue) &&
        Objects.equals(this.homeOwnerStatus, member.homeOwnerStatus) &&
        Objects.equals(this.hometown, member.hometown) &&
        Objects.equals(this.householdIncome, member.householdIncome) &&
        Objects.equals(this.interestConsultation, member.interestConsultation) &&
        Objects.equals(this.interestInNewAdvisor, member.interestInNewAdvisor) &&
        Objects.equals(this.invitedBy, member.invitedBy) &&
        Objects.equals(this.invitedOn, member.invitedOn) &&
        Objects.equals(this.isClient, member.isClient) &&
        Objects.equals(this.isHidden, member.isHidden) &&
        Objects.equals(this.lastActiveDate, member.lastActiveDate) &&
        Objects.equals(this.lastName, member.lastName) &&
        Objects.equals(this.location, member.location) &&
        Objects.equals(this.maritalStatus, member.maritalStatus) &&
        Objects.equals(this.message, member.message) &&
        Objects.equals(this.occupation, member.occupation) &&
        Objects.equals(this.phone, member.phone) &&
        Objects.equals(this.pictureUrl, member.pictureUrl) &&
        Objects.equals(this.portfolioSize, member.portfolioSize) &&
        Objects.equals(this.profileUrl, member.profileUrl) &&
        Objects.equals(this.registerIpAddr, member.registerIpAddr) &&
        Objects.equals(this.signedUpWith, member.signedUpWith) &&
        Objects.equals(this.state, member.state) &&
        Objects.equals(this.subscribedGroupIds, member.subscribedGroupIds) &&
        Objects.equals(this.tags, member.tags) &&
        Objects.equals(this.unsubscribed, member.unsubscribed) &&
        Objects.equals(this.unsubscribedDate, member.unsubscribedDate) &&
        Objects.equals(this.userType, member.userType) &&
        Objects.equals(this.zip, member.zip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, address, age, assets, city, dataEstimated, education, email, estimatedLocation, estimatedZip, family, firstName, gender, genuineEmail, highNetWorth, homeMarketValue, homeOwnerStatus, hometown, householdIncome, interestConsultation, interestInNewAdvisor, invitedBy, invitedOn, isClient, isHidden, lastActiveDate, lastName, location, maritalStatus, message, occupation, phone, pictureUrl, portfolioSize, profileUrl, registerIpAddr, signedUpWith, state, subscribedGroupIds, tags, unsubscribed, unsubscribedDate, userType, zip);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Member {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    assets: ").append(toIndentedString(assets)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    dataEstimated: ").append(toIndentedString(dataEstimated)).append("\n");
    sb.append("    education: ").append(toIndentedString(education)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    estimatedLocation: ").append(toIndentedString(estimatedLocation)).append("\n");
    sb.append("    estimatedZip: ").append(toIndentedString(estimatedZip)).append("\n");
    sb.append("    family: ").append(toIndentedString(family)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    genuineEmail: ").append(toIndentedString(genuineEmail)).append("\n");
    sb.append("    highNetWorth: ").append(toIndentedString(highNetWorth)).append("\n");
    sb.append("    homeMarketValue: ").append(toIndentedString(homeMarketValue)).append("\n");
    sb.append("    homeOwnerStatus: ").append(toIndentedString(homeOwnerStatus)).append("\n");
    sb.append("    hometown: ").append(toIndentedString(hometown)).append("\n");
    sb.append("    householdIncome: ").append(toIndentedString(householdIncome)).append("\n");
    sb.append("    interestConsultation: ").append(toIndentedString(interestConsultation)).append("\n");
    sb.append("    interestInNewAdvisor: ").append(toIndentedString(interestInNewAdvisor)).append("\n");
    sb.append("    invitedBy: ").append(toIndentedString(invitedBy)).append("\n");
    sb.append("    invitedOn: ").append(toIndentedString(invitedOn)).append("\n");
    sb.append("    isClient: ").append(toIndentedString(isClient)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    lastActiveDate: ").append(toIndentedString(lastActiveDate)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    maritalStatus: ").append(toIndentedString(maritalStatus)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    occupation: ").append(toIndentedString(occupation)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    pictureUrl: ").append(toIndentedString(pictureUrl)).append("\n");
    sb.append("    portfolioSize: ").append(toIndentedString(portfolioSize)).append("\n");
    sb.append("    profileUrl: ").append(toIndentedString(profileUrl)).append("\n");
    sb.append("    registerIpAddr: ").append(toIndentedString(registerIpAddr)).append("\n");
    sb.append("    signedUpWith: ").append(toIndentedString(signedUpWith)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    subscribedGroupIds: ").append(toIndentedString(subscribedGroupIds)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    unsubscribed: ").append(toIndentedString(unsubscribed)).append("\n");
    sb.append("    unsubscribedDate: ").append(toIndentedString(unsubscribedDate)).append("\n");
    sb.append("    userType: ").append(toIndentedString(userType)).append("\n");
    sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("address");
    openapiFields.add("age");
    openapiFields.add("assets");
    openapiFields.add("city");
    openapiFields.add("data_estimated");
    openapiFields.add("education");
    openapiFields.add("email");
    openapiFields.add("estimated_location");
    openapiFields.add("estimated_zip");
    openapiFields.add("family");
    openapiFields.add("first_name");
    openapiFields.add("gender");
    openapiFields.add("genuine_email");
    openapiFields.add("high_net_worth");
    openapiFields.add("home_market_value");
    openapiFields.add("home_owner_status");
    openapiFields.add("hometown");
    openapiFields.add("household_income");
    openapiFields.add("interest_consultation");
    openapiFields.add("interest_in_new_advisor");
    openapiFields.add("invited_by");
    openapiFields.add("invited_on");
    openapiFields.add("is_client");
    openapiFields.add("is_hidden");
    openapiFields.add("last_active_date");
    openapiFields.add("last_name");
    openapiFields.add("location");
    openapiFields.add("marital_status");
    openapiFields.add("message");
    openapiFields.add("occupation");
    openapiFields.add("phone");
    openapiFields.add("picture_url");
    openapiFields.add("portfolio_size");
    openapiFields.add("profile_url");
    openapiFields.add("register_ip_addr");
    openapiFields.add("signed_up_with");
    openapiFields.add("state");
    openapiFields.add("subscribed_group_ids");
    openapiFields.add("tags");
    openapiFields.add("unsubscribed");
    openapiFields.add("unsubscribed_date");
    openapiFields.add("user_type");
    openapiFields.add("zip");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("_id");
    openapiRequiredFields.add("email");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Member
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Member.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Member is not found in the empty JSON string", Member.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Member.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Member` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Member.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if ((jsonObj.get("address") != null && !jsonObj.get("address").isJsonNull()) && !jsonObj.get("address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("address").toString()));
      }
      if ((jsonObj.get("age") != null && !jsonObj.get("age").isJsonNull()) && !jsonObj.get("age").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `age` to be a primitive type in the JSON string but got `%s`", jsonObj.get("age").toString()));
      }
      if ((jsonObj.get("assets") != null && !jsonObj.get("assets").isJsonNull()) && !jsonObj.get("assets").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `assets` to be a primitive type in the JSON string but got `%s`", jsonObj.get("assets").toString()));
      }
      if ((jsonObj.get("city") != null && !jsonObj.get("city").isJsonNull()) && !jsonObj.get("city").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `city` to be a primitive type in the JSON string but got `%s`", jsonObj.get("city").toString()));
      }
      if ((jsonObj.get("education") != null && !jsonObj.get("education").isJsonNull()) && !jsonObj.get("education").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `education` to be a primitive type in the JSON string but got `%s`", jsonObj.get("education").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("estimated_location") != null && !jsonObj.get("estimated_location").isJsonNull()) && !jsonObj.get("estimated_location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `estimated_location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("estimated_location").toString()));
      }
      if ((jsonObj.get("estimated_zip") != null && !jsonObj.get("estimated_zip").isJsonNull()) && !jsonObj.get("estimated_zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `estimated_zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("estimated_zip").toString()));
      }
      if ((jsonObj.get("family") != null && !jsonObj.get("family").isJsonNull()) && !jsonObj.get("family").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `family` to be a primitive type in the JSON string but got `%s`", jsonObj.get("family").toString()));
      }
      if ((jsonObj.get("first_name") != null && !jsonObj.get("first_name").isJsonNull()) && !jsonObj.get("first_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_name").toString()));
      }
      if ((jsonObj.get("gender") != null && !jsonObj.get("gender").isJsonNull()) && !jsonObj.get("gender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `gender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("gender").toString()));
      }
      if ((jsonObj.get("home_market_value") != null && !jsonObj.get("home_market_value").isJsonNull()) && !jsonObj.get("home_market_value").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `home_market_value` to be a primitive type in the JSON string but got `%s`", jsonObj.get("home_market_value").toString()));
      }
      if ((jsonObj.get("home_owner_status") != null && !jsonObj.get("home_owner_status").isJsonNull()) && !jsonObj.get("home_owner_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `home_owner_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("home_owner_status").toString()));
      }
      if ((jsonObj.get("hometown") != null && !jsonObj.get("hometown").isJsonNull()) && !jsonObj.get("hometown").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `hometown` to be a primitive type in the JSON string but got `%s`", jsonObj.get("hometown").toString()));
      }
      if ((jsonObj.get("household_income") != null && !jsonObj.get("household_income").isJsonNull()) && !jsonObj.get("household_income").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `household_income` to be a primitive type in the JSON string but got `%s`", jsonObj.get("household_income").toString()));
      }
      if ((jsonObj.get("interest_consultation") != null && !jsonObj.get("interest_consultation").isJsonNull()) && !jsonObj.get("interest_consultation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interest_consultation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interest_consultation").toString()));
      }
      if ((jsonObj.get("interest_in_new_advisor") != null && !jsonObj.get("interest_in_new_advisor").isJsonNull()) && !jsonObj.get("interest_in_new_advisor").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interest_in_new_advisor` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interest_in_new_advisor").toString()));
      }
      if ((jsonObj.get("invited_by") != null && !jsonObj.get("invited_by").isJsonNull()) && !jsonObj.get("invited_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invited_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invited_by").toString()));
      }
      if ((jsonObj.get("invited_on") != null && !jsonObj.get("invited_on").isJsonNull()) && !jsonObj.get("invited_on").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `invited_on` to be a primitive type in the JSON string but got `%s`", jsonObj.get("invited_on").toString()));
      }
      if ((jsonObj.get("last_active_date") != null && !jsonObj.get("last_active_date").isJsonNull()) && !jsonObj.get("last_active_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_active_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_active_date").toString()));
      }
      if ((jsonObj.get("last_name") != null && !jsonObj.get("last_name").isJsonNull()) && !jsonObj.get("last_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_name").toString()));
      }
      if ((jsonObj.get("location") != null && !jsonObj.get("location").isJsonNull()) && !jsonObj.get("location").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `location` to be a primitive type in the JSON string but got `%s`", jsonObj.get("location").toString()));
      }
      if ((jsonObj.get("marital_status") != null && !jsonObj.get("marital_status").isJsonNull()) && !jsonObj.get("marital_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marital_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marital_status").toString()));
      }
      if ((jsonObj.get("message") != null && !jsonObj.get("message").isJsonNull()) && !jsonObj.get("message").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `message` to be a primitive type in the JSON string but got `%s`", jsonObj.get("message").toString()));
      }
      if ((jsonObj.get("occupation") != null && !jsonObj.get("occupation").isJsonNull()) && !jsonObj.get("occupation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `occupation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("occupation").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("picture_url") != null && !jsonObj.get("picture_url").isJsonNull()) && !jsonObj.get("picture_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `picture_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("picture_url").toString()));
      }
      if ((jsonObj.get("portfolio_size") != null && !jsonObj.get("portfolio_size").isJsonNull()) && !jsonObj.get("portfolio_size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `portfolio_size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("portfolio_size").toString()));
      }
      if ((jsonObj.get("profile_url") != null && !jsonObj.get("profile_url").isJsonNull()) && !jsonObj.get("profile_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `profile_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("profile_url").toString()));
      }
      if ((jsonObj.get("register_ip_addr") != null && !jsonObj.get("register_ip_addr").isJsonNull()) && !jsonObj.get("register_ip_addr").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `register_ip_addr` to be a primitive type in the JSON string but got `%s`", jsonObj.get("register_ip_addr").toString()));
      }
      if ((jsonObj.get("signed_up_with") != null && !jsonObj.get("signed_up_with").isJsonNull()) && !jsonObj.get("signed_up_with").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `signed_up_with` to be a primitive type in the JSON string but got `%s`", jsonObj.get("signed_up_with").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("subscribed_group_ids") != null && !jsonObj.get("subscribed_group_ids").isJsonNull() && !jsonObj.get("subscribed_group_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscribed_group_ids` to be an array in the JSON string but got `%s`", jsonObj.get("subscribed_group_ids").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("user_type") != null && !jsonObj.get("user_type").isJsonNull()) && !jsonObj.get("user_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `user_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("user_type").toString()));
      }
      if ((jsonObj.get("zip") != null && !jsonObj.get("zip").isJsonNull()) && !jsonObj.get("zip").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `zip` to be a primitive type in the JSON string but got `%s`", jsonObj.get("zip").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Member.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Member' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Member> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Member.class));

       return (TypeAdapter<T>) new TypeAdapter<Member>() {
           @Override
           public void write(JsonWriter out, Member value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Member read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Member given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Member
   * @throws IOException if the JSON string is invalid with respect to Member
   */
  public static Member fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Member.class);
  }

  /**
   * Convert an instance of Member to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

