/*
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SeedCustomFeed
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:17.652103-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SeedCustomFeed {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_ARTICLE_ID = "article_id";
  @SerializedName(SERIALIZED_NAME_ARTICLE_ID)
  private String articleId;

  public static final String SERIALIZED_NAME_CUSTOM_FEED_ID = "custom_feed_id";
  @SerializedName(SERIALIZED_NAME_CUSTOM_FEED_ID)
  private String customFeedId;

  public static final String SERIALIZED_NAME_NOT_ARTICLE_ID = "not_article_id";
  @SerializedName(SERIALIZED_NAME_NOT_ARTICLE_ID)
  private String notArticleId;

  public static final String SERIALIZED_NAME_NOT_SEEDS = "not_seeds";
  @SerializedName(SERIALIZED_NAME_NOT_SEEDS)
  private List<String> notSeeds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SEEDS = "seeds";
  @SerializedName(SERIALIZED_NAME_SEEDS)
  private List<String> seeds = new ArrayList<>();

  public static final String SERIALIZED_NAME_SORT_BY = "sort_by";
  @SerializedName(SERIALIZED_NAME_SORT_BY)
  private String sortBy;

  public SeedCustomFeed() {
  }

  public SeedCustomFeed id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public SeedCustomFeed articleId(String articleId) {
    this.articleId = articleId;
    return this;
  }

  /**
   * Get articleId
   * @return articleId
   */
  @javax.annotation.Nullable
  public String getArticleId() {
    return articleId;
  }

  public void setArticleId(String articleId) {
    this.articleId = articleId;
  }


  public SeedCustomFeed customFeedId(String customFeedId) {
    this.customFeedId = customFeedId;
    return this;
  }

  /**
   * Get customFeedId
   * @return customFeedId
   */
  @javax.annotation.Nullable
  public String getCustomFeedId() {
    return customFeedId;
  }

  public void setCustomFeedId(String customFeedId) {
    this.customFeedId = customFeedId;
  }


  public SeedCustomFeed notArticleId(String notArticleId) {
    this.notArticleId = notArticleId;
    return this;
  }

  /**
   * Get notArticleId
   * @return notArticleId
   */
  @javax.annotation.Nullable
  public String getNotArticleId() {
    return notArticleId;
  }

  public void setNotArticleId(String notArticleId) {
    this.notArticleId = notArticleId;
  }


  public SeedCustomFeed notSeeds(List<String> notSeeds) {
    this.notSeeds = notSeeds;
    return this;
  }

  public SeedCustomFeed addNotSeedsItem(String notSeedsItem) {
    if (this.notSeeds == null) {
      this.notSeeds = new ArrayList<>();
    }
    this.notSeeds.add(notSeedsItem);
    return this;
  }

  /**
   * Get notSeeds
   * @return notSeeds
   */
  @javax.annotation.Nullable
  public List<String> getNotSeeds() {
    return notSeeds;
  }

  public void setNotSeeds(List<String> notSeeds) {
    this.notSeeds = notSeeds;
  }


  public SeedCustomFeed seeds(List<String> seeds) {
    this.seeds = seeds;
    return this;
  }

  public SeedCustomFeed addSeedsItem(String seedsItem) {
    if (this.seeds == null) {
      this.seeds = new ArrayList<>();
    }
    this.seeds.add(seedsItem);
    return this;
  }

  /**
   * Get seeds
   * @return seeds
   */
  @javax.annotation.Nullable
  public List<String> getSeeds() {
    return seeds;
  }

  public void setSeeds(List<String> seeds) {
    this.seeds = seeds;
  }


  public SeedCustomFeed sortBy(String sortBy) {
    this.sortBy = sortBy;
    return this;
  }

  /**
   * Get sortBy
   * @return sortBy
   */
  @javax.annotation.Nullable
  public String getSortBy() {
    return sortBy;
  }

  public void setSortBy(String sortBy) {
    this.sortBy = sortBy;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SeedCustomFeed seedCustomFeed = (SeedCustomFeed) o;
    return Objects.equals(this.id, seedCustomFeed.id) &&
        Objects.equals(this.articleId, seedCustomFeed.articleId) &&
        Objects.equals(this.customFeedId, seedCustomFeed.customFeedId) &&
        Objects.equals(this.notArticleId, seedCustomFeed.notArticleId) &&
        Objects.equals(this.notSeeds, seedCustomFeed.notSeeds) &&
        Objects.equals(this.seeds, seedCustomFeed.seeds) &&
        Objects.equals(this.sortBy, seedCustomFeed.sortBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, articleId, customFeedId, notArticleId, notSeeds, seeds, sortBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SeedCustomFeed {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    articleId: ").append(toIndentedString(articleId)).append("\n");
    sb.append("    customFeedId: ").append(toIndentedString(customFeedId)).append("\n");
    sb.append("    notArticleId: ").append(toIndentedString(notArticleId)).append("\n");
    sb.append("    notSeeds: ").append(toIndentedString(notSeeds)).append("\n");
    sb.append("    seeds: ").append(toIndentedString(seeds)).append("\n");
    sb.append("    sortBy: ").append(toIndentedString(sortBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("article_id");
    openapiFields.add("custom_feed_id");
    openapiFields.add("not_article_id");
    openapiFields.add("not_seeds");
    openapiFields.add("seeds");
    openapiFields.add("sort_by");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SeedCustomFeed
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SeedCustomFeed.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SeedCustomFeed is not found in the empty JSON string", SeedCustomFeed.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SeedCustomFeed.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SeedCustomFeed` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : SeedCustomFeed.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if ((jsonObj.get("article_id") != null && !jsonObj.get("article_id").isJsonNull()) && !jsonObj.get("article_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `article_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("article_id").toString()));
      }
      if ((jsonObj.get("custom_feed_id") != null && !jsonObj.get("custom_feed_id").isJsonNull()) && !jsonObj.get("custom_feed_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `custom_feed_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("custom_feed_id").toString()));
      }
      if ((jsonObj.get("not_article_id") != null && !jsonObj.get("not_article_id").isJsonNull()) && !jsonObj.get("not_article_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `not_article_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("not_article_id").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("not_seeds") != null && !jsonObj.get("not_seeds").isJsonNull() && !jsonObj.get("not_seeds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `not_seeds` to be an array in the JSON string but got `%s`", jsonObj.get("not_seeds").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("seeds") != null && !jsonObj.get("seeds").isJsonNull() && !jsonObj.get("seeds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `seeds` to be an array in the JSON string but got `%s`", jsonObj.get("seeds").toString()));
      }
      if ((jsonObj.get("sort_by") != null && !jsonObj.get("sort_by").isJsonNull()) && !jsonObj.get("sort_by").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sort_by` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sort_by").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SeedCustomFeed.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SeedCustomFeed' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SeedCustomFeed> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SeedCustomFeed.class));

       return (TypeAdapter<T>) new TypeAdapter<SeedCustomFeed>() {
           @Override
           public void write(JsonWriter out, SeedCustomFeed value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SeedCustomFeed read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SeedCustomFeed given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SeedCustomFeed
   * @throws IOException if the JSON string is invalid with respect to SeedCustomFeed
   */
  public static SeedCustomFeed fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SeedCustomFeed.class);
  }

  /**
   * Convert an instance of SeedCustomFeed to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

