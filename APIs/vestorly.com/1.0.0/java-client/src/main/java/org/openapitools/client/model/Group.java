/*
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Group
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:17.652103-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Group {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_AUTOPUBLISH = "autopublish";
  @SerializedName(SERIALIZED_NAME_AUTOPUBLISH)
  private Boolean autopublish;

  public static final String SERIALIZED_NAME_IS_DEFAULT = "is_default";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
  private Boolean isDefault;

  public static final String SERIALIZED_NAME_IS_HIDDEN = "is_hidden";
  @SerializedName(SERIALIZED_NAME_IS_HIDDEN)
  private Boolean isHidden;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NEW_WEEKLY_MAILER_CONTENT = "new_weekly_mailer_content";
  @SerializedName(SERIALIZED_NAME_NEW_WEEKLY_MAILER_CONTENT)
  private String newWeeklyMailerContent;

  public static final String SERIALIZED_NAME_NEWSLETTER_SUBJECT = "newsletter_subject";
  @SerializedName(SERIALIZED_NAME_NEWSLETTER_SUBJECT)
  private String newsletterSubject;

  public static final String SERIALIZED_NAME_NUMBER_ARTICLES_PER_GROUP = "number_articles_per_group";
  @SerializedName(SERIALIZED_NAME_NUMBER_ARTICLES_PER_GROUP)
  private Integer numberArticlesPerGroup;

  public static final String SERIALIZED_NAME_NUMBER_ARTICLES_PER_NEWSLETTER = "number_articles_per_newsletter";
  @SerializedName(SERIALIZED_NAME_NUMBER_ARTICLES_PER_NEWSLETTER)
  private Integer numberArticlesPerNewsletter;

  public Group() {
  }

  public Group id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public Group autopublish(Boolean autopublish) {
    this.autopublish = autopublish;
    return this;
  }

  /**
   * Get autopublish
   * @return autopublish
   */
  @javax.annotation.Nullable
  public Boolean getAutopublish() {
    return autopublish;
  }

  public void setAutopublish(Boolean autopublish) {
    this.autopublish = autopublish;
  }


  public Group isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

  /**
   * Get isDefault
   * @return isDefault
   */
  @javax.annotation.Nullable
  public Boolean getIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public Group isHidden(Boolean isHidden) {
    this.isHidden = isHidden;
    return this;
  }

  /**
   * Get isHidden
   * @return isHidden
   */
  @javax.annotation.Nullable
  public Boolean getIsHidden() {
    return isHidden;
  }

  public void setIsHidden(Boolean isHidden) {
    this.isHidden = isHidden;
  }


  public Group name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Group newWeeklyMailerContent(String newWeeklyMailerContent) {
    this.newWeeklyMailerContent = newWeeklyMailerContent;
    return this;
  }

  /**
   * Get newWeeklyMailerContent
   * @return newWeeklyMailerContent
   */
  @javax.annotation.Nullable
  public String getNewWeeklyMailerContent() {
    return newWeeklyMailerContent;
  }

  public void setNewWeeklyMailerContent(String newWeeklyMailerContent) {
    this.newWeeklyMailerContent = newWeeklyMailerContent;
  }


  public Group newsletterSubject(String newsletterSubject) {
    this.newsletterSubject = newsletterSubject;
    return this;
  }

  /**
   * Get newsletterSubject
   * @return newsletterSubject
   */
  @javax.annotation.Nullable
  public String getNewsletterSubject() {
    return newsletterSubject;
  }

  public void setNewsletterSubject(String newsletterSubject) {
    this.newsletterSubject = newsletterSubject;
  }


  public Group numberArticlesPerGroup(Integer numberArticlesPerGroup) {
    this.numberArticlesPerGroup = numberArticlesPerGroup;
    return this;
  }

  /**
   * Get numberArticlesPerGroup
   * @return numberArticlesPerGroup
   */
  @javax.annotation.Nullable
  public Integer getNumberArticlesPerGroup() {
    return numberArticlesPerGroup;
  }

  public void setNumberArticlesPerGroup(Integer numberArticlesPerGroup) {
    this.numberArticlesPerGroup = numberArticlesPerGroup;
  }


  public Group numberArticlesPerNewsletter(Integer numberArticlesPerNewsletter) {
    this.numberArticlesPerNewsletter = numberArticlesPerNewsletter;
    return this;
  }

  /**
   * Get numberArticlesPerNewsletter
   * @return numberArticlesPerNewsletter
   */
  @javax.annotation.Nullable
  public Integer getNumberArticlesPerNewsletter() {
    return numberArticlesPerNewsletter;
  }

  public void setNumberArticlesPerNewsletter(Integer numberArticlesPerNewsletter) {
    this.numberArticlesPerNewsletter = numberArticlesPerNewsletter;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Group group = (Group) o;
    return Objects.equals(this.id, group.id) &&
        Objects.equals(this.autopublish, group.autopublish) &&
        Objects.equals(this.isDefault, group.isDefault) &&
        Objects.equals(this.isHidden, group.isHidden) &&
        Objects.equals(this.name, group.name) &&
        Objects.equals(this.newWeeklyMailerContent, group.newWeeklyMailerContent) &&
        Objects.equals(this.newsletterSubject, group.newsletterSubject) &&
        Objects.equals(this.numberArticlesPerGroup, group.numberArticlesPerGroup) &&
        Objects.equals(this.numberArticlesPerNewsletter, group.numberArticlesPerNewsletter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, autopublish, isDefault, isHidden, name, newWeeklyMailerContent, newsletterSubject, numberArticlesPerGroup, numberArticlesPerNewsletter);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Group {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    autopublish: ").append(toIndentedString(autopublish)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    isHidden: ").append(toIndentedString(isHidden)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    newWeeklyMailerContent: ").append(toIndentedString(newWeeklyMailerContent)).append("\n");
    sb.append("    newsletterSubject: ").append(toIndentedString(newsletterSubject)).append("\n");
    sb.append("    numberArticlesPerGroup: ").append(toIndentedString(numberArticlesPerGroup)).append("\n");
    sb.append("    numberArticlesPerNewsletter: ").append(toIndentedString(numberArticlesPerNewsletter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("autopublish");
    openapiFields.add("is_default");
    openapiFields.add("is_hidden");
    openapiFields.add("name");
    openapiFields.add("new_weekly_mailer_content");
    openapiFields.add("newsletter_subject");
    openapiFields.add("number_articles_per_group");
    openapiFields.add("number_articles_per_newsletter");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Group
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Group.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Group is not found in the empty JSON string", Group.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Group.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Group` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : Group.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("new_weekly_mailer_content") != null && !jsonObj.get("new_weekly_mailer_content").isJsonNull()) && !jsonObj.get("new_weekly_mailer_content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `new_weekly_mailer_content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("new_weekly_mailer_content").toString()));
      }
      if ((jsonObj.get("newsletter_subject") != null && !jsonObj.get("newsletter_subject").isJsonNull()) && !jsonObj.get("newsletter_subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newsletter_subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newsletter_subject").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Group.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Group' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Group> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Group.class));

       return (TypeAdapter<T>) new TypeAdapter<Group>() {
           @Override
           public void write(JsonWriter out, Group value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Group read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Group given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Group
   * @throws IOException if the JSON string is invalid with respect to Group
   */
  public static Group fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Group.class);
  }

  /**
   * Convert an instance of Group to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

