/*
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * OrgSetting
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:17.652103-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrgSetting {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_COMPANY_ADDRESS = "company_address";
  @SerializedName(SERIALIZED_NAME_COMPANY_ADDRESS)
  private String companyAddress;

  public static final String SERIALIZED_NAME_COMPANY_CONTACT_EMAIL = "company_contact_email";
  @SerializedName(SERIALIZED_NAME_COMPANY_CONTACT_EMAIL)
  private String companyContactEmail;

  public static final String SERIALIZED_NAME_COMPANY_HOMEPAGE_URL = "company_homepage_url";
  @SerializedName(SERIALIZED_NAME_COMPANY_HOMEPAGE_URL)
  private String companyHomepageUrl;

  public static final String SERIALIZED_NAME_IS_DEFAULT = "is_default";
  @SerializedName(SERIALIZED_NAME_IS_DEFAULT)
  private Boolean isDefault;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY_URL = "privacy_policy_url";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY_URL)
  private String privacyPolicyUrl;

  public static final String SERIALIZED_NAME_SITE_URL = "site_url";
  @SerializedName(SERIALIZED_NAME_SITE_URL)
  private String siteUrl;

  public static final String SERIALIZED_NAME_TERMS_AND_CONDITIONS_URL = "terms_and_conditions_url";
  @SerializedName(SERIALIZED_NAME_TERMS_AND_CONDITIONS_URL)
  private String termsAndConditionsUrl;

  public OrgSetting() {
  }

  public OrgSetting id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public OrgSetting companyAddress(String companyAddress) {
    this.companyAddress = companyAddress;
    return this;
  }

  /**
   * Get companyAddress
   * @return companyAddress
   */
  @javax.annotation.Nullable
  public String getCompanyAddress() {
    return companyAddress;
  }

  public void setCompanyAddress(String companyAddress) {
    this.companyAddress = companyAddress;
  }


  public OrgSetting companyContactEmail(String companyContactEmail) {
    this.companyContactEmail = companyContactEmail;
    return this;
  }

  /**
   * Get companyContactEmail
   * @return companyContactEmail
   */
  @javax.annotation.Nullable
  public String getCompanyContactEmail() {
    return companyContactEmail;
  }

  public void setCompanyContactEmail(String companyContactEmail) {
    this.companyContactEmail = companyContactEmail;
  }


  public OrgSetting companyHomepageUrl(String companyHomepageUrl) {
    this.companyHomepageUrl = companyHomepageUrl;
    return this;
  }

  /**
   * Get companyHomepageUrl
   * @return companyHomepageUrl
   */
  @javax.annotation.Nullable
  public String getCompanyHomepageUrl() {
    return companyHomepageUrl;
  }

  public void setCompanyHomepageUrl(String companyHomepageUrl) {
    this.companyHomepageUrl = companyHomepageUrl;
  }


  public OrgSetting isDefault(Boolean isDefault) {
    this.isDefault = isDefault;
    return this;
  }

  /**
   * Get isDefault
   * @return isDefault
   */
  @javax.annotation.Nullable
  public Boolean getIsDefault() {
    return isDefault;
  }

  public void setIsDefault(Boolean isDefault) {
    this.isDefault = isDefault;
  }


  public OrgSetting name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public OrgSetting privacyPolicyUrl(String privacyPolicyUrl) {
    this.privacyPolicyUrl = privacyPolicyUrl;
    return this;
  }

  /**
   * Get privacyPolicyUrl
   * @return privacyPolicyUrl
   */
  @javax.annotation.Nullable
  public String getPrivacyPolicyUrl() {
    return privacyPolicyUrl;
  }

  public void setPrivacyPolicyUrl(String privacyPolicyUrl) {
    this.privacyPolicyUrl = privacyPolicyUrl;
  }


  public OrgSetting siteUrl(String siteUrl) {
    this.siteUrl = siteUrl;
    return this;
  }

  /**
   * Get siteUrl
   * @return siteUrl
   */
  @javax.annotation.Nullable
  public String getSiteUrl() {
    return siteUrl;
  }

  public void setSiteUrl(String siteUrl) {
    this.siteUrl = siteUrl;
  }


  public OrgSetting termsAndConditionsUrl(String termsAndConditionsUrl) {
    this.termsAndConditionsUrl = termsAndConditionsUrl;
    return this;
  }

  /**
   * Get termsAndConditionsUrl
   * @return termsAndConditionsUrl
   */
  @javax.annotation.Nullable
  public String getTermsAndConditionsUrl() {
    return termsAndConditionsUrl;
  }

  public void setTermsAndConditionsUrl(String termsAndConditionsUrl) {
    this.termsAndConditionsUrl = termsAndConditionsUrl;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgSetting orgSetting = (OrgSetting) o;
    return Objects.equals(this.id, orgSetting.id) &&
        Objects.equals(this.companyAddress, orgSetting.companyAddress) &&
        Objects.equals(this.companyContactEmail, orgSetting.companyContactEmail) &&
        Objects.equals(this.companyHomepageUrl, orgSetting.companyHomepageUrl) &&
        Objects.equals(this.isDefault, orgSetting.isDefault) &&
        Objects.equals(this.name, orgSetting.name) &&
        Objects.equals(this.privacyPolicyUrl, orgSetting.privacyPolicyUrl) &&
        Objects.equals(this.siteUrl, orgSetting.siteUrl) &&
        Objects.equals(this.termsAndConditionsUrl, orgSetting.termsAndConditionsUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, companyAddress, companyContactEmail, companyHomepageUrl, isDefault, name, privacyPolicyUrl, siteUrl, termsAndConditionsUrl);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgSetting {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    companyAddress: ").append(toIndentedString(companyAddress)).append("\n");
    sb.append("    companyContactEmail: ").append(toIndentedString(companyContactEmail)).append("\n");
    sb.append("    companyHomepageUrl: ").append(toIndentedString(companyHomepageUrl)).append("\n");
    sb.append("    isDefault: ").append(toIndentedString(isDefault)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privacyPolicyUrl: ").append(toIndentedString(privacyPolicyUrl)).append("\n");
    sb.append("    siteUrl: ").append(toIndentedString(siteUrl)).append("\n");
    sb.append("    termsAndConditionsUrl: ").append(toIndentedString(termsAndConditionsUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("company_address");
    openapiFields.add("company_contact_email");
    openapiFields.add("company_homepage_url");
    openapiFields.add("is_default");
    openapiFields.add("name");
    openapiFields.add("privacy_policy_url");
    openapiFields.add("site_url");
    openapiFields.add("terms_and_conditions_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrgSetting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrgSetting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrgSetting is not found in the empty JSON string", OrgSetting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrgSetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrgSetting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrgSetting.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if ((jsonObj.get("company_address") != null && !jsonObj.get("company_address").isJsonNull()) && !jsonObj.get("company_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_address").toString()));
      }
      if ((jsonObj.get("company_contact_email") != null && !jsonObj.get("company_contact_email").isJsonNull()) && !jsonObj.get("company_contact_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_contact_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_contact_email").toString()));
      }
      if ((jsonObj.get("company_homepage_url") != null && !jsonObj.get("company_homepage_url").isJsonNull()) && !jsonObj.get("company_homepage_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `company_homepage_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("company_homepage_url").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("privacy_policy_url") != null && !jsonObj.get("privacy_policy_url").isJsonNull()) && !jsonObj.get("privacy_policy_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `privacy_policy_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("privacy_policy_url").toString()));
      }
      if ((jsonObj.get("site_url") != null && !jsonObj.get("site_url").isJsonNull()) && !jsonObj.get("site_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `site_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("site_url").toString()));
      }
      if ((jsonObj.get("terms_and_conditions_url") != null && !jsonObj.get("terms_and_conditions_url").isJsonNull()) && !jsonObj.get("terms_and_conditions_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `terms_and_conditions_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("terms_and_conditions_url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrgSetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrgSetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrgSetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrgSetting.class));

       return (TypeAdapter<T>) new TypeAdapter<OrgSetting>() {
           @Override
           public void write(JsonWriter out, OrgSetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrgSetting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrgSetting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrgSetting
   * @throws IOException if the JSON string is invalid with respect to OrgSetting
   */
  public static OrgSetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrgSetting.class);
  }

  /**
   * Convert an instance of OrgSetting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

