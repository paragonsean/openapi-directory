/*
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * NewsletterSetting
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:17.652103-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class NewsletterSetting {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_BANNER_COLOR = "banner_color";
  @SerializedName(SERIALIZED_NAME_BANNER_COLOR)
  private String bannerColor;

  public static final String SERIALIZED_NAME_BODY_HTML = "body_html";
  @SerializedName(SERIALIZED_NAME_BODY_HTML)
  private String bodyHtml;

  public static final String SERIALIZED_NAME_EMAIL_ACCENT_COLOR = "email_accent_color";
  @SerializedName(SERIALIZED_NAME_EMAIL_ACCENT_COLOR)
  private String emailAccentColor;

  public static final String SERIALIZED_NAME_EMAIL_DAY_OF_WEEK = "email_day_of_week";
  @SerializedName(SERIALIZED_NAME_EMAIL_DAY_OF_WEEK)
  private Integer emailDayOfWeek;

  public static final String SERIALIZED_NAME_EMAIL_HOUR = "email_hour";
  @SerializedName(SERIALIZED_NAME_EMAIL_HOUR)
  private Integer emailHour;

  public static final String SERIALIZED_NAME_EMAIL_STATUS = "email_status";
  @SerializedName(SERIALIZED_NAME_EMAIL_STATUS)
  private String emailStatus;

  public static final String SERIALIZED_NAME_FACEBOOK_ACTIVE_WALL = "facebook_active_wall";
  @SerializedName(SERIALIZED_NAME_FACEBOOK_ACTIVE_WALL)
  private String facebookActiveWall;

  public static final String SERIALIZED_NAME_FOOTER_EMAIL_FONT = "footer_email_font";
  @SerializedName(SERIALIZED_NAME_FOOTER_EMAIL_FONT)
  private String footerEmailFont;

  public static final String SERIALIZED_NAME_FOOTER_HTML = "footer_html";
  @SerializedName(SERIALIZED_NAME_FOOTER_HTML)
  private String footerHtml;

  public static final String SERIALIZED_NAME_FOOTER_IMAGE_URL = "footer_image_url";
  @SerializedName(SERIALIZED_NAME_FOOTER_IMAGE_URL)
  private String footerImageUrl;

  public static final String SERIALIZED_NAME_GROUP_ID = "group_id";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private String groupId;

  public static final String SERIALIZED_NAME_HEADER_BACKGROUND_COLOR = "header_background_color";
  @SerializedName(SERIALIZED_NAME_HEADER_BACKGROUND_COLOR)
  private String headerBackgroundColor;

  public static final String SERIALIZED_NAME_HEADER_IMAGE_URL = "header_image_url";
  @SerializedName(SERIALIZED_NAME_HEADER_IMAGE_URL)
  private String headerImageUrl;

  public static final String SERIALIZED_NAME_INTRO_TEXT = "intro_text";
  @SerializedName(SERIALIZED_NAME_INTRO_TEXT)
  private String introText;

  public static final String SERIALIZED_NAME_LINKEDIN_ACTIVE_WALL = "linkedin_active_wall";
  @SerializedName(SERIALIZED_NAME_LINKEDIN_ACTIVE_WALL)
  private String linkedinActiveWall;

  public static final String SERIALIZED_NAME_MONTAGE_ENABLED = "montage_enabled";
  @SerializedName(SERIALIZED_NAME_MONTAGE_ENABLED)
  private Boolean montageEnabled;

  public static final String SERIALIZED_NAME_MONTAGE_FACEBOOK_IMAGE_URL = "montage_facebook_image_url";
  @SerializedName(SERIALIZED_NAME_MONTAGE_FACEBOOK_IMAGE_URL)
  private String montageFacebookImageUrl;

  public static final String SERIALIZED_NAME_MONTAGE_LINKEDIN_IMAGE_URL = "montage_linkedin_image_url";
  @SerializedName(SERIALIZED_NAME_MONTAGE_LINKEDIN_IMAGE_URL)
  private String montageLinkedinImageUrl;

  public static final String SERIALIZED_NAME_MONTAGE_TITLE = "montage_title";
  @SerializedName(SERIALIZED_NAME_MONTAGE_TITLE)
  private String montageTitle;

  public static final String SERIALIZED_NAME_MONTAGE_TWITTER_IMAGE_URL = "montage_twitter_image_url";
  @SerializedName(SERIALIZED_NAME_MONTAGE_TWITTER_IMAGE_URL)
  private String montageTwitterImageUrl;

  public static final String SERIALIZED_NAME_NEWSLETTER_IDS = "newsletter_ids";
  @SerializedName(SERIALIZED_NAME_NEWSLETTER_IDS)
  private List<String> newsletterIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_NEWSLETTER_TYPE = "newsletter_type";
  @SerializedName(SERIALIZED_NAME_NEWSLETTER_TYPE)
  private String newsletterType;

  public static final String SERIALIZED_NAME_PRIMARY_EMAIL_FONT = "primary_email_font";
  @SerializedName(SERIALIZED_NAME_PRIMARY_EMAIL_FONT)
  private String primaryEmailFont;

  public static final String SERIALIZED_NAME_SALUTATION_TEXT = "salutation_text";
  @SerializedName(SERIALIZED_NAME_SALUTATION_TEXT)
  private String salutationText;

  public static final String SERIALIZED_NAME_SOCIAL_DAY_OF_WEEK = "social_day_of_week";
  @SerializedName(SERIALIZED_NAME_SOCIAL_DAY_OF_WEEK)
  private Integer socialDayOfWeek;

  public static final String SERIALIZED_NAME_SOCIAL_DESCRIPTION = "social_description";
  @SerializedName(SERIALIZED_NAME_SOCIAL_DESCRIPTION)
  private String socialDescription;

  public static final String SERIALIZED_NAME_SOCIAL_POSTING_TEXT = "social_posting_text";
  @SerializedName(SERIALIZED_NAME_SOCIAL_POSTING_TEXT)
  private String socialPostingText;

  public static final String SERIALIZED_NAME_SOCIAL_TITLE = "social_title";
  @SerializedName(SERIALIZED_NAME_SOCIAL_TITLE)
  private String socialTitle;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TITLE_COLOR = "title_color";
  @SerializedName(SERIALIZED_NAME_TITLE_COLOR)
  private String titleColor;

  public NewsletterSetting() {
  }

  public NewsletterSetting id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public NewsletterSetting bannerColor(String bannerColor) {
    this.bannerColor = bannerColor;
    return this;
  }

  /**
   * Get bannerColor
   * @return bannerColor
   */
  @javax.annotation.Nullable
  public String getBannerColor() {
    return bannerColor;
  }

  public void setBannerColor(String bannerColor) {
    this.bannerColor = bannerColor;
  }


  public NewsletterSetting bodyHtml(String bodyHtml) {
    this.bodyHtml = bodyHtml;
    return this;
  }

  /**
   * Get bodyHtml
   * @return bodyHtml
   */
  @javax.annotation.Nullable
  public String getBodyHtml() {
    return bodyHtml;
  }

  public void setBodyHtml(String bodyHtml) {
    this.bodyHtml = bodyHtml;
  }


  public NewsletterSetting emailAccentColor(String emailAccentColor) {
    this.emailAccentColor = emailAccentColor;
    return this;
  }

  /**
   * Get emailAccentColor
   * @return emailAccentColor
   */
  @javax.annotation.Nullable
  public String getEmailAccentColor() {
    return emailAccentColor;
  }

  public void setEmailAccentColor(String emailAccentColor) {
    this.emailAccentColor = emailAccentColor;
  }


  public NewsletterSetting emailDayOfWeek(Integer emailDayOfWeek) {
    this.emailDayOfWeek = emailDayOfWeek;
    return this;
  }

  /**
   * Get emailDayOfWeek
   * @return emailDayOfWeek
   */
  @javax.annotation.Nullable
  public Integer getEmailDayOfWeek() {
    return emailDayOfWeek;
  }

  public void setEmailDayOfWeek(Integer emailDayOfWeek) {
    this.emailDayOfWeek = emailDayOfWeek;
  }


  public NewsletterSetting emailHour(Integer emailHour) {
    this.emailHour = emailHour;
    return this;
  }

  /**
   * Get emailHour
   * @return emailHour
   */
  @javax.annotation.Nullable
  public Integer getEmailHour() {
    return emailHour;
  }

  public void setEmailHour(Integer emailHour) {
    this.emailHour = emailHour;
  }


  public NewsletterSetting emailStatus(String emailStatus) {
    this.emailStatus = emailStatus;
    return this;
  }

  /**
   * Get emailStatus
   * @return emailStatus
   */
  @javax.annotation.Nullable
  public String getEmailStatus() {
    return emailStatus;
  }

  public void setEmailStatus(String emailStatus) {
    this.emailStatus = emailStatus;
  }


  public NewsletterSetting facebookActiveWall(String facebookActiveWall) {
    this.facebookActiveWall = facebookActiveWall;
    return this;
  }

  /**
   * Get facebookActiveWall
   * @return facebookActiveWall
   */
  @javax.annotation.Nullable
  public String getFacebookActiveWall() {
    return facebookActiveWall;
  }

  public void setFacebookActiveWall(String facebookActiveWall) {
    this.facebookActiveWall = facebookActiveWall;
  }


  public NewsletterSetting footerEmailFont(String footerEmailFont) {
    this.footerEmailFont = footerEmailFont;
    return this;
  }

  /**
   * Get footerEmailFont
   * @return footerEmailFont
   */
  @javax.annotation.Nullable
  public String getFooterEmailFont() {
    return footerEmailFont;
  }

  public void setFooterEmailFont(String footerEmailFont) {
    this.footerEmailFont = footerEmailFont;
  }


  public NewsletterSetting footerHtml(String footerHtml) {
    this.footerHtml = footerHtml;
    return this;
  }

  /**
   * Get footerHtml
   * @return footerHtml
   */
  @javax.annotation.Nullable
  public String getFooterHtml() {
    return footerHtml;
  }

  public void setFooterHtml(String footerHtml) {
    this.footerHtml = footerHtml;
  }


  public NewsletterSetting footerImageUrl(String footerImageUrl) {
    this.footerImageUrl = footerImageUrl;
    return this;
  }

  /**
   * Get footerImageUrl
   * @return footerImageUrl
   */
  @javax.annotation.Nullable
  public String getFooterImageUrl() {
    return footerImageUrl;
  }

  public void setFooterImageUrl(String footerImageUrl) {
    this.footerImageUrl = footerImageUrl;
  }


  public NewsletterSetting groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

  /**
   * Get groupId
   * @return groupId
   */
  @javax.annotation.Nullable
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }


  public NewsletterSetting headerBackgroundColor(String headerBackgroundColor) {
    this.headerBackgroundColor = headerBackgroundColor;
    return this;
  }

  /**
   * Get headerBackgroundColor
   * @return headerBackgroundColor
   */
  @javax.annotation.Nullable
  public String getHeaderBackgroundColor() {
    return headerBackgroundColor;
  }

  public void setHeaderBackgroundColor(String headerBackgroundColor) {
    this.headerBackgroundColor = headerBackgroundColor;
  }


  public NewsletterSetting headerImageUrl(String headerImageUrl) {
    this.headerImageUrl = headerImageUrl;
    return this;
  }

  /**
   * Get headerImageUrl
   * @return headerImageUrl
   */
  @javax.annotation.Nullable
  public String getHeaderImageUrl() {
    return headerImageUrl;
  }

  public void setHeaderImageUrl(String headerImageUrl) {
    this.headerImageUrl = headerImageUrl;
  }


  public NewsletterSetting introText(String introText) {
    this.introText = introText;
    return this;
  }

  /**
   * Get introText
   * @return introText
   */
  @javax.annotation.Nullable
  public String getIntroText() {
    return introText;
  }

  public void setIntroText(String introText) {
    this.introText = introText;
  }


  public NewsletterSetting linkedinActiveWall(String linkedinActiveWall) {
    this.linkedinActiveWall = linkedinActiveWall;
    return this;
  }

  /**
   * Get linkedinActiveWall
   * @return linkedinActiveWall
   */
  @javax.annotation.Nullable
  public String getLinkedinActiveWall() {
    return linkedinActiveWall;
  }

  public void setLinkedinActiveWall(String linkedinActiveWall) {
    this.linkedinActiveWall = linkedinActiveWall;
  }


  public NewsletterSetting montageEnabled(Boolean montageEnabled) {
    this.montageEnabled = montageEnabled;
    return this;
  }

  /**
   * Get montageEnabled
   * @return montageEnabled
   */
  @javax.annotation.Nullable
  public Boolean getMontageEnabled() {
    return montageEnabled;
  }

  public void setMontageEnabled(Boolean montageEnabled) {
    this.montageEnabled = montageEnabled;
  }


  public NewsletterSetting montageFacebookImageUrl(String montageFacebookImageUrl) {
    this.montageFacebookImageUrl = montageFacebookImageUrl;
    return this;
  }

  /**
   * Get montageFacebookImageUrl
   * @return montageFacebookImageUrl
   */
  @javax.annotation.Nullable
  public String getMontageFacebookImageUrl() {
    return montageFacebookImageUrl;
  }

  public void setMontageFacebookImageUrl(String montageFacebookImageUrl) {
    this.montageFacebookImageUrl = montageFacebookImageUrl;
  }


  public NewsletterSetting montageLinkedinImageUrl(String montageLinkedinImageUrl) {
    this.montageLinkedinImageUrl = montageLinkedinImageUrl;
    return this;
  }

  /**
   * Get montageLinkedinImageUrl
   * @return montageLinkedinImageUrl
   */
  @javax.annotation.Nullable
  public String getMontageLinkedinImageUrl() {
    return montageLinkedinImageUrl;
  }

  public void setMontageLinkedinImageUrl(String montageLinkedinImageUrl) {
    this.montageLinkedinImageUrl = montageLinkedinImageUrl;
  }


  public NewsletterSetting montageTitle(String montageTitle) {
    this.montageTitle = montageTitle;
    return this;
  }

  /**
   * Get montageTitle
   * @return montageTitle
   */
  @javax.annotation.Nullable
  public String getMontageTitle() {
    return montageTitle;
  }

  public void setMontageTitle(String montageTitle) {
    this.montageTitle = montageTitle;
  }


  public NewsletterSetting montageTwitterImageUrl(String montageTwitterImageUrl) {
    this.montageTwitterImageUrl = montageTwitterImageUrl;
    return this;
  }

  /**
   * Get montageTwitterImageUrl
   * @return montageTwitterImageUrl
   */
  @javax.annotation.Nullable
  public String getMontageTwitterImageUrl() {
    return montageTwitterImageUrl;
  }

  public void setMontageTwitterImageUrl(String montageTwitterImageUrl) {
    this.montageTwitterImageUrl = montageTwitterImageUrl;
  }


  public NewsletterSetting newsletterIds(List<String> newsletterIds) {
    this.newsletterIds = newsletterIds;
    return this;
  }

  public NewsletterSetting addNewsletterIdsItem(String newsletterIdsItem) {
    if (this.newsletterIds == null) {
      this.newsletterIds = new ArrayList<>();
    }
    this.newsletterIds.add(newsletterIdsItem);
    return this;
  }

  /**
   * Get newsletterIds
   * @return newsletterIds
   */
  @javax.annotation.Nullable
  public List<String> getNewsletterIds() {
    return newsletterIds;
  }

  public void setNewsletterIds(List<String> newsletterIds) {
    this.newsletterIds = newsletterIds;
  }


  public NewsletterSetting newsletterType(String newsletterType) {
    this.newsletterType = newsletterType;
    return this;
  }

  /**
   * Get newsletterType
   * @return newsletterType
   */
  @javax.annotation.Nullable
  public String getNewsletterType() {
    return newsletterType;
  }

  public void setNewsletterType(String newsletterType) {
    this.newsletterType = newsletterType;
  }


  public NewsletterSetting primaryEmailFont(String primaryEmailFont) {
    this.primaryEmailFont = primaryEmailFont;
    return this;
  }

  /**
   * Get primaryEmailFont
   * @return primaryEmailFont
   */
  @javax.annotation.Nullable
  public String getPrimaryEmailFont() {
    return primaryEmailFont;
  }

  public void setPrimaryEmailFont(String primaryEmailFont) {
    this.primaryEmailFont = primaryEmailFont;
  }


  public NewsletterSetting salutationText(String salutationText) {
    this.salutationText = salutationText;
    return this;
  }

  /**
   * Get salutationText
   * @return salutationText
   */
  @javax.annotation.Nullable
  public String getSalutationText() {
    return salutationText;
  }

  public void setSalutationText(String salutationText) {
    this.salutationText = salutationText;
  }


  public NewsletterSetting socialDayOfWeek(Integer socialDayOfWeek) {
    this.socialDayOfWeek = socialDayOfWeek;
    return this;
  }

  /**
   * Get socialDayOfWeek
   * @return socialDayOfWeek
   */
  @javax.annotation.Nullable
  public Integer getSocialDayOfWeek() {
    return socialDayOfWeek;
  }

  public void setSocialDayOfWeek(Integer socialDayOfWeek) {
    this.socialDayOfWeek = socialDayOfWeek;
  }


  public NewsletterSetting socialDescription(String socialDescription) {
    this.socialDescription = socialDescription;
    return this;
  }

  /**
   * Get socialDescription
   * @return socialDescription
   */
  @javax.annotation.Nullable
  public String getSocialDescription() {
    return socialDescription;
  }

  public void setSocialDescription(String socialDescription) {
    this.socialDescription = socialDescription;
  }


  public NewsletterSetting socialPostingText(String socialPostingText) {
    this.socialPostingText = socialPostingText;
    return this;
  }

  /**
   * Get socialPostingText
   * @return socialPostingText
   */
  @javax.annotation.Nullable
  public String getSocialPostingText() {
    return socialPostingText;
  }

  public void setSocialPostingText(String socialPostingText) {
    this.socialPostingText = socialPostingText;
  }


  public NewsletterSetting socialTitle(String socialTitle) {
    this.socialTitle = socialTitle;
    return this;
  }

  /**
   * Get socialTitle
   * @return socialTitle
   */
  @javax.annotation.Nullable
  public String getSocialTitle() {
    return socialTitle;
  }

  public void setSocialTitle(String socialTitle) {
    this.socialTitle = socialTitle;
  }


  public NewsletterSetting subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public NewsletterSetting titleColor(String titleColor) {
    this.titleColor = titleColor;
    return this;
  }

  /**
   * Get titleColor
   * @return titleColor
   */
  @javax.annotation.Nullable
  public String getTitleColor() {
    return titleColor;
  }

  public void setTitleColor(String titleColor) {
    this.titleColor = titleColor;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    NewsletterSetting newsletterSetting = (NewsletterSetting) o;
    return Objects.equals(this.id, newsletterSetting.id) &&
        Objects.equals(this.bannerColor, newsletterSetting.bannerColor) &&
        Objects.equals(this.bodyHtml, newsletterSetting.bodyHtml) &&
        Objects.equals(this.emailAccentColor, newsletterSetting.emailAccentColor) &&
        Objects.equals(this.emailDayOfWeek, newsletterSetting.emailDayOfWeek) &&
        Objects.equals(this.emailHour, newsletterSetting.emailHour) &&
        Objects.equals(this.emailStatus, newsletterSetting.emailStatus) &&
        Objects.equals(this.facebookActiveWall, newsletterSetting.facebookActiveWall) &&
        Objects.equals(this.footerEmailFont, newsletterSetting.footerEmailFont) &&
        Objects.equals(this.footerHtml, newsletterSetting.footerHtml) &&
        Objects.equals(this.footerImageUrl, newsletterSetting.footerImageUrl) &&
        Objects.equals(this.groupId, newsletterSetting.groupId) &&
        Objects.equals(this.headerBackgroundColor, newsletterSetting.headerBackgroundColor) &&
        Objects.equals(this.headerImageUrl, newsletterSetting.headerImageUrl) &&
        Objects.equals(this.introText, newsletterSetting.introText) &&
        Objects.equals(this.linkedinActiveWall, newsletterSetting.linkedinActiveWall) &&
        Objects.equals(this.montageEnabled, newsletterSetting.montageEnabled) &&
        Objects.equals(this.montageFacebookImageUrl, newsletterSetting.montageFacebookImageUrl) &&
        Objects.equals(this.montageLinkedinImageUrl, newsletterSetting.montageLinkedinImageUrl) &&
        Objects.equals(this.montageTitle, newsletterSetting.montageTitle) &&
        Objects.equals(this.montageTwitterImageUrl, newsletterSetting.montageTwitterImageUrl) &&
        Objects.equals(this.newsletterIds, newsletterSetting.newsletterIds) &&
        Objects.equals(this.newsletterType, newsletterSetting.newsletterType) &&
        Objects.equals(this.primaryEmailFont, newsletterSetting.primaryEmailFont) &&
        Objects.equals(this.salutationText, newsletterSetting.salutationText) &&
        Objects.equals(this.socialDayOfWeek, newsletterSetting.socialDayOfWeek) &&
        Objects.equals(this.socialDescription, newsletterSetting.socialDescription) &&
        Objects.equals(this.socialPostingText, newsletterSetting.socialPostingText) &&
        Objects.equals(this.socialTitle, newsletterSetting.socialTitle) &&
        Objects.equals(this.subject, newsletterSetting.subject) &&
        Objects.equals(this.titleColor, newsletterSetting.titleColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bannerColor, bodyHtml, emailAccentColor, emailDayOfWeek, emailHour, emailStatus, facebookActiveWall, footerEmailFont, footerHtml, footerImageUrl, groupId, headerBackgroundColor, headerImageUrl, introText, linkedinActiveWall, montageEnabled, montageFacebookImageUrl, montageLinkedinImageUrl, montageTitle, montageTwitterImageUrl, newsletterIds, newsletterType, primaryEmailFont, salutationText, socialDayOfWeek, socialDescription, socialPostingText, socialTitle, subject, titleColor);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class NewsletterSetting {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bannerColor: ").append(toIndentedString(bannerColor)).append("\n");
    sb.append("    bodyHtml: ").append(toIndentedString(bodyHtml)).append("\n");
    sb.append("    emailAccentColor: ").append(toIndentedString(emailAccentColor)).append("\n");
    sb.append("    emailDayOfWeek: ").append(toIndentedString(emailDayOfWeek)).append("\n");
    sb.append("    emailHour: ").append(toIndentedString(emailHour)).append("\n");
    sb.append("    emailStatus: ").append(toIndentedString(emailStatus)).append("\n");
    sb.append("    facebookActiveWall: ").append(toIndentedString(facebookActiveWall)).append("\n");
    sb.append("    footerEmailFont: ").append(toIndentedString(footerEmailFont)).append("\n");
    sb.append("    footerHtml: ").append(toIndentedString(footerHtml)).append("\n");
    sb.append("    footerImageUrl: ").append(toIndentedString(footerImageUrl)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    headerBackgroundColor: ").append(toIndentedString(headerBackgroundColor)).append("\n");
    sb.append("    headerImageUrl: ").append(toIndentedString(headerImageUrl)).append("\n");
    sb.append("    introText: ").append(toIndentedString(introText)).append("\n");
    sb.append("    linkedinActiveWall: ").append(toIndentedString(linkedinActiveWall)).append("\n");
    sb.append("    montageEnabled: ").append(toIndentedString(montageEnabled)).append("\n");
    sb.append("    montageFacebookImageUrl: ").append(toIndentedString(montageFacebookImageUrl)).append("\n");
    sb.append("    montageLinkedinImageUrl: ").append(toIndentedString(montageLinkedinImageUrl)).append("\n");
    sb.append("    montageTitle: ").append(toIndentedString(montageTitle)).append("\n");
    sb.append("    montageTwitterImageUrl: ").append(toIndentedString(montageTwitterImageUrl)).append("\n");
    sb.append("    newsletterIds: ").append(toIndentedString(newsletterIds)).append("\n");
    sb.append("    newsletterType: ").append(toIndentedString(newsletterType)).append("\n");
    sb.append("    primaryEmailFont: ").append(toIndentedString(primaryEmailFont)).append("\n");
    sb.append("    salutationText: ").append(toIndentedString(salutationText)).append("\n");
    sb.append("    socialDayOfWeek: ").append(toIndentedString(socialDayOfWeek)).append("\n");
    sb.append("    socialDescription: ").append(toIndentedString(socialDescription)).append("\n");
    sb.append("    socialPostingText: ").append(toIndentedString(socialPostingText)).append("\n");
    sb.append("    socialTitle: ").append(toIndentedString(socialTitle)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    titleColor: ").append(toIndentedString(titleColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("banner_color");
    openapiFields.add("body_html");
    openapiFields.add("email_accent_color");
    openapiFields.add("email_day_of_week");
    openapiFields.add("email_hour");
    openapiFields.add("email_status");
    openapiFields.add("facebook_active_wall");
    openapiFields.add("footer_email_font");
    openapiFields.add("footer_html");
    openapiFields.add("footer_image_url");
    openapiFields.add("group_id");
    openapiFields.add("header_background_color");
    openapiFields.add("header_image_url");
    openapiFields.add("intro_text");
    openapiFields.add("linkedin_active_wall");
    openapiFields.add("montage_enabled");
    openapiFields.add("montage_facebook_image_url");
    openapiFields.add("montage_linkedin_image_url");
    openapiFields.add("montage_title");
    openapiFields.add("montage_twitter_image_url");
    openapiFields.add("newsletter_ids");
    openapiFields.add("newsletter_type");
    openapiFields.add("primary_email_font");
    openapiFields.add("salutation_text");
    openapiFields.add("social_day_of_week");
    openapiFields.add("social_description");
    openapiFields.add("social_posting_text");
    openapiFields.add("social_title");
    openapiFields.add("subject");
    openapiFields.add("title_color");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("_id");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to NewsletterSetting
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!NewsletterSetting.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in NewsletterSetting is not found in the empty JSON string", NewsletterSetting.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!NewsletterSetting.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `NewsletterSetting` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : NewsletterSetting.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if ((jsonObj.get("banner_color") != null && !jsonObj.get("banner_color").isJsonNull()) && !jsonObj.get("banner_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `banner_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("banner_color").toString()));
      }
      if ((jsonObj.get("body_html") != null && !jsonObj.get("body_html").isJsonNull()) && !jsonObj.get("body_html").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `body_html` to be a primitive type in the JSON string but got `%s`", jsonObj.get("body_html").toString()));
      }
      if ((jsonObj.get("email_accent_color") != null && !jsonObj.get("email_accent_color").isJsonNull()) && !jsonObj.get("email_accent_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_accent_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_accent_color").toString()));
      }
      if ((jsonObj.get("email_status") != null && !jsonObj.get("email_status").isJsonNull()) && !jsonObj.get("email_status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email_status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email_status").toString()));
      }
      if ((jsonObj.get("facebook_active_wall") != null && !jsonObj.get("facebook_active_wall").isJsonNull()) && !jsonObj.get("facebook_active_wall").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `facebook_active_wall` to be a primitive type in the JSON string but got `%s`", jsonObj.get("facebook_active_wall").toString()));
      }
      if ((jsonObj.get("footer_email_font") != null && !jsonObj.get("footer_email_font").isJsonNull()) && !jsonObj.get("footer_email_font").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footer_email_font` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footer_email_font").toString()));
      }
      if ((jsonObj.get("footer_html") != null && !jsonObj.get("footer_html").isJsonNull()) && !jsonObj.get("footer_html").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footer_html` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footer_html").toString()));
      }
      if ((jsonObj.get("footer_image_url") != null && !jsonObj.get("footer_image_url").isJsonNull()) && !jsonObj.get("footer_image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `footer_image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("footer_image_url").toString()));
      }
      if ((jsonObj.get("group_id") != null && !jsonObj.get("group_id").isJsonNull()) && !jsonObj.get("group_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `group_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("group_id").toString()));
      }
      if ((jsonObj.get("header_background_color") != null && !jsonObj.get("header_background_color").isJsonNull()) && !jsonObj.get("header_background_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `header_background_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("header_background_color").toString()));
      }
      if ((jsonObj.get("header_image_url") != null && !jsonObj.get("header_image_url").isJsonNull()) && !jsonObj.get("header_image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `header_image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("header_image_url").toString()));
      }
      if ((jsonObj.get("intro_text") != null && !jsonObj.get("intro_text").isJsonNull()) && !jsonObj.get("intro_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intro_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intro_text").toString()));
      }
      if ((jsonObj.get("linkedin_active_wall") != null && !jsonObj.get("linkedin_active_wall").isJsonNull()) && !jsonObj.get("linkedin_active_wall").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkedin_active_wall` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkedin_active_wall").toString()));
      }
      if ((jsonObj.get("montage_facebook_image_url") != null && !jsonObj.get("montage_facebook_image_url").isJsonNull()) && !jsonObj.get("montage_facebook_image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `montage_facebook_image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("montage_facebook_image_url").toString()));
      }
      if ((jsonObj.get("montage_linkedin_image_url") != null && !jsonObj.get("montage_linkedin_image_url").isJsonNull()) && !jsonObj.get("montage_linkedin_image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `montage_linkedin_image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("montage_linkedin_image_url").toString()));
      }
      if ((jsonObj.get("montage_title") != null && !jsonObj.get("montage_title").isJsonNull()) && !jsonObj.get("montage_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `montage_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("montage_title").toString()));
      }
      if ((jsonObj.get("montage_twitter_image_url") != null && !jsonObj.get("montage_twitter_image_url").isJsonNull()) && !jsonObj.get("montage_twitter_image_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `montage_twitter_image_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("montage_twitter_image_url").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("newsletter_ids") != null && !jsonObj.get("newsletter_ids").isJsonNull() && !jsonObj.get("newsletter_ids").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `newsletter_ids` to be an array in the JSON string but got `%s`", jsonObj.get("newsletter_ids").toString()));
      }
      if ((jsonObj.get("newsletter_type") != null && !jsonObj.get("newsletter_type").isJsonNull()) && !jsonObj.get("newsletter_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `newsletter_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("newsletter_type").toString()));
      }
      if ((jsonObj.get("primary_email_font") != null && !jsonObj.get("primary_email_font").isJsonNull()) && !jsonObj.get("primary_email_font").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `primary_email_font` to be a primitive type in the JSON string but got `%s`", jsonObj.get("primary_email_font").toString()));
      }
      if ((jsonObj.get("salutation_text") != null && !jsonObj.get("salutation_text").isJsonNull()) && !jsonObj.get("salutation_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `salutation_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("salutation_text").toString()));
      }
      if ((jsonObj.get("social_description") != null && !jsonObj.get("social_description").isJsonNull()) && !jsonObj.get("social_description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `social_description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("social_description").toString()));
      }
      if ((jsonObj.get("social_posting_text") != null && !jsonObj.get("social_posting_text").isJsonNull()) && !jsonObj.get("social_posting_text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `social_posting_text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("social_posting_text").toString()));
      }
      if ((jsonObj.get("social_title") != null && !jsonObj.get("social_title").isJsonNull()) && !jsonObj.get("social_title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `social_title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("social_title").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      if ((jsonObj.get("title_color") != null && !jsonObj.get("title_color").isJsonNull()) && !jsonObj.get("title_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title_color").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!NewsletterSetting.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'NewsletterSetting' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<NewsletterSetting> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(NewsletterSetting.class));

       return (TypeAdapter<T>) new TypeAdapter<NewsletterSetting>() {
           @Override
           public void write(JsonWriter out, NewsletterSetting value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public NewsletterSetting read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of NewsletterSetting given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of NewsletterSetting
   * @throws IOException if the JSON string is invalid with respect to NewsletterSetting
   */
  public static NewsletterSetting fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, NewsletterSetting.class);
  }

  /**
   * Convert an instance of NewsletterSetting to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

