/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VestorlyApi);
  }
}(this, function(expect, VestorlyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VestorlyApi.Member();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Member', function() {
    it('should create an instance of Member', function() {
      // uncomment below and update the code to test Member
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be.a(VestorlyApi.Member);
    });

    it('should have the property id (base name: "_id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property age (base name: "age")', function() {
      // uncomment below and update the code to test the property age
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property assets (base name: "assets")', function() {
      // uncomment below and update the code to test the property assets
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property dataEstimated (base name: "data_estimated")', function() {
      // uncomment below and update the code to test the property dataEstimated
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property education (base name: "education")', function() {
      // uncomment below and update the code to test the property education
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property estimatedLocation (base name: "estimated_location")', function() {
      // uncomment below and update the code to test the property estimatedLocation
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property estimatedZip (base name: "estimated_zip")', function() {
      // uncomment below and update the code to test the property estimatedZip
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property family (base name: "family")', function() {
      // uncomment below and update the code to test the property family
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property gender (base name: "gender")', function() {
      // uncomment below and update the code to test the property gender
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property genuineEmail (base name: "genuine_email")', function() {
      // uncomment below and update the code to test the property genuineEmail
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property highNetWorth (base name: "high_net_worth")', function() {
      // uncomment below and update the code to test the property highNetWorth
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property homeMarketValue (base name: "home_market_value")', function() {
      // uncomment below and update the code to test the property homeMarketValue
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property homeOwnerStatus (base name: "home_owner_status")', function() {
      // uncomment below and update the code to test the property homeOwnerStatus
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property hometown (base name: "hometown")', function() {
      // uncomment below and update the code to test the property hometown
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property householdIncome (base name: "household_income")', function() {
      // uncomment below and update the code to test the property householdIncome
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property interestConsultation (base name: "interest_consultation")', function() {
      // uncomment below and update the code to test the property interestConsultation
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property interestInNewAdvisor (base name: "interest_in_new_advisor")', function() {
      // uncomment below and update the code to test the property interestInNewAdvisor
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property invitedBy (base name: "invited_by")', function() {
      // uncomment below and update the code to test the property invitedBy
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property invitedOn (base name: "invited_on")', function() {
      // uncomment below and update the code to test the property invitedOn
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property isClient (base name: "is_client")', function() {
      // uncomment below and update the code to test the property isClient
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property isHidden (base name: "is_hidden")', function() {
      // uncomment below and update the code to test the property isHidden
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property lastActiveDate (base name: "last_active_date")', function() {
      // uncomment below and update the code to test the property lastActiveDate
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property location (base name: "location")', function() {
      // uncomment below and update the code to test the property location
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property maritalStatus (base name: "marital_status")', function() {
      // uncomment below and update the code to test the property maritalStatus
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property message (base name: "message")', function() {
      // uncomment below and update the code to test the property message
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property occupation (base name: "occupation")', function() {
      // uncomment below and update the code to test the property occupation
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property pictureUrl (base name: "picture_url")', function() {
      // uncomment below and update the code to test the property pictureUrl
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property portfolioSize (base name: "portfolio_size")', function() {
      // uncomment below and update the code to test the property portfolioSize
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property profileUrl (base name: "profile_url")', function() {
      // uncomment below and update the code to test the property profileUrl
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property registerIpAddr (base name: "register_ip_addr")', function() {
      // uncomment below and update the code to test the property registerIpAddr
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property signedUpWith (base name: "signed_up_with")', function() {
      // uncomment below and update the code to test the property signedUpWith
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property subscribedGroupIds (base name: "subscribed_group_ids")', function() {
      // uncomment below and update the code to test the property subscribedGroupIds
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property unsubscribed (base name: "unsubscribed")', function() {
      // uncomment below and update the code to test the property unsubscribed
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property unsubscribedDate (base name: "unsubscribed_date")', function() {
      // uncomment below and update the code to test the property unsubscribedDate
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property userType (base name: "user_type")', function() {
      // uncomment below and update the code to test the property userType
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

    it('should have the property zip (base name: "zip")', function() {
      // uncomment below and update the code to test the property zip
      //var instance = new VestorlyApi.Member();
      //expect(instance).to.be();
    });

  });

}));
