/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.VestorlyApi);
  }
}(this, function(expect, VestorlyApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new VestorlyApi.Advisor();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Advisor', function() {
    it('should create an instance of Advisor', function() {
      // uncomment below and update the code to test Advisor
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be.a(VestorlyApi.Advisor);
    });

    it('should have the property about (base name: "about")', function() {
      // uncomment below and update the code to test the property about
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property accountType (base name: "account_type")', function() {
      // uncomment below and update the code to test the property accountType
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property advBrochure (base name: "adv_brochure")', function() {
      // uncomment below and update the code to test the property advBrochure
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property apiKey (base name: "api_key")', function() {
      // uncomment below and update the code to test the property apiKey
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property company (base name: "company")', function() {
      // uncomment below and update the code to test the property company
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property complianceBccEmailAddress (base name: "compliance_bcc_email_address")', function() {
      // uncomment below and update the code to test the property complianceBccEmailAddress
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property dashboardUrl (base name: "dashboard_url")', function() {
      // uncomment below and update the code to test the property dashboardUrl
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property disclosure (base name: "disclosure")', function() {
      // uncomment below and update the code to test the property disclosure
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property emailReportBlast (base name: "email_report_blast")', function() {
      // uncomment below and update the code to test the property emailReportBlast
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property externalOptions (base name: "external_options")', function() {
      // uncomment below and update the code to test the property externalOptions
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property linkedin (base name: "linkedin")', function() {
      // uncomment below and update the code to test the property linkedin
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property logo (base name: "logo")', function() {
      // uncomment below and update the code to test the property logo
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property plan (base name: "plan")', function() {
      // uncomment below and update the code to test the property plan
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property profilePicture (base name: "profile_picture")', function() {
      // uncomment below and update the code to test the property profilePicture
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property regNumber (base name: "reg_number")', function() {
      // uncomment below and update the code to test the property regNumber
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property twitterHandle (base name: "twitter_handle")', function() {
      // uncomment below and update the code to test the property twitterHandle
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property website (base name: "website")', function() {
      // uncomment below and update the code to test the property website
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

    it('should have the property zip (base name: "zip")', function() {
      // uncomment below and update the code to test the property zip
      //var instance = new VestorlyApi.Advisor();
      //expect(instance).to.be();
    });

  });

}));
