/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import SeedCustomFeedInput from '../model/SeedCustomFeedInput';
import SeedCustomFeedresponse from '../model/SeedCustomFeedresponse';
import SeedCustomFeeds from '../model/SeedCustomFeeds';

/**
* SeedCustomFeeds service.
* @module api/SeedCustomFeedsApi
* @version 1.0.0
*/
export default class SeedCustomFeedsApi {

    /**
    * Constructs a new SeedCustomFeedsApi. 
    * @alias module:api/SeedCustomFeedsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createSeedCustomFeed operation.
     * @callback module:api/SeedCustomFeedsApi~createSeedCustomFeedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SeedCustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Category Keyword
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {module:model/SeedCustomFeedInput} seedCustomFeed Category to add
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/SeedCustomFeedsApi~createSeedCustomFeedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SeedCustomFeedresponse}
     */
    createSeedCustomFeed(vestorlyAuth, seedCustomFeed, opts, callback) {
      opts = opts || {};
      let postBody = seedCustomFeed;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling createSeedCustomFeed");
      }
      // verify the required parameter 'seedCustomFeed' is set
      if (seedCustomFeed === undefined || seedCustomFeed === null) {
        throw new Error("Missing the required parameter 'seedCustomFeed' when calling createSeedCustomFeed");
      }

      let pathParams = {
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SeedCustomFeedresponse;
      return this.apiClient.callApi(
        '/seed_custom_feeds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteSeedCustomFeed operation.
     * @callback module:api/SeedCustomFeedsApi~deleteSeedCustomFeedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SeedCustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a Category keywords
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {String} id id of seed category to delete
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/SeedCustomFeedsApi~deleteSeedCustomFeedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SeedCustomFeedresponse}
     */
    deleteSeedCustomFeed(vestorlyAuth, id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling deleteSeedCustomFeed");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteSeedCustomFeed");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SeedCustomFeedresponse;
      return this.apiClient.callApi(
        '/seed_custom_feeds/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findSeedCustomFeedByID operation.
     * @callback module:api/SeedCustomFeedsApi~findSeedCustomFeedByIDCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SeedCustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a single Category keyword
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {String} id Seed Custom Feed Id to fetch
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/SeedCustomFeedsApi~findSeedCustomFeedByIDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SeedCustomFeedresponse}
     */
    findSeedCustomFeedByID(vestorlyAuth, id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling findSeedCustomFeedByID");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling findSeedCustomFeedByID");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SeedCustomFeedresponse;
      return this.apiClient.callApi(
        '/seed_custom_feeds/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findSeedCustomFeeds operation.
     * @callback module:api/SeedCustomFeedsApi~findSeedCustomFeedsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SeedCustomFeeds} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all Categories keywords
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/SeedCustomFeedsApi~findSeedCustomFeedsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SeedCustomFeeds}
     */
    findSeedCustomFeeds(vestorlyAuth, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling findSeedCustomFeeds");
      }

      let pathParams = {
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = SeedCustomFeeds;
      return this.apiClient.callApi(
        '/seed_custom_feeds', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSeedCustomFeedById operation.
     * @callback module:api/SeedCustomFeedsApi~updateSeedCustomFeedByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SeedCustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Category keywords
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {String} id id of seed category to update
     * @param {module:model/SeedCustomFeedInput} seedCustomFeed Category keywords to add
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/SeedCustomFeedsApi~updateSeedCustomFeedByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SeedCustomFeedresponse}
     */
    updateSeedCustomFeedById(vestorlyAuth, id, seedCustomFeed, opts, callback) {
      opts = opts || {};
      let postBody = seedCustomFeed;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling updateSeedCustomFeedById");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateSeedCustomFeedById");
      }
      // verify the required parameter 'seedCustomFeed' is set
      if (seedCustomFeed === undefined || seedCustomFeed === null) {
        throw new Error("Missing the required parameter 'seedCustomFeed' when calling updateSeedCustomFeedById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SeedCustomFeedresponse;
      return this.apiClient.callApi(
        '/seed_custom_feeds/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
