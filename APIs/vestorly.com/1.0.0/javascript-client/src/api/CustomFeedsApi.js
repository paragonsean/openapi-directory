/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CustomFeedInput from '../model/CustomFeedInput';
import CustomFeedresponse from '../model/CustomFeedresponse';
import CustomFeeds from '../model/CustomFeeds';

/**
* CustomFeeds service.
* @module api/CustomFeedsApi
* @version 1.0.0
*/
export default class CustomFeedsApi {

    /**
    * Constructs a new CustomFeedsApi. 
    * @alias module:api/CustomFeedsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createCustomFeed operation.
     * @callback module:api/CustomFeedsApi~createCustomFeedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a new Category
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {module:model/CustomFeedInput} customFeed Category to add
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/CustomFeedsApi~createCustomFeedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFeedresponse}
     */
    createCustomFeed(vestorlyAuth, customFeed, opts, callback) {
      opts = opts || {};
      let postBody = customFeed;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling createCustomFeed");
      }
      // verify the required parameter 'customFeed' is set
      if (customFeed === undefined || customFeed === null) {
        throw new Error("Missing the required parameter 'customFeed' when calling createCustomFeed");
      }

      let pathParams = {
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomFeedresponse;
      return this.apiClient.callApi(
        '/custom_feeds', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteCustomFeed operation.
     * @callback module:api/CustomFeedsApi~deleteCustomFeedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a new Category
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {String} id id of category to delete
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/CustomFeedsApi~deleteCustomFeedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFeedresponse}
     */
    deleteCustomFeed(vestorlyAuth, id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling deleteCustomFeed");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteCustomFeed");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomFeedresponse;
      return this.apiClient.callApi(
        '/custom_feeds/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the duplicateCustomFeed operation.
     * @callback module:api/CustomFeedsApi~duplicateCustomFeedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Duplicates Category
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {String} id id of category to duplicate
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/CustomFeedsApi~duplicateCustomFeedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFeedresponse}
     */
    duplicateCustomFeed(vestorlyAuth, id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling duplicateCustomFeed");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling duplicateCustomFeed");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = CustomFeedresponse;
      return this.apiClient.callApi(
        '/custom_feeds/{id}/duplicates', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findCustomFeedByID operation.
     * @callback module:api/CustomFeedsApi~findCustomFeedByIDCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a single Category
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {String} id Custom Feed Id to fetch
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/CustomFeedsApi~findCustomFeedByIDCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFeedresponse}
     */
    findCustomFeedByID(vestorlyAuth, id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling findCustomFeedByID");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling findCustomFeedByID");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = CustomFeedresponse;
      return this.apiClient.callApi(
        '/custom_feeds/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the findCustomFeeds operation.
     * @callback module:api/CustomFeedsApi~findCustomFeedsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFeeds} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all Categories
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/CustomFeedsApi~findCustomFeedsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFeeds}
     */
    findCustomFeeds(vestorlyAuth, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling findCustomFeeds");
      }

      let pathParams = {
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = CustomFeeds;
      return this.apiClient.callApi(
        '/custom_feeds', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateCategoryById operation.
     * @callback module:api/CustomFeedsApi~updateCategoryByIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CustomFeedresponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Category
     * @param {String} vestorlyAuth Vestorly Auth Token
     * @param {String} id id of category to update
     * @param {module:model/CustomFeedInput} customFeed Category to add
     * @param {Object} opts Optional parameters
     * @param {String} [accessToken] OAuth Token
     * @param {module:api/CustomFeedsApi~updateCategoryByIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CustomFeedresponse}
     */
    updateCategoryById(vestorlyAuth, id, customFeed, opts, callback) {
      opts = opts || {};
      let postBody = customFeed;
      // verify the required parameter 'vestorlyAuth' is set
      if (vestorlyAuth === undefined || vestorlyAuth === null) {
        throw new Error("Missing the required parameter 'vestorlyAuth' when calling updateCategoryById");
      }
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateCategoryById");
      }
      // verify the required parameter 'customFeed' is set
      if (customFeed === undefined || customFeed === null) {
        throw new Error("Missing the required parameter 'customFeed' when calling updateCategoryById");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'vestorly_auth': vestorlyAuth,
        'access_token': opts['accessToken']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['access_token'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CustomFeedresponse;
      return this.apiClient.callApi(
        '/custom_feeds/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
