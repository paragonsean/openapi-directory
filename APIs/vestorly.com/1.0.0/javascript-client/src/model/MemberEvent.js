/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MemberEvent model module.
 * @module model/MemberEvent
 * @version 1.0.0
 */
class MemberEvent {
    /**
     * Constructs a new <code>MemberEvent</code>.
     * @alias module:model/MemberEvent
     */
    constructor() { 
        
        MemberEvent.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberEvent</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberEvent} obj Optional instance to populate.
     * @return {module:model/MemberEvent} The populated <code>MemberEvent</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberEvent();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('content_url')) {
                obj['content_url'] = ApiClient.convertToType(data['content_url'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('event_date')) {
                obj['event_date'] = ApiClient.convertToType(data['event_date'], 'String');
            }
            if (data.hasOwnProperty('event_source')) {
                obj['event_source'] = ApiClient.convertToType(data['event_source'], 'String');
            }
            if (data.hasOwnProperty('event_type')) {
                obj['event_type'] = ApiClient.convertToType(data['event_type'], 'String');
            }
            if (data.hasOwnProperty('member_id')) {
                obj['member_id'] = ApiClient.convertToType(data['member_id'], 'String');
            }
            if (data.hasOwnProperty('original_url')) {
                obj['original_url'] = ApiClient.convertToType(data['original_url'], 'String');
            }
            if (data.hasOwnProperty('originator_email')) {
                obj['originator_email'] = ApiClient.convertToType(data['originator_email'], 'String');
            }
            if (data.hasOwnProperty('originator_group_id')) {
                obj['originator_group_id'] = ApiClient.convertToType(data['originator_group_id'], 'String');
            }
            if (data.hasOwnProperty('originator_id')) {
                obj['originator_id'] = ApiClient.convertToType(data['originator_id'], 'String');
            }
            if (data.hasOwnProperty('originator_name')) {
                obj['originator_name'] = ApiClient.convertToType(data['originator_name'], 'String');
            }
            if (data.hasOwnProperty('originator_type')) {
                obj['originator_type'] = ApiClient.convertToType(data['originator_type'], 'String');
            }
            if (data.hasOwnProperty('parent_event_id')) {
                obj['parent_event_id'] = ApiClient.convertToType(data['parent_event_id'], 'String');
            }
            if (data.hasOwnProperty('parent_originator_id')) {
                obj['parent_originator_id'] = ApiClient.convertToType(data['parent_originator_id'], 'String');
            }
            if (data.hasOwnProperty('referer')) {
                obj['referer'] = ApiClient.convertToType(data['referer'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('subject_id')) {
                obj['subject_id'] = ApiClient.convertToType(data['subject_id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberEvent</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberEvent</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['content_url'] && !(typeof data['content_url'] === 'string' || data['content_url'] instanceof String)) {
            throw new Error("Expected the field `content_url` to be a primitive type in the JSON string but got " + data['content_url']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['event_date'] && !(typeof data['event_date'] === 'string' || data['event_date'] instanceof String)) {
            throw new Error("Expected the field `event_date` to be a primitive type in the JSON string but got " + data['event_date']);
        }
        // ensure the json data is a string
        if (data['event_source'] && !(typeof data['event_source'] === 'string' || data['event_source'] instanceof String)) {
            throw new Error("Expected the field `event_source` to be a primitive type in the JSON string but got " + data['event_source']);
        }
        // ensure the json data is a string
        if (data['event_type'] && !(typeof data['event_type'] === 'string' || data['event_type'] instanceof String)) {
            throw new Error("Expected the field `event_type` to be a primitive type in the JSON string but got " + data['event_type']);
        }
        // ensure the json data is a string
        if (data['member_id'] && !(typeof data['member_id'] === 'string' || data['member_id'] instanceof String)) {
            throw new Error("Expected the field `member_id` to be a primitive type in the JSON string but got " + data['member_id']);
        }
        // ensure the json data is a string
        if (data['original_url'] && !(typeof data['original_url'] === 'string' || data['original_url'] instanceof String)) {
            throw new Error("Expected the field `original_url` to be a primitive type in the JSON string but got " + data['original_url']);
        }
        // ensure the json data is a string
        if (data['originator_email'] && !(typeof data['originator_email'] === 'string' || data['originator_email'] instanceof String)) {
            throw new Error("Expected the field `originator_email` to be a primitive type in the JSON string but got " + data['originator_email']);
        }
        // ensure the json data is a string
        if (data['originator_group_id'] && !(typeof data['originator_group_id'] === 'string' || data['originator_group_id'] instanceof String)) {
            throw new Error("Expected the field `originator_group_id` to be a primitive type in the JSON string but got " + data['originator_group_id']);
        }
        // ensure the json data is a string
        if (data['originator_id'] && !(typeof data['originator_id'] === 'string' || data['originator_id'] instanceof String)) {
            throw new Error("Expected the field `originator_id` to be a primitive type in the JSON string but got " + data['originator_id']);
        }
        // ensure the json data is a string
        if (data['originator_name'] && !(typeof data['originator_name'] === 'string' || data['originator_name'] instanceof String)) {
            throw new Error("Expected the field `originator_name` to be a primitive type in the JSON string but got " + data['originator_name']);
        }
        // ensure the json data is a string
        if (data['originator_type'] && !(typeof data['originator_type'] === 'string' || data['originator_type'] instanceof String)) {
            throw new Error("Expected the field `originator_type` to be a primitive type in the JSON string but got " + data['originator_type']);
        }
        // ensure the json data is a string
        if (data['parent_event_id'] && !(typeof data['parent_event_id'] === 'string' || data['parent_event_id'] instanceof String)) {
            throw new Error("Expected the field `parent_event_id` to be a primitive type in the JSON string but got " + data['parent_event_id']);
        }
        // ensure the json data is a string
        if (data['parent_originator_id'] && !(typeof data['parent_originator_id'] === 'string' || data['parent_originator_id'] instanceof String)) {
            throw new Error("Expected the field `parent_originator_id` to be a primitive type in the JSON string but got " + data['parent_originator_id']);
        }
        // ensure the json data is a string
        if (data['referer'] && !(typeof data['referer'] === 'string' || data['referer'] instanceof String)) {
            throw new Error("Expected the field `referer` to be a primitive type in the JSON string but got " + data['referer']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['subject_id'] && !(typeof data['subject_id'] === 'string' || data['subject_id'] instanceof String)) {
            throw new Error("Expected the field `subject_id` to be a primitive type in the JSON string but got " + data['subject_id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * @member {String} _id
 */
MemberEvent.prototype['_id'] = undefined;

/**
 * @member {String} content_url
 */
MemberEvent.prototype['content_url'] = undefined;

/**
 * @member {String} created_at
 */
MemberEvent.prototype['created_at'] = undefined;

/**
 * @member {String} event_date
 */
MemberEvent.prototype['event_date'] = undefined;

/**
 * @member {String} event_source
 */
MemberEvent.prototype['event_source'] = undefined;

/**
 * @member {String} event_type
 */
MemberEvent.prototype['event_type'] = undefined;

/**
 * @member {String} member_id
 */
MemberEvent.prototype['member_id'] = undefined;

/**
 * @member {String} original_url
 */
MemberEvent.prototype['original_url'] = undefined;

/**
 * @member {String} originator_email
 */
MemberEvent.prototype['originator_email'] = undefined;

/**
 * @member {String} originator_group_id
 */
MemberEvent.prototype['originator_group_id'] = undefined;

/**
 * @member {String} originator_id
 */
MemberEvent.prototype['originator_id'] = undefined;

/**
 * @member {String} originator_name
 */
MemberEvent.prototype['originator_name'] = undefined;

/**
 * @member {String} originator_type
 */
MemberEvent.prototype['originator_type'] = undefined;

/**
 * @member {String} parent_event_id
 */
MemberEvent.prototype['parent_event_id'] = undefined;

/**
 * @member {String} parent_originator_id
 */
MemberEvent.prototype['parent_originator_id'] = undefined;

/**
 * @member {String} referer
 */
MemberEvent.prototype['referer'] = undefined;

/**
 * @member {String} source
 */
MemberEvent.prototype['source'] = undefined;

/**
 * @member {String} subject_id
 */
MemberEvent.prototype['subject_id'] = undefined;

/**
 * @member {String} type
 */
MemberEvent.prototype['type'] = undefined;

/**
 * @member {String} username
 */
MemberEvent.prototype['username'] = undefined;






export default MemberEvent;

