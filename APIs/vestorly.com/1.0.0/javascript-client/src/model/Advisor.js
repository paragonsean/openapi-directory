/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Advisor model module.
 * @module model/Advisor
 * @version 1.0.0
 */
class Advisor {
    /**
     * Constructs a new <code>Advisor</code>.
     * @alias module:model/Advisor
     * @param id {String} 
     * @param name {String} 
     */
    constructor(id, name) { 
        
        Advisor.initialize(this, id, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, name) { 
        obj['id'] = id;
        obj['name'] = name;
    }

    /**
     * Constructs a <code>Advisor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Advisor} obj Optional instance to populate.
     * @return {module:model/Advisor} The populated <code>Advisor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Advisor();

            if (data.hasOwnProperty('about')) {
                obj['about'] = ApiClient.convertToType(data['about'], 'String');
            }
            if (data.hasOwnProperty('account_type')) {
                obj['account_type'] = ApiClient.convertToType(data['account_type'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('adv_brochure')) {
                obj['adv_brochure'] = ApiClient.convertToType(data['adv_brochure'], 'String');
            }
            if (data.hasOwnProperty('api_key')) {
                obj['api_key'] = ApiClient.convertToType(data['api_key'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('company')) {
                obj['company'] = ApiClient.convertToType(data['company'], 'String');
            }
            if (data.hasOwnProperty('compliance_bcc_email_address')) {
                obj['compliance_bcc_email_address'] = ApiClient.convertToType(data['compliance_bcc_email_address'], 'String');
            }
            if (data.hasOwnProperty('dashboard_url')) {
                obj['dashboard_url'] = ApiClient.convertToType(data['dashboard_url'], 'String');
            }
            if (data.hasOwnProperty('disclosure')) {
                obj['disclosure'] = ApiClient.convertToType(data['disclosure'], 'String');
            }
            if (data.hasOwnProperty('email_report_blast')) {
                obj['email_report_blast'] = ApiClient.convertToType(data['email_report_blast'], 'String');
            }
            if (data.hasOwnProperty('external_options')) {
                obj['external_options'] = ApiClient.convertToType(data['external_options'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('linkedin')) {
                obj['linkedin'] = ApiClient.convertToType(data['linkedin'], 'String');
            }
            if (data.hasOwnProperty('logo')) {
                obj['logo'] = ApiClient.convertToType(data['logo'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = ApiClient.convertToType(data['plan'], 'String');
            }
            if (data.hasOwnProperty('profile_picture')) {
                obj['profile_picture'] = ApiClient.convertToType(data['profile_picture'], 'String');
            }
            if (data.hasOwnProperty('reg_number')) {
                obj['reg_number'] = ApiClient.convertToType(data['reg_number'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
            if (data.hasOwnProperty('twitter_handle')) {
                obj['twitter_handle'] = ApiClient.convertToType(data['twitter_handle'], 'String');
            }
            if (data.hasOwnProperty('website')) {
                obj['website'] = ApiClient.convertToType(data['website'], 'String');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Advisor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Advisor</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Advisor.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['about'] && !(typeof data['about'] === 'string' || data['about'] instanceof String)) {
            throw new Error("Expected the field `about` to be a primitive type in the JSON string but got " + data['about']);
        }
        // ensure the json data is a string
        if (data['account_type'] && !(typeof data['account_type'] === 'string' || data['account_type'] instanceof String)) {
            throw new Error("Expected the field `account_type` to be a primitive type in the JSON string but got " + data['account_type']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['adv_brochure'] && !(typeof data['adv_brochure'] === 'string' || data['adv_brochure'] instanceof String)) {
            throw new Error("Expected the field `adv_brochure` to be a primitive type in the JSON string but got " + data['adv_brochure']);
        }
        // ensure the json data is a string
        if (data['api_key'] && !(typeof data['api_key'] === 'string' || data['api_key'] instanceof String)) {
            throw new Error("Expected the field `api_key` to be a primitive type in the JSON string but got " + data['api_key']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['company'] && !(typeof data['company'] === 'string' || data['company'] instanceof String)) {
            throw new Error("Expected the field `company` to be a primitive type in the JSON string but got " + data['company']);
        }
        // ensure the json data is a string
        if (data['compliance_bcc_email_address'] && !(typeof data['compliance_bcc_email_address'] === 'string' || data['compliance_bcc_email_address'] instanceof String)) {
            throw new Error("Expected the field `compliance_bcc_email_address` to be a primitive type in the JSON string but got " + data['compliance_bcc_email_address']);
        }
        // ensure the json data is a string
        if (data['dashboard_url'] && !(typeof data['dashboard_url'] === 'string' || data['dashboard_url'] instanceof String)) {
            throw new Error("Expected the field `dashboard_url` to be a primitive type in the JSON string but got " + data['dashboard_url']);
        }
        // ensure the json data is a string
        if (data['disclosure'] && !(typeof data['disclosure'] === 'string' || data['disclosure'] instanceof String)) {
            throw new Error("Expected the field `disclosure` to be a primitive type in the JSON string but got " + data['disclosure']);
        }
        // ensure the json data is a string
        if (data['email_report_blast'] && !(typeof data['email_report_blast'] === 'string' || data['email_report_blast'] instanceof String)) {
            throw new Error("Expected the field `email_report_blast` to be a primitive type in the JSON string but got " + data['email_report_blast']);
        }
        // ensure the json data is a string
        if (data['external_options'] && !(typeof data['external_options'] === 'string' || data['external_options'] instanceof String)) {
            throw new Error("Expected the field `external_options` to be a primitive type in the JSON string but got " + data['external_options']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['linkedin'] && !(typeof data['linkedin'] === 'string' || data['linkedin'] instanceof String)) {
            throw new Error("Expected the field `linkedin` to be a primitive type in the JSON string but got " + data['linkedin']);
        }
        // ensure the json data is a string
        if (data['logo'] && !(typeof data['logo'] === 'string' || data['logo'] instanceof String)) {
            throw new Error("Expected the field `logo` to be a primitive type in the JSON string but got " + data['logo']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['plan'] && !(typeof data['plan'] === 'string' || data['plan'] instanceof String)) {
            throw new Error("Expected the field `plan` to be a primitive type in the JSON string but got " + data['plan']);
        }
        // ensure the json data is a string
        if (data['profile_picture'] && !(typeof data['profile_picture'] === 'string' || data['profile_picture'] instanceof String)) {
            throw new Error("Expected the field `profile_picture` to be a primitive type in the JSON string but got " + data['profile_picture']);
        }
        // ensure the json data is a string
        if (data['reg_number'] && !(typeof data['reg_number'] === 'string' || data['reg_number'] instanceof String)) {
            throw new Error("Expected the field `reg_number` to be a primitive type in the JSON string but got " + data['reg_number']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }
        // ensure the json data is a string
        if (data['twitter_handle'] && !(typeof data['twitter_handle'] === 'string' || data['twitter_handle'] instanceof String)) {
            throw new Error("Expected the field `twitter_handle` to be a primitive type in the JSON string but got " + data['twitter_handle']);
        }
        // ensure the json data is a string
        if (data['website'] && !(typeof data['website'] === 'string' || data['website'] instanceof String)) {
            throw new Error("Expected the field `website` to be a primitive type in the JSON string but got " + data['website']);
        }
        // ensure the json data is a string
        if (data['zip'] && !(typeof data['zip'] === 'string' || data['zip'] instanceof String)) {
            throw new Error("Expected the field `zip` to be a primitive type in the JSON string but got " + data['zip']);
        }

        return true;
    }


}

Advisor.RequiredProperties = ["id", "name"];

/**
 * @member {String} about
 */
Advisor.prototype['about'] = undefined;

/**
 * @member {String} account_type
 */
Advisor.prototype['account_type'] = undefined;

/**
 * @member {String} address
 */
Advisor.prototype['address'] = undefined;

/**
 * @member {String} adv_brochure
 */
Advisor.prototype['adv_brochure'] = undefined;

/**
 * @member {String} api_key
 */
Advisor.prototype['api_key'] = undefined;

/**
 * @member {String} city
 */
Advisor.prototype['city'] = undefined;

/**
 * @member {String} company
 */
Advisor.prototype['company'] = undefined;

/**
 * @member {String} compliance_bcc_email_address
 */
Advisor.prototype['compliance_bcc_email_address'] = undefined;

/**
 * @member {String} dashboard_url
 */
Advisor.prototype['dashboard_url'] = undefined;

/**
 * @member {String} disclosure
 */
Advisor.prototype['disclosure'] = undefined;

/**
 * @member {String} email_report_blast
 */
Advisor.prototype['email_report_blast'] = undefined;

/**
 * @member {String} external_options
 */
Advisor.prototype['external_options'] = undefined;

/**
 * @member {String} first_name
 */
Advisor.prototype['first_name'] = undefined;

/**
 * @member {String} id
 */
Advisor.prototype['id'] = undefined;

/**
 * @member {String} last_name
 */
Advisor.prototype['last_name'] = undefined;

/**
 * @member {String} linkedin
 */
Advisor.prototype['linkedin'] = undefined;

/**
 * @member {String} logo
 */
Advisor.prototype['logo'] = undefined;

/**
 * @member {String} name
 */
Advisor.prototype['name'] = undefined;

/**
 * @member {String} plan
 */
Advisor.prototype['plan'] = undefined;

/**
 * @member {String} profile_picture
 */
Advisor.prototype['profile_picture'] = undefined;

/**
 * @member {String} reg_number
 */
Advisor.prototype['reg_number'] = undefined;

/**
 * @member {String} state
 */
Advisor.prototype['state'] = undefined;

/**
 * @member {String} tag
 */
Advisor.prototype['tag'] = undefined;

/**
 * @member {String} twitter_handle
 */
Advisor.prototype['twitter_handle'] = undefined;

/**
 * @member {String} website
 */
Advisor.prototype['website'] = undefined;

/**
 * @member {String} zip
 */
Advisor.prototype['zip'] = undefined;






export default Advisor;

