/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Member model module.
 * @module model/Member
 * @version 1.0.0
 */
class Member {
    /**
     * Constructs a new <code>Member</code>.
     * @alias module:model/Member
     * @param id {String} 
     * @param email {String} 
     */
    constructor(id, email) { 
        
        Member.initialize(this, id, email);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, email) { 
        obj['_id'] = id;
        obj['email'] = email;
    }

    /**
     * Constructs a <code>Member</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Member} obj Optional instance to populate.
     * @return {module:model/Member} The populated <code>Member</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Member();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('address')) {
                obj['address'] = ApiClient.convertToType(data['address'], 'String');
            }
            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'String');
            }
            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], 'String');
            }
            if (data.hasOwnProperty('city')) {
                obj['city'] = ApiClient.convertToType(data['city'], 'String');
            }
            if (data.hasOwnProperty('data_estimated')) {
                obj['data_estimated'] = ApiClient.convertToType(data['data_estimated'], 'Boolean');
            }
            if (data.hasOwnProperty('education')) {
                obj['education'] = ApiClient.convertToType(data['education'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('estimated_location')) {
                obj['estimated_location'] = ApiClient.convertToType(data['estimated_location'], 'String');
            }
            if (data.hasOwnProperty('estimated_zip')) {
                obj['estimated_zip'] = ApiClient.convertToType(data['estimated_zip'], 'String');
            }
            if (data.hasOwnProperty('family')) {
                obj['family'] = ApiClient.convertToType(data['family'], 'String');
            }
            if (data.hasOwnProperty('first_name')) {
                obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
            }
            if (data.hasOwnProperty('gender')) {
                obj['gender'] = ApiClient.convertToType(data['gender'], 'String');
            }
            if (data.hasOwnProperty('genuine_email')) {
                obj['genuine_email'] = ApiClient.convertToType(data['genuine_email'], 'Boolean');
            }
            if (data.hasOwnProperty('high_net_worth')) {
                obj['high_net_worth'] = ApiClient.convertToType(data['high_net_worth'], 'Boolean');
            }
            if (data.hasOwnProperty('home_market_value')) {
                obj['home_market_value'] = ApiClient.convertToType(data['home_market_value'], 'String');
            }
            if (data.hasOwnProperty('home_owner_status')) {
                obj['home_owner_status'] = ApiClient.convertToType(data['home_owner_status'], 'String');
            }
            if (data.hasOwnProperty('hometown')) {
                obj['hometown'] = ApiClient.convertToType(data['hometown'], 'String');
            }
            if (data.hasOwnProperty('household_income')) {
                obj['household_income'] = ApiClient.convertToType(data['household_income'], 'String');
            }
            if (data.hasOwnProperty('interest_consultation')) {
                obj['interest_consultation'] = ApiClient.convertToType(data['interest_consultation'], 'String');
            }
            if (data.hasOwnProperty('interest_in_new_advisor')) {
                obj['interest_in_new_advisor'] = ApiClient.convertToType(data['interest_in_new_advisor'], 'String');
            }
            if (data.hasOwnProperty('invited_by')) {
                obj['invited_by'] = ApiClient.convertToType(data['invited_by'], 'String');
            }
            if (data.hasOwnProperty('invited_on')) {
                obj['invited_on'] = ApiClient.convertToType(data['invited_on'], 'String');
            }
            if (data.hasOwnProperty('is_client')) {
                obj['is_client'] = ApiClient.convertToType(data['is_client'], 'Boolean');
            }
            if (data.hasOwnProperty('is_hidden')) {
                obj['is_hidden'] = ApiClient.convertToType(data['is_hidden'], 'Boolean');
            }
            if (data.hasOwnProperty('last_active_date')) {
                obj['last_active_date'] = ApiClient.convertToType(data['last_active_date'], 'String');
            }
            if (data.hasOwnProperty('last_name')) {
                obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('marital_status')) {
                obj['marital_status'] = ApiClient.convertToType(data['marital_status'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('occupation')) {
                obj['occupation'] = ApiClient.convertToType(data['occupation'], 'String');
            }
            if (data.hasOwnProperty('phone')) {
                obj['phone'] = ApiClient.convertToType(data['phone'], 'String');
            }
            if (data.hasOwnProperty('picture_url')) {
                obj['picture_url'] = ApiClient.convertToType(data['picture_url'], 'String');
            }
            if (data.hasOwnProperty('portfolio_size')) {
                obj['portfolio_size'] = ApiClient.convertToType(data['portfolio_size'], 'String');
            }
            if (data.hasOwnProperty('profile_url')) {
                obj['profile_url'] = ApiClient.convertToType(data['profile_url'], 'String');
            }
            if (data.hasOwnProperty('register_ip_addr')) {
                obj['register_ip_addr'] = ApiClient.convertToType(data['register_ip_addr'], 'String');
            }
            if (data.hasOwnProperty('signed_up_with')) {
                obj['signed_up_with'] = ApiClient.convertToType(data['signed_up_with'], 'String');
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('subscribed_group_ids')) {
                obj['subscribed_group_ids'] = ApiClient.convertToType(data['subscribed_group_ids'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('unsubscribed')) {
                obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Boolean');
            }
            if (data.hasOwnProperty('unsubscribed_date')) {
                obj['unsubscribed_date'] = ApiClient.convertToType(data['unsubscribed_date'], 'Boolean');
            }
            if (data.hasOwnProperty('user_type')) {
                obj['user_type'] = ApiClient.convertToType(data['user_type'], 'String');
            }
            if (data.hasOwnProperty('zip')) {
                obj['zip'] = ApiClient.convertToType(data['zip'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Member</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Member</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Member.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['address'] && !(typeof data['address'] === 'string' || data['address'] instanceof String)) {
            throw new Error("Expected the field `address` to be a primitive type in the JSON string but got " + data['address']);
        }
        // ensure the json data is a string
        if (data['age'] && !(typeof data['age'] === 'string' || data['age'] instanceof String)) {
            throw new Error("Expected the field `age` to be a primitive type in the JSON string but got " + data['age']);
        }
        // ensure the json data is a string
        if (data['assets'] && !(typeof data['assets'] === 'string' || data['assets'] instanceof String)) {
            throw new Error("Expected the field `assets` to be a primitive type in the JSON string but got " + data['assets']);
        }
        // ensure the json data is a string
        if (data['city'] && !(typeof data['city'] === 'string' || data['city'] instanceof String)) {
            throw new Error("Expected the field `city` to be a primitive type in the JSON string but got " + data['city']);
        }
        // ensure the json data is a string
        if (data['education'] && !(typeof data['education'] === 'string' || data['education'] instanceof String)) {
            throw new Error("Expected the field `education` to be a primitive type in the JSON string but got " + data['education']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['estimated_location'] && !(typeof data['estimated_location'] === 'string' || data['estimated_location'] instanceof String)) {
            throw new Error("Expected the field `estimated_location` to be a primitive type in the JSON string but got " + data['estimated_location']);
        }
        // ensure the json data is a string
        if (data['estimated_zip'] && !(typeof data['estimated_zip'] === 'string' || data['estimated_zip'] instanceof String)) {
            throw new Error("Expected the field `estimated_zip` to be a primitive type in the JSON string but got " + data['estimated_zip']);
        }
        // ensure the json data is a string
        if (data['family'] && !(typeof data['family'] === 'string' || data['family'] instanceof String)) {
            throw new Error("Expected the field `family` to be a primitive type in the JSON string but got " + data['family']);
        }
        // ensure the json data is a string
        if (data['first_name'] && !(typeof data['first_name'] === 'string' || data['first_name'] instanceof String)) {
            throw new Error("Expected the field `first_name` to be a primitive type in the JSON string but got " + data['first_name']);
        }
        // ensure the json data is a string
        if (data['gender'] && !(typeof data['gender'] === 'string' || data['gender'] instanceof String)) {
            throw new Error("Expected the field `gender` to be a primitive type in the JSON string but got " + data['gender']);
        }
        // ensure the json data is a string
        if (data['home_market_value'] && !(typeof data['home_market_value'] === 'string' || data['home_market_value'] instanceof String)) {
            throw new Error("Expected the field `home_market_value` to be a primitive type in the JSON string but got " + data['home_market_value']);
        }
        // ensure the json data is a string
        if (data['home_owner_status'] && !(typeof data['home_owner_status'] === 'string' || data['home_owner_status'] instanceof String)) {
            throw new Error("Expected the field `home_owner_status` to be a primitive type in the JSON string but got " + data['home_owner_status']);
        }
        // ensure the json data is a string
        if (data['hometown'] && !(typeof data['hometown'] === 'string' || data['hometown'] instanceof String)) {
            throw new Error("Expected the field `hometown` to be a primitive type in the JSON string but got " + data['hometown']);
        }
        // ensure the json data is a string
        if (data['household_income'] && !(typeof data['household_income'] === 'string' || data['household_income'] instanceof String)) {
            throw new Error("Expected the field `household_income` to be a primitive type in the JSON string but got " + data['household_income']);
        }
        // ensure the json data is a string
        if (data['interest_consultation'] && !(typeof data['interest_consultation'] === 'string' || data['interest_consultation'] instanceof String)) {
            throw new Error("Expected the field `interest_consultation` to be a primitive type in the JSON string but got " + data['interest_consultation']);
        }
        // ensure the json data is a string
        if (data['interest_in_new_advisor'] && !(typeof data['interest_in_new_advisor'] === 'string' || data['interest_in_new_advisor'] instanceof String)) {
            throw new Error("Expected the field `interest_in_new_advisor` to be a primitive type in the JSON string but got " + data['interest_in_new_advisor']);
        }
        // ensure the json data is a string
        if (data['invited_by'] && !(typeof data['invited_by'] === 'string' || data['invited_by'] instanceof String)) {
            throw new Error("Expected the field `invited_by` to be a primitive type in the JSON string but got " + data['invited_by']);
        }
        // ensure the json data is a string
        if (data['invited_on'] && !(typeof data['invited_on'] === 'string' || data['invited_on'] instanceof String)) {
            throw new Error("Expected the field `invited_on` to be a primitive type in the JSON string but got " + data['invited_on']);
        }
        // ensure the json data is a string
        if (data['last_active_date'] && !(typeof data['last_active_date'] === 'string' || data['last_active_date'] instanceof String)) {
            throw new Error("Expected the field `last_active_date` to be a primitive type in the JSON string but got " + data['last_active_date']);
        }
        // ensure the json data is a string
        if (data['last_name'] && !(typeof data['last_name'] === 'string' || data['last_name'] instanceof String)) {
            throw new Error("Expected the field `last_name` to be a primitive type in the JSON string but got " + data['last_name']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['marital_status'] && !(typeof data['marital_status'] === 'string' || data['marital_status'] instanceof String)) {
            throw new Error("Expected the field `marital_status` to be a primitive type in the JSON string but got " + data['marital_status']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['occupation'] && !(typeof data['occupation'] === 'string' || data['occupation'] instanceof String)) {
            throw new Error("Expected the field `occupation` to be a primitive type in the JSON string but got " + data['occupation']);
        }
        // ensure the json data is a string
        if (data['phone'] && !(typeof data['phone'] === 'string' || data['phone'] instanceof String)) {
            throw new Error("Expected the field `phone` to be a primitive type in the JSON string but got " + data['phone']);
        }
        // ensure the json data is a string
        if (data['picture_url'] && !(typeof data['picture_url'] === 'string' || data['picture_url'] instanceof String)) {
            throw new Error("Expected the field `picture_url` to be a primitive type in the JSON string but got " + data['picture_url']);
        }
        // ensure the json data is a string
        if (data['portfolio_size'] && !(typeof data['portfolio_size'] === 'string' || data['portfolio_size'] instanceof String)) {
            throw new Error("Expected the field `portfolio_size` to be a primitive type in the JSON string but got " + data['portfolio_size']);
        }
        // ensure the json data is a string
        if (data['profile_url'] && !(typeof data['profile_url'] === 'string' || data['profile_url'] instanceof String)) {
            throw new Error("Expected the field `profile_url` to be a primitive type in the JSON string but got " + data['profile_url']);
        }
        // ensure the json data is a string
        if (data['register_ip_addr'] && !(typeof data['register_ip_addr'] === 'string' || data['register_ip_addr'] instanceof String)) {
            throw new Error("Expected the field `register_ip_addr` to be a primitive type in the JSON string but got " + data['register_ip_addr']);
        }
        // ensure the json data is a string
        if (data['signed_up_with'] && !(typeof data['signed_up_with'] === 'string' || data['signed_up_with'] instanceof String)) {
            throw new Error("Expected the field `signed_up_with` to be a primitive type in the JSON string but got " + data['signed_up_with']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subscribed_group_ids'])) {
            throw new Error("Expected the field `subscribed_group_ids` to be an array in the JSON data but got " + data['subscribed_group_ids']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['user_type'] && !(typeof data['user_type'] === 'string' || data['user_type'] instanceof String)) {
            throw new Error("Expected the field `user_type` to be a primitive type in the JSON string but got " + data['user_type']);
        }
        // ensure the json data is a string
        if (data['zip'] && !(typeof data['zip'] === 'string' || data['zip'] instanceof String)) {
            throw new Error("Expected the field `zip` to be a primitive type in the JSON string but got " + data['zip']);
        }

        return true;
    }


}

Member.RequiredProperties = ["_id", "email"];

/**
 * @member {String} _id
 */
Member.prototype['_id'] = undefined;

/**
 * @member {String} address
 */
Member.prototype['address'] = undefined;

/**
 * @member {String} age
 */
Member.prototype['age'] = undefined;

/**
 * @member {String} assets
 */
Member.prototype['assets'] = undefined;

/**
 * @member {String} city
 */
Member.prototype['city'] = undefined;

/**
 * @member {Boolean} data_estimated
 */
Member.prototype['data_estimated'] = undefined;

/**
 * @member {String} education
 */
Member.prototype['education'] = undefined;

/**
 * @member {String} email
 */
Member.prototype['email'] = undefined;

/**
 * @member {String} estimated_location
 */
Member.prototype['estimated_location'] = undefined;

/**
 * @member {String} estimated_zip
 */
Member.prototype['estimated_zip'] = undefined;

/**
 * @member {String} family
 */
Member.prototype['family'] = undefined;

/**
 * @member {String} first_name
 */
Member.prototype['first_name'] = undefined;

/**
 * @member {String} gender
 */
Member.prototype['gender'] = undefined;

/**
 * @member {Boolean} genuine_email
 */
Member.prototype['genuine_email'] = undefined;

/**
 * @member {Boolean} high_net_worth
 */
Member.prototype['high_net_worth'] = undefined;

/**
 * @member {String} home_market_value
 */
Member.prototype['home_market_value'] = undefined;

/**
 * @member {String} home_owner_status
 */
Member.prototype['home_owner_status'] = undefined;

/**
 * @member {String} hometown
 */
Member.prototype['hometown'] = undefined;

/**
 * @member {String} household_income
 */
Member.prototype['household_income'] = undefined;

/**
 * @member {String} interest_consultation
 */
Member.prototype['interest_consultation'] = undefined;

/**
 * @member {String} interest_in_new_advisor
 */
Member.prototype['interest_in_new_advisor'] = undefined;

/**
 * @member {String} invited_by
 */
Member.prototype['invited_by'] = undefined;

/**
 * @member {String} invited_on
 */
Member.prototype['invited_on'] = undefined;

/**
 * @member {Boolean} is_client
 */
Member.prototype['is_client'] = undefined;

/**
 * @member {Boolean} is_hidden
 */
Member.prototype['is_hidden'] = undefined;

/**
 * @member {String} last_active_date
 */
Member.prototype['last_active_date'] = undefined;

/**
 * @member {String} last_name
 */
Member.prototype['last_name'] = undefined;

/**
 * @member {String} location
 */
Member.prototype['location'] = undefined;

/**
 * @member {String} marital_status
 */
Member.prototype['marital_status'] = undefined;

/**
 * @member {String} message
 */
Member.prototype['message'] = undefined;

/**
 * @member {String} occupation
 */
Member.prototype['occupation'] = undefined;

/**
 * @member {String} phone
 */
Member.prototype['phone'] = undefined;

/**
 * @member {String} picture_url
 */
Member.prototype['picture_url'] = undefined;

/**
 * @member {String} portfolio_size
 */
Member.prototype['portfolio_size'] = undefined;

/**
 * @member {String} profile_url
 */
Member.prototype['profile_url'] = undefined;

/**
 * @member {String} register_ip_addr
 */
Member.prototype['register_ip_addr'] = undefined;

/**
 * @member {String} signed_up_with
 */
Member.prototype['signed_up_with'] = undefined;

/**
 * @member {String} state
 */
Member.prototype['state'] = undefined;

/**
 * @member {Array.<String>} subscribed_group_ids
 */
Member.prototype['subscribed_group_ids'] = undefined;

/**
 * @member {Array.<String>} tags
 */
Member.prototype['tags'] = undefined;

/**
 * @member {Boolean} unsubscribed
 */
Member.prototype['unsubscribed'] = undefined;

/**
 * @member {Boolean} unsubscribed_date
 */
Member.prototype['unsubscribed_date'] = undefined;

/**
 * @member {String} user_type
 */
Member.prototype['user_type'] = undefined;

/**
 * @member {String} zip
 */
Member.prototype['zip'] = undefined;






export default Member;

