/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MemberEvent from './MemberEvent';
import TruncatedMember from './TruncatedMember';

/**
 * The MemberEvents model module.
 * @module model/MemberEvents
 * @version 1.0.0
 */
class MemberEvents {
    /**
     * Constructs a new <code>MemberEvents</code>.
     * @alias module:model/MemberEvents
     */
    constructor() { 
        
        MemberEvents.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemberEvents</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemberEvents} obj Optional instance to populate.
     * @return {module:model/MemberEvents} The populated <code>MemberEvents</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemberEvents();

            if (data.hasOwnProperty('member_events')) {
                obj['member_events'] = ApiClient.convertToType(data['member_events'], [MemberEvent]);
            }
            if (data.hasOwnProperty('members')) {
                obj['members'] = ApiClient.convertToType(data['members'], [TruncatedMember]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemberEvents</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemberEvents</code>.
     */
    static validateJSON(data) {
        if (data['member_events']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['member_events'])) {
                throw new Error("Expected the field `member_events` to be an array in the JSON data but got " + data['member_events']);
            }
            // validate the optional field `member_events` (array)
            for (const item of data['member_events']) {
                MemberEvent.validateJSON(item);
            };
        }
        if (data['members']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['members'])) {
                throw new Error("Expected the field `members` to be an array in the JSON data but got " + data['members']);
            }
            // validate the optional field `members` (array)
            for (const item of data['members']) {
                TruncatedMember.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/MemberEvent>} member_events
 */
MemberEvents.prototype['member_events'] = undefined;

/**
 * @member {Array.<module:model/TruncatedMember>} members
 */
MemberEvents.prototype['members'] = undefined;






export default MemberEvents;

