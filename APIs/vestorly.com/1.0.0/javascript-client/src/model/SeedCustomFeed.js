/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SeedCustomFeed model module.
 * @module model/SeedCustomFeed
 * @version 1.0.0
 */
class SeedCustomFeed {
    /**
     * Constructs a new <code>SeedCustomFeed</code>.
     * @alias module:model/SeedCustomFeed
     * @param id {String} 
     */
    constructor(id) { 
        
        SeedCustomFeed.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['_id'] = id;
    }

    /**
     * Constructs a <code>SeedCustomFeed</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SeedCustomFeed} obj Optional instance to populate.
     * @return {module:model/SeedCustomFeed} The populated <code>SeedCustomFeed</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SeedCustomFeed();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('article_id')) {
                obj['article_id'] = ApiClient.convertToType(data['article_id'], 'String');
            }
            if (data.hasOwnProperty('custom_feed_id')) {
                obj['custom_feed_id'] = ApiClient.convertToType(data['custom_feed_id'], 'String');
            }
            if (data.hasOwnProperty('not_article_id')) {
                obj['not_article_id'] = ApiClient.convertToType(data['not_article_id'], 'String');
            }
            if (data.hasOwnProperty('not_seeds')) {
                obj['not_seeds'] = ApiClient.convertToType(data['not_seeds'], ['String']);
            }
            if (data.hasOwnProperty('seeds')) {
                obj['seeds'] = ApiClient.convertToType(data['seeds'], ['String']);
            }
            if (data.hasOwnProperty('sort_by')) {
                obj['sort_by'] = ApiClient.convertToType(data['sort_by'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SeedCustomFeed</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SeedCustomFeed</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SeedCustomFeed.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['article_id'] && !(typeof data['article_id'] === 'string' || data['article_id'] instanceof String)) {
            throw new Error("Expected the field `article_id` to be a primitive type in the JSON string but got " + data['article_id']);
        }
        // ensure the json data is a string
        if (data['custom_feed_id'] && !(typeof data['custom_feed_id'] === 'string' || data['custom_feed_id'] instanceof String)) {
            throw new Error("Expected the field `custom_feed_id` to be a primitive type in the JSON string but got " + data['custom_feed_id']);
        }
        // ensure the json data is a string
        if (data['not_article_id'] && !(typeof data['not_article_id'] === 'string' || data['not_article_id'] instanceof String)) {
            throw new Error("Expected the field `not_article_id` to be a primitive type in the JSON string but got " + data['not_article_id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['not_seeds'])) {
            throw new Error("Expected the field `not_seeds` to be an array in the JSON data but got " + data['not_seeds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['seeds'])) {
            throw new Error("Expected the field `seeds` to be an array in the JSON data but got " + data['seeds']);
        }
        // ensure the json data is a string
        if (data['sort_by'] && !(typeof data['sort_by'] === 'string' || data['sort_by'] instanceof String)) {
            throw new Error("Expected the field `sort_by` to be a primitive type in the JSON string but got " + data['sort_by']);
        }

        return true;
    }


}

SeedCustomFeed.RequiredProperties = ["_id"];

/**
 * @member {String} _id
 */
SeedCustomFeed.prototype['_id'] = undefined;

/**
 * @member {String} article_id
 */
SeedCustomFeed.prototype['article_id'] = undefined;

/**
 * @member {String} custom_feed_id
 */
SeedCustomFeed.prototype['custom_feed_id'] = undefined;

/**
 * @member {String} not_article_id
 */
SeedCustomFeed.prototype['not_article_id'] = undefined;

/**
 * @member {Array.<String>} not_seeds
 */
SeedCustomFeed.prototype['not_seeds'] = undefined;

/**
 * @member {Array.<String>} seeds
 */
SeedCustomFeed.prototype['seeds'] = undefined;

/**
 * @member {String} sort_by
 */
SeedCustomFeed.prototype['sort_by'] = undefined;






export default SeedCustomFeed;

