/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NewsletterSetting model module.
 * @module model/NewsletterSetting
 * @version 1.0.0
 */
class NewsletterSetting {
    /**
     * Constructs a new <code>NewsletterSetting</code>.
     * @alias module:model/NewsletterSetting
     * @param id {String} 
     */
    constructor(id) { 
        
        NewsletterSetting.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['_id'] = id;
    }

    /**
     * Constructs a <code>NewsletterSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NewsletterSetting} obj Optional instance to populate.
     * @return {module:model/NewsletterSetting} The populated <code>NewsletterSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NewsletterSetting();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('banner_color')) {
                obj['banner_color'] = ApiClient.convertToType(data['banner_color'], 'String');
            }
            if (data.hasOwnProperty('body_html')) {
                obj['body_html'] = ApiClient.convertToType(data['body_html'], 'String');
            }
            if (data.hasOwnProperty('email_accent_color')) {
                obj['email_accent_color'] = ApiClient.convertToType(data['email_accent_color'], 'String');
            }
            if (data.hasOwnProperty('email_day_of_week')) {
                obj['email_day_of_week'] = ApiClient.convertToType(data['email_day_of_week'], 'Number');
            }
            if (data.hasOwnProperty('email_hour')) {
                obj['email_hour'] = ApiClient.convertToType(data['email_hour'], 'Number');
            }
            if (data.hasOwnProperty('email_status')) {
                obj['email_status'] = ApiClient.convertToType(data['email_status'], 'String');
            }
            if (data.hasOwnProperty('facebook_active_wall')) {
                obj['facebook_active_wall'] = ApiClient.convertToType(data['facebook_active_wall'], 'String');
            }
            if (data.hasOwnProperty('footer_email_font')) {
                obj['footer_email_font'] = ApiClient.convertToType(data['footer_email_font'], 'String');
            }
            if (data.hasOwnProperty('footer_html')) {
                obj['footer_html'] = ApiClient.convertToType(data['footer_html'], 'String');
            }
            if (data.hasOwnProperty('footer_image_url')) {
                obj['footer_image_url'] = ApiClient.convertToType(data['footer_image_url'], 'String');
            }
            if (data.hasOwnProperty('group_id')) {
                obj['group_id'] = ApiClient.convertToType(data['group_id'], 'String');
            }
            if (data.hasOwnProperty('header_background_color')) {
                obj['header_background_color'] = ApiClient.convertToType(data['header_background_color'], 'String');
            }
            if (data.hasOwnProperty('header_image_url')) {
                obj['header_image_url'] = ApiClient.convertToType(data['header_image_url'], 'String');
            }
            if (data.hasOwnProperty('intro_text')) {
                obj['intro_text'] = ApiClient.convertToType(data['intro_text'], 'String');
            }
            if (data.hasOwnProperty('linkedin_active_wall')) {
                obj['linkedin_active_wall'] = ApiClient.convertToType(data['linkedin_active_wall'], 'String');
            }
            if (data.hasOwnProperty('montage_enabled')) {
                obj['montage_enabled'] = ApiClient.convertToType(data['montage_enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('montage_facebook_image_url')) {
                obj['montage_facebook_image_url'] = ApiClient.convertToType(data['montage_facebook_image_url'], 'String');
            }
            if (data.hasOwnProperty('montage_linkedin_image_url')) {
                obj['montage_linkedin_image_url'] = ApiClient.convertToType(data['montage_linkedin_image_url'], 'String');
            }
            if (data.hasOwnProperty('montage_title')) {
                obj['montage_title'] = ApiClient.convertToType(data['montage_title'], 'String');
            }
            if (data.hasOwnProperty('montage_twitter_image_url')) {
                obj['montage_twitter_image_url'] = ApiClient.convertToType(data['montage_twitter_image_url'], 'String');
            }
            if (data.hasOwnProperty('newsletter_ids')) {
                obj['newsletter_ids'] = ApiClient.convertToType(data['newsletter_ids'], ['String']);
            }
            if (data.hasOwnProperty('newsletter_type')) {
                obj['newsletter_type'] = ApiClient.convertToType(data['newsletter_type'], 'String');
            }
            if (data.hasOwnProperty('primary_email_font')) {
                obj['primary_email_font'] = ApiClient.convertToType(data['primary_email_font'], 'String');
            }
            if (data.hasOwnProperty('salutation_text')) {
                obj['salutation_text'] = ApiClient.convertToType(data['salutation_text'], 'String');
            }
            if (data.hasOwnProperty('social_day_of_week')) {
                obj['social_day_of_week'] = ApiClient.convertToType(data['social_day_of_week'], 'Number');
            }
            if (data.hasOwnProperty('social_description')) {
                obj['social_description'] = ApiClient.convertToType(data['social_description'], 'String');
            }
            if (data.hasOwnProperty('social_posting_text')) {
                obj['social_posting_text'] = ApiClient.convertToType(data['social_posting_text'], 'String');
            }
            if (data.hasOwnProperty('social_title')) {
                obj['social_title'] = ApiClient.convertToType(data['social_title'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('title_color')) {
                obj['title_color'] = ApiClient.convertToType(data['title_color'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NewsletterSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NewsletterSetting</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NewsletterSetting.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['banner_color'] && !(typeof data['banner_color'] === 'string' || data['banner_color'] instanceof String)) {
            throw new Error("Expected the field `banner_color` to be a primitive type in the JSON string but got " + data['banner_color']);
        }
        // ensure the json data is a string
        if (data['body_html'] && !(typeof data['body_html'] === 'string' || data['body_html'] instanceof String)) {
            throw new Error("Expected the field `body_html` to be a primitive type in the JSON string but got " + data['body_html']);
        }
        // ensure the json data is a string
        if (data['email_accent_color'] && !(typeof data['email_accent_color'] === 'string' || data['email_accent_color'] instanceof String)) {
            throw new Error("Expected the field `email_accent_color` to be a primitive type in the JSON string but got " + data['email_accent_color']);
        }
        // ensure the json data is a string
        if (data['email_status'] && !(typeof data['email_status'] === 'string' || data['email_status'] instanceof String)) {
            throw new Error("Expected the field `email_status` to be a primitive type in the JSON string but got " + data['email_status']);
        }
        // ensure the json data is a string
        if (data['facebook_active_wall'] && !(typeof data['facebook_active_wall'] === 'string' || data['facebook_active_wall'] instanceof String)) {
            throw new Error("Expected the field `facebook_active_wall` to be a primitive type in the JSON string but got " + data['facebook_active_wall']);
        }
        // ensure the json data is a string
        if (data['footer_email_font'] && !(typeof data['footer_email_font'] === 'string' || data['footer_email_font'] instanceof String)) {
            throw new Error("Expected the field `footer_email_font` to be a primitive type in the JSON string but got " + data['footer_email_font']);
        }
        // ensure the json data is a string
        if (data['footer_html'] && !(typeof data['footer_html'] === 'string' || data['footer_html'] instanceof String)) {
            throw new Error("Expected the field `footer_html` to be a primitive type in the JSON string but got " + data['footer_html']);
        }
        // ensure the json data is a string
        if (data['footer_image_url'] && !(typeof data['footer_image_url'] === 'string' || data['footer_image_url'] instanceof String)) {
            throw new Error("Expected the field `footer_image_url` to be a primitive type in the JSON string but got " + data['footer_image_url']);
        }
        // ensure the json data is a string
        if (data['group_id'] && !(typeof data['group_id'] === 'string' || data['group_id'] instanceof String)) {
            throw new Error("Expected the field `group_id` to be a primitive type in the JSON string but got " + data['group_id']);
        }
        // ensure the json data is a string
        if (data['header_background_color'] && !(typeof data['header_background_color'] === 'string' || data['header_background_color'] instanceof String)) {
            throw new Error("Expected the field `header_background_color` to be a primitive type in the JSON string but got " + data['header_background_color']);
        }
        // ensure the json data is a string
        if (data['header_image_url'] && !(typeof data['header_image_url'] === 'string' || data['header_image_url'] instanceof String)) {
            throw new Error("Expected the field `header_image_url` to be a primitive type in the JSON string but got " + data['header_image_url']);
        }
        // ensure the json data is a string
        if (data['intro_text'] && !(typeof data['intro_text'] === 'string' || data['intro_text'] instanceof String)) {
            throw new Error("Expected the field `intro_text` to be a primitive type in the JSON string but got " + data['intro_text']);
        }
        // ensure the json data is a string
        if (data['linkedin_active_wall'] && !(typeof data['linkedin_active_wall'] === 'string' || data['linkedin_active_wall'] instanceof String)) {
            throw new Error("Expected the field `linkedin_active_wall` to be a primitive type in the JSON string but got " + data['linkedin_active_wall']);
        }
        // ensure the json data is a string
        if (data['montage_facebook_image_url'] && !(typeof data['montage_facebook_image_url'] === 'string' || data['montage_facebook_image_url'] instanceof String)) {
            throw new Error("Expected the field `montage_facebook_image_url` to be a primitive type in the JSON string but got " + data['montage_facebook_image_url']);
        }
        // ensure the json data is a string
        if (data['montage_linkedin_image_url'] && !(typeof data['montage_linkedin_image_url'] === 'string' || data['montage_linkedin_image_url'] instanceof String)) {
            throw new Error("Expected the field `montage_linkedin_image_url` to be a primitive type in the JSON string but got " + data['montage_linkedin_image_url']);
        }
        // ensure the json data is a string
        if (data['montage_title'] && !(typeof data['montage_title'] === 'string' || data['montage_title'] instanceof String)) {
            throw new Error("Expected the field `montage_title` to be a primitive type in the JSON string but got " + data['montage_title']);
        }
        // ensure the json data is a string
        if (data['montage_twitter_image_url'] && !(typeof data['montage_twitter_image_url'] === 'string' || data['montage_twitter_image_url'] instanceof String)) {
            throw new Error("Expected the field `montage_twitter_image_url` to be a primitive type in the JSON string but got " + data['montage_twitter_image_url']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['newsletter_ids'])) {
            throw new Error("Expected the field `newsletter_ids` to be an array in the JSON data but got " + data['newsletter_ids']);
        }
        // ensure the json data is a string
        if (data['newsletter_type'] && !(typeof data['newsletter_type'] === 'string' || data['newsletter_type'] instanceof String)) {
            throw new Error("Expected the field `newsletter_type` to be a primitive type in the JSON string but got " + data['newsletter_type']);
        }
        // ensure the json data is a string
        if (data['primary_email_font'] && !(typeof data['primary_email_font'] === 'string' || data['primary_email_font'] instanceof String)) {
            throw new Error("Expected the field `primary_email_font` to be a primitive type in the JSON string but got " + data['primary_email_font']);
        }
        // ensure the json data is a string
        if (data['salutation_text'] && !(typeof data['salutation_text'] === 'string' || data['salutation_text'] instanceof String)) {
            throw new Error("Expected the field `salutation_text` to be a primitive type in the JSON string but got " + data['salutation_text']);
        }
        // ensure the json data is a string
        if (data['social_description'] && !(typeof data['social_description'] === 'string' || data['social_description'] instanceof String)) {
            throw new Error("Expected the field `social_description` to be a primitive type in the JSON string but got " + data['social_description']);
        }
        // ensure the json data is a string
        if (data['social_posting_text'] && !(typeof data['social_posting_text'] === 'string' || data['social_posting_text'] instanceof String)) {
            throw new Error("Expected the field `social_posting_text` to be a primitive type in the JSON string but got " + data['social_posting_text']);
        }
        // ensure the json data is a string
        if (data['social_title'] && !(typeof data['social_title'] === 'string' || data['social_title'] instanceof String)) {
            throw new Error("Expected the field `social_title` to be a primitive type in the JSON string but got " + data['social_title']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['title_color'] && !(typeof data['title_color'] === 'string' || data['title_color'] instanceof String)) {
            throw new Error("Expected the field `title_color` to be a primitive type in the JSON string but got " + data['title_color']);
        }

        return true;
    }


}

NewsletterSetting.RequiredProperties = ["_id"];

/**
 * @member {String} _id
 */
NewsletterSetting.prototype['_id'] = undefined;

/**
 * @member {String} banner_color
 */
NewsletterSetting.prototype['banner_color'] = undefined;

/**
 * @member {String} body_html
 */
NewsletterSetting.prototype['body_html'] = undefined;

/**
 * @member {String} email_accent_color
 */
NewsletterSetting.prototype['email_accent_color'] = undefined;

/**
 * @member {Number} email_day_of_week
 */
NewsletterSetting.prototype['email_day_of_week'] = undefined;

/**
 * @member {Number} email_hour
 */
NewsletterSetting.prototype['email_hour'] = undefined;

/**
 * @member {String} email_status
 */
NewsletterSetting.prototype['email_status'] = undefined;

/**
 * @member {String} facebook_active_wall
 */
NewsletterSetting.prototype['facebook_active_wall'] = undefined;

/**
 * @member {String} footer_email_font
 */
NewsletterSetting.prototype['footer_email_font'] = undefined;

/**
 * @member {String} footer_html
 */
NewsletterSetting.prototype['footer_html'] = undefined;

/**
 * @member {String} footer_image_url
 */
NewsletterSetting.prototype['footer_image_url'] = undefined;

/**
 * @member {String} group_id
 */
NewsletterSetting.prototype['group_id'] = undefined;

/**
 * @member {String} header_background_color
 */
NewsletterSetting.prototype['header_background_color'] = undefined;

/**
 * @member {String} header_image_url
 */
NewsletterSetting.prototype['header_image_url'] = undefined;

/**
 * @member {String} intro_text
 */
NewsletterSetting.prototype['intro_text'] = undefined;

/**
 * @member {String} linkedin_active_wall
 */
NewsletterSetting.prototype['linkedin_active_wall'] = undefined;

/**
 * @member {Boolean} montage_enabled
 */
NewsletterSetting.prototype['montage_enabled'] = undefined;

/**
 * @member {String} montage_facebook_image_url
 */
NewsletterSetting.prototype['montage_facebook_image_url'] = undefined;

/**
 * @member {String} montage_linkedin_image_url
 */
NewsletterSetting.prototype['montage_linkedin_image_url'] = undefined;

/**
 * @member {String} montage_title
 */
NewsletterSetting.prototype['montage_title'] = undefined;

/**
 * @member {String} montage_twitter_image_url
 */
NewsletterSetting.prototype['montage_twitter_image_url'] = undefined;

/**
 * @member {Array.<String>} newsletter_ids
 */
NewsletterSetting.prototype['newsletter_ids'] = undefined;

/**
 * @member {String} newsletter_type
 */
NewsletterSetting.prototype['newsletter_type'] = undefined;

/**
 * @member {String} primary_email_font
 */
NewsletterSetting.prototype['primary_email_font'] = undefined;

/**
 * @member {String} salutation_text
 */
NewsletterSetting.prototype['salutation_text'] = undefined;

/**
 * @member {Number} social_day_of_week
 */
NewsletterSetting.prototype['social_day_of_week'] = undefined;

/**
 * @member {String} social_description
 */
NewsletterSetting.prototype['social_description'] = undefined;

/**
 * @member {String} social_posting_text
 */
NewsletterSetting.prototype['social_posting_text'] = undefined;

/**
 * @member {String} social_title
 */
NewsletterSetting.prototype['social_title'] = undefined;

/**
 * @member {String} subject
 */
NewsletterSetting.prototype['subject'] = undefined;

/**
 * @member {String} title_color
 */
NewsletterSetting.prototype['title_color'] = undefined;






export default NewsletterSetting;

