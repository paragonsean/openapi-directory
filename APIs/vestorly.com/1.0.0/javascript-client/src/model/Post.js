/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Post model module.
 * @module model/Post
 * @version 1.0.0
 */
class Post {
    /**
     * Constructs a new <code>Post</code>.
     * @alias module:model/Post
     */
    constructor() { 
        
        Post.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Post</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Post} obj Optional instance to populate.
     * @return {module:model/Post} The populated <code>Post</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Post();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('advisor_id')) {
                obj['advisor_id'] = ApiClient.convertToType(data['advisor_id'], 'String');
            }
            if (data.hasOwnProperty('approval_status')) {
                obj['approval_status'] = ApiClient.convertToType(data['approval_status'], 'String');
            }
            if (data.hasOwnProperty('approval_transactions')) {
                obj['approval_transactions'] = ApiClient.convertToType(data['approval_transactions'], ['String']);
            }
            if (data.hasOwnProperty('article_id')) {
                obj['article_id'] = ApiClient.convertToType(data['article_id'], 'String');
            }
            if (data.hasOwnProperty('comment')) {
                obj['comment'] = ApiClient.convertToType(data['comment'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('display_date')) {
                obj['display_date'] = ApiClient.convertToType(data['display_date'], 'String');
            }
            if (data.hasOwnProperty('display_summary')) {
                obj['display_summary'] = ApiClient.convertToType(data['display_summary'], 'String');
            }
            if (data.hasOwnProperty('display_tag')) {
                obj['display_tag'] = ApiClient.convertToType(data['display_tag'], 'String');
            }
            if (data.hasOwnProperty('external_url')) {
                obj['external_url'] = ApiClient.convertToType(data['external_url'], 'String');
            }
            if (data.hasOwnProperty('external_url_source')) {
                obj['external_url_source'] = ApiClient.convertToType(data['external_url_source'], 'String');
            }
            if (data.hasOwnProperty('external_url_type')) {
                obj['external_url_type'] = ApiClient.convertToType(data['external_url_type'], 'String');
            }
            if (data.hasOwnProperty('group_ids')) {
                obj['group_ids'] = ApiClient.convertToType(data['group_ids'], ['String']);
            }
            if (data.hasOwnProperty('image_height')) {
                obj['image_height'] = ApiClient.convertToType(data['image_height'], 'String');
            }
            if (data.hasOwnProperty('image_path')) {
                obj['image_path'] = ApiClient.convertToType(data['image_path'], 'String');
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('image_width')) {
                obj['image_width'] = ApiClient.convertToType(data['image_width'], 'String');
            }
            if (data.hasOwnProperty('is_featured')) {
                obj['is_featured'] = ApiClient.convertToType(data['is_featured'], 'Boolean');
            }
            if (data.hasOwnProperty('is_mobile_proxy_needed')) {
                obj['is_mobile_proxy_needed'] = ApiClient.convertToType(data['is_mobile_proxy_needed'], 'Boolean');
            }
            if (data.hasOwnProperty('is_proxy_needed')) {
                obj['is_proxy_needed'] = ApiClient.convertToType(data['is_proxy_needed'], 'Boolean');
            }
            if (data.hasOwnProperty('is_published')) {
                obj['is_published'] = ApiClient.convertToType(data['is_published'], 'Boolean');
            }
            if (data.hasOwnProperty('is_responsive')) {
                obj['is_responsive'] = ApiClient.convertToType(data['is_responsive'], 'Boolean');
            }
            if (data.hasOwnProperty('logo_url')) {
                obj['logo_url'] = ApiClient.convertToType(data['logo_url'], 'String');
            }
            if (data.hasOwnProperty('needs_sanitize')) {
                obj['needs_sanitize'] = ApiClient.convertToType(data['needs_sanitize'], 'String');
            }
            if (data.hasOwnProperty('newsletter_ids')) {
                obj['newsletter_ids'] = ApiClient.convertToType(data['newsletter_ids'], ['String']);
            }
            if (data.hasOwnProperty('post_date')) {
                obj['post_date'] = ApiClient.convertToType(data['post_date'], 'String');
            }
            if (data.hasOwnProperty('proxy_url')) {
                obj['proxy_url'] = ApiClient.convertToType(data['proxy_url'], 'String');
            }
            if (data.hasOwnProperty('redirector_link')) {
                obj['redirector_link'] = ApiClient.convertToType(data['redirector_link'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('square_logo_url')) {
                obj['square_logo_url'] = ApiClient.convertToType(data['square_logo_url'], 'String');
            }
            if (data.hasOwnProperty('suitability_score')) {
                obj['suitability_score'] = ApiClient.convertToType(data['suitability_score'], 'String');
            }
            if (data.hasOwnProperty('summary')) {
                obj['summary'] = ApiClient.convertToType(data['summary'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('topic')) {
                obj['topic'] = ApiClient.convertToType(data['topic'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
            if (data.hasOwnProperty('vestorly_url')) {
                obj['vestorly_url'] = ApiClient.convertToType(data['vestorly_url'], 'String');
            }
            if (data.hasOwnProperty('video')) {
                obj['video'] = ApiClient.convertToType(data['video'], 'String');
            }
            if (data.hasOwnProperty('video_id')) {
                obj['video_id'] = ApiClient.convertToType(data['video_id'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Post</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Post</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['advisor_id'] && !(typeof data['advisor_id'] === 'string' || data['advisor_id'] instanceof String)) {
            throw new Error("Expected the field `advisor_id` to be a primitive type in the JSON string but got " + data['advisor_id']);
        }
        // ensure the json data is a string
        if (data['approval_status'] && !(typeof data['approval_status'] === 'string' || data['approval_status'] instanceof String)) {
            throw new Error("Expected the field `approval_status` to be a primitive type in the JSON string but got " + data['approval_status']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['approval_transactions'])) {
            throw new Error("Expected the field `approval_transactions` to be an array in the JSON data but got " + data['approval_transactions']);
        }
        // ensure the json data is a string
        if (data['article_id'] && !(typeof data['article_id'] === 'string' || data['article_id'] instanceof String)) {
            throw new Error("Expected the field `article_id` to be a primitive type in the JSON string but got " + data['article_id']);
        }
        // ensure the json data is a string
        if (data['comment'] && !(typeof data['comment'] === 'string' || data['comment'] instanceof String)) {
            throw new Error("Expected the field `comment` to be a primitive type in the JSON string but got " + data['comment']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['display_date'] && !(typeof data['display_date'] === 'string' || data['display_date'] instanceof String)) {
            throw new Error("Expected the field `display_date` to be a primitive type in the JSON string but got " + data['display_date']);
        }
        // ensure the json data is a string
        if (data['display_summary'] && !(typeof data['display_summary'] === 'string' || data['display_summary'] instanceof String)) {
            throw new Error("Expected the field `display_summary` to be a primitive type in the JSON string but got " + data['display_summary']);
        }
        // ensure the json data is a string
        if (data['display_tag'] && !(typeof data['display_tag'] === 'string' || data['display_tag'] instanceof String)) {
            throw new Error("Expected the field `display_tag` to be a primitive type in the JSON string but got " + data['display_tag']);
        }
        // ensure the json data is a string
        if (data['external_url'] && !(typeof data['external_url'] === 'string' || data['external_url'] instanceof String)) {
            throw new Error("Expected the field `external_url` to be a primitive type in the JSON string but got " + data['external_url']);
        }
        // ensure the json data is a string
        if (data['external_url_source'] && !(typeof data['external_url_source'] === 'string' || data['external_url_source'] instanceof String)) {
            throw new Error("Expected the field `external_url_source` to be a primitive type in the JSON string but got " + data['external_url_source']);
        }
        // ensure the json data is a string
        if (data['external_url_type'] && !(typeof data['external_url_type'] === 'string' || data['external_url_type'] instanceof String)) {
            throw new Error("Expected the field `external_url_type` to be a primitive type in the JSON string but got " + data['external_url_type']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['group_ids'])) {
            throw new Error("Expected the field `group_ids` to be an array in the JSON data but got " + data['group_ids']);
        }
        // ensure the json data is a string
        if (data['image_height'] && !(typeof data['image_height'] === 'string' || data['image_height'] instanceof String)) {
            throw new Error("Expected the field `image_height` to be a primitive type in the JSON string but got " + data['image_height']);
        }
        // ensure the json data is a string
        if (data['image_path'] && !(typeof data['image_path'] === 'string' || data['image_path'] instanceof String)) {
            throw new Error("Expected the field `image_path` to be a primitive type in the JSON string but got " + data['image_path']);
        }
        // ensure the json data is a string
        if (data['image_url'] && !(typeof data['image_url'] === 'string' || data['image_url'] instanceof String)) {
            throw new Error("Expected the field `image_url` to be a primitive type in the JSON string but got " + data['image_url']);
        }
        // ensure the json data is a string
        if (data['image_width'] && !(typeof data['image_width'] === 'string' || data['image_width'] instanceof String)) {
            throw new Error("Expected the field `image_width` to be a primitive type in the JSON string but got " + data['image_width']);
        }
        // ensure the json data is a string
        if (data['logo_url'] && !(typeof data['logo_url'] === 'string' || data['logo_url'] instanceof String)) {
            throw new Error("Expected the field `logo_url` to be a primitive type in the JSON string but got " + data['logo_url']);
        }
        // ensure the json data is a string
        if (data['needs_sanitize'] && !(typeof data['needs_sanitize'] === 'string' || data['needs_sanitize'] instanceof String)) {
            throw new Error("Expected the field `needs_sanitize` to be a primitive type in the JSON string but got " + data['needs_sanitize']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['newsletter_ids'])) {
            throw new Error("Expected the field `newsletter_ids` to be an array in the JSON data but got " + data['newsletter_ids']);
        }
        // ensure the json data is a string
        if (data['post_date'] && !(typeof data['post_date'] === 'string' || data['post_date'] instanceof String)) {
            throw new Error("Expected the field `post_date` to be a primitive type in the JSON string but got " + data['post_date']);
        }
        // ensure the json data is a string
        if (data['proxy_url'] && !(typeof data['proxy_url'] === 'string' || data['proxy_url'] instanceof String)) {
            throw new Error("Expected the field `proxy_url` to be a primitive type in the JSON string but got " + data['proxy_url']);
        }
        // ensure the json data is a string
        if (data['redirector_link'] && !(typeof data['redirector_link'] === 'string' || data['redirector_link'] instanceof String)) {
            throw new Error("Expected the field `redirector_link` to be a primitive type in the JSON string but got " + data['redirector_link']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['square_logo_url'] && !(typeof data['square_logo_url'] === 'string' || data['square_logo_url'] instanceof String)) {
            throw new Error("Expected the field `square_logo_url` to be a primitive type in the JSON string but got " + data['square_logo_url']);
        }
        // ensure the json data is a string
        if (data['suitability_score'] && !(typeof data['suitability_score'] === 'string' || data['suitability_score'] instanceof String)) {
            throw new Error("Expected the field `suitability_score` to be a primitive type in the JSON string but got " + data['suitability_score']);
        }
        // ensure the json data is a string
        if (data['summary'] && !(typeof data['summary'] === 'string' || data['summary'] instanceof String)) {
            throw new Error("Expected the field `summary` to be a primitive type in the JSON string but got " + data['summary']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['topic'] && !(typeof data['topic'] === 'string' || data['topic'] instanceof String)) {
            throw new Error("Expected the field `topic` to be a primitive type in the JSON string but got " + data['topic']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }
        // ensure the json data is a string
        if (data['vestorly_url'] && !(typeof data['vestorly_url'] === 'string' || data['vestorly_url'] instanceof String)) {
            throw new Error("Expected the field `vestorly_url` to be a primitive type in the JSON string but got " + data['vestorly_url']);
        }
        // ensure the json data is a string
        if (data['video'] && !(typeof data['video'] === 'string' || data['video'] instanceof String)) {
            throw new Error("Expected the field `video` to be a primitive type in the JSON string but got " + data['video']);
        }
        // ensure the json data is a string
        if (data['video_id'] && !(typeof data['video_id'] === 'string' || data['video_id'] instanceof String)) {
            throw new Error("Expected the field `video_id` to be a primitive type in the JSON string but got " + data['video_id']);
        }

        return true;
    }


}



/**
 * @member {String} _id
 */
Post.prototype['_id'] = undefined;

/**
 * @member {String} advisor_id
 */
Post.prototype['advisor_id'] = undefined;

/**
 * @member {String} approval_status
 */
Post.prototype['approval_status'] = undefined;

/**
 * @member {Array.<String>} approval_transactions
 */
Post.prototype['approval_transactions'] = undefined;

/**
 * @member {String} article_id
 */
Post.prototype['article_id'] = undefined;

/**
 * @member {String} comment
 */
Post.prototype['comment'] = undefined;

/**
 * @member {String} created_at
 */
Post.prototype['created_at'] = undefined;

/**
 * @member {String} display_date
 */
Post.prototype['display_date'] = undefined;

/**
 * @member {String} display_summary
 */
Post.prototype['display_summary'] = undefined;

/**
 * @member {String} display_tag
 */
Post.prototype['display_tag'] = undefined;

/**
 * @member {String} external_url
 */
Post.prototype['external_url'] = undefined;

/**
 * @member {String} external_url_source
 */
Post.prototype['external_url_source'] = undefined;

/**
 * @member {String} external_url_type
 */
Post.prototype['external_url_type'] = undefined;

/**
 * @member {Array.<String>} group_ids
 */
Post.prototype['group_ids'] = undefined;

/**
 * @member {String} image_height
 */
Post.prototype['image_height'] = undefined;

/**
 * @member {String} image_path
 */
Post.prototype['image_path'] = undefined;

/**
 * @member {String} image_url
 */
Post.prototype['image_url'] = undefined;

/**
 * @member {String} image_width
 */
Post.prototype['image_width'] = undefined;

/**
 * @member {Boolean} is_featured
 */
Post.prototype['is_featured'] = undefined;

/**
 * @member {Boolean} is_mobile_proxy_needed
 */
Post.prototype['is_mobile_proxy_needed'] = undefined;

/**
 * @member {Boolean} is_proxy_needed
 */
Post.prototype['is_proxy_needed'] = undefined;

/**
 * @member {Boolean} is_published
 */
Post.prototype['is_published'] = undefined;

/**
 * @member {Boolean} is_responsive
 */
Post.prototype['is_responsive'] = undefined;

/**
 * @member {String} logo_url
 */
Post.prototype['logo_url'] = undefined;

/**
 * @member {String} needs_sanitize
 */
Post.prototype['needs_sanitize'] = undefined;

/**
 * @member {Array.<String>} newsletter_ids
 */
Post.prototype['newsletter_ids'] = undefined;

/**
 * @member {String} post_date
 */
Post.prototype['post_date'] = undefined;

/**
 * @member {String} proxy_url
 */
Post.prototype['proxy_url'] = undefined;

/**
 * @member {String} redirector_link
 */
Post.prototype['redirector_link'] = undefined;

/**
 * @member {String} slug
 */
Post.prototype['slug'] = undefined;

/**
 * @member {String} square_logo_url
 */
Post.prototype['square_logo_url'] = undefined;

/**
 * @member {String} suitability_score
 */
Post.prototype['suitability_score'] = undefined;

/**
 * @member {String} summary
 */
Post.prototype['summary'] = undefined;

/**
 * @member {String} title
 */
Post.prototype['title'] = undefined;

/**
 * @member {String} topic
 */
Post.prototype['topic'] = undefined;

/**
 * @member {String} updated_at
 */
Post.prototype['updated_at'] = undefined;

/**
 * @member {String} vestorly_url
 */
Post.prototype['vestorly_url'] = undefined;

/**
 * @member {String} video
 */
Post.prototype['video'] = undefined;

/**
 * @member {String} video_id
 */
Post.prototype['video_id'] = undefined;






export default Post;

