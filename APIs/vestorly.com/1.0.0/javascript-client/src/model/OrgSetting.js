/**
 * Vestorly API
 * Vestorly Developers API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrgSetting model module.
 * @module model/OrgSetting
 * @version 1.0.0
 */
class OrgSetting {
    /**
     * Constructs a new <code>OrgSetting</code>.
     * @alias module:model/OrgSetting
     * @param id {String} 
     */
    constructor(id) { 
        
        OrgSetting.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['_id'] = id;
    }

    /**
     * Constructs a <code>OrgSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrgSetting} obj Optional instance to populate.
     * @return {module:model/OrgSetting} The populated <code>OrgSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrgSetting();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('company_address')) {
                obj['company_address'] = ApiClient.convertToType(data['company_address'], 'String');
            }
            if (data.hasOwnProperty('company_contact_email')) {
                obj['company_contact_email'] = ApiClient.convertToType(data['company_contact_email'], 'String');
            }
            if (data.hasOwnProperty('company_homepage_url')) {
                obj['company_homepage_url'] = ApiClient.convertToType(data['company_homepage_url'], 'String');
            }
            if (data.hasOwnProperty('is_default')) {
                obj['is_default'] = ApiClient.convertToType(data['is_default'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('privacy_policy_url')) {
                obj['privacy_policy_url'] = ApiClient.convertToType(data['privacy_policy_url'], 'String');
            }
            if (data.hasOwnProperty('site_url')) {
                obj['site_url'] = ApiClient.convertToType(data['site_url'], 'String');
            }
            if (data.hasOwnProperty('terms_and_conditions_url')) {
                obj['terms_and_conditions_url'] = ApiClient.convertToType(data['terms_and_conditions_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrgSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrgSetting</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of OrgSetting.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        // ensure the json data is a string
        if (data['company_address'] && !(typeof data['company_address'] === 'string' || data['company_address'] instanceof String)) {
            throw new Error("Expected the field `company_address` to be a primitive type in the JSON string but got " + data['company_address']);
        }
        // ensure the json data is a string
        if (data['company_contact_email'] && !(typeof data['company_contact_email'] === 'string' || data['company_contact_email'] instanceof String)) {
            throw new Error("Expected the field `company_contact_email` to be a primitive type in the JSON string but got " + data['company_contact_email']);
        }
        // ensure the json data is a string
        if (data['company_homepage_url'] && !(typeof data['company_homepage_url'] === 'string' || data['company_homepage_url'] instanceof String)) {
            throw new Error("Expected the field `company_homepage_url` to be a primitive type in the JSON string but got " + data['company_homepage_url']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['privacy_policy_url'] && !(typeof data['privacy_policy_url'] === 'string' || data['privacy_policy_url'] instanceof String)) {
            throw new Error("Expected the field `privacy_policy_url` to be a primitive type in the JSON string but got " + data['privacy_policy_url']);
        }
        // ensure the json data is a string
        if (data['site_url'] && !(typeof data['site_url'] === 'string' || data['site_url'] instanceof String)) {
            throw new Error("Expected the field `site_url` to be a primitive type in the JSON string but got " + data['site_url']);
        }
        // ensure the json data is a string
        if (data['terms_and_conditions_url'] && !(typeof data['terms_and_conditions_url'] === 'string' || data['terms_and_conditions_url'] instanceof String)) {
            throw new Error("Expected the field `terms_and_conditions_url` to be a primitive type in the JSON string but got " + data['terms_and_conditions_url']);
        }

        return true;
    }


}

OrgSetting.RequiredProperties = ["_id"];

/**
 * @member {String} _id
 */
OrgSetting.prototype['_id'] = undefined;

/**
 * @member {String} company_address
 */
OrgSetting.prototype['company_address'] = undefined;

/**
 * @member {String} company_contact_email
 */
OrgSetting.prototype['company_contact_email'] = undefined;

/**
 * @member {String} company_homepage_url
 */
OrgSetting.prototype['company_homepage_url'] = undefined;

/**
 * @member {Boolean} is_default
 */
OrgSetting.prototype['is_default'] = undefined;

/**
 * @member {String} name
 */
OrgSetting.prototype['name'] = undefined;

/**
 * @member {String} privacy_policy_url
 */
OrgSetting.prototype['privacy_policy_url'] = undefined;

/**
 * @member {String} site_url
 */
OrgSetting.prototype['site_url'] = undefined;

/**
 * @member {String} terms_and_conditions_url
 */
OrgSetting.prototype['terms_and_conditions_url'] = undefined;






export default OrgSetting;

