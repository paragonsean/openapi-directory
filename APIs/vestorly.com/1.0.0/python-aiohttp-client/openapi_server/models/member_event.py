# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MemberEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, content_url: str=None, created_at: str=None, event_date: str=None, event_source: str=None, event_type: str=None, member_id: str=None, original_url: str=None, originator_email: str=None, originator_group_id: str=None, originator_id: str=None, originator_name: str=None, originator_type: str=None, parent_event_id: str=None, parent_originator_id: str=None, referer: str=None, source: str=None, subject_id: str=None, type: str=None, username: str=None):
        """MemberEvent - a model defined in OpenAPI

        :param id: The id of this MemberEvent.
        :param content_url: The content_url of this MemberEvent.
        :param created_at: The created_at of this MemberEvent.
        :param event_date: The event_date of this MemberEvent.
        :param event_source: The event_source of this MemberEvent.
        :param event_type: The event_type of this MemberEvent.
        :param member_id: The member_id of this MemberEvent.
        :param original_url: The original_url of this MemberEvent.
        :param originator_email: The originator_email of this MemberEvent.
        :param originator_group_id: The originator_group_id of this MemberEvent.
        :param originator_id: The originator_id of this MemberEvent.
        :param originator_name: The originator_name of this MemberEvent.
        :param originator_type: The originator_type of this MemberEvent.
        :param parent_event_id: The parent_event_id of this MemberEvent.
        :param parent_originator_id: The parent_originator_id of this MemberEvent.
        :param referer: The referer of this MemberEvent.
        :param source: The source of this MemberEvent.
        :param subject_id: The subject_id of this MemberEvent.
        :param type: The type of this MemberEvent.
        :param username: The username of this MemberEvent.
        """
        self.openapi_types = {
            'id': str,
            'content_url': str,
            'created_at': str,
            'event_date': str,
            'event_source': str,
            'event_type': str,
            'member_id': str,
            'original_url': str,
            'originator_email': str,
            'originator_group_id': str,
            'originator_id': str,
            'originator_name': str,
            'originator_type': str,
            'parent_event_id': str,
            'parent_originator_id': str,
            'referer': str,
            'source': str,
            'subject_id': str,
            'type': str,
            'username': str
        }

        self.attribute_map = {
            'id': '_id',
            'content_url': 'content_url',
            'created_at': 'created_at',
            'event_date': 'event_date',
            'event_source': 'event_source',
            'event_type': 'event_type',
            'member_id': 'member_id',
            'original_url': 'original_url',
            'originator_email': 'originator_email',
            'originator_group_id': 'originator_group_id',
            'originator_id': 'originator_id',
            'originator_name': 'originator_name',
            'originator_type': 'originator_type',
            'parent_event_id': 'parent_event_id',
            'parent_originator_id': 'parent_originator_id',
            'referer': 'referer',
            'source': 'source',
            'subject_id': 'subject_id',
            'type': 'type',
            'username': 'username'
        }

        self._id = id
        self._content_url = content_url
        self._created_at = created_at
        self._event_date = event_date
        self._event_source = event_source
        self._event_type = event_type
        self._member_id = member_id
        self._original_url = original_url
        self._originator_email = originator_email
        self._originator_group_id = originator_group_id
        self._originator_id = originator_id
        self._originator_name = originator_name
        self._originator_type = originator_type
        self._parent_event_id = parent_event_id
        self._parent_originator_id = parent_originator_id
        self._referer = referer
        self._source = source
        self._subject_id = subject_id
        self._type = type
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberEvent of this MemberEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this MemberEvent.


        :return: The id of this MemberEvent.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this MemberEvent.


        :param id: The id of this MemberEvent.
        :type id: str
        """

        self._id = id

    @property
    def content_url(self):
        """Gets the content_url of this MemberEvent.


        :return: The content_url of this MemberEvent.
        :rtype: str
        """
        return self._content_url

    @content_url.setter
    def content_url(self, content_url):
        """Sets the content_url of this MemberEvent.


        :param content_url: The content_url of this MemberEvent.
        :type content_url: str
        """

        self._content_url = content_url

    @property
    def created_at(self):
        """Gets the created_at of this MemberEvent.


        :return: The created_at of this MemberEvent.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this MemberEvent.


        :param created_at: The created_at of this MemberEvent.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def event_date(self):
        """Gets the event_date of this MemberEvent.


        :return: The event_date of this MemberEvent.
        :rtype: str
        """
        return self._event_date

    @event_date.setter
    def event_date(self, event_date):
        """Sets the event_date of this MemberEvent.


        :param event_date: The event_date of this MemberEvent.
        :type event_date: str
        """

        self._event_date = event_date

    @property
    def event_source(self):
        """Gets the event_source of this MemberEvent.


        :return: The event_source of this MemberEvent.
        :rtype: str
        """
        return self._event_source

    @event_source.setter
    def event_source(self, event_source):
        """Sets the event_source of this MemberEvent.


        :param event_source: The event_source of this MemberEvent.
        :type event_source: str
        """

        self._event_source = event_source

    @property
    def event_type(self):
        """Gets the event_type of this MemberEvent.


        :return: The event_type of this MemberEvent.
        :rtype: str
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this MemberEvent.


        :param event_type: The event_type of this MemberEvent.
        :type event_type: str
        """

        self._event_type = event_type

    @property
    def member_id(self):
        """Gets the member_id of this MemberEvent.


        :return: The member_id of this MemberEvent.
        :rtype: str
        """
        return self._member_id

    @member_id.setter
    def member_id(self, member_id):
        """Sets the member_id of this MemberEvent.


        :param member_id: The member_id of this MemberEvent.
        :type member_id: str
        """

        self._member_id = member_id

    @property
    def original_url(self):
        """Gets the original_url of this MemberEvent.


        :return: The original_url of this MemberEvent.
        :rtype: str
        """
        return self._original_url

    @original_url.setter
    def original_url(self, original_url):
        """Sets the original_url of this MemberEvent.


        :param original_url: The original_url of this MemberEvent.
        :type original_url: str
        """

        self._original_url = original_url

    @property
    def originator_email(self):
        """Gets the originator_email of this MemberEvent.


        :return: The originator_email of this MemberEvent.
        :rtype: str
        """
        return self._originator_email

    @originator_email.setter
    def originator_email(self, originator_email):
        """Sets the originator_email of this MemberEvent.


        :param originator_email: The originator_email of this MemberEvent.
        :type originator_email: str
        """

        self._originator_email = originator_email

    @property
    def originator_group_id(self):
        """Gets the originator_group_id of this MemberEvent.


        :return: The originator_group_id of this MemberEvent.
        :rtype: str
        """
        return self._originator_group_id

    @originator_group_id.setter
    def originator_group_id(self, originator_group_id):
        """Sets the originator_group_id of this MemberEvent.


        :param originator_group_id: The originator_group_id of this MemberEvent.
        :type originator_group_id: str
        """

        self._originator_group_id = originator_group_id

    @property
    def originator_id(self):
        """Gets the originator_id of this MemberEvent.


        :return: The originator_id of this MemberEvent.
        :rtype: str
        """
        return self._originator_id

    @originator_id.setter
    def originator_id(self, originator_id):
        """Sets the originator_id of this MemberEvent.


        :param originator_id: The originator_id of this MemberEvent.
        :type originator_id: str
        """

        self._originator_id = originator_id

    @property
    def originator_name(self):
        """Gets the originator_name of this MemberEvent.


        :return: The originator_name of this MemberEvent.
        :rtype: str
        """
        return self._originator_name

    @originator_name.setter
    def originator_name(self, originator_name):
        """Sets the originator_name of this MemberEvent.


        :param originator_name: The originator_name of this MemberEvent.
        :type originator_name: str
        """

        self._originator_name = originator_name

    @property
    def originator_type(self):
        """Gets the originator_type of this MemberEvent.


        :return: The originator_type of this MemberEvent.
        :rtype: str
        """
        return self._originator_type

    @originator_type.setter
    def originator_type(self, originator_type):
        """Sets the originator_type of this MemberEvent.


        :param originator_type: The originator_type of this MemberEvent.
        :type originator_type: str
        """

        self._originator_type = originator_type

    @property
    def parent_event_id(self):
        """Gets the parent_event_id of this MemberEvent.


        :return: The parent_event_id of this MemberEvent.
        :rtype: str
        """
        return self._parent_event_id

    @parent_event_id.setter
    def parent_event_id(self, parent_event_id):
        """Sets the parent_event_id of this MemberEvent.


        :param parent_event_id: The parent_event_id of this MemberEvent.
        :type parent_event_id: str
        """

        self._parent_event_id = parent_event_id

    @property
    def parent_originator_id(self):
        """Gets the parent_originator_id of this MemberEvent.


        :return: The parent_originator_id of this MemberEvent.
        :rtype: str
        """
        return self._parent_originator_id

    @parent_originator_id.setter
    def parent_originator_id(self, parent_originator_id):
        """Sets the parent_originator_id of this MemberEvent.


        :param parent_originator_id: The parent_originator_id of this MemberEvent.
        :type parent_originator_id: str
        """

        self._parent_originator_id = parent_originator_id

    @property
    def referer(self):
        """Gets the referer of this MemberEvent.


        :return: The referer of this MemberEvent.
        :rtype: str
        """
        return self._referer

    @referer.setter
    def referer(self, referer):
        """Sets the referer of this MemberEvent.


        :param referer: The referer of this MemberEvent.
        :type referer: str
        """

        self._referer = referer

    @property
    def source(self):
        """Gets the source of this MemberEvent.


        :return: The source of this MemberEvent.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this MemberEvent.


        :param source: The source of this MemberEvent.
        :type source: str
        """

        self._source = source

    @property
    def subject_id(self):
        """Gets the subject_id of this MemberEvent.


        :return: The subject_id of this MemberEvent.
        :rtype: str
        """
        return self._subject_id

    @subject_id.setter
    def subject_id(self, subject_id):
        """Sets the subject_id of this MemberEvent.


        :param subject_id: The subject_id of this MemberEvent.
        :type subject_id: str
        """

        self._subject_id = subject_id

    @property
    def type(self):
        """Gets the type of this MemberEvent.


        :return: The type of this MemberEvent.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MemberEvent.


        :param type: The type of this MemberEvent.
        :type type: str
        """

        self._type = type

    @property
    def username(self):
        """Gets the username of this MemberEvent.


        :return: The username of this MemberEvent.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this MemberEvent.


        :param username: The username of this MemberEvent.
        :type username: str
        """

        self._username = username
