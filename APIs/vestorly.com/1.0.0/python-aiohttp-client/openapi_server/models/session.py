# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.settings import Settings
from openapi_server.models.user import User
from openapi_server import util


class Session(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, current_user: User=None, new_user: bool=None, settings: Settings=None, vestorly_auth: str=None):
        """Session - a model defined in OpenAPI

        :param id: The id of this Session.
        :param current_user: The current_user of this Session.
        :param new_user: The new_user of this Session.
        :param settings: The settings of this Session.
        :param vestorly_auth: The vestorly_auth of this Session.
        """
        self.openapi_types = {
            'id': str,
            'current_user': User,
            'new_user': bool,
            'settings': Settings,
            'vestorly_auth': str
        }

        self.attribute_map = {
            'id': '_id',
            'current_user': 'current_user',
            'new_user': 'new_user',
            'settings': 'settings',
            'vestorly_auth': 'vestorly-auth'
        }

        self._id = id
        self._current_user = current_user
        self._new_user = new_user
        self._settings = settings
        self._vestorly_auth = vestorly_auth

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Session':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Session of this Session.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Session.


        :return: The id of this Session.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Session.


        :param id: The id of this Session.
        :type id: str
        """

        self._id = id

    @property
    def current_user(self):
        """Gets the current_user of this Session.


        :return: The current_user of this Session.
        :rtype: User
        """
        return self._current_user

    @current_user.setter
    def current_user(self, current_user):
        """Sets the current_user of this Session.


        :param current_user: The current_user of this Session.
        :type current_user: User
        """

        self._current_user = current_user

    @property
    def new_user(self):
        """Gets the new_user of this Session.


        :return: The new_user of this Session.
        :rtype: bool
        """
        return self._new_user

    @new_user.setter
    def new_user(self, new_user):
        """Sets the new_user of this Session.


        :param new_user: The new_user of this Session.
        :type new_user: bool
        """

        self._new_user = new_user

    @property
    def settings(self):
        """Gets the settings of this Session.


        :return: The settings of this Session.
        :rtype: Settings
        """
        return self._settings

    @settings.setter
    def settings(self, settings):
        """Sets the settings of this Session.


        :param settings: The settings of this Session.
        :type settings: Settings
        """

        self._settings = settings

    @property
    def vestorly_auth(self):
        """Gets the vestorly_auth of this Session.


        :return: The vestorly_auth of this Session.
        :rtype: str
        """
        return self._vestorly_auth

    @vestorly_auth.setter
    def vestorly_auth(self, vestorly_auth):
        """Sets the vestorly_auth of this Session.


        :param vestorly_auth: The vestorly_auth of this Session.
        :type vestorly_auth: str
        """

        self._vestorly_auth = vestorly_auth
