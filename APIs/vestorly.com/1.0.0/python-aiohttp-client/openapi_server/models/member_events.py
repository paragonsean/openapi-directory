# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.member_event import MemberEvent
from openapi_server.models.truncated_member import TruncatedMember
from openapi_server import util


class MemberEvents(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, member_events: List[MemberEvent]=None, members: List[TruncatedMember]=None):
        """MemberEvents - a model defined in OpenAPI

        :param member_events: The member_events of this MemberEvents.
        :param members: The members of this MemberEvents.
        """
        self.openapi_types = {
            'member_events': List[MemberEvent],
            'members': List[TruncatedMember]
        }

        self.attribute_map = {
            'member_events': 'member_events',
            'members': 'members'
        }

        self._member_events = member_events
        self._members = members

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberEvents':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberEvents of this MemberEvents.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def member_events(self):
        """Gets the member_events of this MemberEvents.


        :return: The member_events of this MemberEvents.
        :rtype: List[MemberEvent]
        """
        return self._member_events

    @member_events.setter
    def member_events(self, member_events):
        """Sets the member_events of this MemberEvents.


        :param member_events: The member_events of this MemberEvents.
        :type member_events: List[MemberEvent]
        """

        self._member_events = member_events

    @property
    def members(self):
        """Gets the members of this MemberEvents.


        :return: The members of this MemberEvents.
        :rtype: List[TruncatedMember]
        """
        return self._members

    @members.setter
    def members(self, members):
        """Sets the members of this MemberEvents.


        :param members: The members of this MemberEvents.
        :type members: List[TruncatedMember]
        """

        self._members = members
