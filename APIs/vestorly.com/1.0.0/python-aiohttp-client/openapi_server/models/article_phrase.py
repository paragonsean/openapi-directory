# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArticlePhrase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: int=None, length: int=None, text: str=None):
        """ArticlePhrase - a model defined in OpenAPI

        :param created_at: The created_at of this ArticlePhrase.
        :param length: The length of this ArticlePhrase.
        :param text: The text of this ArticlePhrase.
        """
        self.openapi_types = {
            'created_at': int,
            'length': int,
            'text': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'length': 'length',
            'text': 'text'
        }

        self._created_at = created_at
        self._length = length
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArticlePhrase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArticlePhrase of this ArticlePhrase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this ArticlePhrase.


        :return: The created_at of this ArticlePhrase.
        :rtype: int
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ArticlePhrase.


        :param created_at: The created_at of this ArticlePhrase.
        :type created_at: int
        """

        self._created_at = created_at

    @property
    def length(self):
        """Gets the length of this ArticlePhrase.


        :return: The length of this ArticlePhrase.
        :rtype: int
        """
        return self._length

    @length.setter
    def length(self, length):
        """Sets the length of this ArticlePhrase.


        :param length: The length of this ArticlePhrase.
        :type length: int
        """

        self._length = length

    @property
    def text(self):
        """Gets the text of this ArticlePhrase.


        :return: The text of this ArticlePhrase.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ArticlePhrase.


        :param text: The text of this ArticlePhrase.
        :type text: str
        """

        self._text = text
