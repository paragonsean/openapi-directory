# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.advisor import Advisor
from openapi_server import util


class Advisorresponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advisor: Advisor=None):
        """Advisorresponse - a model defined in OpenAPI

        :param advisor: The advisor of this Advisorresponse.
        """
        self.openapi_types = {
            'advisor': Advisor
        }

        self.attribute_map = {
            'advisor': 'advisor'
        }

        self._advisor = advisor

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Advisorresponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Advisorresponse of this Advisorresponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advisor(self):
        """Gets the advisor of this Advisorresponse.


        :return: The advisor of this Advisorresponse.
        :rtype: Advisor
        """
        return self._advisor

    @advisor.setter
    def advisor(self, advisor):
        """Sets the advisor of this Advisorresponse.


        :param advisor: The advisor of this Advisorresponse.
        :type advisor: Advisor
        """

        self._advisor = advisor
