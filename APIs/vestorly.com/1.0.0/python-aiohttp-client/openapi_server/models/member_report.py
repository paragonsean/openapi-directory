# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MemberReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, day: int=None, event_count: int=None, originator_group_id: str=None, parent_originator_id: str=None, source: str=None, type: str=None, year: int=None):
        """MemberReport - a model defined in OpenAPI

        :param day: The day of this MemberReport.
        :param event_count: The event_count of this MemberReport.
        :param originator_group_id: The originator_group_id of this MemberReport.
        :param parent_originator_id: The parent_originator_id of this MemberReport.
        :param source: The source of this MemberReport.
        :param type: The type of this MemberReport.
        :param year: The year of this MemberReport.
        """
        self.openapi_types = {
            'day': int,
            'event_count': int,
            'originator_group_id': str,
            'parent_originator_id': str,
            'source': str,
            'type': str,
            'year': int
        }

        self.attribute_map = {
            'day': 'day',
            'event_count': 'event_count',
            'originator_group_id': 'originator_group_id',
            'parent_originator_id': 'parent_originator_id',
            'source': 'source',
            'type': 'type',
            'year': 'year'
        }

        self._day = day
        self._event_count = event_count
        self._originator_group_id = originator_group_id
        self._parent_originator_id = parent_originator_id
        self._source = source
        self._type = type
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MemberReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MemberReport of this MemberReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def day(self):
        """Gets the day of this MemberReport.


        :return: The day of this MemberReport.
        :rtype: int
        """
        return self._day

    @day.setter
    def day(self, day):
        """Sets the day of this MemberReport.


        :param day: The day of this MemberReport.
        :type day: int
        """

        self._day = day

    @property
    def event_count(self):
        """Gets the event_count of this MemberReport.


        :return: The event_count of this MemberReport.
        :rtype: int
        """
        return self._event_count

    @event_count.setter
    def event_count(self, event_count):
        """Sets the event_count of this MemberReport.


        :param event_count: The event_count of this MemberReport.
        :type event_count: int
        """

        self._event_count = event_count

    @property
    def originator_group_id(self):
        """Gets the originator_group_id of this MemberReport.


        :return: The originator_group_id of this MemberReport.
        :rtype: str
        """
        return self._originator_group_id

    @originator_group_id.setter
    def originator_group_id(self, originator_group_id):
        """Sets the originator_group_id of this MemberReport.


        :param originator_group_id: The originator_group_id of this MemberReport.
        :type originator_group_id: str
        """

        self._originator_group_id = originator_group_id

    @property
    def parent_originator_id(self):
        """Gets the parent_originator_id of this MemberReport.


        :return: The parent_originator_id of this MemberReport.
        :rtype: str
        """
        return self._parent_originator_id

    @parent_originator_id.setter
    def parent_originator_id(self, parent_originator_id):
        """Sets the parent_originator_id of this MemberReport.


        :param parent_originator_id: The parent_originator_id of this MemberReport.
        :type parent_originator_id: str
        """

        self._parent_originator_id = parent_originator_id

    @property
    def source(self):
        """Gets the source of this MemberReport.


        :return: The source of this MemberReport.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this MemberReport.


        :param source: The source of this MemberReport.
        :type source: str
        """

        self._source = source

    @property
    def type(self):
        """Gets the type of this MemberReport.


        :return: The type of this MemberReport.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MemberReport.


        :param type: The type of this MemberReport.
        :type type: str
        """

        self._type = type

    @property
    def year(self):
        """Gets the year of this MemberReport.


        :return: The year of this MemberReport.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this MemberReport.


        :param year: The year of this MemberReport.
        :type year: int
        """

        self._year = year
