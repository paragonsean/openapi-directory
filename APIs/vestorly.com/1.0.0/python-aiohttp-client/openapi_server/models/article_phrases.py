# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.article_phrase import ArticlePhrase
from openapi_server import util


class ArticlePhrases(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, article_phrases: List[ArticlePhrase]=None):
        """ArticlePhrases - a model defined in OpenAPI

        :param article_phrases: The article_phrases of this ArticlePhrases.
        """
        self.openapi_types = {
            'article_phrases': List[ArticlePhrase]
        }

        self.attribute_map = {
            'article_phrases': 'article_phrases'
        }

        self._article_phrases = article_phrases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArticlePhrases':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArticlePhrases of this ArticlePhrases.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def article_phrases(self):
        """Gets the article_phrases of this ArticlePhrases.


        :return: The article_phrases of this ArticlePhrases.
        :rtype: List[ArticlePhrase]
        """
        return self._article_phrases

    @article_phrases.setter
    def article_phrases(self, article_phrases):
        """Sets the article_phrases of this ArticlePhrases.


        :param article_phrases: The article_phrases of this ArticlePhrases.
        :type article_phrases: List[ArticlePhrase]
        """

        self._article_phrases = article_phrases
