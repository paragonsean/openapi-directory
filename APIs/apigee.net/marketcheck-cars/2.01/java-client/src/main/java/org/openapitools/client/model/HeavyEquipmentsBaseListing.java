/*
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.client.model.HeavyEquipmentsBuild;
import org.openapitools.client.model.ListingNestMedia;
import org.openapitools.client.model.NestDealer;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Base heavy equipment listing
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:38.120862-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class HeavyEquipmentsBaseListing {
  public static final String SERIALIZED_NAME_BUILD = "build";
  @SerializedName(SERIALIZED_NAME_BUILD)
  private HeavyEquipmentsBuild build;

  public static final String SERIALIZED_NAME_DEALER = "dealer";
  @SerializedName(SERIALIZED_NAME_DEALER)
  private NestDealer dealer;

  public static final String SERIALIZED_NAME_DIST = "dist";
  @SerializedName(SERIALIZED_NAME_DIST)
  private Double dist;

  public static final String SERIALIZED_NAME_DP_URL = "dp_url";
  @SerializedName(SERIALIZED_NAME_DP_URL)
  private String dpUrl;

  public static final String SERIALIZED_NAME_EXTERIOR_COLOR = "exterior_color";
  @SerializedName(SERIALIZED_NAME_EXTERIOR_COLOR)
  private String exteriorColor;

  public static final String SERIALIZED_NAME_FIRST_SEEN_AT = "first_seen_at";
  @SerializedName(SERIALIZED_NAME_FIRST_SEEN_AT)
  private Integer firstSeenAt;

  public static final String SERIALIZED_NAME_FIRST_SEEN_AT_DATE = "first_seen_at_date";
  @SerializedName(SERIALIZED_NAME_FIRST_SEEN_AT_DATE)
  private String firstSeenAtDate;

  public static final String SERIALIZED_NAME_HEADING = "heading";
  @SerializedName(SERIALIZED_NAME_HEADING)
  private String heading;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_INTERIOR_COLOR = "interior_color";
  @SerializedName(SERIALIZED_NAME_INTERIOR_COLOR)
  private String interiorColor;

  public static final String SERIALIZED_NAME_INVENTORY_TYPE = "inventory_type";
  @SerializedName(SERIALIZED_NAME_INVENTORY_TYPE)
  private String inventoryType;

  public static final String SERIALIZED_NAME_LAST_SEEN_AT = "last_seen_at";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AT)
  private Integer lastSeenAt;

  public static final String SERIALIZED_NAME_LAST_SEEN_AT_DATE = "last_seen_at_date";
  @SerializedName(SERIALIZED_NAME_LAST_SEEN_AT_DATE)
  private String lastSeenAtDate;

  public static final String SERIALIZED_NAME_MEDIA = "media";
  @SerializedName(SERIALIZED_NAME_MEDIA)
  private ListingNestMedia media;

  public static final String SERIALIZED_NAME_MILES = "miles";
  @SerializedName(SERIALIZED_NAME_MILES)
  private Integer miles;

  public static final String SERIALIZED_NAME_MSRP = "msrp";
  @SerializedName(SERIALIZED_NAME_MSRP)
  private Integer msrp;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Integer price;

  public static final String SERIALIZED_NAME_SCRAPED_AT = "scraped_at";
  @SerializedName(SERIALIZED_NAME_SCRAPED_AT)
  private BigDecimal scrapedAt;

  public static final String SERIALIZED_NAME_SCRAPED_AT_DATE = "scraped_at_date";
  @SerializedName(SERIALIZED_NAME_SCRAPED_AT_DATE)
  private String scrapedAtDate;

  public static final String SERIALIZED_NAME_SELLER_TYPE = "seller_type";
  @SerializedName(SERIALIZED_NAME_SELLER_TYPE)
  private String sellerType;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_STOCK_NO = "stock_no";
  @SerializedName(SERIALIZED_NAME_STOCK_NO)
  private String stockNo;

  public static final String SERIALIZED_NAME_VIN = "vin";
  @SerializedName(SERIALIZED_NAME_VIN)
  private String vin;

  public HeavyEquipmentsBaseListing() {
  }

  public HeavyEquipmentsBaseListing build(HeavyEquipmentsBuild build) {
    this.build = build;
    return this;
  }

  /**
   * Get build
   * @return build
   */
  @javax.annotation.Nullable
  public HeavyEquipmentsBuild getBuild() {
    return build;
  }

  public void setBuild(HeavyEquipmentsBuild build) {
    this.build = build;
  }


  public HeavyEquipmentsBaseListing dealer(NestDealer dealer) {
    this.dealer = dealer;
    return this;
  }

  /**
   * Get dealer
   * @return dealer
   */
  @javax.annotation.Nullable
  public NestDealer getDealer() {
    return dealer;
  }

  public void setDealer(NestDealer dealer) {
    this.dealer = dealer;
  }


  public HeavyEquipmentsBaseListing dist(Double dist) {
    this.dist = dist;
    return this;
  }

  /**
   * Distance of the quipments&#39;s location from the specified user lcoation
   * @return dist
   */
  @javax.annotation.Nullable
  public Double getDist() {
    return dist;
  }

  public void setDist(Double dist) {
    this.dist = dist;
  }


  public HeavyEquipmentsBaseListing dpUrl(String dpUrl) {
    this.dpUrl = dpUrl;
    return this;
  }

  /**
   * Details Page url of the specific heavy equipment
   * @return dpUrl
   */
  @javax.annotation.Nullable
  public String getDpUrl() {
    return dpUrl;
  }

  public void setDpUrl(String dpUrl) {
    this.dpUrl = dpUrl;
  }


  public HeavyEquipmentsBaseListing exteriorColor(String exteriorColor) {
    this.exteriorColor = exteriorColor;
    return this;
  }

  /**
   * Exterior color of the heavy equipment
   * @return exteriorColor
   */
  @javax.annotation.Nullable
  public String getExteriorColor() {
    return exteriorColor;
  }

  public void setExteriorColor(String exteriorColor) {
    this.exteriorColor = exteriorColor;
  }


  public HeavyEquipmentsBaseListing firstSeenAt(Integer firstSeenAt) {
    this.firstSeenAt = firstSeenAt;
    return this;
  }

  /**
   * Listing first seen at first scraped timestamp
   * @return firstSeenAt
   */
  @javax.annotation.Nullable
  public Integer getFirstSeenAt() {
    return firstSeenAt;
  }

  public void setFirstSeenAt(Integer firstSeenAt) {
    this.firstSeenAt = firstSeenAt;
  }


  public HeavyEquipmentsBaseListing firstSeenAtDate(String firstSeenAtDate) {
    this.firstSeenAtDate = firstSeenAtDate;
    return this;
  }

  /**
   * Listing first seen at first scraped date
   * @return firstSeenAtDate
   */
  @javax.annotation.Nullable
  public String getFirstSeenAtDate() {
    return firstSeenAtDate;
  }

  public void setFirstSeenAtDate(String firstSeenAtDate) {
    this.firstSeenAtDate = firstSeenAtDate;
  }


  public HeavyEquipmentsBaseListing heading(String heading) {
    this.heading = heading;
    return this;
  }

  /**
   * Listing title as displayed on the source website
   * @return heading
   */
  @javax.annotation.Nullable
  public String getHeading() {
    return heading;
  }

  public void setHeading(String heading) {
    this.heading = heading;
  }


  public HeavyEquipmentsBaseListing id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique identifier representing a specific listing from the Marketcheck database
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public HeavyEquipmentsBaseListing interiorColor(String interiorColor) {
    this.interiorColor = interiorColor;
    return this;
  }

  /**
   * Interior color of the heavy equipment
   * @return interiorColor
   */
  @javax.annotation.Nullable
  public String getInteriorColor() {
    return interiorColor;
  }

  public void setInteriorColor(String interiorColor) {
    this.interiorColor = interiorColor;
  }


  public HeavyEquipmentsBaseListing inventoryType(String inventoryType) {
    this.inventoryType = inventoryType;
    return this;
  }

  /**
   * Inventory type of heavy equipment
   * @return inventoryType
   */
  @javax.annotation.Nullable
  public String getInventoryType() {
    return inventoryType;
  }

  public void setInventoryType(String inventoryType) {
    this.inventoryType = inventoryType;
  }


  public HeavyEquipmentsBaseListing lastSeenAt(Integer lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
    return this;
  }

  /**
   * Listing last seen at (most recent) timestamp
   * @return lastSeenAt
   */
  @javax.annotation.Nullable
  public Integer getLastSeenAt() {
    return lastSeenAt;
  }

  public void setLastSeenAt(Integer lastSeenAt) {
    this.lastSeenAt = lastSeenAt;
  }


  public HeavyEquipmentsBaseListing lastSeenAtDate(String lastSeenAtDate) {
    this.lastSeenAtDate = lastSeenAtDate;
    return this;
  }

  /**
   * Listing last seen at (most recent) date
   * @return lastSeenAtDate
   */
  @javax.annotation.Nullable
  public String getLastSeenAtDate() {
    return lastSeenAtDate;
  }

  public void setLastSeenAtDate(String lastSeenAtDate) {
    this.lastSeenAtDate = lastSeenAtDate;
  }


  public HeavyEquipmentsBaseListing media(ListingNestMedia media) {
    this.media = media;
    return this;
  }

  /**
   * Get media
   * @return media
   */
  @javax.annotation.Nullable
  public ListingNestMedia getMedia() {
    return media;
  }

  public void setMedia(ListingNestMedia media) {
    this.media = media;
  }


  public HeavyEquipmentsBaseListing miles(Integer miles) {
    this.miles = miles;
    return this;
  }

  /**
   * Odometer reading / reported miles usage for the heavy equipment
   * @return miles
   */
  @javax.annotation.Nullable
  public Integer getMiles() {
    return miles;
  }

  public void setMiles(Integer miles) {
    this.miles = miles;
  }


  public HeavyEquipmentsBaseListing msrp(Integer msrp) {
    this.msrp = msrp;
    return this;
  }

  /**
   * MSRP for the heavy equipment
   * @return msrp
   */
  @javax.annotation.Nullable
  public Integer getMsrp() {
    return msrp;
  }

  public void setMsrp(Integer msrp) {
    this.msrp = msrp;
  }


  public HeavyEquipmentsBaseListing price(Integer price) {
    this.price = price;
    return this;
  }

  /**
   * Asking price for the heavy equipment
   * @return price
   */
  @javax.annotation.Nullable
  public Integer getPrice() {
    return price;
  }

  public void setPrice(Integer price) {
    this.price = price;
  }


  public HeavyEquipmentsBaseListing scrapedAt(BigDecimal scrapedAt) {
    this.scrapedAt = scrapedAt;
    return this;
  }

  /**
   * Listing last seen at date timestamp
   * @return scrapedAt
   */
  @javax.annotation.Nullable
  public BigDecimal getScrapedAt() {
    return scrapedAt;
  }

  public void setScrapedAt(BigDecimal scrapedAt) {
    this.scrapedAt = scrapedAt;
  }


  public HeavyEquipmentsBaseListing scrapedAtDate(String scrapedAtDate) {
    this.scrapedAtDate = scrapedAtDate;
    return this;
  }

  /**
   * Listing last seen at date
   * @return scrapedAtDate
   */
  @javax.annotation.Nullable
  public String getScrapedAtDate() {
    return scrapedAtDate;
  }

  public void setScrapedAtDate(String scrapedAtDate) {
    this.scrapedAtDate = scrapedAtDate;
  }


  public HeavyEquipmentsBaseListing sellerType(String sellerType) {
    this.sellerType = sellerType;
    return this;
  }

  /**
   * Seller type for the heavy equipment
   * @return sellerType
   */
  @javax.annotation.Nullable
  public String getSellerType() {
    return sellerType;
  }

  public void setSellerType(String sellerType) {
    this.sellerType = sellerType;
  }


  public HeavyEquipmentsBaseListing source(String source) {
    this.source = source;
    return this;
  }

  /**
   * Source domain of the listing
   * @return source
   */
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }


  public HeavyEquipmentsBaseListing stockNo(String stockNo) {
    this.stockNo = stockNo;
    return this;
  }

  /**
   * Stock number of heavy equipment in dealers inventory
   * @return stockNo
   */
  @javax.annotation.Nullable
  public String getStockNo() {
    return stockNo;
  }

  public void setStockNo(String stockNo) {
    this.stockNo = stockNo;
  }


  public HeavyEquipmentsBaseListing vin(String vin) {
    this.vin = vin;
    return this;
  }

  /**
   * VIN for the heavy equipment
   * @return vin
   */
  @javax.annotation.Nullable
  public String getVin() {
    return vin;
  }

  public void setVin(String vin) {
    this.vin = vin;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HeavyEquipmentsBaseListing heavyEquipmentsBaseListing = (HeavyEquipmentsBaseListing) o;
    return Objects.equals(this.build, heavyEquipmentsBaseListing.build) &&
        Objects.equals(this.dealer, heavyEquipmentsBaseListing.dealer) &&
        Objects.equals(this.dist, heavyEquipmentsBaseListing.dist) &&
        Objects.equals(this.dpUrl, heavyEquipmentsBaseListing.dpUrl) &&
        Objects.equals(this.exteriorColor, heavyEquipmentsBaseListing.exteriorColor) &&
        Objects.equals(this.firstSeenAt, heavyEquipmentsBaseListing.firstSeenAt) &&
        Objects.equals(this.firstSeenAtDate, heavyEquipmentsBaseListing.firstSeenAtDate) &&
        Objects.equals(this.heading, heavyEquipmentsBaseListing.heading) &&
        Objects.equals(this.id, heavyEquipmentsBaseListing.id) &&
        Objects.equals(this.interiorColor, heavyEquipmentsBaseListing.interiorColor) &&
        Objects.equals(this.inventoryType, heavyEquipmentsBaseListing.inventoryType) &&
        Objects.equals(this.lastSeenAt, heavyEquipmentsBaseListing.lastSeenAt) &&
        Objects.equals(this.lastSeenAtDate, heavyEquipmentsBaseListing.lastSeenAtDate) &&
        Objects.equals(this.media, heavyEquipmentsBaseListing.media) &&
        Objects.equals(this.miles, heavyEquipmentsBaseListing.miles) &&
        Objects.equals(this.msrp, heavyEquipmentsBaseListing.msrp) &&
        Objects.equals(this.price, heavyEquipmentsBaseListing.price) &&
        Objects.equals(this.scrapedAt, heavyEquipmentsBaseListing.scrapedAt) &&
        Objects.equals(this.scrapedAtDate, heavyEquipmentsBaseListing.scrapedAtDate) &&
        Objects.equals(this.sellerType, heavyEquipmentsBaseListing.sellerType) &&
        Objects.equals(this.source, heavyEquipmentsBaseListing.source) &&
        Objects.equals(this.stockNo, heavyEquipmentsBaseListing.stockNo) &&
        Objects.equals(this.vin, heavyEquipmentsBaseListing.vin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(build, dealer, dist, dpUrl, exteriorColor, firstSeenAt, firstSeenAtDate, heading, id, interiorColor, inventoryType, lastSeenAt, lastSeenAtDate, media, miles, msrp, price, scrapedAt, scrapedAtDate, sellerType, source, stockNo, vin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HeavyEquipmentsBaseListing {\n");
    sb.append("    build: ").append(toIndentedString(build)).append("\n");
    sb.append("    dealer: ").append(toIndentedString(dealer)).append("\n");
    sb.append("    dist: ").append(toIndentedString(dist)).append("\n");
    sb.append("    dpUrl: ").append(toIndentedString(dpUrl)).append("\n");
    sb.append("    exteriorColor: ").append(toIndentedString(exteriorColor)).append("\n");
    sb.append("    firstSeenAt: ").append(toIndentedString(firstSeenAt)).append("\n");
    sb.append("    firstSeenAtDate: ").append(toIndentedString(firstSeenAtDate)).append("\n");
    sb.append("    heading: ").append(toIndentedString(heading)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    interiorColor: ").append(toIndentedString(interiorColor)).append("\n");
    sb.append("    inventoryType: ").append(toIndentedString(inventoryType)).append("\n");
    sb.append("    lastSeenAt: ").append(toIndentedString(lastSeenAt)).append("\n");
    sb.append("    lastSeenAtDate: ").append(toIndentedString(lastSeenAtDate)).append("\n");
    sb.append("    media: ").append(toIndentedString(media)).append("\n");
    sb.append("    miles: ").append(toIndentedString(miles)).append("\n");
    sb.append("    msrp: ").append(toIndentedString(msrp)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    scrapedAt: ").append(toIndentedString(scrapedAt)).append("\n");
    sb.append("    scrapedAtDate: ").append(toIndentedString(scrapedAtDate)).append("\n");
    sb.append("    sellerType: ").append(toIndentedString(sellerType)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    stockNo: ").append(toIndentedString(stockNo)).append("\n");
    sb.append("    vin: ").append(toIndentedString(vin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("build");
    openapiFields.add("dealer");
    openapiFields.add("dist");
    openapiFields.add("dp_url");
    openapiFields.add("exterior_color");
    openapiFields.add("first_seen_at");
    openapiFields.add("first_seen_at_date");
    openapiFields.add("heading");
    openapiFields.add("id");
    openapiFields.add("interior_color");
    openapiFields.add("inventory_type");
    openapiFields.add("last_seen_at");
    openapiFields.add("last_seen_at_date");
    openapiFields.add("media");
    openapiFields.add("miles");
    openapiFields.add("msrp");
    openapiFields.add("price");
    openapiFields.add("scraped_at");
    openapiFields.add("scraped_at_date");
    openapiFields.add("seller_type");
    openapiFields.add("source");
    openapiFields.add("stock_no");
    openapiFields.add("vin");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to HeavyEquipmentsBaseListing
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!HeavyEquipmentsBaseListing.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in HeavyEquipmentsBaseListing is not found in the empty JSON string", HeavyEquipmentsBaseListing.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!HeavyEquipmentsBaseListing.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `HeavyEquipmentsBaseListing` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `build`
      if (jsonObj.get("build") != null && !jsonObj.get("build").isJsonNull()) {
        HeavyEquipmentsBuild.validateJsonElement(jsonObj.get("build"));
      }
      // validate the optional field `dealer`
      if (jsonObj.get("dealer") != null && !jsonObj.get("dealer").isJsonNull()) {
        NestDealer.validateJsonElement(jsonObj.get("dealer"));
      }
      if ((jsonObj.get("dp_url") != null && !jsonObj.get("dp_url").isJsonNull()) && !jsonObj.get("dp_url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `dp_url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("dp_url").toString()));
      }
      if ((jsonObj.get("exterior_color") != null && !jsonObj.get("exterior_color").isJsonNull()) && !jsonObj.get("exterior_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exterior_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exterior_color").toString()));
      }
      if ((jsonObj.get("first_seen_at_date") != null && !jsonObj.get("first_seen_at_date").isJsonNull()) && !jsonObj.get("first_seen_at_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_seen_at_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_seen_at_date").toString()));
      }
      if ((jsonObj.get("heading") != null && !jsonObj.get("heading").isJsonNull()) && !jsonObj.get("heading").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `heading` to be a primitive type in the JSON string but got `%s`", jsonObj.get("heading").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("interior_color") != null && !jsonObj.get("interior_color").isJsonNull()) && !jsonObj.get("interior_color").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `interior_color` to be a primitive type in the JSON string but got `%s`", jsonObj.get("interior_color").toString()));
      }
      if ((jsonObj.get("inventory_type") != null && !jsonObj.get("inventory_type").isJsonNull()) && !jsonObj.get("inventory_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `inventory_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("inventory_type").toString()));
      }
      if ((jsonObj.get("last_seen_at_date") != null && !jsonObj.get("last_seen_at_date").isJsonNull()) && !jsonObj.get("last_seen_at_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_seen_at_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_seen_at_date").toString()));
      }
      // validate the optional field `media`
      if (jsonObj.get("media") != null && !jsonObj.get("media").isJsonNull()) {
        ListingNestMedia.validateJsonElement(jsonObj.get("media"));
      }
      if ((jsonObj.get("scraped_at_date") != null && !jsonObj.get("scraped_at_date").isJsonNull()) && !jsonObj.get("scraped_at_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `scraped_at_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("scraped_at_date").toString()));
      }
      if ((jsonObj.get("seller_type") != null && !jsonObj.get("seller_type").isJsonNull()) && !jsonObj.get("seller_type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `seller_type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("seller_type").toString()));
      }
      if ((jsonObj.get("source") != null && !jsonObj.get("source").isJsonNull()) && !jsonObj.get("source").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `source` to be a primitive type in the JSON string but got `%s`", jsonObj.get("source").toString()));
      }
      if ((jsonObj.get("stock_no") != null && !jsonObj.get("stock_no").isJsonNull()) && !jsonObj.get("stock_no").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stock_no` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stock_no").toString()));
      }
      if ((jsonObj.get("vin") != null && !jsonObj.get("vin").isJsonNull()) && !jsonObj.get("vin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `vin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("vin").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!HeavyEquipmentsBaseListing.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'HeavyEquipmentsBaseListing' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<HeavyEquipmentsBaseListing> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(HeavyEquipmentsBaseListing.class));

       return (TypeAdapter<T>) new TypeAdapter<HeavyEquipmentsBaseListing>() {
           @Override
           public void write(JsonWriter out, HeavyEquipmentsBaseListing value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public HeavyEquipmentsBaseListing read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of HeavyEquipmentsBaseListing given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of HeavyEquipmentsBaseListing
   * @throws IOException if the JSON string is invalid with respect to HeavyEquipmentsBaseListing
   */
  public static HeavyEquipmentsBaseListing fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, HeavyEquipmentsBaseListing.class);
  }

  /**
   * Convert an instance of HeavyEquipmentsBaseListing to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

