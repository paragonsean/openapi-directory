/*
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CompetitorsSameCars
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:38.120862-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompetitorsSameCars {
  public static final String SERIALIZED_NAME_AVG_MARKET_VALUE = "avg_market_value";
  @SerializedName(SERIALIZED_NAME_AVG_MARKET_VALUE)
  private BigDecimal avgMarketValue;

  public static final String SERIALIZED_NAME_AVG_MILES = "avg_miles";
  @SerializedName(SERIALIZED_NAME_AVG_MILES)
  private BigDecimal avgMiles;

  public static final String SERIALIZED_NAME_AVG_PRICE = "avg_price";
  @SerializedName(SERIALIZED_NAME_AVG_PRICE)
  private BigDecimal avgPrice;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public CompetitorsSameCars() {
  }

  public CompetitorsSameCars avgMarketValue(BigDecimal avgMarketValue) {
    this.avgMarketValue = avgMarketValue;
    return this;
  }

  /**
   * Estimated market value of year make model combination
   * @return avgMarketValue
   */
  @javax.annotation.Nullable
  public BigDecimal getAvgMarketValue() {
    return avgMarketValue;
  }

  public void setAvgMarketValue(BigDecimal avgMarketValue) {
    this.avgMarketValue = avgMarketValue;
  }


  public CompetitorsSameCars avgMiles(BigDecimal avgMiles) {
    this.avgMiles = avgMiles;
    return this;
  }

  /**
   * Mileage of year make model combination
   * @return avgMiles
   */
  @javax.annotation.Nullable
  public BigDecimal getAvgMiles() {
    return avgMiles;
  }

  public void setAvgMiles(BigDecimal avgMiles) {
    this.avgMiles = avgMiles;
  }


  public CompetitorsSameCars avgPrice(BigDecimal avgPrice) {
    this.avgPrice = avgPrice;
    return this;
  }

  /**
   * Price of year make model combination
   * @return avgPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getAvgPrice() {
    return avgPrice;
  }

  public void setAvgPrice(BigDecimal avgPrice) {
    this.avgPrice = avgPrice;
  }


  public CompetitorsSameCars name(String name) {
    this.name = name;
    return this;
  }

  /**
   * ymm_comb_name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompetitorsSameCars competitorsSameCars = (CompetitorsSameCars) o;
    return Objects.equals(this.avgMarketValue, competitorsSameCars.avgMarketValue) &&
        Objects.equals(this.avgMiles, competitorsSameCars.avgMiles) &&
        Objects.equals(this.avgPrice, competitorsSameCars.avgPrice) &&
        Objects.equals(this.name, competitorsSameCars.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avgMarketValue, avgMiles, avgPrice, name);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompetitorsSameCars {\n");
    sb.append("    avgMarketValue: ").append(toIndentedString(avgMarketValue)).append("\n");
    sb.append("    avgMiles: ").append(toIndentedString(avgMiles)).append("\n");
    sb.append("    avgPrice: ").append(toIndentedString(avgPrice)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("avg_market_value");
    openapiFields.add("avg_miles");
    openapiFields.add("avg_price");
    openapiFields.add("name");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompetitorsSameCars
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompetitorsSameCars.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompetitorsSameCars is not found in the empty JSON string", CompetitorsSameCars.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompetitorsSameCars.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompetitorsSameCars` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompetitorsSameCars.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompetitorsSameCars' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompetitorsSameCars> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompetitorsSameCars.class));

       return (TypeAdapter<T>) new TypeAdapter<CompetitorsSameCars>() {
           @Override
           public void write(JsonWriter out, CompetitorsSameCars value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompetitorsSameCars read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompetitorsSameCars given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompetitorsSameCars
   * @throws IOException if the JSON string is invalid with respect to CompetitorsSameCars
   */
  public static CompetitorsSameCars fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompetitorsSameCars.class);
  }

  /**
   * Convert an instance of CompetitorsSameCars to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

