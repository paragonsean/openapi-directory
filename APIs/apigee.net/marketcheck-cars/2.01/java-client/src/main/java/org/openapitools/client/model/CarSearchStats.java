/*
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.StatsItem;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CarSearchStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:40:38.120862-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CarSearchStats {
  public static final String SERIALIZED_NAME_DOM = "dom";
  @SerializedName(SERIALIZED_NAME_DOM)
  private StatsItem dom;

  public static final String SERIALIZED_NAME_DOM180 = "dom_180";
  @SerializedName(SERIALIZED_NAME_DOM180)
  private StatsItem dom180;

  public static final String SERIALIZED_NAME_DOM_ACTIVE = "dom_active";
  @SerializedName(SERIALIZED_NAME_DOM_ACTIVE)
  private StatsItem domActive;

  public static final String SERIALIZED_NAME_FINANCE_DOWN_PAYMENT = "finance_down_payment";
  @SerializedName(SERIALIZED_NAME_FINANCE_DOWN_PAYMENT)
  private StatsItem financeDownPayment;

  public static final String SERIALIZED_NAME_FINANCE_DOWN_PAYMENT_PER = "finance_down_payment_per";
  @SerializedName(SERIALIZED_NAME_FINANCE_DOWN_PAYMENT_PER)
  private StatsItem financeDownPaymentPer;

  public static final String SERIALIZED_NAME_FINANCE_EMP = "finance_emp";
  @SerializedName(SERIALIZED_NAME_FINANCE_EMP)
  private StatsItem financeEmp;

  public static final String SERIALIZED_NAME_FINANCE_LOAN_APR = "finance_loan_apr";
  @SerializedName(SERIALIZED_NAME_FINANCE_LOAN_APR)
  private StatsItem financeLoanApr;

  public static final String SERIALIZED_NAME_FINANCE_LOAN_TERM = "finance_loan_term";
  @SerializedName(SERIALIZED_NAME_FINANCE_LOAN_TERM)
  private StatsItem financeLoanTerm;

  public static final String SERIALIZED_NAME_LEASE_DOWN_PAYMENT = "lease_down_payment";
  @SerializedName(SERIALIZED_NAME_LEASE_DOWN_PAYMENT)
  private StatsItem leaseDownPayment;

  public static final String SERIALIZED_NAME_LEASE_EMP = "lease_emp";
  @SerializedName(SERIALIZED_NAME_LEASE_EMP)
  private StatsItem leaseEmp;

  public static final String SERIALIZED_NAME_LEASE_TERM = "lease_term";
  @SerializedName(SERIALIZED_NAME_LEASE_TERM)
  private StatsItem leaseTerm;

  public static final String SERIALIZED_NAME_MILES = "miles";
  @SerializedName(SERIALIZED_NAME_MILES)
  private StatsItem miles;

  public static final String SERIALIZED_NAME_MSRP = "msrp";
  @SerializedName(SERIALIZED_NAME_MSRP)
  private StatsItem msrp;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private StatsItem price;

  public CarSearchStats() {
  }

  public CarSearchStats dom(StatsItem dom) {
    this.dom = dom;
    return this;
  }

  /**
   * Get dom
   * @return dom
   */
  @javax.annotation.Nullable
  public StatsItem getDom() {
    return dom;
  }

  public void setDom(StatsItem dom) {
    this.dom = dom;
  }


  public CarSearchStats dom180(StatsItem dom180) {
    this.dom180 = dom180;
    return this;
  }

  /**
   * Get dom180
   * @return dom180
   */
  @javax.annotation.Nullable
  public StatsItem getDom180() {
    return dom180;
  }

  public void setDom180(StatsItem dom180) {
    this.dom180 = dom180;
  }


  public CarSearchStats domActive(StatsItem domActive) {
    this.domActive = domActive;
    return this;
  }

  /**
   * Get domActive
   * @return domActive
   */
  @javax.annotation.Nullable
  public StatsItem getDomActive() {
    return domActive;
  }

  public void setDomActive(StatsItem domActive) {
    this.domActive = domActive;
  }


  public CarSearchStats financeDownPayment(StatsItem financeDownPayment) {
    this.financeDownPayment = financeDownPayment;
    return this;
  }

  /**
   * Get financeDownPayment
   * @return financeDownPayment
   */
  @javax.annotation.Nullable
  public StatsItem getFinanceDownPayment() {
    return financeDownPayment;
  }

  public void setFinanceDownPayment(StatsItem financeDownPayment) {
    this.financeDownPayment = financeDownPayment;
  }


  public CarSearchStats financeDownPaymentPer(StatsItem financeDownPaymentPer) {
    this.financeDownPaymentPer = financeDownPaymentPer;
    return this;
  }

  /**
   * Get financeDownPaymentPer
   * @return financeDownPaymentPer
   */
  @javax.annotation.Nullable
  public StatsItem getFinanceDownPaymentPer() {
    return financeDownPaymentPer;
  }

  public void setFinanceDownPaymentPer(StatsItem financeDownPaymentPer) {
    this.financeDownPaymentPer = financeDownPaymentPer;
  }


  public CarSearchStats financeEmp(StatsItem financeEmp) {
    this.financeEmp = financeEmp;
    return this;
  }

  /**
   * Get financeEmp
   * @return financeEmp
   */
  @javax.annotation.Nullable
  public StatsItem getFinanceEmp() {
    return financeEmp;
  }

  public void setFinanceEmp(StatsItem financeEmp) {
    this.financeEmp = financeEmp;
  }


  public CarSearchStats financeLoanApr(StatsItem financeLoanApr) {
    this.financeLoanApr = financeLoanApr;
    return this;
  }

  /**
   * Get financeLoanApr
   * @return financeLoanApr
   */
  @javax.annotation.Nullable
  public StatsItem getFinanceLoanApr() {
    return financeLoanApr;
  }

  public void setFinanceLoanApr(StatsItem financeLoanApr) {
    this.financeLoanApr = financeLoanApr;
  }


  public CarSearchStats financeLoanTerm(StatsItem financeLoanTerm) {
    this.financeLoanTerm = financeLoanTerm;
    return this;
  }

  /**
   * Get financeLoanTerm
   * @return financeLoanTerm
   */
  @javax.annotation.Nullable
  public StatsItem getFinanceLoanTerm() {
    return financeLoanTerm;
  }

  public void setFinanceLoanTerm(StatsItem financeLoanTerm) {
    this.financeLoanTerm = financeLoanTerm;
  }


  public CarSearchStats leaseDownPayment(StatsItem leaseDownPayment) {
    this.leaseDownPayment = leaseDownPayment;
    return this;
  }

  /**
   * Get leaseDownPayment
   * @return leaseDownPayment
   */
  @javax.annotation.Nullable
  public StatsItem getLeaseDownPayment() {
    return leaseDownPayment;
  }

  public void setLeaseDownPayment(StatsItem leaseDownPayment) {
    this.leaseDownPayment = leaseDownPayment;
  }


  public CarSearchStats leaseEmp(StatsItem leaseEmp) {
    this.leaseEmp = leaseEmp;
    return this;
  }

  /**
   * Get leaseEmp
   * @return leaseEmp
   */
  @javax.annotation.Nullable
  public StatsItem getLeaseEmp() {
    return leaseEmp;
  }

  public void setLeaseEmp(StatsItem leaseEmp) {
    this.leaseEmp = leaseEmp;
  }


  public CarSearchStats leaseTerm(StatsItem leaseTerm) {
    this.leaseTerm = leaseTerm;
    return this;
  }

  /**
   * Get leaseTerm
   * @return leaseTerm
   */
  @javax.annotation.Nullable
  public StatsItem getLeaseTerm() {
    return leaseTerm;
  }

  public void setLeaseTerm(StatsItem leaseTerm) {
    this.leaseTerm = leaseTerm;
  }


  public CarSearchStats miles(StatsItem miles) {
    this.miles = miles;
    return this;
  }

  /**
   * Get miles
   * @return miles
   */
  @javax.annotation.Nullable
  public StatsItem getMiles() {
    return miles;
  }

  public void setMiles(StatsItem miles) {
    this.miles = miles;
  }


  public CarSearchStats msrp(StatsItem msrp) {
    this.msrp = msrp;
    return this;
  }

  /**
   * Get msrp
   * @return msrp
   */
  @javax.annotation.Nullable
  public StatsItem getMsrp() {
    return msrp;
  }

  public void setMsrp(StatsItem msrp) {
    this.msrp = msrp;
  }


  public CarSearchStats price(StatsItem price) {
    this.price = price;
    return this;
  }

  /**
   * Get price
   * @return price
   */
  @javax.annotation.Nullable
  public StatsItem getPrice() {
    return price;
  }

  public void setPrice(StatsItem price) {
    this.price = price;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CarSearchStats carSearchStats = (CarSearchStats) o;
    return Objects.equals(this.dom, carSearchStats.dom) &&
        Objects.equals(this.dom180, carSearchStats.dom180) &&
        Objects.equals(this.domActive, carSearchStats.domActive) &&
        Objects.equals(this.financeDownPayment, carSearchStats.financeDownPayment) &&
        Objects.equals(this.financeDownPaymentPer, carSearchStats.financeDownPaymentPer) &&
        Objects.equals(this.financeEmp, carSearchStats.financeEmp) &&
        Objects.equals(this.financeLoanApr, carSearchStats.financeLoanApr) &&
        Objects.equals(this.financeLoanTerm, carSearchStats.financeLoanTerm) &&
        Objects.equals(this.leaseDownPayment, carSearchStats.leaseDownPayment) &&
        Objects.equals(this.leaseEmp, carSearchStats.leaseEmp) &&
        Objects.equals(this.leaseTerm, carSearchStats.leaseTerm) &&
        Objects.equals(this.miles, carSearchStats.miles) &&
        Objects.equals(this.msrp, carSearchStats.msrp) &&
        Objects.equals(this.price, carSearchStats.price);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dom, dom180, domActive, financeDownPayment, financeDownPaymentPer, financeEmp, financeLoanApr, financeLoanTerm, leaseDownPayment, leaseEmp, leaseTerm, miles, msrp, price);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CarSearchStats {\n");
    sb.append("    dom: ").append(toIndentedString(dom)).append("\n");
    sb.append("    dom180: ").append(toIndentedString(dom180)).append("\n");
    sb.append("    domActive: ").append(toIndentedString(domActive)).append("\n");
    sb.append("    financeDownPayment: ").append(toIndentedString(financeDownPayment)).append("\n");
    sb.append("    financeDownPaymentPer: ").append(toIndentedString(financeDownPaymentPer)).append("\n");
    sb.append("    financeEmp: ").append(toIndentedString(financeEmp)).append("\n");
    sb.append("    financeLoanApr: ").append(toIndentedString(financeLoanApr)).append("\n");
    sb.append("    financeLoanTerm: ").append(toIndentedString(financeLoanTerm)).append("\n");
    sb.append("    leaseDownPayment: ").append(toIndentedString(leaseDownPayment)).append("\n");
    sb.append("    leaseEmp: ").append(toIndentedString(leaseEmp)).append("\n");
    sb.append("    leaseTerm: ").append(toIndentedString(leaseTerm)).append("\n");
    sb.append("    miles: ").append(toIndentedString(miles)).append("\n");
    sb.append("    msrp: ").append(toIndentedString(msrp)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("dom");
    openapiFields.add("dom_180");
    openapiFields.add("dom_active");
    openapiFields.add("finance_down_payment");
    openapiFields.add("finance_down_payment_per");
    openapiFields.add("finance_emp");
    openapiFields.add("finance_loan_apr");
    openapiFields.add("finance_loan_term");
    openapiFields.add("lease_down_payment");
    openapiFields.add("lease_emp");
    openapiFields.add("lease_term");
    openapiFields.add("miles");
    openapiFields.add("msrp");
    openapiFields.add("price");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CarSearchStats
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CarSearchStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CarSearchStats is not found in the empty JSON string", CarSearchStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CarSearchStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CarSearchStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `dom`
      if (jsonObj.get("dom") != null && !jsonObj.get("dom").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("dom"));
      }
      // validate the optional field `dom_180`
      if (jsonObj.get("dom_180") != null && !jsonObj.get("dom_180").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("dom_180"));
      }
      // validate the optional field `dom_active`
      if (jsonObj.get("dom_active") != null && !jsonObj.get("dom_active").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("dom_active"));
      }
      // validate the optional field `finance_down_payment`
      if (jsonObj.get("finance_down_payment") != null && !jsonObj.get("finance_down_payment").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("finance_down_payment"));
      }
      // validate the optional field `finance_down_payment_per`
      if (jsonObj.get("finance_down_payment_per") != null && !jsonObj.get("finance_down_payment_per").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("finance_down_payment_per"));
      }
      // validate the optional field `finance_emp`
      if (jsonObj.get("finance_emp") != null && !jsonObj.get("finance_emp").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("finance_emp"));
      }
      // validate the optional field `finance_loan_apr`
      if (jsonObj.get("finance_loan_apr") != null && !jsonObj.get("finance_loan_apr").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("finance_loan_apr"));
      }
      // validate the optional field `finance_loan_term`
      if (jsonObj.get("finance_loan_term") != null && !jsonObj.get("finance_loan_term").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("finance_loan_term"));
      }
      // validate the optional field `lease_down_payment`
      if (jsonObj.get("lease_down_payment") != null && !jsonObj.get("lease_down_payment").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("lease_down_payment"));
      }
      // validate the optional field `lease_emp`
      if (jsonObj.get("lease_emp") != null && !jsonObj.get("lease_emp").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("lease_emp"));
      }
      // validate the optional field `lease_term`
      if (jsonObj.get("lease_term") != null && !jsonObj.get("lease_term").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("lease_term"));
      }
      // validate the optional field `miles`
      if (jsonObj.get("miles") != null && !jsonObj.get("miles").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("miles"));
      }
      // validate the optional field `msrp`
      if (jsonObj.get("msrp") != null && !jsonObj.get("msrp").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("msrp"));
      }
      // validate the optional field `price`
      if (jsonObj.get("price") != null && !jsonObj.get("price").isJsonNull()) {
        StatsItem.validateJsonElement(jsonObj.get("price"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CarSearchStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CarSearchStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CarSearchStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CarSearchStats.class));

       return (TypeAdapter<T>) new TypeAdapter<CarSearchStats>() {
           @Override
           public void write(JsonWriter out, CarSearchStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CarSearchStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CarSearchStats given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CarSearchStats
   * @throws IOException if the JSON string is invalid with respect to CarSearchStats
   */
  public static CarSearchStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CarSearchStats.class);
  }

  /**
   * Convert an instance of CarSearchStats to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

