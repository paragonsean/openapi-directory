/*
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Dealer;
import org.openapitools.client.model.DealersResponse;
import org.openapitools.client.model.Error;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DealerApiApi
 */
@Disabled
public class DealerApiApiTest {

    private final DealerApiApi api = new DealerApiApi();

    /**
     * Dealer by id
     *
     * Get a particular dealer&#39;s information by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealerCarUkIdGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        Boolean provider = null;
        Dealer response = api.dealerCarUkIdGet(id, apiKey, provider);
        // TODO: test validations
    }

    /**
     * Dealer by id
     *
     * Get a particular dealer&#39;s information by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealerHeavyEquipmentIdGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        Boolean provider = null;
        Dealer response = api.dealerHeavyEquipmentIdGet(id, apiKey, provider);
        // TODO: test validations
    }

    /**
     * Dealer by id
     *
     * Get a particular dealer&#39;s information by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealerMotorcycleIdGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        Boolean provider = null;
        Dealer response = api.dealerMotorcycleIdGet(id, apiKey, provider);
        // TODO: test validations
    }

    /**
     * Dealer by id
     *
     * Get a particular dealer&#39;s information by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealerRvIdGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        Boolean provider = null;
        Dealer response = api.dealerRvIdGet(id, apiKey, provider);
        // TODO: test validations
    }

    /**
     * Find car dealers around
     *
     * The dealers API returns a list of dealers around a given point and radius.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealerSearchTest() throws ApiException {
        String apiKey = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        Integer rows = null;
        Integer start = null;
        String country = null;
        String dealerType = null;
        String city = null;
        String state = null;
        String listingCountRange = null;
        String inventoryUrl = null;
        String zip = null;
        String sortBy = null;
        String sortOrder = null;
        Boolean provider = null;
        String facets = null;
        String rangeFacets = null;
        DealersResponse response = api.dealerSearch(apiKey, latitude, longitude, radius, rows, start, country, dealerType, city, state, listingCountRange, inventoryUrl, zip, sortBy, sortOrder, provider, facets, rangeFacets);
        // TODO: test validations
    }

    /**
     * Find car dealers around
     *
     * The dealers API returns a list of dealers around a given point and radius.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealersCarUkGetTest() throws ApiException {
        String apiKey = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        Integer rows = null;
        Integer start = null;
        String country = null;
        String dealerType = null;
        String city = null;
        String county = null;
        String listingCountRange = null;
        String inventoryUrl = null;
        String postalCode = null;
        String sortBy = null;
        String sortOrder = null;
        Boolean provider = null;
        String facets = null;
        String rangeFacets = null;
        DealersResponse response = api.dealersCarUkGet(apiKey, latitude, longitude, radius, rows, start, country, dealerType, city, county, listingCountRange, inventoryUrl, postalCode, sortBy, sortOrder, provider, facets, rangeFacets);
        // TODO: test validations
    }

    /**
     * Find car dealers around
     *
     * The dealers API returns a list of dealers around a given point and radius.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealersHeavyEquipmentGetTest() throws ApiException {
        String apiKey = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        Integer rows = null;
        Integer start = null;
        String country = null;
        String dealerType = null;
        String city = null;
        String state = null;
        String listingCountRange = null;
        String inventoryUrl = null;
        String zip = null;
        String sortBy = null;
        String sortOrder = null;
        Boolean provider = null;
        String facets = null;
        String rangeFacets = null;
        DealersResponse response = api.dealersHeavyEquipmentGet(apiKey, latitude, longitude, radius, rows, start, country, dealerType, city, state, listingCountRange, inventoryUrl, zip, sortBy, sortOrder, provider, facets, rangeFacets);
        // TODO: test validations
    }

    /**
     * Find car dealers around
     *
     * The dealers API returns a list of dealers around a given point and radius.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealersMotorcycleGetTest() throws ApiException {
        String apiKey = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        Integer rows = null;
        Integer start = null;
        String country = null;
        String dealerType = null;
        String city = null;
        String state = null;
        String listingCountRange = null;
        String inventoryUrl = null;
        String zip = null;
        String sortBy = null;
        String sortOrder = null;
        Boolean provider = null;
        String facets = null;
        String rangeFacets = null;
        DealersResponse response = api.dealersMotorcycleGet(apiKey, latitude, longitude, radius, rows, start, country, dealerType, city, state, listingCountRange, inventoryUrl, zip, sortBy, sortOrder, provider, facets, rangeFacets);
        // TODO: test validations
    }

    /**
     * Find car dealers around
     *
     * The dealers API returns a list of dealers around a given point and radius.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void dealersRvGetTest() throws ApiException {
        String apiKey = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        Integer rows = null;
        Integer start = null;
        String country = null;
        String dealerType = null;
        String city = null;
        String state = null;
        String listingCountRange = null;
        String inventoryUrl = null;
        String zip = null;
        String sortBy = null;
        String sortOrder = null;
        Boolean provider = null;
        String facets = null;
        String rangeFacets = null;
        DealersResponse response = api.dealersRvGet(apiKey, latitude, longitude, radius, rows, start, country, dealerType, city, state, listingCountRange, inventoryUrl, zip, sortBy, sortOrder, provider, facets, rangeFacets);
        // TODO: test validations
    }

    /**
     * Dealer by id
     *
     * Get a particular dealer&#39;s information by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDealerTest() throws ApiException {
        String id = null;
        String apiKey = null;
        Boolean provider = null;
        Dealer response = api.getDealer(id, apiKey, provider);
        // TODO: test validations
    }

}
