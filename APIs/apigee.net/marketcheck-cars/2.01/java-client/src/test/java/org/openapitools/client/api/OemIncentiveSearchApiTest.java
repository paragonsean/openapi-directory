/*
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.SearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OemIncentiveSearchApi
 */
@Disabled
public class OemIncentiveSearchApiTest {

    private final OemIncentiveSearchApi api = new OemIncentiveSearchApi();

    /**
     * Gets oem incentive listings for the given search criteria
     *
     * This endpoint is the meat of the API and serves many purposes. This API produces a list of currently active oem incentive from the market for the given search criteria. The API results are limited to allow pagination upto 10000 rows.   The search API facilitates the following use cases -  1. Search Cars around a given geo-point within a given radius  2. Search cars for a specific year / make / model or combination of these  3. Search cars matching multiple year, make, model combinatins in the same search request 4. Filter results by most car specification attributes 5. Search for similar cars by VIN or Taxonomy VIN  6. Filter cars within a given price / miles / days on market (dom) range 7. Specify a sort order for the results on price / miles / dom / listed date  8. Search cars for a given City / State combination  9. Get Facets to build the search drill downs  10. Get Market averages for price/miles/dom for your search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void oemSearchTest() throws ApiException {
        String apiKey = null;
        String offerType = null;
        String year = null;
        String make = null;
        String model = null;
        String trim = null;
        String msrp = null;
        String apr = null;
        String monthly = null;
        String monthlyPerThousand = null;
        String downPayment = null;
        String dueAtSigning = null;
        String securityDeposit = null;
        String dispositionFee = null;
        String acquisitionFee = null;
        String duration = null;
        String dealerContribution = null;
        String mileageCharge = null;
        String mileageChargeLimit = null;
        String cashbackAmount = null;
        String cashbackTargetGroup = null;
        String leaseEndPurchaseOption = null;
        String netCapitalisedCost = null;
        String grossCapitalisedCost = null;
        String totalMonthlyPayment = null;
        String zip = null;
        String city = null;
        String state = null;
        String country = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        String searchText = null;
        String lastSeenRange = null;
        String firstSeenRange = null;
        String sortBy = null;
        String sortOrder = null;
        Integer rows = null;
        Integer start = null;
        String facets = null;
        String rangeFacets = null;
        String facetSort = null;
        String stats = null;
        SearchResponse response = api.oemSearch(apiKey, offerType, year, make, model, trim, msrp, apr, monthly, monthlyPerThousand, downPayment, dueAtSigning, securityDeposit, dispositionFee, acquisitionFee, duration, dealerContribution, mileageCharge, mileageChargeLimit, cashbackAmount, cashbackTargetGroup, leaseEndPurchaseOption, netCapitalisedCost, grossCapitalisedCost, totalMonthlyPayment, zip, city, state, country, latitude, longitude, radius, searchText, lastSeenRange, firstSeenRange, sortBy, sortOrder, rows, start, facets, rangeFacets, facetSort, stats);
        // TODO: test validations
    }

}
