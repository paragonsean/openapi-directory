/*
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.math.BigDecimal;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.ListingExtraAttributes;
import org.openapitools.client.model.ListingMedia;
import org.openapitools.client.model.RVListing;
import org.openapitools.client.model.RVSearchResponse;
import org.openapitools.client.model.SearchAutoCompleteResponse;
import org.openapitools.client.model.UKRVSearchResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RvSearchApi
 */
@Disabled
public class RvSearchApiTest {

    private final RvSearchApi api = new RvSearchApi();

    /**
     * Long text RV Listings attributes for Listing with the given id
     *
     * Get RV listing options, features, seller comments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listingRvIdExtraGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        ListingExtraAttributes response = api.listingRvIdExtraGet(id, apiKey);
        // TODO: test validations
    }

    /**
     * RV listing by id
     *
     * Get a particular RV listing by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listingRvIdGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        RVListing response = api.listingRvIdGet(id, apiKey);
        // TODO: test validations
    }

    /**
     * Listing media by id
     *
     * Get listing media (photo, photos) by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listingRvIdMediaGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        ListingMedia response = api.listingRvIdMediaGet(id, apiKey);
        // TODO: test validations
    }

    /**
     * Long text RV Listings attributes for Listing with the given id
     *
     * Get RV listing options, features, seller comments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listingRvUkIdExtraGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        ListingExtraAttributes response = api.listingRvUkIdExtraGet(id, apiKey);
        // TODO: test validations
    }

    /**
     * RV listing by id
     *
     * Get a particular RV listing by its id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listingRvUkIdGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        RVListing response = api.listingRvUkIdGet(id, apiKey);
        // TODO: test validations
    }

    /**
     * Listing media by id
     *
     * Get listing media (photo, photos) by id
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listingRvUkIdMediaGetTest() throws ApiException {
        String id = null;
        String apiKey = null;
        ListingMedia response = api.listingRvUkIdMediaGet(id, apiKey);
        // TODO: test validations
    }

    /**
     * Gets active RV listings for the given search criteria
     *
     * This endpoint provides search on RV inventory. This API produces a list of currently active RV from the market for the given search criteria. The API results are limited to allow pagination upto 5000 rows.   The search API facilitates the following use cases -  1. Search RV around a given geo-point within a given radius  2. Search RV for a specific year / make / model or combination of these  3. Search RV matching multiple year, make, model combinatins in the same search request 4. Filter results by most RV specification attributes 5. Filter RV within a given price / miles range 6. Specify a sort order for the results on price / miles / listed date  7. Search RV for a given City / State combination  8. Get Facets to build the search drill downs  9. Get Market averages for price/miles for your search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchRvActiveGetTest() throws ApiException {
        String apiKey = null;
        String priceRange = null;
        String milesRange = null;
        String msrpRange = null;
        String yearRange = null;
        String searchText = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        String year = null;
        String make = null;
        String model = null;
        String modelO = null;
        String vin = null;
        String inventoryType = null;
        String stockNo = null;
        String source = null;
        String dealerName = null;
        String dealerId = null;
        String exteriorColor = null;
        String interiorColor = null;
        String engine = null;
        String fuelType = null;
        String transmission = null;
        String propertyClass = null;
        String state = null;
        String city = null;
        String zip = null;
        String msaCode = null;
        String sortBy = null;
        String sortOrder = null;
        Integer rows = null;
        Integer start = null;
        String facets = null;
        String rangeFacets = null;
        String facetSort = null;
        String stats = null;
        String lastSeenRange = null;
        String firstSeenRange = null;
        String lastSeenDays = null;
        String firstSeenDays = null;
        String slideouts = null;
        String lengthRange = null;
        String length = null;
        String baseExteriorColor = null;
        String baseInteriorColor = null;
        String seatingCapacity = null;
        String freshWaterCapacity = null;
        String sleeps = null;
        String cylinders = null;
        String numberOfAwnings = null;
        String doors = null;
        String gvwr = null;
        RVSearchResponse response = api.searchRvActiveGet(apiKey, priceRange, milesRange, msrpRange, yearRange, searchText, latitude, longitude, radius, year, make, model, modelO, vin, inventoryType, stockNo, source, dealerName, dealerId, exteriorColor, interiorColor, engine, fuelType, transmission, propertyClass, state, city, zip, msaCode, sortBy, sortOrder, rows, start, facets, rangeFacets, facetSort, stats, lastSeenRange, firstSeenRange, lastSeenDays, firstSeenDays, slideouts, lengthRange, length, baseExteriorColor, baseInteriorColor, seatingCapacity, freshWaterCapacity, sleeps, cylinders, numberOfAwnings, doors, gvwr);
        // TODO: test validations
    }

    /**
     * API for auto-completion of inputs
     *
     * Auto-complete the inputs of your end users
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchRvAutoCompleteGetTest() throws ApiException {
        String field = null;
        String input = null;
        String apiKey = null;
        String year = null;
        String make = null;
        String model = null;
        String trim = null;
        String bodyType = null;
        String vehicleType = null;
        String transmission = null;
        String drivetrain = null;
        String fuelType = null;
        String color = null;
        String engine = null;
        String state = null;
        String city = null;
        String inventoryType = null;
        Boolean ignoreCase = null;
        Boolean termCounts = null;
        String sortBy = null;
        String sellerType = null;
        Integer radius = null;
        String zip = null;
        BigDecimal facetMinCount = null;
        SearchAutoCompleteResponse response = api.searchRvAutoCompleteGet(field, input, apiKey, year, make, model, trim, bodyType, vehicleType, transmission, drivetrain, fuelType, color, engine, state, city, inventoryType, ignoreCase, termCounts, sortBy, sellerType, radius, zip, facetMinCount);
        // TODO: test validations
    }

    /**
     * Gets active RV listings for the given search criteria
     *
     * This endpoint provides search on RV inventory. This API produces a list of currently active RV from the market for the given search criteria. The API results are limited to allow pagination upto 5000 rows.   The search API facilitates the following use cases -  1. Search RV around a given geo-point within a given radius  2. Search RV for a specific year / make / model or combination of these  3. Search RV matching multiple year, make, model combinatins in the same search request 4. Filter results by most RV specification attributes 5. Filter RV within a given price / miles range 6. Specify a sort order for the results on price / miles / listed date  7. Search RV for a given City / State combination  8. Get Facets to build the search drill downs  9. Get Market averages for price/miles for your search
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void searchRvUkActiveGetTest() throws ApiException {
        String apiKey = null;
        String priceRange = null;
        String milesRange = null;
        String msrpRange = null;
        String yearRange = null;
        String searchText = null;
        Double latitude = null;
        Double longitude = null;
        Integer radius = null;
        String year = null;
        String make = null;
        String model = null;
        String vin = null;
        String source = null;
        String dealerName = null;
        String dealerId = null;
        String exteriorColor = null;
        String interiorColor = null;
        String engineSize = null;
        String fuelType = null;
        String category = null;
        String state = null;
        String city = null;
        String county = null;
        String postalCode = null;
        String zip = null;
        String sortBy = null;
        String sortOrder = null;
        Integer rows = null;
        Integer start = null;
        String facets = null;
        String rangeFacets = null;
        String facetSort = null;
        String stats = null;
        String lastSeenRange = null;
        String firstSeenRange = null;
        String lastSeenDays = null;
        String firstSeenDays = null;
        String baseExteriorColor = null;
        String baseInteriorColor = null;
        String seatingCapacity = null;
        String cylinders = null;
        String doors = null;
        String mtplm = null;
        String subCategory = null;
        String availabilityStatus = null;
        String berths = null;
        String inventoryType = null;
        String widthRange = null;
        String exteriorLengthRange = null;
        String interiorLengthRange = null;
        String driveType = null;
        String steering = null;
        String chassis = null;
        String transmission = null;
        UKRVSearchResponse response = api.searchRvUkActiveGet(apiKey, priceRange, milesRange, msrpRange, yearRange, searchText, latitude, longitude, radius, year, make, model, vin, source, dealerName, dealerId, exteriorColor, interiorColor, engineSize, fuelType, category, state, city, county, postalCode, zip, sortBy, sortOrder, rows, start, facets, rangeFacets, facetSort, stats, lastSeenRange, firstSeenRange, lastSeenDays, firstSeenDays, baseExteriorColor, baseInteriorColor, seatingCapacity, cylinders, doors, mtplm, subCategory, availabilityStatus, berths, inventoryType, widthRange, exteriorLengthRange, interiorLengthRange, driveType, steering, chassis, transmission);
        // TODO: test validations
    }

}
