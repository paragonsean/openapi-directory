# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListingMedia(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, photo_links: List[str]=None, photo_url: str=None):
        """ListingMedia - a model defined in OpenAPI

        :param id: The id of this ListingMedia.
        :param photo_links: The photo_links of this ListingMedia.
        :param photo_url: The photo_url of this ListingMedia.
        """
        self.openapi_types = {
            'id': str,
            'photo_links': List[str],
            'photo_url': str
        }

        self.attribute_map = {
            'id': 'id',
            'photo_links': 'photo_links',
            'photo_url': 'photo_url'
        }

        self._id = id
        self._photo_links = photo_links
        self._photo_url = photo_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListingMedia':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListingMedia of this ListingMedia.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ListingMedia.

        Unique identifier representing a specific listing from the Marketcheck database

        :return: The id of this ListingMedia.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ListingMedia.

        Unique identifier representing a specific listing from the Marketcheck database

        :param id: The id of this ListingMedia.
        :type id: str
        """

        self._id = id

    @property
    def photo_links(self):
        """Gets the photo_links of this ListingMedia.

        A list of photo urls for the car

        :return: The photo_links of this ListingMedia.
        :rtype: List[str]
        """
        return self._photo_links

    @photo_links.setter
    def photo_links(self, photo_links):
        """Sets the photo_links of this ListingMedia.

        A list of photo urls for the car

        :param photo_links: The photo_links of this ListingMedia.
        :type photo_links: List[str]
        """

        self._photo_links = photo_links

    @property
    def photo_url(self):
        """Gets the photo_url of this ListingMedia.

        Single photo url of the car

        :return: The photo_url of this ListingMedia.
        :rtype: str
        """
        return self._photo_url

    @photo_url.setter
    def photo_url(self, photo_url):
        """Sets the photo_url of this ListingMedia.

        Single photo url of the car

        :param photo_url: The photo_url of this ListingMedia.
        :type photo_url: str
        """

        self._photo_url = photo_url
