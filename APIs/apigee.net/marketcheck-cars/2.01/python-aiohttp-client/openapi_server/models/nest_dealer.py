# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NestDealer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, country: str=None, county: str=None, dealer_type: str=None, dealership_group_name: str=None, id: int=None, latitude: str=None, longitude: str=None, msa_code: str=None, name: str=None, phone: str=None, seller_email: str=None, state: str=None, street: str=None, website: str=None, zip: str=None):
        """NestDealer - a model defined in OpenAPI

        :param city: The city of this NestDealer.
        :param country: The country of this NestDealer.
        :param county: The county of this NestDealer.
        :param dealer_type: The dealer_type of this NestDealer.
        :param dealership_group_name: The dealership_group_name of this NestDealer.
        :param id: The id of this NestDealer.
        :param latitude: The latitude of this NestDealer.
        :param longitude: The longitude of this NestDealer.
        :param msa_code: The msa_code of this NestDealer.
        :param name: The name of this NestDealer.
        :param phone: The phone of this NestDealer.
        :param seller_email: The seller_email of this NestDealer.
        :param state: The state of this NestDealer.
        :param street: The street of this NestDealer.
        :param website: The website of this NestDealer.
        :param zip: The zip of this NestDealer.
        """
        self.openapi_types = {
            'city': str,
            'country': str,
            'county': str,
            'dealer_type': str,
            'dealership_group_name': str,
            'id': int,
            'latitude': str,
            'longitude': str,
            'msa_code': str,
            'name': str,
            'phone': str,
            'seller_email': str,
            'state': str,
            'street': str,
            'website': str,
            'zip': str
        }

        self.attribute_map = {
            'city': 'city',
            'country': 'country',
            'county': 'county',
            'dealer_type': 'dealer_type',
            'dealership_group_name': 'dealership_group_name',
            'id': 'id',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'msa_code': 'msa_code',
            'name': 'name',
            'phone': 'phone',
            'seller_email': 'seller_email',
            'state': 'state',
            'street': 'street',
            'website': 'website',
            'zip': 'zip'
        }

        self._city = city
        self._country = country
        self._county = county
        self._dealer_type = dealer_type
        self._dealership_group_name = dealership_group_name
        self._id = id
        self._latitude = latitude
        self._longitude = longitude
        self._msa_code = msa_code
        self._name = name
        self._phone = phone
        self._seller_email = seller_email
        self._state = state
        self._street = street
        self._website = website
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NestDealer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NestDealer of this NestDealer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this NestDealer.

        City of the dealer

        :return: The city of this NestDealer.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this NestDealer.

        City of the dealer

        :param city: The city of this NestDealer.
        :type city: str
        """

        self._city = city

    @property
    def country(self):
        """Gets the country of this NestDealer.

        country of the dealer

        :return: The country of this NestDealer.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this NestDealer.

        country of the dealer

        :param country: The country of this NestDealer.
        :type country: str
        """

        self._country = country

    @property
    def county(self):
        """Gets the county of this NestDealer.

        county of the dealer

        :return: The county of this NestDealer.
        :rtype: str
        """
        return self._county

    @county.setter
    def county(self, county):
        """Sets the county of this NestDealer.

        county of the dealer

        :param county: The county of this NestDealer.
        :type county: str
        """

        self._county = county

    @property
    def dealer_type(self):
        """Gets the dealer_type of this NestDealer.

        Type of dealer (franchise/independent)

        :return: The dealer_type of this NestDealer.
        :rtype: str
        """
        return self._dealer_type

    @dealer_type.setter
    def dealer_type(self, dealer_type):
        """Sets the dealer_type of this NestDealer.

        Type of dealer (franchise/independent)

        :param dealer_type: The dealer_type of this NestDealer.
        :type dealer_type: str
        """

        self._dealer_type = dealer_type

    @property
    def dealership_group_name(self):
        """Gets the dealership_group_name of this NestDealer.

        dealership_group_name of dealer

        :return: The dealership_group_name of this NestDealer.
        :rtype: str
        """
        return self._dealership_group_name

    @dealership_group_name.setter
    def dealership_group_name(self, dealership_group_name):
        """Sets the dealership_group_name of this NestDealer.

        dealership_group_name of dealer

        :param dealership_group_name: The dealership_group_name of this NestDealer.
        :type dealership_group_name: str
        """

        self._dealership_group_name = dealership_group_name

    @property
    def id(self):
        """Gets the id of this NestDealer.

        The unique id associated with the dealer in the Marketcheck database

        :return: The id of this NestDealer.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NestDealer.

        The unique id associated with the dealer in the Marketcheck database

        :param id: The id of this NestDealer.
        :type id: int
        """

        self._id = id

    @property
    def latitude(self):
        """Gets the latitude of this NestDealer.

        Latutide for the dealer location

        :return: The latitude of this NestDealer.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this NestDealer.

        Latutide for the dealer location

        :param latitude: The latitude of this NestDealer.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this NestDealer.

        Longitude for the dealer location

        :return: The longitude of this NestDealer.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this NestDealer.

        Longitude for the dealer location

        :param longitude: The longitude of this NestDealer.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def msa_code(self):
        """Gets the msa_code of this NestDealer.

        msa_code of the dealer

        :return: The msa_code of this NestDealer.
        :rtype: str
        """
        return self._msa_code

    @msa_code.setter
    def msa_code(self, msa_code):
        """Sets the msa_code of this NestDealer.

        msa_code of the dealer

        :param msa_code: The msa_code of this NestDealer.
        :type msa_code: str
        """

        self._msa_code = msa_code

    @property
    def name(self):
        """Gets the name of this NestDealer.

        Name of the dealer

        :return: The name of this NestDealer.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NestDealer.

        Name of the dealer

        :param name: The name of this NestDealer.
        :type name: str
        """

        self._name = name

    @property
    def phone(self):
        """Gets the phone of this NestDealer.

        Contact no of the dealer

        :return: The phone of this NestDealer.
        :rtype: str
        """
        return self._phone

    @phone.setter
    def phone(self, phone):
        """Sets the phone of this NestDealer.

        Contact no of the dealer

        :param phone: The phone of this NestDealer.
        :type phone: str
        """

        self._phone = phone

    @property
    def seller_email(self):
        """Gets the seller_email of this NestDealer.

        Contact email of the dealer

        :return: The seller_email of this NestDealer.
        :rtype: str
        """
        return self._seller_email

    @seller_email.setter
    def seller_email(self, seller_email):
        """Sets the seller_email of this NestDealer.

        Contact email of the dealer

        :param seller_email: The seller_email of this NestDealer.
        :type seller_email: str
        """

        self._seller_email = seller_email

    @property
    def state(self):
        """Gets the state of this NestDealer.

        State of the dealer

        :return: The state of this NestDealer.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this NestDealer.

        State of the dealer

        :param state: The state of this NestDealer.
        :type state: str
        """

        self._state = state

    @property
    def street(self):
        """Gets the street of this NestDealer.

        Street of the dealer

        :return: The street of this NestDealer.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this NestDealer.

        Street of the dealer

        :param street: The street of this NestDealer.
        :type street: str
        """

        self._street = street

    @property
    def website(self):
        """Gets the website of this NestDealer.

        Website of the dealer

        :return: The website of this NestDealer.
        :rtype: str
        """
        return self._website

    @website.setter
    def website(self, website):
        """Sets the website of this NestDealer.

        Website of the dealer

        :param website: The website of this NestDealer.
        :type website: str
        """

        self._website = website

    @property
    def zip(self):
        """Gets the zip of this NestDealer.

        Zip of the dealer

        :return: The zip of this NestDealer.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this NestDealer.

        Zip of the dealer

        :param zip: The zip of this NestDealer.
        :type zip: str
        """

        self._zip = zip
