# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.range_facet_item import RangeFacetItem
from openapi_server import util


class UKRVSearchRangeFacets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exterior_length: List[RangeFacetItem]=None, interior_length: List[RangeFacetItem]=None, miles: List[RangeFacetItem]=None, price: List[RangeFacetItem]=None, width: List[RangeFacetItem]=None):
        """UKRVSearchRangeFacets - a model defined in OpenAPI

        :param exterior_length: The exterior_length of this UKRVSearchRangeFacets.
        :param interior_length: The interior_length of this UKRVSearchRangeFacets.
        :param miles: The miles of this UKRVSearchRangeFacets.
        :param price: The price of this UKRVSearchRangeFacets.
        :param width: The width of this UKRVSearchRangeFacets.
        """
        self.openapi_types = {
            'exterior_length': List[RangeFacetItem],
            'interior_length': List[RangeFacetItem],
            'miles': List[RangeFacetItem],
            'price': List[RangeFacetItem],
            'width': List[RangeFacetItem]
        }

        self.attribute_map = {
            'exterior_length': 'exterior_length',
            'interior_length': 'interior_length',
            'miles': 'miles',
            'price': 'price',
            'width': 'width'
        }

        self._exterior_length = exterior_length
        self._interior_length = interior_length
        self._miles = miles
        self._price = price
        self._width = width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UKRVSearchRangeFacets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UKRVSearchRangeFacets of this UKRVSearchRangeFacets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exterior_length(self):
        """Gets the exterior_length of this UKRVSearchRangeFacets.


        :return: The exterior_length of this UKRVSearchRangeFacets.
        :rtype: List[RangeFacetItem]
        """
        return self._exterior_length

    @exterior_length.setter
    def exterior_length(self, exterior_length):
        """Sets the exterior_length of this UKRVSearchRangeFacets.


        :param exterior_length: The exterior_length of this UKRVSearchRangeFacets.
        :type exterior_length: List[RangeFacetItem]
        """

        self._exterior_length = exterior_length

    @property
    def interior_length(self):
        """Gets the interior_length of this UKRVSearchRangeFacets.


        :return: The interior_length of this UKRVSearchRangeFacets.
        :rtype: List[RangeFacetItem]
        """
        return self._interior_length

    @interior_length.setter
    def interior_length(self, interior_length):
        """Sets the interior_length of this UKRVSearchRangeFacets.


        :param interior_length: The interior_length of this UKRVSearchRangeFacets.
        :type interior_length: List[RangeFacetItem]
        """

        self._interior_length = interior_length

    @property
    def miles(self):
        """Gets the miles of this UKRVSearchRangeFacets.


        :return: The miles of this UKRVSearchRangeFacets.
        :rtype: List[RangeFacetItem]
        """
        return self._miles

    @miles.setter
    def miles(self, miles):
        """Sets the miles of this UKRVSearchRangeFacets.


        :param miles: The miles of this UKRVSearchRangeFacets.
        :type miles: List[RangeFacetItem]
        """

        self._miles = miles

    @property
    def price(self):
        """Gets the price of this UKRVSearchRangeFacets.


        :return: The price of this UKRVSearchRangeFacets.
        :rtype: List[RangeFacetItem]
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this UKRVSearchRangeFacets.


        :param price: The price of this UKRVSearchRangeFacets.
        :type price: List[RangeFacetItem]
        """

        self._price = price

    @property
    def width(self):
        """Gets the width of this UKRVSearchRangeFacets.


        :return: The width of this UKRVSearchRangeFacets.
        :rtype: List[RangeFacetItem]
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this UKRVSearchRangeFacets.


        :param width: The width of this UKRVSearchRangeFacets.
        :type width: List[RangeFacetItem]
        """

        self._width = width
