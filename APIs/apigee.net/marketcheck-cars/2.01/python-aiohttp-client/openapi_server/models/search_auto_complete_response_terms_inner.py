# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SearchAutoCompleteResponseTermsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, count: int=None, item: str=None):
        """SearchAutoCompleteResponseTermsInner - a model defined in OpenAPI

        :param count: The count of this SearchAutoCompleteResponseTermsInner.
        :param item: The item of this SearchAutoCompleteResponseTermsInner.
        """
        self.openapi_types = {
            'count': int,
            'item': str
        }

        self.attribute_map = {
            'count': 'count',
            'item': 'item'
        }

        self._count = count
        self._item = item

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchAutoCompleteResponseTermsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchAutoCompleteResponse_terms_inner of this SearchAutoCompleteResponseTermsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def count(self):
        """Gets the count of this SearchAutoCompleteResponseTermsInner.

        The number of listings with item as value for given field

        :return: The count of this SearchAutoCompleteResponseTermsInner.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count):
        """Sets the count of this SearchAutoCompleteResponseTermsInner.

        The number of listings with item as value for given field

        :param count: The count of this SearchAutoCompleteResponseTermsInner.
        :type count: int
        """

        self._count = count

    @property
    def item(self):
        """Gets the item of this SearchAutoCompleteResponseTermsInner.

        The actual term that either has prefix or contains given input

        :return: The item of this SearchAutoCompleteResponseTermsInner.
        :rtype: str
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this SearchAutoCompleteResponseTermsInner.

        The actual term that either has prefix or contains given input

        :param item: The item of this SearchAutoCompleteResponseTermsInner.
        :type item: str
        """

        self._item = item
