# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FareValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avg_days_to_sold_local: int=None, avg_days_to_sold_national: int=None, fmv_local: int=None, fmv_national: int=None):
        """FareValue - a model defined in OpenAPI

        :param avg_days_to_sold_local: The avg_days_to_sold_local of this FareValue.
        :param avg_days_to_sold_national: The avg_days_to_sold_national of this FareValue.
        :param fmv_local: The fmv_local of this FareValue.
        :param fmv_national: The fmv_national of this FareValue.
        """
        self.openapi_types = {
            'avg_days_to_sold_local': int,
            'avg_days_to_sold_national': int,
            'fmv_local': int,
            'fmv_national': int
        }

        self.attribute_map = {
            'avg_days_to_sold_local': 'avg_days_to_sold_local',
            'avg_days_to_sold_national': 'avg_days_to_sold_national',
            'fmv_local': 'fmv_local',
            'fmv_national': 'fmv_national'
        }

        self._avg_days_to_sold_local = avg_days_to_sold_local
        self._avg_days_to_sold_national = avg_days_to_sold_national
        self._fmv_local = fmv_local
        self._fmv_national = fmv_national

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FareValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FareValue of this FareValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avg_days_to_sold_local(self):
        """Gets the avg_days_to_sold_local of this FareValue.

        Average days to sold of car around given postal code & radius

        :return: The avg_days_to_sold_local of this FareValue.
        :rtype: int
        """
        return self._avg_days_to_sold_local

    @avg_days_to_sold_local.setter
    def avg_days_to_sold_local(self, avg_days_to_sold_local):
        """Sets the avg_days_to_sold_local of this FareValue.

        Average days to sold of car around given postal code & radius

        :param avg_days_to_sold_local: The avg_days_to_sold_local of this FareValue.
        :type avg_days_to_sold_local: int
        """

        self._avg_days_to_sold_local = avg_days_to_sold_local

    @property
    def avg_days_to_sold_national(self):
        """Gets the avg_days_to_sold_national of this FareValue.

        Average days to sold of car for all available listings

        :return: The avg_days_to_sold_national of this FareValue.
        :rtype: int
        """
        return self._avg_days_to_sold_national

    @avg_days_to_sold_national.setter
    def avg_days_to_sold_national(self, avg_days_to_sold_national):
        """Sets the avg_days_to_sold_national of this FareValue.

        Average days to sold of car for all available listings

        :param avg_days_to_sold_national: The avg_days_to_sold_national of this FareValue.
        :type avg_days_to_sold_national: int
        """

        self._avg_days_to_sold_national = avg_days_to_sold_national

    @property
    def fmv_local(self):
        """Gets the fmv_local of this FareValue.

        Fare value calculated for all available listing around given postal code & radius

        :return: The fmv_local of this FareValue.
        :rtype: int
        """
        return self._fmv_local

    @fmv_local.setter
    def fmv_local(self, fmv_local):
        """Sets the fmv_local of this FareValue.

        Fare value calculated for all available listing around given postal code & radius

        :param fmv_local: The fmv_local of this FareValue.
        :type fmv_local: int
        """

        self._fmv_local = fmv_local

    @property
    def fmv_national(self):
        """Gets the fmv_national of this FareValue.

        Fare value calculated for all available listing

        :return: The fmv_national of this FareValue.
        :rtype: int
        """
        return self._fmv_national

    @fmv_national.setter
    def fmv_national(self, fmv_national):
        """Sets the fmv_national of this FareValue.

        Fare value calculated for all available listing

        :param fmv_national: The fmv_national of this FareValue.
        :type fmv_national: int
        """

        self._fmv_national = fmv_national
