# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CarLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, county: str=None, latitude: str=None, longitude: str=None, seller_name: str=None, street: str=None, zip: str=None):
        """CarLocation - a model defined in OpenAPI

        :param city: The city of this CarLocation.
        :param county: The county of this CarLocation.
        :param latitude: The latitude of this CarLocation.
        :param longitude: The longitude of this CarLocation.
        :param seller_name: The seller_name of this CarLocation.
        :param street: The street of this CarLocation.
        :param zip: The zip of this CarLocation.
        """
        self.openapi_types = {
            'city': str,
            'county': str,
            'latitude': str,
            'longitude': str,
            'seller_name': str,
            'street': str,
            'zip': str
        }

        self.attribute_map = {
            'city': 'city',
            'county': 'county',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'seller_name': 'seller_name',
            'street': 'street',
            'zip': 'zip'
        }

        self._city = city
        self._county = county
        self._latitude = latitude
        self._longitude = longitude
        self._seller_name = seller_name
        self._street = street
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CarLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CarLocation of this CarLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this CarLocation.

        City of the car

        :return: The city of this CarLocation.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this CarLocation.

        City of the car

        :param city: The city of this CarLocation.
        :type city: str
        """

        self._city = city

    @property
    def county(self):
        """Gets the county of this CarLocation.

        County of the car

        :return: The county of this CarLocation.
        :rtype: str
        """
        return self._county

    @county.setter
    def county(self, county):
        """Sets the county of this CarLocation.

        County of the car

        :param county: The county of this CarLocation.
        :type county: str
        """

        self._county = county

    @property
    def latitude(self):
        """Gets the latitude of this CarLocation.

        Latitude component of car location

        :return: The latitude of this CarLocation.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this CarLocation.

        Latitude component of car location

        :param latitude: The latitude of this CarLocation.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this CarLocation.

        Longitude component of car location

        :return: The longitude of this CarLocation.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this CarLocation.

        Longitude component of car location

        :param longitude: The longitude of this CarLocation.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def seller_name(self):
        """Gets the seller_name of this CarLocation.

        Seller name of the car

        :return: The seller_name of this CarLocation.
        :rtype: str
        """
        return self._seller_name

    @seller_name.setter
    def seller_name(self, seller_name):
        """Sets the seller_name of this CarLocation.

        Seller name of the car

        :param seller_name: The seller_name of this CarLocation.
        :type seller_name: str
        """

        self._seller_name = seller_name

    @property
    def street(self):
        """Gets the street of this CarLocation.

        Street address of the car

        :return: The street of this CarLocation.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this CarLocation.

        Street address of the car

        :param street: The street of this CarLocation.
        :type street: str
        """

        self._street = street

    @property
    def zip(self):
        """Gets the zip of this CarLocation.

        Zip/Postal code of the car

        :return: The zip of this CarLocation.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this CarLocation.

        Zip/Postal code of the car

        :param zip: The zip of this CarLocation.
        :type zip: str
        """

        self._zip = zip
