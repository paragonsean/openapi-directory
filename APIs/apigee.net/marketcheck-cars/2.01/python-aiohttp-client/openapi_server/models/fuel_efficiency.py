# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FuelEfficiency(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annual_miles: float=None, city_mileage: str=None, combined_mileage: str=None, highway_mileage: str=None, monthly_fuel_expense: float=None):
        """FuelEfficiency - a model defined in OpenAPI

        :param annual_miles: The annual_miles of this FuelEfficiency.
        :param city_mileage: The city_mileage of this FuelEfficiency.
        :param combined_mileage: The combined_mileage of this FuelEfficiency.
        :param highway_mileage: The highway_mileage of this FuelEfficiency.
        :param monthly_fuel_expense: The monthly_fuel_expense of this FuelEfficiency.
        """
        self.openapi_types = {
            'annual_miles': float,
            'city_mileage': str,
            'combined_mileage': str,
            'highway_mileage': str,
            'monthly_fuel_expense': float
        }

        self.attribute_map = {
            'annual_miles': 'annual_miles',
            'city_mileage': 'city_mileage',
            'combined_mileage': 'combined_mileage',
            'highway_mileage': 'highway_mileage',
            'monthly_fuel_expense': 'monthly_fuel_expense'
        }

        self._annual_miles = annual_miles
        self._city_mileage = city_mileage
        self._combined_mileage = combined_mileage
        self._highway_mileage = highway_mileage
        self._monthly_fuel_expense = monthly_fuel_expense

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FuelEfficiency':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FuelEfficiency of this FuelEfficiency.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annual_miles(self):
        """Gets the annual_miles of this FuelEfficiency.

        Annual Miles of Car

        :return: The annual_miles of this FuelEfficiency.
        :rtype: float
        """
        return self._annual_miles

    @annual_miles.setter
    def annual_miles(self, annual_miles):
        """Sets the annual_miles of this FuelEfficiency.

        Annual Miles of Car

        :param annual_miles: The annual_miles of this FuelEfficiency.
        :type annual_miles: float
        """

        self._annual_miles = annual_miles

    @property
    def city_mileage(self):
        """Gets the city_mileage of this FuelEfficiency.

        City Mileage in MPG

        :return: The city_mileage of this FuelEfficiency.
        :rtype: str
        """
        return self._city_mileage

    @city_mileage.setter
    def city_mileage(self, city_mileage):
        """Sets the city_mileage of this FuelEfficiency.

        City Mileage in MPG

        :param city_mileage: The city_mileage of this FuelEfficiency.
        :type city_mileage: str
        """

        self._city_mileage = city_mileage

    @property
    def combined_mileage(self):
        """Gets the combined_mileage of this FuelEfficiency.

        Combined Mileage

        :return: The combined_mileage of this FuelEfficiency.
        :rtype: str
        """
        return self._combined_mileage

    @combined_mileage.setter
    def combined_mileage(self, combined_mileage):
        """Sets the combined_mileage of this FuelEfficiency.

        Combined Mileage

        :param combined_mileage: The combined_mileage of this FuelEfficiency.
        :type combined_mileage: str
        """

        self._combined_mileage = combined_mileage

    @property
    def highway_mileage(self):
        """Gets the highway_mileage of this FuelEfficiency.

        Highway Mileage in MPG

        :return: The highway_mileage of this FuelEfficiency.
        :rtype: str
        """
        return self._highway_mileage

    @highway_mileage.setter
    def highway_mileage(self, highway_mileage):
        """Sets the highway_mileage of this FuelEfficiency.

        Highway Mileage in MPG

        :param highway_mileage: The highway_mileage of this FuelEfficiency.
        :type highway_mileage: str
        """

        self._highway_mileage = highway_mileage

    @property
    def monthly_fuel_expense(self):
        """Gets the monthly_fuel_expense of this FuelEfficiency.

        Monthly fuel expense

        :return: The monthly_fuel_expense of this FuelEfficiency.
        :rtype: float
        """
        return self._monthly_fuel_expense

    @monthly_fuel_expense.setter
    def monthly_fuel_expense(self, monthly_fuel_expense):
        """Sets the monthly_fuel_expense of this FuelEfficiency.

        Monthly fuel expense

        :param monthly_fuel_expense: The monthly_fuel_expense of this FuelEfficiency.
        :type monthly_fuel_expense: float
        """

        self._monthly_fuel_expense = monthly_fuel_expense
