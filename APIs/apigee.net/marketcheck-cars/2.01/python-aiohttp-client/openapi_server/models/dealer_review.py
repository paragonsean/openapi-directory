# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.review_components import ReviewComponents
from openapi_server import util


class DealerReview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, city: str=None, latitude: str=None, longitude: str=None, name: str=None, overall_reviews: float=None, review_components: List[ReviewComponents]=None, state: str=None, street: str=None, zip: str=None):
        """DealerReview - a model defined in OpenAPI

        :param city: The city of this DealerReview.
        :param latitude: The latitude of this DealerReview.
        :param longitude: The longitude of this DealerReview.
        :param name: The name of this DealerReview.
        :param overall_reviews: The overall_reviews of this DealerReview.
        :param review_components: The review_components of this DealerReview.
        :param state: The state of this DealerReview.
        :param street: The street of this DealerReview.
        :param zip: The zip of this DealerReview.
        """
        self.openapi_types = {
            'city': str,
            'latitude': str,
            'longitude': str,
            'name': str,
            'overall_reviews': float,
            'review_components': List[ReviewComponents],
            'state': str,
            'street': str,
            'zip': str
        }

        self.attribute_map = {
            'city': 'city',
            'latitude': 'latitude',
            'longitude': 'longitude',
            'name': 'name',
            'overall_reviews': 'overall_reviews',
            'review_components': 'review_components',
            'state': 'state',
            'street': 'street',
            'zip': 'zip'
        }

        self._city = city
        self._latitude = latitude
        self._longitude = longitude
        self._name = name
        self._overall_reviews = overall_reviews
        self._review_components = review_components
        self._state = state
        self._street = street
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DealerReview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DealerReview of this DealerReview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def city(self):
        """Gets the city of this DealerReview.

        City of the dealer

        :return: The city of this DealerReview.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this DealerReview.

        City of the dealer

        :param city: The city of this DealerReview.
        :type city: str
        """

        self._city = city

    @property
    def latitude(self):
        """Gets the latitude of this DealerReview.

        Latutide for the dealer location

        :return: The latitude of this DealerReview.
        :rtype: str
        """
        return self._latitude

    @latitude.setter
    def latitude(self, latitude):
        """Sets the latitude of this DealerReview.

        Latutide for the dealer location

        :param latitude: The latitude of this DealerReview.
        :type latitude: str
        """

        self._latitude = latitude

    @property
    def longitude(self):
        """Gets the longitude of this DealerReview.

        Longitude for the dealer location

        :return: The longitude of this DealerReview.
        :rtype: str
        """
        return self._longitude

    @longitude.setter
    def longitude(self, longitude):
        """Sets the longitude of this DealerReview.

        Longitude for the dealer location

        :param longitude: The longitude of this DealerReview.
        :type longitude: str
        """

        self._longitude = longitude

    @property
    def name(self):
        """Gets the name of this DealerReview.

        Name of the dealer

        :return: The name of this DealerReview.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DealerReview.

        Name of the dealer

        :param name: The name of this DealerReview.
        :type name: str
        """

        self._name = name

    @property
    def overall_reviews(self):
        """Gets the overall_reviews of this DealerReview.

        Overall reviews of the dealership

        :return: The overall_reviews of this DealerReview.
        :rtype: float
        """
        return self._overall_reviews

    @overall_reviews.setter
    def overall_reviews(self, overall_reviews):
        """Sets the overall_reviews of this DealerReview.

        Overall reviews of the dealership

        :param overall_reviews: The overall_reviews of this DealerReview.
        :type overall_reviews: float
        """

        self._overall_reviews = overall_reviews

    @property
    def review_components(self):
        """Gets the review_components of this DealerReview.


        :return: The review_components of this DealerReview.
        :rtype: List[ReviewComponents]
        """
        return self._review_components

    @review_components.setter
    def review_components(self, review_components):
        """Sets the review_components of this DealerReview.


        :param review_components: The review_components of this DealerReview.
        :type review_components: List[ReviewComponents]
        """

        self._review_components = review_components

    @property
    def state(self):
        """Gets the state of this DealerReview.

        State of the dealer

        :return: The state of this DealerReview.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DealerReview.

        State of the dealer

        :param state: The state of this DealerReview.
        :type state: str
        """

        self._state = state

    @property
    def street(self):
        """Gets the street of this DealerReview.

        Street of the dealer

        :return: The street of this DealerReview.
        :rtype: str
        """
        return self._street

    @street.setter
    def street(self, street):
        """Sets the street of this DealerReview.

        Street of the dealer

        :param street: The street of this DealerReview.
        :type street: str
        """

        self._street = street

    @property
    def zip(self):
        """Gets the zip of this DealerReview.

        Zip of the dealer

        :return: The zip of this DealerReview.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this DealerReview.

        Zip of the dealer

        :param zip: The zip of this DealerReview.
        :type zip: str
        """

        self._zip = zip
