# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.stats_item import StatsItem
from openapi_server import util


class MotorcycleSearchStats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, miles: StatsItem=None, price: StatsItem=None):
        """MotorcycleSearchStats - a model defined in OpenAPI

        :param miles: The miles of this MotorcycleSearchStats.
        :param price: The price of this MotorcycleSearchStats.
        """
        self.openapi_types = {
            'miles': StatsItem,
            'price': StatsItem
        }

        self.attribute_map = {
            'miles': 'miles',
            'price': 'price'
        }

        self._miles = miles
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MotorcycleSearchStats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MotorcycleSearchStats of this MotorcycleSearchStats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def miles(self):
        """Gets the miles of this MotorcycleSearchStats.


        :return: The miles of this MotorcycleSearchStats.
        :rtype: StatsItem
        """
        return self._miles

    @miles.setter
    def miles(self, miles):
        """Sets the miles of this MotorcycleSearchStats.


        :param miles: The miles of this MotorcycleSearchStats.
        :type miles: StatsItem
        """

        self._miles = miles

    @property
    def price(self):
        """Gets the price of this MotorcycleSearchStats.


        :return: The price of this MotorcycleSearchStats.
        :rtype: StatsItem
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this MotorcycleSearchStats.


        :param price: The price of this MotorcycleSearchStats.
        :type price: StatsItem
        """

        self._price = price
