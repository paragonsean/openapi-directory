# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.base_popular import BasePopular
from openapi_server import util


class PopularCars(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, new_top50: List[BasePopular]=None, used_top50: List[BasePopular]=None):
        """PopularCars - a model defined in OpenAPI

        :param new_top50: The new_top50 of this PopularCars.
        :param used_top50: The used_top50 of this PopularCars.
        """
        self.openapi_types = {
            'new_top50': List[BasePopular],
            'used_top50': List[BasePopular]
        }

        self.attribute_map = {
            'new_top50': 'new_top50',
            'used_top50': 'used_top50'
        }

        self._new_top50 = new_top50
        self._used_top50 = used_top50

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PopularCars':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PopularCars of this PopularCars.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def new_top50(self):
        """Gets the new_top50 of this PopularCars.

        Array of all new top 50 cars

        :return: The new_top50 of this PopularCars.
        :rtype: List[BasePopular]
        """
        return self._new_top50

    @new_top50.setter
    def new_top50(self, new_top50):
        """Sets the new_top50 of this PopularCars.

        Array of all new top 50 cars

        :param new_top50: The new_top50 of this PopularCars.
        :type new_top50: List[BasePopular]
        """

        self._new_top50 = new_top50

    @property
    def used_top50(self):
        """Gets the used_top50 of this PopularCars.

        Array of all used top 50 cars

        :return: The used_top50 of this PopularCars.
        :rtype: List[BasePopular]
        """
        return self._used_top50

    @used_top50.setter
    def used_top50(self, used_top50):
        """Sets the used_top50 of this PopularCars.

        Array of all used top 50 cars

        :param used_top50: The used_top50 of this PopularCars.
        :type used_top50: List[BasePopular]
        """

        self._used_top50 = used_top50
