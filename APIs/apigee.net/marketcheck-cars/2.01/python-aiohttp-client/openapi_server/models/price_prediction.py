# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.predicted_specs import PredictedSpecs
from openapi_server.models.price_prediction_price_range import PricePredictionPriceRange
from openapi_server import util


class PricePrediction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, predicted_price: int=None, price_range: PricePredictionPriceRange=None, specs: PredictedSpecs=None):
        """PricePrediction - a model defined in OpenAPI

        :param predicted_price: The predicted_price of this PricePrediction.
        :param price_range: The price_range of this PricePrediction.
        :param specs: The specs of this PricePrediction.
        """
        self.openapi_types = {
            'predicted_price': int,
            'price_range': PricePredictionPriceRange,
            'specs': PredictedSpecs
        }

        self.attribute_map = {
            'predicted_price': 'predicted_price',
            'price_range': 'price_range',
            'specs': 'specs'
        }

        self._predicted_price = predicted_price
        self._price_range = price_range
        self._specs = specs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PricePrediction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PricePrediction of this PricePrediction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def predicted_price(self):
        """Gets the predicted_price of this PricePrediction.

        Actual predicted price of a car

        :return: The predicted_price of this PricePrediction.
        :rtype: int
        """
        return self._predicted_price

    @predicted_price.setter
    def predicted_price(self, predicted_price):
        """Sets the predicted_price of this PricePrediction.

        Actual predicted price of a car

        :param predicted_price: The predicted_price of this PricePrediction.
        :type predicted_price: int
        """

        self._predicted_price = predicted_price

    @property
    def price_range(self):
        """Gets the price_range of this PricePrediction.


        :return: The price_range of this PricePrediction.
        :rtype: PricePredictionPriceRange
        """
        return self._price_range

    @price_range.setter
    def price_range(self, price_range):
        """Sets the price_range of this PricePrediction.


        :param price_range: The price_range of this PricePrediction.
        :type price_range: PricePredictionPriceRange
        """

        self._price_range = price_range

    @property
    def specs(self):
        """Gets the specs of this PricePrediction.


        :return: The specs of this PricePrediction.
        :rtype: PredictedSpecs
        """
        return self._specs

    @specs.setter
    def specs(self, specs):
        """Sets the specs of this PricePrediction.


        :param specs: The specs of this PricePrediction.
        :type specs: PredictedSpecs
        """

        self._specs = specs
