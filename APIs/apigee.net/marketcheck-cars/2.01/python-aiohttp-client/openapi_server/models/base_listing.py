# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build import Build
from openapi_server.models.listing_finance import ListingFinance
from openapi_server.models.listing_lease import ListingLease
from openapi_server.models.listing_nest_media import ListingNestMedia
from openapi_server.models.nest_dealer import NestDealer
from openapi_server import util


class BaseListing(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_ext_color: str=None, base_int_color: str=None, build: Build=None, carfax_1_owner: bool=None, carfax_clean_title: bool=None, data_source: str=None, dealer: NestDealer=None, dist: float=None, dom: int=None, dom_180: int=None, dom_active: int=None, exterior_color: str=None, financing_options: List[ListingFinance]=None, first_seen_at: int=None, first_seen_at_date: str=None, heading: str=None, id: str=None, in_transit: bool=None, interior_color: str=None, inventory_type: str=None, is_certified: int=None, is_translated: bool=None, last_seen_at: int=None, last_seen_at_date: str=None, leasing_options: List[ListingLease]=None, media: ListingNestMedia=None, miles: int=None, model_code: str=None, msrp: int=None, price: int=None, price_change_percent: float=None, ref_miles: str=None, ref_miles_dt: int=None, ref_price: str=None, ref_price_dt: int=None, scraped_at: float=None, scraped_at_date: str=None, seller_type: str=None, source: str=None, stock_no: str=None, title_type: str=None, vdp_url: str=None, vin: str=None):
        """BaseListing - a model defined in OpenAPI

        :param base_ext_color: The base_ext_color of this BaseListing.
        :param base_int_color: The base_int_color of this BaseListing.
        :param build: The build of this BaseListing.
        :param carfax_1_owner: The carfax_1_owner of this BaseListing.
        :param carfax_clean_title: The carfax_clean_title of this BaseListing.
        :param data_source: The data_source of this BaseListing.
        :param dealer: The dealer of this BaseListing.
        :param dist: The dist of this BaseListing.
        :param dom: The dom of this BaseListing.
        :param dom_180: The dom_180 of this BaseListing.
        :param dom_active: The dom_active of this BaseListing.
        :param exterior_color: The exterior_color of this BaseListing.
        :param financing_options: The financing_options of this BaseListing.
        :param first_seen_at: The first_seen_at of this BaseListing.
        :param first_seen_at_date: The first_seen_at_date of this BaseListing.
        :param heading: The heading of this BaseListing.
        :param id: The id of this BaseListing.
        :param in_transit: The in_transit of this BaseListing.
        :param interior_color: The interior_color of this BaseListing.
        :param inventory_type: The inventory_type of this BaseListing.
        :param is_certified: The is_certified of this BaseListing.
        :param is_translated: The is_translated of this BaseListing.
        :param last_seen_at: The last_seen_at of this BaseListing.
        :param last_seen_at_date: The last_seen_at_date of this BaseListing.
        :param leasing_options: The leasing_options of this BaseListing.
        :param media: The media of this BaseListing.
        :param miles: The miles of this BaseListing.
        :param model_code: The model_code of this BaseListing.
        :param msrp: The msrp of this BaseListing.
        :param price: The price of this BaseListing.
        :param price_change_percent: The price_change_percent of this BaseListing.
        :param ref_miles: The ref_miles of this BaseListing.
        :param ref_miles_dt: The ref_miles_dt of this BaseListing.
        :param ref_price: The ref_price of this BaseListing.
        :param ref_price_dt: The ref_price_dt of this BaseListing.
        :param scraped_at: The scraped_at of this BaseListing.
        :param scraped_at_date: The scraped_at_date of this BaseListing.
        :param seller_type: The seller_type of this BaseListing.
        :param source: The source of this BaseListing.
        :param stock_no: The stock_no of this BaseListing.
        :param title_type: The title_type of this BaseListing.
        :param vdp_url: The vdp_url of this BaseListing.
        :param vin: The vin of this BaseListing.
        """
        self.openapi_types = {
            'base_ext_color': str,
            'base_int_color': str,
            'build': Build,
            'carfax_1_owner': bool,
            'carfax_clean_title': bool,
            'data_source': str,
            'dealer': NestDealer,
            'dist': float,
            'dom': int,
            'dom_180': int,
            'dom_active': int,
            'exterior_color': str,
            'financing_options': List[ListingFinance],
            'first_seen_at': int,
            'first_seen_at_date': str,
            'heading': str,
            'id': str,
            'in_transit': bool,
            'interior_color': str,
            'inventory_type': str,
            'is_certified': int,
            'is_translated': bool,
            'last_seen_at': int,
            'last_seen_at_date': str,
            'leasing_options': List[ListingLease],
            'media': ListingNestMedia,
            'miles': int,
            'model_code': str,
            'msrp': int,
            'price': int,
            'price_change_percent': float,
            'ref_miles': str,
            'ref_miles_dt': int,
            'ref_price': str,
            'ref_price_dt': int,
            'scraped_at': float,
            'scraped_at_date': str,
            'seller_type': str,
            'source': str,
            'stock_no': str,
            'title_type': str,
            'vdp_url': str,
            'vin': str
        }

        self.attribute_map = {
            'base_ext_color': 'base_ext_color',
            'base_int_color': 'base_int_color',
            'build': 'build',
            'carfax_1_owner': 'carfax_1_owner',
            'carfax_clean_title': 'carfax_clean_title',
            'data_source': 'data_source',
            'dealer': 'dealer',
            'dist': 'dist',
            'dom': 'dom',
            'dom_180': 'dom_180',
            'dom_active': 'dom_active',
            'exterior_color': 'exterior_color',
            'financing_options': 'financing_options',
            'first_seen_at': 'first_seen_at',
            'first_seen_at_date': 'first_seen_at_date',
            'heading': 'heading',
            'id': 'id',
            'in_transit': 'in_transit',
            'interior_color': 'interior_color',
            'inventory_type': 'inventory_type',
            'is_certified': 'is_certified',
            'is_translated': 'is_translated',
            'last_seen_at': 'last_seen_at',
            'last_seen_at_date': 'last_seen_at_date',
            'leasing_options': 'leasing_options',
            'media': 'media',
            'miles': 'miles',
            'model_code': 'model_code',
            'msrp': 'msrp',
            'price': 'price',
            'price_change_percent': 'price_change_percent',
            'ref_miles': 'ref_miles',
            'ref_miles_dt': 'ref_miles_dt',
            'ref_price': 'ref_price',
            'ref_price_dt': 'ref_price_dt',
            'scraped_at': 'scraped_at',
            'scraped_at_date': 'scraped_at_date',
            'seller_type': 'seller_type',
            'source': 'source',
            'stock_no': 'stock_no',
            'title_type': 'title_type',
            'vdp_url': 'vdp_url',
            'vin': 'vin'
        }

        self._base_ext_color = base_ext_color
        self._base_int_color = base_int_color
        self._build = build
        self._carfax_1_owner = carfax_1_owner
        self._carfax_clean_title = carfax_clean_title
        self._data_source = data_source
        self._dealer = dealer
        self._dist = dist
        self._dom = dom
        self._dom_180 = dom_180
        self._dom_active = dom_active
        self._exterior_color = exterior_color
        self._financing_options = financing_options
        self._first_seen_at = first_seen_at
        self._first_seen_at_date = first_seen_at_date
        self._heading = heading
        self._id = id
        self._in_transit = in_transit
        self._interior_color = interior_color
        self._inventory_type = inventory_type
        self._is_certified = is_certified
        self._is_translated = is_translated
        self._last_seen_at = last_seen_at
        self._last_seen_at_date = last_seen_at_date
        self._leasing_options = leasing_options
        self._media = media
        self._miles = miles
        self._model_code = model_code
        self._msrp = msrp
        self._price = price
        self._price_change_percent = price_change_percent
        self._ref_miles = ref_miles
        self._ref_miles_dt = ref_miles_dt
        self._ref_price = ref_price
        self._ref_price_dt = ref_price_dt
        self._scraped_at = scraped_at
        self._scraped_at_date = scraped_at_date
        self._seller_type = seller_type
        self._source = source
        self._stock_no = stock_no
        self._title_type = title_type
        self._vdp_url = vdp_url
        self._vin = vin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BaseListing':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BaseListing of this BaseListing.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_ext_color(self):
        """Gets the base_ext_color of this BaseListing.

        Base exterior color of the car

        :return: The base_ext_color of this BaseListing.
        :rtype: str
        """
        return self._base_ext_color

    @base_ext_color.setter
    def base_ext_color(self, base_ext_color):
        """Sets the base_ext_color of this BaseListing.

        Base exterior color of the car

        :param base_ext_color: The base_ext_color of this BaseListing.
        :type base_ext_color: str
        """

        self._base_ext_color = base_ext_color

    @property
    def base_int_color(self):
        """Gets the base_int_color of this BaseListing.

        Base interior color of the car

        :return: The base_int_color of this BaseListing.
        :rtype: str
        """
        return self._base_int_color

    @base_int_color.setter
    def base_int_color(self, base_int_color):
        """Sets the base_int_color of this BaseListing.

        Base interior color of the car

        :param base_int_color: The base_int_color of this BaseListing.
        :type base_int_color: str
        """

        self._base_int_color = base_int_color

    @property
    def build(self):
        """Gets the build of this BaseListing.


        :return: The build of this BaseListing.
        :rtype: Build
        """
        return self._build

    @build.setter
    def build(self, build):
        """Sets the build of this BaseListing.


        :param build: The build of this BaseListing.
        :type build: Build
        """

        self._build = build

    @property
    def carfax_1_owner(self):
        """Gets the carfax_1_owner of this BaseListing.

        Flag to indicate whether listing is carfax_1_owner

        :return: The carfax_1_owner of this BaseListing.
        :rtype: bool
        """
        return self._carfax_1_owner

    @carfax_1_owner.setter
    def carfax_1_owner(self, carfax_1_owner):
        """Sets the carfax_1_owner of this BaseListing.

        Flag to indicate whether listing is carfax_1_owner

        :param carfax_1_owner: The carfax_1_owner of this BaseListing.
        :type carfax_1_owner: bool
        """

        self._carfax_1_owner = carfax_1_owner

    @property
    def carfax_clean_title(self):
        """Gets the carfax_clean_title of this BaseListing.

        Flag to indicate whether listing is carfax_clean_title

        :return: The carfax_clean_title of this BaseListing.
        :rtype: bool
        """
        return self._carfax_clean_title

    @carfax_clean_title.setter
    def carfax_clean_title(self, carfax_clean_title):
        """Sets the carfax_clean_title of this BaseListing.

        Flag to indicate whether listing is carfax_clean_title

        :param carfax_clean_title: The carfax_clean_title of this BaseListing.
        :type carfax_clean_title: bool
        """

        self._carfax_clean_title = carfax_clean_title

    @property
    def data_source(self):
        """Gets the data_source of this BaseListing.

        Data source of the listing

        :return: The data_source of this BaseListing.
        :rtype: str
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this BaseListing.

        Data source of the listing

        :param data_source: The data_source of this BaseListing.
        :type data_source: str
        """

        self._data_source = data_source

    @property
    def dealer(self):
        """Gets the dealer of this BaseListing.


        :return: The dealer of this BaseListing.
        :rtype: NestDealer
        """
        return self._dealer

    @dealer.setter
    def dealer(self, dealer):
        """Sets the dealer of this BaseListing.


        :param dealer: The dealer of this BaseListing.
        :type dealer: NestDealer
        """

        self._dealer = dealer

    @property
    def dist(self):
        """Gets the dist of this BaseListing.

        Distance of the car's location from the specified user lcoation

        :return: The dist of this BaseListing.
        :rtype: float
        """
        return self._dist

    @dist.setter
    def dist(self, dist):
        """Sets the dist of this BaseListing.

        Distance of the car's location from the specified user lcoation

        :param dist: The dist of this BaseListing.
        :type dist: float
        """

        self._dist = dist

    @property
    def dom(self):
        """Gets the dom of this BaseListing.

        Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car

        :return: The dom of this BaseListing.
        :rtype: int
        """
        return self._dom

    @dom.setter
    def dom(self, dom):
        """Sets the dom of this BaseListing.

        Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car

        :param dom: The dom of this BaseListing.
        :type dom: int
        """

        self._dom = dom

    @property
    def dom_180(self):
        """Gets the dom_180 of this BaseListing.

        Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car

        :return: The dom_180 of this BaseListing.
        :rtype: int
        """
        return self._dom_180

    @dom_180.setter
    def dom_180(self, dom_180):
        """Sets the dom_180 of this BaseListing.

        Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car

        :param dom_180: The dom_180 of this BaseListing.
        :type dom_180: int
        """

        self._dom_180 = dom_180

    @property
    def dom_active(self):
        """Gets the dom_active of this BaseListing.

        Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car

        :return: The dom_active of this BaseListing.
        :rtype: int
        """
        return self._dom_active

    @dom_active.setter
    def dom_active(self, dom_active):
        """Sets the dom_active of this BaseListing.

        Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car

        :param dom_active: The dom_active of this BaseListing.
        :type dom_active: int
        """

        self._dom_active = dom_active

    @property
    def exterior_color(self):
        """Gets the exterior_color of this BaseListing.

        Exterior color of the car

        :return: The exterior_color of this BaseListing.
        :rtype: str
        """
        return self._exterior_color

    @exterior_color.setter
    def exterior_color(self, exterior_color):
        """Sets the exterior_color of this BaseListing.

        Exterior color of the car

        :param exterior_color: The exterior_color of this BaseListing.
        :type exterior_color: str
        """

        self._exterior_color = exterior_color

    @property
    def financing_options(self):
        """Gets the financing_options of this BaseListing.

        Array of all finance offers for this listing

        :return: The financing_options of this BaseListing.
        :rtype: List[ListingFinance]
        """
        return self._financing_options

    @financing_options.setter
    def financing_options(self, financing_options):
        """Sets the financing_options of this BaseListing.

        Array of all finance offers for this listing

        :param financing_options: The financing_options of this BaseListing.
        :type financing_options: List[ListingFinance]
        """

        self._financing_options = financing_options

    @property
    def first_seen_at(self):
        """Gets the first_seen_at of this BaseListing.

        Listing first seen at first scraped timestamp

        :return: The first_seen_at of this BaseListing.
        :rtype: int
        """
        return self._first_seen_at

    @first_seen_at.setter
    def first_seen_at(self, first_seen_at):
        """Sets the first_seen_at of this BaseListing.

        Listing first seen at first scraped timestamp

        :param first_seen_at: The first_seen_at of this BaseListing.
        :type first_seen_at: int
        """

        self._first_seen_at = first_seen_at

    @property
    def first_seen_at_date(self):
        """Gets the first_seen_at_date of this BaseListing.

        Listing first seen at first scraped date

        :return: The first_seen_at_date of this BaseListing.
        :rtype: str
        """
        return self._first_seen_at_date

    @first_seen_at_date.setter
    def first_seen_at_date(self, first_seen_at_date):
        """Sets the first_seen_at_date of this BaseListing.

        Listing first seen at first scraped date

        :param first_seen_at_date: The first_seen_at_date of this BaseListing.
        :type first_seen_at_date: str
        """

        self._first_seen_at_date = first_seen_at_date

    @property
    def heading(self):
        """Gets the heading of this BaseListing.

        Listing title as displayed on the source website

        :return: The heading of this BaseListing.
        :rtype: str
        """
        return self._heading

    @heading.setter
    def heading(self, heading):
        """Sets the heading of this BaseListing.

        Listing title as displayed on the source website

        :param heading: The heading of this BaseListing.
        :type heading: str
        """

        self._heading = heading

    @property
    def id(self):
        """Gets the id of this BaseListing.

        Unique identifier representing a specific listing from the Marketcheck database

        :return: The id of this BaseListing.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BaseListing.

        Unique identifier representing a specific listing from the Marketcheck database

        :param id: The id of this BaseListing.
        :type id: str
        """

        self._id = id

    @property
    def in_transit(self):
        """Gets the in_transit of this BaseListing.

        in_transit of the listing

        :return: The in_transit of this BaseListing.
        :rtype: bool
        """
        return self._in_transit

    @in_transit.setter
    def in_transit(self, in_transit):
        """Sets the in_transit of this BaseListing.

        in_transit of the listing

        :param in_transit: The in_transit of this BaseListing.
        :type in_transit: bool
        """

        self._in_transit = in_transit

    @property
    def interior_color(self):
        """Gets the interior_color of this BaseListing.

        Interior color of the car

        :return: The interior_color of this BaseListing.
        :rtype: str
        """
        return self._interior_color

    @interior_color.setter
    def interior_color(self, interior_color):
        """Sets the interior_color of this BaseListing.

        Interior color of the car

        :param interior_color: The interior_color of this BaseListing.
        :type interior_color: str
        """

        self._interior_color = interior_color

    @property
    def inventory_type(self):
        """Gets the inventory_type of this BaseListing.

        Inventory type of car

        :return: The inventory_type of this BaseListing.
        :rtype: str
        """
        return self._inventory_type

    @inventory_type.setter
    def inventory_type(self, inventory_type):
        """Sets the inventory_type of this BaseListing.

        Inventory type of car

        :param inventory_type: The inventory_type of this BaseListing.
        :type inventory_type: str
        """

        self._inventory_type = inventory_type

    @property
    def is_certified(self):
        """Gets the is_certified of this BaseListing.

        Certified car

        :return: The is_certified of this BaseListing.
        :rtype: int
        """
        return self._is_certified

    @is_certified.setter
    def is_certified(self, is_certified):
        """Sets the is_certified of this BaseListing.

        Certified car

        :param is_certified: The is_certified of this BaseListing.
        :type is_certified: int
        """

        self._is_certified = is_certified

    @property
    def is_translated(self):
        """Gets the is_translated of this BaseListing.

        is_translated of the listing

        :return: The is_translated of this BaseListing.
        :rtype: bool
        """
        return self._is_translated

    @is_translated.setter
    def is_translated(self, is_translated):
        """Sets the is_translated of this BaseListing.

        is_translated of the listing

        :param is_translated: The is_translated of this BaseListing.
        :type is_translated: bool
        """

        self._is_translated = is_translated

    @property
    def last_seen_at(self):
        """Gets the last_seen_at of this BaseListing.

        Listing last seen at (most recent) timestamp

        :return: The last_seen_at of this BaseListing.
        :rtype: int
        """
        return self._last_seen_at

    @last_seen_at.setter
    def last_seen_at(self, last_seen_at):
        """Sets the last_seen_at of this BaseListing.

        Listing last seen at (most recent) timestamp

        :param last_seen_at: The last_seen_at of this BaseListing.
        :type last_seen_at: int
        """

        self._last_seen_at = last_seen_at

    @property
    def last_seen_at_date(self):
        """Gets the last_seen_at_date of this BaseListing.

        Listing last seen at (most recent) date

        :return: The last_seen_at_date of this BaseListing.
        :rtype: str
        """
        return self._last_seen_at_date

    @last_seen_at_date.setter
    def last_seen_at_date(self, last_seen_at_date):
        """Sets the last_seen_at_date of this BaseListing.

        Listing last seen at (most recent) date

        :param last_seen_at_date: The last_seen_at_date of this BaseListing.
        :type last_seen_at_date: str
        """

        self._last_seen_at_date = last_seen_at_date

    @property
    def leasing_options(self):
        """Gets the leasing_options of this BaseListing.

        Array of all finance offers for this listing

        :return: The leasing_options of this BaseListing.
        :rtype: List[ListingLease]
        """
        return self._leasing_options

    @leasing_options.setter
    def leasing_options(self, leasing_options):
        """Sets the leasing_options of this BaseListing.

        Array of all finance offers for this listing

        :param leasing_options: The leasing_options of this BaseListing.
        :type leasing_options: List[ListingLease]
        """

        self._leasing_options = leasing_options

    @property
    def media(self):
        """Gets the media of this BaseListing.


        :return: The media of this BaseListing.
        :rtype: ListingNestMedia
        """
        return self._media

    @media.setter
    def media(self, media):
        """Sets the media of this BaseListing.


        :param media: The media of this BaseListing.
        :type media: ListingNestMedia
        """

        self._media = media

    @property
    def miles(self):
        """Gets the miles of this BaseListing.

        Odometer reading / reported miles usage for the car

        :return: The miles of this BaseListing.
        :rtype: int
        """
        return self._miles

    @miles.setter
    def miles(self, miles):
        """Sets the miles of this BaseListing.

        Odometer reading / reported miles usage for the car

        :param miles: The miles of this BaseListing.
        :type miles: int
        """

        self._miles = miles

    @property
    def model_code(self):
        """Gets the model_code of this BaseListing.

        model_code of the listing

        :return: The model_code of this BaseListing.
        :rtype: str
        """
        return self._model_code

    @model_code.setter
    def model_code(self, model_code):
        """Sets the model_code of this BaseListing.

        model_code of the listing

        :param model_code: The model_code of this BaseListing.
        :type model_code: str
        """

        self._model_code = model_code

    @property
    def msrp(self):
        """Gets the msrp of this BaseListing.

        MSRP for the car

        :return: The msrp of this BaseListing.
        :rtype: int
        """
        return self._msrp

    @msrp.setter
    def msrp(self, msrp):
        """Sets the msrp of this BaseListing.

        MSRP for the car

        :param msrp: The msrp of this BaseListing.
        :type msrp: int
        """

        self._msrp = msrp

    @property
    def price(self):
        """Gets the price of this BaseListing.

        Asking price for the car

        :return: The price of this BaseListing.
        :rtype: int
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this BaseListing.

        Asking price for the car

        :param price: The price of this BaseListing.
        :type price: int
        """

        self._price = price

    @property
    def price_change_percent(self):
        """Gets the price_change_percent of this BaseListing.

        Percentage difference between the cars's current price and ref_price i.e. last reported price

        :return: The price_change_percent of this BaseListing.
        :rtype: float
        """
        return self._price_change_percent

    @price_change_percent.setter
    def price_change_percent(self, price_change_percent):
        """Sets the price_change_percent of this BaseListing.

        Percentage difference between the cars's current price and ref_price i.e. last reported price

        :param price_change_percent: The price_change_percent of this BaseListing.
        :type price_change_percent: float
        """

        self._price_change_percent = price_change_percent

    @property
    def ref_miles(self):
        """Gets the ref_miles of this BaseListing.

        Last Odometer reading / reported miles usage for the car. If the asking miles value is not or is available then the last_miles could perhaps be used. last_miles is the miles for the car listed on the source website as of last_miles_dt date

        :return: The ref_miles of this BaseListing.
        :rtype: str
        """
        return self._ref_miles

    @ref_miles.setter
    def ref_miles(self, ref_miles):
        """Sets the ref_miles of this BaseListing.

        Last Odometer reading / reported miles usage for the car. If the asking miles value is not or is available then the last_miles could perhaps be used. last_miles is the miles for the car listed on the source website as of last_miles_dt date

        :param ref_miles: The ref_miles of this BaseListing.
        :type ref_miles: str
        """

        self._ref_miles = ref_miles

    @property
    def ref_miles_dt(self):
        """Gets the ref_miles_dt of this BaseListing.

        The date at which the last miles was reported online. This is earlier to last_seen_date

        :return: The ref_miles_dt of this BaseListing.
        :rtype: int
        """
        return self._ref_miles_dt

    @ref_miles_dt.setter
    def ref_miles_dt(self, ref_miles_dt):
        """Sets the ref_miles_dt of this BaseListing.

        The date at which the last miles was reported online. This is earlier to last_seen_date

        :param ref_miles_dt: The ref_miles_dt of this BaseListing.
        :type ref_miles_dt: int
        """

        self._ref_miles_dt = ref_miles_dt

    @property
    def ref_price(self):
        """Gets the ref_price of this BaseListing.

        Last reported price for the car. If the asking price value is not or is available then the last_price could perhaps be used. last_price is the price for the car listed on the source website as of last_price_dt date

        :return: The ref_price of this BaseListing.
        :rtype: str
        """
        return self._ref_price

    @ref_price.setter
    def ref_price(self, ref_price):
        """Sets the ref_price of this BaseListing.

        Last reported price for the car. If the asking price value is not or is available then the last_price could perhaps be used. last_price is the price for the car listed on the source website as of last_price_dt date

        :param ref_price: The ref_price of this BaseListing.
        :type ref_price: str
        """

        self._ref_price = ref_price

    @property
    def ref_price_dt(self):
        """Gets the ref_price_dt of this BaseListing.

        The date at which the last price was reported online. This is earlier to last_seen_date

        :return: The ref_price_dt of this BaseListing.
        :rtype: int
        """
        return self._ref_price_dt

    @ref_price_dt.setter
    def ref_price_dt(self, ref_price_dt):
        """Sets the ref_price_dt of this BaseListing.

        The date at which the last price was reported online. This is earlier to last_seen_date

        :param ref_price_dt: The ref_price_dt of this BaseListing.
        :type ref_price_dt: int
        """

        self._ref_price_dt = ref_price_dt

    @property
    def scraped_at(self):
        """Gets the scraped_at of this BaseListing.

        Listing last seen at date timestamp

        :return: The scraped_at of this BaseListing.
        :rtype: float
        """
        return self._scraped_at

    @scraped_at.setter
    def scraped_at(self, scraped_at):
        """Sets the scraped_at of this BaseListing.

        Listing last seen at date timestamp

        :param scraped_at: The scraped_at of this BaseListing.
        :type scraped_at: float
        """

        self._scraped_at = scraped_at

    @property
    def scraped_at_date(self):
        """Gets the scraped_at_date of this BaseListing.

        Listing last seen at date

        :return: The scraped_at_date of this BaseListing.
        :rtype: str
        """
        return self._scraped_at_date

    @scraped_at_date.setter
    def scraped_at_date(self, scraped_at_date):
        """Sets the scraped_at_date of this BaseListing.

        Listing last seen at date

        :param scraped_at_date: The scraped_at_date of this BaseListing.
        :type scraped_at_date: str
        """

        self._scraped_at_date = scraped_at_date

    @property
    def seller_type(self):
        """Gets the seller_type of this BaseListing.

        Seller type for the car

        :return: The seller_type of this BaseListing.
        :rtype: str
        """
        return self._seller_type

    @seller_type.setter
    def seller_type(self, seller_type):
        """Sets the seller_type of this BaseListing.

        Seller type for the car

        :param seller_type: The seller_type of this BaseListing.
        :type seller_type: str
        """

        self._seller_type = seller_type

    @property
    def source(self):
        """Gets the source of this BaseListing.

        Source domain of the listing

        :return: The source of this BaseListing.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this BaseListing.

        Source domain of the listing

        :param source: The source of this BaseListing.
        :type source: str
        """

        self._source = source

    @property
    def stock_no(self):
        """Gets the stock_no of this BaseListing.

        Stock number of car in dealers inventory

        :return: The stock_no of this BaseListing.
        :rtype: str
        """
        return self._stock_no

    @stock_no.setter
    def stock_no(self, stock_no):
        """Sets the stock_no of this BaseListing.

        Stock number of car in dealers inventory

        :param stock_no: The stock_no of this BaseListing.
        :type stock_no: str
        """

        self._stock_no = stock_no

    @property
    def title_type(self):
        """Gets the title_type of this BaseListing.

        title_type of the listing

        :return: The title_type of this BaseListing.
        :rtype: str
        """
        return self._title_type

    @title_type.setter
    def title_type(self, title_type):
        """Sets the title_type of this BaseListing.

        title_type of the listing

        :param title_type: The title_type of this BaseListing.
        :type title_type: str
        """

        self._title_type = title_type

    @property
    def vdp_url(self):
        """Gets the vdp_url of this BaseListing.

        Vehicle Details Page url of the specific car

        :return: The vdp_url of this BaseListing.
        :rtype: str
        """
        return self._vdp_url

    @vdp_url.setter
    def vdp_url(self, vdp_url):
        """Sets the vdp_url of this BaseListing.

        Vehicle Details Page url of the specific car

        :param vdp_url: The vdp_url of this BaseListing.
        :type vdp_url: str
        """

        self._vdp_url = vdp_url

    @property
    def vin(self):
        """Gets the vin of this BaseListing.

        VIN for the car

        :return: The vin of this BaseListing.
        :rtype: str
        """
        return self._vin

    @vin.setter
    def vin(self, vin):
        """Sets the vin of this BaseListing.

        VIN for the car

        :param vin: The vin of this BaseListing.
        :type vin: str
        """

        self._vin = vin
