# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Economy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ghg_emissions_indicator: str=None, ghg_emissions_rating: float=None, smog_indicator: str=None, smog_rating: float=None):
        """Economy - a model defined in OpenAPI

        :param ghg_emissions_indicator: The ghg_emissions_indicator of this Economy.
        :param ghg_emissions_rating: The ghg_emissions_rating of this Economy.
        :param smog_indicator: The smog_indicator of this Economy.
        :param smog_rating: The smog_rating of this Economy.
        """
        self.openapi_types = {
            'ghg_emissions_indicator': str,
            'ghg_emissions_rating': float,
            'smog_indicator': str,
            'smog_rating': float
        }

        self.attribute_map = {
            'ghg_emissions_indicator': 'ghg_emissions_indicator',
            'ghg_emissions_rating': 'ghg_emissions_rating',
            'smog_indicator': 'smog_indicator',
            'smog_rating': 'smog_rating'
        }

        self._ghg_emissions_indicator = ghg_emissions_indicator
        self._ghg_emissions_rating = ghg_emissions_rating
        self._smog_indicator = smog_indicator
        self._smog_rating = smog_rating

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Economy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Economy of this Economy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ghg_emissions_indicator(self):
        """Gets the ghg_emissions_indicator of this Economy.

        Contains text like bad|Good|Very Good| Excellent

        :return: The ghg_emissions_indicator of this Economy.
        :rtype: str
        """
        return self._ghg_emissions_indicator

    @ghg_emissions_indicator.setter
    def ghg_emissions_indicator(self, ghg_emissions_indicator):
        """Sets the ghg_emissions_indicator of this Economy.

        Contains text like bad|Good|Very Good| Excellent

        :param ghg_emissions_indicator: The ghg_emissions_indicator of this Economy.
        :type ghg_emissions_indicator: str
        """

        self._ghg_emissions_indicator = ghg_emissions_indicator

    @property
    def ghg_emissions_rating(self):
        """Gets the ghg_emissions_rating of this Economy.

        Show vehicle impact on climate change in terms of greeenhouse gases. This rating will be in the range of 1 - 10

        :return: The ghg_emissions_rating of this Economy.
        :rtype: float
        """
        return self._ghg_emissions_rating

    @ghg_emissions_rating.setter
    def ghg_emissions_rating(self, ghg_emissions_rating):
        """Sets the ghg_emissions_rating of this Economy.

        Show vehicle impact on climate change in terms of greeenhouse gases. This rating will be in the range of 1 - 10

        :param ghg_emissions_rating: The ghg_emissions_rating of this Economy.
        :type ghg_emissions_rating: float
        """

        self._ghg_emissions_rating = ghg_emissions_rating

    @property
    def smog_indicator(self):
        """Gets the smog_indicator of this Economy.

        Contains text like bad|Good|Very Good| Excellent

        :return: The smog_indicator of this Economy.
        :rtype: str
        """
        return self._smog_indicator

    @smog_indicator.setter
    def smog_indicator(self, smog_indicator):
        """Sets the smog_indicator of this Economy.

        Contains text like bad|Good|Very Good| Excellent

        :param smog_indicator: The smog_indicator of this Economy.
        :type smog_indicator: str
        """

        self._smog_indicator = smog_indicator

    @property
    def smog_rating(self):
        """Gets the smog_rating of this Economy.

        Shows vehicle's emissions of pollutants known to cause smog and other forms of air pollution. This rating will be in the range of 1 - 10

        :return: The smog_rating of this Economy.
        :rtype: float
        """
        return self._smog_rating

    @smog_rating.setter
    def smog_rating(self, smog_rating):
        """Sets the smog_rating of this Economy.

        Shows vehicle's emissions of pollutants known to cause smog and other forms of air pollution. This rating will be in the range of 1 - 10

        :param smog_rating: The smog_rating of this Economy.
        :type smog_rating: float
        """

        self._smog_rating = smog_rating
