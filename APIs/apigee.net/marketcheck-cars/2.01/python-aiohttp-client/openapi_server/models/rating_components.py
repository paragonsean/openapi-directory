# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RatingComponents(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actual_rating: float=None, rating_condition: str=None):
        """RatingComponents - a model defined in OpenAPI

        :param actual_rating: The actual_rating of this RatingComponents.
        :param rating_condition: The rating_condition of this RatingComponents.
        """
        self.openapi_types = {
            'actual_rating': float,
            'rating_condition': str
        }

        self.attribute_map = {
            'actual_rating': 'actual_rating',
            'rating_condition': 'rating_condition'
        }

        self._actual_rating = actual_rating
        self._rating_condition = rating_condition

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RatingComponents':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RatingComponents of this RatingComponents.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actual_rating(self):
        """Gets the actual_rating of this RatingComponents.

        rating of car on that condition

        :return: The actual_rating of this RatingComponents.
        :rtype: float
        """
        return self._actual_rating

    @actual_rating.setter
    def actual_rating(self, actual_rating):
        """Sets the actual_rating of this RatingComponents.

        rating of car on that condition

        :param actual_rating: The actual_rating of this RatingComponents.
        :type actual_rating: float
        """

        self._actual_rating = actual_rating

    @property
    def rating_condition(self):
        """Gets the rating_condition of this RatingComponents.

        Specifices rating condition parameter

        :return: The rating_condition of this RatingComponents.
        :rtype: str
        """
        return self._rating_condition

    @rating_condition.setter
    def rating_condition(self, rating_condition):
        """Sets the rating_condition of this RatingComponents.

        Specifices rating condition parameter

        :param rating_condition: The rating_condition of this RatingComponents.
        :type rating_condition: str
        """

        self._rating_condition = rating_condition
