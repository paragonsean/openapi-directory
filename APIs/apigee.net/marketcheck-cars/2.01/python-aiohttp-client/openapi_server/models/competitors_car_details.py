# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompetitorsCarDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avg_market_value: str=None, miles: str=None, name: str=None, price: str=None):
        """CompetitorsCarDetails - a model defined in OpenAPI

        :param avg_market_value: The avg_market_value of this CompetitorsCarDetails.
        :param miles: The miles of this CompetitorsCarDetails.
        :param name: The name of this CompetitorsCarDetails.
        :param price: The price of this CompetitorsCarDetails.
        """
        self.openapi_types = {
            'avg_market_value': str,
            'miles': str,
            'name': str,
            'price': str
        }

        self.attribute_map = {
            'avg_market_value': 'avg_market_value',
            'miles': 'miles',
            'name': 'name',
            'price': 'price'
        }

        self._avg_market_value = avg_market_value
        self._miles = miles
        self._name = name
        self._price = price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompetitorsCarDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompetitorsCarDetails of this CompetitorsCarDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avg_market_value(self):
        """Gets the avg_market_value of this CompetitorsCarDetails.

        Estimated market value

        :return: The avg_market_value of this CompetitorsCarDetails.
        :rtype: str
        """
        return self._avg_market_value

    @avg_market_value.setter
    def avg_market_value(self, avg_market_value):
        """Sets the avg_market_value of this CompetitorsCarDetails.

        Estimated market value

        :param avg_market_value: The avg_market_value of this CompetitorsCarDetails.
        :type avg_market_value: str
        """

        self._avg_market_value = avg_market_value

    @property
    def miles(self):
        """Gets the miles of this CompetitorsCarDetails.

        mileage of car

        :return: The miles of this CompetitorsCarDetails.
        :rtype: str
        """
        return self._miles

    @miles.setter
    def miles(self, miles):
        """Sets the miles of this CompetitorsCarDetails.

        mileage of car

        :param miles: The miles of this CompetitorsCarDetails.
        :type miles: str
        """

        self._miles = miles

    @property
    def name(self):
        """Gets the name of this CompetitorsCarDetails.

        Current car name

        :return: The name of this CompetitorsCarDetails.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this CompetitorsCarDetails.

        Current car name

        :param name: The name of this CompetitorsCarDetails.
        :type name: str
        """

        self._name = name

    @property
    def price(self):
        """Gets the price of this CompetitorsCarDetails.

        price of car

        :return: The price of this CompetitorsCarDetails.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CompetitorsCarDetails.

        price of car

        :param price: The price of this CompetitorsCarDetails.
        :type price: str
        """

        self._price = price
