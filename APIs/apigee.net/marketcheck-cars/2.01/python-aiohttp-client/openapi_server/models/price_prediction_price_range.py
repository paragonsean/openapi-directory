# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PricePredictionPriceRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lower_bound: int=None, upper_bound: int=None):
        """PricePredictionPriceRange - a model defined in OpenAPI

        :param lower_bound: The lower_bound of this PricePredictionPriceRange.
        :param upper_bound: The upper_bound of this PricePredictionPriceRange.
        """
        self.openapi_types = {
            'lower_bound': int,
            'upper_bound': int
        }

        self.attribute_map = {
            'lower_bound': 'lower_bound',
            'upper_bound': 'upper_bound'
        }

        self._lower_bound = lower_bound
        self._upper_bound = upper_bound

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PricePredictionPriceRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PricePrediction_price_range of this PricePredictionPriceRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lower_bound(self):
        """Gets the lower_bound of this PricePredictionPriceRange.

        Lower bound

        :return: The lower_bound of this PricePredictionPriceRange.
        :rtype: int
        """
        return self._lower_bound

    @lower_bound.setter
    def lower_bound(self, lower_bound):
        """Sets the lower_bound of this PricePredictionPriceRange.

        Lower bound

        :param lower_bound: The lower_bound of this PricePredictionPriceRange.
        :type lower_bound: int
        """

        self._lower_bound = lower_bound

    @property
    def upper_bound(self):
        """Gets the upper_bound of this PricePredictionPriceRange.

        Upper bound

        :return: The upper_bound of this PricePredictionPriceRange.
        :rtype: int
        """
        return self._upper_bound

    @upper_bound.setter
    def upper_bound(self, upper_bound):
        """Sets the upper_bound of this PricePredictionPriceRange.

        Upper bound

        :param upper_bound: The upper_bound of this PricePredictionPriceRange.
        :type upper_bound: int
        """

        self._upper_bound = upper_bound
