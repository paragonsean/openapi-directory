# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CRMResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, for_sale: str=None):
        """CRMResponse - a model defined in OpenAPI

        :param for_sale: The for_sale of this CRMResponse.
        """
        self.openapi_types = {
            'for_sale': str
        }

        self.attribute_map = {
            'for_sale': 'for_sale'
        }

        self._for_sale = for_sale

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CRMResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CRMResponse of this CRMResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def for_sale(self):
        """Gets the for_sale of this CRMResponse.

        Boolean to indicate whether given vin has had listing after given date or not

        :return: The for_sale of this CRMResponse.
        :rtype: str
        """
        return self._for_sale

    @for_sale.setter
    def for_sale(self, for_sale):
        """Sets the for_sale of this CRMResponse.

        Boolean to indicate whether given vin has had listing after given date or not

        :param for_sale: The for_sale of this CRMResponse.
        :type for_sale: str
        """

        self._for_sale = for_sale
