# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UKRVBuild(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, area: str=None, berths: str=None, category: str=None, chassis: str=None, drive_type: str=None, drivetrain: str=None, engine: str=None, engine_size: str=None, exterior_length: str=None, floorplan: str=None, floorplan_layout: str=None, fuel_type: str=None, gvwr: str=None, interior_length: str=None, inventory_type: str=None, make: str=None, model: str=None, mtplm: str=None, slideouts: str=None, steering: str=None, sub_category: str=None, transmission: str=None, width: str=None, year: int=None):
        """UKRVBuild - a model defined in OpenAPI

        :param area: The area of this UKRVBuild.
        :param berths: The berths of this UKRVBuild.
        :param category: The category of this UKRVBuild.
        :param chassis: The chassis of this UKRVBuild.
        :param drive_type: The drive_type of this UKRVBuild.
        :param drivetrain: The drivetrain of this UKRVBuild.
        :param engine: The engine of this UKRVBuild.
        :param engine_size: The engine_size of this UKRVBuild.
        :param exterior_length: The exterior_length of this UKRVBuild.
        :param floorplan: The floorplan of this UKRVBuild.
        :param floorplan_layout: The floorplan_layout of this UKRVBuild.
        :param fuel_type: The fuel_type of this UKRVBuild.
        :param gvwr: The gvwr of this UKRVBuild.
        :param interior_length: The interior_length of this UKRVBuild.
        :param inventory_type: The inventory_type of this UKRVBuild.
        :param make: The make of this UKRVBuild.
        :param model: The model of this UKRVBuild.
        :param mtplm: The mtplm of this UKRVBuild.
        :param slideouts: The slideouts of this UKRVBuild.
        :param steering: The steering of this UKRVBuild.
        :param sub_category: The sub_category of this UKRVBuild.
        :param transmission: The transmission of this UKRVBuild.
        :param width: The width of this UKRVBuild.
        :param year: The year of this UKRVBuild.
        """
        self.openapi_types = {
            'area': str,
            'berths': str,
            'category': str,
            'chassis': str,
            'drive_type': str,
            'drivetrain': str,
            'engine': str,
            'engine_size': str,
            'exterior_length': str,
            'floorplan': str,
            'floorplan_layout': str,
            'fuel_type': str,
            'gvwr': str,
            'interior_length': str,
            'inventory_type': str,
            'make': str,
            'model': str,
            'mtplm': str,
            'slideouts': str,
            'steering': str,
            'sub_category': str,
            'transmission': str,
            'width': str,
            'year': int
        }

        self.attribute_map = {
            'area': 'area',
            'berths': 'berths',
            'category': 'category',
            'chassis': 'chassis',
            'drive_type': 'drive_type',
            'drivetrain': 'drivetrain',
            'engine': 'engine',
            'engine_size': 'engine_size',
            'exterior_length': 'exterior_length',
            'floorplan': 'floorplan',
            'floorplan_layout': 'floorplan_layout',
            'fuel_type': 'fuel_type',
            'gvwr': 'gvwr',
            'interior_length': 'interior_length',
            'inventory_type': 'inventory_type',
            'make': 'make',
            'model': 'model',
            'mtplm': 'mtplm',
            'slideouts': 'slideouts',
            'steering': 'steering',
            'sub_category': 'sub_category',
            'transmission': 'transmission',
            'width': 'width',
            'year': 'year'
        }

        self._area = area
        self._berths = berths
        self._category = category
        self._chassis = chassis
        self._drive_type = drive_type
        self._drivetrain = drivetrain
        self._engine = engine
        self._engine_size = engine_size
        self._exterior_length = exterior_length
        self._floorplan = floorplan
        self._floorplan_layout = floorplan_layout
        self._fuel_type = fuel_type
        self._gvwr = gvwr
        self._interior_length = interior_length
        self._inventory_type = inventory_type
        self._make = make
        self._model = model
        self._mtplm = mtplm
        self._slideouts = slideouts
        self._steering = steering
        self._sub_category = sub_category
        self._transmission = transmission
        self._width = width
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UKRVBuild':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UKRVBuild of this UKRVBuild.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def area(self):
        """Gets the area of this UKRVBuild.

        Area of the RV

        :return: The area of this UKRVBuild.
        :rtype: str
        """
        return self._area

    @area.setter
    def area(self, area):
        """Sets the area of this UKRVBuild.

        Area of the RV

        :param area: The area of this UKRVBuild.
        :type area: str
        """

        self._area = area

    @property
    def berths(self):
        """Gets the berths of this UKRVBuild.

        berths of RV

        :return: The berths of this UKRVBuild.
        :rtype: str
        """
        return self._berths

    @berths.setter
    def berths(self, berths):
        """Sets the berths of this UKRVBuild.

        berths of RV

        :param berths: The berths of this UKRVBuild.
        :type berths: str
        """

        self._berths = berths

    @property
    def category(self):
        """Gets the category of this UKRVBuild.

        category of the RV

        :return: The category of this UKRVBuild.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this UKRVBuild.

        category of the RV

        :param category: The category of this UKRVBuild.
        :type category: str
        """

        self._category = category

    @property
    def chassis(self):
        """Gets the chassis of this UKRVBuild.

        chassis of RV

        :return: The chassis of this UKRVBuild.
        :rtype: str
        """
        return self._chassis

    @chassis.setter
    def chassis(self, chassis):
        """Sets the chassis of this UKRVBuild.

        chassis of RV

        :param chassis: The chassis of this UKRVBuild.
        :type chassis: str
        """

        self._chassis = chassis

    @property
    def drive_type(self):
        """Gets the drive_type of this UKRVBuild.

        drive_type of RV

        :return: The drive_type of this UKRVBuild.
        :rtype: str
        """
        return self._drive_type

    @drive_type.setter
    def drive_type(self, drive_type):
        """Sets the drive_type of this UKRVBuild.

        drive_type of RV

        :param drive_type: The drive_type of this UKRVBuild.
        :type drive_type: str
        """

        self._drive_type = drive_type

    @property
    def drivetrain(self):
        """Gets the drivetrain of this UKRVBuild.

        Drivetrain of the RV

        :return: The drivetrain of this UKRVBuild.
        :rtype: str
        """
        return self._drivetrain

    @drivetrain.setter
    def drivetrain(self, drivetrain):
        """Sets the drivetrain of this UKRVBuild.

        Drivetrain of the RV

        :param drivetrain: The drivetrain of this UKRVBuild.
        :type drivetrain: str
        """

        self._drivetrain = drivetrain

    @property
    def engine(self):
        """Gets the engine of this UKRVBuild.

        Engine of the RV

        :return: The engine of this UKRVBuild.
        :rtype: str
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this UKRVBuild.

        Engine of the RV

        :param engine: The engine of this UKRVBuild.
        :type engine: str
        """

        self._engine = engine

    @property
    def engine_size(self):
        """Gets the engine_size of this UKRVBuild.

        engine_size of RV

        :return: The engine_size of this UKRVBuild.
        :rtype: str
        """
        return self._engine_size

    @engine_size.setter
    def engine_size(self, engine_size):
        """Sets the engine_size of this UKRVBuild.

        engine_size of RV

        :param engine_size: The engine_size of this UKRVBuild.
        :type engine_size: str
        """

        self._engine_size = engine_size

    @property
    def exterior_length(self):
        """Gets the exterior_length of this UKRVBuild.

        exterior_length of RV

        :return: The exterior_length of this UKRVBuild.
        :rtype: str
        """
        return self._exterior_length

    @exterior_length.setter
    def exterior_length(self, exterior_length):
        """Sets the exterior_length of this UKRVBuild.

        exterior_length of RV

        :param exterior_length: The exterior_length of this UKRVBuild.
        :type exterior_length: str
        """

        self._exterior_length = exterior_length

    @property
    def floorplan(self):
        """Gets the floorplan of this UKRVBuild.

        floorplan of RV

        :return: The floorplan of this UKRVBuild.
        :rtype: str
        """
        return self._floorplan

    @floorplan.setter
    def floorplan(self, floorplan):
        """Sets the floorplan of this UKRVBuild.

        floorplan of RV

        :param floorplan: The floorplan of this UKRVBuild.
        :type floorplan: str
        """

        self._floorplan = floorplan

    @property
    def floorplan_layout(self):
        """Gets the floorplan_layout of this UKRVBuild.

        floorplan_layout of RV

        :return: The floorplan_layout of this UKRVBuild.
        :rtype: str
        """
        return self._floorplan_layout

    @floorplan_layout.setter
    def floorplan_layout(self, floorplan_layout):
        """Sets the floorplan_layout of this UKRVBuild.

        floorplan_layout of RV

        :param floorplan_layout: The floorplan_layout of this UKRVBuild.
        :type floorplan_layout: str
        """

        self._floorplan_layout = floorplan_layout

    @property
    def fuel_type(self):
        """Gets the fuel_type of this UKRVBuild.

        Fuel type of the RV

        :return: The fuel_type of this UKRVBuild.
        :rtype: str
        """
        return self._fuel_type

    @fuel_type.setter
    def fuel_type(self, fuel_type):
        """Sets the fuel_type of this UKRVBuild.

        Fuel type of the RV

        :param fuel_type: The fuel_type of this UKRVBuild.
        :type fuel_type: str
        """

        self._fuel_type = fuel_type

    @property
    def gvwr(self):
        """Gets the gvwr of this UKRVBuild.

        Gross Vehicle Weight Ratio of RV

        :return: The gvwr of this UKRVBuild.
        :rtype: str
        """
        return self._gvwr

    @gvwr.setter
    def gvwr(self, gvwr):
        """Sets the gvwr of this UKRVBuild.

        Gross Vehicle Weight Ratio of RV

        :param gvwr: The gvwr of this UKRVBuild.
        :type gvwr: str
        """

        self._gvwr = gvwr

    @property
    def interior_length(self):
        """Gets the interior_length of this UKRVBuild.

        interior_length of RV

        :return: The interior_length of this UKRVBuild.
        :rtype: str
        """
        return self._interior_length

    @interior_length.setter
    def interior_length(self, interior_length):
        """Sets the interior_length of this UKRVBuild.

        interior_length of RV

        :param interior_length: The interior_length of this UKRVBuild.
        :type interior_length: str
        """

        self._interior_length = interior_length

    @property
    def inventory_type(self):
        """Gets the inventory_type of this UKRVBuild.

        Inventory type of the RV

        :return: The inventory_type of this UKRVBuild.
        :rtype: str
        """
        return self._inventory_type

    @inventory_type.setter
    def inventory_type(self, inventory_type):
        """Sets the inventory_type of this UKRVBuild.

        Inventory type of the RV

        :param inventory_type: The inventory_type of this UKRVBuild.
        :type inventory_type: str
        """

        self._inventory_type = inventory_type

    @property
    def make(self):
        """Gets the make of this UKRVBuild.

        RV Make

        :return: The make of this UKRVBuild.
        :rtype: str
        """
        return self._make

    @make.setter
    def make(self, make):
        """Sets the make of this UKRVBuild.

        RV Make

        :param make: The make of this UKRVBuild.
        :type make: str
        """

        self._make = make

    @property
    def model(self):
        """Gets the model of this UKRVBuild.

        RV model

        :return: The model of this UKRVBuild.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this UKRVBuild.

        RV model

        :param model: The model of this UKRVBuild.
        :type model: str
        """

        self._model = model

    @property
    def mtplm(self):
        """Gets the mtplm of this UKRVBuild.

        mtplm of RV

        :return: The mtplm of this UKRVBuild.
        :rtype: str
        """
        return self._mtplm

    @mtplm.setter
    def mtplm(self, mtplm):
        """Sets the mtplm of this UKRVBuild.

        mtplm of RV

        :param mtplm: The mtplm of this UKRVBuild.
        :type mtplm: str
        """

        self._mtplm = mtplm

    @property
    def slideouts(self):
        """Gets the slideouts of this UKRVBuild.

        Slideouts of the RV

        :return: The slideouts of this UKRVBuild.
        :rtype: str
        """
        return self._slideouts

    @slideouts.setter
    def slideouts(self, slideouts):
        """Sets the slideouts of this UKRVBuild.

        Slideouts of the RV

        :param slideouts: The slideouts of this UKRVBuild.
        :type slideouts: str
        """

        self._slideouts = slideouts

    @property
    def steering(self):
        """Gets the steering of this UKRVBuild.

        steering of RV

        :return: The steering of this UKRVBuild.
        :rtype: str
        """
        return self._steering

    @steering.setter
    def steering(self, steering):
        """Sets the steering of this UKRVBuild.

        steering of RV

        :param steering: The steering of this UKRVBuild.
        :type steering: str
        """

        self._steering = steering

    @property
    def sub_category(self):
        """Gets the sub_category of this UKRVBuild.

        sub_category of the RV

        :return: The sub_category of this UKRVBuild.
        :rtype: str
        """
        return self._sub_category

    @sub_category.setter
    def sub_category(self, sub_category):
        """Sets the sub_category of this UKRVBuild.

        sub_category of the RV

        :param sub_category: The sub_category of this UKRVBuild.
        :type sub_category: str
        """

        self._sub_category = sub_category

    @property
    def transmission(self):
        """Gets the transmission of this UKRVBuild.

        Transmission of the RV

        :return: The transmission of this UKRVBuild.
        :rtype: str
        """
        return self._transmission

    @transmission.setter
    def transmission(self, transmission):
        """Sets the transmission of this UKRVBuild.

        Transmission of the RV

        :param transmission: The transmission of this UKRVBuild.
        :type transmission: str
        """

        self._transmission = transmission

    @property
    def width(self):
        """Gets the width of this UKRVBuild.

        width of RV

        :return: The width of this UKRVBuild.
        :rtype: str
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this UKRVBuild.

        width of RV

        :param width: The width of this UKRVBuild.
        :type width: str
        """

        self._width = width

    @property
    def year(self):
        """Gets the year of this UKRVBuild.

        Year of the RV

        :return: The year of this UKRVBuild.
        :rtype: int
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this UKRVBuild.

        Year of the RV

        :param year: The year of this UKRVBuild.
        :type year: int
        """

        self._year = year
