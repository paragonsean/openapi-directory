# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.facet_item import FacetItem
from openapi_server import util


class HeavyEquipmentsSearchFacets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, body_type: List[FacetItem]=None, category: List[FacetItem]=None, city: List[FacetItem]=None, cylinders: List[FacetItem]=None, dealer_id: List[FacetItem]=None, drivetrain: List[FacetItem]=None, engine: List[FacetItem]=None, exterior_color: List[FacetItem]=None, fuel_type: List[FacetItem]=None, interior_color: List[FacetItem]=None, inventory_type: List[FacetItem]=None, make: List[FacetItem]=None, model: List[FacetItem]=None, seller_name: List[FacetItem]=None, source: List[FacetItem]=None, state: List[FacetItem]=None, sub_category: List[FacetItem]=None, transmission: List[FacetItem]=None, trim: List[FacetItem]=None, year: List[FacetItem]=None):
        """HeavyEquipmentsSearchFacets - a model defined in OpenAPI

        :param body_type: The body_type of this HeavyEquipmentsSearchFacets.
        :param category: The category of this HeavyEquipmentsSearchFacets.
        :param city: The city of this HeavyEquipmentsSearchFacets.
        :param cylinders: The cylinders of this HeavyEquipmentsSearchFacets.
        :param dealer_id: The dealer_id of this HeavyEquipmentsSearchFacets.
        :param drivetrain: The drivetrain of this HeavyEquipmentsSearchFacets.
        :param engine: The engine of this HeavyEquipmentsSearchFacets.
        :param exterior_color: The exterior_color of this HeavyEquipmentsSearchFacets.
        :param fuel_type: The fuel_type of this HeavyEquipmentsSearchFacets.
        :param interior_color: The interior_color of this HeavyEquipmentsSearchFacets.
        :param inventory_type: The inventory_type of this HeavyEquipmentsSearchFacets.
        :param make: The make of this HeavyEquipmentsSearchFacets.
        :param model: The model of this HeavyEquipmentsSearchFacets.
        :param seller_name: The seller_name of this HeavyEquipmentsSearchFacets.
        :param source: The source of this HeavyEquipmentsSearchFacets.
        :param state: The state of this HeavyEquipmentsSearchFacets.
        :param sub_category: The sub_category of this HeavyEquipmentsSearchFacets.
        :param transmission: The transmission of this HeavyEquipmentsSearchFacets.
        :param trim: The trim of this HeavyEquipmentsSearchFacets.
        :param year: The year of this HeavyEquipmentsSearchFacets.
        """
        self.openapi_types = {
            'body_type': List[FacetItem],
            'category': List[FacetItem],
            'city': List[FacetItem],
            'cylinders': List[FacetItem],
            'dealer_id': List[FacetItem],
            'drivetrain': List[FacetItem],
            'engine': List[FacetItem],
            'exterior_color': List[FacetItem],
            'fuel_type': List[FacetItem],
            'interior_color': List[FacetItem],
            'inventory_type': List[FacetItem],
            'make': List[FacetItem],
            'model': List[FacetItem],
            'seller_name': List[FacetItem],
            'source': List[FacetItem],
            'state': List[FacetItem],
            'sub_category': List[FacetItem],
            'transmission': List[FacetItem],
            'trim': List[FacetItem],
            'year': List[FacetItem]
        }

        self.attribute_map = {
            'body_type': 'body_type',
            'category': 'category',
            'city': 'city',
            'cylinders': 'cylinders',
            'dealer_id': 'dealer_id',
            'drivetrain': 'drivetrain',
            'engine': 'engine',
            'exterior_color': 'exterior_color',
            'fuel_type': 'fuel_type',
            'interior_color': 'interior_color',
            'inventory_type': 'inventory_type',
            'make': 'make',
            'model': 'model',
            'seller_name': 'seller_name',
            'source': 'source',
            'state': 'state',
            'sub_category': 'sub_category',
            'transmission': 'transmission',
            'trim': 'trim',
            'year': 'year'
        }

        self._body_type = body_type
        self._category = category
        self._city = city
        self._cylinders = cylinders
        self._dealer_id = dealer_id
        self._drivetrain = drivetrain
        self._engine = engine
        self._exterior_color = exterior_color
        self._fuel_type = fuel_type
        self._interior_color = interior_color
        self._inventory_type = inventory_type
        self._make = make
        self._model = model
        self._seller_name = seller_name
        self._source = source
        self._state = state
        self._sub_category = sub_category
        self._transmission = transmission
        self._trim = trim
        self._year = year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HeavyEquipmentsSearchFacets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HeavyEquipmentsSearchFacets of this HeavyEquipmentsSearchFacets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def body_type(self):
        """Gets the body_type of this HeavyEquipmentsSearchFacets.


        :return: The body_type of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._body_type

    @body_type.setter
    def body_type(self, body_type):
        """Sets the body_type of this HeavyEquipmentsSearchFacets.


        :param body_type: The body_type of this HeavyEquipmentsSearchFacets.
        :type body_type: List[FacetItem]
        """

        self._body_type = body_type

    @property
    def category(self):
        """Gets the category of this HeavyEquipmentsSearchFacets.


        :return: The category of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this HeavyEquipmentsSearchFacets.


        :param category: The category of this HeavyEquipmentsSearchFacets.
        :type category: List[FacetItem]
        """

        self._category = category

    @property
    def city(self):
        """Gets the city of this HeavyEquipmentsSearchFacets.


        :return: The city of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this HeavyEquipmentsSearchFacets.


        :param city: The city of this HeavyEquipmentsSearchFacets.
        :type city: List[FacetItem]
        """

        self._city = city

    @property
    def cylinders(self):
        """Gets the cylinders of this HeavyEquipmentsSearchFacets.


        :return: The cylinders of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._cylinders

    @cylinders.setter
    def cylinders(self, cylinders):
        """Sets the cylinders of this HeavyEquipmentsSearchFacets.


        :param cylinders: The cylinders of this HeavyEquipmentsSearchFacets.
        :type cylinders: List[FacetItem]
        """

        self._cylinders = cylinders

    @property
    def dealer_id(self):
        """Gets the dealer_id of this HeavyEquipmentsSearchFacets.


        :return: The dealer_id of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._dealer_id

    @dealer_id.setter
    def dealer_id(self, dealer_id):
        """Sets the dealer_id of this HeavyEquipmentsSearchFacets.


        :param dealer_id: The dealer_id of this HeavyEquipmentsSearchFacets.
        :type dealer_id: List[FacetItem]
        """

        self._dealer_id = dealer_id

    @property
    def drivetrain(self):
        """Gets the drivetrain of this HeavyEquipmentsSearchFacets.


        :return: The drivetrain of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._drivetrain

    @drivetrain.setter
    def drivetrain(self, drivetrain):
        """Sets the drivetrain of this HeavyEquipmentsSearchFacets.


        :param drivetrain: The drivetrain of this HeavyEquipmentsSearchFacets.
        :type drivetrain: List[FacetItem]
        """

        self._drivetrain = drivetrain

    @property
    def engine(self):
        """Gets the engine of this HeavyEquipmentsSearchFacets.


        :return: The engine of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._engine

    @engine.setter
    def engine(self, engine):
        """Sets the engine of this HeavyEquipmentsSearchFacets.


        :param engine: The engine of this HeavyEquipmentsSearchFacets.
        :type engine: List[FacetItem]
        """

        self._engine = engine

    @property
    def exterior_color(self):
        """Gets the exterior_color of this HeavyEquipmentsSearchFacets.


        :return: The exterior_color of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._exterior_color

    @exterior_color.setter
    def exterior_color(self, exterior_color):
        """Sets the exterior_color of this HeavyEquipmentsSearchFacets.


        :param exterior_color: The exterior_color of this HeavyEquipmentsSearchFacets.
        :type exterior_color: List[FacetItem]
        """

        self._exterior_color = exterior_color

    @property
    def fuel_type(self):
        """Gets the fuel_type of this HeavyEquipmentsSearchFacets.


        :return: The fuel_type of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._fuel_type

    @fuel_type.setter
    def fuel_type(self, fuel_type):
        """Sets the fuel_type of this HeavyEquipmentsSearchFacets.


        :param fuel_type: The fuel_type of this HeavyEquipmentsSearchFacets.
        :type fuel_type: List[FacetItem]
        """

        self._fuel_type = fuel_type

    @property
    def interior_color(self):
        """Gets the interior_color of this HeavyEquipmentsSearchFacets.


        :return: The interior_color of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._interior_color

    @interior_color.setter
    def interior_color(self, interior_color):
        """Sets the interior_color of this HeavyEquipmentsSearchFacets.


        :param interior_color: The interior_color of this HeavyEquipmentsSearchFacets.
        :type interior_color: List[FacetItem]
        """

        self._interior_color = interior_color

    @property
    def inventory_type(self):
        """Gets the inventory_type of this HeavyEquipmentsSearchFacets.


        :return: The inventory_type of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._inventory_type

    @inventory_type.setter
    def inventory_type(self, inventory_type):
        """Sets the inventory_type of this HeavyEquipmentsSearchFacets.


        :param inventory_type: The inventory_type of this HeavyEquipmentsSearchFacets.
        :type inventory_type: List[FacetItem]
        """

        self._inventory_type = inventory_type

    @property
    def make(self):
        """Gets the make of this HeavyEquipmentsSearchFacets.


        :return: The make of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._make

    @make.setter
    def make(self, make):
        """Sets the make of this HeavyEquipmentsSearchFacets.


        :param make: The make of this HeavyEquipmentsSearchFacets.
        :type make: List[FacetItem]
        """

        self._make = make

    @property
    def model(self):
        """Gets the model of this HeavyEquipmentsSearchFacets.


        :return: The model of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this HeavyEquipmentsSearchFacets.


        :param model: The model of this HeavyEquipmentsSearchFacets.
        :type model: List[FacetItem]
        """

        self._model = model

    @property
    def seller_name(self):
        """Gets the seller_name of this HeavyEquipmentsSearchFacets.


        :return: The seller_name of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._seller_name

    @seller_name.setter
    def seller_name(self, seller_name):
        """Sets the seller_name of this HeavyEquipmentsSearchFacets.


        :param seller_name: The seller_name of this HeavyEquipmentsSearchFacets.
        :type seller_name: List[FacetItem]
        """

        self._seller_name = seller_name

    @property
    def source(self):
        """Gets the source of this HeavyEquipmentsSearchFacets.


        :return: The source of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this HeavyEquipmentsSearchFacets.


        :param source: The source of this HeavyEquipmentsSearchFacets.
        :type source: List[FacetItem]
        """

        self._source = source

    @property
    def state(self):
        """Gets the state of this HeavyEquipmentsSearchFacets.


        :return: The state of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this HeavyEquipmentsSearchFacets.


        :param state: The state of this HeavyEquipmentsSearchFacets.
        :type state: List[FacetItem]
        """

        self._state = state

    @property
    def sub_category(self):
        """Gets the sub_category of this HeavyEquipmentsSearchFacets.


        :return: The sub_category of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._sub_category

    @sub_category.setter
    def sub_category(self, sub_category):
        """Sets the sub_category of this HeavyEquipmentsSearchFacets.


        :param sub_category: The sub_category of this HeavyEquipmentsSearchFacets.
        :type sub_category: List[FacetItem]
        """

        self._sub_category = sub_category

    @property
    def transmission(self):
        """Gets the transmission of this HeavyEquipmentsSearchFacets.


        :return: The transmission of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._transmission

    @transmission.setter
    def transmission(self, transmission):
        """Sets the transmission of this HeavyEquipmentsSearchFacets.


        :param transmission: The transmission of this HeavyEquipmentsSearchFacets.
        :type transmission: List[FacetItem]
        """

        self._transmission = transmission

    @property
    def trim(self):
        """Gets the trim of this HeavyEquipmentsSearchFacets.


        :return: The trim of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._trim

    @trim.setter
    def trim(self, trim):
        """Sets the trim of this HeavyEquipmentsSearchFacets.


        :param trim: The trim of this HeavyEquipmentsSearchFacets.
        :type trim: List[FacetItem]
        """

        self._trim = trim

    @property
    def year(self):
        """Gets the year of this HeavyEquipmentsSearchFacets.


        :return: The year of this HeavyEquipmentsSearchFacets.
        :rtype: List[FacetItem]
        """
        return self._year

    @year.setter
    def year(self, year):
        """Sets the year of this HeavyEquipmentsSearchFacets.


        :param year: The year of this HeavyEquipmentsSearchFacets.
        :type year: List[FacetItem]
        """

        self._year = year
