# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VinReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, icon: str=None, some_text: str=None):
        """VinReport - a model defined in OpenAPI

        :param icon: The icon of this VinReport.
        :param some_text: The some_text of this VinReport.
        """
        self.openapi_types = {
            'icon': str,
            'some_text': str
        }

        self.attribute_map = {
            'icon': 'icon',
            'some_text': 'some_text'
        }

        self._icon = icon
        self._some_text = some_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VinReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VinReport of this VinReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def icon(self):
        """Gets the icon of this VinReport.

        icon url

        :return: The icon of this VinReport.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this VinReport.

        icon url

        :param icon: The icon of this VinReport.
        :type icon: str
        """

        self._icon = icon

    @property
    def some_text(self):
        """Gets the some_text of this VinReport.

        Some descriptional text

        :return: The some_text of this VinReport.
        :rtype: str
        """
        return self._some_text

    @some_text.setter
    def some_text(self, some_text):
        """Sets the some_text of this VinReport.

        Some descriptional text

        :param some_text: The some_text of this VinReport.
        :type some_text: str
        """

        self._some_text = some_text
