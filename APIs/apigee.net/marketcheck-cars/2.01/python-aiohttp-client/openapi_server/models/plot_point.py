# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PlotPoint(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dom: float=None, id: str=None, miles: float=None, msrp: float=None, price: float=None, seller_name: str=None, vin: str=None):
        """PlotPoint - a model defined in OpenAPI

        :param dom: The dom of this PlotPoint.
        :param id: The id of this PlotPoint.
        :param miles: The miles of this PlotPoint.
        :param msrp: The msrp of this PlotPoint.
        :param price: The price of this PlotPoint.
        :param seller_name: The seller_name of this PlotPoint.
        :param vin: The vin of this PlotPoint.
        """
        self.openapi_types = {
            'dom': float,
            'id': str,
            'miles': float,
            'msrp': float,
            'price': float,
            'seller_name': str,
            'vin': str
        }

        self.attribute_map = {
            'dom': 'dom',
            'id': 'id',
            'miles': 'miles',
            'msrp': 'msrp',
            'price': 'price',
            'seller_name': 'seller_name',
            'vin': 'vin'
        }

        self._dom = dom
        self._id = id
        self._miles = miles
        self._msrp = msrp
        self._price = price
        self._seller_name = seller_name
        self._vin = vin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlotPoint':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlotPoint of this PlotPoint.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dom(self):
        """Gets the dom of this PlotPoint.

        DOM

        :return: The dom of this PlotPoint.
        :rtype: float
        """
        return self._dom

    @dom.setter
    def dom(self, dom):
        """Sets the dom of this PlotPoint.

        DOM

        :param dom: The dom of this PlotPoint.
        :type dom: float
        """

        self._dom = dom

    @property
    def id(self):
        """Gets the id of this PlotPoint.

        Listing id

        :return: The id of this PlotPoint.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this PlotPoint.

        Listing id

        :param id: The id of this PlotPoint.
        :type id: str
        """

        self._id = id

    @property
    def miles(self):
        """Gets the miles of this PlotPoint.

        Miles

        :return: The miles of this PlotPoint.
        :rtype: float
        """
        return self._miles

    @miles.setter
    def miles(self, miles):
        """Sets the miles of this PlotPoint.

        Miles

        :param miles: The miles of this PlotPoint.
        :type miles: float
        """

        self._miles = miles

    @property
    def msrp(self):
        """Gets the msrp of this PlotPoint.

        Msrp

        :return: The msrp of this PlotPoint.
        :rtype: float
        """
        return self._msrp

    @msrp.setter
    def msrp(self, msrp):
        """Sets the msrp of this PlotPoint.

        Msrp

        :param msrp: The msrp of this PlotPoint.
        :type msrp: float
        """

        self._msrp = msrp

    @property
    def price(self):
        """Gets the price of this PlotPoint.

        Price

        :return: The price of this PlotPoint.
        :rtype: float
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this PlotPoint.

        Price

        :param price: The price of this PlotPoint.
        :type price: float
        """

        self._price = price

    @property
    def seller_name(self):
        """Gets the seller_name of this PlotPoint.

        Seller name

        :return: The seller_name of this PlotPoint.
        :rtype: str
        """
        return self._seller_name

    @seller_name.setter
    def seller_name(self, seller_name):
        """Sets the seller_name of this PlotPoint.

        Seller name

        :param seller_name: The seller_name of this PlotPoint.
        :type seller_name: str
        """

        self._seller_name = seller_name

    @property
    def vin(self):
        """Gets the vin of this PlotPoint.

        Vin

        :return: The vin of this PlotPoint.
        :rtype: str
        """
        return self._vin

    @vin.setter
    def vin(self, vin):
        """Sets the vin of this PlotPoint.

        Vin

        :param vin: The vin of this PlotPoint.
        :type vin: str
        """

        self._vin = vin
