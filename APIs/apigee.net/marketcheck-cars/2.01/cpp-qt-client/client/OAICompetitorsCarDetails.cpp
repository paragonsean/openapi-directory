/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompetitorsCarDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompetitorsCarDetails::OAICompetitorsCarDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompetitorsCarDetails::OAICompetitorsCarDetails() {
    this->initializeModel();
}

OAICompetitorsCarDetails::~OAICompetitorsCarDetails() {}

void OAICompetitorsCarDetails::initializeModel() {

    m_avg_market_value_isSet = false;
    m_avg_market_value_isValid = false;

    m_miles_isSet = false;
    m_miles_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;
}

void OAICompetitorsCarDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompetitorsCarDetails::fromJsonObject(QJsonObject json) {

    m_avg_market_value_isValid = ::OpenAPI::fromJsonValue(m_avg_market_value, json[QString("avg_market_value")]);
    m_avg_market_value_isSet = !json[QString("avg_market_value")].isNull() && m_avg_market_value_isValid;

    m_miles_isValid = ::OpenAPI::fromJsonValue(m_miles, json[QString("miles")]);
    m_miles_isSet = !json[QString("miles")].isNull() && m_miles_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;
}

QString OAICompetitorsCarDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompetitorsCarDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_avg_market_value_isSet) {
        obj.insert(QString("avg_market_value"), ::OpenAPI::toJsonValue(m_avg_market_value));
    }
    if (m_miles_isSet) {
        obj.insert(QString("miles"), ::OpenAPI::toJsonValue(m_miles));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_price_isSet) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    return obj;
}

QString OAICompetitorsCarDetails::getAvgMarketValue() const {
    return m_avg_market_value;
}
void OAICompetitorsCarDetails::setAvgMarketValue(const QString &avg_market_value) {
    m_avg_market_value = avg_market_value;
    m_avg_market_value_isSet = true;
}

bool OAICompetitorsCarDetails::is_avg_market_value_Set() const{
    return m_avg_market_value_isSet;
}

bool OAICompetitorsCarDetails::is_avg_market_value_Valid() const{
    return m_avg_market_value_isValid;
}

QString OAICompetitorsCarDetails::getMiles() const {
    return m_miles;
}
void OAICompetitorsCarDetails::setMiles(const QString &miles) {
    m_miles = miles;
    m_miles_isSet = true;
}

bool OAICompetitorsCarDetails::is_miles_Set() const{
    return m_miles_isSet;
}

bool OAICompetitorsCarDetails::is_miles_Valid() const{
    return m_miles_isValid;
}

QString OAICompetitorsCarDetails::getName() const {
    return m_name;
}
void OAICompetitorsCarDetails::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICompetitorsCarDetails::is_name_Set() const{
    return m_name_isSet;
}

bool OAICompetitorsCarDetails::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICompetitorsCarDetails::getPrice() const {
    return m_price;
}
void OAICompetitorsCarDetails::setPrice(const QString &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAICompetitorsCarDetails::is_price_Set() const{
    return m_price_isSet;
}

bool OAICompetitorsCarDetails::is_price_Valid() const{
    return m_price_isValid;
}

bool OAICompetitorsCarDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avg_market_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_miles_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompetitorsCarDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
