/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuild.h
 *
 * Describes the Car specification
 */

#ifndef OAIBuild_H
#define OAIBuild_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBuild : public OAIObject {
public:
    OAIBuild();
    OAIBuild(QString json);
    ~OAIBuild() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAntibrakeSys() const;
    void setAntibrakeSys(const QString &antibrake_sys);
    bool is_antibrake_sys_Set() const;
    bool is_antibrake_sys_Valid() const;

    QString getBodySubtype() const;
    void setBodySubtype(const QString &body_subtype);
    bool is_body_subtype_Set() const;
    bool is_body_subtype_Valid() const;

    QString getBodyType() const;
    void setBodyType(const QString &body_type);
    bool is_body_type_Set() const;
    bool is_body_type_Valid() const;

    QString getCityMiles() const;
    void setCityMiles(const QString &city_miles);
    bool is_city_miles_Set() const;
    bool is_city_miles_Valid() const;

    qint32 getCityMpg() const;
    void setCityMpg(const qint32 &city_mpg);
    bool is_city_mpg_Set() const;
    bool is_city_mpg_Valid() const;

    qint32 getCylinders() const;
    void setCylinders(const qint32 &cylinders);
    bool is_cylinders_Set() const;
    bool is_cylinders_Valid() const;

    qint32 getDoors() const;
    void setDoors(const qint32 &doors);
    bool is_doors_Set() const;
    bool is_doors_Valid() const;

    QString getDrivetrain() const;
    void setDrivetrain(const QString &drivetrain);
    bool is_drivetrain_Set() const;
    bool is_drivetrain_Valid() const;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QString getEngineAspiration() const;
    void setEngineAspiration(const QString &engine_aspiration);
    bool is_engine_aspiration_Set() const;
    bool is_engine_aspiration_Valid() const;

    QString getEngineBlock() const;
    void setEngineBlock(const QString &engine_block);
    bool is_engine_block_Set() const;
    bool is_engine_block_Valid() const;

    QString getEngineMeasure() const;
    void setEngineMeasure(const QString &engine_measure);
    bool is_engine_measure_Set() const;
    bool is_engine_measure_Valid() const;

    double getEngineSize() const;
    void setEngineSize(const double &engine_size);
    bool is_engine_size_Set() const;
    bool is_engine_size_Valid() const;

    QString getFuelType() const;
    void setFuelType(const QString &fuel_type);
    bool is_fuel_type_Set() const;
    bool is_fuel_type_Valid() const;

    QString getHighwayMiles() const;
    void setHighwayMiles(const QString &highway_miles);
    bool is_highway_miles_Set() const;
    bool is_highway_miles_Valid() const;

    qint32 getHighwayMpg() const;
    void setHighwayMpg(const qint32 &highway_mpg);
    bool is_highway_mpg_Set() const;
    bool is_highway_mpg_Valid() const;

    QString getMadeIn() const;
    void setMadeIn(const QString &made_in);
    bool is_made_in_Set() const;
    bool is_made_in_Valid() const;

    QString getMake() const;
    void setMake(const QString &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QString getOptSeating() const;
    void setOptSeating(const QString &opt_seating);
    bool is_opt_seating_Set() const;
    bool is_opt_seating_Valid() const;

    QString getOverallHeight() const;
    void setOverallHeight(const QString &overall_height);
    bool is_overall_height_Set() const;
    bool is_overall_height_Valid() const;

    QString getOverallLength() const;
    void setOverallLength(const QString &overall_length);
    bool is_overall_length_Set() const;
    bool is_overall_length_Valid() const;

    QString getOverallWidth() const;
    void setOverallWidth(const QString &overall_width);
    bool is_overall_width_Set() const;
    bool is_overall_width_Valid() const;

    QString getPowertrainType() const;
    void setPowertrainType(const QString &powertrain_type);
    bool is_powertrain_type_Set() const;
    bool is_powertrain_type_Valid() const;

    QString getShortTrim() const;
    void setShortTrim(const QString &short_trim);
    bool is_short_trim_Set() const;
    bool is_short_trim_Valid() const;

    QString getStdSeating() const;
    void setStdSeating(const QString &std_seating);
    bool is_std_seating_Set() const;
    bool is_std_seating_Valid() const;

    QString getSteeringType() const;
    void setSteeringType(const QString &steering_type);
    bool is_steering_type_Set() const;
    bool is_steering_type_Valid() const;

    QString getTankSize() const;
    void setTankSize(const QString &tank_size);
    bool is_tank_size_Set() const;
    bool is_tank_size_Valid() const;

    QString getTransmission() const;
    void setTransmission(const QString &transmission);
    bool is_transmission_Set() const;
    bool is_transmission_Valid() const;

    QString getTrim() const;
    void setTrim(const QString &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    QString getTrimR() const;
    void setTrimR(const QString &trim_r);
    bool is_trim_r_Set() const;
    bool is_trim_r_Valid() const;

    QString getVehicleType() const;
    void setVehicleType(const QString &vehicle_type);
    bool is_vehicle_type_Set() const;
    bool is_vehicle_type_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_antibrake_sys;
    bool m_antibrake_sys_isSet;
    bool m_antibrake_sys_isValid;

    QString m_body_subtype;
    bool m_body_subtype_isSet;
    bool m_body_subtype_isValid;

    QString m_body_type;
    bool m_body_type_isSet;
    bool m_body_type_isValid;

    QString m_city_miles;
    bool m_city_miles_isSet;
    bool m_city_miles_isValid;

    qint32 m_city_mpg;
    bool m_city_mpg_isSet;
    bool m_city_mpg_isValid;

    qint32 m_cylinders;
    bool m_cylinders_isSet;
    bool m_cylinders_isValid;

    qint32 m_doors;
    bool m_doors_isSet;
    bool m_doors_isValid;

    QString m_drivetrain;
    bool m_drivetrain_isSet;
    bool m_drivetrain_isValid;

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QString m_engine_aspiration;
    bool m_engine_aspiration_isSet;
    bool m_engine_aspiration_isValid;

    QString m_engine_block;
    bool m_engine_block_isSet;
    bool m_engine_block_isValid;

    QString m_engine_measure;
    bool m_engine_measure_isSet;
    bool m_engine_measure_isValid;

    double m_engine_size;
    bool m_engine_size_isSet;
    bool m_engine_size_isValid;

    QString m_fuel_type;
    bool m_fuel_type_isSet;
    bool m_fuel_type_isValid;

    QString m_highway_miles;
    bool m_highway_miles_isSet;
    bool m_highway_miles_isValid;

    qint32 m_highway_mpg;
    bool m_highway_mpg_isSet;
    bool m_highway_mpg_isValid;

    QString m_made_in;
    bool m_made_in_isSet;
    bool m_made_in_isValid;

    QString m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QString m_opt_seating;
    bool m_opt_seating_isSet;
    bool m_opt_seating_isValid;

    QString m_overall_height;
    bool m_overall_height_isSet;
    bool m_overall_height_isValid;

    QString m_overall_length;
    bool m_overall_length_isSet;
    bool m_overall_length_isValid;

    QString m_overall_width;
    bool m_overall_width_isSet;
    bool m_overall_width_isValid;

    QString m_powertrain_type;
    bool m_powertrain_type_isSet;
    bool m_powertrain_type_isValid;

    QString m_short_trim;
    bool m_short_trim_isSet;
    bool m_short_trim_isValid;

    QString m_std_seating;
    bool m_std_seating_isSet;
    bool m_std_seating_isValid;

    QString m_steering_type;
    bool m_steering_type_isSet;
    bool m_steering_type_isValid;

    QString m_tank_size;
    bool m_tank_size_isSet;
    bool m_tank_size_isValid;

    QString m_transmission;
    bool m_transmission_isSet;
    bool m_transmission_isValid;

    QString m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;

    QString m_trim_r;
    bool m_trim_r_isSet;
    bool m_trim_r_isValid;

    QString m_vehicle_type;
    bool m_vehicle_type_isSet;
    bool m_vehicle_type_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuild)

#endif // OAIBuild_H
