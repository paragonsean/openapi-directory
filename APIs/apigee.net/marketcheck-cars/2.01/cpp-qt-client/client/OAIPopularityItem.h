/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPopularityItem.h
 *
 * 
 */

#ifndef OAIPopularityItem_H
#define OAIPopularityItem_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPopularityItem : public OAIObject {
public:
    OAIPopularityItem();
    OAIPopularityItem(QString json);
    ~OAIPopularityItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    double getDeltaPercent() const;
    void setDeltaPercent(const double &delta_percent);
    bool is_delta_percent_Set() const;
    bool is_delta_percent_Valid() const;

    double getDifference() const;
    void setDifference(const double &difference);
    bool is_difference_Set() const;
    bool is_difference_Valid() const;

    double getLeft() const;
    void setLeft(const double &left);
    bool is_left_Set() const;
    bool is_left_Valid() const;

    double getRight() const;
    void setRight(const double &right);
    bool is_right_Set() const;
    bool is_right_Valid() const;

    QString getText() const;
    void setText(const QString &text);
    bool is_text_Set() const;
    bool is_text_Valid() const;

    QString getThumbs() const;
    void setThumbs(const QString &thumbs);
    bool is_thumbs_Set() const;
    bool is_thumbs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    double m_delta_percent;
    bool m_delta_percent_isSet;
    bool m_delta_percent_isValid;

    double m_difference;
    bool m_difference_isSet;
    bool m_difference_isValid;

    double m_left;
    bool m_left_isSet;
    bool m_left_isValid;

    double m_right;
    bool m_right_isSet;
    bool m_right_isValid;

    QString m_text;
    bool m_text_isSet;
    bool m_text_isValid;

    QString m_thumbs;
    bool m_thumbs_isSet;
    bool m_thumbs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPopularityItem)

#endif // OAIPopularityItem_H
