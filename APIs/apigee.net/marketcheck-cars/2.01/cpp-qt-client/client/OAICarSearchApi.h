/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#ifndef OAI_OAICarSearchApi_H
#define OAI_OAICarSearchApi_H

#include "OAIHelpers.h"
#include "OAIHttpRequest.h"
#include "OAIServerConfiguration.h"
#include "OAIOauth.h"

#include "OAIError.h"
#include "OAIListing.h"
#include "OAIListingExtraAttributes.h"
#include "OAIListingMedia.h"
#include "OAISearchAutoCompleteResponse.h"
#include "OAISearchResponse.h"
#include "OAIUKSearchResponse.h"
#include <QString>

#include <QObject>
#include <QByteArray>
#include <QStringList>
#include <QList>
#include <QNetworkAccessManager>

namespace OpenAPI {

class OAICarSearchApi : public QObject {
    Q_OBJECT

public:
    OAICarSearchApi(const int timeOut = 0);
    ~OAICarSearchApi();

    void initializeServerConfigs();
    int setDefaultServerValue(int serverIndex,const QString &operation, const QString &variable,const QString &val);
    void setServerIndex(const QString &operation, int serverIndex);
    void setApiKey(const QString &apiKeyName, const QString &apiKey);
    void setBearerToken(const QString &token);
    void setUsername(const QString &username);
    void setPassword(const QString &password);
    void setTimeOut(const int timeOut);
    void setWorkingDirectory(const QString &path);
    void setNetworkAccessManager(QNetworkAccessManager* manager);
    int addServerConfiguration(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables = QMap<QString, OAIServerVariable>());
    void setNewServerForAllOperations(const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void setNewServer(const QString &operation, const QUrl &url, const QString &description = "", const QMap<QString, OAIServerVariable> &variables =  QMap<QString, OAIServerVariable>());
    void addHeaders(const QString &key, const QString &value);
    void enableRequestCompression();
    void enableResponseCompression();
    void abortRequests();
    QString getParamStylePrefix(const QString &style);
    QString getParamStyleSuffix(const QString &style);
    QString getParamStyleDelimiter(const QString &style, const QString &name, bool isExplode);

    /**
    * @param[in]  field QString [required]
    * @param[in]  input QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  body_subtype QString [optional]
    * @param[in]  vehicle_type QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_block QString [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  source QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  include_non_vin_listings QString [optional]
    * @param[in]  ignore_case bool [optional]
    * @param[in]  term_counts bool [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  seller_type QString [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  inventory_count_range QString [optional]
    * @param[in]  exclude_dealer_ids QString [optional]
    * @param[in]  exclude_sources QString [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  facet_min_count double [optional]
    */
    virtual void autoComplete(const QString &field, const QString &input, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_subtype = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_block = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &include_non_vin_listings = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &ignore_case = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &term_counts = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seller_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &inventory_count_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_dealer_ids = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_sources = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<double> &facet_min_count = ::OpenAPI::OptionalParam<double>());

    /**
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  latitude double [optional]
    * @param[in]  longitude double [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  include_lease bool [optional]
    * @param[in]  include_finance bool [optional]
    * @param[in]  lease_term QString [optional]
    * @param[in]  lease_down_payment QString [optional]
    * @param[in]  lease_emp QString [optional]
    * @param[in]  finance_loan_term QString [optional]
    * @param[in]  finance_loan_apr QString [optional]
    * @param[in]  finance_emp QString [optional]
    * @param[in]  finance_down_payment QString [optional]
    * @param[in]  finance_down_payment_per QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  carfax_1_owner QString [optional]
    * @param[in]  carfax_clean_title QString [optional]
    * @param[in]  year_range QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  vin QString [optional]
    * @param[in]  source QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  body_subtype QString [optional]
    * @param[in]  vehicle_type QString [optional]
    * @param[in]  vins QString [optional]
    * @param[in]  taxonomy_vins QString [optional]
    * @param[in]  mm QString [optional]
    * @param[in]  ymm QString [optional]
    * @param[in]  ymmt QString [optional]
    * @param[in]  match QString [optional]
    * @param[in]  cylinders QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  doors QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  base_exterior_color QString [optional]
    * @param[in]  base_interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_aspiration QString [optional]
    * @param[in]  engine_block QString [optional]
    * @param[in]  highway_mpg_range QString [optional]
    * @param[in]  city_mpg_range QString [optional]
    * @param[in]  miles_range QString [optional]
    * @param[in]  price_range QString [optional]
    * @param[in]  msrp_range QString [optional]
    * @param[in]  dom_range QString [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  sort_order QString [optional]
    * @param[in]  rows qint32 [optional]
    * @param[in]  start qint32 [optional]
    * @param[in]  include_non_vin_listings bool [optional]
    * @param[in]  msa_code QString [optional]
    * @param[in]  facets QString [optional]
    * @param[in]  range_facets QString [optional]
    * @param[in]  facet_sort QString [optional]
    * @param[in]  stats QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  plot bool [optional]
    * @param[in]  nodedup bool [optional]
    * @param[in]  dedup bool [optional]
    * @param[in]  owned bool [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  dealer_name QString [optional]
    * @param[in]  dealership_group_name QString [optional]
    * @param[in]  trim_o QString [optional]
    * @param[in]  trim_r QString [optional]
    * @param[in]  dom_active_range QString [optional]
    * @param[in]  dom_180_range QString [optional]
    * @param[in]  exclude_certified bool [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  dealer_type QString [optional]
    * @param[in]  photo_links bool [optional]
    * @param[in]  photo_links_cached bool [optional]
    * @param[in]  stock_no QString [optional]
    * @param[in]  last_seen_range QString [optional]
    * @param[in]  first_seen_range QString [optional]
    * @param[in]  first_seen_at_source_range QString [optional]
    * @param[in]  first_seen_at_mc_range QString [optional]
    * @param[in]  last_seen_days QString [optional]
    * @param[in]  first_seen_days QString [optional]
    * @param[in]  first_seen_at_source_days QString [optional]
    * @param[in]  first_seen_at_mc_days QString [optional]
    * @param[in]  include_relevant_links bool [optional]
    * @param[in]  inventory_count_range QString [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  seating_capacity QString [optional]
    * @param[in]  engine_size_range QString [optional]
    * @param[in]  powertrain_type QString [optional]
    * @param[in]  min_photo_links QString [optional]
    * @param[in]  min_photo_links_cached QString [optional]
    */
    virtual void carDealerInventoryActiveGet(const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<double> &latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_lease = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_finance = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &lease_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_apr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment_per = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_1_owner = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_clean_title = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vin = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_subtype = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &taxonomy_vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &mm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymmt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &match = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cylinders = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &doors = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_aspiration = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_block = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &highway_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &miles_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msrp_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_order = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &rows = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &start = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<bool> &include_non_vin_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &msa_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &range_facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facet_sort = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stats = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &plot = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &nodedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &dedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &owned = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealership_group_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_o = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_r = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_active_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_180_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &exclude_certified = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &photo_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &photo_links_cached = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &stock_no = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &inventory_count_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seating_capacity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &powertrain_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links_cached = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  include_relevant_links bool [optional]
    */
    virtual void getListing(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    */
    virtual void listingCarAuctionIdExtraGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  include_relevant_links bool [optional]
    */
    virtual void listingCarAuctionIdGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    */
    virtual void listingCarAuctionIdMediaGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    */
    virtual void listingCarFsboIdExtraGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  include_relevant_links bool [optional]
    */
    virtual void listingCarFsboIdGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    */
    virtual void listingCarFsboIdMediaGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    */
    virtual void listingCarIdExtraGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    */
    virtual void listingCarIdMediaGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    */
    virtual void listingCarUkIdExtraGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    */
    virtual void listingCarUkIdGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  id QString [required]
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    */
    virtual void listingCarUkIdMediaGet(const QString &id, const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  latitude double [optional]
    * @param[in]  longitude double [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  postal_code QString [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  year_range QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  variant QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  ymmt QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  doors QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  miles_range QString [optional]
    * @param[in]  price_range QString [optional]
    * @param[in]  msrp_range QString [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  sort_order QString [optional]
    * @param[in]  rows qint32 [optional]
    * @param[in]  start qint32 [optional]
    * @param[in]  msa_code QString [optional]
    * @param[in]  facets QString [optional]
    * @param[in]  range_facets QString [optional]
    * @param[in]  facet_sort QString [optional]
    * @param[in]  stats QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  plot bool [optional]
    * @param[in]  nodedup bool [optional]
    * @param[in]  dedup bool [optional]
    * @param[in]  county QString [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  stock_no QString [optional]
    * @param[in]  dom_range QString [optional]
    * @param[in]  dom_active_range QString [optional]
    * @param[in]  dom_180_range QString [optional]
    * @param[in]  last_seen_range QString [optional]
    * @param[in]  first_seen_range QString [optional]
    * @param[in]  first_seen_at_source_range QString [optional]
    * @param[in]  first_seen_at_mc_range QString [optional]
    * @param[in]  last_seen_days QString [optional]
    * @param[in]  first_seen_days QString [optional]
    * @param[in]  first_seen_at_source_days QString [optional]
    * @param[in]  first_seen_at_mc_days QString [optional]
    * @param[in]  co2_emissions QString [optional]
    * @param[in]  insurance_group QString [optional]
    * @param[in]  vehicle_registration_mark QString [optional]
    * @param[in]  vehicle_registration_date_range QString [optional]
    * @param[in]  num_owners QString [optional]
    * @param[in]  inventory_count_range QString [optional]
    * @param[in]  source QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  exclude_sources QString [optional]
    * @param[in]  exclude_dealer_ids QString [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  include_non_vin_listings bool [optional]
    * @param[in]  cylinders QString [optional]
    * @param[in]  photo_links bool [optional]
    * @param[in]  photo_links_cached bool [optional]
    * @param[in]  base_exterior_color QString [optional]
    * @param[in]  base_interior_color QString [optional]
    * @param[in]  write_off_category QString [optional]
    * @param[in]  exclude_write_off_category QString [optional]
    * @param[in]  fca_status QString [optional]
    * @param[in]  seating_capacity QString [optional]
    * @param[in]  vrm QString [optional]
    * @param[in]  powertrain_type QString [optional]
    * @param[in]  client_filters bool [optional]
    * @param[in]  boost bool [optional]
    * @param[in]  car_location_seller_name QString [optional]
    * @param[in]  car_location_street QString [optional]
    * @param[in]  car_location_city QString [optional]
    * @param[in]  car_location_county QString [optional]
    * @param[in]  car_location_zip QString [optional]
    * @param[in]  car_location_latitude double [optional]
    * @param[in]  car_location_longitude double [optional]
    * @param[in]  price_change QString [optional]
    * @param[in]  price_change_range QString [optional]
    * @param[in]  active_inventory_date_range QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_size_range QString [optional]
    * @param[in]  uvc_id QString [optional]
    * @param[in]  highway_mpg_range QString [optional]
    * @param[in]  city_mpg_range QString [optional]
    * @param[in]  combined_mpg_range QString [optional]
    * @param[in]  owned bool [optional]
    * @param[in]  min_photo_links QString [optional]
    * @param[in]  min_photo_links_cached QString [optional]
    * @param[in]  match QString [optional]
    * @param[in]  ulez_compliant bool [optional]
    */
    virtual void search(const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<double> &latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &postal_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &variant = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymmt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &doors = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &miles_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msrp_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_order = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &rows = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &start = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &msa_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &range_facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facet_sort = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stats = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &plot = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &nodedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &dedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &county = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stock_no = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_active_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_180_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &co2_emissions = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &insurance_group = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_registration_mark = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_registration_date_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &num_owners = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &inventory_count_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_sources = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_dealer_ids = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_non_vin_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &cylinders = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &photo_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &photo_links_cached = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &base_exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &write_off_category = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_write_off_category = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fca_status = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seating_capacity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vrm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &powertrain_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &client_filters = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &boost = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &car_location_seller_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_location_street = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_location_city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_location_county = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_location_zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<double> &car_location_latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &car_location_longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<QString> &price_change = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_change_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &active_inventory_date_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &uvc_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &highway_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &combined_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &owned = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links_cached = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &match = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &ulez_compliant = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  latitude double [optional]
    * @param[in]  longitude double [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  include_lease bool [optional]
    * @param[in]  include_finance bool [optional]
    * @param[in]  lease_term QString [optional]
    * @param[in]  lease_down_payment QString [optional]
    * @param[in]  lease_emp QString [optional]
    * @param[in]  finance_loan_term QString [optional]
    * @param[in]  finance_loan_apr QString [optional]
    * @param[in]  finance_emp QString [optional]
    * @param[in]  finance_down_payment QString [optional]
    * @param[in]  finance_down_payment_per QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  carfax_1_owner QString [optional]
    * @param[in]  carfax_clean_title QString [optional]
    * @param[in]  year_range QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  vin QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  body_subtype QString [optional]
    * @param[in]  vehicle_type QString [optional]
    * @param[in]  vins QString [optional]
    * @param[in]  taxonomy_vins QString [optional]
    * @param[in]  mm QString [optional]
    * @param[in]  ymm QString [optional]
    * @param[in]  ymmt QString [optional]
    * @param[in]  match QString [optional]
    * @param[in]  cylinders QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  doors QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  base_exterior_color QString [optional]
    * @param[in]  base_interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_aspiration QString [optional]
    * @param[in]  engine_block QString [optional]
    * @param[in]  highway_mpg_range QString [optional]
    * @param[in]  city_mpg_range QString [optional]
    * @param[in]  miles_range QString [optional]
    * @param[in]  price_range QString [optional]
    * @param[in]  msrp_range QString [optional]
    * @param[in]  dom_range QString [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  sort_order QString [optional]
    * @param[in]  rows qint32 [optional]
    * @param[in]  start qint32 [optional]
    * @param[in]  include_non_vin_listings bool [optional]
    * @param[in]  msa_code QString [optional]
    * @param[in]  facets QString [optional]
    * @param[in]  range_facets QString [optional]
    * @param[in]  facet_sort QString [optional]
    * @param[in]  stats QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  plot bool [optional]
    * @param[in]  nodedup bool [optional]
    * @param[in]  dedup bool [optional]
    * @param[in]  owned bool [optional]
    * @param[in]  source QString [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  trim_o QString [optional]
    * @param[in]  trim_r QString [optional]
    * @param[in]  dom_active_range QString [optional]
    * @param[in]  dom_180_range QString [optional]
    * @param[in]  exclude_certified bool [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  dealer_type QString [optional]
    * @param[in]  photo_links bool [optional]
    * @param[in]  photo_links_cached bool [optional]
    * @param[in]  stock_no QString [optional]
    * @param[in]  last_seen_range QString [optional]
    * @param[in]  first_seen_range QString [optional]
    * @param[in]  first_seen_at_source_range QString [optional]
    * @param[in]  first_seen_at_mc_range QString [optional]
    * @param[in]  last_seen_days QString [optional]
    * @param[in]  first_seen_days QString [optional]
    * @param[in]  first_seen_at_source_days QString [optional]
    * @param[in]  first_seen_at_mc_days QString [optional]
    * @param[in]  include_relevant_links bool [optional]
    * @param[in]  inventory_count_range QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  exclude_dealer_ids QString [optional]
    * @param[in]  exclude_sources QString [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  seating_capacity QString [optional]
    * @param[in]  powertrain_type QString [optional]
    * @param[in]  price_change QString [optional]
    * @param[in]  price_change_range QString [optional]
    * @param[in]  active_inventory_date_range QString [optional]
    * @param[in]  engine_size_range QString [optional]
    * @param[in]  high_value_features QString [optional]
    * @param[in]  min_photo_links QString [optional]
    * @param[in]  min_photo_links_cached QString [optional]
    * @param[in]  client_filters bool [optional]
    */
    virtual void searchCarActiveGet(const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<double> &latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_lease = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_finance = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &lease_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_apr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment_per = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_1_owner = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_clean_title = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vin = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_subtype = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &taxonomy_vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &mm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymmt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &match = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cylinders = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &doors = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_aspiration = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_block = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &highway_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &miles_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msrp_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_order = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &rows = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &start = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<bool> &include_non_vin_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &msa_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &range_facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facet_sort = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stats = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &plot = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &nodedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &dedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &owned = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_o = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_r = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_active_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_180_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &exclude_certified = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &photo_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &photo_links_cached = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &stock_no = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &inventory_count_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_dealer_ids = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_sources = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seating_capacity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &powertrain_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_change = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_change_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &active_inventory_date_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &high_value_features = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links_cached = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &client_filters = ::OpenAPI::OptionalParam<bool>());

    /**
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  latitude double [optional]
    * @param[in]  longitude double [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  include_lease bool [optional]
    * @param[in]  include_finance bool [optional]
    * @param[in]  lease_term QString [optional]
    * @param[in]  lease_down_payment QString [optional]
    * @param[in]  lease_emp QString [optional]
    * @param[in]  finance_loan_term QString [optional]
    * @param[in]  finance_loan_apr QString [optional]
    * @param[in]  finance_emp QString [optional]
    * @param[in]  finance_down_payment QString [optional]
    * @param[in]  finance_down_payment_per QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  carfax_1_owner QString [optional]
    * @param[in]  carfax_clean_title QString [optional]
    * @param[in]  year_range QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  vin QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  body_subtype QString [optional]
    * @param[in]  vehicle_type QString [optional]
    * @param[in]  vins QString [optional]
    * @param[in]  taxonomy_vins QString [optional]
    * @param[in]  mm QString [optional]
    * @param[in]  ymm QString [optional]
    * @param[in]  ymmt QString [optional]
    * @param[in]  match QString [optional]
    * @param[in]  cylinders QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  doors QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  base_exterior_color QString [optional]
    * @param[in]  base_interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_aspiration QString [optional]
    * @param[in]  engine_block QString [optional]
    * @param[in]  highway_mpg_range QString [optional]
    * @param[in]  city_mpg_range QString [optional]
    * @param[in]  miles_range QString [optional]
    * @param[in]  price_range QString [optional]
    * @param[in]  msrp_range QString [optional]
    * @param[in]  dom_range QString [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  sort_order QString [optional]
    * @param[in]  rows qint32 [optional]
    * @param[in]  start qint32 [optional]
    * @param[in]  include_non_vin_listings bool [optional]
    * @param[in]  msa_code QString [optional]
    * @param[in]  facets QString [optional]
    * @param[in]  range_facets QString [optional]
    * @param[in]  facet_sort QString [optional]
    * @param[in]  stats QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  plot bool [optional]
    * @param[in]  nodedup bool [optional]
    * @param[in]  dedup bool [optional]
    * @param[in]  owned bool [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  source QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  trim_o QString [optional]
    * @param[in]  trim_r QString [optional]
    * @param[in]  dom_active_range QString [optional]
    * @param[in]  dom_180_range QString [optional]
    * @param[in]  exclude_certified bool [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  dealer_type QString [optional]
    * @param[in]  photo_links bool [optional]
    * @param[in]  photo_links_cached bool [optional]
    * @param[in]  stock_no QString [optional]
    * @param[in]  last_seen_range QString [optional]
    * @param[in]  first_seen_range QString [optional]
    * @param[in]  first_seen_at_source_range QString [optional]
    * @param[in]  first_seen_at_mc_range QString [optional]
    * @param[in]  last_seen_days QString [optional]
    * @param[in]  first_seen_days QString [optional]
    * @param[in]  first_seen_at_source_days QString [optional]
    * @param[in]  first_seen_at_mc_days QString [optional]
    * @param[in]  include_relevant_links bool [optional]
    * @param[in]  inventory_count_range QString [optional]
    * @param[in]  exclude_dealer_ids QString [optional]
    * @param[in]  exclude_sources QString [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  title_type QString [optional]
    * @param[in]  seating_capacity QString [optional]
    * @param[in]  engine_size_range QString [optional]
    * @param[in]  min_photo_links QString [optional]
    * @param[in]  min_photo_links_cached QString [optional]
    */
    virtual void searchCarAuctionActiveGet(const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<double> &latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_lease = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_finance = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &lease_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_apr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment_per = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_1_owner = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_clean_title = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vin = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_subtype = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &taxonomy_vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &mm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymmt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &match = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cylinders = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &doors = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_aspiration = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_block = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &highway_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &miles_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msrp_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_order = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &rows = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &start = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<bool> &include_non_vin_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &msa_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &range_facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facet_sort = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stats = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &plot = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &nodedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &dedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &owned = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_o = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_r = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_active_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_180_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &exclude_certified = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &photo_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &photo_links_cached = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &stock_no = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &inventory_count_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_dealer_ids = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_sources = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &title_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seating_capacity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links_cached = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  latitude double [optional]
    * @param[in]  longitude double [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  include_lease bool [optional]
    * @param[in]  include_finance bool [optional]
    * @param[in]  lease_term QString [optional]
    * @param[in]  lease_down_payment QString [optional]
    * @param[in]  lease_emp QString [optional]
    * @param[in]  finance_loan_term QString [optional]
    * @param[in]  finance_loan_apr QString [optional]
    * @param[in]  finance_emp QString [optional]
    * @param[in]  finance_down_payment QString [optional]
    * @param[in]  finance_down_payment_per QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  carfax_1_owner QString [optional]
    * @param[in]  carfax_clean_title QString [optional]
    * @param[in]  year_range QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  vin QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  body_subtype QString [optional]
    * @param[in]  vehicle_type QString [optional]
    * @param[in]  vins QString [optional]
    * @param[in]  taxonomy_vins QString [optional]
    * @param[in]  mm QString [optional]
    * @param[in]  ymm QString [optional]
    * @param[in]  ymmt QString [optional]
    * @param[in]  match QString [optional]
    * @param[in]  cylinders QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  doors QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  base_exterior_color QString [optional]
    * @param[in]  base_interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_aspiration QString [optional]
    * @param[in]  engine_block QString [optional]
    * @param[in]  highway_mpg_range QString [optional]
    * @param[in]  city_mpg_range QString [optional]
    * @param[in]  miles_range QString [optional]
    * @param[in]  price_range QString [optional]
    * @param[in]  msrp_range QString [optional]
    * @param[in]  dom_range QString [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  sort_order QString [optional]
    * @param[in]  rows qint32 [optional]
    * @param[in]  start qint32 [optional]
    * @param[in]  include_non_vin_listings bool [optional]
    * @param[in]  msa_code QString [optional]
    * @param[in]  facets QString [optional]
    * @param[in]  range_facets QString [optional]
    * @param[in]  facet_sort QString [optional]
    * @param[in]  stats QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  plot bool [optional]
    * @param[in]  nodedup bool [optional]
    * @param[in]  dedup bool [optional]
    * @param[in]  owned bool [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  source QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  trim_o QString [optional]
    * @param[in]  trim_r QString [optional]
    * @param[in]  dom_active_range QString [optional]
    * @param[in]  dom_180_range QString [optional]
    * @param[in]  exclude_certified bool [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  dealer_type QString [optional]
    * @param[in]  photo_links bool [optional]
    * @param[in]  photo_links_cached bool [optional]
    * @param[in]  stock_no QString [optional]
    * @param[in]  last_seen_range QString [optional]
    * @param[in]  first_seen_range QString [optional]
    * @param[in]  first_seen_at_source_range QString [optional]
    * @param[in]  first_seen_at_mc_range QString [optional]
    * @param[in]  last_seen_days QString [optional]
    * @param[in]  first_seen_days QString [optional]
    * @param[in]  first_seen_at_source_days QString [optional]
    * @param[in]  first_seen_at_mc_days QString [optional]
    * @param[in]  include_relevant_links bool [optional]
    * @param[in]  inventory_count_range QString [optional]
    * @param[in]  exclude_dealer_ids QString [optional]
    * @param[in]  exclude_sources QString [optional]
    * @param[in]  exclude_dealer_listings bool [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  seating_capacity QString [optional]
    * @param[in]  engine_size_range QString [optional]
    * @param[in]  min_photo_links QString [optional]
    * @param[in]  min_photo_links_cached QString [optional]
    */
    virtual void searchCarFsboActiveGet(const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<double> &latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_lease = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_finance = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &lease_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_apr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment_per = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_1_owner = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_clean_title = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vin = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_subtype = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &taxonomy_vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &mm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymmt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &match = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cylinders = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &doors = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_aspiration = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_block = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &highway_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &miles_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msrp_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_order = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &rows = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &start = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<bool> &include_non_vin_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &msa_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &range_facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facet_sort = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stats = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &plot = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &nodedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &dedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &owned = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_o = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_r = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_active_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_180_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &exclude_certified = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &photo_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &photo_links_cached = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &stock_no = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &inventory_count_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_dealer_ids = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_sources = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &exclude_dealer_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seating_capacity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &min_photo_links_cached = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  latitude double [optional]
    * @param[in]  longitude double [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  include_lease bool [optional]
    * @param[in]  include_finance bool [optional]
    * @param[in]  lease_term QString [optional]
    * @param[in]  lease_down_payment QString [optional]
    * @param[in]  lease_emp QString [optional]
    * @param[in]  finance_loan_term QString [optional]
    * @param[in]  finance_loan_apr QString [optional]
    * @param[in]  finance_emp QString [optional]
    * @param[in]  finance_down_payment QString [optional]
    * @param[in]  finance_down_payment_per QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  carfax_1_owner QString [optional]
    * @param[in]  carfax_clean_title QString [optional]
    * @param[in]  year_range QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  vin QString [optional]
    * @param[in]  source QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  body_subtype QString [optional]
    * @param[in]  vehicle_type QString [optional]
    * @param[in]  vins QString [optional]
    * @param[in]  taxonomy_vins QString [optional]
    * @param[in]  ymmt QString [optional]
    * @param[in]  match QString [optional]
    * @param[in]  cylinders QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  doors QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  base_exterior_color QString [optional]
    * @param[in]  base_interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_aspiration QString [optional]
    * @param[in]  engine_block QString [optional]
    * @param[in]  highway_mpg_range QString [optional]
    * @param[in]  city_mpg_range QString [optional]
    * @param[in]  miles_range QString [optional]
    * @param[in]  price_range QString [optional]
    * @param[in]  msrp_range QString [optional]
    * @param[in]  dom_range QString [optional]
    * @param[in]  last_seen_range QString [optional]
    * @param[in]  first_seen_range QString [optional]
    * @param[in]  first_seen_at_source_range QString [optional]
    * @param[in]  first_seen_at_mc_range QString [optional]
    * @param[in]  last_seen_days QString [optional]
    * @param[in]  first_seen_days QString [optional]
    * @param[in]  first_seen_at_source_days QString [optional]
    * @param[in]  first_seen_at_mc_days QString [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  sort_order QString [optional]
    * @param[in]  rows qint32 [optional]
    * @param[in]  start qint32 [optional]
    * @param[in]  include_non_vin_listings bool [optional]
    * @param[in]  facets QString [optional]
    * @param[in]  range_facets QString [optional]
    * @param[in]  facet_sort QString [optional]
    * @param[in]  stats QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  plot bool [optional]
    * @param[in]  nodedup bool [optional]
    * @param[in]  dedup bool [optional]
    * @param[in]  owned bool [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  msa_code QString [optional]
    * @param[in]  dealer_name QString [optional]
    * @param[in]  dealership_group_name QString [optional]
    * @param[in]  trim_o QString [optional]
    * @param[in]  trim_r QString [optional]
    * @param[in]  dom_active_range QString [optional]
    * @param[in]  dom_180_range QString [optional]
    * @param[in]  exclude_certified bool [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  dealer_type QString [optional]
    * @param[in]  photo_links bool [optional]
    * @param[in]  photo_links_cached bool [optional]
    * @param[in]  stock_no QString [optional]
    * @param[in]  sold bool [optional]
    * @param[in]  include_relevant_links bool [optional]
    * @param[in]  expired QString [optional]
    * @param[in]  exclude_dealer_ids QString [optional]
    * @param[in]  exclude_sources QString [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  seating_capacity QString [optional]
    * @param[in]  active_inventory_date_range QString [optional]
    * @param[in]  engine_size_range QString [optional]
    * @param[in]  price_change_range QString [optional]
    */
    virtual void searchCarRecentsGet(const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<double> &latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_lease = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_finance = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &lease_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_apr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment_per = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_1_owner = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_clean_title = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vin = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_subtype = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &taxonomy_vins = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymmt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &match = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cylinders = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &doors = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_aspiration = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_block = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &highway_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &miles_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msrp_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_order = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &rows = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &start = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<bool> &include_non_vin_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &range_facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facet_sort = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stats = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &plot = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &nodedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &dedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &owned = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msa_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealership_group_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_o = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_r = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_active_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_180_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &exclude_certified = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &photo_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &photo_links_cached = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &stock_no = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &sold = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &expired = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_dealer_ids = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_sources = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seating_capacity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &active_inventory_date_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_change_range = ::OpenAPI::OptionalParam<QString>());

    /**
    * @param[in]  api_key QString [optional]
    * @param[in]  append_api_key bool [optional]
    * @param[in]  latitude double [optional]
    * @param[in]  longitude double [optional]
    * @param[in]  radius qint32 [optional]
    * @param[in]  zip QString [optional]
    * @param[in]  include_lease bool [optional]
    * @param[in]  include_finance bool [optional]
    * @param[in]  lease_term QString [optional]
    * @param[in]  lease_down_payment QString [optional]
    * @param[in]  lease_emp QString [optional]
    * @param[in]  finance_loan_term QString [optional]
    * @param[in]  finance_loan_apr QString [optional]
    * @param[in]  finance_emp QString [optional]
    * @param[in]  finance_down_payment QString [optional]
    * @param[in]  finance_down_payment_per QString [optional]
    * @param[in]  car_type QString [optional]
    * @param[in]  carfax_1_owner QString [optional]
    * @param[in]  carfax_clean_title QString [optional]
    * @param[in]  year_range QString [optional]
    * @param[in]  year QString [optional]
    * @param[in]  make QString [optional]
    * @param[in]  model QString [optional]
    * @param[in]  trim QString [optional]
    * @param[in]  dealer_id QString [optional]
    * @param[in]  source QString [optional]
    * @param[in]  body_type QString [optional]
    * @param[in]  body_subtype QString [optional]
    * @param[in]  vehicle_type QString [optional]
    * @param[in]  ymmt QString [optional]
    * @param[in]  match QString [optional]
    * @param[in]  cylinders QString [optional]
    * @param[in]  transmission QString [optional]
    * @param[in]  doors QString [optional]
    * @param[in]  drivetrain QString [optional]
    * @param[in]  exterior_color QString [optional]
    * @param[in]  interior_color QString [optional]
    * @param[in]  base_exterior_color QString [optional]
    * @param[in]  base_interior_color QString [optional]
    * @param[in]  engine QString [optional]
    * @param[in]  engine_size QString [optional]
    * @param[in]  engine_aspiration QString [optional]
    * @param[in]  engine_block QString [optional]
    * @param[in]  highway_mpg_range QString [optional]
    * @param[in]  city_mpg_range QString [optional]
    * @param[in]  combined_mpg_range QString [optional]
    * @param[in]  miles_range QString [optional]
    * @param[in]  price_range QString [optional]
    * @param[in]  msrp_range QString [optional]
    * @param[in]  dom_range QString [optional]
    * @param[in]  last_seen_range QString [optional]
    * @param[in]  first_seen_range QString [optional]
    * @param[in]  first_seen_at_source_range QString [optional]
    * @param[in]  first_seen_at_mc_range QString [optional]
    * @param[in]  last_seen_days QString [optional]
    * @param[in]  first_seen_days QString [optional]
    * @param[in]  first_seen_at_source_days QString [optional]
    * @param[in]  first_seen_at_mc_days QString [optional]
    * @param[in]  sort_by QString [optional]
    * @param[in]  sort_order QString [optional]
    * @param[in]  rows qint32 [optional]
    * @param[in]  start qint32 [optional]
    * @param[in]  include_non_vin_listings bool [optional]
    * @param[in]  facets QString [optional]
    * @param[in]  range_facets QString [optional]
    * @param[in]  facet_sort QString [optional]
    * @param[in]  stats QString [optional]
    * @param[in]  country QString [optional]
    * @param[in]  plot bool [optional]
    * @param[in]  nodedup bool [optional]
    * @param[in]  dedup bool [optional]
    * @param[in]  owned bool [optional]
    * @param[in]  state QString [optional]
    * @param[in]  city QString [optional]
    * @param[in]  msa_code QString [optional]
    * @param[in]  dealer_name QString [optional]
    * @param[in]  dealership_group_name QString [optional]
    * @param[in]  trim_o QString [optional]
    * @param[in]  trim_r QString [optional]
    * @param[in]  dom_active_range QString [optional]
    * @param[in]  dom_180_range QString [optional]
    * @param[in]  exclude_certified bool [optional]
    * @param[in]  fuel_type QString [optional]
    * @param[in]  dealer_type QString [optional]
    * @param[in]  photo_links bool [optional]
    * @param[in]  photo_links_cached bool [optional]
    * @param[in]  stock_no QString [optional]
    * @param[in]  sold bool [optional]
    * @param[in]  include_relevant_links bool [optional]
    * @param[in]  expired QString [optional]
    * @param[in]  exclude_dealer_ids QString [optional]
    * @param[in]  exclude_sources QString [optional]
    * @param[in]  in_transit QString [optional]
    * @param[in]  seating_capacity QString [optional]
    * @param[in]  insurance_group QString [optional]
    * @param[in]  vrm QString [optional]
    * @param[in]  num_owners QString [optional]
    * @param[in]  variant QString [optional]
    * @param[in]  postal_code QString [optional]
    * @param[in]  write_off_category QString [optional]
    * @param[in]  fca_status QString [optional]
    * @param[in]  active_inventory_date_range QString [optional]
    * @param[in]  engine_size_range QString [optional]
    * @param[in]  price_change_range QString [optional]
    */
    virtual void searchCarUkRecentsGet(const ::OpenAPI::OptionalParam<QString> &api_key = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &append_api_key = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<double> &latitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<double> &longitude = ::OpenAPI::OptionalParam<double>(), const ::OpenAPI::OptionalParam<qint32> &radius = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<QString> &zip = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &include_lease = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_finance = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &lease_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &lease_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_term = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_loan_apr = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_emp = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &finance_down_payment_per = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &car_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_1_owner = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &carfax_clean_title = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &year = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &make = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &model = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_id = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &source = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &body_subtype = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vehicle_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &ymmt = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &match = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &cylinders = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &transmission = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &doors = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &drivetrain = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_exterior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &base_interior_color = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_aspiration = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_block = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &highway_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &combined_mpg_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &miles_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msrp_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &last_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_source_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &first_seen_at_mc_days = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_by = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &sort_order = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<qint32> &rows = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<qint32> &start = ::OpenAPI::OptionalParam<qint32>(), const ::OpenAPI::OptionalParam<bool> &include_non_vin_listings = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &range_facets = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &facet_sort = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &stats = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &country = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &plot = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &nodedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &dedup = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &owned = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &state = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &city = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &msa_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealership_group_name = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_o = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &trim_r = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_active_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dom_180_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &exclude_certified = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &fuel_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &dealer_type = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &photo_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &photo_links_cached = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &stock_no = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<bool> &sold = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<bool> &include_relevant_links = ::OpenAPI::OptionalParam<bool>(), const ::OpenAPI::OptionalParam<QString> &expired = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_dealer_ids = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &exclude_sources = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &in_transit = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &seating_capacity = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &insurance_group = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &vrm = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &num_owners = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &variant = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &postal_code = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &write_off_category = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &fca_status = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &active_inventory_date_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &engine_size_range = ::OpenAPI::OptionalParam<QString>(), const ::OpenAPI::OptionalParam<QString> &price_change_range = ::OpenAPI::OptionalParam<QString>());


private:
    QMap<QString,int> _serverIndices;
    QMap<QString,QList<OAIServerConfiguration>> _serverConfigs;
    QMap<QString, QString> _apiKeys;
    QString _bearerToken;
    QString _username;
    QString _password;
    int _timeOut;
    QString _workingDirectory;
    QNetworkAccessManager* _manager;
    QMap<QString, QString> _defaultHeaders;
    bool _isResponseCompressionEnabled;
    bool _isRequestCompressionEnabled;
    OAIHttpRequestInput _latestInput;
    OAIHttpRequestWorker *_latestWorker;
    QStringList _latestScope;
    OauthCode _authFlow;
    OauthImplicit _implicitFlow;
    OauthCredentials _credentialFlow;
    OauthPassword _passwordFlow;
    int _OauthMethod = 0;

    void autoCompleteCallback(OAIHttpRequestWorker *worker);
    void carDealerInventoryActiveGetCallback(OAIHttpRequestWorker *worker);
    void getListingCallback(OAIHttpRequestWorker *worker);
    void listingCarAuctionIdExtraGetCallback(OAIHttpRequestWorker *worker);
    void listingCarAuctionIdGetCallback(OAIHttpRequestWorker *worker);
    void listingCarAuctionIdMediaGetCallback(OAIHttpRequestWorker *worker);
    void listingCarFsboIdExtraGetCallback(OAIHttpRequestWorker *worker);
    void listingCarFsboIdGetCallback(OAIHttpRequestWorker *worker);
    void listingCarFsboIdMediaGetCallback(OAIHttpRequestWorker *worker);
    void listingCarIdExtraGetCallback(OAIHttpRequestWorker *worker);
    void listingCarIdMediaGetCallback(OAIHttpRequestWorker *worker);
    void listingCarUkIdExtraGetCallback(OAIHttpRequestWorker *worker);
    void listingCarUkIdGetCallback(OAIHttpRequestWorker *worker);
    void listingCarUkIdMediaGetCallback(OAIHttpRequestWorker *worker);
    void searchCallback(OAIHttpRequestWorker *worker);
    void searchCarActiveGetCallback(OAIHttpRequestWorker *worker);
    void searchCarAuctionActiveGetCallback(OAIHttpRequestWorker *worker);
    void searchCarFsboActiveGetCallback(OAIHttpRequestWorker *worker);
    void searchCarRecentsGetCallback(OAIHttpRequestWorker *worker);
    void searchCarUkRecentsGetCallback(OAIHttpRequestWorker *worker);

Q_SIGNALS:

    void autoCompleteSignal(OAISearchAutoCompleteResponse summary);
    void carDealerInventoryActiveGetSignal(OAISearchResponse summary);
    void getListingSignal(OAIListing summary);
    void listingCarAuctionIdExtraGetSignal(OAIListingExtraAttributes summary);
    void listingCarAuctionIdGetSignal(OAIListing summary);
    void listingCarAuctionIdMediaGetSignal(OAIListingMedia summary);
    void listingCarFsboIdExtraGetSignal(OAIListingExtraAttributes summary);
    void listingCarFsboIdGetSignal(OAIListing summary);
    void listingCarFsboIdMediaGetSignal(OAIListingMedia summary);
    void listingCarIdExtraGetSignal(OAIListingExtraAttributes summary);
    void listingCarIdMediaGetSignal(OAIListingMedia summary);
    void listingCarUkIdExtraGetSignal(OAIListingExtraAttributes summary);
    void listingCarUkIdGetSignal(OAIListing summary);
    void listingCarUkIdMediaGetSignal(OAIListingMedia summary);
    void searchSignal(OAIUKSearchResponse summary);
    void searchCarActiveGetSignal(OAISearchResponse summary);
    void searchCarAuctionActiveGetSignal(OAISearchResponse summary);
    void searchCarFsboActiveGetSignal(OAISearchResponse summary);
    void searchCarRecentsGetSignal(OAISearchResponse summary);
    void searchCarUkRecentsGetSignal(OAIUKSearchResponse summary);


    void autoCompleteSignalFull(OAIHttpRequestWorker *worker, OAISearchAutoCompleteResponse summary);
    void carDealerInventoryActiveGetSignalFull(OAIHttpRequestWorker *worker, OAISearchResponse summary);
    void getListingSignalFull(OAIHttpRequestWorker *worker, OAIListing summary);
    void listingCarAuctionIdExtraGetSignalFull(OAIHttpRequestWorker *worker, OAIListingExtraAttributes summary);
    void listingCarAuctionIdGetSignalFull(OAIHttpRequestWorker *worker, OAIListing summary);
    void listingCarAuctionIdMediaGetSignalFull(OAIHttpRequestWorker *worker, OAIListingMedia summary);
    void listingCarFsboIdExtraGetSignalFull(OAIHttpRequestWorker *worker, OAIListingExtraAttributes summary);
    void listingCarFsboIdGetSignalFull(OAIHttpRequestWorker *worker, OAIListing summary);
    void listingCarFsboIdMediaGetSignalFull(OAIHttpRequestWorker *worker, OAIListingMedia summary);
    void listingCarIdExtraGetSignalFull(OAIHttpRequestWorker *worker, OAIListingExtraAttributes summary);
    void listingCarIdMediaGetSignalFull(OAIHttpRequestWorker *worker, OAIListingMedia summary);
    void listingCarUkIdExtraGetSignalFull(OAIHttpRequestWorker *worker, OAIListingExtraAttributes summary);
    void listingCarUkIdGetSignalFull(OAIHttpRequestWorker *worker, OAIListing summary);
    void listingCarUkIdMediaGetSignalFull(OAIHttpRequestWorker *worker, OAIListingMedia summary);
    void searchSignalFull(OAIHttpRequestWorker *worker, OAIUKSearchResponse summary);
    void searchCarActiveGetSignalFull(OAIHttpRequestWorker *worker, OAISearchResponse summary);
    void searchCarAuctionActiveGetSignalFull(OAIHttpRequestWorker *worker, OAISearchResponse summary);
    void searchCarFsboActiveGetSignalFull(OAIHttpRequestWorker *worker, OAISearchResponse summary);
    void searchCarRecentsGetSignalFull(OAIHttpRequestWorker *worker, OAISearchResponse summary);
    void searchCarUkRecentsGetSignalFull(OAIHttpRequestWorker *worker, OAIUKSearchResponse summary);

    Q_DECL_DEPRECATED_X("Use autoCompleteSignalError() instead")
    void autoCompleteSignalE(OAISearchAutoCompleteResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void autoCompleteSignalError(OAISearchAutoCompleteResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use carDealerInventoryActiveGetSignalError() instead")
    void carDealerInventoryActiveGetSignalE(OAISearchResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void carDealerInventoryActiveGetSignalError(OAISearchResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getListingSignalError() instead")
    void getListingSignalE(OAIListing summary, QNetworkReply::NetworkError error_type, QString error_str);
    void getListingSignalError(OAIListing summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarAuctionIdExtraGetSignalError() instead")
    void listingCarAuctionIdExtraGetSignalE(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarAuctionIdExtraGetSignalError(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarAuctionIdGetSignalError() instead")
    void listingCarAuctionIdGetSignalE(OAIListing summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarAuctionIdGetSignalError(OAIListing summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarAuctionIdMediaGetSignalError() instead")
    void listingCarAuctionIdMediaGetSignalE(OAIListingMedia summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarAuctionIdMediaGetSignalError(OAIListingMedia summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarFsboIdExtraGetSignalError() instead")
    void listingCarFsboIdExtraGetSignalE(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarFsboIdExtraGetSignalError(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarFsboIdGetSignalError() instead")
    void listingCarFsboIdGetSignalE(OAIListing summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarFsboIdGetSignalError(OAIListing summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarFsboIdMediaGetSignalError() instead")
    void listingCarFsboIdMediaGetSignalE(OAIListingMedia summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarFsboIdMediaGetSignalError(OAIListingMedia summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarIdExtraGetSignalError() instead")
    void listingCarIdExtraGetSignalE(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarIdExtraGetSignalError(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarIdMediaGetSignalError() instead")
    void listingCarIdMediaGetSignalE(OAIListingMedia summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarIdMediaGetSignalError(OAIListingMedia summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarUkIdExtraGetSignalError() instead")
    void listingCarUkIdExtraGetSignalE(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarUkIdExtraGetSignalError(OAIListingExtraAttributes summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarUkIdGetSignalError() instead")
    void listingCarUkIdGetSignalE(OAIListing summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarUkIdGetSignalError(OAIListing summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarUkIdMediaGetSignalError() instead")
    void listingCarUkIdMediaGetSignalE(OAIListingMedia summary, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarUkIdMediaGetSignalError(OAIListingMedia summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchSignalError() instead")
    void searchSignalE(OAIUKSearchResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchSignalError(OAIUKSearchResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarActiveGetSignalError() instead")
    void searchCarActiveGetSignalE(OAISearchResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarActiveGetSignalError(OAISearchResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarAuctionActiveGetSignalError() instead")
    void searchCarAuctionActiveGetSignalE(OAISearchResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarAuctionActiveGetSignalError(OAISearchResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarFsboActiveGetSignalError() instead")
    void searchCarFsboActiveGetSignalE(OAISearchResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarFsboActiveGetSignalError(OAISearchResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarRecentsGetSignalError() instead")
    void searchCarRecentsGetSignalE(OAISearchResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarRecentsGetSignalError(OAISearchResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarUkRecentsGetSignalError() instead")
    void searchCarUkRecentsGetSignalE(OAIUKSearchResponse summary, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarUkRecentsGetSignalError(OAIUKSearchResponse summary, QNetworkReply::NetworkError error_type, const QString &error_str);

    Q_DECL_DEPRECATED_X("Use autoCompleteSignalErrorFull() instead")
    void autoCompleteSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void autoCompleteSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use carDealerInventoryActiveGetSignalErrorFull() instead")
    void carDealerInventoryActiveGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void carDealerInventoryActiveGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use getListingSignalErrorFull() instead")
    void getListingSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void getListingSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarAuctionIdExtraGetSignalErrorFull() instead")
    void listingCarAuctionIdExtraGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarAuctionIdExtraGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarAuctionIdGetSignalErrorFull() instead")
    void listingCarAuctionIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarAuctionIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarAuctionIdMediaGetSignalErrorFull() instead")
    void listingCarAuctionIdMediaGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarAuctionIdMediaGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarFsboIdExtraGetSignalErrorFull() instead")
    void listingCarFsboIdExtraGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarFsboIdExtraGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarFsboIdGetSignalErrorFull() instead")
    void listingCarFsboIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarFsboIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarFsboIdMediaGetSignalErrorFull() instead")
    void listingCarFsboIdMediaGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarFsboIdMediaGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarIdExtraGetSignalErrorFull() instead")
    void listingCarIdExtraGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarIdExtraGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarIdMediaGetSignalErrorFull() instead")
    void listingCarIdMediaGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarIdMediaGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarUkIdExtraGetSignalErrorFull() instead")
    void listingCarUkIdExtraGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarUkIdExtraGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarUkIdGetSignalErrorFull() instead")
    void listingCarUkIdGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarUkIdGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use listingCarUkIdMediaGetSignalErrorFull() instead")
    void listingCarUkIdMediaGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void listingCarUkIdMediaGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchSignalErrorFull() instead")
    void searchSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarActiveGetSignalErrorFull() instead")
    void searchCarActiveGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarActiveGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarAuctionActiveGetSignalErrorFull() instead")
    void searchCarAuctionActiveGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarAuctionActiveGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarFsboActiveGetSignalErrorFull() instead")
    void searchCarFsboActiveGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarFsboActiveGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarRecentsGetSignalErrorFull() instead")
    void searchCarRecentsGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarRecentsGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);
    Q_DECL_DEPRECATED_X("Use searchCarUkRecentsGetSignalErrorFull() instead")
    void searchCarUkRecentsGetSignalEFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, QString error_str);
    void searchCarUkRecentsGetSignalErrorFull(OAIHttpRequestWorker *worker, QNetworkReply::NetworkError error_type, const QString &error_str);

    void abortRequestsSignal();
    void allPendingRequestsCompleted();

public Q_SLOTS:
    void tokenAvailable();
};

} // namespace OpenAPI
#endif
