/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICarRankRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICarRankRequest::OAICarRankRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICarRankRequest::OAICarRankRequest() {
    this->initializeModel();
}

OAICarRankRequest::~OAICarRankRequest() {}

void OAICarRankRequest::initializeModel() {

    m_listing_ids_isSet = false;
    m_listing_ids_isValid = false;

    m_ranking_criteria_isSet = false;
    m_ranking_criteria_isValid = false;
}

void OAICarRankRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICarRankRequest::fromJsonObject(QJsonObject json) {

    m_listing_ids_isValid = ::OpenAPI::fromJsonValue(m_listing_ids, json[QString("listing_ids")]);
    m_listing_ids_isSet = !json[QString("listing_ids")].isNull() && m_listing_ids_isValid;

    m_ranking_criteria_isValid = ::OpenAPI::fromJsonValue(m_ranking_criteria, json[QString("ranking_criteria")]);
    m_ranking_criteria_isSet = !json[QString("ranking_criteria")].isNull() && m_ranking_criteria_isValid;
}

QString OAICarRankRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICarRankRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_listing_ids.size() > 0) {
        obj.insert(QString("listing_ids"), ::OpenAPI::toJsonValue(m_listing_ids));
    }
    if (m_ranking_criteria.size() > 0) {
        obj.insert(QString("ranking_criteria"), ::OpenAPI::toJsonValue(m_ranking_criteria));
    }
    return obj;
}

QList<QString> OAICarRankRequest::getListingIds() const {
    return m_listing_ids;
}
void OAICarRankRequest::setListingIds(const QList<QString> &listing_ids) {
    m_listing_ids = listing_ids;
    m_listing_ids_isSet = true;
}

bool OAICarRankRequest::is_listing_ids_Set() const{
    return m_listing_ids_isSet;
}

bool OAICarRankRequest::is_listing_ids_Valid() const{
    return m_listing_ids_isValid;
}

QList<OAICarRankCriteria> OAICarRankRequest::getRankingCriteria() const {
    return m_ranking_criteria;
}
void OAICarRankRequest::setRankingCriteria(const QList<OAICarRankCriteria> &ranking_criteria) {
    m_ranking_criteria = ranking_criteria;
    m_ranking_criteria_isSet = true;
}

bool OAICarRankRequest::is_ranking_criteria_Set() const{
    return m_ranking_criteria_isSet;
}

bool OAICarRankRequest::is_ranking_criteria_Valid() const{
    return m_ranking_criteria_isValid;
}

bool OAICarRankRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_listing_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_ranking_criteria.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICarRankRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
