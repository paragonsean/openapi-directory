/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUKCarSearchFacets.h
 *
 * 
 */

#ifndef OAIUKCarSearchFacets_H
#define OAIUKCarSearchFacets_H

#include <QJsonObject>

#include "OAIFacetItem.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFacetItem;

class OAIUKCarSearchFacets : public OAIObject {
public:
    OAIUKCarSearchFacets();
    OAIUKCarSearchFacets(QString json);
    ~OAIUKCarSearchFacets() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFacetItem> getBaseExteriorColor() const;
    void setBaseExteriorColor(const QList<OAIFacetItem> &base_exterior_color);
    bool is_base_exterior_color_Set() const;
    bool is_base_exterior_color_Valid() const;

    QList<OAIFacetItem> getBaseInteriorColor() const;
    void setBaseInteriorColor(const QList<OAIFacetItem> &base_interior_color);
    bool is_base_interior_color_Set() const;
    bool is_base_interior_color_Valid() const;

    QList<OAIFacetItem> getBodySubtype() const;
    void setBodySubtype(const QList<OAIFacetItem> &body_subtype);
    bool is_body_subtype_Set() const;
    bool is_body_subtype_Valid() const;

    QList<OAIFacetItem> getBodyType() const;
    void setBodyType(const QList<OAIFacetItem> &body_type);
    bool is_body_type_Set() const;
    bool is_body_type_Valid() const;

    QList<OAIFacetItem> getCarLocationCity() const;
    void setCarLocationCity(const QList<OAIFacetItem> &car_location_city);
    bool is_car_location_city_Set() const;
    bool is_car_location_city_Valid() const;

    QList<OAIFacetItem> getCarLocationCounty() const;
    void setCarLocationCounty(const QList<OAIFacetItem> &car_location_county);
    bool is_car_location_county_Set() const;
    bool is_car_location_county_Valid() const;

    QList<OAIFacetItem> getCarLocationSellerName() const;
    void setCarLocationSellerName(const QList<OAIFacetItem> &car_location_seller_name);
    bool is_car_location_seller_name_Set() const;
    bool is_car_location_seller_name_Valid() const;

    QList<OAIFacetItem> getCarLocationStreet() const;
    void setCarLocationStreet(const QList<OAIFacetItem> &car_location_street);
    bool is_car_location_street_Set() const;
    bool is_car_location_street_Valid() const;

    QList<OAIFacetItem> getCarLocationZip() const;
    void setCarLocationZip(const QList<OAIFacetItem> &car_location_zip);
    bool is_car_location_zip_Set() const;
    bool is_car_location_zip_Valid() const;

    QList<OAIFacetItem> getCarType() const;
    void setCarType(const QList<OAIFacetItem> &car_type);
    bool is_car_type_Set() const;
    bool is_car_type_Valid() const;

    QList<OAIFacetItem> getCarfax1Owner() const;
    void setCarfax1Owner(const QList<OAIFacetItem> &carfax_1_owner);
    bool is_carfax_1_owner_Set() const;
    bool is_carfax_1_owner_Valid() const;

    QList<OAIFacetItem> getCarfaxCleanTitle() const;
    void setCarfaxCleanTitle(const QList<OAIFacetItem> &carfax_clean_title);
    bool is_carfax_clean_title_Set() const;
    bool is_carfax_clean_title_Valid() const;

    QList<OAIFacetItem> getCity() const;
    void setCity(const QList<OAIFacetItem> &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QList<OAIFacetItem> getCo2Emissions() const;
    void setCo2Emissions(const QList<OAIFacetItem> &co2_emissions);
    bool is_co2_emissions_Set() const;
    bool is_co2_emissions_Valid() const;

    QList<OAIFacetItem> getCylinders() const;
    void setCylinders(const QList<OAIFacetItem> &cylinders);
    bool is_cylinders_Set() const;
    bool is_cylinders_Valid() const;

    QList<OAIFacetItem> getDataSource() const;
    void setDataSource(const QList<OAIFacetItem> &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    QList<OAIFacetItem> getDealerId() const;
    void setDealerId(const QList<OAIFacetItem> &dealer_id);
    bool is_dealer_id_Set() const;
    bool is_dealer_id_Valid() const;

    QList<OAIFacetItem> getDealerType() const;
    void setDealerType(const QList<OAIFacetItem> &dealer_type);
    bool is_dealer_type_Set() const;
    bool is_dealer_type_Valid() const;

    QList<OAIFacetItem> getDealershipGroupName() const;
    void setDealershipGroupName(const QList<OAIFacetItem> &dealership_group_name);
    bool is_dealership_group_name_Set() const;
    bool is_dealership_group_name_Valid() const;

    QList<OAIFacetItem> getDoors() const;
    void setDoors(const QList<OAIFacetItem> &doors);
    bool is_doors_Set() const;
    bool is_doors_Valid() const;

    QList<OAIFacetItem> getDrivetrain() const;
    void setDrivetrain(const QList<OAIFacetItem> &drivetrain);
    bool is_drivetrain_Set() const;
    bool is_drivetrain_Valid() const;

    QList<OAIFacetItem> getEngine() const;
    void setEngine(const QList<OAIFacetItem> &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QList<OAIFacetItem> getEngineAspiration() const;
    void setEngineAspiration(const QList<OAIFacetItem> &engine_aspiration);
    bool is_engine_aspiration_Set() const;
    bool is_engine_aspiration_Valid() const;

    QList<OAIFacetItem> getEngineBlock() const;
    void setEngineBlock(const QList<OAIFacetItem> &engine_block);
    bool is_engine_block_Set() const;
    bool is_engine_block_Valid() const;

    QList<OAIFacetItem> getEngineSize() const;
    void setEngineSize(const QList<OAIFacetItem> &engine_size);
    bool is_engine_size_Set() const;
    bool is_engine_size_Valid() const;

    QList<OAIFacetItem> getExteriorColor() const;
    void setExteriorColor(const QList<OAIFacetItem> &exterior_color);
    bool is_exterior_color_Set() const;
    bool is_exterior_color_Valid() const;

    QList<OAIFacetItem> getFcaStatus() const;
    void setFcaStatus(const QList<OAIFacetItem> &fca_status);
    bool is_fca_status_Set() const;
    bool is_fca_status_Valid() const;

    QList<OAIFacetItem> getFuelType() const;
    void setFuelType(const QList<OAIFacetItem> &fuel_type);
    bool is_fuel_type_Set() const;
    bool is_fuel_type_Valid() const;

    QList<OAIFacetItem> getInTransit() const;
    void setInTransit(const QList<OAIFacetItem> &in_transit);
    bool is_in_transit_Set() const;
    bool is_in_transit_Valid() const;

    QList<OAIFacetItem> getInsuranceGroup() const;
    void setInsuranceGroup(const QList<OAIFacetItem> &insurance_group);
    bool is_insurance_group_Set() const;
    bool is_insurance_group_Valid() const;

    QList<OAIFacetItem> getInteriorColor() const;
    void setInteriorColor(const QList<OAIFacetItem> &interior_color);
    bool is_interior_color_Set() const;
    bool is_interior_color_Valid() const;

    QList<OAIFacetItem> getMake() const;
    void setMake(const QList<OAIFacetItem> &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QList<OAIFacetItem> getMasCode() const;
    void setMasCode(const QList<OAIFacetItem> &mas_code);
    bool is_mas_code_Set() const;
    bool is_mas_code_Valid() const;

    QList<OAIFacetItem> getModel() const;
    void setModel(const QList<OAIFacetItem> &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QList<OAIFacetItem> getNumOwners() const;
    void setNumOwners(const QList<OAIFacetItem> &num_owners);
    bool is_num_owners_Set() const;
    bool is_num_owners_Valid() const;

    QList<OAIFacetItem> getPowertrainType() const;
    void setPowertrainType(const QList<OAIFacetItem> &powertrain_type);
    bool is_powertrain_type_Set() const;
    bool is_powertrain_type_Valid() const;

    QList<OAIFacetItem> getSeatingCapacity() const;
    void setSeatingCapacity(const QList<OAIFacetItem> &seating_capacity);
    bool is_seating_capacity_Set() const;
    bool is_seating_capacity_Valid() const;

    QList<OAIFacetItem> getSellerName() const;
    void setSellerName(const QList<OAIFacetItem> &seller_name);
    bool is_seller_name_Set() const;
    bool is_seller_name_Valid() const;

    QList<OAIFacetItem> getSellerType() const;
    void setSellerType(const QList<OAIFacetItem> &seller_type);
    bool is_seller_type_Set() const;
    bool is_seller_type_Valid() const;

    QList<OAIFacetItem> getSource() const;
    void setSource(const QList<OAIFacetItem> &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList<OAIFacetItem> getState() const;
    void setState(const QList<OAIFacetItem> &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAIFacetItem> getTransmission() const;
    void setTransmission(const QList<OAIFacetItem> &transmission);
    bool is_transmission_Set() const;
    bool is_transmission_Valid() const;

    QList<OAIFacetItem> getTrim() const;
    void setTrim(const QList<OAIFacetItem> &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    QList<OAIFacetItem> getVehicleRegistrationMark() const;
    void setVehicleRegistrationMark(const QList<OAIFacetItem> &vehicle_registration_mark);
    bool is_vehicle_registration_mark_Set() const;
    bool is_vehicle_registration_mark_Valid() const;

    QList<OAIFacetItem> getVehicleType() const;
    void setVehicleType(const QList<OAIFacetItem> &vehicle_type);
    bool is_vehicle_type_Set() const;
    bool is_vehicle_type_Valid() const;

    QList<OAIFacetItem> getVrm() const;
    void setVrm(const QList<OAIFacetItem> &vrm);
    bool is_vrm_Set() const;
    bool is_vrm_Valid() const;

    QList<OAIFacetItem> getYear() const;
    void setYear(const QList<OAIFacetItem> &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFacetItem> m_base_exterior_color;
    bool m_base_exterior_color_isSet;
    bool m_base_exterior_color_isValid;

    QList<OAIFacetItem> m_base_interior_color;
    bool m_base_interior_color_isSet;
    bool m_base_interior_color_isValid;

    QList<OAIFacetItem> m_body_subtype;
    bool m_body_subtype_isSet;
    bool m_body_subtype_isValid;

    QList<OAIFacetItem> m_body_type;
    bool m_body_type_isSet;
    bool m_body_type_isValid;

    QList<OAIFacetItem> m_car_location_city;
    bool m_car_location_city_isSet;
    bool m_car_location_city_isValid;

    QList<OAIFacetItem> m_car_location_county;
    bool m_car_location_county_isSet;
    bool m_car_location_county_isValid;

    QList<OAIFacetItem> m_car_location_seller_name;
    bool m_car_location_seller_name_isSet;
    bool m_car_location_seller_name_isValid;

    QList<OAIFacetItem> m_car_location_street;
    bool m_car_location_street_isSet;
    bool m_car_location_street_isValid;

    QList<OAIFacetItem> m_car_location_zip;
    bool m_car_location_zip_isSet;
    bool m_car_location_zip_isValid;

    QList<OAIFacetItem> m_car_type;
    bool m_car_type_isSet;
    bool m_car_type_isValid;

    QList<OAIFacetItem> m_carfax_1_owner;
    bool m_carfax_1_owner_isSet;
    bool m_carfax_1_owner_isValid;

    QList<OAIFacetItem> m_carfax_clean_title;
    bool m_carfax_clean_title_isSet;
    bool m_carfax_clean_title_isValid;

    QList<OAIFacetItem> m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QList<OAIFacetItem> m_co2_emissions;
    bool m_co2_emissions_isSet;
    bool m_co2_emissions_isValid;

    QList<OAIFacetItem> m_cylinders;
    bool m_cylinders_isSet;
    bool m_cylinders_isValid;

    QList<OAIFacetItem> m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    QList<OAIFacetItem> m_dealer_id;
    bool m_dealer_id_isSet;
    bool m_dealer_id_isValid;

    QList<OAIFacetItem> m_dealer_type;
    bool m_dealer_type_isSet;
    bool m_dealer_type_isValid;

    QList<OAIFacetItem> m_dealership_group_name;
    bool m_dealership_group_name_isSet;
    bool m_dealership_group_name_isValid;

    QList<OAIFacetItem> m_doors;
    bool m_doors_isSet;
    bool m_doors_isValid;

    QList<OAIFacetItem> m_drivetrain;
    bool m_drivetrain_isSet;
    bool m_drivetrain_isValid;

    QList<OAIFacetItem> m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QList<OAIFacetItem> m_engine_aspiration;
    bool m_engine_aspiration_isSet;
    bool m_engine_aspiration_isValid;

    QList<OAIFacetItem> m_engine_block;
    bool m_engine_block_isSet;
    bool m_engine_block_isValid;

    QList<OAIFacetItem> m_engine_size;
    bool m_engine_size_isSet;
    bool m_engine_size_isValid;

    QList<OAIFacetItem> m_exterior_color;
    bool m_exterior_color_isSet;
    bool m_exterior_color_isValid;

    QList<OAIFacetItem> m_fca_status;
    bool m_fca_status_isSet;
    bool m_fca_status_isValid;

    QList<OAIFacetItem> m_fuel_type;
    bool m_fuel_type_isSet;
    bool m_fuel_type_isValid;

    QList<OAIFacetItem> m_in_transit;
    bool m_in_transit_isSet;
    bool m_in_transit_isValid;

    QList<OAIFacetItem> m_insurance_group;
    bool m_insurance_group_isSet;
    bool m_insurance_group_isValid;

    QList<OAIFacetItem> m_interior_color;
    bool m_interior_color_isSet;
    bool m_interior_color_isValid;

    QList<OAIFacetItem> m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QList<OAIFacetItem> m_mas_code;
    bool m_mas_code_isSet;
    bool m_mas_code_isValid;

    QList<OAIFacetItem> m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QList<OAIFacetItem> m_num_owners;
    bool m_num_owners_isSet;
    bool m_num_owners_isValid;

    QList<OAIFacetItem> m_powertrain_type;
    bool m_powertrain_type_isSet;
    bool m_powertrain_type_isValid;

    QList<OAIFacetItem> m_seating_capacity;
    bool m_seating_capacity_isSet;
    bool m_seating_capacity_isValid;

    QList<OAIFacetItem> m_seller_name;
    bool m_seller_name_isSet;
    bool m_seller_name_isValid;

    QList<OAIFacetItem> m_seller_type;
    bool m_seller_type_isSet;
    bool m_seller_type_isValid;

    QList<OAIFacetItem> m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList<OAIFacetItem> m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAIFacetItem> m_transmission;
    bool m_transmission_isSet;
    bool m_transmission_isValid;

    QList<OAIFacetItem> m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;

    QList<OAIFacetItem> m_vehicle_registration_mark;
    bool m_vehicle_registration_mark_isSet;
    bool m_vehicle_registration_mark_isValid;

    QList<OAIFacetItem> m_vehicle_type;
    bool m_vehicle_type_isSet;
    bool m_vehicle_type_isValid;

    QList<OAIFacetItem> m_vrm;
    bool m_vrm_isSet;
    bool m_vrm_isValid;

    QList<OAIFacetItem> m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUKCarSearchFacets)

#endif // OAIUKCarSearchFacets_H
