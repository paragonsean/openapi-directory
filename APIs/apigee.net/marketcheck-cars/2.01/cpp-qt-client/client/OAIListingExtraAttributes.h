/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListingExtraAttributes.h
 *
 * 
 */

#ifndef OAIListingExtraAttributes_H
#define OAIListingExtraAttributes_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListingExtraAttributes : public OAIObject {
public:
    OAIListingExtraAttributes();
    OAIListingExtraAttributes(QString json);
    ~OAIListingExtraAttributes() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getDealerAddedF() const;
    void setDealerAddedF(const QList<QString> &dealer_added_f);
    bool is_dealer_added_f_Set() const;
    bool is_dealer_added_f_Valid() const;

    QList<QString> getElectronicsF() const;
    void setElectronicsF(const QList<QString> &electronics_f);
    bool is_electronics_f_Set() const;
    bool is_electronics_f_Valid() const;

    QList<QString> getExteriorF() const;
    void setExteriorF(const QList<QString> &exterior_f);
    bool is_exterior_f_Set() const;
    bool is_exterior_f_Valid() const;

    QList<QString> getFeatures() const;
    void setFeatures(const QList<QString> &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getInteriorF() const;
    void setInteriorF(const QList<QString> &interior_f);
    bool is_interior_f_Set() const;
    bool is_interior_f_Valid() const;

    QList<QString> getOptions() const;
    void setOptions(const QList<QString> &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    QList<QString> getSafetyF() const;
    void setSafetyF(const QList<QString> &safety_f);
    bool is_safety_f_Set() const;
    bool is_safety_f_Valid() const;

    QString getSellerCmts() const;
    void setSellerCmts(const QString &seller_cmts);
    bool is_seller_cmts_Set() const;
    bool is_seller_cmts_Valid() const;

    QList<QString> getStandardF() const;
    void setStandardF(const QList<QString> &standard_f);
    bool is_standard_f_Set() const;
    bool is_standard_f_Valid() const;

    QList<QString> getTechnicalF() const;
    void setTechnicalF(const QList<QString> &technical_f);
    bool is_technical_f_Set() const;
    bool is_technical_f_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_dealer_added_f;
    bool m_dealer_added_f_isSet;
    bool m_dealer_added_f_isValid;

    QList<QString> m_electronics_f;
    bool m_electronics_f_isSet;
    bool m_electronics_f_isValid;

    QList<QString> m_exterior_f;
    bool m_exterior_f_isSet;
    bool m_exterior_f_isValid;

    QList<QString> m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_interior_f;
    bool m_interior_f_isSet;
    bool m_interior_f_isValid;

    QList<QString> m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    QList<QString> m_safety_f;
    bool m_safety_f_isSet;
    bool m_safety_f_isValid;

    QString m_seller_cmts;
    bool m_seller_cmts_isSet;
    bool m_seller_cmts_isValid;

    QList<QString> m_standard_f;
    bool m_standard_f_isSet;
    bool m_standard_f_isValid;

    QList<QString> m_technical_f;
    bool m_technical_f_isSet;
    bool m_technical_f_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListingExtraAttributes)

#endif // OAIListingExtraAttributes_H
