/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMakeModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMakeModel::OAIMakeModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMakeModel::OAIMakeModel() {
    this->initializeModel();
}

OAIMakeModel::~OAIMakeModel() {}

void OAIMakeModel::initializeModel() {

    m_make_isSet = false;
    m_make_isValid = false;

    m_model_isSet = false;
    m_model_isValid = false;
}

void OAIMakeModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMakeModel::fromJsonObject(QJsonObject json) {

    m_make_isValid = ::OpenAPI::fromJsonValue(m_make, json[QString("make")]);
    m_make_isSet = !json[QString("make")].isNull() && m_make_isValid;

    m_model_isValid = ::OpenAPI::fromJsonValue(m_model, json[QString("model")]);
    m_model_isSet = !json[QString("model")].isNull() && m_model_isValid;
}

QString OAIMakeModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMakeModel::asJsonObject() const {
    QJsonObject obj;
    if (m_make_isSet) {
        obj.insert(QString("make"), ::OpenAPI::toJsonValue(m_make));
    }
    if (m_model_isSet) {
        obj.insert(QString("model"), ::OpenAPI::toJsonValue(m_model));
    }
    return obj;
}

QString OAIMakeModel::getMake() const {
    return m_make;
}
void OAIMakeModel::setMake(const QString &make) {
    m_make = make;
    m_make_isSet = true;
}

bool OAIMakeModel::is_make_Set() const{
    return m_make_isSet;
}

bool OAIMakeModel::is_make_Valid() const{
    return m_make_isValid;
}

QString OAIMakeModel::getModel() const {
    return m_model;
}
void OAIMakeModel::setModel(const QString &model) {
    m_model = model;
    m_model_isSet = true;
}

bool OAIMakeModel::is_model_Set() const{
    return m_model_isSet;
}

bool OAIMakeModel::is_model_Valid() const{
    return m_model_isValid;
}

bool OAIMakeModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_make_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_model_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMakeModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
