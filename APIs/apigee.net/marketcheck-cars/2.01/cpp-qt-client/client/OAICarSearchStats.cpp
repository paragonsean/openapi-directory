/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICarSearchStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICarSearchStats::OAICarSearchStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICarSearchStats::OAICarSearchStats() {
    this->initializeModel();
}

OAICarSearchStats::~OAICarSearchStats() {}

void OAICarSearchStats::initializeModel() {

    m_dom_isSet = false;
    m_dom_isValid = false;

    m_dom_180_isSet = false;
    m_dom_180_isValid = false;

    m_dom_active_isSet = false;
    m_dom_active_isValid = false;

    m_finance_down_payment_isSet = false;
    m_finance_down_payment_isValid = false;

    m_finance_down_payment_per_isSet = false;
    m_finance_down_payment_per_isValid = false;

    m_finance_emp_isSet = false;
    m_finance_emp_isValid = false;

    m_finance_loan_apr_isSet = false;
    m_finance_loan_apr_isValid = false;

    m_finance_loan_term_isSet = false;
    m_finance_loan_term_isValid = false;

    m_lease_down_payment_isSet = false;
    m_lease_down_payment_isValid = false;

    m_lease_emp_isSet = false;
    m_lease_emp_isValid = false;

    m_lease_term_isSet = false;
    m_lease_term_isValid = false;

    m_miles_isSet = false;
    m_miles_isValid = false;

    m_msrp_isSet = false;
    m_msrp_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;
}

void OAICarSearchStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICarSearchStats::fromJsonObject(QJsonObject json) {

    m_dom_isValid = ::OpenAPI::fromJsonValue(m_dom, json[QString("dom")]);
    m_dom_isSet = !json[QString("dom")].isNull() && m_dom_isValid;

    m_dom_180_isValid = ::OpenAPI::fromJsonValue(m_dom_180, json[QString("dom_180")]);
    m_dom_180_isSet = !json[QString("dom_180")].isNull() && m_dom_180_isValid;

    m_dom_active_isValid = ::OpenAPI::fromJsonValue(m_dom_active, json[QString("dom_active")]);
    m_dom_active_isSet = !json[QString("dom_active")].isNull() && m_dom_active_isValid;

    m_finance_down_payment_isValid = ::OpenAPI::fromJsonValue(m_finance_down_payment, json[QString("finance_down_payment")]);
    m_finance_down_payment_isSet = !json[QString("finance_down_payment")].isNull() && m_finance_down_payment_isValid;

    m_finance_down_payment_per_isValid = ::OpenAPI::fromJsonValue(m_finance_down_payment_per, json[QString("finance_down_payment_per")]);
    m_finance_down_payment_per_isSet = !json[QString("finance_down_payment_per")].isNull() && m_finance_down_payment_per_isValid;

    m_finance_emp_isValid = ::OpenAPI::fromJsonValue(m_finance_emp, json[QString("finance_emp")]);
    m_finance_emp_isSet = !json[QString("finance_emp")].isNull() && m_finance_emp_isValid;

    m_finance_loan_apr_isValid = ::OpenAPI::fromJsonValue(m_finance_loan_apr, json[QString("finance_loan_apr")]);
    m_finance_loan_apr_isSet = !json[QString("finance_loan_apr")].isNull() && m_finance_loan_apr_isValid;

    m_finance_loan_term_isValid = ::OpenAPI::fromJsonValue(m_finance_loan_term, json[QString("finance_loan_term")]);
    m_finance_loan_term_isSet = !json[QString("finance_loan_term")].isNull() && m_finance_loan_term_isValid;

    m_lease_down_payment_isValid = ::OpenAPI::fromJsonValue(m_lease_down_payment, json[QString("lease_down_payment")]);
    m_lease_down_payment_isSet = !json[QString("lease_down_payment")].isNull() && m_lease_down_payment_isValid;

    m_lease_emp_isValid = ::OpenAPI::fromJsonValue(m_lease_emp, json[QString("lease_emp")]);
    m_lease_emp_isSet = !json[QString("lease_emp")].isNull() && m_lease_emp_isValid;

    m_lease_term_isValid = ::OpenAPI::fromJsonValue(m_lease_term, json[QString("lease_term")]);
    m_lease_term_isSet = !json[QString("lease_term")].isNull() && m_lease_term_isValid;

    m_miles_isValid = ::OpenAPI::fromJsonValue(m_miles, json[QString("miles")]);
    m_miles_isSet = !json[QString("miles")].isNull() && m_miles_isValid;

    m_msrp_isValid = ::OpenAPI::fromJsonValue(m_msrp, json[QString("msrp")]);
    m_msrp_isSet = !json[QString("msrp")].isNull() && m_msrp_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;
}

QString OAICarSearchStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICarSearchStats::asJsonObject() const {
    QJsonObject obj;
    if (m_dom.isSet()) {
        obj.insert(QString("dom"), ::OpenAPI::toJsonValue(m_dom));
    }
    if (m_dom_180.isSet()) {
        obj.insert(QString("dom_180"), ::OpenAPI::toJsonValue(m_dom_180));
    }
    if (m_dom_active.isSet()) {
        obj.insert(QString("dom_active"), ::OpenAPI::toJsonValue(m_dom_active));
    }
    if (m_finance_down_payment.isSet()) {
        obj.insert(QString("finance_down_payment"), ::OpenAPI::toJsonValue(m_finance_down_payment));
    }
    if (m_finance_down_payment_per.isSet()) {
        obj.insert(QString("finance_down_payment_per"), ::OpenAPI::toJsonValue(m_finance_down_payment_per));
    }
    if (m_finance_emp.isSet()) {
        obj.insert(QString("finance_emp"), ::OpenAPI::toJsonValue(m_finance_emp));
    }
    if (m_finance_loan_apr.isSet()) {
        obj.insert(QString("finance_loan_apr"), ::OpenAPI::toJsonValue(m_finance_loan_apr));
    }
    if (m_finance_loan_term.isSet()) {
        obj.insert(QString("finance_loan_term"), ::OpenAPI::toJsonValue(m_finance_loan_term));
    }
    if (m_lease_down_payment.isSet()) {
        obj.insert(QString("lease_down_payment"), ::OpenAPI::toJsonValue(m_lease_down_payment));
    }
    if (m_lease_emp.isSet()) {
        obj.insert(QString("lease_emp"), ::OpenAPI::toJsonValue(m_lease_emp));
    }
    if (m_lease_term.isSet()) {
        obj.insert(QString("lease_term"), ::OpenAPI::toJsonValue(m_lease_term));
    }
    if (m_miles.isSet()) {
        obj.insert(QString("miles"), ::OpenAPI::toJsonValue(m_miles));
    }
    if (m_msrp.isSet()) {
        obj.insert(QString("msrp"), ::OpenAPI::toJsonValue(m_msrp));
    }
    if (m_price.isSet()) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    return obj;
}

OAIStatsItem OAICarSearchStats::getDom() const {
    return m_dom;
}
void OAICarSearchStats::setDom(const OAIStatsItem &dom) {
    m_dom = dom;
    m_dom_isSet = true;
}

bool OAICarSearchStats::is_dom_Set() const{
    return m_dom_isSet;
}

bool OAICarSearchStats::is_dom_Valid() const{
    return m_dom_isValid;
}

OAIStatsItem OAICarSearchStats::getDom180() const {
    return m_dom_180;
}
void OAICarSearchStats::setDom180(const OAIStatsItem &dom_180) {
    m_dom_180 = dom_180;
    m_dom_180_isSet = true;
}

bool OAICarSearchStats::is_dom_180_Set() const{
    return m_dom_180_isSet;
}

bool OAICarSearchStats::is_dom_180_Valid() const{
    return m_dom_180_isValid;
}

OAIStatsItem OAICarSearchStats::getDomActive() const {
    return m_dom_active;
}
void OAICarSearchStats::setDomActive(const OAIStatsItem &dom_active) {
    m_dom_active = dom_active;
    m_dom_active_isSet = true;
}

bool OAICarSearchStats::is_dom_active_Set() const{
    return m_dom_active_isSet;
}

bool OAICarSearchStats::is_dom_active_Valid() const{
    return m_dom_active_isValid;
}

OAIStatsItem OAICarSearchStats::getFinanceDownPayment() const {
    return m_finance_down_payment;
}
void OAICarSearchStats::setFinanceDownPayment(const OAIStatsItem &finance_down_payment) {
    m_finance_down_payment = finance_down_payment;
    m_finance_down_payment_isSet = true;
}

bool OAICarSearchStats::is_finance_down_payment_Set() const{
    return m_finance_down_payment_isSet;
}

bool OAICarSearchStats::is_finance_down_payment_Valid() const{
    return m_finance_down_payment_isValid;
}

OAIStatsItem OAICarSearchStats::getFinanceDownPaymentPer() const {
    return m_finance_down_payment_per;
}
void OAICarSearchStats::setFinanceDownPaymentPer(const OAIStatsItem &finance_down_payment_per) {
    m_finance_down_payment_per = finance_down_payment_per;
    m_finance_down_payment_per_isSet = true;
}

bool OAICarSearchStats::is_finance_down_payment_per_Set() const{
    return m_finance_down_payment_per_isSet;
}

bool OAICarSearchStats::is_finance_down_payment_per_Valid() const{
    return m_finance_down_payment_per_isValid;
}

OAIStatsItem OAICarSearchStats::getFinanceEmp() const {
    return m_finance_emp;
}
void OAICarSearchStats::setFinanceEmp(const OAIStatsItem &finance_emp) {
    m_finance_emp = finance_emp;
    m_finance_emp_isSet = true;
}

bool OAICarSearchStats::is_finance_emp_Set() const{
    return m_finance_emp_isSet;
}

bool OAICarSearchStats::is_finance_emp_Valid() const{
    return m_finance_emp_isValid;
}

OAIStatsItem OAICarSearchStats::getFinanceLoanApr() const {
    return m_finance_loan_apr;
}
void OAICarSearchStats::setFinanceLoanApr(const OAIStatsItem &finance_loan_apr) {
    m_finance_loan_apr = finance_loan_apr;
    m_finance_loan_apr_isSet = true;
}

bool OAICarSearchStats::is_finance_loan_apr_Set() const{
    return m_finance_loan_apr_isSet;
}

bool OAICarSearchStats::is_finance_loan_apr_Valid() const{
    return m_finance_loan_apr_isValid;
}

OAIStatsItem OAICarSearchStats::getFinanceLoanTerm() const {
    return m_finance_loan_term;
}
void OAICarSearchStats::setFinanceLoanTerm(const OAIStatsItem &finance_loan_term) {
    m_finance_loan_term = finance_loan_term;
    m_finance_loan_term_isSet = true;
}

bool OAICarSearchStats::is_finance_loan_term_Set() const{
    return m_finance_loan_term_isSet;
}

bool OAICarSearchStats::is_finance_loan_term_Valid() const{
    return m_finance_loan_term_isValid;
}

OAIStatsItem OAICarSearchStats::getLeaseDownPayment() const {
    return m_lease_down_payment;
}
void OAICarSearchStats::setLeaseDownPayment(const OAIStatsItem &lease_down_payment) {
    m_lease_down_payment = lease_down_payment;
    m_lease_down_payment_isSet = true;
}

bool OAICarSearchStats::is_lease_down_payment_Set() const{
    return m_lease_down_payment_isSet;
}

bool OAICarSearchStats::is_lease_down_payment_Valid() const{
    return m_lease_down_payment_isValid;
}

OAIStatsItem OAICarSearchStats::getLeaseEmp() const {
    return m_lease_emp;
}
void OAICarSearchStats::setLeaseEmp(const OAIStatsItem &lease_emp) {
    m_lease_emp = lease_emp;
    m_lease_emp_isSet = true;
}

bool OAICarSearchStats::is_lease_emp_Set() const{
    return m_lease_emp_isSet;
}

bool OAICarSearchStats::is_lease_emp_Valid() const{
    return m_lease_emp_isValid;
}

OAIStatsItem OAICarSearchStats::getLeaseTerm() const {
    return m_lease_term;
}
void OAICarSearchStats::setLeaseTerm(const OAIStatsItem &lease_term) {
    m_lease_term = lease_term;
    m_lease_term_isSet = true;
}

bool OAICarSearchStats::is_lease_term_Set() const{
    return m_lease_term_isSet;
}

bool OAICarSearchStats::is_lease_term_Valid() const{
    return m_lease_term_isValid;
}

OAIStatsItem OAICarSearchStats::getMiles() const {
    return m_miles;
}
void OAICarSearchStats::setMiles(const OAIStatsItem &miles) {
    m_miles = miles;
    m_miles_isSet = true;
}

bool OAICarSearchStats::is_miles_Set() const{
    return m_miles_isSet;
}

bool OAICarSearchStats::is_miles_Valid() const{
    return m_miles_isValid;
}

OAIStatsItem OAICarSearchStats::getMsrp() const {
    return m_msrp;
}
void OAICarSearchStats::setMsrp(const OAIStatsItem &msrp) {
    m_msrp = msrp;
    m_msrp_isSet = true;
}

bool OAICarSearchStats::is_msrp_Set() const{
    return m_msrp_isSet;
}

bool OAICarSearchStats::is_msrp_Valid() const{
    return m_msrp_isValid;
}

OAIStatsItem OAICarSearchStats::getPrice() const {
    return m_price;
}
void OAICarSearchStats::setPrice(const OAIStatsItem &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAICarSearchStats::is_price_Set() const{
    return m_price_isSet;
}

bool OAICarSearchStats::is_price_Valid() const{
    return m_price_isValid;
}

bool OAICarSearchStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dom.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dom_180.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_dom_active.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_finance_down_payment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_finance_down_payment_per.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_finance_emp.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_finance_loan_apr.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_finance_loan_term.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lease_down_payment.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lease_emp.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_lease_term.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_miles.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_msrp.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICarSearchStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
