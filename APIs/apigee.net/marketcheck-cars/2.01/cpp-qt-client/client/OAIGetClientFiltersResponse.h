/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetClientFiltersResponse.h
 *
 * A client filters response
 */

#ifndef OAIGetClientFiltersResponse_H
#define OAIGetClientFiltersResponse_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetClientFiltersResponse : public OAIObject {
public:
    OAIGetClientFiltersResponse();
    OAIGetClientFiltersResponse(QString json);
    ~OAIGetClientFiltersResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getList() const;
    void setList(const QString &list);
    bool is_list_Set() const;
    bool is_list_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_list;
    bool m_list_isSet;
    bool m_list_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetClientFiltersResponse)

#endif // OAIGetClientFiltersResponse_H
