/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDealer.h
 *
 * 
 */

#ifndef OAIDealer_H
#define OAIDealer_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDealer : public OAIObject {
public:
    OAIDealer();
    OAIDealer(QString json);
    ~OAIDealer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDataSource() const;
    void setDataSource(const QString &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    QString getDealerType() const;
    void setDealerType(const QString &dealer_type);
    bool is_dealer_type_Set() const;
    bool is_dealer_type_Valid() const;

    QString getDealershipGroupName() const;
    void setDealershipGroupName(const QString &dealership_group_name);
    bool is_dealership_group_name_Set() const;
    bool is_dealership_group_name_Valid() const;

    double getDistance() const;
    void setDistance(const double &distance);
    bool is_distance_Set() const;
    bool is_distance_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInventoryUrl() const;
    void setInventoryUrl(const QString &inventory_url);
    bool is_inventory_url_Set() const;
    bool is_inventory_url_Valid() const;

    QString getLatitude() const;
    void setLatitude(const QString &latitude);
    bool is_latitude_Set() const;
    bool is_latitude_Valid() const;

    qint32 getListingCount() const;
    void setListingCount(const qint32 &listing_count);
    bool is_listing_count_Set() const;
    bool is_listing_count_Valid() const;

    QString getLocationLl() const;
    void setLocationLl(const QString &location_ll);
    bool is_location_ll_Set() const;
    bool is_location_ll_Valid() const;

    QString getLongitude() const;
    void setLongitude(const QString &longitude);
    bool is_longitude_Set() const;
    bool is_longitude_Valid() const;

    QString getSellerEmail() const;
    void setSellerEmail(const QString &seller_email);
    bool is_seller_email_Set() const;
    bool is_seller_email_Valid() const;

    QString getSellerName() const;
    void setSellerName(const QString &seller_name);
    bool is_seller_name_Set() const;
    bool is_seller_name_Valid() const;

    QString getSellerPhone() const;
    void setSellerPhone(const QString &seller_phone);
    bool is_seller_phone_Set() const;
    bool is_seller_phone_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getStreet() const;
    void setStreet(const QString &street);
    bool is_street_Set() const;
    bool is_street_Valid() const;

    QString getZip() const;
    void setZip(const QString &zip);
    bool is_zip_Set() const;
    bool is_zip_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    QString m_dealer_type;
    bool m_dealer_type_isSet;
    bool m_dealer_type_isValid;

    QString m_dealership_group_name;
    bool m_dealership_group_name_isSet;
    bool m_dealership_group_name_isValid;

    double m_distance;
    bool m_distance_isSet;
    bool m_distance_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_inventory_url;
    bool m_inventory_url_isSet;
    bool m_inventory_url_isValid;

    QString m_latitude;
    bool m_latitude_isSet;
    bool m_latitude_isValid;

    qint32 m_listing_count;
    bool m_listing_count_isSet;
    bool m_listing_count_isValid;

    QString m_location_ll;
    bool m_location_ll_isSet;
    bool m_location_ll_isValid;

    QString m_longitude;
    bool m_longitude_isSet;
    bool m_longitude_isValid;

    QString m_seller_email;
    bool m_seller_email_isSet;
    bool m_seller_email_isValid;

    QString m_seller_name;
    bool m_seller_name_isSet;
    bool m_seller_name_isValid;

    QString m_seller_phone;
    bool m_seller_phone_isSet;
    bool m_seller_phone_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_street;
    bool m_street_isSet;
    bool m_street_isValid;

    QString m_zip;
    bool m_zip_isSet;
    bool m_zip_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDealer)

#endif // OAIDealer_H
