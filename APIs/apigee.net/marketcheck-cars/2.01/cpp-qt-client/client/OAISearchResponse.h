/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchResponse.h
 *
 * Search query response
 */

#ifndef OAISearchResponse_H
#define OAISearchResponse_H

#include <QJsonObject>

#include "OAIBaseListing.h"
#include "OAICarSearchFacets.h"
#include "OAICarSearchRangeFacets.h"
#include "OAICarSearchStats.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICarSearchFacets;
class OAIBaseListing;
class OAICarSearchRangeFacets;
class OAICarSearchStats;

class OAISearchResponse : public OAIObject {
public:
    OAISearchResponse();
    OAISearchResponse(QString json);
    ~OAISearchResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICarSearchFacets getFacets() const;
    void setFacets(const OAICarSearchFacets &facets);
    bool is_facets_Set() const;
    bool is_facets_Valid() const;

    QList<OAIBaseListing> getListings() const;
    void setListings(const QList<OAIBaseListing> &listings);
    bool is_listings_Set() const;
    bool is_listings_Valid() const;

    qint32 getNumFound() const;
    void setNumFound(const qint32 &num_found);
    bool is_num_found_Set() const;
    bool is_num_found_Valid() const;

    OAICarSearchRangeFacets getRangeFacets() const;
    void setRangeFacets(const OAICarSearchRangeFacets &range_facets);
    bool is_range_facets_Set() const;
    bool is_range_facets_Valid() const;

    OAICarSearchStats getStats() const;
    void setStats(const OAICarSearchStats &stats);
    bool is_stats_Set() const;
    bool is_stats_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICarSearchFacets m_facets;
    bool m_facets_isSet;
    bool m_facets_isValid;

    QList<OAIBaseListing> m_listings;
    bool m_listings_isSet;
    bool m_listings_isValid;

    qint32 m_num_found;
    bool m_num_found_isSet;
    bool m_num_found_isValid;

    OAICarSearchRangeFacets m_range_facets;
    bool m_range_facets_isSet;
    bool m_range_facets_isValid;

    OAICarSearchStats m_stats;
    bool m_stats_isSet;
    bool m_stats_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchResponse)

#endif // OAISearchResponse_H
