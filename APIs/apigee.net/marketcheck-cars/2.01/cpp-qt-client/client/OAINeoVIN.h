/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINeoVIN.h
 *
 * Describes the NeoVIN specification
 */

#ifndef OAINeoVIN_H
#define OAINeoVIN_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINeoVIN : public OAIObject {
public:
    OAINeoVIN();
    OAINeoVIN(QString json);
    ~OAINeoVIN() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getAvailableOptionsDetails() const;
    void setAvailableOptionsDetails(const OAIObject &available_options_details);
    bool is_available_options_details_Set() const;
    bool is_available_options_details_Valid() const;

    QString getBodySubtype() const;
    void setBodySubtype(const QString &body_subtype);
    bool is_body_subtype_Set() const;
    bool is_body_subtype_Valid() const;

    QString getBodyType() const;
    void setBodyType(const QString &body_type);
    bool is_body_type_Set() const;
    bool is_body_type_Valid() const;

    double getCityMpg() const;
    void setCityMpg(const double &city_mpg);
    bool is_city_mpg_Set() const;
    bool is_city_mpg_Valid() const;

    double getCombinedMsrp() const;
    void setCombinedMsrp(const double &combined_msrp);
    bool is_combined_msrp_Set() const;
    bool is_combined_msrp_Valid() const;

    qint32 getCreatedAt() const;
    void setCreatedAt(const qint32 &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getCreatedAtDate() const;
    void setCreatedAtDate(const QString &created_at_date);
    bool is_created_at_date_Set() const;
    bool is_created_at_date_Valid() const;

    qint32 getDecodeVersion() const;
    void setDecodeVersion(const qint32 &decode_version);
    bool is_decode_version_Set() const;
    bool is_decode_version_Valid() const;

    double getDeliveryCharges() const;
    void setDeliveryCharges(const double &delivery_charges);
    bool is_delivery_charges_Set() const;
    bool is_delivery_charges_Valid() const;

    qint32 getDoors() const;
    void setDoors(const qint32 &doors);
    bool is_doors_Set() const;
    bool is_doors_Valid() const;

    QString getDrivetrain() const;
    void setDrivetrain(const QString &drivetrain);
    bool is_drivetrain_Set() const;
    bool is_drivetrain_Valid() const;

    QString getEngine() const;
    void setEngine(const QString &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    OAIObject getExteriorColor() const;
    void setExteriorColor(const OAIObject &exterior_color);
    bool is_exterior_color_Set() const;
    bool is_exterior_color_Valid() const;

    OAIObject getFeatures() const;
    void setFeatures(const OAIObject &features);
    bool is_features_Set() const;
    bool is_features_Valid() const;

    QString getFuelType() const;
    void setFuelType(const QString &fuel_type);
    bool is_fuel_type_Set() const;
    bool is_fuel_type_Valid() const;

    double getHeight() const;
    void setHeight(const double &height);
    bool is_height_Set() const;
    bool is_height_Valid() const;

    double getHighwayMpg() const;
    void setHighwayMpg(const double &highway_mpg);
    bool is_highway_mpg_Set() const;
    bool is_highway_mpg_Valid() const;

    OAIObject getInstalledEquipment() const;
    void setInstalledEquipment(const OAIObject &installed_equipment);
    bool is_installed_equipment_Set() const;
    bool is_installed_equipment_Valid() const;

    OAIObject getInstalledOptionsDetails() const;
    void setInstalledOptionsDetails(const OAIObject &installed_options_details);
    bool is_installed_options_details_Set() const;
    bool is_installed_options_details_Valid() const;

    double getInstalledOptionsMsrp() const;
    void setInstalledOptionsMsrp(const double &installed_options_msrp);
    bool is_installed_options_msrp_Set() const;
    bool is_installed_options_msrp_Valid() const;

    OAIObject getInteriorColor() const;
    void setInteriorColor(const OAIObject &interior_color);
    bool is_interior_color_Set() const;
    bool is_interior_color_Valid() const;

    double getLength() const;
    void setLength(const double &length);
    bool is_length_Set() const;
    bool is_length_Valid() const;

    QString getListingConfidence() const;
    void setListingConfidence(const QString &listing_confidence);
    bool is_listing_confidence_Set() const;
    bool is_listing_confidence_Valid() const;

    QString getMake() const;
    void setMake(const QString &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QString getManufacturerCode() const;
    void setManufacturerCode(const QString &manufacturer_code);
    bool is_manufacturer_code_Set() const;
    bool is_manufacturer_code_Valid() const;

    QString getModel() const;
    void setModel(const QString &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    double getMsrp() const;
    void setMsrp(const double &msrp);
    bool is_msrp_Set() const;
    bool is_msrp_Valid() const;

    QString getOptionsPackages() const;
    void setOptionsPackages(const QString &options_packages);
    bool is_options_packages_Set() const;
    bool is_options_packages_Valid() const;

    QString getPackageCode() const;
    void setPackageCode(const QString &package_code);
    bool is_package_code_Set() const;
    bool is_package_code_Valid() const;

    QString getPackageDescription() const;
    void setPackageDescription(const QString &package_description);
    bool is_package_description_Set() const;
    bool is_package_description_Valid() const;

    double getSeatingCapacity() const;
    void setSeatingCapacity(const double &seating_capacity);
    bool is_seating_capacity_Set() const;
    bool is_seating_capacity_Valid() const;

    QString getSquishVin() const;
    void setSquishVin(const QString &squish_vin);
    bool is_squish_vin_Set() const;
    bool is_squish_vin_Valid() const;

    QString getTransmission() const;
    void setTransmission(const QString &transmission);
    bool is_transmission_Set() const;
    bool is_transmission_Valid() const;

    QString getTransmissionConfidence() const;
    void setTransmissionConfidence(const QString &transmission_confidence);
    bool is_transmission_confidence_Set() const;
    bool is_transmission_confidence_Valid() const;

    QString getTransmissionDescription() const;
    void setTransmissionDescription(const QString &transmission_description);
    bool is_transmission_description_Set() const;
    bool is_transmission_description_Valid() const;

    QString getTrim() const;
    void setTrim(const QString &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    QString getTrimConfidence() const;
    void setTrimConfidence(const QString &trim_confidence);
    bool is_trim_confidence_Set() const;
    bool is_trim_confidence_Valid() const;

    qint32 getUpdatedAt() const;
    void setUpdatedAt(const qint32 &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getUpdatedAtDate() const;
    void setUpdatedAtDate(const QString &updated_at_date);
    bool is_updated_at_date_Set() const;
    bool is_updated_at_date_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    QString getVersionConfidence() const;
    void setVersionConfidence(const QString &version_confidence);
    bool is_version_confidence_Set() const;
    bool is_version_confidence_Valid() const;

    QString getVin() const;
    void setVin(const QString &vin);
    bool is_vin_Set() const;
    bool is_vin_Valid() const;

    double getWeight() const;
    void setWeight(const double &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    double getWidth() const;
    void setWidth(const double &width);
    bool is_width_Set() const;
    bool is_width_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_available_options_details;
    bool m_available_options_details_isSet;
    bool m_available_options_details_isValid;

    QString m_body_subtype;
    bool m_body_subtype_isSet;
    bool m_body_subtype_isValid;

    QString m_body_type;
    bool m_body_type_isSet;
    bool m_body_type_isValid;

    double m_city_mpg;
    bool m_city_mpg_isSet;
    bool m_city_mpg_isValid;

    double m_combined_msrp;
    bool m_combined_msrp_isSet;
    bool m_combined_msrp_isValid;

    qint32 m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_created_at_date;
    bool m_created_at_date_isSet;
    bool m_created_at_date_isValid;

    qint32 m_decode_version;
    bool m_decode_version_isSet;
    bool m_decode_version_isValid;

    double m_delivery_charges;
    bool m_delivery_charges_isSet;
    bool m_delivery_charges_isValid;

    qint32 m_doors;
    bool m_doors_isSet;
    bool m_doors_isValid;

    QString m_drivetrain;
    bool m_drivetrain_isSet;
    bool m_drivetrain_isValid;

    QString m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    OAIObject m_exterior_color;
    bool m_exterior_color_isSet;
    bool m_exterior_color_isValid;

    OAIObject m_features;
    bool m_features_isSet;
    bool m_features_isValid;

    QString m_fuel_type;
    bool m_fuel_type_isSet;
    bool m_fuel_type_isValid;

    double m_height;
    bool m_height_isSet;
    bool m_height_isValid;

    double m_highway_mpg;
    bool m_highway_mpg_isSet;
    bool m_highway_mpg_isValid;

    OAIObject m_installed_equipment;
    bool m_installed_equipment_isSet;
    bool m_installed_equipment_isValid;

    OAIObject m_installed_options_details;
    bool m_installed_options_details_isSet;
    bool m_installed_options_details_isValid;

    double m_installed_options_msrp;
    bool m_installed_options_msrp_isSet;
    bool m_installed_options_msrp_isValid;

    OAIObject m_interior_color;
    bool m_interior_color_isSet;
    bool m_interior_color_isValid;

    double m_length;
    bool m_length_isSet;
    bool m_length_isValid;

    QString m_listing_confidence;
    bool m_listing_confidence_isSet;
    bool m_listing_confidence_isValid;

    QString m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QString m_manufacturer_code;
    bool m_manufacturer_code_isSet;
    bool m_manufacturer_code_isValid;

    QString m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    double m_msrp;
    bool m_msrp_isSet;
    bool m_msrp_isValid;

    QString m_options_packages;
    bool m_options_packages_isSet;
    bool m_options_packages_isValid;

    QString m_package_code;
    bool m_package_code_isSet;
    bool m_package_code_isValid;

    QString m_package_description;
    bool m_package_description_isSet;
    bool m_package_description_isValid;

    double m_seating_capacity;
    bool m_seating_capacity_isSet;
    bool m_seating_capacity_isValid;

    QString m_squish_vin;
    bool m_squish_vin_isSet;
    bool m_squish_vin_isValid;

    QString m_transmission;
    bool m_transmission_isSet;
    bool m_transmission_isValid;

    QString m_transmission_confidence;
    bool m_transmission_confidence_isSet;
    bool m_transmission_confidence_isValid;

    QString m_transmission_description;
    bool m_transmission_description_isSet;
    bool m_transmission_description_isValid;

    QString m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;

    QString m_trim_confidence;
    bool m_trim_confidence_isSet;
    bool m_trim_confidence_isValid;

    qint32 m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_updated_at_date;
    bool m_updated_at_date_isSet;
    bool m_updated_at_date_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    QString m_version_confidence;
    bool m_version_confidence_isSet;
    bool m_version_confidence_isValid;

    QString m_vin;
    bool m_vin_isSet;
    bool m_vin_isValid;

    double m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;

    double m_width;
    bool m_width_isSet;
    bool m_width_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINeoVIN)

#endif // OAINeoVIN_H
