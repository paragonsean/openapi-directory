/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDepreciationPoint.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDepreciationPoint::OAIDepreciationPoint(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDepreciationPoint::OAIDepreciationPoint() {
    this->initializeModel();
}

OAIDepreciationPoint::~OAIDepreciationPoint() {}

void OAIDepreciationPoint::initializeModel() {

    m_similar_models_isSet = false;
    m_similar_models_isValid = false;
}

void OAIDepreciationPoint::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDepreciationPoint::fromJsonObject(QJsonObject json) {

    m_similar_models_isValid = ::OpenAPI::fromJsonValue(m_similar_models, json[QString("similar_models")]);
    m_similar_models_isSet = !json[QString("similar_models")].isNull() && m_similar_models_isValid;
}

QString OAIDepreciationPoint::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDepreciationPoint::asJsonObject() const {
    QJsonObject obj;
    if (m_similar_models.size() > 0) {
        obj.insert(QString("similar_models"), ::OpenAPI::toJsonValue(m_similar_models));
    }
    return obj;
}

QList<OAIDepreciationStats> OAIDepreciationPoint::getSimilarModels() const {
    return m_similar_models;
}
void OAIDepreciationPoint::setSimilarModels(const QList<OAIDepreciationStats> &similar_models) {
    m_similar_models = similar_models;
    m_similar_models_isSet = true;
}

bool OAIDepreciationPoint::is_similar_models_Set() const{
    return m_similar_models_isSet;
}

bool OAIDepreciationPoint::is_similar_models_Valid() const{
    return m_similar_models_isValid;
}

bool OAIDepreciationPoint::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_similar_models.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDepreciationPoint::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
