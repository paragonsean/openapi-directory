/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICarListingRank.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICarListingRank::OAICarListingRank(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICarListingRank::OAICarListingRank() {
    this->initializeModel();
}

OAICarListingRank::~OAICarListingRank() {}

void OAICarListingRank::initializeModel() {

    m_ranked_listing_isSet = false;
    m_ranked_listing_isValid = false;
}

void OAICarListingRank::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICarListingRank::fromJsonObject(QJsonObject json) {

    m_ranked_listing_isValid = ::OpenAPI::fromJsonValue(m_ranked_listing, json[QString("ranked_listing")]);
    m_ranked_listing_isSet = !json[QString("ranked_listing")].isNull() && m_ranked_listing_isValid;
}

QString OAICarListingRank::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICarListingRank::asJsonObject() const {
    QJsonObject obj;
    if (m_ranked_listing.size() > 0) {
        obj.insert(QString("ranked_listing"), ::OpenAPI::toJsonValue(m_ranked_listing));
    }
    return obj;
}

QList<OAIListing> OAICarListingRank::getRankedListing() const {
    return m_ranked_listing;
}
void OAICarListingRank::setRankedListing(const QList<OAIListing> &ranked_listing) {
    m_ranked_listing = ranked_listing;
    m_ranked_listing_isSet = true;
}

bool OAICarListingRank::is_ranked_listing_Set() const{
    return m_ranked_listing_isSet;
}

bool OAICarListingRank::is_ranked_listing_Valid() const{
    return m_ranked_listing_isValid;
}

bool OAICarListingRank::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ranked_listing.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICarListingRank::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
