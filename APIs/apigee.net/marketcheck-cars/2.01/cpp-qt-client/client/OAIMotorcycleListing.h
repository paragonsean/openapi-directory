/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMotorcycleListing.h
 *
 * Represents a full list of attributes available with Marketcheck for a car
 */

#ifndef OAIMotorcycleListing_H
#define OAIMotorcycleListing_H

#include <QJsonObject>

#include "OAIListingNestExtraAttributes.h"
#include "OAIListingNestMedia.h"
#include "OAIMotorcycleBuild.h"
#include "OAINestDealer.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMotorcycleBuild;
class OAINestDealer;
class OAIListingNestExtraAttributes;
class OAIListingNestMedia;

class OAIMotorcycleListing : public OAIObject {
public:
    OAIMotorcycleListing();
    OAIMotorcycleListing(QString json);
    ~OAIMotorcycleListing() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIMotorcycleBuild getBuild() const;
    void setBuild(const OAIMotorcycleBuild &build);
    bool is_build_Set() const;
    bool is_build_Valid() const;

    QString getColor() const;
    void setColor(const QString &color);
    bool is_color_Set() const;
    bool is_color_Valid() const;

    OAINestDealer getDealer() const;
    void setDealer(const OAINestDealer &dealer);
    bool is_dealer_Set() const;
    bool is_dealer_Valid() const;

    QString getDpUrl() const;
    void setDpUrl(const QString &dp_url);
    bool is_dp_url_Set() const;
    bool is_dp_url_Valid() const;

    OAIListingNestExtraAttributes getExtra() const;
    void setExtra(const OAIListingNestExtraAttributes &extra);
    bool is_extra_Set() const;
    bool is_extra_Valid() const;

    qint32 getFirstSeenAt() const;
    void setFirstSeenAt(const qint32 &first_seen_at);
    bool is_first_seen_at_Set() const;
    bool is_first_seen_at_Valid() const;

    QString getFirstSeenAtDate() const;
    void setFirstSeenAtDate(const QString &first_seen_at_date);
    bool is_first_seen_at_date_Set() const;
    bool is_first_seen_at_date_Valid() const;

    QString getHeading() const;
    void setHeading(const QString &heading);
    bool is_heading_Set() const;
    bool is_heading_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInventoryType() const;
    void setInventoryType(const QString &inventory_type);
    bool is_inventory_type_Set() const;
    bool is_inventory_type_Valid() const;

    qint32 getLastSeenAt() const;
    void setLastSeenAt(const qint32 &last_seen_at);
    bool is_last_seen_at_Set() const;
    bool is_last_seen_at_Valid() const;

    QString getLastSeenAtDate() const;
    void setLastSeenAtDate(const QString &last_seen_at_date);
    bool is_last_seen_at_date_Set() const;
    bool is_last_seen_at_date_Valid() const;

    OAIListingNestMedia getMedia() const;
    void setMedia(const OAIListingNestMedia &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    qint32 getMiles() const;
    void setMiles(const qint32 &miles);
    bool is_miles_Set() const;
    bool is_miles_Valid() const;

    qint32 getMsrp() const;
    void setMsrp(const qint32 &msrp);
    bool is_msrp_Set() const;
    bool is_msrp_Valid() const;

    qint32 getPrice() const;
    void setPrice(const qint32 &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getScrapedAt() const;
    void setScrapedAt(const double &scraped_at);
    bool is_scraped_at_Set() const;
    bool is_scraped_at_Valid() const;

    QString getScrapedAtDate() const;
    void setScrapedAtDate(const QString &scraped_at_date);
    bool is_scraped_at_date_Set() const;
    bool is_scraped_at_date_Valid() const;

    QString getSellerType() const;
    void setSellerType(const QString &seller_type);
    bool is_seller_type_Set() const;
    bool is_seller_type_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getStockNo() const;
    void setStockNo(const QString &stock_no);
    bool is_stock_no_Set() const;
    bool is_stock_no_Valid() const;

    QString getVin() const;
    void setVin(const QString &vin);
    bool is_vin_Set() const;
    bool is_vin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIMotorcycleBuild m_build;
    bool m_build_isSet;
    bool m_build_isValid;

    QString m_color;
    bool m_color_isSet;
    bool m_color_isValid;

    OAINestDealer m_dealer;
    bool m_dealer_isSet;
    bool m_dealer_isValid;

    QString m_dp_url;
    bool m_dp_url_isSet;
    bool m_dp_url_isValid;

    OAIListingNestExtraAttributes m_extra;
    bool m_extra_isSet;
    bool m_extra_isValid;

    qint32 m_first_seen_at;
    bool m_first_seen_at_isSet;
    bool m_first_seen_at_isValid;

    QString m_first_seen_at_date;
    bool m_first_seen_at_date_isSet;
    bool m_first_seen_at_date_isValid;

    QString m_heading;
    bool m_heading_isSet;
    bool m_heading_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_inventory_type;
    bool m_inventory_type_isSet;
    bool m_inventory_type_isValid;

    qint32 m_last_seen_at;
    bool m_last_seen_at_isSet;
    bool m_last_seen_at_isValid;

    QString m_last_seen_at_date;
    bool m_last_seen_at_date_isSet;
    bool m_last_seen_at_date_isValid;

    OAIListingNestMedia m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    qint32 m_miles;
    bool m_miles_isSet;
    bool m_miles_isValid;

    qint32 m_msrp;
    bool m_msrp_isSet;
    bool m_msrp_isValid;

    qint32 m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_scraped_at;
    bool m_scraped_at_isSet;
    bool m_scraped_at_isValid;

    QString m_scraped_at_date;
    bool m_scraped_at_date_isSet;
    bool m_scraped_at_date_isValid;

    QString m_seller_type;
    bool m_seller_type_isSet;
    bool m_seller_type_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_stock_no;
    bool m_stock_no_isSet;
    bool m_stock_no_isValid;

    QString m_vin;
    bool m_vin_isSet;
    bool m_vin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMotorcycleListing)

#endif // OAIMotorcycleListing_H
