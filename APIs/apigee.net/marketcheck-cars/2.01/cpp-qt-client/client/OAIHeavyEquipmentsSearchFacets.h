/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHeavyEquipmentsSearchFacets.h
 *
 * 
 */

#ifndef OAIHeavyEquipmentsSearchFacets_H
#define OAIHeavyEquipmentsSearchFacets_H

#include <QJsonObject>

#include "OAIFacetItem.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFacetItem;

class OAIHeavyEquipmentsSearchFacets : public OAIObject {
public:
    OAIHeavyEquipmentsSearchFacets();
    OAIHeavyEquipmentsSearchFacets(QString json);
    ~OAIHeavyEquipmentsSearchFacets() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIFacetItem> getBodyType() const;
    void setBodyType(const QList<OAIFacetItem> &body_type);
    bool is_body_type_Set() const;
    bool is_body_type_Valid() const;

    QList<OAIFacetItem> getCategory() const;
    void setCategory(const QList<OAIFacetItem> &category);
    bool is_category_Set() const;
    bool is_category_Valid() const;

    QList<OAIFacetItem> getCity() const;
    void setCity(const QList<OAIFacetItem> &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QList<OAIFacetItem> getCylinders() const;
    void setCylinders(const QList<OAIFacetItem> &cylinders);
    bool is_cylinders_Set() const;
    bool is_cylinders_Valid() const;

    QList<OAIFacetItem> getDealerId() const;
    void setDealerId(const QList<OAIFacetItem> &dealer_id);
    bool is_dealer_id_Set() const;
    bool is_dealer_id_Valid() const;

    QList<OAIFacetItem> getDrivetrain() const;
    void setDrivetrain(const QList<OAIFacetItem> &drivetrain);
    bool is_drivetrain_Set() const;
    bool is_drivetrain_Valid() const;

    QList<OAIFacetItem> getEngine() const;
    void setEngine(const QList<OAIFacetItem> &engine);
    bool is_engine_Set() const;
    bool is_engine_Valid() const;

    QList<OAIFacetItem> getExteriorColor() const;
    void setExteriorColor(const QList<OAIFacetItem> &exterior_color);
    bool is_exterior_color_Set() const;
    bool is_exterior_color_Valid() const;

    QList<OAIFacetItem> getFuelType() const;
    void setFuelType(const QList<OAIFacetItem> &fuel_type);
    bool is_fuel_type_Set() const;
    bool is_fuel_type_Valid() const;

    QList<OAIFacetItem> getInteriorColor() const;
    void setInteriorColor(const QList<OAIFacetItem> &interior_color);
    bool is_interior_color_Set() const;
    bool is_interior_color_Valid() const;

    QList<OAIFacetItem> getInventoryType() const;
    void setInventoryType(const QList<OAIFacetItem> &inventory_type);
    bool is_inventory_type_Set() const;
    bool is_inventory_type_Valid() const;

    QList<OAIFacetItem> getMake() const;
    void setMake(const QList<OAIFacetItem> &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    QList<OAIFacetItem> getModel() const;
    void setModel(const QList<OAIFacetItem> &model);
    bool is_model_Set() const;
    bool is_model_Valid() const;

    QList<OAIFacetItem> getSellerName() const;
    void setSellerName(const QList<OAIFacetItem> &seller_name);
    bool is_seller_name_Set() const;
    bool is_seller_name_Valid() const;

    QList<OAIFacetItem> getSource() const;
    void setSource(const QList<OAIFacetItem> &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QList<OAIFacetItem> getState() const;
    void setState(const QList<OAIFacetItem> &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QList<OAIFacetItem> getSubCategory() const;
    void setSubCategory(const QList<OAIFacetItem> &sub_category);
    bool is_sub_category_Set() const;
    bool is_sub_category_Valid() const;

    QList<OAIFacetItem> getTransmission() const;
    void setTransmission(const QList<OAIFacetItem> &transmission);
    bool is_transmission_Set() const;
    bool is_transmission_Valid() const;

    QList<OAIFacetItem> getTrim() const;
    void setTrim(const QList<OAIFacetItem> &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    QList<OAIFacetItem> getYear() const;
    void setYear(const QList<OAIFacetItem> &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIFacetItem> m_body_type;
    bool m_body_type_isSet;
    bool m_body_type_isValid;

    QList<OAIFacetItem> m_category;
    bool m_category_isSet;
    bool m_category_isValid;

    QList<OAIFacetItem> m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QList<OAIFacetItem> m_cylinders;
    bool m_cylinders_isSet;
    bool m_cylinders_isValid;

    QList<OAIFacetItem> m_dealer_id;
    bool m_dealer_id_isSet;
    bool m_dealer_id_isValid;

    QList<OAIFacetItem> m_drivetrain;
    bool m_drivetrain_isSet;
    bool m_drivetrain_isValid;

    QList<OAIFacetItem> m_engine;
    bool m_engine_isSet;
    bool m_engine_isValid;

    QList<OAIFacetItem> m_exterior_color;
    bool m_exterior_color_isSet;
    bool m_exterior_color_isValid;

    QList<OAIFacetItem> m_fuel_type;
    bool m_fuel_type_isSet;
    bool m_fuel_type_isValid;

    QList<OAIFacetItem> m_interior_color;
    bool m_interior_color_isSet;
    bool m_interior_color_isValid;

    QList<OAIFacetItem> m_inventory_type;
    bool m_inventory_type_isSet;
    bool m_inventory_type_isValid;

    QList<OAIFacetItem> m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    QList<OAIFacetItem> m_model;
    bool m_model_isSet;
    bool m_model_isValid;

    QList<OAIFacetItem> m_seller_name;
    bool m_seller_name_isSet;
    bool m_seller_name_isValid;

    QList<OAIFacetItem> m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QList<OAIFacetItem> m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QList<OAIFacetItem> m_sub_category;
    bool m_sub_category_isSet;
    bool m_sub_category_isValid;

    QList<OAIFacetItem> m_transmission;
    bool m_transmission_isSet;
    bool m_transmission_isValid;

    QList<OAIFacetItem> m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;

    QList<OAIFacetItem> m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHeavyEquipmentsSearchFacets)

#endif // OAIHeavyEquipmentsSearchFacets_H
