/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUKRVSearchRangeFacets.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUKRVSearchRangeFacets::OAIUKRVSearchRangeFacets(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUKRVSearchRangeFacets::OAIUKRVSearchRangeFacets() {
    this->initializeModel();
}

OAIUKRVSearchRangeFacets::~OAIUKRVSearchRangeFacets() {}

void OAIUKRVSearchRangeFacets::initializeModel() {

    m_exterior_length_isSet = false;
    m_exterior_length_isValid = false;

    m_interior_length_isSet = false;
    m_interior_length_isValid = false;

    m_miles_isSet = false;
    m_miles_isValid = false;

    m_price_isSet = false;
    m_price_isValid = false;

    m_width_isSet = false;
    m_width_isValid = false;
}

void OAIUKRVSearchRangeFacets::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUKRVSearchRangeFacets::fromJsonObject(QJsonObject json) {

    m_exterior_length_isValid = ::OpenAPI::fromJsonValue(m_exterior_length, json[QString("exterior_length")]);
    m_exterior_length_isSet = !json[QString("exterior_length")].isNull() && m_exterior_length_isValid;

    m_interior_length_isValid = ::OpenAPI::fromJsonValue(m_interior_length, json[QString("interior_length")]);
    m_interior_length_isSet = !json[QString("interior_length")].isNull() && m_interior_length_isValid;

    m_miles_isValid = ::OpenAPI::fromJsonValue(m_miles, json[QString("miles")]);
    m_miles_isSet = !json[QString("miles")].isNull() && m_miles_isValid;

    m_price_isValid = ::OpenAPI::fromJsonValue(m_price, json[QString("price")]);
    m_price_isSet = !json[QString("price")].isNull() && m_price_isValid;

    m_width_isValid = ::OpenAPI::fromJsonValue(m_width, json[QString("width")]);
    m_width_isSet = !json[QString("width")].isNull() && m_width_isValid;
}

QString OAIUKRVSearchRangeFacets::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUKRVSearchRangeFacets::asJsonObject() const {
    QJsonObject obj;
    if (m_exterior_length.size() > 0) {
        obj.insert(QString("exterior_length"), ::OpenAPI::toJsonValue(m_exterior_length));
    }
    if (m_interior_length.size() > 0) {
        obj.insert(QString("interior_length"), ::OpenAPI::toJsonValue(m_interior_length));
    }
    if (m_miles.size() > 0) {
        obj.insert(QString("miles"), ::OpenAPI::toJsonValue(m_miles));
    }
    if (m_price.size() > 0) {
        obj.insert(QString("price"), ::OpenAPI::toJsonValue(m_price));
    }
    if (m_width.size() > 0) {
        obj.insert(QString("width"), ::OpenAPI::toJsonValue(m_width));
    }
    return obj;
}

QList<OAIRangeFacetItem> OAIUKRVSearchRangeFacets::getExteriorLength() const {
    return m_exterior_length;
}
void OAIUKRVSearchRangeFacets::setExteriorLength(const QList<OAIRangeFacetItem> &exterior_length) {
    m_exterior_length = exterior_length;
    m_exterior_length_isSet = true;
}

bool OAIUKRVSearchRangeFacets::is_exterior_length_Set() const{
    return m_exterior_length_isSet;
}

bool OAIUKRVSearchRangeFacets::is_exterior_length_Valid() const{
    return m_exterior_length_isValid;
}

QList<OAIRangeFacetItem> OAIUKRVSearchRangeFacets::getInteriorLength() const {
    return m_interior_length;
}
void OAIUKRVSearchRangeFacets::setInteriorLength(const QList<OAIRangeFacetItem> &interior_length) {
    m_interior_length = interior_length;
    m_interior_length_isSet = true;
}

bool OAIUKRVSearchRangeFacets::is_interior_length_Set() const{
    return m_interior_length_isSet;
}

bool OAIUKRVSearchRangeFacets::is_interior_length_Valid() const{
    return m_interior_length_isValid;
}

QList<OAIRangeFacetItem> OAIUKRVSearchRangeFacets::getMiles() const {
    return m_miles;
}
void OAIUKRVSearchRangeFacets::setMiles(const QList<OAIRangeFacetItem> &miles) {
    m_miles = miles;
    m_miles_isSet = true;
}

bool OAIUKRVSearchRangeFacets::is_miles_Set() const{
    return m_miles_isSet;
}

bool OAIUKRVSearchRangeFacets::is_miles_Valid() const{
    return m_miles_isValid;
}

QList<OAIRangeFacetItem> OAIUKRVSearchRangeFacets::getPrice() const {
    return m_price;
}
void OAIUKRVSearchRangeFacets::setPrice(const QList<OAIRangeFacetItem> &price) {
    m_price = price;
    m_price_isSet = true;
}

bool OAIUKRVSearchRangeFacets::is_price_Set() const{
    return m_price_isSet;
}

bool OAIUKRVSearchRangeFacets::is_price_Valid() const{
    return m_price_isValid;
}

QList<OAIRangeFacetItem> OAIUKRVSearchRangeFacets::getWidth() const {
    return m_width;
}
void OAIUKRVSearchRangeFacets::setWidth(const QList<OAIRangeFacetItem> &width) {
    m_width = width;
    m_width_isSet = true;
}

bool OAIUKRVSearchRangeFacets::is_width_Set() const{
    return m_width_isSet;
}

bool OAIUKRVSearchRangeFacets::is_width_Valid() const{
    return m_width_isValid;
}

bool OAIUKRVSearchRangeFacets::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_exterior_length.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_interior_length.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_miles.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_price.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_width.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUKRVSearchRangeFacets::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
