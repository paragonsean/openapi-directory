/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUKRVBaseListing.h
 *
 * Base RV listing
 */

#ifndef OAIUKRVBaseListing_H
#define OAIUKRVBaseListing_H

#include <QJsonObject>

#include "OAIListingNestMedia.h"
#include "OAINestDealer.h"
#include "OAIUKRVBuild.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUKRVBuild;
class OAINestDealer;
class OAIListingNestMedia;

class OAIUKRVBaseListing : public OAIObject {
public:
    OAIUKRVBaseListing();
    OAIUKRVBaseListing(QString json);
    ~OAIUKRVBaseListing() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAvailabilityStatus() const;
    void setAvailabilityStatus(const QString &availability_status);
    bool is_availability_status_Set() const;
    bool is_availability_status_Valid() const;

    OAIUKRVBuild getBuild() const;
    void setBuild(const OAIUKRVBuild &build);
    bool is_build_Set() const;
    bool is_build_Valid() const;

    QString getCurrencyIndicator() const;
    void setCurrencyIndicator(const QString &currency_indicator);
    bool is_currency_indicator_Set() const;
    bool is_currency_indicator_Valid() const;

    OAINestDealer getDealer() const;
    void setDealer(const OAINestDealer &dealer);
    bool is_dealer_Set() const;
    bool is_dealer_Valid() const;

    double getDist() const;
    void setDist(const double &dist);
    bool is_dist_Set() const;
    bool is_dist_Valid() const;

    QString getExteriorColor() const;
    void setExteriorColor(const QString &exterior_color);
    bool is_exterior_color_Set() const;
    bool is_exterior_color_Valid() const;

    qint32 getFirstSeenAt() const;
    void setFirstSeenAt(const qint32 &first_seen_at);
    bool is_first_seen_at_Set() const;
    bool is_first_seen_at_Valid() const;

    QString getFirstSeenAtDate() const;
    void setFirstSeenAtDate(const QString &first_seen_at_date);
    bool is_first_seen_at_date_Set() const;
    bool is_first_seen_at_date_Valid() const;

    QString getHeading() const;
    void setHeading(const QString &heading);
    bool is_heading_Set() const;
    bool is_heading_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInteriorColor() const;
    void setInteriorColor(const QString &interior_color);
    bool is_interior_color_Set() const;
    bool is_interior_color_Valid() const;

    QString getInventoryType() const;
    void setInventoryType(const QString &inventory_type);
    bool is_inventory_type_Set() const;
    bool is_inventory_type_Valid() const;

    qint32 getLastSeenAt() const;
    void setLastSeenAt(const qint32 &last_seen_at);
    bool is_last_seen_at_Set() const;
    bool is_last_seen_at_Valid() const;

    QString getLastSeenAtDate() const;
    void setLastSeenAtDate(const QString &last_seen_at_date);
    bool is_last_seen_at_date_Set() const;
    bool is_last_seen_at_date_Valid() const;

    OAIListingNestMedia getMedia() const;
    void setMedia(const OAIListingNestMedia &media);
    bool is_media_Set() const;
    bool is_media_Valid() const;

    qint32 getMiles() const;
    void setMiles(const qint32 &miles);
    bool is_miles_Set() const;
    bool is_miles_Valid() const;

    QString getMilesIndicator() const;
    void setMilesIndicator(const QString &miles_indicator);
    bool is_miles_indicator_Set() const;
    bool is_miles_indicator_Valid() const;

    QString getMotExpires() const;
    void setMotExpires(const QString &mot_expires);
    bool is_mot_expires_Set() const;
    bool is_mot_expires_Valid() const;

    QString getMotorhomeBuild() const;
    void setMotorhomeBuild(const QString &motorhome_build);
    bool is_motorhome_build_Set() const;
    bool is_motorhome_build_Valid() const;

    qint32 getMsrp() const;
    void setMsrp(const qint32 &msrp);
    bool is_msrp_Set() const;
    bool is_msrp_Valid() const;

    QString getOrigin() const;
    void setOrigin(const QString &origin);
    bool is_origin_Set() const;
    bool is_origin_Valid() const;

    qint32 getPrice() const;
    void setPrice(const qint32 &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getScrapedAt() const;
    void setScrapedAt(const double &scraped_at);
    bool is_scraped_at_Set() const;
    bool is_scraped_at_Valid() const;

    QString getScrapedAtDate() const;
    void setScrapedAtDate(const QString &scraped_at_date);
    bool is_scraped_at_date_Set() const;
    bool is_scraped_at_date_Valid() const;

    QString getSellerType() const;
    void setSellerType(const QString &seller_type);
    bool is_seller_type_Set() const;
    bool is_seller_type_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getStockNo() const;
    void setStockNo(const QString &stock_no);
    bool is_stock_no_Set() const;
    bool is_stock_no_Valid() const;

    QString getVdpUrl() const;
    void setVdpUrl(const QString &vdp_url);
    bool is_vdp_url_Set() const;
    bool is_vdp_url_Valid() const;

    QString getVin() const;
    void setVin(const QString &vin);
    bool is_vin_Set() const;
    bool is_vin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_availability_status;
    bool m_availability_status_isSet;
    bool m_availability_status_isValid;

    OAIUKRVBuild m_build;
    bool m_build_isSet;
    bool m_build_isValid;

    QString m_currency_indicator;
    bool m_currency_indicator_isSet;
    bool m_currency_indicator_isValid;

    OAINestDealer m_dealer;
    bool m_dealer_isSet;
    bool m_dealer_isValid;

    double m_dist;
    bool m_dist_isSet;
    bool m_dist_isValid;

    QString m_exterior_color;
    bool m_exterior_color_isSet;
    bool m_exterior_color_isValid;

    qint32 m_first_seen_at;
    bool m_first_seen_at_isSet;
    bool m_first_seen_at_isValid;

    QString m_first_seen_at_date;
    bool m_first_seen_at_date_isSet;
    bool m_first_seen_at_date_isValid;

    QString m_heading;
    bool m_heading_isSet;
    bool m_heading_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_interior_color;
    bool m_interior_color_isSet;
    bool m_interior_color_isValid;

    QString m_inventory_type;
    bool m_inventory_type_isSet;
    bool m_inventory_type_isValid;

    qint32 m_last_seen_at;
    bool m_last_seen_at_isSet;
    bool m_last_seen_at_isValid;

    QString m_last_seen_at_date;
    bool m_last_seen_at_date_isSet;
    bool m_last_seen_at_date_isValid;

    OAIListingNestMedia m_media;
    bool m_media_isSet;
    bool m_media_isValid;

    qint32 m_miles;
    bool m_miles_isSet;
    bool m_miles_isValid;

    QString m_miles_indicator;
    bool m_miles_indicator_isSet;
    bool m_miles_indicator_isValid;

    QString m_mot_expires;
    bool m_mot_expires_isSet;
    bool m_mot_expires_isValid;

    QString m_motorhome_build;
    bool m_motorhome_build_isSet;
    bool m_motorhome_build_isValid;

    qint32 m_msrp;
    bool m_msrp_isSet;
    bool m_msrp_isValid;

    QString m_origin;
    bool m_origin_isSet;
    bool m_origin_isValid;

    qint32 m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_scraped_at;
    bool m_scraped_at_isSet;
    bool m_scraped_at_isValid;

    QString m_scraped_at_date;
    bool m_scraped_at_date_isSet;
    bool m_scraped_at_date_isValid;

    QString m_seller_type;
    bool m_seller_type_isSet;
    bool m_seller_type_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_stock_no;
    bool m_stock_no_isSet;
    bool m_stock_no_isValid;

    QString m_vdp_url;
    bool m_vdp_url_isSet;
    bool m_vdp_url_isValid;

    QString m_vin;
    bool m_vin_isSet;
    bool m_vin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUKRVBaseListing)

#endif // OAIUKRVBaseListing_H
