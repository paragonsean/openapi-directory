/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPricePrediction.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPricePrediction::OAIPricePrediction(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPricePrediction::OAIPricePrediction() {
    this->initializeModel();
}

OAIPricePrediction::~OAIPricePrediction() {}

void OAIPricePrediction::initializeModel() {

    m_predicted_price_isSet = false;
    m_predicted_price_isValid = false;

    m_price_range_isSet = false;
    m_price_range_isValid = false;

    m_specs_isSet = false;
    m_specs_isValid = false;
}

void OAIPricePrediction::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPricePrediction::fromJsonObject(QJsonObject json) {

    m_predicted_price_isValid = ::OpenAPI::fromJsonValue(m_predicted_price, json[QString("predicted_price")]);
    m_predicted_price_isSet = !json[QString("predicted_price")].isNull() && m_predicted_price_isValid;

    m_price_range_isValid = ::OpenAPI::fromJsonValue(m_price_range, json[QString("price_range")]);
    m_price_range_isSet = !json[QString("price_range")].isNull() && m_price_range_isValid;

    m_specs_isValid = ::OpenAPI::fromJsonValue(m_specs, json[QString("specs")]);
    m_specs_isSet = !json[QString("specs")].isNull() && m_specs_isValid;
}

QString OAIPricePrediction::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPricePrediction::asJsonObject() const {
    QJsonObject obj;
    if (m_predicted_price_isSet) {
        obj.insert(QString("predicted_price"), ::OpenAPI::toJsonValue(m_predicted_price));
    }
    if (m_price_range.isSet()) {
        obj.insert(QString("price_range"), ::OpenAPI::toJsonValue(m_price_range));
    }
    if (m_specs.isSet()) {
        obj.insert(QString("specs"), ::OpenAPI::toJsonValue(m_specs));
    }
    return obj;
}

qint32 OAIPricePrediction::getPredictedPrice() const {
    return m_predicted_price;
}
void OAIPricePrediction::setPredictedPrice(const qint32 &predicted_price) {
    m_predicted_price = predicted_price;
    m_predicted_price_isSet = true;
}

bool OAIPricePrediction::is_predicted_price_Set() const{
    return m_predicted_price_isSet;
}

bool OAIPricePrediction::is_predicted_price_Valid() const{
    return m_predicted_price_isValid;
}

OAIPricePrediction_price_range OAIPricePrediction::getPriceRange() const {
    return m_price_range;
}
void OAIPricePrediction::setPriceRange(const OAIPricePrediction_price_range &price_range) {
    m_price_range = price_range;
    m_price_range_isSet = true;
}

bool OAIPricePrediction::is_price_range_Set() const{
    return m_price_range_isSet;
}

bool OAIPricePrediction::is_price_range_Valid() const{
    return m_price_range_isValid;
}

OAIPredictedSpecs OAIPricePrediction::getSpecs() const {
    return m_specs;
}
void OAIPricePrediction::setSpecs(const OAIPredictedSpecs &specs) {
    m_specs = specs;
    m_specs_isSet = true;
}

bool OAIPricePrediction::is_specs_Set() const{
    return m_specs_isSet;
}

bool OAIPricePrediction::is_specs_Valid() const{
    return m_specs_isValid;
}

bool OAIPricePrediction::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_predicted_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_range.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_specs.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPricePrediction::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
