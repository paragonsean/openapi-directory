/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListingFinance.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListingFinance::OAIListingFinance(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListingFinance::OAIListingFinance() {
    this->initializeModel();
}

OAIListingFinance::~OAIListingFinance() {}

void OAIListingFinance::initializeModel() {

    m_down_payment_isSet = false;
    m_down_payment_isValid = false;

    m_down_payment_percentage_isSet = false;
    m_down_payment_percentage_isValid = false;

    m_estimated_monthly_payment_isSet = false;
    m_estimated_monthly_payment_isValid = false;

    m_loan_apr_isSet = false;
    m_loan_apr_isValid = false;

    m_loan_term_isSet = false;
    m_loan_term_isValid = false;
}

void OAIListingFinance::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListingFinance::fromJsonObject(QJsonObject json) {

    m_down_payment_isValid = ::OpenAPI::fromJsonValue(m_down_payment, json[QString("down_payment")]);
    m_down_payment_isSet = !json[QString("down_payment")].isNull() && m_down_payment_isValid;

    m_down_payment_percentage_isValid = ::OpenAPI::fromJsonValue(m_down_payment_percentage, json[QString("down_payment_percentage")]);
    m_down_payment_percentage_isSet = !json[QString("down_payment_percentage")].isNull() && m_down_payment_percentage_isValid;

    m_estimated_monthly_payment_isValid = ::OpenAPI::fromJsonValue(m_estimated_monthly_payment, json[QString("estimated_monthly_payment")]);
    m_estimated_monthly_payment_isSet = !json[QString("estimated_monthly_payment")].isNull() && m_estimated_monthly_payment_isValid;

    m_loan_apr_isValid = ::OpenAPI::fromJsonValue(m_loan_apr, json[QString("loan_apr")]);
    m_loan_apr_isSet = !json[QString("loan_apr")].isNull() && m_loan_apr_isValid;

    m_loan_term_isValid = ::OpenAPI::fromJsonValue(m_loan_term, json[QString("loan_term")]);
    m_loan_term_isSet = !json[QString("loan_term")].isNull() && m_loan_term_isValid;
}

QString OAIListingFinance::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListingFinance::asJsonObject() const {
    QJsonObject obj;
    if (m_down_payment_isSet) {
        obj.insert(QString("down_payment"), ::OpenAPI::toJsonValue(m_down_payment));
    }
    if (m_down_payment_percentage_isSet) {
        obj.insert(QString("down_payment_percentage"), ::OpenAPI::toJsonValue(m_down_payment_percentage));
    }
    if (m_estimated_monthly_payment_isSet) {
        obj.insert(QString("estimated_monthly_payment"), ::OpenAPI::toJsonValue(m_estimated_monthly_payment));
    }
    if (m_loan_apr_isSet) {
        obj.insert(QString("loan_apr"), ::OpenAPI::toJsonValue(m_loan_apr));
    }
    if (m_loan_term_isSet) {
        obj.insert(QString("loan_term"), ::OpenAPI::toJsonValue(m_loan_term));
    }
    return obj;
}

double OAIListingFinance::getDownPayment() const {
    return m_down_payment;
}
void OAIListingFinance::setDownPayment(const double &down_payment) {
    m_down_payment = down_payment;
    m_down_payment_isSet = true;
}

bool OAIListingFinance::is_down_payment_Set() const{
    return m_down_payment_isSet;
}

bool OAIListingFinance::is_down_payment_Valid() const{
    return m_down_payment_isValid;
}

double OAIListingFinance::getDownPaymentPercentage() const {
    return m_down_payment_percentage;
}
void OAIListingFinance::setDownPaymentPercentage(const double &down_payment_percentage) {
    m_down_payment_percentage = down_payment_percentage;
    m_down_payment_percentage_isSet = true;
}

bool OAIListingFinance::is_down_payment_percentage_Set() const{
    return m_down_payment_percentage_isSet;
}

bool OAIListingFinance::is_down_payment_percentage_Valid() const{
    return m_down_payment_percentage_isValid;
}

double OAIListingFinance::getEstimatedMonthlyPayment() const {
    return m_estimated_monthly_payment;
}
void OAIListingFinance::setEstimatedMonthlyPayment(const double &estimated_monthly_payment) {
    m_estimated_monthly_payment = estimated_monthly_payment;
    m_estimated_monthly_payment_isSet = true;
}

bool OAIListingFinance::is_estimated_monthly_payment_Set() const{
    return m_estimated_monthly_payment_isSet;
}

bool OAIListingFinance::is_estimated_monthly_payment_Valid() const{
    return m_estimated_monthly_payment_isValid;
}

double OAIListingFinance::getLoanApr() const {
    return m_loan_apr;
}
void OAIListingFinance::setLoanApr(const double &loan_apr) {
    m_loan_apr = loan_apr;
    m_loan_apr_isSet = true;
}

bool OAIListingFinance::is_loan_apr_Set() const{
    return m_loan_apr_isSet;
}

bool OAIListingFinance::is_loan_apr_Valid() const{
    return m_loan_apr_isValid;
}

qint32 OAIListingFinance::getLoanTerm() const {
    return m_loan_term;
}
void OAIListingFinance::setLoanTerm(const qint32 &loan_term) {
    m_loan_term = loan_term;
    m_loan_term_isSet = true;
}

bool OAIListingFinance::is_loan_term_Set() const{
    return m_loan_term_isSet;
}

bool OAIListingFinance::is_loan_term_Valid() const{
    return m_loan_term_isValid;
}

bool OAIListingFinance::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_down_payment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_down_payment_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_estimated_monthly_payment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_apr_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_loan_term_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListingFinance::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
