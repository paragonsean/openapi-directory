/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDepreciationStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDepreciationStats::OAIDepreciationStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDepreciationStats::OAIDepreciationStats() {
    this->initializeModel();
}

OAIDepreciationStats::~OAIDepreciationStats() {}

void OAIDepreciationStats::initializeModel() {

    m_current_value_isSet = false;
    m_current_value_isValid = false;

    m_five_year_from_now_isSet = false;
    m_five_year_from_now_isValid = false;

    m_five_year_from_now_percent_isSet = false;
    m_five_year_from_now_percent_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_one_year_from_now_isSet = false;
    m_one_year_from_now_isValid = false;

    m_one_year_from_now_percent_isSet = false;
    m_one_year_from_now_percent_isValid = false;

    m_two_year_from_now_isSet = false;
    m_two_year_from_now_isValid = false;

    m_two_year_from_now_percent_isSet = false;
    m_two_year_from_now_percent_isValid = false;
}

void OAIDepreciationStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDepreciationStats::fromJsonObject(QJsonObject json) {

    m_current_value_isValid = ::OpenAPI::fromJsonValue(m_current_value, json[QString("current_value")]);
    m_current_value_isSet = !json[QString("current_value")].isNull() && m_current_value_isValid;

    m_five_year_from_now_isValid = ::OpenAPI::fromJsonValue(m_five_year_from_now, json[QString("five_year_from_now")]);
    m_five_year_from_now_isSet = !json[QString("five_year_from_now")].isNull() && m_five_year_from_now_isValid;

    m_five_year_from_now_percent_isValid = ::OpenAPI::fromJsonValue(m_five_year_from_now_percent, json[QString("five_year_from_now_percent")]);
    m_five_year_from_now_percent_isSet = !json[QString("five_year_from_now_percent")].isNull() && m_five_year_from_now_percent_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_one_year_from_now_isValid = ::OpenAPI::fromJsonValue(m_one_year_from_now, json[QString("one_year_from_now")]);
    m_one_year_from_now_isSet = !json[QString("one_year_from_now")].isNull() && m_one_year_from_now_isValid;

    m_one_year_from_now_percent_isValid = ::OpenAPI::fromJsonValue(m_one_year_from_now_percent, json[QString("one_year_from_now_percent")]);
    m_one_year_from_now_percent_isSet = !json[QString("one_year_from_now_percent")].isNull() && m_one_year_from_now_percent_isValid;

    m_two_year_from_now_isValid = ::OpenAPI::fromJsonValue(m_two_year_from_now, json[QString("two_year_from_now")]);
    m_two_year_from_now_isSet = !json[QString("two_year_from_now")].isNull() && m_two_year_from_now_isValid;

    m_two_year_from_now_percent_isValid = ::OpenAPI::fromJsonValue(m_two_year_from_now_percent, json[QString("two_year_from_now_percent")]);
    m_two_year_from_now_percent_isSet = !json[QString("two_year_from_now_percent")].isNull() && m_two_year_from_now_percent_isValid;
}

QString OAIDepreciationStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDepreciationStats::asJsonObject() const {
    QJsonObject obj;
    if (m_current_value_isSet) {
        obj.insert(QString("current_value"), ::OpenAPI::toJsonValue(m_current_value));
    }
    if (m_five_year_from_now_isSet) {
        obj.insert(QString("five_year_from_now"), ::OpenAPI::toJsonValue(m_five_year_from_now));
    }
    if (m_five_year_from_now_percent_isSet) {
        obj.insert(QString("five_year_from_now_percent"), ::OpenAPI::toJsonValue(m_five_year_from_now_percent));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_one_year_from_now_isSet) {
        obj.insert(QString("one_year_from_now"), ::OpenAPI::toJsonValue(m_one_year_from_now));
    }
    if (m_one_year_from_now_percent_isSet) {
        obj.insert(QString("one_year_from_now_percent"), ::OpenAPI::toJsonValue(m_one_year_from_now_percent));
    }
    if (m_two_year_from_now_isSet) {
        obj.insert(QString("two_year_from_now"), ::OpenAPI::toJsonValue(m_two_year_from_now));
    }
    if (m_two_year_from_now_percent_isSet) {
        obj.insert(QString("two_year_from_now_percent"), ::OpenAPI::toJsonValue(m_two_year_from_now_percent));
    }
    return obj;
}

double OAIDepreciationStats::getCurrentValue() const {
    return m_current_value;
}
void OAIDepreciationStats::setCurrentValue(const double &current_value) {
    m_current_value = current_value;
    m_current_value_isSet = true;
}

bool OAIDepreciationStats::is_current_value_Set() const{
    return m_current_value_isSet;
}

bool OAIDepreciationStats::is_current_value_Valid() const{
    return m_current_value_isValid;
}

double OAIDepreciationStats::getFiveYearFromNow() const {
    return m_five_year_from_now;
}
void OAIDepreciationStats::setFiveYearFromNow(const double &five_year_from_now) {
    m_five_year_from_now = five_year_from_now;
    m_five_year_from_now_isSet = true;
}

bool OAIDepreciationStats::is_five_year_from_now_Set() const{
    return m_five_year_from_now_isSet;
}

bool OAIDepreciationStats::is_five_year_from_now_Valid() const{
    return m_five_year_from_now_isValid;
}

double OAIDepreciationStats::getFiveYearFromNowPercent() const {
    return m_five_year_from_now_percent;
}
void OAIDepreciationStats::setFiveYearFromNowPercent(const double &five_year_from_now_percent) {
    m_five_year_from_now_percent = five_year_from_now_percent;
    m_five_year_from_now_percent_isSet = true;
}

bool OAIDepreciationStats::is_five_year_from_now_percent_Set() const{
    return m_five_year_from_now_percent_isSet;
}

bool OAIDepreciationStats::is_five_year_from_now_percent_Valid() const{
    return m_five_year_from_now_percent_isValid;
}

QString OAIDepreciationStats::getName() const {
    return m_name;
}
void OAIDepreciationStats::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDepreciationStats::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDepreciationStats::is_name_Valid() const{
    return m_name_isValid;
}

double OAIDepreciationStats::getOneYearFromNow() const {
    return m_one_year_from_now;
}
void OAIDepreciationStats::setOneYearFromNow(const double &one_year_from_now) {
    m_one_year_from_now = one_year_from_now;
    m_one_year_from_now_isSet = true;
}

bool OAIDepreciationStats::is_one_year_from_now_Set() const{
    return m_one_year_from_now_isSet;
}

bool OAIDepreciationStats::is_one_year_from_now_Valid() const{
    return m_one_year_from_now_isValid;
}

double OAIDepreciationStats::getOneYearFromNowPercent() const {
    return m_one_year_from_now_percent;
}
void OAIDepreciationStats::setOneYearFromNowPercent(const double &one_year_from_now_percent) {
    m_one_year_from_now_percent = one_year_from_now_percent;
    m_one_year_from_now_percent_isSet = true;
}

bool OAIDepreciationStats::is_one_year_from_now_percent_Set() const{
    return m_one_year_from_now_percent_isSet;
}

bool OAIDepreciationStats::is_one_year_from_now_percent_Valid() const{
    return m_one_year_from_now_percent_isValid;
}

double OAIDepreciationStats::getTwoYearFromNow() const {
    return m_two_year_from_now;
}
void OAIDepreciationStats::setTwoYearFromNow(const double &two_year_from_now) {
    m_two_year_from_now = two_year_from_now;
    m_two_year_from_now_isSet = true;
}

bool OAIDepreciationStats::is_two_year_from_now_Set() const{
    return m_two_year_from_now_isSet;
}

bool OAIDepreciationStats::is_two_year_from_now_Valid() const{
    return m_two_year_from_now_isValid;
}

double OAIDepreciationStats::getTwoYearFromNowPercent() const {
    return m_two_year_from_now_percent;
}
void OAIDepreciationStats::setTwoYearFromNowPercent(const double &two_year_from_now_percent) {
    m_two_year_from_now_percent = two_year_from_now_percent;
    m_two_year_from_now_percent_isSet = true;
}

bool OAIDepreciationStats::is_two_year_from_now_percent_Set() const{
    return m_two_year_from_now_percent_isSet;
}

bool OAIDepreciationStats::is_two_year_from_now_percent_Valid() const{
    return m_two_year_from_now_percent_isValid;
}

bool OAIDepreciationStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_current_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_five_year_from_now_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_five_year_from_now_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_one_year_from_now_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_one_year_from_now_percent_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_year_from_now_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_two_year_from_now_percent_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDepreciationStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
