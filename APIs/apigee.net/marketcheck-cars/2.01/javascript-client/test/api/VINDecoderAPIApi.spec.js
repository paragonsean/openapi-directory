/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MarketcheckApis);
  }
}(this, function(expect, MarketcheckApis) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MarketcheckApis.VINDecoderAPIApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('VINDecoderAPIApi', function() {
    describe('decode', function() {
      it('should call decode successfully', function(done) {
        //uncomment below and update the code to test decode
        //instance.decode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('decodeViaEPI', function() {
      it('should call decodeViaEPI successfully', function(done) {
        //uncomment below and update the code to test decodeViaEPI
        //instance.decodeViaEPI(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('decodeViaNeoVIN', function() {
      it('should call decodeViaNeoVIN successfully', function(done) {
        //uncomment below and update the code to test decodeViaNeoVIN
        //instance.decodeViaNeoVIN(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTaxonomyTerms', function() {
      it('should call getTaxonomyTerms successfully', function(done) {
        //uncomment below and update the code to test getTaxonomyTerms
        //instance.getTaxonomyTerms(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('specsCarAutoCompleteGet', function() {
      it('should call specsCarAutoCompleteGet successfully', function(done) {
        //uncomment below and update the code to test specsCarAutoCompleteGet
        //instance.specsCarAutoCompleteGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
