/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error from '../model/Error';
import HistoricalListing from '../model/HistoricalListing';

/**
* CarsHistoryAPI service.
* @module api/CarsHistoryAPIApi
* @version 2.01
*/
export default class CarsHistoryAPIApi {

    /**
    * Constructs a new CarsHistoryAPIApi. 
    * @alias module:api/CarsHistoryAPIApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getCarHistory operation.
     * @callback module:api/CarsHistoryAPIApi~getCarHistoryCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/HistoricalListing>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a cars online listing history
     * The history API returns online listing history for a car identified by its VIN. History listings are sorted in the descending order of the listing date / last seen date
     * @param {String} vin The VIN to identify the car. Must be a valid 17 char VIN
     * @param {Object} opts Optional parameters
     * @param {String} [apiKey] The API Authentication Key. Mandatory with all API calls.
     * @param {String} [fields] List of fields to fetch, in case the default fields list in the response is to be trimmed down
     * @param {Number} [page] Page number to fetch the results for the given criteria. Default is 1.
     * @param {Boolean} [includeDuplicates] Flag to indicate whether to include duplicate historical records as well in the response
     * @param {module:model/String} [sortOrder] Sort order - asc or desc. Default sort order is asc
     * @param {module:api/CarsHistoryAPIApi~getCarHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/HistoricalListing>}
     */
    getCarHistory(vin, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vin' is set
      if (vin === undefined || vin === null) {
        throw new Error("Missing the required parameter 'vin' when calling getCarHistory");
      }

      let pathParams = {
        'vin': vin
      };
      let queryParams = {
        'api_key': opts['apiKey'],
        'fields': opts['fields'],
        'page': opts['page'],
        'include_duplicates': opts['includeDuplicates'],
        'sort_order': opts['sortOrder']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['authorizeEndpoint'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [HistoricalListing];
      return this.apiClient.callApi(
        '/history/car/{vin}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the historyCarUkVrmGet operation.
     * @callback module:api/CarsHistoryAPIApi~historyCarUkVrmGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/HistoricalListing>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a cars online listing history
     * The history API returns online listing history for a car identified by its VRM. History listings are sorted in the descending order of the listing date / last seen date
     * @param {String} vrm The VRM to identify the car.
     * @param {Object} opts Optional parameters
     * @param {String} [apiKey] The API Authentication Key. Mandatory with all API calls.
     * @param {Number} [page] Page number to fetch the results for the given criteria. Default is 1.
     * @param {Boolean} [includeDuplicates] Flag to indicate whether to include duplicate historical records as well in the response
     * @param {module:model/String} [sortOrder] Sort order - asc or desc. Default sort order is asc
     * @param {module:api/CarsHistoryAPIApi~historyCarUkVrmGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/HistoricalListing>}
     */
    historyCarUkVrmGet(vrm, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'vrm' is set
      if (vrm === undefined || vrm === null) {
        throw new Error("Missing the required parameter 'vrm' when calling historyCarUkVrmGet");
      }

      let pathParams = {
        'vrm': vrm
      };
      let queryParams = {
        'api_key': opts['apiKey'],
        'page': opts['page'],
        'include_duplicates': opts['includeDuplicates'],
        'sort_order': opts['sortOrder']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['authorizeEndpoint'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [HistoricalListing];
      return this.apiClient.callApi(
        '/history/car/uk/{vrm}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
