/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListingDebugAttributes model module.
 * @module model/ListingDebugAttributes
 * @version 2.01
 */
class ListingDebugAttributes {
    /**
     * Constructs a new <code>ListingDebugAttributes</code>.
     * @alias module:model/ListingDebugAttributes
     */
    constructor() { 
        
        ListingDebugAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListingDebugAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListingDebugAttributes} obj Optional instance to populate.
     * @return {module:model/ListingDebugAttributes} The populated <code>ListingDebugAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListingDebugAttributes();

            if (data.hasOwnProperty('cycle_id')) {
                obj['cycle_id'] = ApiClient.convertToType(data['cycle_id'], 'Number');
            }
            if (data.hasOwnProperty('robot_id')) {
                obj['robot_id'] = ApiClient.convertToType(data['robot_id'], 'Number');
            }
            if (data.hasOwnProperty('scraped_at')) {
                obj['scraped_at'] = ApiClient.convertToType(data['scraped_at'], 'String');
            }
            if (data.hasOwnProperty('taxonomy_vin')) {
                obj['taxonomy_vin'] = ApiClient.convertToType(data['taxonomy_vin'], 'String');
            }
            if (data.hasOwnProperty('template_id')) {
                obj['template_id'] = ApiClient.convertToType(data['template_id'], 'Number');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListingDebugAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListingDebugAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['scraped_at'] && !(typeof data['scraped_at'] === 'string' || data['scraped_at'] instanceof String)) {
            throw new Error("Expected the field `scraped_at` to be a primitive type in the JSON string but got " + data['scraped_at']);
        }
        // ensure the json data is a string
        if (data['taxonomy_vin'] && !(typeof data['taxonomy_vin'] === 'string' || data['taxonomy_vin'] instanceof String)) {
            throw new Error("Expected the field `taxonomy_vin` to be a primitive type in the JSON string but got " + data['taxonomy_vin']);
        }

        return true;
    }


}



/**
 * Cycle id
 * @member {Number} cycle_id
 */
ListingDebugAttributes.prototype['cycle_id'] = undefined;

/**
 * Robot id
 * @member {Number} robot_id
 */
ListingDebugAttributes.prototype['robot_id'] = undefined;

/**
 * Scraped date and time
 * @member {String} scraped_at
 */
ListingDebugAttributes.prototype['scraped_at'] = undefined;

/**
 * Taxonomy vin
 * @member {String} taxonomy_vin
 */
ListingDebugAttributes.prototype['taxonomy_vin'] = undefined;

/**
 * Template id
 * @member {Number} template_id
 */
ListingDebugAttributes.prototype['template_id'] = undefined;

/**
 * User id
 * @member {Number} user_id
 */
ListingDebugAttributes.prototype['user_id'] = undefined;






export default ListingDebugAttributes;

