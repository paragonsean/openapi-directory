/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CarRankCriteria model module.
 * @module model/CarRankCriteria
 * @version 2.01
 */
class CarRankCriteria {
    /**
     * Constructs a new <code>CarRankCriteria</code>.
     * Ranking query request
     * @alias module:model/CarRankCriteria
     */
    constructor() { 
        
        CarRankCriteria.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['carfax_1_owner'] = 0.9;
        obj['carfax_clean_title'] = 0.9;
        obj['dom'] = 0.9;
        obj['dom_180'] = 0.9;
        obj['dom_active'] = 0.9;
        obj['is_certified'] = 1;
        obj['miles'] = 0.9;
        obj['price'] = 0.9;
    }

    /**
     * Constructs a <code>CarRankCriteria</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CarRankCriteria} obj Optional instance to populate.
     * @return {module:model/CarRankCriteria} The populated <code>CarRankCriteria</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CarRankCriteria();

            if (data.hasOwnProperty('carfax_1_owner')) {
                obj['carfax_1_owner'] = ApiClient.convertToType(data['carfax_1_owner'], 'Number');
            }
            if (data.hasOwnProperty('carfax_clean_title')) {
                obj['carfax_clean_title'] = ApiClient.convertToType(data['carfax_clean_title'], 'Number');
            }
            if (data.hasOwnProperty('dom')) {
                obj['dom'] = ApiClient.convertToType(data['dom'], 'Number');
            }
            if (data.hasOwnProperty('dom_180')) {
                obj['dom_180'] = ApiClient.convertToType(data['dom_180'], 'Number');
            }
            if (data.hasOwnProperty('dom_active')) {
                obj['dom_active'] = ApiClient.convertToType(data['dom_active'], 'Number');
            }
            if (data.hasOwnProperty('is_certified')) {
                obj['is_certified'] = ApiClient.convertToType(data['is_certified'], 'Number');
            }
            if (data.hasOwnProperty('miles')) {
                obj['miles'] = ApiClient.convertToType(data['miles'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CarRankCriteria</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CarRankCriteria</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Flag to indicate whether listing is carfax_1_owner.Weight for this is ranking process between 0-1.
 * @member {Number} carfax_1_owner
 * @default 0.9
 */
CarRankCriteria.prototype['carfax_1_owner'] = 0.9;

/**
 * Flag to indicate whether listing is carfax_clean_title.Weight for this is ranking process between 0-1
 * @member {Number} carfax_clean_title
 * @default 0.9
 */
CarRankCriteria.prototype['carfax_clean_title'] = 0.9;

/**
 * Days on Market value for the car based on current and historical listings found in the Marketcheck database for this car.Weight for this is ranking process between 0-1
 * @member {Number} dom
 * @default 0.9
 */
CarRankCriteria.prototype['dom'] = 0.9;

/**
 * Days on Market value for the car based on current and last 6 month listings found in the Marketcheck database for this car.Weight for this is ranking process between 0-1
 * @member {Number} dom_180
 * @default 0.9
 */
CarRankCriteria.prototype['dom_180'] = 0.9;

/**
 * Days on Market value for the car based on current and last 30 days listings found in the Marketcheck database for this car.Weight for this is ranking process between 0-1
 * @member {Number} dom_active
 * @default 0.9
 */
CarRankCriteria.prototype['dom_active'] = 0.9;

/**
 * Certified car.Weight for this is ranking process between 0-1
 * @member {Number} is_certified
 * @default 1
 */
CarRankCriteria.prototype['is_certified'] = 1;

/**
 * Odometer reading / reported miles usage for the car.Weight for this is ranking process between 0-1
 * @member {Number} miles
 * @default 0.9
 */
CarRankCriteria.prototype['miles'] = 0.9;

/**
 * Asking price for the vehicle. Weight for this is ranking process between 0-1.
 * @member {Number} price
 * @default 0.9
 */
CarRankCriteria.prototype['price'] = 0.9;






export default CarRankCriteria;

