/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ListingMedia model module.
 * @module model/ListingMedia
 * @version 2.01
 */
class ListingMedia {
    /**
     * Constructs a new <code>ListingMedia</code>.
     * @alias module:model/ListingMedia
     */
    constructor() { 
        
        ListingMedia.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ListingMedia</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListingMedia} obj Optional instance to populate.
     * @return {module:model/ListingMedia} The populated <code>ListingMedia</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListingMedia();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('photo_links')) {
                obj['photo_links'] = ApiClient.convertToType(data['photo_links'], ['String']);
            }
            if (data.hasOwnProperty('photo_url')) {
                obj['photo_url'] = ApiClient.convertToType(data['photo_url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListingMedia</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListingMedia</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['photo_links'])) {
            throw new Error("Expected the field `photo_links` to be an array in the JSON data but got " + data['photo_links']);
        }
        // ensure the json data is a string
        if (data['photo_url'] && !(typeof data['photo_url'] === 'string' || data['photo_url'] instanceof String)) {
            throw new Error("Expected the field `photo_url` to be a primitive type in the JSON string but got " + data['photo_url']);
        }

        return true;
    }


}



/**
 * Unique identifier representing a specific listing from the Marketcheck database
 * @member {String} id
 */
ListingMedia.prototype['id'] = undefined;

/**
 * A list of photo urls for the car
 * @member {Array.<String>} photo_links
 */
ListingMedia.prototype['photo_links'] = undefined;

/**
 * Single photo url of the car
 * @member {String} photo_url
 */
ListingMedia.prototype['photo_url'] = undefined;






export default ListingMedia;

