/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import HeavyEquipmentsBuild from './HeavyEquipmentsBuild';
import ListingNestMedia from './ListingNestMedia';
import NestDealer from './NestDealer';

/**
 * The HeavyEquipmentsBaseListing model module.
 * @module model/HeavyEquipmentsBaseListing
 * @version 2.01
 */
class HeavyEquipmentsBaseListing {
    /**
     * Constructs a new <code>HeavyEquipmentsBaseListing</code>.
     * Base heavy equipment listing
     * @alias module:model/HeavyEquipmentsBaseListing
     */
    constructor() { 
        
        HeavyEquipmentsBaseListing.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HeavyEquipmentsBaseListing</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HeavyEquipmentsBaseListing} obj Optional instance to populate.
     * @return {module:model/HeavyEquipmentsBaseListing} The populated <code>HeavyEquipmentsBaseListing</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HeavyEquipmentsBaseListing();

            if (data.hasOwnProperty('build')) {
                obj['build'] = HeavyEquipmentsBuild.constructFromObject(data['build']);
            }
            if (data.hasOwnProperty('dealer')) {
                obj['dealer'] = NestDealer.constructFromObject(data['dealer']);
            }
            if (data.hasOwnProperty('dist')) {
                obj['dist'] = ApiClient.convertToType(data['dist'], 'Number');
            }
            if (data.hasOwnProperty('dp_url')) {
                obj['dp_url'] = ApiClient.convertToType(data['dp_url'], 'String');
            }
            if (data.hasOwnProperty('exterior_color')) {
                obj['exterior_color'] = ApiClient.convertToType(data['exterior_color'], 'String');
            }
            if (data.hasOwnProperty('first_seen_at')) {
                obj['first_seen_at'] = ApiClient.convertToType(data['first_seen_at'], 'Number');
            }
            if (data.hasOwnProperty('first_seen_at_date')) {
                obj['first_seen_at_date'] = ApiClient.convertToType(data['first_seen_at_date'], 'String');
            }
            if (data.hasOwnProperty('heading')) {
                obj['heading'] = ApiClient.convertToType(data['heading'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('interior_color')) {
                obj['interior_color'] = ApiClient.convertToType(data['interior_color'], 'String');
            }
            if (data.hasOwnProperty('inventory_type')) {
                obj['inventory_type'] = ApiClient.convertToType(data['inventory_type'], 'String');
            }
            if (data.hasOwnProperty('last_seen_at')) {
                obj['last_seen_at'] = ApiClient.convertToType(data['last_seen_at'], 'Number');
            }
            if (data.hasOwnProperty('last_seen_at_date')) {
                obj['last_seen_at_date'] = ApiClient.convertToType(data['last_seen_at_date'], 'String');
            }
            if (data.hasOwnProperty('media')) {
                obj['media'] = ListingNestMedia.constructFromObject(data['media']);
            }
            if (data.hasOwnProperty('miles')) {
                obj['miles'] = ApiClient.convertToType(data['miles'], 'Number');
            }
            if (data.hasOwnProperty('msrp')) {
                obj['msrp'] = ApiClient.convertToType(data['msrp'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('scraped_at')) {
                obj['scraped_at'] = ApiClient.convertToType(data['scraped_at'], 'Number');
            }
            if (data.hasOwnProperty('scraped_at_date')) {
                obj['scraped_at_date'] = ApiClient.convertToType(data['scraped_at_date'], 'String');
            }
            if (data.hasOwnProperty('seller_type')) {
                obj['seller_type'] = ApiClient.convertToType(data['seller_type'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('stock_no')) {
                obj['stock_no'] = ApiClient.convertToType(data['stock_no'], 'String');
            }
            if (data.hasOwnProperty('vin')) {
                obj['vin'] = ApiClient.convertToType(data['vin'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HeavyEquipmentsBaseListing</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HeavyEquipmentsBaseListing</code>.
     */
    static validateJSON(data) {
        // validate the optional field `build`
        if (data['build']) { // data not null
          HeavyEquipmentsBuild.validateJSON(data['build']);
        }
        // validate the optional field `dealer`
        if (data['dealer']) { // data not null
          NestDealer.validateJSON(data['dealer']);
        }
        // ensure the json data is a string
        if (data['dp_url'] && !(typeof data['dp_url'] === 'string' || data['dp_url'] instanceof String)) {
            throw new Error("Expected the field `dp_url` to be a primitive type in the JSON string but got " + data['dp_url']);
        }
        // ensure the json data is a string
        if (data['exterior_color'] && !(typeof data['exterior_color'] === 'string' || data['exterior_color'] instanceof String)) {
            throw new Error("Expected the field `exterior_color` to be a primitive type in the JSON string but got " + data['exterior_color']);
        }
        // ensure the json data is a string
        if (data['first_seen_at_date'] && !(typeof data['first_seen_at_date'] === 'string' || data['first_seen_at_date'] instanceof String)) {
            throw new Error("Expected the field `first_seen_at_date` to be a primitive type in the JSON string but got " + data['first_seen_at_date']);
        }
        // ensure the json data is a string
        if (data['heading'] && !(typeof data['heading'] === 'string' || data['heading'] instanceof String)) {
            throw new Error("Expected the field `heading` to be a primitive type in the JSON string but got " + data['heading']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['interior_color'] && !(typeof data['interior_color'] === 'string' || data['interior_color'] instanceof String)) {
            throw new Error("Expected the field `interior_color` to be a primitive type in the JSON string but got " + data['interior_color']);
        }
        // ensure the json data is a string
        if (data['inventory_type'] && !(typeof data['inventory_type'] === 'string' || data['inventory_type'] instanceof String)) {
            throw new Error("Expected the field `inventory_type` to be a primitive type in the JSON string but got " + data['inventory_type']);
        }
        // ensure the json data is a string
        if (data['last_seen_at_date'] && !(typeof data['last_seen_at_date'] === 'string' || data['last_seen_at_date'] instanceof String)) {
            throw new Error("Expected the field `last_seen_at_date` to be a primitive type in the JSON string but got " + data['last_seen_at_date']);
        }
        // validate the optional field `media`
        if (data['media']) { // data not null
          ListingNestMedia.validateJSON(data['media']);
        }
        // ensure the json data is a string
        if (data['scraped_at_date'] && !(typeof data['scraped_at_date'] === 'string' || data['scraped_at_date'] instanceof String)) {
            throw new Error("Expected the field `scraped_at_date` to be a primitive type in the JSON string but got " + data['scraped_at_date']);
        }
        // ensure the json data is a string
        if (data['seller_type'] && !(typeof data['seller_type'] === 'string' || data['seller_type'] instanceof String)) {
            throw new Error("Expected the field `seller_type` to be a primitive type in the JSON string but got " + data['seller_type']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['stock_no'] && !(typeof data['stock_no'] === 'string' || data['stock_no'] instanceof String)) {
            throw new Error("Expected the field `stock_no` to be a primitive type in the JSON string but got " + data['stock_no']);
        }
        // ensure the json data is a string
        if (data['vin'] && !(typeof data['vin'] === 'string' || data['vin'] instanceof String)) {
            throw new Error("Expected the field `vin` to be a primitive type in the JSON string but got " + data['vin']);
        }

        return true;
    }


}



/**
 * @member {module:model/HeavyEquipmentsBuild} build
 */
HeavyEquipmentsBaseListing.prototype['build'] = undefined;

/**
 * @member {module:model/NestDealer} dealer
 */
HeavyEquipmentsBaseListing.prototype['dealer'] = undefined;

/**
 * Distance of the quipments's location from the specified user lcoation
 * @member {Number} dist
 */
HeavyEquipmentsBaseListing.prototype['dist'] = undefined;

/**
 * Details Page url of the specific heavy equipment
 * @member {String} dp_url
 */
HeavyEquipmentsBaseListing.prototype['dp_url'] = undefined;

/**
 * Exterior color of the heavy equipment
 * @member {String} exterior_color
 */
HeavyEquipmentsBaseListing.prototype['exterior_color'] = undefined;

/**
 * Listing first seen at first scraped timestamp
 * @member {Number} first_seen_at
 */
HeavyEquipmentsBaseListing.prototype['first_seen_at'] = undefined;

/**
 * Listing first seen at first scraped date
 * @member {String} first_seen_at_date
 */
HeavyEquipmentsBaseListing.prototype['first_seen_at_date'] = undefined;

/**
 * Listing title as displayed on the source website
 * @member {String} heading
 */
HeavyEquipmentsBaseListing.prototype['heading'] = undefined;

/**
 * Unique identifier representing a specific listing from the Marketcheck database
 * @member {String} id
 */
HeavyEquipmentsBaseListing.prototype['id'] = undefined;

/**
 * Interior color of the heavy equipment
 * @member {String} interior_color
 */
HeavyEquipmentsBaseListing.prototype['interior_color'] = undefined;

/**
 * Inventory type of heavy equipment
 * @member {String} inventory_type
 */
HeavyEquipmentsBaseListing.prototype['inventory_type'] = undefined;

/**
 * Listing last seen at (most recent) timestamp
 * @member {Number} last_seen_at
 */
HeavyEquipmentsBaseListing.prototype['last_seen_at'] = undefined;

/**
 * Listing last seen at (most recent) date
 * @member {String} last_seen_at_date
 */
HeavyEquipmentsBaseListing.prototype['last_seen_at_date'] = undefined;

/**
 * @member {module:model/ListingNestMedia} media
 */
HeavyEquipmentsBaseListing.prototype['media'] = undefined;

/**
 * Odometer reading / reported miles usage for the heavy equipment
 * @member {Number} miles
 */
HeavyEquipmentsBaseListing.prototype['miles'] = undefined;

/**
 * MSRP for the heavy equipment
 * @member {Number} msrp
 */
HeavyEquipmentsBaseListing.prototype['msrp'] = undefined;

/**
 * Asking price for the heavy equipment
 * @member {Number} price
 */
HeavyEquipmentsBaseListing.prototype['price'] = undefined;

/**
 * Listing last seen at date timestamp
 * @member {Number} scraped_at
 */
HeavyEquipmentsBaseListing.prototype['scraped_at'] = undefined;

/**
 * Listing last seen at date
 * @member {String} scraped_at_date
 */
HeavyEquipmentsBaseListing.prototype['scraped_at_date'] = undefined;

/**
 * Seller type for the heavy equipment
 * @member {String} seller_type
 */
HeavyEquipmentsBaseListing.prototype['seller_type'] = undefined;

/**
 * Source domain of the listing
 * @member {String} source
 */
HeavyEquipmentsBaseListing.prototype['source'] = undefined;

/**
 * Stock number of heavy equipment in dealers inventory
 * @member {String} stock_no
 */
HeavyEquipmentsBaseListing.prototype['stock_no'] = undefined;

/**
 * VIN for the heavy equipment
 * @member {String} vin
 */
HeavyEquipmentsBaseListing.prototype['vin'] = undefined;






export default HeavyEquipmentsBaseListing;

