/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DailyStatsNestedJson model module.
 * @module model/DailyStatsNestedJson
 * @version 2.01
 */
class DailyStatsNestedJson {
    /**
     * Constructs a new <code>DailyStatsNestedJson</code>.
     * All nested JSON of stats
     * @alias module:model/DailyStatsNestedJson
     */
    constructor() { 
        
        DailyStatsNestedJson.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DailyStatsNestedJson</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DailyStatsNestedJson} obj Optional instance to populate.
     * @return {module:model/DailyStatsNestedJson} The populated <code>DailyStatsNestedJson</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DailyStatsNestedJson();

            if (data.hasOwnProperty('interquartile_range')) {
                obj['interquartile_range'] = ApiClient.convertToType(data['interquartile_range'], 'Number');
            }
            if (data.hasOwnProperty('mean')) {
                obj['mean'] = ApiClient.convertToType(data['mean'], 'Number');
            }
            if (data.hasOwnProperty('median')) {
                obj['median'] = ApiClient.convertToType(data['median'], 'Number');
            }
            if (data.hasOwnProperty('population_standard_deviation')) {
                obj['population_standard_deviation'] = ApiClient.convertToType(data['population_standard_deviation'], 'Number');
            }
            if (data.hasOwnProperty('standard_deviation')) {
                obj['standard_deviation'] = ApiClient.convertToType(data['standard_deviation'], 'Number');
            }
            if (data.hasOwnProperty('trimmed_mean')) {
                obj['trimmed_mean'] = ApiClient.convertToType(data['trimmed_mean'], 'Number');
            }
            if (data.hasOwnProperty('variance')) {
                obj['variance'] = ApiClient.convertToType(data['variance'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DailyStatsNestedJson</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DailyStatsNestedJson</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Interquartile range
 * @member {Number} interquartile_range
 */
DailyStatsNestedJson.prototype['interquartile_range'] = undefined;

/**
 * Mean
 * @member {Number} mean
 */
DailyStatsNestedJson.prototype['mean'] = undefined;

/**
 * Median
 * @member {Number} median
 */
DailyStatsNestedJson.prototype['median'] = undefined;

/**
 * population standard deviation
 * @member {Number} population_standard_deviation
 */
DailyStatsNestedJson.prototype['population_standard_deviation'] = undefined;

/**
 * Standard Deviation
 * @member {Number} standard_deviation
 */
DailyStatsNestedJson.prototype['standard_deviation'] = undefined;

/**
 * Trimmed Mean
 * @member {Number} trimmed_mean
 */
DailyStatsNestedJson.prototype['trimmed_mean'] = undefined;

/**
 * variance
 * @member {Number} variance
 */
DailyStatsNestedJson.prototype['variance'] = undefined;






export default DailyStatsNestedJson;

