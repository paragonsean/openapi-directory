/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BasePopular from './BasePopular';

/**
 * The PopularCars model module.
 * @module model/PopularCars
 * @version 2.01
 */
class PopularCars {
    /**
     * Constructs a new <code>PopularCars</code>.
     * Top 50 popular cars
     * @alias module:model/PopularCars
     */
    constructor() { 
        
        PopularCars.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PopularCars</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PopularCars} obj Optional instance to populate.
     * @return {module:model/PopularCars} The populated <code>PopularCars</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PopularCars();

            if (data.hasOwnProperty('new_top50')) {
                obj['new_top50'] = ApiClient.convertToType(data['new_top50'], [BasePopular]);
            }
            if (data.hasOwnProperty('used_top50')) {
                obj['used_top50'] = ApiClient.convertToType(data['used_top50'], [BasePopular]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PopularCars</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PopularCars</code>.
     */
    static validateJSON(data) {
        if (data['new_top50']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['new_top50'])) {
                throw new Error("Expected the field `new_top50` to be an array in the JSON data but got " + data['new_top50']);
            }
            // validate the optional field `new_top50` (array)
            for (const item of data['new_top50']) {
                BasePopular.validateJSON(item);
            };
        }
        if (data['used_top50']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['used_top50'])) {
                throw new Error("Expected the field `used_top50` to be an array in the JSON data but got " + data['used_top50']);
            }
            // validate the optional field `used_top50` (array)
            for (const item of data['used_top50']) {
                BasePopular.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * Array of all new top 50 cars
 * @member {Array.<module:model/BasePopular>} new_top50
 */
PopularCars.prototype['new_top50'] = undefined;

/**
 * Array of all used top 50 cars
 * @member {Array.<module:model/BasePopular>} used_top50
 */
PopularCars.prototype['used_top50'] = undefined;






export default PopularCars;

