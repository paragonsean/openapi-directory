/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CarListingRank from './CarListingRank';

/**
 * The CarRankResponse model module.
 * @module model/CarRankResponse
 * @version 2.01
 */
class CarRankResponse {
    /**
     * Constructs a new <code>CarRankResponse</code>.
     * Ranking query response
     * @alias module:model/CarRankResponse
     */
    constructor() { 
        
        CarRankResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CarRankResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CarRankResponse} obj Optional instance to populate.
     * @return {module:model/CarRankResponse} The populated <code>CarRankResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CarRankResponse();

            if (data.hasOwnProperty('num_ranked')) {
                obj['num_ranked'] = ApiClient.convertToType(data['num_ranked'], 'Number');
            }
            if (data.hasOwnProperty('ranked_listings')) {
                obj['ranked_listings'] = ApiClient.convertToType(data['ranked_listings'], [CarListingRank]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CarRankResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CarRankResponse</code>.
     */
    static validateJSON(data) {
        if (data['ranked_listings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ranked_listings'])) {
                throw new Error("Expected the field `ranked_listings` to be an array in the JSON data but got " + data['ranked_listings']);
            }
            // validate the optional field `ranked_listings` (array)
            for (const item of data['ranked_listings']) {
                CarListingRank.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * The number of listings ranked
 * @member {Number} num_ranked
 */
CarRankResponse.prototype['num_ranked'] = undefined;

/**
 * @member {Array.<module:model/CarListingRank>} ranked_listings
 */
CarRankResponse.prototype['ranked_listings'] = undefined;






export default CarRankResponse;

