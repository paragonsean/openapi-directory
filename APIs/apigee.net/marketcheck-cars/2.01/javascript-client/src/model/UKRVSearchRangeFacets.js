/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RangeFacetItem from './RangeFacetItem';

/**
 * The UKRVSearchRangeFacets model module.
 * @module model/UKRVSearchRangeFacets
 * @version 2.01
 */
class UKRVSearchRangeFacets {
    /**
     * Constructs a new <code>UKRVSearchRangeFacets</code>.
     * @alias module:model/UKRVSearchRangeFacets
     */
    constructor() { 
        
        UKRVSearchRangeFacets.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UKRVSearchRangeFacets</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UKRVSearchRangeFacets} obj Optional instance to populate.
     * @return {module:model/UKRVSearchRangeFacets} The populated <code>UKRVSearchRangeFacets</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UKRVSearchRangeFacets();

            if (data.hasOwnProperty('exterior_length')) {
                obj['exterior_length'] = ApiClient.convertToType(data['exterior_length'], [RangeFacetItem]);
            }
            if (data.hasOwnProperty('interior_length')) {
                obj['interior_length'] = ApiClient.convertToType(data['interior_length'], [RangeFacetItem]);
            }
            if (data.hasOwnProperty('miles')) {
                obj['miles'] = ApiClient.convertToType(data['miles'], [RangeFacetItem]);
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], [RangeFacetItem]);
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], [RangeFacetItem]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UKRVSearchRangeFacets</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UKRVSearchRangeFacets</code>.
     */
    static validateJSON(data) {
        if (data['exterior_length']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['exterior_length'])) {
                throw new Error("Expected the field `exterior_length` to be an array in the JSON data but got " + data['exterior_length']);
            }
            // validate the optional field `exterior_length` (array)
            for (const item of data['exterior_length']) {
                RangeFacetItem.validateJSON(item);
            };
        }
        if (data['interior_length']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['interior_length'])) {
                throw new Error("Expected the field `interior_length` to be an array in the JSON data but got " + data['interior_length']);
            }
            // validate the optional field `interior_length` (array)
            for (const item of data['interior_length']) {
                RangeFacetItem.validateJSON(item);
            };
        }
        if (data['miles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['miles'])) {
                throw new Error("Expected the field `miles` to be an array in the JSON data but got " + data['miles']);
            }
            // validate the optional field `miles` (array)
            for (const item of data['miles']) {
                RangeFacetItem.validateJSON(item);
            };
        }
        if (data['price']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['price'])) {
                throw new Error("Expected the field `price` to be an array in the JSON data but got " + data['price']);
            }
            // validate the optional field `price` (array)
            for (const item of data['price']) {
                RangeFacetItem.validateJSON(item);
            };
        }
        if (data['width']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['width'])) {
                throw new Error("Expected the field `width` to be an array in the JSON data but got " + data['width']);
            }
            // validate the optional field `width` (array)
            for (const item of data['width']) {
                RangeFacetItem.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/RangeFacetItem>} exterior_length
 */
UKRVSearchRangeFacets.prototype['exterior_length'] = undefined;

/**
 * @member {Array.<module:model/RangeFacetItem>} interior_length
 */
UKRVSearchRangeFacets.prototype['interior_length'] = undefined;

/**
 * @member {Array.<module:model/RangeFacetItem>} miles
 */
UKRVSearchRangeFacets.prototype['miles'] = undefined;

/**
 * @member {Array.<module:model/RangeFacetItem>} price
 */
UKRVSearchRangeFacets.prototype['price'] = undefined;

/**
 * @member {Array.<module:model/RangeFacetItem>} width
 */
UKRVSearchRangeFacets.prototype['width'] = undefined;






export default UKRVSearchRangeFacets;

