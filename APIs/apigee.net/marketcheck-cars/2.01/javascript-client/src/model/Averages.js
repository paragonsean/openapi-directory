/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Averages model module.
 * @module model/Averages
 * @version 2.01
 */
class Averages {
    /**
     * Constructs a new <code>Averages</code>.
     * @alias module:model/Averages
     */
    constructor() { 
        
        Averages.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Averages</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Averages} obj Optional instance to populate.
     * @return {module:model/Averages} The populated <code>Averages</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Averages();

            if (data.hasOwnProperty('age')) {
                obj['age'] = ApiClient.convertToType(data['age'], 'Number');
            }
            if (data.hasOwnProperty('dom')) {
                obj['dom'] = ApiClient.convertToType(data['dom'], 'Number');
            }
            if (data.hasOwnProperty('miles')) {
                obj['miles'] = ApiClient.convertToType(data['miles'], 'Number');
            }
            if (data.hasOwnProperty('msrp')) {
                obj['msrp'] = ApiClient.convertToType(data['msrp'], 'Number');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('units')) {
                obj['units'] = ApiClient.convertToType(data['units'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Averages</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Averages</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * Average age of the car
 * @member {Number} age
 */
Averages.prototype['age'] = undefined;

/**
 * Average Days on Market value for the car based on all listings found in the Marketcheck database for this car
 * @member {Number} dom
 */
Averages.prototype['dom'] = undefined;

/**
 * Mean miles value for the car
 * @member {Number} miles
 */
Averages.prototype['miles'] = undefined;

/**
 * Mean msrp value for the car
 * @member {Number} msrp
 */
Averages.prototype['msrp'] = undefined;

/**
 * Mean price value for the car
 * @member {Number} price
 */
Averages.prototype['price'] = undefined;

/**
 * No of units for this car on the market
 * @member {Number} units
 */
Averages.prototype['units'] = undefined;






export default Averages;

