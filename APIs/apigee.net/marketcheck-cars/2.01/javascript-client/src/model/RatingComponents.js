/**
 * Marketcheck APIs
 * One API serving data spanned across multiple verticals
 *
 * The version of the OpenAPI document: 2.01
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RatingComponents model module.
 * @module model/RatingComponents
 * @version 2.01
 */
class RatingComponents {
    /**
     * Constructs a new <code>RatingComponents</code>.
     * @alias module:model/RatingComponents
     */
    constructor() { 
        
        RatingComponents.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RatingComponents</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RatingComponents} obj Optional instance to populate.
     * @return {module:model/RatingComponents} The populated <code>RatingComponents</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RatingComponents();

            if (data.hasOwnProperty('actual_rating')) {
                obj['actual_rating'] = ApiClient.convertToType(data['actual_rating'], 'Number');
            }
            if (data.hasOwnProperty('rating_condition')) {
                obj['rating_condition'] = ApiClient.convertToType(data['rating_condition'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RatingComponents</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RatingComponents</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['rating_condition'] && !(typeof data['rating_condition'] === 'string' || data['rating_condition'] instanceof String)) {
            throw new Error("Expected the field `rating_condition` to be a primitive type in the JSON string but got " + data['rating_condition']);
        }

        return true;
    }


}



/**
 * rating of car on that condition
 * @member {Number} actual_rating
 */
RatingComponents.prototype['actual_rating'] = undefined;

/**
 * Specifices rating condition parameter
 * @member {String} rating_condition
 */
RatingComponents.prototype['rating_condition'] = undefined;






export default RatingComponents;

