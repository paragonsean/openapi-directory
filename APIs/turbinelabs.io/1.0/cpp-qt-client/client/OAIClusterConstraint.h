/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClusterConstraint.h
 *
 * 
 */

#ifndef OAIClusterConstraint_H
#define OAIClusterConstraint_H

#include <QJsonObject>

#include "OAIMetadatum.h"
#include "OAIResponseData.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetadatum;
class OAIResponseData;

class OAIClusterConstraint : public OAIObject {
public:
    OAIClusterConstraint();
    OAIClusterConstraint(QString json);
    ~OAIClusterConstraint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClusterKey() const;
    void setClusterKey(const QString &cluster_key);
    bool is_cluster_key_Set() const;
    bool is_cluster_key_Valid() const;

    QString getConstraintKey() const;
    void setConstraintKey(const QString &constraint_key);
    bool is_constraint_key_Set() const;
    bool is_constraint_key_Valid() const;

    QList<OAIMetadatum> getMetadata() const;
    void setMetadata(const QList<OAIMetadatum> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QList<OAIMetadatum> getProperties() const;
    void setProperties(const QList<OAIMetadatum> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    OAIResponseData getResponseData() const;
    void setResponseData(const OAIResponseData &response_data);
    bool is_response_data_Set() const;
    bool is_response_data_Valid() const;

    qint32 getWeight() const;
    void setWeight(const qint32 &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cluster_key;
    bool m_cluster_key_isSet;
    bool m_cluster_key_isValid;

    QString m_constraint_key;
    bool m_constraint_key_isSet;
    bool m_constraint_key_isValid;

    QList<OAIMetadatum> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QList<OAIMetadatum> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    OAIResponseData m_response_data;
    bool m_response_data_isSet;
    bool m_response_data_isValid;

    qint32 m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClusterConstraint)

#endif // OAIClusterConstraint_H
