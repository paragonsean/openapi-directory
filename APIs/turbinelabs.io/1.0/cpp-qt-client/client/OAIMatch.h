/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatch.h
 *
 * Represents a mapping of request attributes to constraints on a cluster using different matching schemes.  Certain combinations of &#x60;kind&#x60; and &#x60;behavior&#x60; are not allowed   | kind | behavior |   | ---- | -------- |   | query | regex |   | query | range |   | cookie | range | 
 */

#ifndef OAIMatch_H
#define OAIMatch_H

#include <QJsonObject>

#include "OAIMetadatum.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMetadatum;

class OAIMatch : public OAIObject {
public:
    OAIMatch();
    OAIMatch(QString json);
    ~OAIMatch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBehavior() const;
    void setBehavior(const QString &behavior);
    bool is_behavior_Set() const;
    bool is_behavior_Valid() const;

    OAIMetadatum getFrom() const;
    void setFrom(const OAIMetadatum &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    QString getKind() const;
    void setKind(const QString &kind);
    bool is_kind_Set() const;
    bool is_kind_Valid() const;

    OAIMetadatum getTo() const;
    void setTo(const OAIMetadatum &to);
    bool is_to_Set() const;
    bool is_to_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_behavior;
    bool m_behavior_isSet;
    bool m_behavior_isValid;

    OAIMetadatum m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    QString m_kind;
    bool m_kind_isSet;
    bool m_kind_isValid;

    OAIMetadatum m_to;
    bool m_to_isSet;
    bool m_to_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatch)

#endif // OAIMatch_H
