/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISharedRules.h
 *
 * 
 */

#ifndef OAISharedRules_H
#define OAISharedRules_H

#include <QJsonObject>

#include "OAIAllConstraints.h"
#include "OAICohortSeed.h"
#include "OAIMetadatum.h"
#include "OAIResponseData.h"
#include "OAIRetryPolicy.h"
#include "OAIRule.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICohortSeed;
class OAIAllConstraints;
class OAIMetadatum;
class OAIResponseData;
class OAIRetryPolicy;
class OAIRule;

class OAISharedRules : public OAIObject {
public:
    OAISharedRules();
    OAISharedRules(QString json);
    ~OAISharedRules() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChecksum() const;
    void setChecksum(const QString &checksum);
    bool is_checksum_Set() const;
    bool is_checksum_Valid() const;

    OAICohortSeed getCohortSeed() const;
    void setCohortSeed(const OAICohortSeed &cohort_seed);
    bool is_cohort_seed_Set() const;
    bool is_cohort_seed_Valid() const;

    OAIAllConstraints getRDefault() const;
    void setRDefault(const OAIAllConstraints &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    QList<OAIMetadatum> getProperties() const;
    void setProperties(const QList<OAIMetadatum> &properties);
    bool is_properties_Set() const;
    bool is_properties_Valid() const;

    OAIResponseData getResponseData() const;
    void setResponseData(const OAIResponseData &response_data);
    bool is_response_data_Set() const;
    bool is_response_data_Valid() const;

    OAIRetryPolicy getRetryPolicy() const;
    void setRetryPolicy(const OAIRetryPolicy &retry_policy);
    bool is_retry_policy_Set() const;
    bool is_retry_policy_Valid() const;

    QList<OAIRule> getRules() const;
    void setRules(const QList<OAIRule> &rules);
    bool is_rules_Set() const;
    bool is_rules_Valid() const;

    QString getSharedRulesKey() const;
    void setSharedRulesKey(const QString &shared_rules_key);
    bool is_shared_rules_key_Set() const;
    bool is_shared_rules_key_Valid() const;

    QString getZoneKey() const;
    void setZoneKey(const QString &zone_key);
    bool is_zone_key_Set() const;
    bool is_zone_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_checksum;
    bool m_checksum_isSet;
    bool m_checksum_isValid;

    OAICohortSeed m_cohort_seed;
    bool m_cohort_seed_isSet;
    bool m_cohort_seed_isValid;

    OAIAllConstraints m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    QList<OAIMetadatum> m_properties;
    bool m_properties_isSet;
    bool m_properties_isValid;

    OAIResponseData m_response_data;
    bool m_response_data_isSet;
    bool m_response_data_isValid;

    OAIRetryPolicy m_retry_policy;
    bool m_retry_policy_isSet;
    bool m_retry_policy_isValid;

    QList<OAIRule> m_rules;
    bool m_rules_isSet;
    bool m_rules_isValid;

    QString m_shared_rules_key;
    bool m_shared_rules_key_isSet;
    bool m_shared_rules_key_isValid;

    QString m_zone_key;
    bool m_zone_key_isSet;
    bool m_zone_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISharedRules)

#endif // OAISharedRules_H
