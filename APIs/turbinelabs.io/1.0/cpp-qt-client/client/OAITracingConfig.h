/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITracingConfig.h
 *
 * Configures tracing operations to be performed on the given listener 
 */

#ifndef OAITracingConfig_H
#define OAITracingConfig_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITracingConfig : public OAIObject {
public:
    OAITracingConfig();
    OAITracingConfig(QString json);
    ~OAITracingConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isIngress() const;
    void setIngress(const bool &ingress);
    bool is_ingress_Set() const;
    bool is_ingress_Valid() const;

    QList<QString> getRequestHeadersForTags() const;
    void setRequestHeadersForTags(const QList<QString> &request_headers_for_tags);
    bool is_request_headers_for_tags_Set() const;
    bool is_request_headers_for_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_ingress;
    bool m_ingress_isSet;
    bool m_ingress_isValid;

    QList<QString> m_request_headers_for_tags;
    bool m_request_headers_for_tags_isSet;
    bool m_request_headers_for_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITracingConfig)

#endif // OAITracingConfig_H
