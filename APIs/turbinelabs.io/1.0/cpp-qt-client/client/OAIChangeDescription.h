/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChangeDescription.h
 *
 * 
 */

#ifndef OAIChangeDescription_H
#define OAIChangeDescription_H

#include <QJsonObject>

#include "OAIChangeEntry.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIChangeEntry;

class OAIChangeDescription : public OAIObject {
public:
    OAIChangeDescription();
    OAIChangeDescription(QString json);
    ~OAIChangeDescription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getActorKey() const;
    void setActorKey(const QString &actor_key);
    bool is_actor_key_Set() const;
    bool is_actor_key_Valid() const;

    double getAt() const;
    void setAt(const double &at);
    bool is_at_Set() const;
    bool is_at_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QList<OAIChangeEntry> getDiffs() const;
    void setDiffs(const QList<OAIChangeEntry> &diffs);
    bool is_diffs_Set() const;
    bool is_diffs_Valid() const;

    QString getTxn() const;
    void setTxn(const QString &txn);
    bool is_txn_Set() const;
    bool is_txn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_actor_key;
    bool m_actor_key_isSet;
    bool m_actor_key_isValid;

    double m_at;
    bool m_at_isSet;
    bool m_at_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QList<OAIChangeEntry> m_diffs;
    bool m_diffs_isSet;
    bool m_diffs_isValid;

    QString m_txn;
    bool m_txn_isSet;
    bool m_txn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChangeDescription)

#endif // OAIChangeDescription_H
