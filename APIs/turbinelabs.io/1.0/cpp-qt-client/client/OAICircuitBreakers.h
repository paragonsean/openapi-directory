/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICircuitBreakers.h
 *
 * Provides limits on various parameters to protect clusters against sudden surges in traffic. 
 */

#ifndef OAICircuitBreakers_H
#define OAICircuitBreakers_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICircuitBreakers : public OAIObject {
public:
    OAICircuitBreakers();
    OAICircuitBreakers(QString json);
    ~OAICircuitBreakers() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxConnections() const;
    void setMaxConnections(const qint32 &max_connections);
    bool is_max_connections_Set() const;
    bool is_max_connections_Valid() const;

    qint32 getMaxPendingRequests() const;
    void setMaxPendingRequests(const qint32 &max_pending_requests);
    bool is_max_pending_requests_Set() const;
    bool is_max_pending_requests_Valid() const;

    qint32 getMaxRequests() const;
    void setMaxRequests(const qint32 &max_requests);
    bool is_max_requests_Set() const;
    bool is_max_requests_Valid() const;

    qint32 getMaxRetries() const;
    void setMaxRetries(const qint32 &max_retries);
    bool is_max_retries_Set() const;
    bool is_max_retries_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_connections;
    bool m_max_connections_isSet;
    bool m_max_connections_isValid;

    qint32 m_max_pending_requests;
    bool m_max_pending_requests_isSet;
    bool m_max_pending_requests_isValid;

    qint32 m_max_requests;
    bool m_max_requests_isSet;
    bool m_max_requests_isValid;

    qint32 m_max_retries;
    bool m_max_retries_isSet;
    bool m_max_retries_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICircuitBreakers)

#endif // OAICircuitBreakers_H
