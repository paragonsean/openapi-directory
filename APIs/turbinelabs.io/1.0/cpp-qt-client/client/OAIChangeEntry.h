/**
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIChangeEntry.h
 *
 * 
 */

#ifndef OAIChangeEntry_H
#define OAIChangeEntry_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIChangeEntry : public OAIObject {
public:
    OAIChangeEntry();
    OAIChangeEntry(QString json);
    ~OAIChangeEntry() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getChangeType() const;
    void setChangeType(const QString &change_type);
    bool is_change_type_Set() const;
    bool is_change_type_Valid() const;

    QString getObjectKey() const;
    void setObjectKey(const QString &object_key);
    bool is_object_key_Set() const;
    bool is_object_key_Valid() const;

    QString getObjectType() const;
    void setObjectType(const QString &object_type);
    bool is_object_type_Set() const;
    bool is_object_type_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    QString getZoneKey() const;
    void setZoneKey(const QString &zone_key);
    bool is_zone_key_Set() const;
    bool is_zone_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_change_type;
    bool m_change_type_isSet;
    bool m_change_type_isValid;

    QString m_object_key;
    bool m_object_key_isSet;
    bool m_object_key_isValid;

    QString m_object_type;
    bool m_object_type_isSet;
    bool m_object_type_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;

    QString m_zone_key;
    bool m_zone_key_isSet;
    bool m_zone_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIChangeEntry)

#endif // OAIChangeEntry_H
