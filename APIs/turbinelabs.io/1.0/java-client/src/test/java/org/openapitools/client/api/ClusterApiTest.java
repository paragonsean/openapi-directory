/*
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.Cluster;
import org.openapitools.client.model.ClusterCreate;
import org.openapitools.client.model.ClusterResult;
import org.openapitools.client.model.Error;
import org.openapitools.client.model.Instance;
import org.openapitools.client.model.InstanceResult;
import org.openapitools.client.model.MultiClusterResult;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ClusterApi
 */
@Disabled
public class ClusterApiTest {

    private final ClusterApi api = new ClusterApi();

    /**
     * delete cluster
     *
     * Delete an existing cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clusterClusterKeyDeleteTest() throws ApiException {
        String clusterKey = null;
        String checksum = null;
        Object response = api.clusterClusterKeyDelete(clusterKey, checksum);
        // TODO: test validations
    }

    /**
     * get cluster
     *
     * Get details for an existing cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clusterClusterKeyGetTest() throws ApiException {
        String clusterKey = null;
        ClusterResult response = api.clusterClusterKeyGet(clusterKey);
        // TODO: test validations
    }

    /**
     * remove instance
     *
     * Remove an instance from a cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clusterClusterKeyInstancesInstanceIdentifierDeleteTest() throws ApiException {
        String checksum = null;
        String clusterKey = null;
        String instanceIdentifier = null;
        Object response = api.clusterClusterKeyInstancesInstanceIdentifierDelete(checksum, clusterKey, instanceIdentifier);
        // TODO: test validations
    }

    /**
     * add instance
     *
     * Add a new instance to a cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clusterClusterKeyInstancesPostTest() throws ApiException {
        String clusterKey = null;
        Instance instance = null;
        InstanceResult response = api.clusterClusterKeyInstancesPost(clusterKey, instance);
        // TODO: test validations
    }

    /**
     * modify cluster
     *
     * Modify an existing cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clusterClusterKeyPutTest() throws ApiException {
        String clusterKey = null;
        Cluster cluster = null;
        ClusterResult response = api.clusterClusterKeyPut(clusterKey, cluster);
        // TODO: test validations
    }

    /**
     * get clusters
     *
     * Get a list of clusters
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clusterGetTest() throws ApiException {
        String filters = null;
        MultiClusterResult response = api.clusterGet(filters);
        // TODO: test validations
    }

    /**
     * create cluster
     *
     * Create a new cluster
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void clusterPostTest() throws ApiException {
        ClusterCreate cluster = null;
        ClusterResult response = api.clusterPost(cluster);
        // TODO: test validations
    }

}
