/*
 * Turbine Labs API
 * The Turbine Labs API provides CRUD operations for core object types, and is mostly RESTy. The easiest way to interact with the API is with [tbnctl](https://docs.turbinelabs.io/advanced/tbnctl.html). If you want to make direct HTTP calls, however, you can obtain an access token using tbnctl, and then pass it in the Authorization header, prefixed by `Token `: ```console curl -H \"Authorization: Token <access token>\" https://api.turbinelabs.io/v1.0/cluster ``` 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for OutlierDetection
 */
public class OutlierDetectionTest {
    private final OutlierDetection model = new OutlierDetection();

    /**
     * Model tests for OutlierDetection
     */
    @Test
    public void testOutlierDetection() {
        // TODO: test OutlierDetection
    }

    /**
     * Test the property 'baseEjectionTimeMsec'
     */
    @Test
    public void baseEjectionTimeMsecTest() {
        // TODO: test baseEjectionTimeMsec
    }

    /**
     * Test the property 'consecutive5xx'
     */
    @Test
    public void consecutive5xxTest() {
        // TODO: test consecutive5xx
    }

    /**
     * Test the property 'consecutiveGatewayFailure'
     */
    @Test
    public void consecutiveGatewayFailureTest() {
        // TODO: test consecutiveGatewayFailure
    }

    /**
     * Test the property 'enforcingConsecutive5xx'
     */
    @Test
    public void enforcingConsecutive5xxTest() {
        // TODO: test enforcingConsecutive5xx
    }

    /**
     * Test the property 'enforcingConsecutiveGatewayFailure'
     */
    @Test
    public void enforcingConsecutiveGatewayFailureTest() {
        // TODO: test enforcingConsecutiveGatewayFailure
    }

    /**
     * Test the property 'enforcingSuccessRate'
     */
    @Test
    public void enforcingSuccessRateTest() {
        // TODO: test enforcingSuccessRate
    }

    /**
     * Test the property 'intervalMsec'
     */
    @Test
    public void intervalMsecTest() {
        // TODO: test intervalMsec
    }

    /**
     * Test the property 'maxEjectionPercent'
     */
    @Test
    public void maxEjectionPercentTest() {
        // TODO: test maxEjectionPercent
    }

    /**
     * Test the property 'successRateMinimumHosts'
     */
    @Test
    public void successRateMinimumHostsTest() {
        // TODO: test successRateMinimumHosts
    }

    /**
     * Test the property 'successRateRequestVolume'
     */
    @Test
    public void successRateRequestVolumeTest() {
        // TODO: test successRateRequestVolume
    }

    /**
     * Test the property 'successRateStdevFactor'
     */
    @Test
    public void successRateStdevFactorTest() {
        // TODO: test successRateStdevFactor
    }

}
