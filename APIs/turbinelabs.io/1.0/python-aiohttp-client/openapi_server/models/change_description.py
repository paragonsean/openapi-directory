# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.change_entry import ChangeEntry
from openapi_server import util


class ChangeDescription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, actor_key: str=None, at: float=None, comment: str=None, diffs: List[ChangeEntry]=None, txn: str=None):
        """ChangeDescription - a model defined in OpenAPI

        :param actor_key: The actor_key of this ChangeDescription.
        :param at: The at of this ChangeDescription.
        :param comment: The comment of this ChangeDescription.
        :param diffs: The diffs of this ChangeDescription.
        :param txn: The txn of this ChangeDescription.
        """
        self.openapi_types = {
            'actor_key': str,
            'at': float,
            'comment': str,
            'diffs': List[ChangeEntry],
            'txn': str
        }

        self.attribute_map = {
            'actor_key': 'actor_key',
            'at': 'at',
            'comment': 'comment',
            'diffs': 'diffs',
            'txn': 'txn'
        }

        self._actor_key = actor_key
        self._at = at
        self._comment = comment
        self._diffs = diffs
        self._txn = txn

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeDescription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangeDescription of this ChangeDescription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def actor_key(self):
        """Gets the actor_key of this ChangeDescription.

        The user who made the change.

        :return: The actor_key of this ChangeDescription.
        :rtype: str
        """
        return self._actor_key

    @actor_key.setter
    def actor_key(self, actor_key):
        """Sets the actor_key of this ChangeDescription.

        The user who made the change.

        :param actor_key: The actor_key of this ChangeDescription.
        :type actor_key: str
        """

        self._actor_key = actor_key

    @property
    def at(self):
        """Gets the at of this ChangeDescription.

        When the change took place in milliseconds since the Unix epoch.

        :return: The at of this ChangeDescription.
        :rtype: float
        """
        return self._at

    @at.setter
    def at(self, at):
        """Sets the at of this ChangeDescription.

        When the change took place in milliseconds since the Unix epoch.

        :param at: The at of this ChangeDescription.
        :type at: float
        """

        self._at = at

    @property
    def comment(self):
        """Gets the comment of this ChangeDescription.

        A description of the change.

        :return: The comment of this ChangeDescription.
        :rtype: str
        """
        return self._comment

    @comment.setter
    def comment(self, comment):
        """Sets the comment of this ChangeDescription.

        A description of the change.

        :param comment: The comment of this ChangeDescription.
        :type comment: str
        """

        self._comment = comment

    @property
    def diffs(self):
        """Gets the diffs of this ChangeDescription.

        A collection of attribute updates that compose this change.

        :return: The diffs of this ChangeDescription.
        :rtype: List[ChangeEntry]
        """
        return self._diffs

    @diffs.setter
    def diffs(self, diffs):
        """Sets the diffs of this ChangeDescription.

        A collection of attribute updates that compose this change.

        :param diffs: The diffs of this ChangeDescription.
        :type diffs: List[ChangeEntry]
        """

        self._diffs = diffs

    @property
    def txn(self):
        """Gets the txn of this ChangeDescription.

        A unique identifier for all this transaction. It is shared by all attribute updates within a change. 

        :return: The txn of this ChangeDescription.
        :rtype: str
        """
        return self._txn

    @txn.setter
    def txn(self, txn):
        """Sets the txn of this ChangeDescription.

        A unique identifier for all this transaction. It is shared by all attribute updates within a change. 

        :param txn: The txn of this ChangeDescription.
        :type txn: str
        """

        self._txn = txn
