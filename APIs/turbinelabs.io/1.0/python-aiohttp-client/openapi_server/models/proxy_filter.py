# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProxyFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_keys: List[str]=None, name: str=None, proxy_key: str=None, zone_key: str=None):
        """ProxyFilter - a model defined in OpenAPI

        :param domain_keys: The domain_keys of this ProxyFilter.
        :param name: The name of this ProxyFilter.
        :param proxy_key: The proxy_key of this ProxyFilter.
        :param zone_key: The zone_key of this ProxyFilter.
        """
        self.openapi_types = {
            'domain_keys': List[str],
            'name': str,
            'proxy_key': str,
            'zone_key': str
        }

        self.attribute_map = {
            'domain_keys': 'domain_keys',
            'name': 'name',
            'proxy_key': 'proxy_key',
            'zone_key': 'zone_key'
        }

        self._domain_keys = domain_keys
        self._name = name
        self._proxy_key = proxy_key
        self._zone_key = zone_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProxyFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProxyFilter of this ProxyFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_keys(self):
        """Gets the domain_keys of this ProxyFilter.

        matches Proxies with a superset of the specified domain_keys. A slice with a single value of \"-\" will produce Proxies with no linked Domains. 

        :return: The domain_keys of this ProxyFilter.
        :rtype: List[str]
        """
        return self._domain_keys

    @domain_keys.setter
    def domain_keys(self, domain_keys):
        """Sets the domain_keys of this ProxyFilter.

        matches Proxies with a superset of the specified domain_keys. A slice with a single value of \"-\" will produce Proxies with no linked Domains. 

        :param domain_keys: The domain_keys of this ProxyFilter.
        :type domain_keys: List[str]
        """

        self._domain_keys = domain_keys

    @property
    def name(self):
        """Gets the name of this ProxyFilter.


        :return: The name of this ProxyFilter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProxyFilter.


        :param name: The name of this ProxyFilter.
        :type name: str
        """

        self._name = name

    @property
    def proxy_key(self):
        """Gets the proxy_key of this ProxyFilter.


        :return: The proxy_key of this ProxyFilter.
        :rtype: str
        """
        return self._proxy_key

    @proxy_key.setter
    def proxy_key(self, proxy_key):
        """Sets the proxy_key of this ProxyFilter.


        :param proxy_key: The proxy_key of this ProxyFilter.
        :type proxy_key: str
        """

        self._proxy_key = proxy_key

    @property
    def zone_key(self):
        """Gets the zone_key of this ProxyFilter.


        :return: The zone_key of this ProxyFilter.
        :rtype: str
        """
        return self._zone_key

    @zone_key.setter
    def zone_key(self, zone_key):
        """Sets the zone_key of this ProxyFilter.


        :param zone_key: The zone_key of this ProxyFilter.
        :type zone_key: str
        """

        self._zone_key = zone_key
