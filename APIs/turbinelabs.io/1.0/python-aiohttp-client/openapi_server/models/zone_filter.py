# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ZoneFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, zone_key: str=None):
        """ZoneFilter - a model defined in OpenAPI

        :param name: The name of this ZoneFilter.
        :param zone_key: The zone_key of this ZoneFilter.
        """
        self.openapi_types = {
            'name': str,
            'zone_key': str
        }

        self.attribute_map = {
            'name': 'name',
            'zone_key': 'zone_key'
        }

        self._name = name
        self._zone_key = zone_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ZoneFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ZoneFilter of this ZoneFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ZoneFilter.


        :return: The name of this ZoneFilter.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ZoneFilter.


        :param name: The name of this ZoneFilter.
        :type name: str
        """

        self._name = name

    @property
    def zone_key(self):
        """Gets the zone_key of this ZoneFilter.


        :return: The zone_key of this ZoneFilter.
        :rtype: str
        """
        return self._zone_key

    @zone_key.setter
    def zone_key(self, zone_key):
        """Sets the zone_key of this ZoneFilter.


        :param zone_key: The zone_key of this ZoneFilter.
        :type zone_key: str
        """

        self._zone_key = zone_key
