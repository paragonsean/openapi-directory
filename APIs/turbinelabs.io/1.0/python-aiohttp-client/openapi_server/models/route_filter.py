# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RouteFilter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, domain_key: str=None, path: str=None, path_prefix: str=None, route_key: str=None, shared_rules_key: str=None, zone_key: str=None):
        """RouteFilter - a model defined in OpenAPI

        :param domain_key: The domain_key of this RouteFilter.
        :param path: The path of this RouteFilter.
        :param path_prefix: The path_prefix of this RouteFilter.
        :param route_key: The route_key of this RouteFilter.
        :param shared_rules_key: The shared_rules_key of this RouteFilter.
        :param zone_key: The zone_key of this RouteFilter.
        """
        self.openapi_types = {
            'domain_key': str,
            'path': str,
            'path_prefix': str,
            'route_key': str,
            'shared_rules_key': str,
            'zone_key': str
        }

        self.attribute_map = {
            'domain_key': 'domain_key',
            'path': 'path',
            'path_prefix': 'path_prefix',
            'route_key': 'route_key',
            'shared_rules_key': 'shared_rules_key',
            'zone_key': 'zone_key'
        }

        self._domain_key = domain_key
        self._path = path
        self._path_prefix = path_prefix
        self._route_key = route_key
        self._shared_rules_key = shared_rules_key
        self._zone_key = zone_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RouteFilter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RouteFilter of this RouteFilter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def domain_key(self):
        """Gets the domain_key of this RouteFilter.


        :return: The domain_key of this RouteFilter.
        :rtype: str
        """
        return self._domain_key

    @domain_key.setter
    def domain_key(self, domain_key):
        """Sets the domain_key of this RouteFilter.


        :param domain_key: The domain_key of this RouteFilter.
        :type domain_key: str
        """

        self._domain_key = domain_key

    @property
    def path(self):
        """Gets the path of this RouteFilter.


        :return: The path of this RouteFilter.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this RouteFilter.


        :param path: The path of this RouteFilter.
        :type path: str
        """

        self._path = path

    @property
    def path_prefix(self):
        """Gets the path_prefix of this RouteFilter.


        :return: The path_prefix of this RouteFilter.
        :rtype: str
        """
        return self._path_prefix

    @path_prefix.setter
    def path_prefix(self, path_prefix):
        """Sets the path_prefix of this RouteFilter.


        :param path_prefix: The path_prefix of this RouteFilter.
        :type path_prefix: str
        """

        self._path_prefix = path_prefix

    @property
    def route_key(self):
        """Gets the route_key of this RouteFilter.


        :return: The route_key of this RouteFilter.
        :rtype: str
        """
        return self._route_key

    @route_key.setter
    def route_key(self, route_key):
        """Sets the route_key of this RouteFilter.


        :param route_key: The route_key of this RouteFilter.
        :type route_key: str
        """

        self._route_key = route_key

    @property
    def shared_rules_key(self):
        """Gets the shared_rules_key of this RouteFilter.


        :return: The shared_rules_key of this RouteFilter.
        :rtype: str
        """
        return self._shared_rules_key

    @shared_rules_key.setter
    def shared_rules_key(self, shared_rules_key):
        """Sets the shared_rules_key of this RouteFilter.


        :param shared_rules_key: The shared_rules_key of this RouteFilter.
        :type shared_rules_key: str
        """

        self._shared_rules_key = shared_rules_key

    @property
    def zone_key(self):
        """Gets the zone_key of this RouteFilter.


        :return: The zone_key of this RouteFilter.
        :rtype: str
        """
        return self._zone_key

    @zone_key.setter
    def zone_key(self, zone_key):
        """Sets the zone_key of this RouteFilter.


        :param zone_key: The zone_key of this RouteFilter.
        :type zone_key: str
        """

        self._zone_key = zone_key
